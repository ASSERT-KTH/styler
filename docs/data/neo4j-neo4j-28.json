{
    "project_name": "neo4j-neo4j",
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "362",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/28/RelationshipLockHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/28/RelationshipLockHelper.java\nindex 69f74cf45c2..30d5ae86b67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/28/RelationshipLockHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/28/RelationshipLockHelper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.eclipse.collections.api.list.primitive.LongList;\n@@ -57,61 +58,62 @@ final class RelationshipLockHelper\n     /**\n      * Lock all the {@code idsToLock} exclusively, including neighbours, in order.\n      *\n-     * @param idsToLock ids to lock in batch\n+     * @param idsToLock            ids to lock in batch\n      * @param optionalFirstInChain id of the relationship first in chain, we need to lock it in order to update degree\n      *                             stored there. Will be {@link Record#NULL_REFERENCE} for external degrees.\n      */\n-    static void lockRelationshipsInOrder( RelationshipModifications.RelationshipBatch idsToLock, long optionalFirstInChain,\n-            RecordAccess<RelationshipRecord,Void> relRecords, ResourceLocker locks, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    static void lockRelationshipsInOrder(RelationshipModifications.RelationshipBatch idsToLock, long optionalFirstInChain,\n+                                         RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks, PageCursorTracer cursorTracer,\n+                                         MemoryTracker memoryTracker)\n     {\n         int size = idsToLock.size();\n-        if ( size == 1 )\n+        if (size == 1)\n         {\n-            lockSingleRelationship( idsToLock.first(), optionalFirstInChain, relRecords, locks, cursorTracer );\n-        }\n-        else if ( size > 1 )\n+            lockSingleRelationship(idsToLock.first(), optionalFirstInChain, relRecords, locks, cursorTracer);\n+        } else if (size > 1)\n         {\n-            lockMultipleRelationships( idsToLock, optionalFirstInChain, relRecords, locks, cursorTracer, memoryTracker );\n+            lockMultipleRelationships(idsToLock, optionalFirstInChain, relRecords, locks, cursorTracer, memoryTracker);\n         }\n     }\n \n-    static RecordAccess.RecordProxy<RelationshipRecord,Void> findAndLockEntrypoint( long firstInChain, long nodeId,\n-            RecordAccess<RelationshipRecord,Void> relRecords, ResourceLocker locks, LockTracer lockTracer, PageCursorTracer cursorTracer )\n+    static RecordAccess.RecordProxy<RelationshipRecord, Void> findAndLockEntrypoint(long firstInChain, long nodeId,\n+                                                                                    RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks,\n+                                                                                    LockTracer lockTracer, PageCursorTracer cursorTracer)\n     {\n         long nextRel = firstInChain;\n-        RecordAccess.RecordProxy<RelationshipRecord,Void> rBefore = null;\n+        RecordAccess.RecordProxy<RelationshipRecord, Void> rBefore = null;\n \n         // Start walking the relationship chain and see where we can insert it\n-        if ( !isNull( nextRel ) )\n+        if (!isNull(nextRel))\n         {\n-            while ( !isNull( nextRel ) )\n+            while (!isNull(nextRel))\n             {\n-                boolean r1Locked = locks.tryExclusiveLock( RELATIONSHIP, nextRel );\n-                RecordAccess.RecordProxy<RelationshipRecord,Void> r1 = relRecords.getOrLoad( nextRel, null, ALWAYS, cursorTracer );\n+                boolean r1Locked = locks.tryExclusiveLock(RELATIONSHIP, nextRel);\n+                RecordAccess.RecordProxy<RelationshipRecord, Void> r1 = relRecords.getOrLoad(nextRel, null, ALWAYS, cursorTracer);\n                 RelationshipRecord r1Record = r1.forReadingLinkage();\n-                if ( !r1Locked || !r1Record.inUse() )\n+                if (!r1Locked || !r1Record.inUse())\n                 {\n-                    nextRel = r1Record.getNextRel( nodeId );\n-                    if ( r1Locked )\n+                    nextRel = r1Record.getNextRel(nodeId);\n+                    if (r1Locked)\n                     {\n-                        locks.releaseExclusive( RELATIONSHIP, r1.getKey() );\n+                        locks.releaseExclusive(RELATIONSHIP, r1.getKey());\n                     }\n                     continue;\n                 }\n \n-                long r2Id = r1Record.getNextRel( nodeId );\n-                if ( !isNull( r2Id ) )\n+                long r2Id = r1Record.getNextRel(nodeId);\n+                if (!isNull(r2Id))\n                 {\n-                    boolean r2Locked = locks.tryExclusiveLock( RELATIONSHIP, r2Id );\n-                    RecordAccess.RecordProxy<RelationshipRecord,Void> r2 = relRecords.getOrLoad( r2Id, null, ALWAYS, cursorTracer );\n+                    boolean r2Locked = locks.tryExclusiveLock(RELATIONSHIP, r2Id);\n+                    RecordAccess.RecordProxy<RelationshipRecord, Void> r2 = relRecords.getOrLoad(r2Id, null, ALWAYS, cursorTracer);\n                     RelationshipRecord r2Record = r2.forReadingLinkage();\n-                    if ( !r2Locked || !r2Record.inUse() )\n+                    if (!r2Locked || !r2Record.inUse())\n                     {\n-                        nextRel = r2Record.getNextRel( nodeId );\n-                        locks.releaseExclusive( RELATIONSHIP, r1.getKey() );\n-                        if ( r2Locked )\n+                        nextRel = r2Record.getNextRel(nodeId);\n+                        locks.releaseExclusive(RELATIONSHIP, r1.getKey());\n+                        if (r2Locked)\n                         {\n-                            locks.releaseExclusive( RELATIONSHIP, r2.getKey() );\n+                            locks.releaseExclusive(RELATIONSHIP, r2.getKey());\n                         }\n                         continue;\n                     }\n@@ -122,15 +124,15 @@ final class RelationshipLockHelper\n                 break;\n             }\n \n-            if ( rBefore == null )\n+            if (rBefore == null)\n             {\n                 // Group is minimum read locked, so no need to re-read\n-                locks.acquireExclusive( lockTracer, RELATIONSHIP, firstInChain );\n-                RecordAccess.RecordProxy<RelationshipRecord,Void> firstProxy = relRecords.getOrLoad( firstInChain, null, ALWAYS, cursorTracer );\n-                long secondRel = firstProxy.forReadingLinkage().getNextRel( nodeId );\n-                if ( !isNull( secondRel ) )\n+                locks.acquireExclusive(lockTracer, RELATIONSHIP, firstInChain);\n+                RecordAccess.RecordProxy<RelationshipRecord, Void> firstProxy = relRecords.getOrLoad(firstInChain, null, ALWAYS, cursorTracer);\n+                long secondRel = firstProxy.forReadingLinkage().getNextRel(nodeId);\n+                if (!isNull(secondRel))\n                 {\n-                    locks.acquireExclusive( lockTracer, RELATIONSHIP, secondRel );\n+                    locks.acquireExclusive(lockTracer, RELATIONSHIP, secondRel);\n                 }\n                 rBefore = firstProxy;\n             }\n@@ -138,8 +140,9 @@ final class RelationshipLockHelper\n         return rBefore;\n     }\n \n-    private static void lockMultipleRelationships( RelationshipModifications.RelationshipBatch ids, long optionalFirstInChain,\n-            RecordAccess<RelationshipRecord,Void> relRecords, ResourceLocker locks, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    private static void lockMultipleRelationships(RelationshipModifications.RelationshipBatch ids, long optionalFirstInChain,\n+                                                  RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks, PageCursorTracer cursorTracer,\n+                                                  MemoryTracker memoryTracker)\n     {\n         /*\n          * The idea here is to take all locks in sorted order to avoid deadlocks\n@@ -150,89 +153,89 @@ final class RelationshipLockHelper\n          */\n \n         int upperLimitOfLocks = ids.size() * 5 /* self and 4 neighbours */ + 1 /*first in chain*/;\n-        try ( MemoryTracker scopedMemoryTracker = memoryTracker.getScopedMemoryTracker() )\n+        try (MemoryTracker scopedMemoryTracker = memoryTracker.getScopedMemoryTracker())\n         {\n-            HeapTrackingLongObjectHashMap<RelationshipRecord> optimistic = HeapTrackingCollections.newLongObjectMap( scopedMemoryTracker );\n-            scopedMemoryTracker.allocateHeap( sizeOfLongArray( upperLimitOfLocks ) );\n+            HeapTrackingLongObjectHashMap<RelationshipRecord> optimistic = HeapTrackingCollections.newLongObjectMap(scopedMemoryTracker);\n+            scopedMemoryTracker.allocateHeap(sizeOfLongArray(upperLimitOfLocks));\n \n-            SortedLockList lockList = new SortedLockList( upperLimitOfLocks );\n-            lockList.add( optionalFirstInChain );\n-            ids.forEach( ( id, type, startNode, endNode ) ->\n+            SortedLockList lockList = new SortedLockList(upperLimitOfLocks);\n+            lockList.add(optionalFirstInChain);\n+            ids.forEach((id, type, startNode, endNode) ->\n             {\n-                RelationshipRecord relationship = relRecords.getOrLoad( id, null, cursorTracer ).forReadingLinkage();\n-                optimistic.put( id, relationship );\n-                lockList.add( relationship.getId() );\n-                lockList.add( START_NEXT.get( relationship ) );\n-                lockList.add( START_PREV.get( relationship ) );\n-                lockList.add( END_NEXT.get( relationship ) );\n-                lockList.add( END_PREV.get( relationship ) );\n-            } );\n-\n-            while ( lockList.nextUnique() )\n+                RelationshipRecord relationship = relRecords.getOrLoad(id, null, cursorTracer).forReadingLinkage();\n+                optimistic.put(id, relationship);\n+                lockList.add(relationship.getId());\n+                lockList.add(START_NEXT.get(relationship));\n+                lockList.add(START_PREV.get(relationship));\n+                lockList.add(END_NEXT.get(relationship));\n+                lockList.add(END_PREV.get(relationship));\n+            });\n+\n+            while (lockList.nextUnique())\n             {\n                 long id = lockList.currentHighestLockedId();\n \n-                locks.acquireExclusive( NONE, RELATIONSHIP, id );\n-                RelationshipRecord old = optimistic.get( id );\n-                if ( old != null )\n+                locks.acquireExclusive(NONE, RELATIONSHIP, id);\n+                RelationshipRecord old = optimistic.get(id);\n+                if (old != null)\n                 {\n-                    RelationshipRecord actual = relRecords.getOrLoad( id, null, cursorTracer ).forReadingLinkage();\n-                    if ( recordHasLinkageChanges( old, actual ) )\n+                    RelationshipRecord actual = relRecords.getOrLoad(id, null, cursorTracer).forReadingLinkage();\n+                    if (recordHasLinkageChanges(old, actual))\n                     {\n-                        rewindAndUnlockChanged( locks, lockList, old, actual );\n-                        optimistic.put( id, actual );\n+                        rewindAndUnlockChanged(locks, lockList, old, actual);\n+                        optimistic.put(id, actual);\n                     }\n                 }\n             }\n         }\n     }\n \n-    private static void rewindAndUnlockChanged( ResourceLocker locks, SortedLockList lockList, RelationshipRecord old, RelationshipRecord actual )\n+    private static void rewindAndUnlockChanged(ResourceLocker locks, SortedLockList lockList, RelationshipRecord old, RelationshipRecord actual)\n     {\n-        rewindAndUnlockChanged( locks, START_NEXT, lockList, old, actual );\n-        rewindAndUnlockChanged( locks, START_PREV, lockList, old, actual );\n-        rewindAndUnlockChanged( locks, END_NEXT, lockList, old, actual );\n-        rewindAndUnlockChanged( locks, END_PREV, lockList, old, actual );\n+        rewindAndUnlockChanged(locks, START_NEXT, lockList, old, actual);\n+        rewindAndUnlockChanged(locks, START_PREV, lockList, old, actual);\n+        rewindAndUnlockChanged(locks, END_NEXT, lockList, old, actual);\n+        rewindAndUnlockChanged(locks, END_PREV, lockList, old, actual);\n     }\n \n-    private static void rewindAndUnlockChanged( ResourceLocker locks, RelationshipConnection connection, SortedLockList lockList, RelationshipRecord old,\n-            RelationshipRecord actual )\n+    private static void rewindAndUnlockChanged(ResourceLocker locks, RelationshipConnection connection, SortedLockList lockList, RelationshipRecord old,\n+                                               RelationshipRecord actual)\n     {\n-        long actualConnectionId = connection.get( actual );\n-        long oldConnectionId = connection.get( old );\n+        long actualConnectionId = connection.get(actual);\n+        long oldConnectionId = connection.get(old);\n \n         // Verify that nothing changed between the reads, and rewind if something did\n-        if ( oldConnectionId != actualConnectionId )\n+        if (oldConnectionId != actualConnectionId)\n         {\n             // If the old record has a lower id, it is already locked and we need to unlock\n-            if ( !isNull( oldConnectionId ) )\n+            if (!isNull(oldConnectionId))\n             {\n                 long currentHighestLockedId = lockList.validPosition() ? lockList.currentHighestLockedId() : NULL_REFERENCE.longValue();\n-                boolean lastOccurrence = lockList.remove( oldConnectionId );\n-                if ( lastOccurrence && oldConnectionId <= currentHighestLockedId )\n+                boolean lastOccurrence = lockList.remove(oldConnectionId);\n+                if (lastOccurrence && oldConnectionId <= currentHighestLockedId)\n                 {\n-                    locks.releaseExclusive( RELATIONSHIP, oldConnectionId );\n+                    locks.releaseExclusive(RELATIONSHIP, oldConnectionId);\n                 }\n             }\n \n             // If the new record is not already present and has a lower id, we need to lock that as well\n-            if ( !isNull( actualConnectionId ) )\n+            if (!isNull(actualConnectionId))\n             {\n-                boolean firstOccurrence = lockList.add( actualConnectionId );\n-                if ( firstOccurrence && lockList.validPosition() )\n+                boolean firstOccurrence = lockList.add(actualConnectionId);\n+                if (firstOccurrence && lockList.validPosition())\n                 {\n                     long currentHighestLockedId = lockList.currentHighestLockedId();\n-                    if ( actualConnectionId < currentHighestLockedId )\n+                    if (actualConnectionId < currentHighestLockedId)\n                     {\n                         // Try to grab the exclusive lock, if that fails, we need to rewind\n-                        if ( !locks.tryExclusiveLock( RELATIONSHIP, actualConnectionId ) )\n+                        if (!locks.tryExclusiveLock(RELATIONSHIP, actualConnectionId))\n                         {\n                             do\n                             {\n                                 currentHighestLockedId = lockList.currentHighestLockedId();\n-                                locks.releaseExclusive( RELATIONSHIP, currentHighestLockedId );\n+                                locks.releaseExclusive(RELATIONSHIP, currentHighestLockedId);\n                             }\n-                            while ( lockList.prevUnique() && lockList.currentHighestLockedId() > actualConnectionId );\n+                            while (lockList.prevUnique() && lockList.currentHighestLockedId() > actualConnectionId);\n                             lockList.prevUnique(); // Step past it to lock it on the next round\n                         }\n                     }\n@@ -241,11 +244,11 @@ final class RelationshipLockHelper\n         }\n     }\n \n-    private static void lockSingleRelationship( long relId, long optionalFirstInChain, RecordAccess<RelationshipRecord,Void> relRecords, ResourceLocker locks,\n-            PageCursorTracer cursorTracer )\n+    private static void lockSingleRelationship(long relId, long optionalFirstInChain, RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks,\n+                                               PageCursorTracer cursorTracer)\n     {\n         boolean retry;\n-        RelationshipRecord optimistic = relRecords.getOrLoad( relId, null, cursorTracer ).forReadingLinkage();\n+        RelationshipRecord optimistic = relRecords.getOrLoad(relId, null, cursorTracer).forReadingLinkage();\n         assert optimistic.inUse() : optimistic.toString();\n         final long[] neighbours = new long[6];\n         do\n@@ -253,54 +256,54 @@ final class RelationshipLockHelper\n             retry = false;\n             neighbours[0] = optionalFirstInChain;\n             neighbours[1] = relId;\n-            neighbours[2] = START_NEXT.get( optimistic );\n-            neighbours[3] = START_PREV.get( optimistic );\n-            neighbours[4] = END_NEXT.get( optimistic );\n-            neighbours[5] = END_PREV.get( optimistic );\n-            Arrays.sort( neighbours );\n-            lockRelationshipsExclusively( locks, neighbours );\n-\n-            RelationshipRecord actual = relRecords.getOrLoad( relId, null, cursorTracer ).forReadingLinkage();\n+            neighbours[2] = START_NEXT.get(optimistic);\n+            neighbours[3] = START_PREV.get(optimistic);\n+            neighbours[4] = END_NEXT.get(optimistic);\n+            neighbours[5] = END_PREV.get(optimistic);\n+            Arrays.sort(neighbours);\n+            lockRelationshipsExclusively(locks, neighbours);\n+\n+            RelationshipRecord actual = relRecords.getOrLoad(relId, null, cursorTracer).forReadingLinkage();\n             assert actual.inUse();\n-            if ( recordHasLinkageChanges( optimistic, actual ) )\n+            if (recordHasLinkageChanges(optimistic, actual))\n             {\n                 retry = true;\n-                unlockRelationshipsExclusively( locks, neighbours );\n+                unlockRelationshipsExclusively(locks, neighbours);\n                 optimistic = actual;\n             }\n         }\n-        while ( retry );\n+        while (retry);\n     }\n \n-    private static boolean recordHasLinkageChanges( RelationshipRecord old, RelationshipRecord actual )\n+    private static boolean recordHasLinkageChanges(RelationshipRecord old, RelationshipRecord actual)\n     {\n-        return connectionHasChanged( START_NEXT, old, actual ) || connectionHasChanged( START_PREV, old, actual ) ||\n-                connectionHasChanged( END_NEXT, old, actual ) || connectionHasChanged( END_PREV, old, actual );\n+        return connectionHasChanged(START_NEXT, old, actual) || connectionHasChanged(START_PREV, old, actual) ||\n+          connectionHasChanged(END_NEXT, old, actual) || connectionHasChanged(END_PREV, old, actual);\n     }\n \n-    private static boolean connectionHasChanged( RelationshipConnection connection, RelationshipRecord old, RelationshipRecord actual )\n+    private static boolean connectionHasChanged(RelationshipConnection connection, RelationshipRecord old, RelationshipRecord actual)\n     {\n-        return connection.get( old ) != connection.get( actual );\n+        return connection.get(old) != connection.get(actual);\n     }\n \n-    private static void lockRelationshipsExclusively( ResourceLocker locker, long[] ids )\n+    private static void lockRelationshipsExclusively(ResourceLocker locker, long[] ids)\n     {\n-        for ( long id : ids )\n+        for (long id : ids)\n         {\n-            if ( !isNull( id ) )\n+            if (!isNull(id))\n             {\n-                locker.acquireExclusive( NONE, RELATIONSHIP, id );\n+                locker.acquireExclusive(NONE, RELATIONSHIP, id);\n             }\n         }\n     }\n \n-    private static void unlockRelationshipsExclusively( ResourceLocker locker, long[] ids )\n+    private static void unlockRelationshipsExclusively(ResourceLocker locker, long[] ids)\n     {\n-        for ( long id : ids )\n+        for (long id : ids)\n         {\n-            if ( !isNull( id ) )\n+            if (!isNull(id))\n             {\n-                locker.releaseExclusive( RELATIONSHIP, id );\n+                locker.releaseExclusive(RELATIONSHIP, id);\n             }\n         }\n     }\n@@ -313,29 +316,29 @@ final class RelationshipLockHelper\n         private final MutableLongList list;\n         private int index = -1;\n \n-        SortedLockList( int initialCapacity )\n+        SortedLockList(int initialCapacity)\n         {\n-            this.list = LongLists.mutable.withInitialCapacity( initialCapacity );\n+            this.list = LongLists.mutable.withInitialCapacity(initialCapacity);\n         }\n \n         /**\n          * @return true if list did not already contain l\n          */\n-        boolean add( long l )\n+        boolean add(long l)\n         {\n-            if ( l != NULL_REFERENCE.longValue() )\n+            if (l != NULL_REFERENCE.longValue())\n             {\n-                int insertIndex = list.binarySearch( l );\n+                int insertIndex = list.binarySearch(l);\n                 boolean existed = insertIndex >= 0;\n-                if ( insertIndex < 0 )\n+                if (insertIndex < 0)\n                 {\n                     insertIndex = -insertIndex - 1;\n                 }\n-                if ( insertIndex <= index )\n+                if (insertIndex <= index)\n                 {\n                     index++;\n                 }\n-                list.addAtIndex( insertIndex, l );\n+                list.addAtIndex(insertIndex, l);\n                 return !existed;\n             }\n             return true;\n@@ -345,26 +348,25 @@ final class RelationshipLockHelper\n          * @param l value to remove\n          * @return true if list no longer contains l\n          */\n-        boolean remove( long l )\n+        boolean remove(long l)\n         {\n-            if ( !isNull( l ) )\n+            if (!isNull(l))\n             {\n-                int removeIndex = list.binarySearch( l );\n+                int removeIndex = list.binarySearch(l);\n                 assert removeIndex >= 0 : l + \" did not exist\";\n-                list.removeAtIndex( removeIndex );\n-                boolean unique = (list.size() <= removeIndex || list.get( removeIndex ) != l) && (removeIndex <= 0 || list.get( removeIndex - 1 ) != l);\n-                if ( removeIndex < index )\n+                list.removeAtIndex(removeIndex);\n+                boolean unique = (list.size() <= removeIndex || list.get(removeIndex) != l) && (removeIndex <= 0 || list.get(removeIndex - 1) != l);\n+                if (removeIndex < index)\n                 {\n                     index--;\n-                }\n-                else if ( removeIndex == index )\n+                } else if (removeIndex == index)\n                 {\n-                    if ( unique || (index == list.size() || l != list.get( index )) )\n+                    if (unique || (index == list.size() || l != list.get(index)))\n                     {\n                         index--;\n                     }\n                 }\n-                index = Math.min( index, list.size() - 1 );\n+                index = Math.min(index, list.size() - 1);\n \n                 return unique;\n             }\n@@ -373,12 +375,12 @@ final class RelationshipLockHelper\n \n         long currentHighestLockedId()\n         {\n-            return list.get( index );\n+            return list.get(index);\n         }\n \n         boolean next()\n         {\n-            if ( list.size() > 0 && index < list.size() )\n+            if (list.size() > 0 && index < list.size())\n             {\n                 index++;\n                 return index < list.size();\n@@ -388,12 +390,12 @@ final class RelationshipLockHelper\n \n         boolean nextUnique()\n         {\n-            return unique( this::next );\n+            return unique(this::next);\n         }\n \n         boolean prev()\n         {\n-            if ( index >= 0 )\n+            if (index >= 0)\n             {\n                 index--;\n                 return index >= 0;\n@@ -403,19 +405,19 @@ final class RelationshipLockHelper\n \n         boolean prevUnique()\n         {\n-            return unique( this::prev );\n+            return unique(this::prev);\n         }\n \n-        private boolean unique( BooleanSupplier traverser )\n+        private boolean unique(BooleanSupplier traverser)\n         {\n-            if ( !validPosition() )\n+            if (!validPosition())\n             {\n                 return traverser.getAsBoolean();\n             }\n             long old = currentHighestLockedId();\n-            while ( traverser.getAsBoolean() )\n+            while (traverser.getAsBoolean())\n             {\n-                if ( currentHighestLockedId() != old )\n+                if (currentHighestLockedId() != old)\n                 {\n                     return true;\n                 }\n",
            "diff_size": 138
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
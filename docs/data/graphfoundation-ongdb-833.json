{
    "project_name": "graphfoundation-ongdb",
    "error_id": "833",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/833/CsvImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/833/CsvImporter.java\nindex b98b355ca8e..7463652f9c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/833/CsvImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/833/CsvImporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.io.BufferedOutputStream;\n@@ -59,78 +60,77 @@ import static org.neo4j.unsafe.impl.batchimport.input.csv.DataFactories.defaultF\n \n class CsvImporter implements Importer\n {\n-    private final Collection<Args.Option<File[]>> nodesFiles;\n-    private final Collection<Args.Option<File[]>> relationshipsFiles;\n-    private final IdType idType;\n-    private final Charset inputEncoding;\n-    private final Config databaseConfig;\n-    private final Args args;\n-    private final OutsideWorld outsideWorld;\n-    private final String reportFileName;\n-    private final boolean ignoreBadRelationships;\n-    private final boolean ignoreDuplicateNodes;\n-    private final boolean ignoreExtraColumns;\n-    private final Boolean highIO;\n+  private final Collection<Args.Option<File[]>> nodesFiles;\n+  private final Collection<Args.Option<File[]>> relationshipsFiles;\n+  private final IdType idType;\n+  private final Charset inputEncoding;\n+  private final Config databaseConfig;\n+  private final Args args;\n+  private final OutsideWorld outsideWorld;\n+  private final String reportFileName;\n+  private final boolean ignoreBadRelationships;\n+  private final boolean ignoreDuplicateNodes;\n+  private final boolean ignoreExtraColumns;\n+  private final Boolean highIO;\n \n-    CsvImporter( Args args, Config databaseConfig, OutsideWorld outsideWorld ) throws IncorrectUsage\n+  CsvImporter(Args args, Config databaseConfig, OutsideWorld outsideWorld) throws IncorrectUsage\n+  {\n+    this.args = args;\n+    this.outsideWorld = outsideWorld;\n+    nodesFiles = extractInputFiles(args, \"nodes\", outsideWorld.errorStream());\n+    relationshipsFiles = extractInputFiles(args, \"relationships\", outsideWorld.errorStream());\n+    reportFileName =\n+        args.interpretOption(\"report-file\", withDefault(ImportCommand.DEFAULT_REPORT_FILE_NAME), s -> s);\n+    ignoreExtraColumns = args.getBoolean(\"ignore-extra-columns\", false);\n+    ignoreDuplicateNodes = args.getBoolean(\"ignore-duplicate-nodes\", false);\n+    ignoreBadRelationships = args.getBoolean(\"ignore-missing-nodes\", false);\n+    try\n     {\n-        this.args = args;\n-        this.outsideWorld = outsideWorld;\n-        nodesFiles = extractInputFiles( args, \"nodes\", outsideWorld.errorStream() );\n-        relationshipsFiles = extractInputFiles( args, \"relationships\", outsideWorld.errorStream() );\n-        reportFileName =\n-                args.interpretOption( \"report-file\", withDefault( ImportCommand.DEFAULT_REPORT_FILE_NAME ), s -> s );\n-        ignoreExtraColumns = args.getBoolean( \"ignore-extra-columns\", false );\n-        ignoreDuplicateNodes = args.getBoolean( \"ignore-duplicate-nodes\", false );\n-        ignoreBadRelationships = args.getBoolean( \"ignore-missing-nodes\", false );\n-        try\n-        {\n-            validateInputFiles( nodesFiles, relationshipsFiles );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            throw new IncorrectUsage( e.getMessage() );\n-        }\n-\n-        idType = args.interpretOption( \"id-type\", withDefault( IdType.STRING ),\n-                from -> IdType.valueOf( from.toUpperCase() ) );\n-        inputEncoding = Charset.forName( args.get( \"input-encoding\", defaultCharset().name() ) );\n-        highIO = args.getBoolean( \"high-io\", null, true ); // intentionally left as null if not specified\n-        this.databaseConfig = databaseConfig;\n+      validateInputFiles(nodesFiles, relationshipsFiles);\n+    } catch (IllegalArgumentException e)\n+    {\n+      throw new IncorrectUsage(e.getMessage());\n     }\n \n-    @Override\n-    public void doImport() throws IOException\n-    {\n-        FileSystemAbstraction fs = outsideWorld.fileSystem();\n-        File storeDir = databaseConfig.get( GraphDatabaseSettings.database_path );\n-        File logsDir = databaseConfig.get( GraphDatabaseSettings.logs_directory );\n-        File reportFile = new File( reportFileName );\n+    idType = args.interpretOption(\"id-type\", withDefault(IdType.STRING),\n+        from -> IdType.valueOf(from.toUpperCase()));\n+    inputEncoding = Charset.forName(args.get(\"input-encoding\", defaultCharset().name()));\n+    highIO = args.getBoolean(\"high-io\", null, true); // intentionally left as null if not specified\n+    this.databaseConfig = databaseConfig;\n+  }\n \n-        OutputStream badOutput = new BufferedOutputStream( fs.openAsOutputStream( reportFile, false ) );\n-        Collector badCollector = badCollector( badOutput, isIgnoringSomething() ? BadCollector.UNLIMITED_TOLERANCE : 0,\n-                collect( ignoreBadRelationships, ignoreDuplicateNodes, ignoreExtraColumns ) );\n+  @Override\n+  public void doImport() throws IOException\n+  {\n+    FileSystemAbstraction fs = outsideWorld.fileSystem();\n+    File storeDir = databaseConfig.get(GraphDatabaseSettings.database_path);\n+    File logsDir = databaseConfig.get(GraphDatabaseSettings.logs_directory);\n+    File reportFile = new File(reportFileName);\n \n-        Configuration configuration = new WrappedBatchImporterConfigurationForNeo4jAdmin( importConfiguration(\n-                null, false, databaseConfig, storeDir, highIO ) );\n+    OutputStream badOutput = new BufferedOutputStream(fs.openAsOutputStream(reportFile, false));\n+    Collector badCollector = badCollector(badOutput, isIgnoringSomething() ? BadCollector.UNLIMITED_TOLERANCE : 0,\n+        collect(ignoreBadRelationships, ignoreDuplicateNodes, ignoreExtraColumns));\n \n-        // Extract the default time zone from the database configuration\n-        ZoneId dbTimeZone = databaseConfig.get( GraphDatabaseSettings.db_temporal_timezone );\n-        Supplier<ZoneId> defaultTimeZone = () -> dbTimeZone;\n+    Configuration configuration = new WrappedBatchImporterConfigurationForNeo4jAdmin(importConfiguration(\n+        null, false, databaseConfig, storeDir, highIO));\n \n-        CsvInput input = new CsvInput(\n-                nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader( defaultTimeZone ),\n-                relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader( defaultTimeZone ),\n-                idType,\n-                new WrappedCsvInputConfigurationForNeo4jAdmin( csvConfiguration( args, false ) ),\n-                badCollector );\n+    // Extract the default time zone from the database configuration\n+    ZoneId dbTimeZone = databaseConfig.get(GraphDatabaseSettings.db_temporal_timezone);\n+    Supplier<ZoneId> defaultTimeZone = () -> dbTimeZone;\n \n-        ImportTool.doImport( outsideWorld.errorStream(), outsideWorld.errorStream(), outsideWorld.inStream(), storeDir, logsDir,\n-                reportFile, fs, nodesFiles, relationshipsFiles, false, input, this.databaseConfig, badOutput, configuration, false );\n-    }\n+    CsvInput input = new CsvInput(\n+        nodeData(inputEncoding, nodesFiles), defaultFormatNodeFileHeader(defaultTimeZone),\n+        relationshipData(inputEncoding, relationshipsFiles), defaultFormatRelationshipFileHeader(defaultTimeZone),\n+        idType,\n+        new WrappedCsvInputConfigurationForNeo4jAdmin(csvConfiguration(args, false)),\n+        badCollector);\n \n-    private boolean isIgnoringSomething()\n-    {\n-        return ignoreBadRelationships || ignoreDuplicateNodes || ignoreExtraColumns;\n-    }\n+    ImportTool.doImport(outsideWorld.errorStream(), outsideWorld.errorStream(), outsideWorld.inStream(), storeDir, logsDir,\n+        reportFile, fs, nodesFiles, relationshipsFiles, false, input, this.databaseConfig, badOutput, configuration, false);\n+  }\n+\n+  private boolean isIgnoringSomething()\n+  {\n+    return ignoreBadRelationships || ignoreDuplicateNodes || ignoreExtraColumns;\n+  }\n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 342).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/833/CsvImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/833/CsvImporter.java\nindex b98b355ca8e..cb83803cc02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/833/CsvImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/833/CsvImporter.java\n@@ -78,9 +78,8 @@ class CsvImporter implements Importer\n         this.outsideWorld = outsideWorld;\n         nodesFiles = extractInputFiles( args, \"nodes\", outsideWorld.errorStream() );\n         relationshipsFiles = extractInputFiles( args, \"relationships\", outsideWorld.errorStream() );\n-        reportFileName =\n-                args.interpretOption( \"report-file\", withDefault( ImportCommand.DEFAULT_REPORT_FILE_NAME ), s -> s );\n-        ignoreExtraColumns = args.getBoolean( \"ignore-extra-columns\", false );\n+        reportFileName = args.interpretOption( \"report-file\", withDefault( ImportCommand.DEFAULT_REPORT_FILE_NAME ), s -> s );\n+ignoreExtraColumns = args.getBoolean( \"ignore-extra-columns\", false );\n         ignoreDuplicateNodes = args.getBoolean( \"ignore-duplicate-nodes\", false );\n         ignoreBadRelationships = args.getBoolean( \"ignore-missing-nodes\", false );\n         try\n@@ -94,7 +93,7 @@ class CsvImporter implements Importer\n \n         idType = args.interpretOption( \"id-type\", withDefault( IdType.STRING ),\n                 from -> IdType.valueOf( from.toUpperCase() ) );\n-        inputEncoding = Charset.forName( args.get( \"input-encoding\", defaultCharset().name() ) );\n+inputEncoding = Charset.forName( args.get( \"input-encoding\", defaultCharset().name() ) );\n         highIO = args.getBoolean( \"high-io\", null, true ); // intentionally left as null if not specified\n         this.databaseConfig = databaseConfig;\n     }\n@@ -106,26 +105,16 @@ class CsvImporter implements Importer\n         File storeDir = databaseConfig.get( GraphDatabaseSettings.database_path );\n         File logsDir = databaseConfig.get( GraphDatabaseSettings.logs_directory );\n         File reportFile = new File( reportFileName );\n-\n-        OutputStream badOutput = new BufferedOutputStream( fs.openAsOutputStream( reportFile, false ) );\n+OutputStream badOutput = new BufferedOutputStream( fs.openAsOutputStream( reportFile, false ) );\n         Collector badCollector = badCollector( badOutput, isIgnoringSomething() ? BadCollector.UNLIMITED_TOLERANCE : 0,\n                 collect( ignoreBadRelationships, ignoreDuplicateNodes, ignoreExtraColumns ) );\n-\n-        Configuration configuration = new WrappedBatchImporterConfigurationForNeo4jAdmin( importConfiguration(\n-                null, false, databaseConfig, storeDir, highIO ) );\n-\n-        // Extract the default time zone from the database configuration\n+Configuration configuration = new WrappedBatchImporterConfigurationForNeo4jAdmin( importConfiguration( null, false, databaseConfig, storeDir, highIO ) );\n+    // Extract the default time zone from the database configuration\n         ZoneId dbTimeZone = databaseConfig.get( GraphDatabaseSettings.db_temporal_timezone );\n         Supplier<ZoneId> defaultTimeZone = () -> dbTimeZone;\n \n-        CsvInput input = new CsvInput(\n-                nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader( defaultTimeZone ),\n-                relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader( defaultTimeZone ),\n-                idType,\n-                new WrappedCsvInputConfigurationForNeo4jAdmin( csvConfiguration( args, false ) ),\n-                badCollector );\n-\n-        ImportTool.doImport( outsideWorld.errorStream(), outsideWorld.errorStream(), outsideWorld.inStream(), storeDir, logsDir,\n+        CsvInput input = new CsvInput( nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader( defaultTimeZone ), relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader( defaultTimeZone ), idType, new WrappedCsvInputConfigurationForNeo4jAdmin( csvConfiguration( args, false ) ), badCollector );\n+ImportTool.doImport( outsideWorld.errorStream(), outsideWorld.errorStream(), outsideWorld.inStream(), storeDir, logsDir,\n                 reportFile, fs, nodesFiles, relationshipsFiles, false, input, this.databaseConfig, badOutput, configuration, false );\n     }\n \n@@ -133,4 +122,4 @@ class CsvImporter implements Importer\n     {\n         return ignoreBadRelationships || ignoreDuplicateNodes || ignoreExtraColumns;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 342).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 246).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "column": "38",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "61",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/833/CsvImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/833/CsvImporter.java\nindex b98b355ca8e..846a71c59a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/833/CsvImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/833/CsvImporter.java\n@@ -27,7 +27,6 @@ import java.nio.charset.Charset;\n import java.time.ZoneId;\n import java.util.Collection;\n import java.util.function.Supplier;\n-\n import org.neo4j.commandline.admin.IncorrectUsage;\n import org.neo4j.commandline.admin.OutsideWorld;\n import org.neo4j.commandline.dbms.config.WrappedBatchImporterConfigurationForNeo4jAdmin;\n@@ -43,18 +42,28 @@ import org.neo4j.unsafe.impl.batchimport.input.BadCollector;\n import org.neo4j.unsafe.impl.batchimport.input.Collector;\n import org.neo4j.unsafe.impl.batchimport.input.csv.CsvInput;\n import org.neo4j.unsafe.impl.batchimport.input.csv.IdType;\n-\n import static java.nio.charset.Charset.defaultCharset;\n+\n import static org.neo4j.kernel.impl.util.Converters.withDefault;\n+\n import static org.neo4j.tooling.ImportTool.csvConfiguration;\n+\n import static org.neo4j.tooling.ImportTool.extractInputFiles;\n+\n import static org.neo4j.tooling.ImportTool.importConfiguration;\n+\n import static org.neo4j.tooling.ImportTool.nodeData;\n+\n import static org.neo4j.tooling.ImportTool.relationshipData;\n+\n import static org.neo4j.tooling.ImportTool.validateInputFiles;\n+\n import static org.neo4j.unsafe.impl.batchimport.input.Collectors.badCollector;\n+\n import static org.neo4j.unsafe.impl.batchimport.input.Collectors.collect;\n+\n import static org.neo4j.unsafe.impl.batchimport.input.csv.DataFactories.defaultFormatNodeFileHeader;\n+\n import static org.neo4j.unsafe.impl.batchimport.input.csv.DataFactories.defaultFormatRelationshipFileHeader;\n \n class CsvImporter implements Importer\n@@ -72,14 +81,14 @@ class CsvImporter implements Importer\n     private final boolean ignoreExtraColumns;\n     private final Boolean highIO;\n \n-    CsvImporter( Args args, Config databaseConfig, OutsideWorld outsideWorld ) throws IncorrectUsage\n+    CsvImporter( Args args, Config databaseConfig, OutsideWorld outsideWorld )\n+    throws IncorrectUsage\n     {\n         this.args = args;\n         this.outsideWorld = outsideWorld;\n         nodesFiles = extractInputFiles( args, \"nodes\", outsideWorld.errorStream() );\n         relationshipsFiles = extractInputFiles( args, \"relationships\", outsideWorld.errorStream() );\n-        reportFileName =\n-                args.interpretOption( \"report-file\", withDefault( ImportCommand.DEFAULT_REPORT_FILE_NAME ), s -> s );\n+        reportFileName = args.interpretOption( \"report-file\", withDefault( ImportCommand.DEFAULT_REPORT_FILE_NAME ), s -> s );\n         ignoreExtraColumns = args.getBoolean( \"ignore-extra-columns\", false );\n         ignoreDuplicateNodes = args.getBoolean( \"ignore-duplicate-nodes\", false );\n         ignoreBadRelationships = args.getBoolean( \"ignore-missing-nodes\", false );\n@@ -92,8 +101,7 @@ class CsvImporter implements Importer\n             throw new IncorrectUsage( e.getMessage() );\n         }\n \n-        idType = args.interpretOption( \"id-type\", withDefault( IdType.STRING ),\n-                from -> IdType.valueOf( from.toUpperCase() ) );\n+        idType = args.interpretOption( \"id-type\", withDefault( IdType.STRING ), from -> IdType.valueOf( from.toUpperCase() ) );\n         inputEncoding = Charset.forName( args.get( \"input-encoding\", defaultCharset().name() ) );\n         highIO = args.getBoolean( \"high-io\", null, true ); // intentionally left as null if not specified\n         this.databaseConfig = databaseConfig;\n@@ -106,31 +114,19 @@ class CsvImporter implements Importer\n         File storeDir = databaseConfig.get( GraphDatabaseSettings.database_path );\n         File logsDir = databaseConfig.get( GraphDatabaseSettings.logs_directory );\n         File reportFile = new File( reportFileName );\n-\n         OutputStream badOutput = new BufferedOutputStream( fs.openAsOutputStream( reportFile, false ) );\n-        Collector badCollector = badCollector( badOutput, isIgnoringSomething() ? BadCollector.UNLIMITED_TOLERANCE : 0,\n-                collect( ignoreBadRelationships, ignoreDuplicateNodes, ignoreExtraColumns ) );\n-\n-        Configuration configuration = new WrappedBatchImporterConfigurationForNeo4jAdmin( importConfiguration(\n-                null, false, databaseConfig, storeDir, highIO ) );\n+        Collector badCollector = badCollector( badOutput, isIgnoringSomething() ? BadCollector.UNLIMITED_TOLERANCE : 0, collect( ignoreBadRelationships, ignoreDuplicateNodes, ignoreExtraColumns ) );\n+        Configuration configuration = new WrappedBatchImporterConfigurationForNeo4jAdmin( importConfiguration( null, false, databaseConfig, storeDir, highIO ) );\n \n         // Extract the default time zone from the database configuration\n         ZoneId dbTimeZone = databaseConfig.get( GraphDatabaseSettings.db_temporal_timezone );\n         Supplier<ZoneId> defaultTimeZone = () -> dbTimeZone;\n-\n-        CsvInput input = new CsvInput(\n-                nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader( defaultTimeZone ),\n-                relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader( defaultTimeZone ),\n-                idType,\n-                new WrappedCsvInputConfigurationForNeo4jAdmin( csvConfiguration( args, false ) ),\n-                badCollector );\n-\n-        ImportTool.doImport( outsideWorld.errorStream(), outsideWorld.errorStream(), outsideWorld.inStream(), storeDir, logsDir,\n-                reportFile, fs, nodesFiles, relationshipsFiles, false, input, this.databaseConfig, badOutput, configuration, false );\n+        CsvInput input = new CsvInput( nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader( defaultTimeZone ), relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader( defaultTimeZone ), idType, new WrappedCsvInputConfigurationForNeo4jAdmin( csvConfiguration( args, false ) ), badCollector );\n+        ImportTool.doImport( outsideWorld.errorStream(), outsideWorld.errorStream(), outsideWorld.inStream(), storeDir, logsDir, reportFile, fs, nodesFiles, relationshipsFiles, false, input, this.databaseConfig, badOutput, configuration, false );\n     }\n \n     private boolean isIgnoringSomething()\n     {\n-        return ignoreBadRelationships || ignoreDuplicateNodes || ignoreExtraColumns;\n+        return ignoreBadRelationships|| ignoreDuplicateNodes|| ignoreExtraColumns;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
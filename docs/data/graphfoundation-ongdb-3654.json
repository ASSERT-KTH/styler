{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3654",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3654/ReadOnlyIndexPartition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3654/ReadOnlyIndexPartition.java\nindex fb6df04aa33..ddfa4b9ec58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3654/ReadOnlyIndexPartition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3654/ReadOnlyIndexPartition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.partition;\n \n import org.apache.lucene.index.IndexWriter;\n@@ -38,57 +39,57 @@ import org.neo4j.kernel.api.impl.index.backup.LuceneIndexSnapshots;\n  */\n public class ReadOnlyIndexPartition extends AbstractIndexPartition\n {\n-    private final SearcherManager searcherManager;\n+  private final SearcherManager searcherManager;\n \n-    ReadOnlyIndexPartition( File partitionFolder, Directory directory ) throws IOException\n-    {\n-        super( partitionFolder, directory );\n-        this.searcherManager = new SearcherManager( directory, new SearcherFactory() );\n-    }\n+  ReadOnlyIndexPartition(File partitionFolder, Directory directory) throws IOException\n+  {\n+    super(partitionFolder, directory);\n+    this.searcherManager = new SearcherManager(directory, new SearcherFactory());\n+  }\n \n-    @Override\n-    public IndexWriter getIndexWriter()\n-    {\n-        throw new UnsupportedOperationException( \"Retrieving index writer from read only index partition is \" +\n-                                                 \"unsupported.\" );\n-    }\n+  @Override\n+  public IndexWriter getIndexWriter()\n+  {\n+    throw new UnsupportedOperationException(\"Retrieving index writer from read only index partition is \" +\n+        \"unsupported.\");\n+  }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public PartitionSearcher acquireSearcher() throws IOException\n-    {\n-        return new PartitionSearcher( searcherManager );\n-    }\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public PartitionSearcher acquireSearcher() throws IOException\n+  {\n+    return new PartitionSearcher(searcherManager);\n+  }\n \n-    /**\n-     *  Refresh partition. No-op in read only partition.\n-     *\n-     * @throws IOException if refreshing fails.\n-     */\n-    @Override\n-    public void maybeRefreshBlocking()\n-    {\n-        // nothing to refresh in read only partition\n-    }\n+  /**\n+   * Refresh partition. No-op in read only partition.\n+   *\n+   * @throws IOException if refreshing fails.\n+   */\n+  @Override\n+  public void maybeRefreshBlocking()\n+  {\n+    // nothing to refresh in read only partition\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        IOUtils.closeAll( searcherManager, directory );\n-    }\n+  @Override\n+  public void close() throws IOException\n+  {\n+    IOUtils.closeAll(searcherManager, directory);\n+  }\n \n-    /**\n-     * Retrieve list of consistent Lucene index files for read only partition.\n-     *\n-     * @return the iterator over index files.\n-     * @throws IOException if any IO operation fails.\n-     */\n-    @Override\n-    public ResourceIterator<File> snapshot() throws IOException\n-    {\n-        return LuceneIndexSnapshots.forIndex( partitionFolder, directory );\n-    }\n+  /**\n+   * Retrieve list of consistent Lucene index files for read only partition.\n+   *\n+   * @return the iterator over index files.\n+   * @throws IOException if any IO operation fails.\n+   */\n+  @Override\n+  public ResourceIterator<File> snapshot() throws IOException\n+  {\n+    return LuceneIndexSnapshots.forIndex(partitionFolder, directory);\n+  }\n }\n \n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3654/ReadOnlyIndexPartition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3654/ReadOnlyIndexPartition.java\nindex fb6df04aa33..c08bd22de47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3654/ReadOnlyIndexPartition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3654/ReadOnlyIndexPartition.java\n@@ -49,9 +49,8 @@ public class ReadOnlyIndexPartition extends AbstractIndexPartition\n     @Override\n     public IndexWriter getIndexWriter()\n     {\n-        throw new UnsupportedOperationException( \"Retrieving index writer from read only index partition is \" +\n-                                                 \"unsupported.\" );\n-    }\n+        throw new UnsupportedOperationException( \"Retrieving index writer from read only index partition is \" + \"unsupported.\" );\n+            }\n \n     /**\n      * {@inheritDoc}\n@@ -90,5 +89,4 @@ public class ReadOnlyIndexPartition extends AbstractIndexPartition\n     {\n         return LuceneIndexSnapshots.forIndex( partitionFolder, directory );\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
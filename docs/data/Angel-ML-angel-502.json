{
    "project_name": "Angel-ML-angel",
    "error_id": "502",
    "information": {
        "errors": [
            {
                "line": "61",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 111).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   */\n  public void init() throws IOException {\n    int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE, AngelConf.DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n    conf.setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n    conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, flushLen);\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/502/DistributeLog.java\nindex 099cd88e4ca..560d8b910c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/502/DistributeLog.java\n@@ -58,8 +58,8 @@ public class DistributeLog {\n    * @throws IOException\n    */\n   public void init() throws IOException {\n-    int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE, AngelConf.DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n-    conf.setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n+    int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE,AngelConf .DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);conf\n+    .setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n     conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, flushLen);\n \n     String pathStr = conf.get(AngelConf.ANGEL_LOG_PATH);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/502/DistributeLog.java\nindex 099cd88e4ca..db5f4e59a14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/502/DistributeLog.java\n@@ -36,17 +36,24 @@ import java.util.Map;\n public class DistributeLog {\n   static final Log LOG = LogFactory.getLog(DistributeLog.class);\n \n-  /** Application configuration */\n+  /**\n+   * Application configuration\n+   */\n   private final Configuration conf;\n \n-  /** Index name list */\n+  /**\n+   * Index name list\n+   */\n   private List<String> names;\n \n-  /** File output stream */\n+  /**\n+   * File output stream\n+   */\n   private FSDataOutputStream outputStream;\n \n   /**\n    * Create a new DistributeLog\n+   *\n    * @param conf application configuration\n    */\n   public DistributeLog(Configuration conf) {\n@@ -55,10 +62,12 @@ public class DistributeLog {\n \n   /**\n    * Init\n+   *\n    * @throws IOException\n    */\n   public void init() throws IOException {\n-    int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE, AngelConf.DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n+    int flushLen =\n+        conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE, AngelConf.DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n     conf.setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n     conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, flushLen);\n \n@@ -74,11 +83,12 @@ public class DistributeLog {\n     if (fs.exists(path)) {\n       fs.delete(path, true);\n     }\n-    outputStream =  fs.create(path, true);\n+    outputStream = fs.create(path, true);\n   }\n \n   /**\n    * Write the index names to file\n+   *\n    * @param names index name list\n    * @throws IOException\n    */\n@@ -93,13 +103,14 @@ public class DistributeLog {\n \n   /**\n    * Write index values to file\n+   *\n    * @param algoIndexes index name to value map\n    * @throws IOException\n    */\n   public void writeLog(Map<String, String> algoIndexes) throws IOException {\n-    assert(names != null && names.size() == algoIndexes.size());\n+    assert (names != null && names.size() == algoIndexes.size());\n     int size = names.size();\n-    for(int i = 0; i < size; i++) {\n+    for (int i = 0; i < size; i++) {\n       outputStream.write((algoIndexes.get(names.get(i)) + \"\\t\").getBytes());\n     }\n     outputStream.writeBytes(\"\\n\");\n@@ -108,10 +119,11 @@ public class DistributeLog {\n \n   /**\n    * Close file writter\n+   *\n    * @throws IOException\n    */\n   public void close() throws IOException {\n-    if(outputStream != null) {\n+    if (outputStream != null) {\n       outputStream.close();\n     }\n   }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/502/DistributeLog.java\nindex 099cd88e4ca..f6b36ca4ff5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/502/DistributeLog.java\n@@ -74,7 +74,7 @@ public class DistributeLog {\n     if (fs.exists(path)) {\n       fs.delete(path, true);\n     }\n-    outputStream =  fs.create(path, true);\n+    outputStream = fs.create(path, true);\n   }\n \n   /**\n@@ -99,7 +99,7 @@ public class DistributeLog {\n   public void writeLog(Map<String, String> algoIndexes) throws IOException {\n     assert(names != null && names.size() == algoIndexes.size());\n     int size = names.size();\n-    for(int i = 0; i < size; i++) {\n+    for (int i = 0; i < size; i++) {\n       outputStream.write((algoIndexes.get(names.get(i)) + \"\\t\").getBytes());\n     }\n     outputStream.writeBytes(\"\\n\");\n@@ -115,4 +115,4 @@ public class DistributeLog {\n       outputStream.close();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/502/DistributeLog.java\nindex 099cd88e4ca..3af958b4b68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/502/DistributeLog.java\n@@ -25,7 +25,6 @@ import org.apache.hadoop.fs.FSDataOutputStream;\n import org.apache.hadoop.fs.FileSystem;\n import org.apache.hadoop.fs.Path;\n import org.apache.hadoop.hdfs.DFSConfigKeys;\n-\n import java.io.IOException;\n import java.util.List;\n import java.util.Map;\n@@ -33,7 +32,9 @@ import java.util.Map;\n /**\n  * The tool that write algorithm logs to file.\n  */\n+\n public class DistributeLog {\n+\n   static final Log LOG = LogFactory.getLog(DistributeLog.class);\n \n   /** Application configuration */\n@@ -49,6 +50,7 @@ public class DistributeLog {\n    * Create a new DistributeLog\n    * @param conf application configuration\n    */\n+\n   public DistributeLog(Configuration conf) {\n     this.conf = conf;\n   }\n@@ -57,24 +59,22 @@ public class DistributeLog {\n    * Init\n    * @throws IOException\n    */\n+\n   public void init() throws IOException {\n     int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE, AngelConf.DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n     conf.setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n     conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, flushLen);\n-\n     String pathStr = conf.get(AngelConf.ANGEL_LOG_PATH);\n     if (pathStr == null) {\n       throw new IOException(\"log directory is null. you must set \" + AngelConf.ANGEL_LOG_PATH);\n     }\n-\n     LOG.info(\"algorithm log output directory=\" + pathStr);\n-\n     Path path = new Path(pathStr + \"/log\");\n     FileSystem fs = path.getFileSystem(conf);\n     if (fs.exists(path)) {\n       fs.delete(path, true);\n     }\n-    outputStream =  fs.create(path, true);\n+    outputStream = fs.create(path, true);\n   }\n \n   /**\n@@ -82,6 +82,7 @@ public class DistributeLog {\n    * @param names index name list\n    * @throws IOException\n    */\n+\n   public void setNames(List<String> names) throws IOException {\n     this.names = names;\n     for (String name : names) {\n@@ -96,10 +97,12 @@ public class DistributeLog {\n    * @param algoIndexes index name to value map\n    * @throws IOException\n    */\n+\n   public void writeLog(Map<String, String> algoIndexes) throws IOException {\n-    assert(names != null && names.size() == algoIndexes.size());\n+    assert (names != null && names.size() == algoIndexes.size());\n+\n     int size = names.size();\n-    for(int i = 0; i < size; i++) {\n+    for (int i = 0; i < size; i++) {\n       outputStream.write((algoIndexes.get(names.get(i)) + \"\\t\").getBytes());\n     }\n     outputStream.writeBytes(\"\\n\");\n@@ -110,9 +113,10 @@ public class DistributeLog {\n    * Close file writter\n    * @throws IOException\n    */\n+\n   public void close() throws IOException {\n-    if(outputStream != null) {\n+    if (outputStream != null) {\n       outputStream.close();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/502/DistributeLog.java\nindex 099cd88e4ca..560d8b910c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/502/DistributeLog.java\n@@ -58,8 +58,8 @@ public class DistributeLog {\n    * @throws IOException\n    */\n   public void init() throws IOException {\n-    int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE, AngelConf.DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n-    conf.setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n+    int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE,AngelConf .DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);conf\n+    .setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n     conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, flushLen);\n \n     String pathStr = conf.get(AngelConf.ANGEL_LOG_PATH);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "61",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/502/DistributeLog.java\nindex 099cd88e4ca..5cd086dc2da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/502/DistributeLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/502/DistributeLog.java\n@@ -58,7 +58,8 @@ public class DistributeLog {\n    * @throws IOException\n    */\n   public void init() throws IOException {\n-    int flushLen = conf.getInt(AngelConf.ANGEL_LOG_FLUSH_MIN_SIZE, AngelConf.DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n+    int flushLen=conf .getInt ( AngelConf. ANGEL_LOG_FLUSH_MIN_SIZE ,AngelConf\n+    .DEFAULT_ANGEL_LOG_FLUSH_MIN_SIZE);\n     conf.setInt(DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY, flushLen);\n     conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, flushLen);\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
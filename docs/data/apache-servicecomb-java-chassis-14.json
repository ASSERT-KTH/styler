{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "80",
                "column": "10",
                "severity": "warning",
                "message": "',' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "          operationGenerator.getProviderMethod().getName(),\n          paramIdx)\n          , e);\n    }\n\n    // set swagger params into operationGenerator, in declared field order",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/14/BeanParamAnnotationProcessor.java\nindex 0d7f32d5fa6..893b6bf4c56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/14/BeanParamAnnotationProcessor.java\n@@ -76,8 +76,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx), e);\n     }\n \n     // set swagger params into operationGenerator, in declared field order\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "80",
                    "column": "10",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/14/BeanParamAnnotationProcessor.java\nindex 0d7f32d5fa6..17ff2f6e8af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/14/BeanParamAnnotationProcessor.java\n@@ -93,10 +93,10 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * generate swagger params according to JAX-RS param annotations and set them into {@code swaggerParamMap}.\n    *\n    * @param swaggerParamMap the map contains the generated swagger param,\n-   * key is the name defined by source code(the declared field name) and value is the swagger param\n+   *                        key is the name defined by source code(the declared field name) and value is the swagger param\n    */\n   private void traversalParamField(OperationGenerator operationGenerator, Class<?> beanParamClazz,\n-      Map<String, Parameter> swaggerParamMap) throws IntrospectionException {\n+                                   Map<String, Parameter> swaggerParamMap) throws IntrospectionException {\n     for (Field beanParamField : beanParamClazz.getDeclaredFields()) {\n       // ignore synthetic member to avoid build failure\n       // see https://github.com/jacoco/jacoco/issues/168\n@@ -130,7 +130,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @throws IntrospectionException see {@linkplain PropertyDescriptor#PropertyDescriptor(String, Class)}\n    */\n   private Parameter processFieldSetter(OperationGenerator operationGenerator, Class<?> beanParamClazz,\n-      Field beanParamField) throws IntrospectionException {\n+                                       Field beanParamField) throws IntrospectionException {\n     Parameter swaggerParam = null;\n     PropertyDescriptor propertyDescriptor = new PropertyDescriptor(beanParamField.getName(), beanParamClazz);\n     Method writeMethod = propertyDescriptor.getWriteMethod();\n@@ -145,8 +145,8 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * Generate a swagger parameter according to {@code annotations} and {@code genericType}.\n    *\n    * @param operationGenerator operationGenerator\n-   * @param annotations annotations on fields or setter methods\n-   * @param genericType type of the fields, or the param type of the setter methods\n+   * @param annotations        annotations on fields or setter methods\n+   * @param genericType        type of the fields, or the param type of the setter methods\n    * @return a swagger param, or null if there is no JAX-RS annotation in {@code annotations}\n    */\n   private Parameter generateSwaggerParam(\n@@ -171,9 +171,9 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * Generate swagger parameter, set default value, and return it.\n    *\n    * @param operationGenerator operationGenerator\n-   * @param fieldAnnotation JAX-RS param annotation\n-   * @param genericParamType type of the parameter\n-   * @param defaultValue default value, can be null\n+   * @param fieldAnnotation    JAX-RS param annotation\n+   * @param genericParamType   type of the parameter\n+   * @param defaultValue       default value, can be null\n    * @return the generated swagger Parameter\n    */\n   private Parameter setUpParameter(\n@@ -196,8 +196,8 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * Generate a swagger parameter, set up name and type info.\n    *\n    * @param swaggerGeneratorContext context data carried by {@linkplain OperationGenerator}\n-   * @param fieldAnnotation JAX-RS param annotation\n-   * @param genericParamType default value, can be null\n+   * @param fieldAnnotation         JAX-RS param annotation\n+   * @param genericParamType        default value, can be null\n    * @return the generated swagger parameter\n    */\n   private AbstractSerializableParameter<?> createParameter(\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/14/BeanParamAnnotationProcessor.java\nindex 0d7f32d5fa6..c8bb24edb6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/14/BeanParamAnnotationProcessor.java\n@@ -76,8 +76,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx), e);\n     }\n \n     // set swagger params into operationGenerator, in declared field order\n@@ -114,8 +113,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n       if (null == swaggerParam) {\n         throw new IllegalArgumentException(String.format(\n             \"There is a field[%s] cannot be mapped to swagger param. Maybe you should tag @JsonIgnore on it.\",\n-            beanParamField.getName())\n-        );\n+            beanParamField.getName()));\n       }\n       swaggerParamMap.put(beanParamField.getName(), swaggerParam);\n     }\n@@ -151,8 +149,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    */\n   private Parameter generateSwaggerParam(\n       OperationGenerator operationGenerator,\n-      Annotation[] annotations,\n-      Type genericType) {\n+      Annotation[] annotations, Type genericType) {\n     String defaultValue = null;\n     for (Annotation fieldAnnotation : annotations) {\n       if (!SUPPORTED_PARAM_ANNOTATIONS.contains(fieldAnnotation.annotationType())) {\n@@ -177,10 +174,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @return the generated swagger Parameter\n    */\n   private Parameter setUpParameter(\n-      OperationGenerator operationGenerator,\n-      Annotation fieldAnnotation,\n-      Type genericParamType,\n-      String defaultValue) {\n+      OperationGenerator operationGenerator, Annotation fieldAnnotation, Type genericParamType, String defaultValue) {\n     AbstractSerializableParameter<?> parameter = createParameter(\n         operationGenerator.getContext(),\n         fieldAnnotation,\n@@ -201,9 +195,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @return the generated swagger parameter\n    */\n   private AbstractSerializableParameter<?> createParameter(\n-      SwaggerGeneratorContext swaggerGeneratorContext,\n-      Annotation fieldAnnotation,\n-      Type genericParamType) {\n+      SwaggerGeneratorContext swaggerGeneratorContext, Annotation fieldAnnotation, Type genericParamType) {\n     // find the corresponding ParameterProcessor and process the parameter\n     final AbstractParameterProcessor<?> parameterAnnotationProcessor =\n         (AbstractParameterProcessor<?>) swaggerGeneratorContext\n@@ -226,4 +218,4 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n     }\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/14/BeanParamAnnotationProcessor.java\nindex 0d7f32d5fa6..893b6bf4c56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/14/BeanParamAnnotationProcessor.java\n@@ -76,8 +76,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx), e);\n     }\n \n     // set swagger params into operationGenerator, in declared field order\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/14/BeanParamAnnotationProcessor.java\nindex 0d7f32d5fa6..893b6bf4c56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/14/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/14/BeanParamAnnotationProcessor.java\n@@ -76,8 +76,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx), e);\n     }\n \n     // set swagger params into operationGenerator, in declared field order\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
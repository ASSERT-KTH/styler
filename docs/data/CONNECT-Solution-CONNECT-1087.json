{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1087",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetSystemType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1087/AdminDistributionHelper.java\nindex ee8e3eb60ed..634dcbe7802 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1087/AdminDistributionHelper.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1087/AdminDistributionHelper.java\nindex ee8e3eb60ed..8e7f4ec47c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1087/AdminDistributionHelper.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n@@ -40,167 +41,166 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author dunnek\n  */\n public class AdminDistributionHelper {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdminDistributionHelper.class);\n-    private final WebServiceProxyHelper webServiceProxyHelper;\n-\n-    /**\n-     * Constructs an instance of WebServiceProxyHelper.\n-     */\n-    public AdminDistributionHelper() {\n-        webServiceProxyHelper = new WebServiceProxyHelper();\n+  private static final Logger LOG = LoggerFactory.getLogger(AdminDistributionHelper.class);\n+  private final WebServiceProxyHelper webServiceProxyHelper;\n+\n+  /**\n+   * Constructs an instance of WebServiceProxyHelper.\n+   */\n+  public AdminDistributionHelper() {\n+    webServiceProxyHelper = new WebServiceProxyHelper();\n+  }\n+\n+  /**\n+   * @param webServiceProxyHelper The instance of webServiceProxyHelper to use\n+   */\n+  public AdminDistributionHelper(WebServiceProxyHelper webServiceProxyHelper) {\n+    this.webServiceProxyHelper = webServiceProxyHelper;\n+  }\n+\n+  /**\n+   * @param targetHCID the targetHCID\n+   * @return NhinTargetSystemType\n+   */\n+  public NhinTargetSystemType createNhinTargetSystemType(String targetHCID) {\n+    if (NullChecker.isNotNullish(targetHCID)) {\n+      HomeCommunityType hc = new HomeCommunityType();\n+      hc.setHomeCommunityId(targetHCID);\n+      return createNhinTargetSystemType(hc);\n+    } else {\n+      LOG.error(\"Target ID is null\");\n     }\n \n-    /**\n-     * @param webServiceProxyHelper The instance of webServiceProxyHelper to use\n-     */\n-    public AdminDistributionHelper(WebServiceProxyHelper webServiceProxyHelper) {\n-        this.webServiceProxyHelper = webServiceProxyHelper;\n+    return null;\n+  }\n+\n+  /**\n+   * @param hc HomeCommunityType\n+   * @return NhinTargetSystemType\n+   */\n+  public NhinTargetSystemType createNhinTargetSystemType(HomeCommunityType hc) {\n+    NhinTargetSystemType result = new NhinTargetSystemType();\n+    result.setHomeCommunity(hc);\n+\n+    return result;\n+  }\n+\n+  /**\n+   * @return The Local HCID\n+   */\n+  public String getLocalCommunityId() {\n+    return readStringGatewayProperty(NhincConstants.HOME_COMMUNITY_ID_PROPERTY);\n+  }\n+\n+  /**\n+   * @param targetHCID   the targetHCID\n+   * @param targetSystem the target system\n+   * @param apiLevel     which gateway/spec version to use\n+   * @return the url\n+   */\n+  public String getUrl(String targetHCID, String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n+    LOG.debug(\"begin getUrl targetHCID/targetSystem: \" + targetHCID + \" / \" + targetSystem);\n+\n+    NhinTargetSystemType ts = createNhinTargetSystemType(targetHCID);\n+    return getUrl(ts, targetSystem, apiLevel);\n+  }\n+\n+  /**\n+   * This method retrieves url of the Nhin targetcommunity.\n+   *\n+   * @param target       The Nhin target Community received.\n+   * @param targetSystem The targetsystem received.\n+   * @param apiLevel     The gateway apiLevel g0 or g1.\n+   * @return url Url of the targetcommunity based on g0 or g1 apiLevel.\n+   */\n+  public String getUrl(NhinTargetSystemType target, String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n+    LOG.debug(\"begin getUrl target/targetSystem: \" + target + \" / \" + targetSystem);\n+    String url = null;\n+\n+    if (target != null) {\n+      try {\n+        url = webServiceProxyHelper.getUrlFromTargetSystemByGatewayAPILevel(target, targetSystem, apiLevel);\n+      } catch (Exception ex) {\n+        LOG.error(\"Error: Failed to retrieve url for service {}: {}\", targetSystem, ex.getLocalizedMessage(),\n+            ex);\n+      }\n+    } else {\n+      LOG.error(\"Target system passed into the proxy is null\");\n     }\n \n-    /**\n-     * @param targetHCID the targetHCID\n-     * @return NhinTargetSystemType\n-     */\n-    public NhinTargetSystemType createNhinTargetSystemType(String targetHCID) {\n-        if (NullChecker.isNotNullish(targetHCID)) {\n-            HomeCommunityType hc = new HomeCommunityType();\n-            hc.setHomeCommunityId(targetHCID);\n-            return createNhinTargetSystemType(hc);\n-        } else {\n-            LOG.error(\"Target ID is null\");\n-        }\n-\n-        return null;\n+    LOG.debug(\"end getUrl target/targetSystem url= \" + url);\n+\n+    return url;\n+  }\n+\n+  /**\n+   * This method retrieves adapterservice url for AdminDist..\n+   *\n+   * @param adapterServcice The name of AdapterService in internalconnectionInfo.xml.\n+   * @param adapterApiLevel The adapter apiLevel a0 or a1.\n+   * @return adapter url from internalconnectioninfo.xml.\n+   */\n+  public String getAdapterUrl(String adapterServcice, NhincConstants.ADAPTER_API_LEVEL adapterApiLevel) {\n+    try {\n+      return InternalExchangeManager.getInstance().getEndpointURL(adapterServcice, adapterApiLevel);\n+    } catch (ExchangeManagerException ex) {\n+      LOG.error(\"Error: Failed to retrieve url for service {}: {}\",\n+          NhincConstants.ADAPTER_ADMIN_DIST_SECURED_SERVICE_NAME, ex.getLocalizedMessage(), ex);\n     }\n \n-    /**\n-     * @param hc HomeCommunityType\n-     * @return NhinTargetSystemType\n-     */\n-    public NhinTargetSystemType createNhinTargetSystemType(HomeCommunityType hc) {\n-        NhinTargetSystemType result = new NhinTargetSystemType();\n-        result.setHomeCommunity(hc);\n-\n-        return result;\n+    return null;\n+  }\n+\n+  /**\n+   * This method read pasased in property value from gateway.property and returns boolean.\n+   *\n+   * @param propertyName The Property name passed in to read property value from gateway.properties.\n+   * @return true or false value from gateway.properties for that specific property.\n+   */\n+  public boolean readBooleanGatewayProperty(String propertyName) {\n+    boolean result = false;\n+    try {\n+      result = PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n+          propertyName);\n+    } catch (PropertyAccessException ex) {\n+      LOG.error(\"Error: Failed to retrieve {} from property file {}: \", propertyName,\n+          NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n     }\n-\n-    /**\n-     * @return The Local HCID\n-     */\n-    public String getLocalCommunityId() {\n-        return readStringGatewayProperty(NhincConstants.HOME_COMMUNITY_ID_PROPERTY);\n-    }\n-\n-    /**\n-     * @param targetHCID the targetHCID\n-     * @param targetSystem the target system\n-     * @param apiLevel which gateway/spec version to use\n-     * @return the url\n-     */\n-    public String getUrl(String targetHCID, String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n-        LOG.debug(\"begin getUrl targetHCID/targetSystem: \" + targetHCID + \" / \" + targetSystem);\n-\n-        NhinTargetSystemType ts = createNhinTargetSystemType(targetHCID);\n-        return getUrl(ts, targetSystem, apiLevel);\n-    }\n-\n-    /**\n-     * This method retrieves url of the Nhin targetcommunity.\n-     *\n-     * @param target The Nhin target Community received.\n-     * @param targetSystem The targetsystem received.\n-     * @param apiLevel The gateway apiLevel g0 or g1.\n-     * @return url Url of the targetcommunity based on g0 or g1 apiLevel.\n-     */\n-    public String getUrl(NhinTargetSystemType target, String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n-        LOG.debug(\"begin getUrl target/targetSystem: \" + target + \" / \" + targetSystem);\n-        String url = null;\n-\n-        if (target != null) {\n-            try {\n-                url = webServiceProxyHelper.getUrlFromTargetSystemByGatewayAPILevel(target, targetSystem, apiLevel);\n-            } catch (Exception ex) {\n-                LOG.error(\"Error: Failed to retrieve url for service {}: {}\", targetSystem, ex.getLocalizedMessage(),\n-                    ex);\n-            }\n-        } else {\n-            LOG.error(\"Target system passed into the proxy is null\");\n-        }\n-\n-        LOG.debug(\"end getUrl target/targetSystem url= \" + url);\n-\n-        return url;\n-    }\n-\n-    /**\n-     * This method retrieves adapterservice url for AdminDist..\n-     *\n-     * @param adapterServcice The name of AdapterService in internalconnectionInfo.xml.\n-     * @param adapterApiLevel The adapter apiLevel a0 or a1.\n-     * @return adapter url from internalconnectioninfo.xml.\n-     */\n-    public String getAdapterUrl(String adapterServcice, NhincConstants.ADAPTER_API_LEVEL adapterApiLevel) {\n-        try {\n-            return InternalExchangeManager.getInstance().getEndpointURL(adapterServcice, adapterApiLevel);\n-        } catch (ExchangeManagerException ex) {\n-            LOG.error(\"Error: Failed to retrieve url for service {}: {}\",\n-                NhincConstants.ADAPTER_ADMIN_DIST_SECURED_SERVICE_NAME, ex.getLocalizedMessage(), ex);\n-        }\n-\n-        return null;\n-    }\n-\n-    /**\n-     * This method read pasased in property value from gateway.property and returns boolean.\n-     *\n-     * @param propertyName The Property name passed in to read property value from gateway.properties.\n-     * @return true or false value from gateway.properties for that specific property.\n-     */\n-    public boolean readBooleanGatewayProperty(String propertyName) {\n-        boolean result = false;\n-        try {\n-            result = PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                propertyName);\n-        } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve {} from property file {}: \", propertyName,\n-                NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n-        }\n-        return result;\n-    }\n-\n-    /**\n-     * This method read PropertyName from gateway.properties.\n-     *\n-     * @param propertyName Property received to read from gateway.properties.\n-     * @return PropertyName from gateway.properties.\n-     */\n-    public String readStringGatewayProperty(String propertyName) {\n-        String result = \"\";\n-        try {\n-            result = PropertyAccessor.getInstance().getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, propertyName);\n-        } catch (Exception ex) {\n-            LOG.error(\"Unable to retrieve property {} from {}.properties: {}\", propertyName,\n-                NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n-        }\n-        return result;\n-    }\n-\n-    /**\n-     * This method builds NhinTargetSystem for the homeCommunityId passed.\n-     *\n-     * @param homeCommunityId homeCommunityId received.\n-     * @return targetSystem.\n-     */\n-    public NhinTargetSystemType buildHomeCommunity(String homeCommunityId) {\n-        NhinTargetSystemType nhinTargetSystem = new NhinTargetSystemType();\n-        HomeCommunityType homeCommunity = new HomeCommunityType();\n-        homeCommunity.setHomeCommunityId(homeCommunityId);\n-        nhinTargetSystem.setHomeCommunity(homeCommunity);\n-        return nhinTargetSystem;\n+    return result;\n+  }\n+\n+  /**\n+   * This method read PropertyName from gateway.properties.\n+   *\n+   * @param propertyName Property received to read from gateway.properties.\n+   * @return PropertyName from gateway.properties.\n+   */\n+  public String readStringGatewayProperty(String propertyName) {\n+    String result = \"\";\n+    try {\n+      result = PropertyAccessor.getInstance().getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, propertyName);\n+    } catch (Exception ex) {\n+      LOG.error(\"Unable to retrieve property {} from {}.properties: {}\", propertyName,\n+          NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n     }\n+    return result;\n+  }\n+\n+  /**\n+   * This method builds NhinTargetSystem for the homeCommunityId passed.\n+   *\n+   * @param homeCommunityId homeCommunityId received.\n+   * @return targetSystem.\n+   */\n+  public NhinTargetSystemType buildHomeCommunity(String homeCommunityId) {\n+    NhinTargetSystemType nhinTargetSystem = new NhinTargetSystemType();\n+    HomeCommunityType homeCommunity = new HomeCommunityType();\n+    homeCommunity.setHomeCommunityId(homeCommunityId);\n+    nhinTargetSystem.setHomeCommunity(homeCommunity);\n+    return nhinTargetSystem;\n+  }\n }\n",
            "diff_size": 250
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1087/AdminDistributionHelper.java\nindex ee8e3eb60ed..4a3749d7d4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1087/AdminDistributionHelper.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n@@ -70,7 +71,8 @@ public class AdminDistributionHelper {\n         if (NullChecker.isNotNullish(targetHCID)) {\n             HomeCommunityType hc = new HomeCommunityType();\n             hc.setHomeCommunityId(targetHCID);\n-            return createNhinTargetSystemType(hc);\n+\n+return createNhinTargetSystemType(hc);\n         } else {\n             LOG.error(\"Target ID is null\");\n         }\n@@ -106,7 +108,8 @@ public class AdminDistributionHelper {\n         LOG.debug(\"begin getUrl targetHCID/targetSystem: \" + targetHCID + \" / \" + targetSystem);\n \n         NhinTargetSystemType ts = createNhinTargetSystemType(targetHCID);\n-        return getUrl(ts, targetSystem, apiLevel);\n+\n+return getUrl(ts, targetSystem, apiLevel);\n     }\n \n     /**\n@@ -120,14 +123,12 @@ public class AdminDistributionHelper {\n     public String getUrl(NhinTargetSystemType target, String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n         LOG.debug(\"begin getUrl target/targetSystem: \" + target + \" / \" + targetSystem);\n         String url = null;\n-\n-        if (target != null) {\n+if (target != null) {\n             try {\n                 url = webServiceProxyHelper.getUrlFromTargetSystemByGatewayAPILevel(target, targetSystem, apiLevel);\n             } catch (Exception ex) {\n-                LOG.error(\"Error: Failed to retrieve url for service {}: {}\", targetSystem, ex.getLocalizedMessage(),\n-                    ex);\n-            }\n+                LOG.error(\"Error: Failed to retrieve url for service {}: {}\", targetSystem, ex.getLocalizedMessage(), ex);\n+    }\n         } else {\n             LOG.error(\"Target system passed into the proxy is null\");\n         }\n@@ -148,9 +149,8 @@ public class AdminDistributionHelper {\n         try {\n             return InternalExchangeManager.getInstance().getEndpointURL(adapterServcice, adapterApiLevel);\n         } catch (ExchangeManagerException ex) {\n-            LOG.error(\"Error: Failed to retrieve url for service {}: {}\",\n-                NhincConstants.ADAPTER_ADMIN_DIST_SECURED_SERVICE_NAME, ex.getLocalizedMessage(), ex);\n-        }\n+            LOG.error(\"Error: Failed to retrieve url for service {}: {}\", NhincConstants.ADAPTER_ADMIN_DIST_SECURED_SERVICE_NAME, ex.getLocalizedMessage(), ex);\n+    }\n \n         return null;\n     }\n@@ -164,12 +164,12 @@ public class AdminDistributionHelper {\n     public boolean readBooleanGatewayProperty(String propertyName) {\n         boolean result = false;\n         try {\n-            result = PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                propertyName);\n-        } catch (PropertyAccessException ex) {\n+            result = PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE, propertyName);\n+    } catch (PropertyAccessException ex) {\n             LOG.error(\"Error: Failed to retrieve {} from property file {}: \", propertyName,\n                 NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n-        }\n+\n+    }\n         return result;\n     }\n \n@@ -186,7 +186,8 @@ public class AdminDistributionHelper {\n         } catch (Exception ex) {\n             LOG.error(\"Unable to retrieve property {} from {}.properties: {}\", propertyName,\n                 NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n-        }\n+\n+    }\n         return result;\n     }\n \n@@ -201,6 +202,7 @@ public class AdminDistributionHelper {\n         HomeCommunityType homeCommunity = new HomeCommunityType();\n         homeCommunity.setHomeCommunityId(homeCommunityId);\n         nhinTargetSystem.setHomeCommunity(homeCommunity);\n-        return nhinTargetSystem;\n+\n+return nhinTargetSystem;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "77",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1087/AdminDistributionHelper.java\nindex ee8e3eb60ed..295e7ba07ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1087/AdminDistributionHelper.java\n@@ -43,6 +43,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author dunnek\n  */\n+\n+\n public class AdminDistributionHelper {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdminDistributionHelper.class);\n@@ -51,6 +53,7 @@ public class AdminDistributionHelper {\n     /**\n      * Constructs an instance of WebServiceProxyHelper.\n      */\n+\n     public AdminDistributionHelper() {\n         webServiceProxyHelper = new WebServiceProxyHelper();\n     }\n@@ -58,6 +61,8 @@ public class AdminDistributionHelper {\n     /**\n      * @param webServiceProxyHelper The instance of webServiceProxyHelper to use\n      */\n+\n+\n     public AdminDistributionHelper(WebServiceProxyHelper webServiceProxyHelper) {\n         this.webServiceProxyHelper = webServiceProxyHelper;\n     }\n@@ -66,15 +71,19 @@ public class AdminDistributionHelper {\n      * @param targetHCID the targetHCID\n      * @return NhinTargetSystemType\n      */\n+\n+\n     public NhinTargetSystemType createNhinTargetSystemType(String targetHCID) {\n-        if (NullChecker.isNotNullish(targetHCID)) {\n+        if(NullChecker.isNotNullish(targetHCID)) {\n             HomeCommunityType hc = new HomeCommunityType();\n             hc.setHomeCommunityId(targetHCID);\n             return createNhinTargetSystemType(hc);\n-        } else {\n-            LOG.error(\"Target ID is null\");\n         }\n \n+\n+else {\n+            LOG.error(\"Target ID is null\");\n+        }\n         return null;\n     }\n \n@@ -82,16 +91,19 @@ public class AdminDistributionHelper {\n      * @param hc HomeCommunityType\n      * @return NhinTargetSystemType\n      */\n+\n+\n     public NhinTargetSystemType createNhinTargetSystemType(HomeCommunityType hc) {\n         NhinTargetSystemType result = new NhinTargetSystemType();\n         result.setHomeCommunity(hc);\n-\n         return result;\n     }\n \n     /**\n      * @return The Local HCID\n      */\n+\n+\n     public String getLocalCommunityId() {\n         return readStringGatewayProperty(NhincConstants.HOME_COMMUNITY_ID_PROPERTY);\n     }\n@@ -102,9 +114,11 @@ public class AdminDistributionHelper {\n      * @param apiLevel which gateway/spec version to use\n      * @return the url\n      */\n-    public String getUrl(String targetHCID, String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n-        LOG.debug(\"begin getUrl targetHCID/targetSystem: \" + targetHCID + \" / \" + targetSystem);\n \n+\n+    public String getUrl(String targetHCID,\n+        String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n+        LOG.debug(\"begin getUrl targetHCID/targetSystem: \" + targetHCID + \" / \" + targetSystem);\n         NhinTargetSystemType ts = createNhinTargetSystemType(targetHCID);\n         return getUrl(ts, targetSystem, apiLevel);\n     }\n@@ -117,23 +131,25 @@ public class AdminDistributionHelper {\n      * @param apiLevel The gateway apiLevel g0 or g1.\n      * @return url Url of the targetcommunity based on g0 or g1 apiLevel.\n      */\n-    public String getUrl(NhinTargetSystemType target, String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n+\n+\n+    public String getUrl(NhinTargetSystemType target,\n+        String targetSystem, GATEWAY_API_LEVEL apiLevel) {\n         LOG.debug(\"begin getUrl target/targetSystem: \" + target + \" / \" + targetSystem);\n         String url = null;\n-\n-        if (target != null) {\n+        if(target != null) {\n             try {\n                 url = webServiceProxyHelper.getUrlFromTargetSystemByGatewayAPILevel(target, targetSystem, apiLevel);\n             } catch (Exception ex) {\n-                LOG.error(\"Error: Failed to retrieve url for service {}: {}\", targetSystem, ex.getLocalizedMessage(),\n-                    ex);\n+                LOG.error(\"Error: Failed to retrieve url for service {}: {}\", targetSystem, ex.getLocalizedMessage(), ex);\n             }\n-        } else {\n-            LOG.error(\"Target system passed into the proxy is null\");\n         }\n \n-        LOG.debug(\"end getUrl target/targetSystem url= \" + url);\n \n+else {\n+            LOG.error(\"Target system passed into the proxy is null\");\n+        }\n+        LOG.debug(\"end getUrl target/targetSystem url= \" + url);\n         return url;\n     }\n \n@@ -144,14 +160,14 @@ public class AdminDistributionHelper {\n      * @param adapterApiLevel The adapter apiLevel a0 or a1.\n      * @return adapter url from internalconnectioninfo.xml.\n      */\n+\n+\n     public String getAdapterUrl(String adapterServcice, NhincConstants.ADAPTER_API_LEVEL adapterApiLevel) {\n         try {\n             return InternalExchangeManager.getInstance().getEndpointURL(adapterServcice, adapterApiLevel);\n         } catch (ExchangeManagerException ex) {\n-            LOG.error(\"Error: Failed to retrieve url for service {}: {}\",\n-                NhincConstants.ADAPTER_ADMIN_DIST_SECURED_SERVICE_NAME, ex.getLocalizedMessage(), ex);\n+            LOG.error(\"Error: Failed to retrieve url for service {}: {}\", NhincConstants.ADAPTER_ADMIN_DIST_SECURED_SERVICE_NAME, ex.getLocalizedMessage(), ex);\n         }\n-\n         return null;\n     }\n \n@@ -161,14 +177,14 @@ public class AdminDistributionHelper {\n      * @param propertyName The Property name passed in to read property value from gateway.properties.\n      * @return true or false value from gateway.properties for that specific property.\n      */\n+\n+\n     public boolean readBooleanGatewayProperty(String propertyName) {\n         boolean result = false;\n         try {\n-            result = PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                propertyName);\n+            result = PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE, propertyName);\n         } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve {} from property file {}: \", propertyName,\n-                NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n+            LOG.error(\"Error: Failed to retrieve {} from property file {}: \", propertyName, NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n         }\n         return result;\n     }\n@@ -179,13 +195,14 @@ public class AdminDistributionHelper {\n      * @param propertyName Property received to read from gateway.properties.\n      * @return PropertyName from gateway.properties.\n      */\n+\n+\n     public String readStringGatewayProperty(String propertyName) {\n         String result = \"\";\n         try {\n             result = PropertyAccessor.getInstance().getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, propertyName);\n         } catch (Exception ex) {\n-            LOG.error(\"Unable to retrieve property {} from {}.properties: {}\", propertyName,\n-                NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n+            LOG.error(\"Unable to retrieve property {} from {}.properties: {}\", propertyName, NhincConstants.GATEWAY_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n         }\n         return result;\n     }\n@@ -196,6 +213,8 @@ public class AdminDistributionHelper {\n      * @param homeCommunityId homeCommunityId received.\n      * @return targetSystem.\n      */\n+\n+\n     public NhinTargetSystemType buildHomeCommunity(String homeCommunityId) {\n         NhinTargetSystemType nhinTargetSystem = new NhinTargetSystemType();\n         HomeCommunityType homeCommunity = new HomeCommunityType();\n@@ -203,4 +222,5 @@ public class AdminDistributionHelper {\n         nhinTargetSystem.setHomeCommunity(homeCommunity);\n         return nhinTargetSystem;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1087/AdminDistributionHelper.java\nindex ee8e3eb60ed..634dcbe7802 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1087/AdminDistributionHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1087/AdminDistributionHelper.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
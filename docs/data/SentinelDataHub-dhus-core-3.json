{
    "project_name": "SentinelDataHub-dhus-core",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "177",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 86).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   public String toString()\n   {\n      return \"NetworkUsage: \" + id.toString() + \"(user: \" + user + \" date: \"+date+\")\";\n   }\n\n} // End NetworkUsage class",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler/3/NetworkUsage.java\nindex 118b3bd443d..bac4814ccea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler/3/NetworkUsage.java\n@@ -174,7 +174,8 @@ public class NetworkUsage implements Serializable\n    @Override\n    public String toString()\n    {\n-      return \"NetworkUsage: \" + id.toString() + \"(user: \" + user + \" date: \"+date+\")\";\n-   }\n+      return \"NetworkUsage: \" + id.toString() + \"(user: \" + user +\n+            \" date: \"+date+\")\";\n+    }\n \n-} // End NetworkUsage class\n+ } // End NetworkUsage class\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/3/NetworkUsage.java\nindex 118b3bd443d..d5e2c4657ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/3/NetworkUsage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package fr.gael.dhus.database.object;\n \n import java.io.Serializable;\n@@ -41,140 +42,141 @@ import org.hibernate.annotations.OnDeleteAction;\n /**\n  * This class denotes an download or upload transfer that a given user has\n  * experienced at a given date.\n- * \n+ * <p>\n  * TODO This class should be moved to fr.gael.dhus.database.object package\n  */\n @Entity\n-@Table (name = \"NETWORK_USAGE\")\n+@Table(name = \"NETWORK_USAGE\")\n public class NetworkUsage implements Serializable\n {\n-   private static final long serialVersionUID = 1L;\n-\n-   /**\n-    * The identifier of this network usage record.\n-    */\n-   @Id\n-   @GeneratedValue (strategy = GenerationType.AUTO)\n-   @Column (name = \"ID\", nullable = false)\n-   private Long id;\n-\n-   /**\n-    * The user associated to this network usage record.\n-    */\n-   @OneToOne (fetch=FetchType.EAGER)\n-   @JoinColumn(name = \"USER_UUID\")\n-   @OnDelete(action = OnDeleteAction.CASCADE)\n-   private User user;\n-\n-   /**\n-    * The date at witch the network usage occurred.\n-    */\n-   @Temporal (TemporalType.TIMESTAMP)\n-   @Column (name = \"DATE\", nullable = false)\n-   private Date date;\n-\n-   /**\n-    * True if the transfer denoted by this class is a download (from server\n-    * to client). False otherwise.\n-    */\n-   @Column (name = \"IS_DOWNLOAD\", nullable = false,\n-            columnDefinition = \"BOOLEAN\")\n-   private boolean isDownload;\n-\n-   /**\n-    * The size of the transfer in bytes. The size shall correspond to the\n-    * number of bytes actually transferred and not the one that were\n-    * intended to be transferred e.g. an interrupted download should record\n-    * the bytes transferred and not the total size of the object of he\n-    * transfer.\n-    */\n-   @Column (name = \"SIZE\", nullable = false)\n-   private Long size;\n-\n-   /**\n-    * @return the id\n-    */\n-   public Long getId ()\n-   {\n-      return id;\n-   }\n-\n-   /**\n-    * @param id the id to set\n-    */\n-   public void setId (Long id)\n-   {\n-      this.id = id;\n-   }\n-\n-   /**\n-    * @return the user\n-    */\n-   public User getUser ()\n-   {\n-      return user;\n-   }\n-\n-   /**\n-    * @param user the user to set\n-    */\n-   public void setUser (User user)\n-   {\n-      this.user = user;\n-   }\n-\n-   /**\n-    * @return the date\n-    */\n-   public Date getDate ()\n-   {\n-      return date;\n-   }\n-\n-   /**\n-    * @param date the date to set\n-    */\n-   public void setDate (Date date)\n-   {\n-      this.date = date;\n-   }\n-\n-   /**\n-    * @return the isDownload\n-    */\n-   public Boolean getIsDownload ()\n-   {\n-      return isDownload;\n-   }\n-\n-   /**\n-    * @param is_download the isDownload to set\n-    */\n-   public void setIsDownload (Boolean is_download)\n-   {\n-      this.isDownload = is_download;\n-   }\n-\n-   /**\n-    * @return the size\n-    */\n-   public Long getSize ()\n-   {\n-      return size;\n-   }\n-\n-   /**\n-    * @param size the size to set\n-    */\n-   public void setSize (Long size)\n-   {\n-      this.size = size;\n-   }\n-\n-   @Override\n-   public String toString()\n-   {\n-      return \"NetworkUsage: \" + id.toString() + \"(user: \" + user + \" date: \"+date+\")\";\n-   }\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * The identifier of this network usage record.\n+     */\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    @Column(name = \"ID\", nullable = false)\n+    private Long id;\n+\n+    /**\n+     * The user associated to this network usage record.\n+     */\n+    @OneToOne(fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"USER_UUID\")\n+    @OnDelete(action = OnDeleteAction.CASCADE)\n+    private User user;\n+\n+    /**\n+     * The date at witch the network usage occurred.\n+     */\n+    @Temporal(TemporalType.TIMESTAMP)\n+    @Column(name = \"DATE\", nullable = false)\n+    private Date date;\n+\n+    /**\n+     * True if the transfer denoted by this class is a download (from server\n+     * to client). False otherwise.\n+     */\n+    @Column(name = \"IS_DOWNLOAD\", nullable = false,\n+        columnDefinition = \"BOOLEAN\")\n+    private boolean isDownload;\n+\n+    /**\n+     * The size of the transfer in bytes. The size shall correspond to the\n+     * number of bytes actually transferred and not the one that were\n+     * intended to be transferred e.g. an interrupted download should record\n+     * the bytes transferred and not the total size of the object of he\n+     * transfer.\n+     */\n+    @Column(name = \"SIZE\", nullable = false)\n+    private Long size;\n+\n+    /**\n+     * @return the id\n+     */\n+    public Long getId()\n+    {\n+        return id;\n+    }\n+\n+    /**\n+     * @param id the id to set\n+     */\n+    public void setId(Long id)\n+    {\n+        this.id = id;\n+    }\n+\n+    /**\n+     * @return the user\n+     */\n+    public User getUser()\n+    {\n+        return user;\n+    }\n+\n+    /**\n+     * @param user the user to set\n+     */\n+    public void setUser(User user)\n+    {\n+        this.user = user;\n+    }\n+\n+    /**\n+     * @return the date\n+     */\n+    public Date getDate()\n+    {\n+        return date;\n+    }\n+\n+    /**\n+     * @param date the date to set\n+     */\n+    public void setDate(Date date)\n+    {\n+        this.date = date;\n+    }\n+\n+    /**\n+     * @return the isDownload\n+     */\n+    public Boolean getIsDownload()\n+    {\n+        return isDownload;\n+    }\n+\n+    /**\n+     * @param is_download the isDownload to set\n+     */\n+    public void setIsDownload(Boolean is_download)\n+    {\n+        this.isDownload = is_download;\n+    }\n+\n+    /**\n+     * @return the size\n+     */\n+    public Long getSize()\n+    {\n+        return size;\n+    }\n+\n+    /**\n+     * @param size the size to set\n+     */\n+    public void setSize(Long size)\n+    {\n+        this.size = size;\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+        return \"NetworkUsage: \" + id.toString() + \"(user: \" + user + \" date: \" +\n+            date + \")\";\n+    }\n \n } // End NetworkUsage class\n",
            "diff_size": 132
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/3/NetworkUsage.java\nindex 118b3bd443d..0b0b319bc7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/3/NetworkUsage.java\n@@ -21,7 +21,6 @@ package fr.gael.dhus.database.object;\n \n import java.io.Serializable;\n import java.util.Date;\n-\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n@@ -33,7 +32,6 @@ import javax.persistence.OneToOne;\n import javax.persistence.Table;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n-\n import org.hibernate.annotations.OnDelete;\n import org.hibernate.annotations.OnDeleteAction;\n \n@@ -44,6 +42,7 @@ import org.hibernate.annotations.OnDeleteAction;\n  * \n  * TODO This class should be moved to fr.gael.dhus.database.object package\n  */\n+\n @Entity\n @Table (name = \"NETWORK_USAGE\")\n public class NetworkUsage implements Serializable\n@@ -53,6 +52,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * The identifier of this network usage record.\n     */\n+\n    @Id\n    @GeneratedValue (strategy = GenerationType.AUTO)\n    @Column (name = \"ID\", nullable = false)\n@@ -61,14 +61,16 @@ public class NetworkUsage implements Serializable\n    /**\n     * The user associated to this network usage record.\n     */\n-   @OneToOne (fetch=FetchType.EAGER)\n-   @JoinColumn(name = \"USER_UUID\")\n-   @OnDelete(action = OnDeleteAction.CASCADE)\n+\n+   @OneToOne (fetch = FetchType.EAGER)\n+   @JoinColumn (name = \"USER_UUID\")\n+   @OnDelete (action = OnDeleteAction.CASCADE)\n    private User user;\n \n    /**\n     * The date at witch the network usage occurred.\n     */\n+\n    @Temporal (TemporalType.TIMESTAMP)\n    @Column (name = \"DATE\", nullable = false)\n    private Date date;\n@@ -77,8 +79,8 @@ public class NetworkUsage implements Serializable\n     * True if the transfer denoted by this class is a download (from server\n     * to client). False otherwise.\n     */\n-   @Column (name = \"IS_DOWNLOAD\", nullable = false,\n-            columnDefinition = \"BOOLEAN\")\n+\n+   @Column (name = \"IS_DOWNLOAD\", nullable = false, columnDefinition = \"BOOLEAN\")\n    private boolean isDownload;\n \n    /**\n@@ -88,6 +90,7 @@ public class NetworkUsage implements Serializable\n     * the bytes transferred and not the total size of the object of he\n     * transfer.\n     */\n+\n    @Column (name = \"SIZE\", nullable = false)\n    private Long size;\n \n@@ -102,6 +105,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @param id the id to set\n     */\n+\n    public void setId (Long id)\n    {\n       this.id = id;\n@@ -110,6 +114,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @return the user\n     */\n+\n    public User getUser ()\n    {\n       return user;\n@@ -118,6 +123,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @param user the user to set\n     */\n+\n    public void setUser (User user)\n    {\n       this.user = user;\n@@ -126,6 +132,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @return the date\n     */\n+\n    public Date getDate ()\n    {\n       return date;\n@@ -134,6 +141,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @param date the date to set\n     */\n+\n    public void setDate (Date date)\n    {\n       this.date = date;\n@@ -142,6 +150,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @return the isDownload\n     */\n+\n    public Boolean getIsDownload ()\n    {\n       return isDownload;\n@@ -150,6 +159,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @param is_download the isDownload to set\n     */\n+\n    public void setIsDownload (Boolean is_download)\n    {\n       this.isDownload = is_download;\n@@ -158,6 +168,7 @@ public class NetworkUsage implements Serializable\n    /**\n     * @return the size\n     */\n+\n    public Long getSize ()\n    {\n       return size;\n@@ -166,15 +177,21 @@ public class NetworkUsage implements Serializable\n    /**\n     * @param size the size to set\n     */\n+\n    public void setSize (Long size)\n    {\n       this.size = size;\n    }\n \n    @Override\n-   public String toString()\n+   public String toString ()\n    {\n-      return \"NetworkUsage: \" + id.toString() + \"(user: \" + user + \" date: \"+date+\")\";\n+      return \"NetworkUsage: \" +\n+      id.toString () +\n+      \"(user: \" +\n+      user +\n+      \" date: \" +\n+             date +\n+                \")\";\n    }\n-\n-} // End NetworkUsage class\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_three_grams/3/NetworkUsage.java\nindex 118b3bd443d..bac4814ccea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/3/NetworkUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_three_grams/3/NetworkUsage.java\n@@ -174,7 +174,8 @@ public class NetworkUsage implements Serializable\n    @Override\n    public String toString()\n    {\n-      return \"NetworkUsage: \" + id.toString() + \"(user: \" + user + \" date: \"+date+\")\";\n-   }\n+      return \"NetworkUsage: \" + id.toString() + \"(user: \" + user +\n+            \" date: \"+date+\")\";\n+    }\n \n-} // End NetworkUsage class\n+ } // End NetworkUsage class\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
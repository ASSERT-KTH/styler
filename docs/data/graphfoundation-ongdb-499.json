{
    "project_name": "graphfoundation-ongdb",
    "error_id": "499",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/499/AbstractContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/499/AbstractContextImpl.java\nindex f2d33c89590..cdc2db738e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/499/AbstractContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/499/AbstractContextImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context;\n \n import java.net.URI;\n@@ -41,94 +42,94 @@ import static org.neo4j.helpers.collection.Iterables.asList;\n  * various generally useful information, and provides access to logging.\n  */\n class AbstractContextImpl\n-        implements TimeoutsContext, LoggingContext, ConfigurationContext\n+    implements TimeoutsContext, LoggingContext, ConfigurationContext\n {\n-    protected final org.neo4j.cluster.InstanceId me;\n-    protected final CommonContextState commonState;\n-    protected final LogProvider logProvider;\n-    protected final Timeouts timeouts;\n-\n-    AbstractContextImpl( InstanceId me, CommonContextState commonState,\n-            LogProvider logProvider, Timeouts timeouts )\n-    {\n-        this.me = me;\n-        this.commonState = commonState;\n-        this.logProvider = logProvider;\n-        this.timeouts = timeouts;\n-    }\n-\n-    // LoggingContext\n-    @Override\n-    public Log getLog( Class loggingClass )\n-    {\n-        return logProvider.getLog( loggingClass );\n-    }\n-\n-    // TimeoutsContext\n-    @Override\n-    public void setTimeout( Object key, Message<? extends MessageType> timeoutMessage )\n-    {\n-        timeouts.setTimeout( key, timeoutMessage );\n-    }\n-\n-    @Override\n-    public long getTimeoutFor( Message<? extends MessageType> timeoutMessage )\n-    {\n-        return timeouts.getTimeoutFor( timeoutMessage );\n-    }\n-\n-    @Override\n-    public Message<? extends MessageType> cancelTimeout( Object key )\n-    {\n-        return timeouts.cancelTimeout( key );\n-    }\n-\n-    // ConfigurationContext\n-    @Override\n-    public List<URI> getMemberURIs()\n-    {\n-        return asList( commonState.configuration().getMemberURIs() );\n-    }\n-\n-    @Override\n-    public org.neo4j.cluster.InstanceId getMyId()\n-    {\n-        return me;\n-    }\n-\n-    @Override\n-    public URI boundAt()\n-    {\n-        return commonState.boundAt();\n-    }\n-\n-    @Override\n-    public Map<InstanceId, URI> getMembers()\n-    {\n-        return commonState.configuration().getMembers();\n-    }\n-\n-    @Override\n-    public InstanceId getCoordinator()\n-    {\n-        return commonState.configuration().getElected( ClusterConfiguration.COORDINATOR );\n-    }\n-\n-    @Override\n-    public URI getUriForId( InstanceId node )\n-    {\n-        return commonState.configuration().getUriForId( node );\n-    }\n-\n-    @Override\n-    public InstanceId getIdForUri( URI uri )\n-    {\n-        return commonState.configuration().getIdForUri( uri );\n-    }\n-\n-    @Override\n-    public synchronized boolean isMe( InstanceId server )\n-    {\n-        return me.equals( server );\n-    }\n+  protected final org.neo4j.cluster.InstanceId me;\n+  protected final CommonContextState commonState;\n+  protected final LogProvider logProvider;\n+  protected final Timeouts timeouts;\n+\n+  AbstractContextImpl(InstanceId me, CommonContextState commonState,\n+                      LogProvider logProvider, Timeouts timeouts)\n+  {\n+    this.me = me;\n+    this.commonState = commonState;\n+    this.logProvider = logProvider;\n+    this.timeouts = timeouts;\n+  }\n+\n+  // LoggingContext\n+  @Override\n+  public Log getLog(Class loggingClass)\n+  {\n+    return logProvider.getLog(loggingClass);\n+  }\n+\n+  // TimeoutsContext\n+  @Override\n+  public void setTimeout(Object key, Message<? extends MessageType> timeoutMessage)\n+  {\n+    timeouts.setTimeout(key, timeoutMessage);\n+  }\n+\n+  @Override\n+  public long getTimeoutFor(Message<? extends MessageType> timeoutMessage)\n+  {\n+    return timeouts.getTimeoutFor(timeoutMessage);\n+  }\n+\n+  @Override\n+  public Message<? extends MessageType> cancelTimeout(Object key)\n+  {\n+    return timeouts.cancelTimeout(key);\n+  }\n+\n+  // ConfigurationContext\n+  @Override\n+  public List<URI> getMemberURIs()\n+  {\n+    return asList(commonState.configuration().getMemberURIs());\n+  }\n+\n+  @Override\n+  public org.neo4j.cluster.InstanceId getMyId()\n+  {\n+    return me;\n+  }\n+\n+  @Override\n+  public URI boundAt()\n+  {\n+    return commonState.boundAt();\n+  }\n+\n+  @Override\n+  public Map<InstanceId, URI> getMembers()\n+  {\n+    return commonState.configuration().getMembers();\n+  }\n+\n+  @Override\n+  public InstanceId getCoordinator()\n+  {\n+    return commonState.configuration().getElected(ClusterConfiguration.COORDINATOR);\n+  }\n+\n+  @Override\n+  public URI getUriForId(InstanceId node)\n+  {\n+    return commonState.configuration().getUriForId(node);\n+  }\n+\n+  @Override\n+  public InstanceId getIdForUri(URI uri)\n+  {\n+    return commonState.configuration().getIdForUri(uri);\n+  }\n+\n+  @Override\n+  public synchronized boolean isMe(InstanceId server)\n+  {\n+    return me.equals(server);\n+  }\n }\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
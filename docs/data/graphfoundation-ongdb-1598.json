{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1598",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "281",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "320",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "409",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "420",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "529",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "560",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "560",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "575",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "575",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "575",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "592",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "632",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "688",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "688",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "713",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "715",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "739",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "739",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "753",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "753",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1598/FileUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1598/FileUtils.java\nindex 9f892fb3fc7..e63d730bc19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1598/FileUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1598/FileUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.fs;\n \n import org.apache.commons.lang3.SystemUtils;\n@@ -67,719 +68,706 @@ import static java.nio.file.StandardOpenOption.WRITE;\n \n public class FileUtils\n {\n-    private static final int WINDOWS_RETRY_COUNT = 5;\n+  private static final int WINDOWS_RETRY_COUNT = 5;\n \n-    private FileUtils()\n-    {\n-        throw new AssertionError();\n-    }\n+  private FileUtils()\n+  {\n+    throw new AssertionError();\n+  }\n \n-    public static void deleteRecursively( File directory ) throws IOException\n+  public static void deleteRecursively(File directory) throws IOException\n+  {\n+    if (!directory.exists())\n     {\n-        if ( !directory.exists() )\n-        {\n-            return;\n-        }\n-        Path path = directory.toPath();\n-        deletePathRecursively( path );\n-    }\n-\n-    public static void deletePathRecursively( Path path ) throws IOException\n+      return;\n+    }\n+    Path path = directory.toPath();\n+    deletePathRecursively(path);\n+  }\n+\n+  public static void deletePathRecursively(Path path) throws IOException\n+  {\n+    Files.walkFileTree(path, new SimpleFileVisitor<Path>()\n     {\n-        Files.walkFileTree( path, new SimpleFileVisitor<Path>()\n-        {\n-            @Override\n-            public FileVisitResult visitFile( Path file, BasicFileAttributes attrs ) throws IOException\n-            {\n-                deleteFileWithRetries( file, 0 );\n-                return FileVisitResult.CONTINUE;\n-            }\n-\n-            @Override\n-            public FileVisitResult postVisitDirectory( Path dir, IOException e ) throws IOException\n-            {\n-                if ( e != null )\n-                {\n-                    throw e;\n-                }\n-                Files.delete( dir );\n-                return FileVisitResult.CONTINUE;\n-            }\n-        } );\n-    }\n-\n-    public static boolean deleteFile( File file )\n-    {\n-        if ( !file.exists() )\n-        {\n-            return true;\n-        }\n-        int count = 0;\n-        boolean deleted;\n-        do\n-        {\n-            deleted = file.delete();\n-            if ( !deleted )\n-            {\n-                count++;\n-                waitAndThenTriggerGC();\n-            }\n-        }\n-        while ( !deleted && count <= WINDOWS_RETRY_COUNT );\n-        return deleted;\n-    }\n-\n-    /**\n-     * Utility method that moves a file from its current location to the\n-     * new target location. If rename fails (for example if the target is\n-     * another disk) a copy/delete will be performed instead. This is not a rename,\n-     * use {@link #renameFile(File, File, CopyOption...)} instead.\n-     *\n-     * @param toMove The File object to move.\n-     * @param target Target file to move to.\n-     * @throws IOException\n-     */\n-    public static void moveFile( File toMove, File target ) throws IOException\n-    {\n-        if ( !toMove.exists() )\n-        {\n-            throw new FileNotFoundException( \"Source file[\" + toMove.getAbsolutePath()\n-                                             + \"] not found\" );\n-        }\n-        if ( target.exists() )\n-        {\n-            throw new IOException( \"Target file[\" + target.getAbsolutePath()\n-                                   + \"] already exists\" );\n-        }\n-\n-        if ( toMove.renameTo( target ) )\n-        {\n-            return;\n-        }\n-\n-        if ( toMove.isDirectory() )\n-        {\n-            Files.createDirectories( target.toPath() );\n-            copyRecursively( toMove, target );\n-            deleteRecursively( toMove );\n-        }\n-        else\n-        {\n-            copyFile( toMove, target );\n-            deleteFile( toMove );\n-        }\n-    }\n-\n-    /**\n-     * Utility method that moves a file from its current location to the\n-     * provided target directory. If rename fails (for example if the target is\n-     * another disk) a copy/delete will be performed instead. This is not a rename,\n-     * use {@link #renameFile(File, File, CopyOption...)} instead.\n-     *\n-     * @param toMove The File object to move.\n-     * @param targetDirectory the destination directory\n-     * @return the new file, null iff the move was unsuccessful\n-     * @throws IOException\n-     */\n-    public static File moveFileToDirectory( File toMove, File targetDirectory ) throws IOException\n-    {\n-        if ( !targetDirectory.isDirectory() )\n-        {\n-            throw new IllegalArgumentException(\n-                    \"Move target must be a directory, not \" + targetDirectory );\n-        }\n-\n-        File target = new File( targetDirectory, toMove.getName() );\n-        moveFile( toMove, target );\n-        return target;\n+      @Override\n+      public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException\n+      {\n+        deleteFileWithRetries(file, 0);\n+        return FileVisitResult.CONTINUE;\n+      }\n+\n+      @Override\n+      public FileVisitResult postVisitDirectory(Path dir, IOException e) throws IOException\n+      {\n+        if (e != null)\n+        {\n+          throw e;\n+        }\n+        Files.delete(dir);\n+        return FileVisitResult.CONTINUE;\n+      }\n+    });\n+  }\n+\n+  public static boolean deleteFile(File file)\n+  {\n+    if (!file.exists())\n+    {\n+      return true;\n     }\n-\n-    /**\n-     * Utility method that copy a file from its current location to the\n-     * provided target directory.\n-     *\n-     * @param file file that needs to be copied.\n-     * @param targetDirectory the destination directory\n-     * @throws IOException\n-     */\n-    public static void copyFileToDirectory( File file, File targetDirectory ) throws IOException\n+    int count = 0;\n+    boolean deleted;\n+    do\n     {\n-        if ( !targetDirectory.exists() )\n-        {\n-            Files.createDirectories( targetDirectory.toPath() );\n-        }\n-        if ( !targetDirectory.isDirectory() )\n-        {\n-            throw new IllegalArgumentException(\n-                    \"Move target must be a directory, not \" + targetDirectory );\n-        }\n-\n-        File target = new File( targetDirectory, file.getName() );\n-        copyFile( file, target );\n-    }\n-\n-    public static void renameFile( File srcFile, File renameToFile, CopyOption... copyOptions ) throws IOException\n+      deleted = file.delete();\n+      if (!deleted)\n+      {\n+        count++;\n+        waitAndThenTriggerGC();\n+      }\n+    }\n+    while (!deleted && count <= WINDOWS_RETRY_COUNT);\n+    return deleted;\n+  }\n+\n+  /**\n+   * Utility method that moves a file from its current location to the\n+   * new target location. If rename fails (for example if the target is\n+   * another disk) a copy/delete will be performed instead. This is not a rename,\n+   * use {@link #renameFile(File, File, CopyOption...)} instead.\n+   *\n+   * @param toMove The File object to move.\n+   * @param target Target file to move to.\n+   * @throws IOException\n+   */\n+  public static void moveFile(File toMove, File target) throws IOException\n+  {\n+    if (!toMove.exists())\n+    {\n+      throw new FileNotFoundException(\"Source file[\" + toMove.getAbsolutePath()\n+          + \"] not found\");\n+    }\n+    if (target.exists())\n+    {\n+      throw new IOException(\"Target file[\" + target.getAbsolutePath()\n+          + \"] already exists\");\n+    }\n+\n+    if (toMove.renameTo(target))\n     {\n-        Files.move( srcFile.toPath(), renameToFile.toPath(), copyOptions );\n+      return;\n     }\n \n-    public static void truncateFile( SeekableByteChannel fileChannel, long position )\n-            throws IOException\n+    if (toMove.isDirectory())\n+    {\n+      Files.createDirectories(target.toPath());\n+      copyRecursively(toMove, target);\n+      deleteRecursively(toMove);\n+    } else\n+    {\n+      copyFile(toMove, target);\n+      deleteFile(toMove);\n+    }\n+  }\n+\n+  /**\n+   * Utility method that moves a file from its current location to the\n+   * provided target directory. If rename fails (for example if the target is\n+   * another disk) a copy/delete will be performed instead. This is not a rename,\n+   * use {@link #renameFile(File, File, CopyOption...)} instead.\n+   *\n+   * @param toMove          The File object to move.\n+   * @param targetDirectory the destination directory\n+   * @return the new file, null iff the move was unsuccessful\n+   * @throws IOException\n+   */\n+  public static File moveFileToDirectory(File toMove, File targetDirectory) throws IOException\n+  {\n+    if (!targetDirectory.isDirectory())\n     {\n-        int count = 0;\n-        boolean success = false;\n-        IOException cause = null;\n-        do\n-        {\n-            count++;\n-            try\n-            {\n-                fileChannel.truncate( position );\n-                success = true;\n-            }\n-            catch ( IOException e )\n-            {\n-                cause = e;\n-            }\n-\n-        }\n-        while ( !success && count <= WINDOWS_RETRY_COUNT );\n-        if ( !success )\n-        {\n-            throw cause;\n-        }\n-    }\n-\n-    public static void truncateFile( File file, long position ) throws IOException\n-    {\n-        try ( RandomAccessFile access = new RandomAccessFile( file, \"rw\" ) )\n-        {\n-            truncateFile( access.getChannel(), position );\n-        }\n-    }\n-\n-    /*\n-     * See http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4715154.\n-     */\n-    private static void waitAndThenTriggerGC()\n-    {\n-        try\n-        {\n-            Thread.sleep( 500 );\n-        }\n-        catch ( InterruptedException ee )\n-        {\n-            Thread.interrupted();\n-        } // ok\n-        System.gc();\n-    }\n-\n-    public static String fixSeparatorsInPath( String path )\n-    {\n-        String fileSeparator = System.getProperty( \"file.separator\" );\n-        if ( \"\\\\\".equals( fileSeparator ) )\n-        {\n-            path = path.replace( '/', '\\\\' );\n-        }\n-        else if ( \"/\".equals( fileSeparator ) )\n-        {\n-            path = path.replace( '\\\\', '/' );\n-        }\n-        return path;\n+      throw new IllegalArgumentException(\n+          \"Move target must be a directory, not \" + targetDirectory);\n+    }\n+\n+    File target = new File(targetDirectory, toMove.getName());\n+    moveFile(toMove, target);\n+    return target;\n+  }\n+\n+  /**\n+   * Utility method that copy a file from its current location to the\n+   * provided target directory.\n+   *\n+   * @param file            file that needs to be copied.\n+   * @param targetDirectory the destination directory\n+   * @throws IOException\n+   */\n+  public static void copyFileToDirectory(File file, File targetDirectory) throws IOException\n+  {\n+    if (!targetDirectory.exists())\n+    {\n+      Files.createDirectories(targetDirectory.toPath());\n+    }\n+    if (!targetDirectory.isDirectory())\n+    {\n+      throw new IllegalArgumentException(\n+          \"Move target must be a directory, not \" + targetDirectory);\n     }\n \n-    public static void copyFile( File srcFile, File dstFile ) throws IOException\n-    {\n-        //noinspection ResultOfMethodCallIgnored\n-        dstFile.getParentFile().mkdirs();\n-        Files.copy( srcFile.toPath(), dstFile.toPath(), StandardCopyOption.REPLACE_EXISTING );\n-    }\n-\n-    public static void copyRecursively( File fromDirectory, File toDirectory ) throws IOException\n-    {\n-        copyRecursively( fromDirectory, toDirectory, null );\n-    }\n-\n-    public static void copyRecursively( File fromDirectory, File toDirectory, FileFilter filter ) throws IOException\n-    {\n-        File[] files = fromDirectory.listFiles( filter );\n-        if ( files != null )\n-        {\n-            for ( File fromFile : files )\n-            {\n-                File toFile = new File( toDirectory, fromFile.getName() );\n-                if ( fromFile.isDirectory() )\n-                {\n-                    Files.createDirectories( toFile.toPath() );\n-                    copyRecursively( fromFile, toFile, filter );\n-                }\n-                else\n-                {\n-                    copyFile( fromFile, toFile );\n-                }\n-            }\n-        }\n-    }\n+    File target = new File(targetDirectory, file.getName());\n+    copyFile(file, target);\n+  }\n+\n+  public static void renameFile(File srcFile, File renameToFile, CopyOption... copyOptions) throws IOException\n+  {\n+    Files.move(srcFile.toPath(), renameToFile.toPath(), copyOptions);\n+  }\n \n-    public static void writeToFile( File target, String text, boolean append ) throws IOException\n+  public static void truncateFile(SeekableByteChannel fileChannel, long position)\n+      throws IOException\n+  {\n+    int count = 0;\n+    boolean success = false;\n+    IOException cause = null;\n+    do\n     {\n-        if ( !target.exists() )\n-        {\n-            Files.createDirectories( target.getParentFile().toPath() );\n-            //noinspection ResultOfMethodCallIgnored\n-            target.createNewFile();\n-        }\n-\n-        try ( Writer out = new OutputStreamWriter( new FileOutputStream( target, append ), StandardCharsets.UTF_8 ) )\n-        {\n-            out.write( text );\n-        }\n-    }\n+      count++;\n+      try\n+      {\n+        fileChannel.truncate(position);\n+        success = true;\n+      } catch (IOException e)\n+      {\n+        cause = e;\n+      }\n \n-    public static BufferedReader newBufferedFileReader( File file, Charset charset ) throws FileNotFoundException\n-    {\n-        return new BufferedReader( new InputStreamReader( new FileInputStream( file ), charset ) );\n     }\n-\n-    public static PrintWriter newFilePrintWriter( File file, Charset charset ) throws FileNotFoundException\n+    while (!success && count <= WINDOWS_RETRY_COUNT);\n+    if (!success)\n     {\n-        return new PrintWriter( new OutputStreamWriter( new FileOutputStream( file, true ), charset ) );\n+      throw cause;\n     }\n+  }\n \n-    public static File path( String root, String... path )\n+  public static void truncateFile(File file, long position) throws IOException\n+  {\n+    try (RandomAccessFile access = new RandomAccessFile(file, \"rw\"))\n     {\n-        return path( new File( root ), path );\n+      truncateFile(access.getChannel(), position);\n     }\n+  }\n \n-    public static File path( File root, String... path )\n+  /*\n+   * See http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4715154.\n+   */\n+  private static void waitAndThenTriggerGC()\n+  {\n+    try\n     {\n-        for ( String part : path )\n-        {\n-            root = new File( root, part );\n-        }\n-        return root;\n-    }\n-\n-    /**\n-     * Attempts to discern if the given path is mounted on a device that can likely sustain a very high IO throughput.\n-     * <p>\n-     * A high IO device is expected to have negligible seek time, if any, and be able to service multiple IO requests\n-     * in parallel.\n-     *\n-     * @param pathOnDevice Any path, hypothetical or real, that once fully resolved, would exist on a storage device\n-     * that either supports high IO, or not.\n-     * @param defaultHunch The default hunch for whether the device supports high IO or not. This will be returned if\n-     * we otherwise have no clue about the nature of the storage device.\n-     * @return Our best-effort estimate for whether or not this device supports a high IO workload.\n-     */\n-    public static boolean highIODevice( Path pathOnDevice, boolean defaultHunch )\n-    {\n-        // This method has been manually tested and correctly identifies the high IO volumes on our test servers.\n-        if ( SystemUtils.IS_OS_MAC )\n-        {\n-            // Most macs have flash storage, so let's assume true for them.\n-            return true;\n-        }\n-\n-        if ( SystemUtils.IS_OS_LINUX )\n-        {\n-            try\n-            {\n-                FileStore fileStore = Files.getFileStore( pathOnDevice );\n-                String name = fileStore.name();\n-                if ( name.equals( \"tmpfs\" ) || name.equals( \"hugetlbfs\" ) )\n-                {\n-                    // This is a purely in-memory device. It doesn't get faster than this.\n-                    return true;\n-                }\n-\n-                if ( name.startsWith( \"/dev/nvme\" ) )\n-                {\n-                    // This is probably an NVMe device. Anything on that protocol is most likely very fast.\n-                    return true;\n-                }\n-\n-                Path device = Paths.get( name ).toRealPath(); // Use toRealPath to resolve any symlinks.\n-                Path deviceName = device.getName( device.getNameCount() - 1 );\n-\n-                Path rotational = rotationalPathFor( deviceName );\n-                if ( Files.exists( rotational ) )\n-                {\n-                    return readFirstCharacter( rotational ) == '0';\n-                }\n-                else\n-                {\n-                    String namePart = deviceName.toString();\n-                    int len = namePart.length();\n-                    while ( Character.isDigit( namePart.charAt( len - 1 ) ) )\n-                    {\n-                        len--;\n-                    }\n-                    deviceName = Paths.get( namePart.substring( 0, len ) );\n-                    rotational = rotationalPathFor( deviceName );\n-                    if ( Files.exists( rotational ) )\n-                    {\n-                        return readFirstCharacter( rotational ) == '0';\n-                    }\n-                }\n-            }\n-            catch ( Exception e )\n-            {\n-                return defaultHunch;\n-            }\n-        }\n-\n-        return defaultHunch;\n-    }\n-\n-    private static Path rotationalPathFor( Path deviceName )\n+      Thread.sleep(500);\n+    } catch (InterruptedException ee)\n+    {\n+      Thread.interrupted();\n+    } // ok\n+    System.gc();\n+  }\n+\n+  public static String fixSeparatorsInPath(String path)\n+  {\n+    String fileSeparator = System.getProperty(\"file.separator\");\n+    if (\"\\\\\".equals(fileSeparator))\n     {\n-        return Paths.get( \"/sys/block\" ).resolve( deviceName ).resolve( \"queue\" ).resolve( \"rotational\" );\n-    }\n-\n-    private static int readFirstCharacter( Path file ) throws IOException\n+      path = path.replace('/', '\\\\');\n+    } else if (\"/\".equals(fileSeparator))\n     {\n-        try ( InputStream in = Files.newInputStream( file, StandardOpenOption.READ ) )\n-        {\n-            return in.read();\n-        }\n+      path = path.replace('\\\\', '/');\n     }\n+    return path;\n+  }\n \n-    /**\n-     * Useful when you want to move a file from one directory to another by renaming the file\n-     * and keep eventual sub directories. Example:\n-     * <p>\n-     * You want to move file /a/b1/c/d/file from /a/b1 to /a/b2 and keep the sub path /c/d/file.\n-     * <pre>\n-     * <code>fileToMove = new File( \"/a/b1/c/d/file\" );\n-     * fromDir = new File( \"/a/b1\" );\n-     * toDir = new File( \"/a/b2\" );\n-     * fileToMove.rename( pathToFileAfterMove( fromDir, toDir, fileToMove ) );\n-     * // fileToMove.getAbsolutePath() -> /a/b2/c/d/file</code>\n-     * </pre>\n-     * Calls {@link #pathToFileAfterMove(Path, Path, Path)} after\n-     * transforming given files to paths by calling {@link File#toPath()}.\n-     * <p>\n-     * NOTE: This that this does not perform the move, it only calculates the new file name.\n-     * <p>\n-     * Throws {@link IllegalArgumentException} is fileToMove is not a sub path to fromDir.\n-     *\n-     * @param fromDir Current parent directory for fileToMove\n-     * @param toDir Directory denoting new parent directory for fileToMove after move\n-     * @param fileToMove File denoting current location for fileToMove\n-     * @return {@link File} denoting new abstract path for file after move.\n-     */\n-    public static File pathToFileAfterMove( File fromDir, File toDir, File fileToMove )\n-    {\n-        final Path fromDirPath = fromDir.toPath();\n-        final Path toDirPath = toDir.toPath();\n-        final Path fileToMovePath = fileToMove.toPath();\n-        return pathToFileAfterMove( fromDirPath, toDirPath, fileToMovePath ).toFile();\n-    }\n-\n-    /**\n-     * Resolve toDir against fileToMove relativized against fromDir, resulting in a path denoting the location of\n-     * fileToMove after being moved fromDir toDir.\n-     * <p>\n-     * NOTE: This that this does not perform the move, it only calculates the new file name.\n-     * <p>\n-     * Throws {@link IllegalArgumentException} is fileToMove is not a sub path to fromDir.\n-     *\n-     * @param fromDir Path denoting current parent directory for fileToMove\n-     * @param toDir Path denoting location for fileToMove after move\n-     * @param fileToMove Path denoting current location for fileToMove\n-     * @return {@link Path} denoting new abstract path for file after move.\n-     */\n-    public static Path pathToFileAfterMove( Path fromDir, Path toDir, Path fileToMove )\n-    {\n-        // File to move must be true sub path to from dir\n-        if ( !fileToMove.startsWith( fromDir ) || fileToMove.equals( fromDir ) )\n-        {\n-            throw new IllegalArgumentException( \"File \" + fileToMove + \" is not a sub path to dir \" + fromDir );\n-        }\n+  public static void copyFile(File srcFile, File dstFile) throws IOException\n+  {\n+    //noinspection ResultOfMethodCallIgnored\n+    dstFile.getParentFile().mkdirs();\n+    Files.copy(srcFile.toPath(), dstFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n+  }\n \n-        return toDir.resolve( fromDir.relativize( fileToMove ) );\n-    }\n+  public static void copyRecursively(File fromDirectory, File toDirectory) throws IOException\n+  {\n+    copyRecursively(fromDirectory, toDirectory, null);\n+  }\n \n-    /**\n-     * Count the number of files and directories, contained in the given {@link Path}, which must be a directory.\n-     * @param dir The directory whose contents to count.\n-     * @return The number of files and directories in the given directory.\n-     * @throws NotDirectoryException If the given {@link Path} is not a directory. This exception is an optionally\n-     * specific exception. {@link IOException} might be thrown instead.\n-     * @throws IOException If the given directory could not be opened for some reason.\n-     */\n-    public static long countFilesInDirectoryPath( Path dir ) throws IOException\n+  public static void copyRecursively(File fromDirectory, File toDirectory, FileFilter filter) throws IOException\n+  {\n+    File[] files = fromDirectory.listFiles(filter);\n+    if (files != null)\n     {\n-        try ( Stream<Path> listing = Files.list( dir ) )\n+      for (File fromFile : files)\n+      {\n+        File toFile = new File(toDirectory, fromFile.getName());\n+        if (fromFile.isDirectory())\n         {\n-            return listing.count();\n-        }\n-    }\n-\n-    public interface FileOperation\n-    {\n-        void perform() throws IOException;\n-    }\n-\n-    public static void windowsSafeIOOperation( FileOperation operation ) throws IOException\n-    {\n-        IOException storedIoe = null;\n-        for ( int i = 0; i < 10; i++ )\n+          Files.createDirectories(toFile.toPath());\n+          copyRecursively(fromFile, toFile, filter);\n+        } else\n         {\n-            try\n-            {\n-                operation.perform();\n-                return;\n-            }\n-            catch ( IOException e )\n-            {\n-                storedIoe = e;\n-                System.gc();\n-            }\n+          copyFile(fromFile, toFile);\n         }\n-        throw Objects.requireNonNull( storedIoe );\n+      }\n     }\n+  }\n \n-    public interface LineListener\n+  public static void writeToFile(File target, String text, boolean append) throws IOException\n+  {\n+    if (!target.exists())\n     {\n-        void line( String line );\n+      Files.createDirectories(target.getParentFile().toPath());\n+      //noinspection ResultOfMethodCallIgnored\n+      target.createNewFile();\n     }\n \n-    public static LineListener echo( final PrintStream target )\n+    try (Writer out = new OutputStreamWriter(new FileOutputStream(target, append), StandardCharsets.UTF_8))\n     {\n-        return target::println;\n+      out.write(text);\n     }\n+  }\n \n-    public static void readTextFile( File file, LineListener listener ) throws IOException\n-    {\n-        try ( BufferedReader reader = new BufferedReader( new FileReader( file ) ) )\n-        {\n-            String line;\n-            while ( (line = reader.readLine()) != null )\n-            {\n-                listener.line( line );\n-            }\n-        }\n-    }\n+  public static BufferedReader newBufferedFileReader(File file, Charset charset) throws FileNotFoundException\n+  {\n+    return new BufferedReader(new InputStreamReader(new FileInputStream(file), charset));\n+  }\n \n-    public static String readTextFile( File file, Charset charset ) throws IOException\n-    {\n-        StringBuilder out = new StringBuilder();\n-        for ( String s : Files.readAllLines( file.toPath(), charset ) )\n-        {\n-            out.append( s ).append( \"\\n\" );\n-        }\n-        return out.toString();\n-    }\n+  public static PrintWriter newFilePrintWriter(File file, Charset charset) throws FileNotFoundException\n+  {\n+    return new PrintWriter(new OutputStreamWriter(new FileOutputStream(file, true), charset));\n+  }\n \n-    private static void deleteFileWithRetries( Path file, int tries ) throws IOException\n-    {\n-        try\n-        {\n-            Files.delete( file );\n-        }\n-        catch ( IOException e )\n-        {\n-            if ( SystemUtils.IS_OS_WINDOWS && mayBeWindowsMemoryMappedFileReleaseProblem( e ) )\n-            {\n-                if ( tries >= WINDOWS_RETRY_COUNT )\n-                {\n-                    throw new MaybeWindowsMemoryMappedFileReleaseProblem( e );\n-                }\n-                waitAndThenTriggerGC();\n-                deleteFileWithRetries( file, tries + 1 );\n-            }\n-            else\n-            {\n-                throw e;\n-            }\n-        }\n-    }\n+  public static File path(String root, String... path)\n+  {\n+    return path(new File(root), path);\n+  }\n \n-    private static boolean mayBeWindowsMemoryMappedFileReleaseProblem( IOException e )\n+  public static File path(File root, String... path)\n+  {\n+    for (String part : path)\n     {\n-        return e.getMessage()\n-                .contains( \"The process cannot access the file because it is being used by another process.\" );\n+      root = new File(root, part);\n     }\n+    return root;\n+  }\n \n-    /**\n-     * Given a directory and a path under it, return filename of the path\n-     * relative to the directory.\n-     *\n-     * @param baseDir The base directory, containing the storeFile\n-     * @param storeFile The store file path, must be contained under\n-     * <code>baseDir</code>\n-     * @return The relative path of <code>storeFile</code> to\n-     * <code>baseDir</code>\n-     * @throws IOException As per {@link File#getCanonicalPath()}\n-     */\n-    public static String relativePath( File baseDir, File storeFile )\n-            throws IOException\n+  /**\n+   * Attempts to discern if the given path is mounted on a device that can likely sustain a very high IO throughput.\n+   * <p>\n+   * A high IO device is expected to have negligible seek time, if any, and be able to service multiple IO requests\n+   * in parallel.\n+   *\n+   * @param pathOnDevice Any path, hypothetical or real, that once fully resolved, would exist on a storage device\n+   *                     that either supports high IO, or not.\n+   * @param defaultHunch The default hunch for whether the device supports high IO or not. This will be returned if\n+   *                     we otherwise have no clue about the nature of the storage device.\n+   * @return Our best-effort estimate for whether or not this device supports a high IO workload.\n+   */\n+  public static boolean highIODevice(Path pathOnDevice, boolean defaultHunch)\n+  {\n+    // This method has been manually tested and correctly identifies the high IO volumes on our test servers.\n+    if (SystemUtils.IS_OS_MAC)\n     {\n-        String prefix = baseDir.getCanonicalPath();\n-        String path = storeFile.getCanonicalPath();\n-        if ( !path.startsWith( prefix ) )\n-        {\n-            throw new FileNotFoundException();\n-        }\n-        path = path.substring( prefix.length() );\n-        if ( path.startsWith( File.separator ) )\n-        {\n-            return path.substring( 1 );\n-        }\n-        return path;\n+      // Most macs have flash storage, so let's assume true for them.\n+      return true;\n     }\n \n-    // TODO javadoc what this one does. It comes from Serverutil initially.\n-    public static File getMostCanonicalFile( File file )\n+    if (SystemUtils.IS_OS_LINUX)\n     {\n-        try\n+      try\n+      {\n+        FileStore fileStore = Files.getFileStore(pathOnDevice);\n+        String name = fileStore.name();\n+        if (name.equals(\"tmpfs\") || name.equals(\"hugetlbfs\"))\n         {\n-            return file.getCanonicalFile().getAbsoluteFile();\n+          // This is a purely in-memory device. It doesn't get faster than this.\n+          return true;\n         }\n-        catch ( IOException e )\n-        {\n-            return file.getAbsoluteFile();\n-        }\n-    }\n-\n-    public static void writeAll( FileChannel channel, ByteBuffer src, long position ) throws IOException\n-    {\n-        long filePosition = position;\n-        long expectedEndPosition = filePosition + src.limit() - src.position();\n-        int bytesWritten;\n-        while ( (filePosition += bytesWritten = channel.write( src, filePosition )) < expectedEndPosition )\n-        {\n-            if ( bytesWritten <= 0 )\n-            {\n-                throw new IOException( \"Unable to write to disk, reported bytes written was \" + bytesWritten );\n-            }\n-        }\n-    }\n-\n-    public static void writeAll( FileChannel channel, ByteBuffer src ) throws IOException\n-    {\n-        long bytesToWrite = src.limit() - src.position();\n-        int bytesWritten;\n-        while ( (bytesToWrite -= bytesWritten = channel.write( src )) > 0 )\n-        {\n-            if ( bytesWritten <= 0 )\n-            {\n-                throw new IOException( \"Unable to write to disk, reported bytes written was \" + bytesWritten );\n-            }\n-        }\n-    }\n \n-    public static OpenOption[] convertOpenMode( OpenMode mode )\n-    {\n-        OpenOption[] options;\n-        switch ( mode )\n+        if (name.startsWith(\"/dev/nvme\"))\n         {\n-        case READ:\n-            options = new OpenOption[]{READ};\n-            break;\n-        case READ_WRITE:\n-            options = new OpenOption[]{CREATE, READ, WRITE};\n-            break;\n-        case SYNC:\n-            options = new OpenOption[]{CREATE, READ, WRITE, SYNC};\n-            break;\n-        case DSYNC:\n-            options = new OpenOption[]{CREATE, READ, WRITE, DSYNC};\n-            break;\n-        default:\n-            throw new IllegalArgumentException( \"Unsupported mode: \" + mode );\n+          // This is probably an NVMe device. Anything on that protocol is most likely very fast.\n+          return true;\n         }\n-        return options;\n-    }\n-\n-    public static FileChannel open( Path path, OpenMode openMode ) throws IOException\n-    {\n-        return FileChannel.open( path, convertOpenMode( openMode ) );\n-    }\n-\n-    public static InputStream openAsInputStream( Path path ) throws IOException\n-    {\n-        return Files.newInputStream( path, READ );\n-    }\n \n-    /**\n-     * Check if directory is empty.\n-     *\n-     * @param directory - directory to check\n-     * @return false if directory exists and empty, true otherwise.\n-     * @throws IllegalArgumentException if specified directory represent a file\n-     * @throws IOException if some problem encountered during reading directory content\n-     */\n-    public static boolean isEmptyDirectory( File directory ) throws IOException\n-    {\n-        if ( directory.exists() )\n-        {\n-            if ( !directory.isDirectory() )\n-            {\n-                throw new IllegalArgumentException( \"Expected directory, but was file: \" + directory );\n-            }\n-            else\n-            {\n-                try ( DirectoryStream<Path> directoryStream = Files.newDirectoryStream( directory.toPath() ) )\n-                {\n-                    return !directoryStream.iterator().hasNext();\n-                }\n-            }\n-        }\n-        return true;\n-    }\n+        Path device = Paths.get(name).toRealPath(); // Use toRealPath to resolve any symlinks.\n+        Path deviceName = device.getName(device.getNameCount() - 1);\n \n-    public static OutputStream openAsOutputStream( Path path, boolean append ) throws IOException\n-    {\n-        OpenOption[] options;\n-        if ( append )\n-        {\n-            options = new OpenOption[]{CREATE, WRITE, APPEND};\n-        }\n-        else\n+        Path rotational = rotationalPathFor(deviceName);\n+        if (Files.exists(rotational))\n         {\n-            options = new OpenOption[]{CREATE, WRITE};\n-        }\n-        return Files.newOutputStream( path, options );\n-    }\n-\n-    public static class MaybeWindowsMemoryMappedFileReleaseProblem extends IOException\n-    {\n-        public MaybeWindowsMemoryMappedFileReleaseProblem( IOException e )\n+          return readFirstCharacter(rotational) == '0';\n+        } else\n         {\n-            super( e );\n+          String namePart = deviceName.toString();\n+          int len = namePart.length();\n+          while (Character.isDigit(namePart.charAt(len - 1)))\n+          {\n+            len--;\n+          }\n+          deviceName = Paths.get(namePart.substring(0, len));\n+          rotational = rotationalPathFor(deviceName);\n+          if (Files.exists(rotational))\n+          {\n+            return readFirstCharacter(rotational) == '0';\n+          }\n         }\n-    }\n+      } catch (Exception e)\n+      {\n+        return defaultHunch;\n+      }\n+    }\n+\n+    return defaultHunch;\n+  }\n+\n+  private static Path rotationalPathFor(Path deviceName)\n+  {\n+    return Paths.get(\"/sys/block\").resolve(deviceName).resolve(\"queue\").resolve(\"rotational\");\n+  }\n+\n+  private static int readFirstCharacter(Path file) throws IOException\n+  {\n+    try (InputStream in = Files.newInputStream(file, StandardOpenOption.READ))\n+    {\n+      return in.read();\n+    }\n+  }\n+\n+  /**\n+   * Useful when you want to move a file from one directory to another by renaming the file\n+   * and keep eventual sub directories. Example:\n+   * <p>\n+   * You want to move file /a/b1/c/d/file from /a/b1 to /a/b2 and keep the sub path /c/d/file.\n+   * <pre>\n+   * <code>fileToMove = new File( \"/a/b1/c/d/file\" );\n+   * fromDir = new File( \"/a/b1\" );\n+   * toDir = new File( \"/a/b2\" );\n+   * fileToMove.rename( pathToFileAfterMove( fromDir, toDir, fileToMove ) );\n+   * // fileToMove.getAbsolutePath() -> /a/b2/c/d/file</code>\n+   * </pre>\n+   * Calls {@link #pathToFileAfterMove(Path, Path, Path)} after\n+   * transforming given files to paths by calling {@link File#toPath()}.\n+   * <p>\n+   * NOTE: This that this does not perform the move, it only calculates the new file name.\n+   * <p>\n+   * Throws {@link IllegalArgumentException} is fileToMove is not a sub path to fromDir.\n+   *\n+   * @param fromDir    Current parent directory for fileToMove\n+   * @param toDir      Directory denoting new parent directory for fileToMove after move\n+   * @param fileToMove File denoting current location for fileToMove\n+   * @return {@link File} denoting new abstract path for file after move.\n+   */\n+  public static File pathToFileAfterMove(File fromDir, File toDir, File fileToMove)\n+  {\n+    final Path fromDirPath = fromDir.toPath();\n+    final Path toDirPath = toDir.toPath();\n+    final Path fileToMovePath = fileToMove.toPath();\n+    return pathToFileAfterMove(fromDirPath, toDirPath, fileToMovePath).toFile();\n+  }\n+\n+  /**\n+   * Resolve toDir against fileToMove relativized against fromDir, resulting in a path denoting the location of\n+   * fileToMove after being moved fromDir toDir.\n+   * <p>\n+   * NOTE: This that this does not perform the move, it only calculates the new file name.\n+   * <p>\n+   * Throws {@link IllegalArgumentException} is fileToMove is not a sub path to fromDir.\n+   *\n+   * @param fromDir    Path denoting current parent directory for fileToMove\n+   * @param toDir      Path denoting location for fileToMove after move\n+   * @param fileToMove Path denoting current location for fileToMove\n+   * @return {@link Path} denoting new abstract path for file after move.\n+   */\n+  public static Path pathToFileAfterMove(Path fromDir, Path toDir, Path fileToMove)\n+  {\n+    // File to move must be true sub path to from dir\n+    if (!fileToMove.startsWith(fromDir) || fileToMove.equals(fromDir))\n+    {\n+      throw new IllegalArgumentException(\"File \" + fileToMove + \" is not a sub path to dir \" + fromDir);\n+    }\n+\n+    return toDir.resolve(fromDir.relativize(fileToMove));\n+  }\n+\n+  /**\n+   * Count the number of files and directories, contained in the given {@link Path}, which must be a directory.\n+   *\n+   * @param dir The directory whose contents to count.\n+   * @return The number of files and directories in the given directory.\n+   * @throws NotDirectoryException If the given {@link Path} is not a directory. This exception is an optionally\n+   *                               specific exception. {@link IOException} might be thrown instead.\n+   * @throws IOException           If the given directory could not be opened for some reason.\n+   */\n+  public static long countFilesInDirectoryPath(Path dir) throws IOException\n+  {\n+    try (Stream<Path> listing = Files.list(dir))\n+    {\n+      return listing.count();\n+    }\n+  }\n+\n+  public interface FileOperation\n+  {\n+    void perform() throws IOException;\n+  }\n+\n+  public static void windowsSafeIOOperation(FileOperation operation) throws IOException\n+  {\n+    IOException storedIoe = null;\n+    for (int i = 0; i < 10; i++)\n+    {\n+      try\n+      {\n+        operation.perform();\n+        return;\n+      } catch (IOException e)\n+      {\n+        storedIoe = e;\n+        System.gc();\n+      }\n+    }\n+    throw Objects.requireNonNull(storedIoe);\n+  }\n \n-    /**\n-     * Calculates the size of a given directory or file given the provided abstract filesystem.\n-     *\n-     * @param fs the filesystem abstraction to use\n-     * @param path to the file or directory.\n-     * @return the size, in bytes, of the file or the total size of the content in the directory, including\n-     * subdirectories.\n-     */\n-    public static long size( FileSystemAbstraction fs, File path )\n+  public interface LineListener\n+  {\n+    void line(String line);\n+  }\n+\n+  public static LineListener echo(final PrintStream target)\n+  {\n+    return target::println;\n+  }\n+\n+  public static void readTextFile(File file, LineListener listener) throws IOException\n+  {\n+    try (BufferedReader reader = new BufferedReader(new FileReader(file)))\n     {\n-        if ( fs.isDirectory( path ) )\n-        {\n-            long size = 0L;\n-            File[] files = fs.listFiles( path );\n-            if ( files == null )\n-            {\n-                return 0L;\n-            }\n-            for ( File child : files )\n-            {\n-                size += size( fs, child );\n-            }\n-            return size;\n-        }\n-        else\n-        {\n-            return fs.getFileSize( path );\n-        }\n-    }\n+      String line;\n+      while ((line = reader.readLine()) != null)\n+      {\n+        listener.line(line);\n+      }\n+    }\n+  }\n+\n+  public static String readTextFile(File file, Charset charset) throws IOException\n+  {\n+    StringBuilder out = new StringBuilder();\n+    for (String s : Files.readAllLines(file.toPath(), charset))\n+    {\n+      out.append(s).append(\"\\n\");\n+    }\n+    return out.toString();\n+  }\n+\n+  private static void deleteFileWithRetries(Path file, int tries) throws IOException\n+  {\n+    try\n+    {\n+      Files.delete(file);\n+    } catch (IOException e)\n+    {\n+      if (SystemUtils.IS_OS_WINDOWS && mayBeWindowsMemoryMappedFileReleaseProblem(e))\n+      {\n+        if (tries >= WINDOWS_RETRY_COUNT)\n+        {\n+          throw new MaybeWindowsMemoryMappedFileReleaseProblem(e);\n+        }\n+        waitAndThenTriggerGC();\n+        deleteFileWithRetries(file, tries + 1);\n+      } else\n+      {\n+        throw e;\n+      }\n+    }\n+  }\n+\n+  private static boolean mayBeWindowsMemoryMappedFileReleaseProblem(IOException e)\n+  {\n+    return e.getMessage()\n+        .contains(\"The process cannot access the file because it is being used by another process.\");\n+  }\n+\n+  /**\n+   * Given a directory and a path under it, return filename of the path\n+   * relative to the directory.\n+   *\n+   * @param baseDir   The base directory, containing the storeFile\n+   * @param storeFile The store file path, must be contained under\n+   *                  <code>baseDir</code>\n+   * @return The relative path of <code>storeFile</code> to\n+   * <code>baseDir</code>\n+   * @throws IOException As per {@link File#getCanonicalPath()}\n+   */\n+  public static String relativePath(File baseDir, File storeFile)\n+      throws IOException\n+  {\n+    String prefix = baseDir.getCanonicalPath();\n+    String path = storeFile.getCanonicalPath();\n+    if (!path.startsWith(prefix))\n+    {\n+      throw new FileNotFoundException();\n+    }\n+    path = path.substring(prefix.length());\n+    if (path.startsWith(File.separator))\n+    {\n+      return path.substring(1);\n+    }\n+    return path;\n+  }\n+\n+  // TODO javadoc what this one does. It comes from Serverutil initially.\n+  public static File getMostCanonicalFile(File file)\n+  {\n+    try\n+    {\n+      return file.getCanonicalFile().getAbsoluteFile();\n+    } catch (IOException e)\n+    {\n+      return file.getAbsoluteFile();\n+    }\n+  }\n+\n+  public static void writeAll(FileChannel channel, ByteBuffer src, long position) throws IOException\n+  {\n+    long filePosition = position;\n+    long expectedEndPosition = filePosition + src.limit() - src.position();\n+    int bytesWritten;\n+    while ((filePosition += bytesWritten = channel.write(src, filePosition)) < expectedEndPosition)\n+    {\n+      if (bytesWritten <= 0)\n+      {\n+        throw new IOException(\"Unable to write to disk, reported bytes written was \" + bytesWritten);\n+      }\n+    }\n+  }\n+\n+  public static void writeAll(FileChannel channel, ByteBuffer src) throws IOException\n+  {\n+    long bytesToWrite = src.limit() - src.position();\n+    int bytesWritten;\n+    while ((bytesToWrite -= bytesWritten = channel.write(src)) > 0)\n+    {\n+      if (bytesWritten <= 0)\n+      {\n+        throw new IOException(\"Unable to write to disk, reported bytes written was \" + bytesWritten);\n+      }\n+    }\n+  }\n+\n+  public static OpenOption[] convertOpenMode(OpenMode mode)\n+  {\n+    OpenOption[] options;\n+    switch (mode)\n+    {\n+      case READ:\n+        options = new OpenOption[] {READ};\n+        break;\n+      case READ_WRITE:\n+        options = new OpenOption[] {CREATE, READ, WRITE};\n+        break;\n+      case SYNC:\n+        options = new OpenOption[] {CREATE, READ, WRITE, SYNC};\n+        break;\n+      case DSYNC:\n+        options = new OpenOption[] {CREATE, READ, WRITE, DSYNC};\n+        break;\n+      default:\n+        throw new IllegalArgumentException(\"Unsupported mode: \" + mode);\n+    }\n+    return options;\n+  }\n+\n+  public static FileChannel open(Path path, OpenMode openMode) throws IOException\n+  {\n+    return FileChannel.open(path, convertOpenMode(openMode));\n+  }\n+\n+  public static InputStream openAsInputStream(Path path) throws IOException\n+  {\n+    return Files.newInputStream(path, READ);\n+  }\n+\n+  /**\n+   * Check if directory is empty.\n+   *\n+   * @param directory - directory to check\n+   * @return false if directory exists and empty, true otherwise.\n+   * @throws IllegalArgumentException if specified directory represent a file\n+   * @throws IOException              if some problem encountered during reading directory content\n+   */\n+  public static boolean isEmptyDirectory(File directory) throws IOException\n+  {\n+    if (directory.exists())\n+    {\n+      if (!directory.isDirectory())\n+      {\n+        throw new IllegalArgumentException(\"Expected directory, but was file: \" + directory);\n+      } else\n+      {\n+        try (DirectoryStream<Path> directoryStream = Files.newDirectoryStream(directory.toPath()))\n+        {\n+          return !directoryStream.iterator().hasNext();\n+        }\n+      }\n+    }\n+    return true;\n+  }\n+\n+  public static OutputStream openAsOutputStream(Path path, boolean append) throws IOException\n+  {\n+    OpenOption[] options;\n+    if (append)\n+    {\n+      options = new OpenOption[] {CREATE, WRITE, APPEND};\n+    } else\n+    {\n+      options = new OpenOption[] {CREATE, WRITE};\n+    }\n+    return Files.newOutputStream(path, options);\n+  }\n+\n+  public static class MaybeWindowsMemoryMappedFileReleaseProblem extends IOException\n+  {\n+    public MaybeWindowsMemoryMappedFileReleaseProblem(IOException e)\n+    {\n+      super(e);\n+    }\n+  }\n+\n+  /**\n+   * Calculates the size of a given directory or file given the provided abstract filesystem.\n+   *\n+   * @param fs   the filesystem abstraction to use\n+   * @param path to the file or directory.\n+   * @return the size, in bytes, of the file or the total size of the content in the directory, including\n+   * subdirectories.\n+   */\n+  public static long size(FileSystemAbstraction fs, File path)\n+  {\n+    if (fs.isDirectory(path))\n+    {\n+      long size = 0L;\n+      File[] files = fs.listFiles(path);\n+      if (files == null)\n+      {\n+        return 0L;\n+      }\n+      for (File child : files)\n+      {\n+        size += size(fs, child);\n+      }\n+      return size;\n+    } else\n+    {\n+      return fs.getFileSize(path);\n+    }\n+  }\n }\n",
            "diff_size": 1072
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1598/FileUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1598/FileUtils.java\nindex 9f892fb3fc7..c8643d165c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1598/FileUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1598/FileUtils.java\n@@ -80,7 +80,8 @@ public class FileUtils\n         {\n             return;\n         }\n-        Path path = directory.toPath();\n+\n+Path path = directory.toPath();\n         deletePathRecursively( path );\n     }\n \n@@ -143,14 +144,12 @@ public class FileUtils\n     {\n         if ( !toMove.exists() )\n         {\n-            throw new FileNotFoundException( \"Source file[\" + toMove.getAbsolutePath()\n-                                             + \"] not found\" );\n-        }\n+            throw new FileNotFoundException( \"Source file[\" + toMove.getAbsolutePath() + \"] not found\" );\n+    }\n         if ( target.exists() )\n         {\n-            throw new IOException( \"Target file[\" + target.getAbsolutePath()\n-                                   + \"] already exists\" );\n-        }\n+            throw new IOException( \"Target file[\" + target.getAbsolutePath() + \"] already exists\" );\n+    }\n \n         if ( toMove.renameTo( target ) )\n         {\n@@ -185,8 +184,7 @@ public class FileUtils\n     {\n         if ( !targetDirectory.isDirectory() )\n         {\n-            throw new IllegalArgumentException(\n-                    \"Move target must be a directory, not \" + targetDirectory );\n+            throw new IllegalArgumentException( \"Move target must be a directory, not \" + targetDirectory );\n         }\n \n         File target = new File( targetDirectory, toMove.getName() );\n@@ -208,10 +206,10 @@ public class FileUtils\n         {\n             Files.createDirectories( targetDirectory.toPath() );\n         }\n-        if ( !targetDirectory.isDirectory() )\n+\n+if ( !targetDirectory.isDirectory() )\n         {\n-            throw new IllegalArgumentException(\n-                    \"Move target must be a directory, not \" + targetDirectory );\n+            throw new IllegalArgumentException( \"Move target must be a directory, not \" + targetDirectory );\n         }\n \n         File target = new File( targetDirectory, file.getName() );\n@@ -223,9 +221,8 @@ public class FileUtils\n         Files.move( srcFile.toPath(), renameToFile.toPath(), copyOptions );\n     }\n \n-    public static void truncateFile( SeekableByteChannel fileChannel, long position )\n-            throws IOException\n-    {\n+    public static void truncateFile( SeekableByteChannel fileChannel, long position ) throws IOException\n+{\n         int count = 0;\n         boolean success = false;\n         IOException cause = null;\n@@ -241,8 +238,7 @@ public class FileUtils\n             {\n                 cause = e;\n             }\n-\n-        }\n+    }\n         while ( !success && count <= WINDOWS_RETRY_COUNT );\n         if ( !success )\n         {\n@@ -285,7 +281,8 @@ public class FileUtils\n         {\n             path = path.replace( '\\\\', '/' );\n         }\n-        return path;\n+\n+return path;\n     }\n \n     public static void copyFile( File srcFile, File dstFile ) throws IOException\n@@ -357,7 +354,8 @@ public class FileUtils\n         {\n             root = new File( root, part );\n         }\n-        return root;\n+\n+return root;\n     }\n \n     /**\n@@ -401,8 +399,7 @@ public class FileUtils\n \n                 Path device = Paths.get( name ).toRealPath(); // Use toRealPath to resolve any symlinks.\n                 Path deviceName = device.getName( device.getNameCount() - 1 );\n-\n-                Path rotational = rotationalPathFor( deviceName );\n+Path rotational = rotationalPathFor( deviceName );\n                 if ( Files.exists( rotational ) )\n                 {\n                     return readFirstCharacter( rotational ) == '0';\n@@ -415,7 +412,8 @@ public class FileUtils\n                     {\n                         len--;\n                     }\n-                    deviceName = Paths.get( namePart.substring( 0, len ) );\n+\n+deviceName = Paths.get( namePart.substring( 0, len ) );\n                     rotational = rotationalPathFor( deviceName );\n                     if ( Files.exists( rotational ) )\n                     {\n@@ -570,7 +568,8 @@ public class FileUtils\n         {\n             out.append( s ).append( \"\\n\" );\n         }\n-        return out.toString();\n+\n+return out.toString();\n     }\n \n     private static void deleteFileWithRetries( Path file, int tries ) throws IOException\n@@ -587,7 +586,8 @@ public class FileUtils\n                 {\n                     throw new MaybeWindowsMemoryMappedFileReleaseProblem( e );\n                 }\n-                waitAndThenTriggerGC();\n+\n+waitAndThenTriggerGC();\n                 deleteFileWithRetries( file, tries + 1 );\n             }\n             else\n@@ -599,8 +599,7 @@ public class FileUtils\n \n     private static boolean mayBeWindowsMemoryMappedFileReleaseProblem( IOException e )\n     {\n-        return e.getMessage()\n-                .contains( \"The process cannot access the file because it is being used by another process.\" );\n+        return e.getMessage().contains( \"The process cannot access the file because it is being used by another process.\" );\n     }\n \n     /**\n@@ -614,21 +613,22 @@ public class FileUtils\n      * <code>baseDir</code>\n      * @throws IOException As per {@link File#getCanonicalPath()}\n      */\n-    public static String relativePath( File baseDir, File storeFile )\n-            throws IOException\n-    {\n+    public static String relativePath( File baseDir, File storeFile ) throws IOException\n+{\n         String prefix = baseDir.getCanonicalPath();\n         String path = storeFile.getCanonicalPath();\n         if ( !path.startsWith( prefix ) )\n         {\n             throw new FileNotFoundException();\n         }\n-        path = path.substring( prefix.length() );\n+\n+path = path.substring( prefix.length() );\n         if ( path.startsWith( File.separator ) )\n         {\n             return path.substring( 1 );\n         }\n-        return path;\n+\n+return path;\n     }\n \n     // TODO javadoc what this one does. It comes from Serverutil initially.\n@@ -649,7 +649,7 @@ public class FileUtils\n         long filePosition = position;\n         long expectedEndPosition = filePosition + src.limit() - src.position();\n         int bytesWritten;\n-        while ( (filePosition += bytesWritten = channel.write( src, filePosition )) < expectedEndPosition )\n+        while ( ( filePosition += bytesWritten = channel.write( src, filePosition )) < expectedEndPosition )\n         {\n             if ( bytesWritten <= 0 )\n             {\n@@ -662,7 +662,7 @@ public class FileUtils\n     {\n         long bytesToWrite = src.limit() - src.position();\n         int bytesWritten;\n-        while ( (bytesToWrite -= bytesWritten = channel.write( src )) > 0 )\n+        while ( ( bytesToWrite -= bytesWritten = channel.write( src )) > 0 )\n         {\n             if ( bytesWritten <= 0 )\n             {\n@@ -691,7 +691,8 @@ public class FileUtils\n         default:\n             throw new IllegalArgumentException( \"Unsupported mode: \" + mode );\n         }\n-        return options;\n+\n+return options;\n     }\n \n     public static FileChannel open( Path path, OpenMode openMode ) throws IOException\n@@ -742,7 +743,8 @@ public class FileUtils\n         {\n             options = new OpenOption[]{CREATE, WRITE};\n         }\n-        return Files.newOutputStream( path, options );\n+\n+return Files.newOutputStream( path, options );\n     }\n \n     public static class MaybeWindowsMemoryMappedFileReleaseProblem extends IOException\n@@ -775,11 +777,12 @@ public class FileUtils\n             {\n                 size += size( fs, child );\n             }\n-            return size;\n+\n+return size;\n         }\n         else\n         {\n             return fs.getFileSize( path );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
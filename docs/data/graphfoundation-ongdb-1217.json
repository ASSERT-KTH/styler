{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1217",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1217/RelationshipStateImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1217/RelationshipStateImpl.java\nindex 07345d7fe3f..162cb701a62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1217/RelationshipStateImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1217/RelationshipStateImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.state;\n \n import java.util.Iterator;\n@@ -29,110 +30,110 @@ import static java.util.Collections.emptyIterator;\n \n class RelationshipStateImpl extends PropertyContainerStateImpl implements RelationshipState\n {\n-    static final RelationshipState EMPTY = new RelationshipState()\n+  static final RelationshipState EMPTY = new RelationshipState()\n+  {\n+    @Override\n+    public long getId()\n+    {\n+      throw new UnsupportedOperationException(\"id not defined\");\n+    }\n+\n+    @Override\n+    public <EX extends Exception> boolean accept(RelationshipVisitor<EX> visitor)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public Iterator<StorageProperty> addedProperties()\n+    {\n+      return emptyIterator();\n+    }\n+\n+    @Override\n+    public Iterator<StorageProperty> changedProperties()\n+    {\n+      return emptyIterator();\n+    }\n+\n+    @Override\n+    public Iterator<Integer> removedProperties()\n+    {\n+      return emptyIterator();\n+    }\n+\n+    @Override\n+    public Iterator<StorageProperty> addedAndChangedProperties()\n     {\n-        @Override\n-        public long getId()\n-        {\n-            throw new UnsupportedOperationException( \"id not defined\" );\n-        }\n-\n-        @Override\n-        public <EX extends Exception> boolean accept( RelationshipVisitor<EX> visitor )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public Iterator<StorageProperty> addedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<StorageProperty> changedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<Integer> removedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<StorageProperty> addedAndChangedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<StorageProperty> augmentProperties( Iterator<StorageProperty> iterator )\n-        {\n-            return iterator;\n-        }\n-\n-        @Override\n-        public void accept( Visitor visitor )\n-        {\n-        }\n-\n-        @Override\n-        public boolean hasPropertyChanges()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public StorageProperty getChangedProperty( int propertyKeyId )\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public StorageProperty getAddedProperty( int propertyKeyId )\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public boolean isPropertyChangedOrRemoved( int propertyKey )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public boolean isPropertyRemoved( int propertyKeyId )\n-        {\n-            return false;\n-        }\n-    };\n-\n-    private long startNode = -1;\n-    private long endNode = -1;\n-    private int type = -1;\n-\n-    RelationshipStateImpl( long id )\n+      return emptyIterator();\n+    }\n+\n+    @Override\n+    public Iterator<StorageProperty> augmentProperties(Iterator<StorageProperty> iterator)\n+    {\n+      return iterator;\n+    }\n+\n+    @Override\n+    public void accept(Visitor visitor)\n+    {\n+    }\n+\n+    @Override\n+    public boolean hasPropertyChanges()\n     {\n-        super( id );\n+      return false;\n     }\n \n-    void setMetaData( long startNode, long endNode, int type )\n+    @Override\n+    public StorageProperty getChangedProperty(int propertyKeyId)\n+    {\n+      return null;\n+    }\n+\n+    @Override\n+    public StorageProperty getAddedProperty(int propertyKeyId)\n     {\n-        this.startNode = startNode;\n-        this.endNode = endNode;\n-        this.type = type;\n+      return null;\n     }\n \n     @Override\n-    public <EX extends Exception> boolean accept( RelationshipVisitor<EX> visitor ) throws EX\n+    public boolean isPropertyChangedOrRemoved(int propertyKey)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public boolean isPropertyRemoved(int propertyKeyId)\n+    {\n+      return false;\n+    }\n+  };\n+\n+  private long startNode = -1;\n+  private long endNode = -1;\n+  private int type = -1;\n+\n+  RelationshipStateImpl(long id)\n+  {\n+    super(id);\n+  }\n+\n+  void setMetaData(long startNode, long endNode, int type)\n+  {\n+    this.startNode = startNode;\n+    this.endNode = endNode;\n+    this.type = type;\n+  }\n+\n+  @Override\n+  public <EX extends Exception> boolean accept(RelationshipVisitor<EX> visitor) throws EX\n+  {\n+    if (type != -1)\n     {\n-        if ( type != -1 )\n-        {\n-            visitor.visit( getId(), type, startNode, endNode );\n-            return true;\n-        }\n-        return false;\n+      visitor.visit(getId(), type, startNode, endNode);\n+      return true;\n     }\n+    return false;\n+  }\n }\n",
            "diff_size": 170
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1217/RelationshipStateImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1217/RelationshipStateImpl.java\nindex 07345d7fe3f..6a8a9a85f77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1217/RelationshipStateImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1217/RelationshipStateImpl.java\n@@ -135,4 +135,4 @@ class RelationshipStateImpl extends PropertyContainerStateImpl implements Relati\n         }\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1217/RelationshipStateImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1217/RelationshipStateImpl.java\nindex 07345d7fe3f..9f148dbf84a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1217/RelationshipStateImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1217/RelationshipStateImpl.java\n@@ -20,98 +20,95 @@\n package org.neo4j.kernel.impl.api.state;\n \n import java.util.Iterator;\n-\n import org.neo4j.kernel.impl.api.RelationshipVisitor;\n import org.neo4j.storageengine.api.StorageProperty;\n import org.neo4j.storageengine.api.txstate.RelationshipState;\n-\n import static java.util.Collections.emptyIterator;\n \n class RelationshipStateImpl extends PropertyContainerStateImpl implements RelationshipState\n {\n     static final RelationshipState EMPTY = new RelationshipState()\n+{\n+    @Override\n+    public long getId()\n     {\n-        @Override\n-        public long getId()\n-        {\n-            throw new UnsupportedOperationException( \"id not defined\" );\n-        }\n-\n-        @Override\n-        public <EX extends Exception> boolean accept( RelationshipVisitor<EX> visitor )\n-        {\n-            return false;\n-        }\n+        throw new UnsupportedOperationException( \"id not defined\" );\n+    }\n \n-        @Override\n-        public Iterator<StorageProperty> addedProperties()\n-        {\n-            return emptyIterator();\n-        }\n+    @Override\n+    public <EX extends Exception> boolean accept( RelationshipVisitor<EX> visitor )\n+    {\n+        return false;\n+    }\n \n-        @Override\n-        public Iterator<StorageProperty> changedProperties()\n-        {\n-            return emptyIterator();\n-        }\n+    @Override\n+    public Iterator<StorageProperty> addedProperties()\n+    {\n+        return emptyIterator();\n+    }\n \n-        @Override\n-        public Iterator<Integer> removedProperties()\n-        {\n-            return emptyIterator();\n-        }\n+    @Override\n+    public Iterator<StorageProperty> changedProperties()\n+    {\n+        return emptyIterator();\n+    }\n \n-        @Override\n-        public Iterator<StorageProperty> addedAndChangedProperties()\n-        {\n-            return emptyIterator();\n-        }\n+    @Override\n+    public Iterator<Integer> removedProperties()\n+    {\n+        return emptyIterator();\n+    }\n \n-        @Override\n-        public Iterator<StorageProperty> augmentProperties( Iterator<StorageProperty> iterator )\n-        {\n-            return iterator;\n-        }\n+    @Override\n+    public Iterator<StorageProperty> addedAndChangedProperties()\n+    {\n+        return emptyIterator();\n+    }\n \n-        @Override\n-        public void accept( Visitor visitor )\n-        {\n-        }\n+    @Override\n+    public Iterator<StorageProperty> augmentProperties( Iterator<StorageProperty> iterator )\n+    {\n+        return iterator;\n+    }\n \n-        @Override\n-        public boolean hasPropertyChanges()\n-        {\n-            return false;\n-        }\n+    @Override\n+    public void accept( Visitor visitor )\n+    {\n+    }\n \n-        @Override\n-        public StorageProperty getChangedProperty( int propertyKeyId )\n-        {\n-            return null;\n-        }\n+    @Override\n+    public boolean hasPropertyChanges()\n+    {\n+        return false;\n+    }\n \n-        @Override\n-        public StorageProperty getAddedProperty( int propertyKeyId )\n-        {\n-            return null;\n-        }\n+    @Override\n+    public StorageProperty getChangedProperty( int propertyKeyId )\n+    {\n+        return null;\n+    }\n \n-        @Override\n-        public boolean isPropertyChangedOrRemoved( int propertyKey )\n-        {\n-            return false;\n-        }\n+    @Override\n+    public StorageProperty getAddedProperty( int propertyKeyId )\n+    {\n+        return null;\n+    }\n \n-        @Override\n-        public boolean isPropertyRemoved( int propertyKeyId )\n-        {\n-            return false;\n-        }\n-    };\n+    @Override\n+    public boolean isPropertyChangedOrRemoved( int propertyKey )\n+    {\n+        return false;\n+    }\n \n-    private long startNode = -1;\n-    private long endNode = -1;\n-    private int type = -1;\n+    @Override\n+    public boolean isPropertyRemoved( int propertyKeyId )\n+    {\n+        return false;\n+    }\n+};\n+    private long startNode = - 1;\n+    private long endNode = - 1;\n+    private int type = - 1;\n \n     RelationshipStateImpl( long id )\n     {\n@@ -128,11 +125,12 @@ class RelationshipStateImpl extends PropertyContainerStateImpl implements Relati\n     @Override\n     public <EX extends Exception> boolean accept( RelationshipVisitor<EX> visitor ) throws EX\n     {\n-        if ( type != -1 )\n+        if ( type != - 1 )\n         {\n             visitor.visit( getId(), type, startNode, endNode );\n             return true;\n         }\n+\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
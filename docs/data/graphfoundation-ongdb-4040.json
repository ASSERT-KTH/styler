{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4040",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4040/AllPaths.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4040/AllPaths.java\nindex 74fe31f4792..0fff8efafc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4040/AllPaths.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4040/AllPaths.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.path;\n \n import org.neo4j.graphdb.GraphDatabaseService;\n@@ -30,29 +31,29 @@ import static org.neo4j.graphdb.traversal.Evaluators.toDepth;\n \n public class AllPaths extends TraversalPathFinder\n {\n-    private final PathExpander expander;\n-    private final int maxDepth;\n+  private final PathExpander expander;\n+  private final int maxDepth;\n \n-    public AllPaths( int maxDepth, PathExpander expander )\n-    {\n-        this.maxDepth = maxDepth;\n-        this.expander = expander;\n-    }\n+  public AllPaths(int maxDepth, PathExpander expander)\n+  {\n+    this.maxDepth = maxDepth;\n+    this.expander = expander;\n+  }\n \n-    protected Uniqueness uniqueness()\n-    {\n-        return Uniqueness.RELATIONSHIP_PATH;\n-    }\n+  protected Uniqueness uniqueness()\n+  {\n+    return Uniqueness.RELATIONSHIP_PATH;\n+  }\n \n-    @Override\n-    protected Traverser instantiateTraverser( Node start, Node end )\n-    {\n-        // Bidirectional traversal\n-        GraphDatabaseService db = start.getGraphDatabase();\n-        TraversalDescription base = db.traversalDescription().depthFirst().uniqueness( uniqueness() );\n-        return db.bidirectionalTraversalDescription()\n-                .startSide( base.expand( expander ).evaluator( toDepth( maxDepth / 2 ) ) )\n-                .endSide( base.expand( expander.reverse() ).evaluator( toDepth( maxDepth - maxDepth / 2 ) ) )\n-                .traverse( start, end );\n-    }\n+  @Override\n+  protected Traverser instantiateTraverser(Node start, Node end)\n+  {\n+    // Bidirectional traversal\n+    GraphDatabaseService db = start.getGraphDatabase();\n+    TraversalDescription base = db.traversalDescription().depthFirst().uniqueness(uniqueness());\n+    return db.bidirectionalTraversalDescription()\n+        .startSide(base.expand(expander).evaluator(toDepth(maxDepth / 2)))\n+        .endSide(base.expand(expander.reverse()).evaluator(toDepth(maxDepth - maxDepth / 2)))\n+        .traverse(start, end);\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4040/AllPaths.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4040/AllPaths.java\nindex 74fe31f4792..a886882c240 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4040/AllPaths.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4040/AllPaths.java\n@@ -50,9 +50,6 @@ public class AllPaths extends TraversalPathFinder\n         // Bidirectional traversal\n         GraphDatabaseService db = start.getGraphDatabase();\n         TraversalDescription base = db.traversalDescription().depthFirst().uniqueness( uniqueness() );\n-        return db.bidirectionalTraversalDescription()\n-                .startSide( base.expand( expander ).evaluator( toDepth( maxDepth / 2 ) ) )\n-                .endSide( base.expand( expander.reverse() ).evaluator( toDepth( maxDepth - maxDepth / 2 ) ) )\n-                .traverse( start, end );\n+        return db.bidirectionalTraversalDescription().startSide( base.expand( expander ).evaluator( toDepth( maxDepth / 2 ) ) ).endSide( base.expand( expander.reverse() ).evaluator( toDepth( maxDepth - maxDepth / 2 ) ) ).traverse( start, end );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
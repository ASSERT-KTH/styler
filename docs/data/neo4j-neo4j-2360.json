{
    "project_name": "neo4j-neo4j",
    "error_id": "2360",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2360/DefaultNodeLabelIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2360/DefaultNodeLabelIndexCursor.java\nindex ae4ca088a06..d9338ce446e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2360/DefaultNodeLabelIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2360/DefaultNodeLabelIndexCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.eclipse.collections.api.set.primitive.LongSet;\n@@ -34,57 +35,57 @@ class DefaultNodeLabelIndexCursor extends DefaultEntityTokenIndexCursor<DefaultN\n {\n     private final DefaultNodeCursor securityNodeCursor;\n \n-    DefaultNodeLabelIndexCursor( CursorPool<DefaultNodeLabelIndexCursor> pool, DefaultNodeCursor securityNodeCursor )\n+    DefaultNodeLabelIndexCursor(CursorPool<DefaultNodeLabelIndexCursor> pool, DefaultNodeCursor securityNodeCursor)\n     {\n-        super( pool );\n+        super(pool);\n         this.securityNodeCursor = securityNodeCursor;\n     }\n \n     @Override\n-    LongSet createAddedInTxState( TransactionState txState, int token )\n+    LongSet createAddedInTxState(TransactionState txState, int token)\n     {\n-        return txState.nodesWithLabelChanged( token ).getAdded().freeze();\n+        return txState.nodesWithLabelChanged(token).getAdded().freeze();\n     }\n \n     @Override\n-    LongSet createDeletedInTxState( TransactionState txState, int token )\n+    LongSet createDeletedInTxState(TransactionState txState, int token)\n     {\n-        return mergeToSet( txState.addedAndRemovedNodes().getRemoved(), txState.nodesWithLabelChanged( token ).getRemoved() );\n+        return mergeToSet(txState.addedAndRemovedNodes().getRemoved(), txState.nodesWithLabelChanged(token).getRemoved());\n     }\n \n     @Override\n-    void traceScan( KernelReadTracer tracer, int token )\n+    void traceScan(KernelReadTracer tracer, int token)\n     {\n-        tracer.onLabelScan( token );\n+        tracer.onLabelScan(token);\n     }\n \n     @Override\n-    void traceNext( KernelReadTracer tracer, long entity )\n+    void traceNext(KernelReadTracer tracer, long entity)\n     {\n-        tracer.onNode( entity );\n+        tracer.onNode(entity);\n     }\n \n     @Override\n-    boolean allowedToSeeAllEntitiesWithToken( AccessMode accessMode, int token )\n+    boolean allowedToSeeAllEntitiesWithToken(AccessMode accessMode, int token)\n     {\n-        return accessMode.allowsTraverseAllNodesWithLabel( token );\n+        return accessMode.allowsTraverseAllNodesWithLabel(token);\n     }\n \n     @Override\n-    boolean allowedToSeeEntity( AccessMode accessMode, long entityReference, TokenSet tokens )\n+    boolean allowedToSeeEntity(AccessMode accessMode, long entityReference, TokenSet tokens)\n     {\n-        if ( tokens == null )\n+        if (tokens == null)\n         {\n-            readEntity( read -> read.singleNode( entityReference, securityNodeCursor ) );\n+            readEntity(read -> read.singleNode(entityReference, securityNodeCursor));\n             return securityNodeCursor.next();\n         }\n-        return accessMode.allowsTraverseNode( tokens.all() );\n+        return accessMode.allowsTraverseNode(tokens.all());\n     }\n \n     @Override\n-    public void node( NodeCursor cursor )\n+    public void node(NodeCursor cursor)\n     {\n-        readEntity( read -> read.singleNode( entityReference(), cursor ) );\n+        readEntity(read -> read.singleNode(entityReference(), cursor));\n     }\n \n     @Override\n@@ -108,11 +109,10 @@ class DefaultNodeLabelIndexCursor extends DefaultEntityTokenIndexCursor<DefaultN\n     @Override\n     public String toString()\n     {\n-        if ( isClosed() )\n+        if (isClosed())\n         {\n             return \"NodeLabelIndexCursor[closed state]\";\n-        }\n-        else\n+        } else\n         {\n             return \"NodeLabelIndexCursor[node=\" + entityReference() + \", labels= \" + tokens() + \"]\";\n         }\n@@ -120,7 +120,7 @@ class DefaultNodeLabelIndexCursor extends DefaultEntityTokenIndexCursor<DefaultN\n \n     public void release()\n     {\n-        if ( securityNodeCursor != null )\n+        if (securityNodeCursor != null)\n         {\n             securityNodeCursor.close();\n             securityNodeCursor.release();\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
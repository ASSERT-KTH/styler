{
    "project_name": "seedstack-business",
    "error_id": "185",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.domain;\n\nimport java.lang.annotation.Annotation;\nimport java.lang.reflect.Type;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/185/DomainRegistry.java\nindex e1a16cdb795..9bd76320327 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/185/DomainRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/185/DomainRegistry.java\nindex e1a16cdb795..a82606afe23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/185/DomainRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.annotation.Annotation;\n@@ -55,7 +56,7 @@ public interface DomainRegistry {\n      * @return an instance of the repository.\n      */\n     <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n-            Annotation qualifier);\n+                                                                   Annotation qualifier);\n \n     /**\n      * Get the {@link Repository} for an aggregate root and a qualifier.\n@@ -68,7 +69,7 @@ public interface DomainRegistry {\n      * @return an instance of the repository.\n      */\n     <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n-            Class<? extends Annotation> qualifier);\n+                                                                   Class<? extends Annotation> qualifier);\n \n     /**\n      * Get the {@link Repository} for an aggregate root and a qualifier.\n@@ -81,7 +82,7 @@ public interface DomainRegistry {\n      * @return an instance of the repository.\n      */\n     <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n-            String qualifier);\n+                                                                   String qualifier);\n \n     /**\n      * Get a {@link Repository} from the domain.\n@@ -105,7 +106,7 @@ public interface DomainRegistry {\n      * @return an instance of the repository.\n      */\n     <R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType,\n-            Class<? extends Annotation> qualifier);\n+                                                                                Class<? extends Annotation> qualifier);\n \n     /**\n      * Get a {@link Repository} from the domain.\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "60",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 70.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 82.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "85",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 94.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 118.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/185/DomainRegistry.java\nindex e1a16cdb795..338483061a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/185/DomainRegistry.java\n@@ -57,7 +57,7 @@ public interface DomainRegistry {\n     <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n             Annotation qualifier);\n \n-    /**\n+/**\n      * Get the {@link Repository} for an aggregate root and a qualifier.\n      *\n      * @param <A>                the type of the aggregate root.\n@@ -67,10 +67,9 @@ public interface DomainRegistry {\n      * @param qualifier          the repository qualifier.\n      * @return an instance of the repository.\n      */\n-    <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n-            Class<? extends Annotation> qualifier);\n+    <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass, Class<? extends Annotation> qualifier);\n \n-    /**\n+/**\n      * Get the {@link Repository} for an aggregate root and a qualifier.\n      *\n      * @param <A>                the type of the aggregate root.\n@@ -83,7 +82,7 @@ public interface DomainRegistry {\n     <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n             String qualifier);\n \n-    /**\n+/**\n      * Get a {@link Repository} from the domain.\n      *\n      * @param <R>            the type of the repository.\n@@ -104,10 +103,9 @@ public interface DomainRegistry {\n      * @param qualifier      the repository qualifier.\n      * @return an instance of the repository.\n      */\n-    <R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType,\n-            Class<? extends Annotation> qualifier);\n+    <R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType, Class<? extends Annotation> qualifier);\n \n-    /**\n+/**\n      * Get a {@link Repository} from the domain.\n      *\n      * @param <R>            the type of the repository.\n@@ -295,4 +293,4 @@ public interface DomainRegistry {\n      * @return an instance of the domain policy.\n      */\n     <P> P getPolicy(Type policyType, String qualifier);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "38",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "48",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "59",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 68.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 89.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 100.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 111.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 120.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 501).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 130.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 540).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 140.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 519).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 149.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "149",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "151",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 159.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "161",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 169.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "169",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "171",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 178.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 470).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "178",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 188.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 509).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "188",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 198.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 488).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "198",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 207.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 465).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "207",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 217.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 504).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "217",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 227.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 483).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "227",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "229",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 236.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 468).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "236",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 246.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 507).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "246",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 256.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 486).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "256",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "258",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 265.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "265",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 463).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "265",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "267",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 275.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "275",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 502).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "275",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "277",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 430, indentation should be the same level as line 285.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "285",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 481).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "285",
                    "column": "431",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 430, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/185/DomainRegistry.java\nindex e1a16cdb795..1a378bb95b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/185/DomainRegistry.java\n@@ -31,6 +31,8 @@ import org.seedstack.business.Service;\n  * SeedStack {@code TypeOf} is used to capture generics and provide a {@link Type} instance but any\n  * other implementation can be used. </p>\n  */\n+\n+\n public interface DomainRegistry {\n \n     /**\n@@ -41,8 +43,7 @@ public interface DomainRegistry {\n      * @param aggregateRootClass the aggregate root class.\n      * @param idClass            the aggregate root identifier class.\n      * @return an instance of the repository.\n-     */\n-    <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass);\n+     */<A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass);\n \n     /**\n      * Get the {@link Repository} for an aggregate root and a qualifier.\n@@ -53,9 +54,7 @@ public interface DomainRegistry {\n      * @param idClass            the aggregate root identifier class.\n      * @param qualifier          the repository qualifier.\n      * @return an instance of the repository.\n-     */\n-    <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n-            Annotation qualifier);\n+     */<A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass, Annotation qualifier);\n \n     /**\n      * Get the {@link Repository} for an aggregate root and a qualifier.\n@@ -66,9 +65,7 @@ public interface DomainRegistry {\n      * @param idClass            the aggregate root identifier class.\n      * @param qualifier          the repository qualifier.\n      * @return an instance of the repository.\n-     */\n-    <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n-            Class<? extends Annotation> qualifier);\n+     */<A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get the {@link Repository} for an aggregate root and a qualifier.\n@@ -79,9 +76,7 @@ public interface DomainRegistry {\n      * @param idClass            the aggregate root identifier class.\n      * @param qualifier          the repository qualifier.\n      * @return an instance of the repository.\n-     */\n-    <A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass,\n-            String qualifier);\n+     */<A extends AggregateRoot<I>, I> Repository<A, I> getRepository(Class<A> aggregateRootClass, Class<I> idClass, String qualifier);\n \n     /**\n      * Get a {@link Repository} from the domain.\n@@ -91,8 +86,7 @@ public interface DomainRegistry {\n      * @param <I>            the type of the aggregate root identifier.\n      * @param repositoryType the full generic type.\n      * @return an instance of the repository.\n-     */\n-    <R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType);\n+     */<R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType);\n \n     /**\n      * Get a {@link Repository} from the domain.\n@@ -103,9 +97,7 @@ public interface DomainRegistry {\n      * @param repositoryType the full generic type.\n      * @param qualifier      the repository qualifier.\n      * @return an instance of the repository.\n-     */\n-    <R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType,\n-            Class<? extends Annotation> qualifier);\n+     */<R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get a {@link Repository} from the domain.\n@@ -116,8 +108,7 @@ public interface DomainRegistry {\n      * @param repositoryType the full generic type.\n      * @param qualifier      the repository qualifier.\n      * @return an instance of the repository.\n-     */\n-    <R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType, String qualifier);\n+     */<R extends Repository<A, I>, A extends AggregateRoot<I>, I> R getRepository(Type repositoryType, String qualifier);\n \n     /**\n      * Get the {@link Factory} for an aggregate root.\n@@ -126,7 +117,7 @@ public interface DomainRegistry {\n      * @param producibleClass the producible class.\n      * @return an instance of the factory.\n      */\n-    <P extends Producible> Factory<P> getFactory(Class<P> producibleClass);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P extends Producible> Factory<P> getFactory(Class<P> producibleClass);\n \n     /**\n      * Get the {@link Factory} with a qualifier for an aggregate root.\n@@ -136,7 +127,7 @@ public interface DomainRegistry {\n      * @param qualifier       the factory qualifier.\n      * @return an instance of the factory.\n      */\n-    <P extends Producible> Factory<P> getFactory(Class<P> producibleClass, Class<? extends Annotation> qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P extends Producible> Factory<P> getFactory(Class<P> producibleClass, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get the {@link Factory} with a qualifier for an aggregate root.\n@@ -146,7 +137,7 @@ public interface DomainRegistry {\n      * @param qualifier       the factory qualifier.\n      * @return an instance of the factory.\n      */\n-    <P extends Producible> Factory<P> getFactory(Class<P> producibleClass, String qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P extends Producible> Factory<P> getFactory(Class<P> producibleClass, String qualifier);\n \n     /**\n      * Get a {@link Factory} from the domain.\n@@ -155,8 +146,7 @@ public interface DomainRegistry {\n      * @param <P>         the type of the producible object.\n      * @param factoryType the capture of the full generic type.\n      * @return an instance of the factory.\n-     */\n-    <F extends Factory<P>, P extends Producible> F getFactory(Type factoryType);\n+     */<F extends Factory<P>, P extends Producible> F getFactory(Type factoryType);\n \n     /**\n      * Get a {@link Factory} from the domain.\n@@ -166,8 +156,7 @@ public interface DomainRegistry {\n      * @param factoryType the full generic type.\n      * @param qualifier   the factory qualifier.\n      * @return an instance of the factory.\n-     */\n-    <F extends Factory<P>, P extends Producible> F getFactory(Type factoryType, Class<? extends Annotation> qualifier);\n+     */<F extends Factory<P>, P extends Producible> F getFactory(Type factoryType, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get a {@link Factory} from the domain.\n@@ -177,8 +166,7 @@ public interface DomainRegistry {\n      * @param factoryType the full generic type.\n      * @param qualifier   the factory qualifier.\n      * @return an instance of the factory.\n-     */\n-    <F extends Factory<P>, P extends Producible> F getFactory(Type factoryType, String qualifier);\n+     */<F extends Factory<P>, P extends Producible> F getFactory(Type factoryType, String qualifier);\n \n     /**\n      * Get a {@link Service} from the domain.\n@@ -187,7 +175,7 @@ public interface DomainRegistry {\n      * @param serviceClass the class of the service interface.\n      * @return an instance of the service.\n      */\n-    <S> S getService(Class<S> serviceClass);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <S> S getService(Class<S> serviceClass);\n \n     /**\n      * Get a {@link Service} with a qualifier from the domain.\n@@ -197,7 +185,7 @@ public interface DomainRegistry {\n      * @param qualifier    the service qualifier.\n      * @return an instance of the service.\n      */\n-    <S> S getService(Class<S> serviceClass, Class<? extends Annotation> qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <S> S getService(Class<S> serviceClass, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get a {@link Service} with a qualifier from the domain.\n@@ -207,7 +195,7 @@ public interface DomainRegistry {\n      * @param qualifier    the service qualifier.\n      * @return an instance of the service.\n      */\n-    <S> S getService(Class<S> serviceClass, String qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <S> S getService(Class<S> serviceClass, String qualifier);\n \n     /**\n      * Get a {@link Service} from the domain.\n@@ -216,7 +204,7 @@ public interface DomainRegistry {\n      * @param serviceType the full generic type.\n      * @return an instance of the service.\n      */\n-    <S> S getService(Type serviceType);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <S> S getService(Type serviceType);\n \n     /**\n      * Get a {@link Service} from the domain.\n@@ -226,7 +214,7 @@ public interface DomainRegistry {\n      * @param qualifier   the service qualifier.\n      * @return an instance of the service.\n      */\n-    <S> S getService(Type serviceType, Class<? extends Annotation> qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <S> S getService(Type serviceType, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get a {@link Service} from the domain.\n@@ -236,7 +224,7 @@ public interface DomainRegistry {\n      * @param qualifier   the service qualifier.\n      * @return an instance of the service.\n      */\n-    <S> S getService(Type serviceType, String qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <S> S getService(Type serviceType, String qualifier);\n \n     /**\n      * Get a {@link DomainPolicy} from the domain.\n@@ -245,7 +233,7 @@ public interface DomainRegistry {\n      * @param policyClass the policy class.\n      * @return an instance of the domain policy.\n      */\n-    <P> P getPolicy(Class<P> policyClass);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P> P getPolicy(Class<P> policyClass);\n \n     /**\n      * Get a {@link DomainPolicy} with a qualifier from the domain.\n@@ -255,7 +243,7 @@ public interface DomainRegistry {\n      * @param qualifier   the policy qualifier.\n      * @return an instance of the domain policy.\n      */\n-    <P> P getPolicy(Class<P> policyClass, Class<? extends Annotation> qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P> P getPolicy(Class<P> policyClass, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get a {@link DomainPolicy} with a qualifier from the domain.\n@@ -265,7 +253,7 @@ public interface DomainRegistry {\n      * @param qualifier   the policy qualifier.\n      * @return an instance of the domain policy.\n      */\n-    <P> P getPolicy(Class<P> policyClass, String qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P> P getPolicy(Class<P> policyClass, String qualifier);\n \n     /**\n      * Get a {@link DomainPolicy} from the domain.\n@@ -274,7 +262,7 @@ public interface DomainRegistry {\n      * @param policyType the full generic type.\n      * @return an instance of the domain policy.\n      */\n-    <P> P getPolicy(Type policyType);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P> P getPolicy(Type policyType);\n \n     /**\n      * Get a {@link DomainPolicy} from the domain.\n@@ -284,7 +272,7 @@ public interface DomainRegistry {\n      * @param qualifier  the policy qualifier.\n      * @return an instance of the domain policy.\n      */\n-    <P> P getPolicy(Type policyType, Class<? extends Annotation> qualifier);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P> P getPolicy(Type policyType, Class<? extends Annotation> qualifier);\n \n     /**\n      * Get a {@link DomainPolicy} from the domain.\n@@ -294,5 +282,5 @@ public interface DomainRegistry {\n      * @param qualifier  the policy qualifier.\n      * @return an instance of the domain policy.\n      */\n-    <P> P getPolicy(Type policyType, String qualifier);\n-}\n+                                                                                                                                                                                                                                                                                                                                                                                                                                              <P> P getPolicy(Type policyType, String qualifier);\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/185/DomainRegistry.java\nindex e1a16cdb795..9bd76320327 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/185/DomainRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/185/DomainRegistry.java\nindex e1a16cdb795..9bd76320327 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/185/DomainRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/185/DomainRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
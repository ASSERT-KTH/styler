{
    "project_name": "neo4j-neo4j",
    "error_id": "362",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/362/UserMessagesHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/362/UserMessagesHandler.java\nindex 1adf88bb21c..9726a88feae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/362/UserMessagesHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/362/UserMessagesHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell;\n \n import javax.annotation.Nonnull;\n@@ -32,7 +33,7 @@ public class UserMessagesHandler\n     private ConnectionConfig connectionConfig;\n     private String serverVersion;\n \n-    public UserMessagesHandler( @Nonnull ConnectionConfig connectionConfig, @Nonnull String serverVersion )\n+    public UserMessagesHandler(@Nonnull ConnectionConfig connectionConfig, @Nonnull String serverVersion)\n     {\n         this.connectionConfig = connectionConfig;\n         this.serverVersion = serverVersion;\n@@ -42,36 +43,36 @@ public class UserMessagesHandler\n     public String getWelcomeMessage()\n     {\n         String neo4j = \"Neo4j\";\n-        if ( !serverVersion.isEmpty() )\n+        if (!serverVersion.isEmpty())\n         {\n-            Version version = Versions.version( serverVersion );\n+            Version version = Versions.version(serverVersion);\n             neo4j += \" using Bolt protocol version \" + version.major() + \".\" + version.minor();\n         }\n-        AnsiFormattedText welcomeMessage = AnsiFormattedText.from( \"Connected to \" )\n-                                                            .append( neo4j )\n-                                                            .append( \" at \" )\n-                                                            .bold().append( connectionConfig.driverUrl() ).boldOff();\n+        AnsiFormattedText welcomeMessage = AnsiFormattedText.from(\"Connected to \")\n+          .append(neo4j)\n+          .append(\" at \")\n+          .bold().append(connectionConfig.driverUrl()).boldOff();\n \n-        if ( !connectionConfig.username().isEmpty() )\n+        if (!connectionConfig.username().isEmpty())\n         {\n             welcomeMessage = welcomeMessage\n-                    .append( \" as user \" )\n-                    .bold().append( connectionConfig.username() ).boldOff();\n+              .append(\" as user \")\n+              .bold().append(connectionConfig.username()).boldOff();\n         }\n \n         return welcomeMessage\n-                .append( \".\\nType \" )\n-                .bold().append( Help.COMMAND_NAME ).boldOff()\n-                .append( \" for a list of available commands or \" )\n-                .bold().append( Exit.COMMAND_NAME ).boldOff()\n-                .append( \" to exit the shell.\" )\n-                .append( \"\\nNote that Cypher queries must end with a \" )\n-                .bold().append( \"semicolon.\" ).boldOff().formattedString();\n+          .append(\".\\nType \")\n+          .bold().append(Help.COMMAND_NAME).boldOff()\n+          .append(\" for a list of available commands or \")\n+          .bold().append(Exit.COMMAND_NAME).boldOff()\n+          .append(\" to exit the shell.\")\n+          .append(\"\\nNote that Cypher queries must end with a \")\n+          .bold().append(\"semicolon.\").boldOff().formattedString();\n     }\n \n     @Nonnull\n     public String getExitMessage()\n     {\n-        return AnsiFormattedText.s().append( \"\\nBye!\" ).formattedString();\n+        return AnsiFormattedText.s().append(\"\\nBye!\").formattedString();\n     }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/362/UserMessagesHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/362/UserMessagesHandler.java\nindex 1adf88bb21c..3cd2e57593a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/362/UserMessagesHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/362/UserMessagesHandler.java\n@@ -51,8 +51,7 @@ public class UserMessagesHandler\n                                                             .append( neo4j )\n                                                             .append( \" at \" )\n                                                             .bold().append( connectionConfig.driverUrl() ).boldOff();\n-\n-        if ( !connectionConfig.username().isEmpty() )\n+if ( !connectionConfig.username().isEmpty() )\n         {\n             welcomeMessage = welcomeMessage\n                     .append( \" as user \" )\n@@ -74,4 +73,4 @@ public class UserMessagesHandler\n     {\n         return AnsiFormattedText.s().append( \"\\nBye!\" ).formattedString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "552",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/552/Zero.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/552/Zero.java\nindex 085b3507af0..8af59e91c10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/552/Zero.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/552/Zero.java\n@@ -57,7 +57,7 @@ public class Zero extends UpdateFunc {\n     /**\n      * Instantiates a new Zero updater param.\n      *\n-     * @param matrixId the matrix id\n+     * @param matrixId    the matrix id\n      * @param updateClock the update clock\n      */\n     public ZeroParam(int matrixId, boolean updateClock) {\n@@ -87,8 +87,8 @@ public class Zero extends UpdateFunc {\n     /**\n      * Creates new partition updater parameter.\n      *\n-     * @param matrixId the matrix id\n-     * @param partKey the part key\n+     * @param matrixId    the matrix id\n+     * @param partKey     the part key\n      * @param updateClock the update clock\n      */\n     public ZeroPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock) {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/552/Zero.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/552/Zero.java\nindex 085b3507af0..47224dab577 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/552/Zero.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/552/Zero.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.matrix.psf.update.zero;\n \n import com.tencent.angel.PartitionKey;\n@@ -130,4 +129,4 @@ public class Zero extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/552/Zero.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/552/Zero.java\nindex 085b3507af0..9e6dba75c68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/552/Zero.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/552/Zero.java\n@@ -31,6 +31,7 @@ import java.util.List;\n /**\n  * TODO Updates elements as zero.\n  */\n+\n public class Zero extends UpdateFunc {\n \n   /**\n@@ -38,6 +39,7 @@ public class Zero extends UpdateFunc {\n    *\n    * @param param the param\n    */\n+\n   public Zero(UpdateParam param) {\n     super(param);\n   }\n@@ -45,6 +47,7 @@ public class Zero extends UpdateFunc {\n   /**\n    * Creates a new updater.\n    */\n+\n   public Zero() {\n     this(null);\n   }\n@@ -52,6 +55,7 @@ public class Zero extends UpdateFunc {\n   /**\n    * The parameter of zero updater.\n    */\n+\n   public static class ZeroParam extends UpdateParam {\n \n     /**\n@@ -60,20 +64,19 @@ public class Zero extends UpdateFunc {\n      * @param matrixId the matrix id\n      * @param updateClock the update clock\n      */\n+\n     public ZeroParam(int matrixId, boolean updateClock) {\n       super(matrixId, updateClock);\n     }\n \n     @Override\n     public List<PartitionUpdateParam> split() {\n-      List<PartitionKey> partList =\n-          PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n+      List<PartitionKey> partList = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n       int size = partList.size();\n       List<PartitionUpdateParam> partParamList = new ArrayList<PartitionUpdateParam>(size);\n       for (int i = 0; i < size; i++) {\n         partParamList.add(new ZeroPartitionParam(matrixId, partList.get(i), updateClock));\n       }\n-\n       return partParamList;\n     }\n   }\n@@ -82,6 +85,7 @@ public class Zero extends UpdateFunc {\n   /**\n    * The partition updater parameter.\n    */\n+\n   public static class ZeroPartitionParam extends PartitionUpdateParam {\n \n     /**\n@@ -91,6 +95,7 @@ public class Zero extends UpdateFunc {\n      * @param partKey the part key\n      * @param updateClock the update clock\n      */\n+\n     public ZeroPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock) {\n       super(matrixId, partKey, updateClock);\n     }\n@@ -98,6 +103,7 @@ public class Zero extends UpdateFunc {\n     /**\n      * Creates a new partition updater parameter by default.\n      */\n+\n     public ZeroPartitionParam() {\n       super();\n     }\n@@ -105,9 +111,7 @@ public class Zero extends UpdateFunc {\n \n   @Override\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n-    RowBasedPartition part = (RowBasedPartition) psContext.getMatrixStorageManager()\n-        .getPart(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n-\n+    RowBasedPartition part = (RowBasedPartition) psContext.getMatrixStorageManager().getPart(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n     if (part != null) {\n       int startRow = part.getPartitionKey().getStartRow();\n       int endRow = part.getPartitionKey().getEndRow();\n@@ -119,7 +123,6 @@ public class Zero extends UpdateFunc {\n         zero(row);\n       }\n     }\n-\n   }\n \n   private void zero(ServerRow row) {\n@@ -130,4 +133,5 @@ public class Zero extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "766",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "90",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/766/SpatialIndexConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/766/SpatialIndexConfig.java\nindex 56c5332932f..13585adbf1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/766/SpatialIndexConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/766/SpatialIndexConfig.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.util.HashMap;\n@@ -51,40 +52,40 @@ public final class SpatialIndexConfig\n     /**\n      * Extract spatial index configuration and put into provided map.\n      *\n-     * @param map {@link Map} into which extracted configurations should be inserted.\n-     * @param crs {@link CoordinateReferenceSystem} from which to extract configurations.\n+     * @param map      {@link Map} into which extracted configurations should be inserted.\n+     * @param crs      {@link CoordinateReferenceSystem} from which to extract configurations.\n      * @param settings {@link SpaceFillingCurveSettings} from which to extract configurations.\n      */\n-    static void addSpatialConfig( Map<String,Value> map, CoordinateReferenceSystem crs, SpaceFillingCurveSettings settings )\n+    static void addSpatialConfig(Map<String, Value> map, CoordinateReferenceSystem crs, SpaceFillingCurveSettings settings)\n     {\n         double[] min = settings.indexExtents().getMin();\n         double[] max = settings.indexExtents().getMax();\n-        addSpatialConfig( map, crs, min, max );\n+        addSpatialConfig(map, crs, min, max);\n     }\n \n-    public static void addSpatialConfig( Map<String,Value> map, CoordinateReferenceSystem crs, double[] min, double[] max )\n+    public static void addSpatialConfig(Map<String, Value> map, CoordinateReferenceSystem crs, double[] min, double[] max)\n     {\n-        String minKey = IndexSettingUtil.spatialMinSettingForCrs( crs ).getSettingName();\n-        String maxKey = IndexSettingUtil.spatialMaxSettingForCrs( crs ).getSettingName();\n-        map.put( minKey, Values.doubleArray( min ) );\n-        map.put( maxKey, Values.doubleArray( max ) );\n+        String minKey = IndexSettingUtil.spatialMinSettingForCrs(crs).getSettingName();\n+        String maxKey = IndexSettingUtil.spatialMaxSettingForCrs(crs).getSettingName();\n+        map.put(minKey, Values.doubleArray(min));\n+        map.put(maxKey, Values.doubleArray(max));\n     }\n \n     /**\n      * Throws an {@link IllegalArgumentException} if the spatial settings in the given {@link IndexConfig} are invalid.\n      */\n-    static void validateSpatialConfig( IndexConfig indexConfig )\n+    static void validateSpatialConfig(IndexConfig indexConfig)\n     {\n-       extractSpatialConfig( indexConfig );\n+        extractSpatialConfig(indexConfig);\n     }\n \n-    static IndexConfig addSpatialConfig( IndexConfig indexConfig, CoordinateReferenceSystem crs, SpaceFillingCurveSettings settings )\n+    static IndexConfig addSpatialConfig(IndexConfig indexConfig, CoordinateReferenceSystem crs, SpaceFillingCurveSettings settings)\n     {\n-        Map<String,Value> spatialConfig = new HashMap<>();\n-        addSpatialConfig( spatialConfig, crs, settings );\n-        for ( var entry : spatialConfig.entrySet() )\n+        Map<String, Value> spatialConfig = new HashMap<>();\n+        addSpatialConfig(spatialConfig, crs, settings);\n+        for (var entry : spatialConfig.entrySet())\n         {\n-            indexConfig = indexConfig.withIfAbsent( entry.getKey(), entry.getValue() );\n+            indexConfig = indexConfig.withIfAbsent(entry.getKey(), entry.getValue());\n         }\n         return indexConfig;\n     }\n@@ -96,32 +97,32 @@ public final class SpatialIndexConfig\n      * @return {@link Map} map containing space filling curve settings for every supported crs, derived from provided index config .\n      * @throws NullPointerException if index config is missing configuration for any crs.\n      */\n-    static Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> extractSpatialConfig( IndexConfig indexConfig )\n+    static Map<CoordinateReferenceSystem, SpaceFillingCurveSettings> extractSpatialConfig(IndexConfig indexConfig)\n     {\n-        Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> result = new HashMap<>();\n+        Map<CoordinateReferenceSystem, SpaceFillingCurveSettings> result = new HashMap<>();\n \n-        result.put( Cartesian, settingFromIndexConfig( indexConfig, Cartesian ) );\n-        result.put( Cartesian_3D, settingFromIndexConfig( indexConfig, Cartesian_3D ) );\n-        result.put( WGS84, settingFromIndexConfig( indexConfig, WGS84 ) );\n-        result.put( WGS84_3D, settingFromIndexConfig( indexConfig, WGS84_3D ) );\n+        result.put(Cartesian, settingFromIndexConfig(indexConfig, Cartesian));\n+        result.put(Cartesian_3D, settingFromIndexConfig(indexConfig, Cartesian_3D));\n+        result.put(WGS84, settingFromIndexConfig(indexConfig, WGS84));\n+        result.put(WGS84_3D, settingFromIndexConfig(indexConfig, WGS84_3D));\n \n         return result;\n     }\n \n-    private static SpaceFillingCurveSettings settingFromIndexConfig( IndexConfig indexConfig, CoordinateReferenceSystem crs )\n+    private static SpaceFillingCurveSettings settingFromIndexConfig(IndexConfig indexConfig, CoordinateReferenceSystem crs)\n     {\n-        final double[] min = asDoubleArray( indexConfig.get( IndexSettingUtil.spatialMinSettingForCrs( crs ).getSettingName() ) );\n-        final double[] max = asDoubleArray( indexConfig.get( IndexSettingUtil.spatialMaxSettingForCrs( crs ).getSettingName() ) );\n-        final Envelope envelope = new Envelope( min, max );\n-        return new SpaceFillingCurveSettings( crs.getDimension(), envelope );\n+        final double[] min = asDoubleArray(indexConfig.get(IndexSettingUtil.spatialMinSettingForCrs(crs).getSettingName()));\n+        final double[] max = asDoubleArray(indexConfig.get(IndexSettingUtil.spatialMaxSettingForCrs(crs).getSettingName()));\n+        final Envelope envelope = new Envelope(min, max);\n+        return new SpaceFillingCurveSettings(crs.getDimension(), envelope);\n     }\n \n-    private static double[] asDoubleArray( Value value )\n+    private static double[] asDoubleArray(Value value)\n     {\n-        if ( value instanceof DoubleArray )\n+        if (value instanceof DoubleArray)\n         {\n             return ((DoubleArray) value).asObjectCopy();\n         }\n-        throw new IllegalStateException( String.format( \"Expected value to be of type %s but was %s.\", DoubleArray.class, value ) );\n+        throw new IllegalStateException(String.format(\"Expected value to be of type %s but was %s.\", DoubleArray.class, value));\n     }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
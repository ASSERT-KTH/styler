{
    "project_name": "NationalSecurityAgency-emissary",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "51",
                "column": "24",
                "severity": "warning",
                "message": "'}' at column 24 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n    /** This class is not meant to be instantiated. */\n    private JMXUtil() {}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "51",
                    "column": "24",
                    "severity": "warning",
                    "message": "'}' at column 24 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/8/JMXUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/8/JMXUtil.java\nindex 5ecc327bfd9..f16afca70ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/8/JMXUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/8/JMXUtil.java\n@@ -47,6 +47,9 @@ public class JMXUtil {\n         }\n     }\n \n-    /** This class is not meant to be instantiated. */\n-    private JMXUtil() {}\n+    /**\n+     * This class is not meant to be instantiated.\n+     */\n+    private JMXUtil() {\n+    }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/8/JMXUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/8/JMXUtil.java\nindex 5ecc327bfd9..29eb1396136 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/8/JMXUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/8/JMXUtil.java\n@@ -48,5 +48,6 @@ public class JMXUtil {\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private JMXUtil() {}\n-}\n+    private JMXUtil() {\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/8/JMXUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/8/JMXUtil.java\nindex 5ecc327bfd9..823c9b13013 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/8/JMXUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/8/JMXUtil.java\n@@ -1,16 +1,16 @@\n package emissary.util;\n \n import java.lang.management.ManagementFactory;\n-\n import javax.management.MBeanServer;\n import javax.management.ObjectName;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n  * Utility class for JMX operations.\n  */\n+\n+\n public class JMXUtil {\n \n     private static final Logger logger = LoggerFactory.getLogger(JMXUtil.class);\n@@ -20,19 +20,19 @@ public class JMXUtil {\n      *\n      * @param obj object to register\n      */\n+\n     public static void registerMBean(final Object obj) {\n         registerMBean(obj, obj.getClass().getName());\n     }\n \n+\n     public static void registerMBean(final Object obj, final String name) {\n         if (Boolean.parseBoolean(System.getProperty(\"emissary.jmx.disabled\"))) {\n             logger.info(\"Emissary JMX is disabled via emissary.jmx.disabled property\");\n             return;\n         }\n-\n         if (obj != null) {\n             logger.debug(\"Regisering MBean for Class --> \" + obj.getClass().getName());\n-\n             final MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n             try {\n                 final ObjectName objName = new ObjectName(\"emissary:name=\" + name);\n@@ -48,5 +48,8 @@ public class JMXUtil {\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private JMXUtil() {}\n-}\n+\n+    private JMXUtil() {\n+\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "51",
                    "column": "24",
                    "severity": "warning",
                    "message": "'}' at column 24 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "column": "24",
                    "severity": "warning",
                    "message": "'}' at column 24 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
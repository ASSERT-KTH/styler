{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2884",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2884/SourceCodeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2884/SourceCodeGenerator.java\nindex 7ab9920901a..e41b4eb884f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2884/SourceCodeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2884/SourceCodeGenerator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.util.ArrayList;\n@@ -33,57 +34,57 @@ import org.neo4j.codegen.TypeReference;\n \n class SourceCodeGenerator extends CodeGenerator\n {\n-    private final Configuration configuration;\n-    private final Map<TypeReference, StringBuilder> classes = new HashMap<>();\n-    private final SourceCompiler compiler;\n+  private final Configuration configuration;\n+  private final Map<TypeReference, StringBuilder> classes = new HashMap<>();\n+  private final SourceCompiler compiler;\n \n-    SourceCodeGenerator( ClassLoader parentClassLoader, Configuration configuration, SourceCompiler compiler )\n-    {\n-        super( parentClassLoader );\n-        this.configuration = configuration;\n-        this.compiler = compiler;\n-    }\n+  SourceCodeGenerator(ClassLoader parentClassLoader, Configuration configuration, SourceCompiler compiler)\n+  {\n+    super(parentClassLoader);\n+    this.configuration = configuration;\n+    this.compiler = compiler;\n+  }\n \n-    @Override\n-    protected ClassEmitter generate( TypeReference type, TypeReference base, TypeReference[] interfaces )\n+  @Override\n+  protected ClassEmitter generate(TypeReference type, TypeReference base, TypeReference[] interfaces)\n+  {\n+    StringBuilder target = new StringBuilder();\n+    synchronized (this)\n     {\n-        StringBuilder target = new StringBuilder();\n-        synchronized ( this )\n-        {\n-            StringBuilder old = classes.put( type, target );\n-            if ( old != null )\n-            {\n-                classes.put( type, old );\n-                throw new IllegalStateException( \"Trying to generate class twice: \" + type );\n-            }\n-        }\n-        ClassSourceWriter writer = new ClassSourceWriter( target, configuration );\n-        writer.declarePackage( type );\n-        writer.javadoc( \"Generated by \" + getClass().getName() );\n-        writer.publicClass( type );\n-        writer.extendClass( base );\n-        writer.implement( interfaces );\n-        writer.begin();\n-        return writer;\n+      StringBuilder old = classes.put(type, target);\n+      if (old != null)\n+      {\n+        classes.put(type, old);\n+        throw new IllegalStateException(\"Trying to generate class twice: \" + type);\n+      }\n     }\n+    ClassSourceWriter writer = new ClassSourceWriter(target, configuration);\n+    writer.declarePackage(type);\n+    writer.javadoc(\"Generated by \" + getClass().getName());\n+    writer.publicClass(type);\n+    writer.extendClass(base);\n+    writer.implement(interfaces);\n+    writer.begin();\n+    return writer;\n+  }\n \n-    @Override\n-    protected Iterable<? extends ByteCodes> compile( ClassLoader classpathLoader ) throws CompilationFailureException\n-    {\n-        return compiler.compile( sourceFiles(), classpathLoader );\n-    }\n+  @Override\n+  protected Iterable<? extends ByteCodes> compile(ClassLoader classpathLoader) throws CompilationFailureException\n+  {\n+    return compiler.compile(sourceFiles(), classpathLoader);\n+  }\n \n-    private synchronized List<JavaSourceFile> sourceFiles()\n+  private synchronized List<JavaSourceFile> sourceFiles()\n+  {\n+    List<JavaSourceFile> sourceFiles = new ArrayList<>(classes.size());\n+    for (Map.Entry<TypeReference, StringBuilder> entry : classes.entrySet())\n     {\n-        List<JavaSourceFile> sourceFiles = new ArrayList<>( classes.size() );\n-        for ( Map.Entry<TypeReference, StringBuilder> entry : classes.entrySet() )\n-        {\n-            TypeReference reference = entry.getKey();\n-            StringBuilder source = entry.getValue();\n-            configuration.visit( reference, source );\n-            sourceFiles.add( new JavaSourceFile( configuration.sourceBase().uri(\n-                    reference.packageName(), reference.name(), JavaFileObject.Kind.SOURCE ), source ) );\n-        }\n-        return sourceFiles;\n+      TypeReference reference = entry.getKey();\n+      StringBuilder source = entry.getValue();\n+      configuration.visit(reference, source);\n+      sourceFiles.add(new JavaSourceFile(configuration.sourceBase().uri(\n+          reference.packageName(), reference.name(), JavaFileObject.Kind.SOURCE), source));\n     }\n+    return sourceFiles;\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2884/SourceCodeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2884/SourceCodeGenerator.java\nindex 7ab9920901a..acea4e82a8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2884/SourceCodeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2884/SourceCodeGenerator.java\n@@ -34,7 +34,7 @@ import org.neo4j.codegen.TypeReference;\n class SourceCodeGenerator extends CodeGenerator\n {\n     private final Configuration configuration;\n-    private final Map<TypeReference, StringBuilder> classes = new HashMap<>();\n+    private final Map<TypeReference,StringBuilder> classes = new HashMap<>();\n     private final SourceCompiler compiler;\n \n     SourceCodeGenerator( ClassLoader parentClassLoader, Configuration configuration, SourceCompiler compiler )\n@@ -76,14 +76,14 @@ class SourceCodeGenerator extends CodeGenerator\n     private synchronized List<JavaSourceFile> sourceFiles()\n     {\n         List<JavaSourceFile> sourceFiles = new ArrayList<>( classes.size() );\n-        for ( Map.Entry<TypeReference, StringBuilder> entry : classes.entrySet() )\n+        for ( Map.Entry<TypeReference,StringBuilder> entry : classes.entrySet() )\n         {\n             TypeReference reference = entry.getKey();\n             StringBuilder source = entry.getValue();\n             configuration.visit( reference, source );\n-            sourceFiles.add( new JavaSourceFile( configuration.sourceBase().uri(\n-                    reference.packageName(), reference.name(), JavaFileObject.Kind.SOURCE ), source ) );\n+            sourceFiles.add( new JavaSourceFile( configuration.sourceBase().uri( reference.packageName(), reference.name(), JavaFileObject.Kind.SOURCE ), source ) );\n         }\n-        return sourceFiles;\n+\n+return sourceFiles;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
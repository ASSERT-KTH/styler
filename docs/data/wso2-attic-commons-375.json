{
    "project_name": "wso2-attic-commons",
    "error_id": "375",
    "information": {
        "errors": [
            {
                "line": "83",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 148).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\telse if ((schema = (String) entities.get(systemId)) != null && !schema.equals(\"\"))\n\t{\n\t\tis = new XMLInputSource(publicId, referringSchemaInputSource.getSystemId() + INLINE_SCHEMA_ID, null, new StringReader(schema),null);\n\t}\n\t\n    //if(is == null)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/375/InlineXSDResolver.java\nindex 83d53670655..7969cafe826 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/375/InlineXSDResolver.java\n@@ -82,8 +82,8 @@ public class InlineXSDResolver implements XMLEntityResolver\n \t{\n \t\tis = new XMLInputSource(publicId, referringSchemaInputSource.getSystemId() + INLINE_SCHEMA_ID, null, new StringReader(schema),null);\n \t}\n-\t\n-    //if(is == null)\n+\n+\t//if(is == null)\n     //{\n     //\tthrow new IOException();\n     //}\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/375/InlineXSDResolver.java\nindex 83d53670655..ae468374603 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/375/InlineXSDResolver.java\n@@ -4,7 +4,7 @@\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n  * http://www.eclipse.org/legal/epl-v10.html\n- * \n+ *\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n@@ -24,114 +24,98 @@ import org.apache.xerces.xni.parser.XMLInputSource;\n /**\n  * An XMLEntityResolver that allows inline schemas to resolve each other through imports.\n  */\n-public class InlineXSDResolver implements XMLEntityResolver\n-{\n+public class InlineXSDResolver implements XMLEntityResolver {\n   public static final String INLINE_SCHEMA_ID = \"#inlineschema\";\n   protected final String FILE_PREFIX = \"file:\";\n   protected final String XMLNS = \"xmlns\";\n   protected Hashtable entities = new Hashtable();\n-//  protected String refLocation = null;\n+  //  protected String refLocation = null;\n   protected XMLEntityResolver externalResolver = null;\n   protected XMLInputSource referringSchemaInputSource = null;\n   protected String referringSchemaNamespace = null;\n-  \n+\n   /**\n    * Constuctor.\n    */\n-  public InlineXSDResolver()\n-  {\n+  public InlineXSDResolver() {\n   }\n \n   /* (non-Javadoc)\n    * @see org.apache.xerces.xni.parser.XMLEntityResolver#resolveEntity(org.apache.xerces.xni.XMLResourceIdentifier)\n    */\n   public XMLInputSource resolveEntity(XMLResourceIdentifier resourceIdentifier)\n-\t\t throws XNIException, IOException {\n-\tString systemId = resourceIdentifier.getExpandedSystemId();\t \n-\tString publicId = resourceIdentifier.getPublicId();\t\n-\tString namespace = resourceIdentifier.getNamespace();\n-\tXMLInputSource is = null;\n-\tString schema = null;\n-\tif (systemId == null)\n-\t{\n-\t  if(publicId == null)\n-\t  {\n-\t  \tif(namespace == null)\n-\t  \t{\t\n-\t      return null;\n-\t  \t}\n-\t  \telse\n-\t  \t{\n-\t  \t\tsystemId = namespace;\n-\t  \t}\n-\t  }\n-\t  else\n-\t  {\t\n-\t    systemId = publicId;\n-\t  }\n-\t}\n-\t  \n-\tif(referringSchemaNamespace != null && referringSchemaNamespace.equals(systemId))\n-\t{\n-\t\tif(referringSchemaInputSource!=null)\n-\t\t{\n-\t\t\treturn referringSchemaInputSource;\n-\t\t}\n-\t}\n-\telse if ((schema = (String) entities.get(systemId)) != null && !schema.equals(\"\"))\n-\t{\n-\t\tis = new XMLInputSource(publicId, referringSchemaInputSource.getSystemId() + INLINE_SCHEMA_ID, null, new StringReader(schema),null);\n-\t}\n-\t\n+    throws XNIException, IOException {\n+    String systemId = resourceIdentifier.getExpandedSystemId();\n+    String publicId = resourceIdentifier.getPublicId();\n+    String namespace = resourceIdentifier.getNamespace();\n+    XMLInputSource is = null;\n+    String schema = null;\n+    if (systemId == null) {\n+      if (publicId == null) {\n+        if (namespace == null) {\n+          return null;\n+        } else {\n+          systemId = namespace;\n+        }\n+      } else {\n+        systemId = publicId;\n+      }\n+    }\n+\n+    if (referringSchemaNamespace != null && referringSchemaNamespace.equals(systemId)) {\n+      if (referringSchemaInputSource != null) {\n+        return referringSchemaInputSource;\n+      }\n+    } else if ((schema = (String) entities.get(systemId)) != null && !schema.equals(\"\")) {\n+      is = new XMLInputSource(publicId, referringSchemaInputSource.getSystemId() + INLINE_SCHEMA_ID, null,\n+        new StringReader(schema), null);\n+    }\n+\n     //if(is == null)\n     //{\n     //\tthrow new IOException();\n     //}\n-\treturn is;\n+    return is;\n   }\n \n   /**\n    * Add an inline schema.\n-   * \n+   *\n    * @param targetNamespace - the target namespace of the schema\n-   * @param schema - a string representation of the schema\n+   * @param schema          - a string representation of the schema\n    */\n-  public void add(String targetNamespace, String schema)\n-  {\n+  public void add(String targetNamespace, String schema) {\n     entities.put(targetNamespace, schema);\n   }\n-  \n+\n   /**\n-   * Add the referring inline schema. \n-   * \n+   * Add the referring inline schema.\n+   *\n    * @param inputSource - a representation of the inline schema\n-   * @param namespace - the namespace of the inline schema\n+   * @param namespace   - the namespace of the inline schema\n    */\n-  public void addReferringSchema(XMLInputSource inputSource, String namespace)\n-  {\n+  public void addReferringSchema(XMLInputSource inputSource, String namespace) {\n     referringSchemaInputSource = inputSource;\n     referringSchemaNamespace = namespace;\n   }\n-  \n+\n   /**\n    * Return true if the namespace corresponds to an inline schema, false otherwise.\n-   * \n+   *\n    * @param namespace The namespace of the schema.\n    * @return True if the namespace corresponds to an inline schema, false otherwise.\n    */\n-  public boolean isInlineSchema(String namespace)\n-  {\n+  public boolean isInlineSchema(String namespace) {\n     return entities.containsKey(namespace);\n   }\n-  \n-  /** \n-   * Get the set of the inline schema namespaces. \n-   * \n-   * @return The set of the inline schema namespaces. \n-   */ \n-  public Set getInlineSchemaNSs() \n-  { \n-        return entities.keySet(); \n-  } \n+\n+  /**\n+   * Get the set of the inline schema namespaces.\n+   *\n+   * @return The set of the inline schema namespaces.\n+   */\n+  public Set getInlineSchemaNSs() {\n+    return entities.keySet();\n+  }\n \n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/375/InlineXSDResolver.java\nindex 83d53670655..7c90e4bd945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/375/InlineXSDResolver.java\n@@ -47,8 +47,8 @@ public class InlineXSDResolver implements XMLEntityResolver\n    */\n   public XMLInputSource resolveEntity(XMLResourceIdentifier resourceIdentifier)\n \t\t throws XNIException, IOException {\n-\tString systemId = resourceIdentifier.getExpandedSystemId();\t \n-\tString publicId = resourceIdentifier.getPublicId();\t\n+String systemId = resourceIdentifier.getExpandedSystemId();\n+String publicId = resourceIdentifier.getPublicId();\t\n \tString namespace = resourceIdentifier.getNamespace();\n \tXMLInputSource is = null;\n \tString schema = null;\n@@ -88,7 +88,7 @@ public class InlineXSDResolver implements XMLEntityResolver\n     //\tthrow new IOException();\n     //}\n \treturn is;\n-  }\n+    }\n \n   /**\n    * Add an inline schema.\n@@ -129,9 +129,7 @@ public class InlineXSDResolver implements XMLEntityResolver\n    * \n    * @return The set of the inline schema namespaces. \n    */ \n-  public Set getInlineSchemaNSs() \n-  { \n-        return entities.keySet(); \n-  } \n-\n-}\n+  public Set getInlineSchemaNSs() {\n+  return entities.keySet(); \n+  }\n+   }\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/375/InlineXSDResolver.java\nindex 83d53670655..3c8a97bad31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/375/InlineXSDResolver.java\n@@ -81,9 +81,9 @@ public class InlineXSDResolver implements XMLEntityResolver\n \telse if ((schema = (String) entities.get(systemId)) != null && !schema.equals(\"\"))\n \t{\n \t\tis = new XMLInputSource(publicId, referringSchemaInputSource.getSystemId() + INLINE_SCHEMA_ID, null, new StringReader(schema),null);\n-\t}\n-\t\n-    //if(is == null)\n+}\n+\n+   //if(is == null)\n     //{\n     //\tthrow new IOException();\n     //}\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/375/InlineXSDResolver.java\nindex 83d53670655..7969cafe826 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/375/InlineXSDResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/375/InlineXSDResolver.java\n@@ -82,8 +82,8 @@ public class InlineXSDResolver implements XMLEntityResolver\n \t{\n \t\tis = new XMLInputSource(publicId, referringSchemaInputSource.getSystemId() + INLINE_SCHEMA_ID, null, new StringReader(schema),null);\n \t}\n-\t\n-    //if(is == null)\n+\n+\t//if(is == null)\n     //{\n     //\tthrow new IOException();\n     //}\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
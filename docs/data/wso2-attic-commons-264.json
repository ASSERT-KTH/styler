{
    "project_name": "wso2-attic-commons",
    "error_id": "264",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public Object msgOdeUsingInternalDb(String dbIntenralJdbcUrl, String dbInternalJdbcDriverClass) {\n        return format(\"ODE using internal database \\\"{0}\\\" with driver {1}.\", dbIntenralJdbcUrl, dbInternalJdbcDriverClass);\n\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/264/Messages.java\nindex 26aa9ac6136..0144ee45558 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/264/Messages.java\n@@ -33,7 +33,8 @@ public class Messages extends MessageBundle {\n     }\n \n     public Object msgOdeUsingInternalDb(String dbIntenralJdbcUrl, String dbInternalJdbcDriverClass) {\n-        return format(\"ODE using internal database \\\"{0}\\\" with driver {1}.\", dbIntenralJdbcUrl, dbInternalJdbcDriverClass);\n+        return format(\"ODE using internal database \\\"{0}\\\" with driver {1}.\", dbIntenralJdbcUrl\n+                , dbInternalJdbcDriverClass);\n \n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/264/Messages.java\nindex 26aa9ac6136..0e3e11ee689 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/264/Messages.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.il.dbutil;\n \n import java.io.File;\n@@ -24,38 +25,38 @@ import org.apache.ode.utils.msg.MessageBundle;\n \n public class Messages extends MessageBundle {\n \n-    public String msgOdeInitHibernatePropertiesNotFound(File expected) {\n-        return format(\"Hibernate configuration file \\\"{0}\\\" not found, defaults will be used.\", expected);\n-    }\n+  public String msgOdeInitHibernatePropertiesNotFound(File expected) {\n+    return format(\"Hibernate configuration file \\\"{0}\\\" not found, defaults will be used.\", expected);\n+  }\n \n-    public String msgOdeUsingExternalDb(String dbDataSource) {\n-        return format(\"ODE using external DataSource \\\"{0}\\\".\", dbDataSource);\n-    }\n+  public String msgOdeUsingExternalDb(String dbDataSource) {\n+    return format(\"ODE using external DataSource \\\"{0}\\\".\", dbDataSource);\n+  }\n \n-    public Object msgOdeUsingInternalDb(String dbIntenralJdbcUrl, String dbInternalJdbcDriverClass) {\n-        return format(\"ODE using internal database \\\"{0}\\\" with driver {1}.\", dbIntenralJdbcUrl, dbInternalJdbcDriverClass);\n+  public Object msgOdeUsingInternalDb(String dbIntenralJdbcUrl, String dbInternalJdbcDriverClass) {\n+    return format(\"ODE using internal database \\\"{0}\\\" with driver {1}.\", dbIntenralJdbcUrl, dbInternalJdbcDriverClass);\n \n-    }\n+  }\n \n-    public String msgOdeInitExternalDbFailed(String dbDataSource) {\n-        return format(\"Failed to resolved external DataSource at \\\"{0}\\\".\", dbDataSource);\n-    }\n+  public String msgOdeInitExternalDbFailed(String dbDataSource) {\n+    return format(\"Failed to resolved external DataSource at \\\"{0}\\\".\", dbDataSource);\n+  }\n \n-    public String msgOdeInitDAOErrorReadingProperties(File propfile) {\n-        return format(\"Error reading DAO properties file \\\"{0}\\\".\", propfile);\n-    }\n+  public String msgOdeInitDAOErrorReadingProperties(File propfile) {\n+    return format(\"Error reading DAO properties file \\\"{0}\\\".\", propfile);\n+  }\n \n-    public String msgOdeDbPoolStartupFailed(String url) {\n-        return format(\"Error starting connection pool for \\\"{0}\\\".\", url);\n-    }\n+  public String msgOdeDbPoolStartupFailed(String url) {\n+    return format(\"Error starting connection pool for \\\"{0}\\\".\", url);\n+  }\n \n-    public String msgOdeUsingDAOImpl(String className) {\n-        return format(\"Using DAO Connection Factory class {0}.\", className);\n-    }\n+  public String msgOdeUsingDAOImpl(String className) {\n+    return format(\"Using DAO Connection Factory class {0}.\", className);\n+  }\n \n-    public String msgDAOInstantiationFailed(String className) {\n-        return format(\"Error instantiating DAO Connection Factory class {0}.\", className);\n+  public String msgDAOInstantiationFailed(String className) {\n+    return format(\"Error instantiating DAO Connection Factory class {0}.\", className);\n \n-    }\n+  }\n \n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/264/Messages.java\nindex 26aa9ac6136..2f19c163fcd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/264/Messages.java\n@@ -58,4 +58,4 @@ public class Messages extends MessageBundle {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/264/Messages.java\nindex 26aa9ac6136..0144ee45558 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/264/Messages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/264/Messages.java\n@@ -33,7 +33,8 @@ public class Messages extends MessageBundle {\n     }\n \n     public Object msgOdeUsingInternalDb(String dbIntenralJdbcUrl, String dbInternalJdbcDriverClass) {\n-        return format(\"ODE using internal database \\\"{0}\\\" with driver {1}.\", dbIntenralJdbcUrl, dbInternalJdbcDriverClass);\n+        return format(\"ODE using internal database \\\"{0}\\\" with driver {1}.\", dbIntenralJdbcUrl\n+                , dbInternalJdbcDriverClass);\n \n     }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
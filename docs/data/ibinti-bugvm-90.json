{
    "project_name": "ibinti-bugvm",
    "error_id": "90",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 86).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * related headers.\n * <p>\n *  Protocol Interceptors can also manipulate content entities enclosed with messages.\n * Usually this is accomplished by using the 'Decorator' pattern where a wrapper\n * entity class is used to decorate the original entity.\n * <p>",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/90/HttpRequestInterceptor.java\nindex c2a7c60127e..3e4dd7b8523 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/90/HttpRequestInterceptor.java\n@@ -38,7 +38,7 @@ import org.apache.http.protocol.HttpContext;\n  * or populate the outgoing message with one specific header or a group of\n  * related headers.\n  * <p>\n- *  Protocol Interceptors can also manipulate content entities enclosed with messages.\n+ * Protocol Interceptors can also manipulate content entities enclosed with messages.\n  * Usually this is accomplished by using the 'Decorator' pattern where a wrapper\n  * entity class is used to decorate the original entity.\n  * <p>\n@@ -50,19 +50,18 @@ import org.apache.http.protocol.HttpContext;\n  */\n public interface HttpRequestInterceptor {\n \n-    /**\n-     * Processes a request.\n-     * On the client side, this step is performed before the request is\n-     * sent to the server. On the server side, this step is performed\n-     * on incoming messages before the message body is evaluated.\n-     *\n-     * @param request   the request to preprocess\n-     * @param context   the context for the request\n-     *\n-     * @throws HttpException in case of an HTTP protocol violation\n-     * @throws IOException in case of an I/O error\n-     */\n-    void process(HttpRequest request, HttpContext context)\n-        throws HttpException, IOException;\n+  /**\n+   * Processes a request.\n+   * On the client side, this step is performed before the request is\n+   * sent to the server. On the server side, this step is performed\n+   * on incoming messages before the message body is evaluated.\n+   *\n+   * @param request the request to preprocess\n+   * @param context the context for the request\n+   * @throws HttpException in case of an HTTP protocol violation\n+   * @throws IOException   in case of an I/O error\n+   */\n+  void process(HttpRequest request, HttpContext context)\n+    throws HttpException, IOException;\n \n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/90/HttpRequestInterceptor.java\nindex c2a7c60127e..dbc96615743 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/90/HttpRequestInterceptor.java\n@@ -65,4 +65,4 @@ public interface HttpRequestInterceptor {\n     void process(HttpRequest request, HttpContext context)\n         throws HttpException, IOException;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/90/HttpRequestInterceptor.java\nindex c2a7c60127e..96338d05ec4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/90/HttpRequestInterceptor.java\n@@ -28,7 +28,6 @@\n package org.apache.http;\n \n import java.io.IOException;\n-\n import org.apache.http.protocol.HttpContext;\n \n /**\n@@ -48,6 +47,8 @@ import org.apache.http.protocol.HttpContext;\n  *\n  * @since 4.0\n  */\n+\n+\n public interface HttpRequestInterceptor {\n \n     /**\n@@ -62,7 +63,7 @@ public interface HttpRequestInterceptor {\n      * @throws HttpException in case of an HTTP protocol violation\n      * @throws IOException in case of an I/O error\n      */\n-    void process(HttpRequest request, HttpContext context)\n-        throws HttpException, IOException;\n \n-}\n+\n+    void process(HttpRequest request, HttpContext context) throws HttpException, IOException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/90/HttpRequestInterceptor.java\nindex c2a7c60127e..d41afac60c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/90/HttpRequestInterceptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/90/HttpRequestInterceptor.java\n@@ -30,7 +30,6 @@ package org.apache.http;\n import java.io.IOException;\n \n import org.apache.http.protocol.HttpContext;\n-\n /**\n  * HTTP protocol interceptor is a routine that implements a specific aspect of\n  * the HTTP protocol. Usually protocol interceptors are expected to act upon\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
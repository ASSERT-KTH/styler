{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3340",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3340/DiagnosticsPhase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3340/DiagnosticsPhase.java\nindex f03a9dee18e..52ddf4ed2ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3340/DiagnosticsPhase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3340/DiagnosticsPhase.java\n@@ -17,63 +17,65 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.info;\n \n import org.neo4j.logging.Log;\n \n public enum DiagnosticsPhase\n {\n-    REQUESTED( true, false ),\n-    EXPLICIT( true, false ),\n-    CREATED( false, true ),\n-    INITIALIZED( false, true ),\n-    STARTED( false, true ),\n-    LOG_ROTATION( false, true ),\n-    STOPPING( false, false ),\n-    SHUTDOWN( false, false ), ;\n+  REQUESTED(true, false),\n+  EXPLICIT(true, false),\n+  CREATED(false, true),\n+  INITIALIZED(false, true),\n+  STARTED(false, true),\n+  LOG_ROTATION(false, true),\n+  STOPPING(false, false),\n+  SHUTDOWN(false, false),\n+  ;\n \n-    private final boolean requested;\n-    private final boolean initial;\n+  private final boolean requested;\n+  private final boolean initial;\n \n-    DiagnosticsPhase( boolean requested, boolean initial )\n-    {\n-        this.requested = requested;\n-        this.initial = initial;\n-    }\n+  DiagnosticsPhase(boolean requested, boolean initial)\n+  {\n+    this.requested = requested;\n+    this.initial = initial;\n+  }\n \n-    void emitStart( Log log )\n-    {\n-        log.info( \"--- \" + this + \" START ---\" );\n-    }\n+  void emitStart(Log log)\n+  {\n+    log.info(\"--- \" + this + \" START ---\");\n+  }\n \n-    void emitDone( Log log )\n-    {\n-        log.info( \"--- \" + this + \" END ---\" );\n-    }\n+  void emitDone(Log log)\n+  {\n+    log.info(\"--- \" + this + \" END ---\");\n+  }\n \n-    void emitStart( Log log, DiagnosticsProvider provider )\n-    {\n-        log.info( \"--- \" + this + \" for \" + provider.getDiagnosticsIdentifier() + \" START ---\" );\n-    }\n+  void emitStart(Log log, DiagnosticsProvider provider)\n+  {\n+    log.info(\"--- \" + this + \" for \" + provider.getDiagnosticsIdentifier() + \" START ---\");\n+  }\n \n-    void emitDone( Log log, DiagnosticsProvider provider )\n-    {\n-        log.info( \"--- \" + this + \" for \" + provider.getDiagnosticsIdentifier() + \" END ---\" );\n-    }\n+  void emitDone(Log log, DiagnosticsProvider provider)\n+  {\n+    log.info(\"--- \" + this + \" for \" + provider.getDiagnosticsIdentifier() + \" END ---\");\n+  }\n \n-    public boolean isInitialization()\n-    {\n-        return initial;\n-    }\n+  public boolean isInitialization()\n+  {\n+    return initial;\n+  }\n \n-    public boolean isExplicitlyRequested()\n-    {\n-        return requested;\n-    }\n+  public boolean isExplicitlyRequested()\n+  {\n+    return requested;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return name() + \" diagnostics\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return name() + \" diagnostics\";\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3340/DiagnosticsPhase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3340/DiagnosticsPhase.java\nindex f03a9dee18e..5208a6ca634 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3340/DiagnosticsPhase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3340/DiagnosticsPhase.java\n@@ -23,14 +23,7 @@ import org.neo4j.logging.Log;\n \n public enum DiagnosticsPhase\n {\n-    REQUESTED( true, false ),\n-    EXPLICIT( true, false ),\n-    CREATED( false, true ),\n-    INITIALIZED( false, true ),\n-    STARTED( false, true ),\n-    LOG_ROTATION( false, true ),\n-    STOPPING( false, false ),\n-    SHUTDOWN( false, false ), ;\n+    REQUESTED( true, false ), EXPLICIT( true, false ), CREATED( false, true ), INITIALIZED( false, true ), STARTED( false, true ), LOG_ROTATION( false, true ), STOPPING( false, false ), SHUTDOWN( false, false ), ;\n \n     private final boolean requested;\n     private final boolean initial;\n@@ -76,4 +69,4 @@ public enum DiagnosticsPhase\n     {\n         return name() + \" diagnostics\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
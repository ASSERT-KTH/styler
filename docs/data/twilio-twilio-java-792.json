{
    "project_name": "twilio-twilio-java",
    "error_id": "792",
    "information": {
        "errors": [
            {
                "line": "180",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/792/BindingReader.java\nindex 387e66ffab6..f64c64d3995 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/792/BindingReader.java\n@@ -177,7 +177,7 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/792/BindingReader.java\nindex 387e66ffab6..973f4686b00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/792/BindingReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.ipmessaging.v2.service;\n@@ -177,7 +177,7 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/792/BindingReader.java\nindex 387e66ffab6..f455c06e83e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/792/BindingReader.java\n@@ -19,7 +19,6 @@ import com.twilio.http.Request;\n import com.twilio.http.Response;\n import com.twilio.http.TwilioRestClient;\n import com.twilio.rest.Domains;\n-\n import java.util.List;\n \n public class BindingReader extends Reader<Binding> {\n@@ -32,6 +31,8 @@ public class BindingReader extends Reader<Binding> {\n      *\n      * @param pathServiceSid The service_sid\n      */\n+\n+\n     public BindingReader(final String pathServiceSid) {\n         this.pathServiceSid = pathServiceSid;\n     }\n@@ -42,6 +43,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param bindingType The binding_type\n      * @return this\n      */\n+\n+\n     public BindingReader setBindingType(final List<Binding.BindingType> bindingType) {\n         this.bindingType = bindingType;\n         return this;\n@@ -53,6 +56,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param bindingType The binding_type\n      * @return this\n      */\n+\n+\n     public BindingReader setBindingType(final Binding.BindingType bindingType) {\n         return setBindingType(Promoter.listOfOne(bindingType));\n     }\n@@ -63,6 +68,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param identity The identity\n      * @return this\n      */\n+\n+\n     public BindingReader setIdentity(final List<String> identity) {\n         this.identity = identity;\n         return this;\n@@ -74,6 +81,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param identity The identity\n      * @return this\n      */\n+\n+\n     public BindingReader setIdentity(final String identity) {\n         return setIdentity(Promoter.listOfOne(identity));\n     }\n@@ -84,6 +93,7 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Binding ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Binding> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -95,13 +105,14 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Binding ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Binding> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.IPMESSAGING.toString(),\n-            \"/v2/Services/\" + this.pathServiceSid + \"/Bindings\"\n+                              HttpMethod.GET,\n+                              Domains.IPMESSAGING.toString(),\n+                              \"/v2/Services/\" + this.pathServiceSid + \"/Bindings\"\n         );\n \n         addQueryParams(request);\n@@ -115,14 +126,12 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Binding ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Binding> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Binding> getPage(final String targetUrl,\n+                                 final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -133,13 +142,11 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Binding> nextPage(final Page<Binding> page,\n                                   final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.IPMESSAGING.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.IPMESSAGING.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -150,13 +157,11 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Binding> previousPage(final Page<Binding> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.IPMESSAGING.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.IPMESSAGING.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -167,9 +172,11 @@ public class BindingReader extends Reader<Binding> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Binding> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Binding> pageForRequest(final TwilioRestClient client,\n+                                         final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Binding read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -177,15 +184,11 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"bindings\",\n-            response.getContent(),\n-            Binding.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"bindings\", response.getContent(), Binding.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -193,6 +196,8 @@ public class BindingReader extends Reader<Binding> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (bindingType != null) {\n             for (Binding.BindingType prop : bindingType) {\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/792/BindingReader.java\nindex 387e66ffab6..f64c64d3995 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/792/BindingReader.java\n@@ -177,7 +177,7 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/792/BindingReader.java\nindex 387e66ffab6..5d14cc02425 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/792/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/792/BindingReader.java\n@@ -177,7 +177,8 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
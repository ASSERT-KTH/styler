{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "80",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 94).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                new IllegalStateException(\n                    String.format(\n                        \"Unable to find commit log reader for [%s].\", attributeDescriptors)));\n  }\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 22, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/13/CommitLogSourceFunction.java\nindex 13c1057bced..b6efe39b626 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/13/CommitLogSourceFunction.java\n@@ -78,7 +78,7 @@ public class CommitLogSourceFunction<OutputT>\n                 new IllegalStateException(\n                     String.format(\n                         \"Unable to find commit log reader for [%s].\", attributeDescriptors)));\n-  }\n+                      }\n \n   @Override\n   List<Partition> getPartitions(CommitLogReader reader) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/13/CommitLogSourceFunction.java\nindex 13c1057bced..cb9c857932e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/13/CommitLogSourceFunction.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.flink.core;\n \n import cz.o2.proxima.direct.commitlog.CommitLogObserver;\n@@ -32,11 +33,11 @@ import lombok.extern.slf4j.Slf4j;\n @Slf4j\n public class CommitLogSourceFunction<OutputT>\n     extends AbstractLogSourceFunction<\n-        CommitLogReader,\n-        CommitLogSourceFunction.LogObserver<OutputT>,\n-        Offset,\n-        CommitLogObserver.OnNextContext,\n-        OutputT> {\n+    CommitLogReader,\n+    CommitLogSourceFunction.LogObserver<OutputT>,\n+    Offset,\n+    CommitLogObserver.OnNextContext,\n+    OutputT> {\n \n   static class LogObserver<OutputT>\n       extends AbstractSourceLogObserver<Offset, CommitLogObserver.OnNextContext, OutputT>\n@@ -77,7 +78,8 @@ public class CommitLogSourceFunction<OutputT>\n             () ->\n                 new IllegalStateException(\n                     String.format(\n-                        \"Unable to find commit log reader for [%s].\", attributeDescriptors)));\n+                        \"Unable to find commit log reader for [%s].\",\n+                        attributeDescriptors)));\n   }\n \n   @Override\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/13/CommitLogSourceFunction.java\nindex 13c1057bced..2e433c48fb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/13/CommitLogSourceFunction.java\n@@ -31,22 +31,18 @@ import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public class CommitLogSourceFunction<OutputT>\n-    extends AbstractLogSourceFunction<\n-        CommitLogReader,\n+    extends AbstractLogSourceFunction<CommitLogReader,\n         CommitLogSourceFunction.LogObserver<OutputT>,\n         Offset,\n-        CommitLogObserver.OnNextContext,\n-        OutputT> {\n+        CommitLogObserver.OnNextContext, OutputT> {\n \n   static class LogObserver<OutputT>\n-      extends AbstractSourceLogObserver<Offset, CommitLogObserver.OnNextContext, OutputT>\n-      implements CommitLogObserver {\n-\n-    LogObserver(\n+      extends AbstractSourceLogObserver<Offset, CommitLogObserver.OnNextContext, OutputT> implements CommitLogObserver {\n+  LogObserver(\n         SourceContext<OutputT> sourceContext,\n         ResultExtractor<OutputT> resultExtractor,\n         Set<Partition> skipFirstElementFromEachPartition) {\n-      super(sourceContext, resultExtractor, skipFirstElementFromEachPartition);\n+  super(sourceContext, resultExtractor, skipFirstElementFromEachPartition);\n     }\n \n     @Override\n@@ -64,7 +60,7 @@ public class CommitLogSourceFunction<OutputT>\n       RepositoryFactory repositoryFactory,\n       List<AttributeDescriptor<?>> attributeDescriptors,\n       ResultExtractor<OutputT> resultExtractor) {\n-    super(repositoryFactory, attributeDescriptors, resultExtractor);\n+  super(repositoryFactory, attributeDescriptors, resultExtractor);\n   }\n \n   @Override\n@@ -74,8 +70,7 @@ public class CommitLogSourceFunction<OutputT>\n         .getOrCreateOperator(DirectDataOperator.class)\n         .getCommitLogReader(attributeDescriptors)\n         .orElseThrow(\n-            () ->\n-                new IllegalStateException(\n+            () -> new IllegalStateException(\n                     String.format(\n                         \"Unable to find commit log reader for [%s].\", attributeDescriptors)));\n   }\n@@ -109,8 +104,7 @@ public class CommitLogSourceFunction<OutputT>\n       List<Partition> partitions,\n       List<AttributeDescriptor<?>> attributeDescriptors,\n       LogObserver<OutputT> observer) {\n-    final ObserveHandle commitLogHandle =\n-        reader.observeBulkPartitions(partitions, Position.OLDEST, false, observer);\n+    final ObserveHandle commitLogHandle = reader.observeBulkPartitions(partitions, Position.OLDEST, false, observer);\n     return new UnifiedObserveHandle<Offset>() {\n \n       @Override\n@@ -131,8 +125,7 @@ public class CommitLogSourceFunction<OutputT>\n       List<Offset> offsets,\n       List<AttributeDescriptor<?>> attributeDescriptors,\n       LogObserver<OutputT> observer) {\n-    final cz.o2.proxima.direct.commitlog.ObserveHandle delegate =\n-        reader.observeBulkOffsets(offsets, false, observer);\n+    final cz.o2.proxima.direct.commitlog.ObserveHandle delegate = reader.observeBulkOffsets(offsets, false, observer);\n     return new UnifiedObserveHandle<Offset>() {\n \n       @Override\n@@ -146,4 +139,4 @@ public class CommitLogSourceFunction<OutputT>\n       }\n     };\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 22, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/13/CommitLogSourceFunction.java\nindex 13c1057bced..b6efe39b626 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/13/CommitLogSourceFunction.java\n@@ -78,7 +78,7 @@ public class CommitLogSourceFunction<OutputT>\n                 new IllegalStateException(\n                     String.format(\n                         \"Unable to find commit log reader for [%s].\", attributeDescriptors)));\n-  }\n+                      }\n \n   @Override\n   List<Partition> getPartitions(CommitLogReader reader) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 22, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/13/CommitLogSourceFunction.java\nindex 13c1057bced..f287437208c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/13/CommitLogSourceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/13/CommitLogSourceFunction.java\n@@ -77,10 +77,11 @@ public class CommitLogSourceFunction<OutputT>\n             () ->\n                 new IllegalStateException(\n                     String.format(\n-                        \"Unable to find commit log reader for [%s].\", attributeDescriptors)));\n-  }\n+                        \"Unable to find commit log reader for [%s].\",\n+                        attributeDescriptors)));\n+                      }\n \n-  @Override\n+   @Override\n   List<Partition> getPartitions(CommitLogReader reader) {\n     return reader.getPartitions();\n   }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "685",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "269",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/685/StoreSizeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/685/StoreSizeBean.java\nindex bb27fabbc28..f3efb572496 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/685/StoreSizeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/685/StoreSizeBean.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.jmx.impl;\n \n import org.apache.commons.lang3.mutable.MutableLong;\n@@ -61,370 +62,369 @@ import static org.neo4j.kernel.impl.store.StoreFile.RELATIONSHIP_TYPE_TOKEN_NAME\n import static org.neo4j.kernel.impl.store.StoreFile.RELATIONSHIP_TYPE_TOKEN_STORE;\n import static org.neo4j.kernel.impl.store.StoreFile.SCHEMA_STORE;\n \n-@Service.Implementation( ManagementBeanProvider.class )\n+@Service.Implementation(ManagementBeanProvider.class)\n public final class StoreSizeBean extends ManagementBeanProvider\n {\n-    private static final long UPDATE_INTERVAL = 60000;\n-    private static final StoreSize NO_STORE_SIZE = new StoreSize()\n+  private static final long UPDATE_INTERVAL = 60000;\n+  private static final StoreSize NO_STORE_SIZE = new StoreSize()\n+  {\n+    @Override\n+    public long getTransactionLogsSize()\n     {\n-        @Override\n-        public long getTransactionLogsSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getNodeStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getRelationshipStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getPropertyStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getStringStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getArrayStoreSize()\n-        {\n-            return 0;\n-        }\n+      return 0;\n+    }\n \n-        @Override\n-        public long getLabelStoreSize()\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public long getNodeStoreSize()\n+    {\n+      return 0;\n+    }\n \n-        @Override\n-        public long getCountStoreSize()\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public long getRelationshipStoreSize()\n+    {\n+      return 0;\n+    }\n \n-        @Override\n-        public long getSchemaStoreSize()\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public long getPropertyStoreSize()\n+    {\n+      return 0;\n+    }\n \n-        @Override\n-        public long getIndexStoreSize()\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public long getStringStoreSize()\n+    {\n+      return 0;\n+    }\n \n-        @Override\n-        public long getTotalStoreSize()\n-        {\n-            return 0;\n-        }\n-    };\n+    @Override\n+    public long getArrayStoreSize()\n+    {\n+      return 0;\n+    }\n \n-    @SuppressWarnings( \"WeakerAccess\" ) // Bean needs public constructor\n-    public StoreSizeBean()\n+    @Override\n+    public long getLabelStoreSize()\n     {\n-        super( StoreSize.class );\n+      return 0;\n     }\n \n     @Override\n-    protected Neo4jMBean createMBean( ManagementData management )\n+    public long getCountStoreSize()\n     {\n-        return createBean( management, false, UPDATE_INTERVAL, Clock.systemUTC() );\n+      return 0;\n     }\n \n     @Override\n-    protected Neo4jMBean createMXBean( ManagementData management )\n+    public long getSchemaStoreSize()\n     {\n-        return createBean( management, true, UPDATE_INTERVAL, Clock.systemUTC() );\n+      return 0;\n     }\n \n-    @VisibleForTesting\n-    static StoreSizeMBean createBean( ManagementData management, boolean isMxBean, long updateInterval, Clock clock )\n+    @Override\n+    public long getIndexStoreSize()\n     {\n-        final StoreSizeMBean bean = new StoreSizeMBean( management, isMxBean, updateInterval, clock );\n-        final DataSourceManager dataSourceManager = management.resolveDependency( DataSourceManager.class );\n-        dataSourceManager.addListener( bean );\n-        return bean;\n+      return 0;\n     }\n \n-    static class StoreSizeMBean extends Neo4jMBean implements StoreSize, DataSourceManager.Listener\n+    @Override\n+    public long getTotalStoreSize()\n+    {\n+      return 0;\n+    }\n+  };\n+\n+  @SuppressWarnings(\"WeakerAccess\") // Bean needs public constructor\n+  public StoreSizeBean()\n+  {\n+    super(StoreSize.class);\n+  }\n+\n+  @Override\n+  protected Neo4jMBean createMBean(ManagementData management)\n+  {\n+    return createBean(management, false, UPDATE_INTERVAL, Clock.systemUTC());\n+  }\n+\n+  @Override\n+  protected Neo4jMBean createMXBean(ManagementData management)\n+  {\n+    return createBean(management, true, UPDATE_INTERVAL, Clock.systemUTC());\n+  }\n+\n+  @VisibleForTesting\n+  static StoreSizeMBean createBean(ManagementData management, boolean isMxBean, long updateInterval, Clock clock)\n+  {\n+    final StoreSizeMBean bean = new StoreSizeMBean(management, isMxBean, updateInterval, clock);\n+    final DataSourceManager dataSourceManager = management.resolveDependency(DataSourceManager.class);\n+    dataSourceManager.addListener(bean);\n+    return bean;\n+  }\n+\n+  static class StoreSizeMBean extends Neo4jMBean implements StoreSize, DataSourceManager.Listener\n+  {\n+    private final FileSystemAbstraction fs;\n+    private final File storePath;\n+    private final long updateInterval;\n+    private final Clock clock;\n+\n+    private volatile StoreSize delegate = NO_STORE_SIZE;\n+\n+    StoreSizeMBean(ManagementData management, boolean isMXBean, long updateInterval, Clock clock)\n     {\n-        private final FileSystemAbstraction fs;\n-        private final File storePath;\n-        private final long updateInterval;\n-        private final Clock clock;\n+      super(management, isMXBean);\n+      this.fs = management.getKernelData().getFilesystemAbstraction();\n+      this.storePath = resolveStorePath(management);\n+      this.updateInterval = updateInterval;\n+      this.clock = clock;\n+    }\n \n-        private volatile StoreSize delegate = NO_STORE_SIZE;\n+    @Override\n+    public void registered(NeoStoreDataSource ds)\n+    {\n+      final StoreSizeProvider dataProvider = new StoreSizeProvider(fs, storePath, ds.getDependencyResolver());\n+      this.delegate = newThrottlingBeanSnapshotProxy(StoreSize.class, dataProvider, updateInterval, clock);\n+    }\n \n-        StoreSizeMBean( ManagementData management, boolean isMXBean, long updateInterval, Clock clock )\n-        {\n-            super( management, isMXBean );\n-            this.fs = management.getKernelData().getFilesystemAbstraction();\n-            this.storePath = resolveStorePath( management );\n-            this.updateInterval = updateInterval;\n-            this.clock = clock;\n-        }\n+    @Override\n+    public void unregistered(NeoStoreDataSource ds)\n+    {\n+      this.delegate = NO_STORE_SIZE;\n+    }\n \n-        @Override\n-        public void registered( NeoStoreDataSource ds )\n-        {\n-            final StoreSizeProvider dataProvider = new StoreSizeProvider( fs, storePath, ds.getDependencyResolver() );\n-            this.delegate = newThrottlingBeanSnapshotProxy( StoreSize.class, dataProvider, updateInterval, clock );\n-        }\n+    @Override\n+    public long getTransactionLogsSize()\n+    {\n+      return delegate.getTransactionLogsSize();\n+    }\n \n-        @Override\n-        public void unregistered( NeoStoreDataSource ds )\n-        {\n-            this.delegate = NO_STORE_SIZE;\n-        }\n+    @Override\n+    public long getNodeStoreSize()\n+    {\n+      return delegate.getNodeStoreSize();\n+    }\n \n-        @Override\n-        public long getTransactionLogsSize()\n-        {\n-            return delegate.getTransactionLogsSize();\n-        }\n+    @Override\n+    public long getRelationshipStoreSize()\n+    {\n+      return delegate.getRelationshipStoreSize();\n+    }\n \n-        @Override\n-        public long getNodeStoreSize()\n-        {\n-            return delegate.getNodeStoreSize();\n-        }\n+    @Override\n+    public long getPropertyStoreSize()\n+    {\n+      return delegate.getPropertyStoreSize();\n+    }\n \n-        @Override\n-        public long getRelationshipStoreSize()\n-        {\n-            return delegate.getRelationshipStoreSize();\n-        }\n+    @Override\n+    public long getStringStoreSize()\n+    {\n+      return delegate.getStringStoreSize();\n+    }\n \n-        @Override\n-        public long getPropertyStoreSize()\n-        {\n-            return delegate.getPropertyStoreSize();\n-        }\n+    @Override\n+    public long getArrayStoreSize()\n+    {\n+      return delegate.getArrayStoreSize();\n+    }\n \n-        @Override\n-        public long getStringStoreSize()\n-        {\n-            return delegate.getStringStoreSize();\n-        }\n+    @Override\n+    public long getLabelStoreSize()\n+    {\n+      return delegate.getLabelStoreSize();\n+    }\n \n-        @Override\n-        public long getArrayStoreSize()\n-        {\n-            return delegate.getArrayStoreSize();\n-        }\n+    @Override\n+    public long getCountStoreSize()\n+    {\n+      return delegate.getCountStoreSize();\n+    }\n \n-        @Override\n-        public long getLabelStoreSize()\n-        {\n-            return delegate.getLabelStoreSize();\n-        }\n+    @Override\n+    public long getSchemaStoreSize()\n+    {\n+      return delegate.getSchemaStoreSize();\n+    }\n \n-        @Override\n-        public long getCountStoreSize()\n-        {\n-            return delegate.getCountStoreSize();\n-        }\n+    @Override\n+    public long getIndexStoreSize()\n+    {\n+      return delegate.getIndexStoreSize();\n+    }\n \n-        @Override\n-        public long getSchemaStoreSize()\n-        {\n-            return delegate.getSchemaStoreSize();\n-        }\n+    @Override\n+    public long getTotalStoreSize()\n+    {\n+      return delegate.getTotalStoreSize();\n+    }\n+  }\n \n-        @Override\n-        public long getIndexStoreSize()\n-        {\n-            return delegate.getIndexStoreSize();\n-        }\n+  static File resolveStorePath(ManagementData management)\n+  {\n+    File storeDir = management.getKernelData().getStoreDir();\n+    try\n+    {\n+      return storeDir.getCanonicalFile().getAbsoluteFile();\n+    } catch (IOException e)\n+    {\n+      return storeDir.getAbsoluteFile();\n+    }\n+  }\n+\n+  private static class StoreSizeProvider implements StoreSize\n+  {\n+    private final FileSystemAbstraction fs;\n+    private final File storePath;\n+    private final LogFiles logFiles;\n+    private final ExplicitIndexProviderLookup explicitIndexProviderLookup;\n+    private final IndexProviderMap indexProviderMap;\n+    private final LabelScanStore labelScanStore;\n+\n+    private StoreSizeProvider(FileSystemAbstraction fs, File storePath, DependencyResolver deps)\n+    {\n+      this.fs = requireNonNull(fs);\n+      this.storePath = requireNonNull(storePath);\n+      this.logFiles = deps.resolveDependency(LogFiles.class);\n+      this.explicitIndexProviderLookup = deps.resolveDependency(ExplicitIndexProviderLookup.class);\n+      this.indexProviderMap = deps.resolveDependency(IndexProviderMap.class);\n+      this.labelScanStore = deps.resolveDependency(LabelScanStore.class);\n+    }\n \n-        @Override\n-        public long getTotalStoreSize()\n-        {\n-            return delegate.getTotalStoreSize();\n-        }\n+    @Override\n+    public long getTransactionLogsSize()\n+    {\n+      final TotalSizeVersionVisitor logVersionVisitor = new TotalSizeVersionVisitor();\n+      logFiles.accept(logVersionVisitor);\n+      return logVersionVisitor.getTotalSize();\n     }\n \n-    static File resolveStorePath( ManagementData management )\n+    @Override\n+    public long getNodeStoreSize()\n     {\n-        File storeDir = management.getKernelData().getStoreDir();\n-        try\n-        {\n-            return storeDir.getCanonicalFile().getAbsoluteFile();\n-        }\n-        catch ( IOException e )\n-        {\n-            return storeDir.getAbsoluteFile();\n-        }\n+      return sizeOfStoreFiles(NODE_STORE, NODE_LABEL_STORE);\n     }\n \n-    private static class StoreSizeProvider implements StoreSize\n+    @Override\n+    public long getRelationshipStoreSize()\n     {\n-        private final FileSystemAbstraction fs;\n-        private final File storePath;\n-        private final LogFiles logFiles;\n-        private final ExplicitIndexProviderLookup explicitIndexProviderLookup;\n-        private final IndexProviderMap indexProviderMap;\n-        private final LabelScanStore labelScanStore;\n+      return sizeOfStoreFiles(RELATIONSHIP_STORE, RELATIONSHIP_GROUP_STORE, RELATIONSHIP_TYPE_TOKEN_STORE,\n+          RELATIONSHIP_TYPE_TOKEN_NAMES_STORE);\n+    }\n \n-        private StoreSizeProvider( FileSystemAbstraction fs, File storePath, DependencyResolver deps )\n-        {\n-            this.fs = requireNonNull( fs );\n-            this.storePath = requireNonNull( storePath );\n-            this.logFiles = deps.resolveDependency( LogFiles.class );\n-            this.explicitIndexProviderLookup = deps.resolveDependency( ExplicitIndexProviderLookup.class );\n-            this.indexProviderMap = deps.resolveDependency( IndexProviderMap.class );\n-            this.labelScanStore = deps.resolveDependency( LabelScanStore.class );\n-        }\n+    @Override\n+    public long getPropertyStoreSize()\n+    {\n+      return sizeOfStoreFiles(PROPERTY_STORE, PROPERTY_KEY_TOKEN_STORE, PROPERTY_KEY_TOKEN_NAMES_STORE);\n+    }\n \n-        @Override\n-        public long getTransactionLogsSize()\n-        {\n-            final TotalSizeVersionVisitor logVersionVisitor = new TotalSizeVersionVisitor();\n-            logFiles.accept( logVersionVisitor );\n-            return logVersionVisitor.getTotalSize();\n-        }\n+    @Override\n+    public long getStringStoreSize()\n+    {\n+      return sizeOfStoreFiles(PROPERTY_STRING_STORE);\n+    }\n \n-        @Override\n-        public long getNodeStoreSize()\n-        {\n-            return sizeOfStoreFiles( NODE_STORE, NODE_LABEL_STORE );\n-        }\n+    @Override\n+    public long getArrayStoreSize()\n+    {\n+      return sizeOfStoreFiles(PROPERTY_ARRAY_STORE);\n+    }\n \n-        @Override\n-        public long getRelationshipStoreSize()\n-        {\n-            return sizeOfStoreFiles( RELATIONSHIP_STORE, RELATIONSHIP_GROUP_STORE, RELATIONSHIP_TYPE_TOKEN_STORE,\n-                    RELATIONSHIP_TYPE_TOKEN_NAMES_STORE );\n-        }\n+    @Override\n+    public long getLabelStoreSize()\n+    {\n+      return sizeOfStoreFiles(LABEL_TOKEN_STORE, LABEL_TOKEN_NAMES_STORE);\n+    }\n \n-        @Override\n-        public long getPropertyStoreSize()\n-        {\n-            return sizeOfStoreFiles( PROPERTY_STORE, PROPERTY_KEY_TOKEN_STORE, PROPERTY_KEY_TOKEN_NAMES_STORE );\n-        }\n+    @Override\n+    public long getCountStoreSize()\n+    {\n+      return sizeOfStoreFiles(COUNTS_STORE_LEFT, COUNTS_STORE_RIGHT);\n+    }\n \n-        @Override\n-        public long getStringStoreSize()\n-        {\n-            return sizeOfStoreFiles( PROPERTY_STRING_STORE );\n-        }\n+    @Override\n+    public long getSchemaStoreSize()\n+    {\n+      return sizeOfStoreFiles(SCHEMA_STORE);\n+    }\n \n-        @Override\n-        public long getArrayStoreSize()\n-        {\n-            return sizeOfStoreFiles( PROPERTY_ARRAY_STORE );\n-        }\n+    @Override\n+    public long getIndexStoreSize()\n+    {\n+      long size = 0L;\n \n-        @Override\n-        public long getLabelStoreSize()\n-        {\n-            return sizeOfStoreFiles( LABEL_TOKEN_STORE, LABEL_TOKEN_NAMES_STORE );\n-        }\n+      // Add explicit indices\n+      for (IndexImplementation index : explicitIndexProviderLookup.all())\n+      {\n+        size += FileUtils.size(fs, index.getIndexImplementationDirectory(storePath));\n+      }\n \n-        @Override\n-        public long getCountStoreSize()\n+      // Add schema index\n+      MutableLong schemaSize = new MutableLong();\n+      indexProviderMap.accept(provider ->\n+      {\n+        File rootDirectory = provider.directoryStructure().rootDirectory();\n+        if (rootDirectory != null)\n         {\n-            return sizeOfStoreFiles( COUNTS_STORE_LEFT, COUNTS_STORE_RIGHT );\n+          schemaSize.add(FileUtils.size(fs, rootDirectory));\n         }\n+        // else this provider didn't have any persistent storage\n+      });\n+      size += schemaSize.longValue();\n \n-        @Override\n-        public long getSchemaStoreSize()\n-        {\n-            return sizeOfStoreFiles( SCHEMA_STORE );\n-        }\n+      // Add label index\n+      size += FileUtils.size(fs, labelScanStore.getLabelScanStoreFile());\n \n-        @Override\n-        public long getIndexStoreSize()\n-        {\n-            long size = 0L;\n-\n-            // Add explicit indices\n-            for ( IndexImplementation index : explicitIndexProviderLookup.all() )\n-            {\n-                size += FileUtils.size( fs, index.getIndexImplementationDirectory( storePath ) );\n-            }\n-\n-            // Add schema index\n-            MutableLong schemaSize = new MutableLong();\n-            indexProviderMap.accept( provider ->\n-            {\n-                File rootDirectory = provider.directoryStructure().rootDirectory();\n-                if ( rootDirectory != null )\n-                {\n-                    schemaSize.add( FileUtils.size( fs, rootDirectory ) );\n-                }\n-                // else this provider didn't have any persistent storage\n-            } );\n-            size += schemaSize.longValue();\n-\n-            // Add label index\n-            size += FileUtils.size( fs, labelScanStore.getLabelScanStoreFile() );\n-\n-            return size;\n-        }\n+      return size;\n+    }\n \n-        @Override\n-        public long getTotalStoreSize()\n-        {\n-            return storePath == null ? 0L : FileUtils.size( fs, storePath );\n-        }\n+    @Override\n+    public long getTotalStoreSize()\n+    {\n+      return storePath == null ? 0L : FileUtils.size(fs, storePath);\n+    }\n \n-        private long sizeOf( String name )\n-        {\n-            return storePath == null ? 0L : FileUtils.size( fs, new File( storePath, name ) );\n-        }\n+    private long sizeOf(String name)\n+    {\n+      return storePath == null ? 0L : FileUtils.size(fs, new File(storePath, name));\n+    }\n \n-        private class TotalSizeVersionVisitor implements LogVersionVisitor\n-        {\n-            private long totalSize;\n-\n-            long getTotalSize()\n-            {\n-                return totalSize;\n-            }\n-\n-            @Override\n-            public void visit( File file, long logVersion )\n-            {\n-                totalSize += FileUtils.size( fs, file );\n-            }\n-        }\n+    private class TotalSizeVersionVisitor implements LogVersionVisitor\n+    {\n+      private long totalSize;\n+\n+      long getTotalSize()\n+      {\n+        return totalSize;\n+      }\n+\n+      @Override\n+      public void visit(File file, long logVersion)\n+      {\n+        totalSize += FileUtils.size(fs, file);\n+      }\n+    }\n \n-        /**\n-         * Count the total file size, including id files, of {@link StoreFile}s.\n-         * Missing files will be counted as 0 bytes.\n-         *\n-         * @param files the file types to count\n-         * @return the total size in bytes of the files\n-         */\n-        private long sizeOfStoreFiles( StoreFile... files )\n+    /**\n+     * Count the total file size, including id files, of {@link StoreFile}s.\n+     * Missing files will be counted as 0 bytes.\n+     *\n+     * @param files the file types to count\n+     * @return the total size in bytes of the files\n+     */\n+    private long sizeOfStoreFiles(StoreFile... files)\n+    {\n+      long size = 0L;\n+      for (StoreFile file : files)\n+      {\n+        // Get size of both store and id file\n+        size += sizeOf(file.fileName(StoreFileType.STORE));\n+        if (file.isRecordStore())\n         {\n-            long size = 0L;\n-            for ( StoreFile file : files )\n-            {\n-                // Get size of both store and id file\n-                size += sizeOf( file.fileName( StoreFileType.STORE ) );\n-                if ( file.isRecordStore() )\n-                {\n-                    size += sizeOf( file.fileName( StoreFileType.ID ) );\n-                }\n-            }\n-            return size;\n+          size += sizeOf(file.fileName(StoreFileType.ID));\n         }\n+      }\n+      return size;\n     }\n+  }\n }\n",
            "diff_size": 401
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/685/StoreSizeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/685/StoreSizeBean.java\nindex bb27fabbc28..01e3d20eb54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/685/StoreSizeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/685/StoreSizeBean.java\n@@ -374,8 +374,7 @@ public final class StoreSizeBean extends ManagementBeanProvider\n \n             // Add label index\n             size += FileUtils.size( fs, labelScanStore.getLabelScanStoreFile() );\n-\n-            return size;\n+return size;\n         }\n \n         @Override\n@@ -427,4 +426,4 @@ public final class StoreSizeBean extends ManagementBeanProvider\n             return size;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
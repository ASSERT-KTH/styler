{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "96",
    "information": {
        "errors": [
            {
                "line": "100",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 132).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    } catch (ServiceCombException e) {\n      Assert.assertEquals(\n          \"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n          e.getMessage());\n      Assert.assertEquals(\n          \"Illegal character in query at index 31: rest://127.0.0.1:9090?country=\u4e2d \u56fd\",",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/96/TestAbstractTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/96/TestAbstractTransport.java\nindex e45705d955b..6a0a4ced8f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/96/TestAbstractTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/96/TestAbstractTransport.java\n@@ -140,4 +140,4 @@ public class TestAbstractTransport {\n \n     transport.setListenAddressWithoutSchema(\":127.0.0.1:9090\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "column": "149",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/96/TestAbstractTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/96/TestAbstractTransport.java\nindex e45705d955b..34b266f0d7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/96/TestAbstractTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/96/TestAbstractTransport.java\n@@ -96,9 +96,7 @@ public class TestAbstractTransport {\n       transport.setListenAddressWithoutSchema(\"127.0.0.1:9090\", Collections.singletonMap(\"country\", \"\u4e2d \u56fd\"));\n       Assert.fail(\"must throw exception\");\n     } catch (ServiceCombException e) {\n-      Assert.assertEquals(\n-          \"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n-          e.getMessage());\n+      Assert.assertEquals(\"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",e.getMessage());\n       Assert.assertEquals(\n           \"Illegal character in query at index 31: rest://127.0.0.1:9090?country=\u4e2d \u56fd\",\n           e.getCause().getMessage());\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
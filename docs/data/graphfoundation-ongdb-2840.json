{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2840",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2840/PrimitiveIntHashSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2840/PrimitiveIntHashSet.java\nindex 21a6b8ea90a..9bb82b6a023 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2840/PrimitiveIntHashSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2840/PrimitiveIntHashSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import java.util.function.IntPredicate;\n@@ -30,154 +31,155 @@ import static org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm\n \n public class PrimitiveIntHashSet extends AbstractIntHopScotchCollection<Object> implements PrimitiveIntSet\n {\n-    private final Object valueMarker;\n-    private final Monitor monitor;\n-\n-    public PrimitiveIntHashSet( Table<Object> table, Object valueMarker, Monitor monitor )\n+  private final Object valueMarker;\n+  private final Monitor monitor;\n+\n+  public PrimitiveIntHashSet(Table<Object> table, Object valueMarker, Monitor monitor)\n+  {\n+    super(table);\n+    this.valueMarker = valueMarker;\n+    this.monitor = monitor;\n+  }\n+\n+  @Override\n+  public boolean add(int value)\n+  {\n+    return HopScotchHashingAlgorithm.put(table, monitor, DEFAULT_HASHING, value, valueMarker, this) == null;\n+  }\n+\n+  @Override\n+  public boolean addAll(PrimitiveIntIterator values)\n+  {\n+    boolean changed = false;\n+    while (values.hasNext())\n     {\n-        super( table );\n-        this.valueMarker = valueMarker;\n-        this.monitor = monitor;\n+      changed |= HopScotchHashingAlgorithm.put(table, monitor, DEFAULT_HASHING, values.next(),\n+          valueMarker, this) == null;\n     }\n-\n-    @Override\n-    public boolean add( int value )\n+    return changed;\n+  }\n+\n+  @Override\n+  public boolean contains(int value)\n+  {\n+    return HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, value) == valueMarker;\n+  }\n+\n+  /**\n+   * Prefer using {@link #contains(int)} - this method is identical and required by the {@link IntPredicate} interface\n+   *\n+   * @param value the input argument\n+   * @return true if the input argument matches the predicate, otherwise false\n+   */\n+  @Override\n+  public boolean test(int value)\n+  {\n+    return HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, value) == valueMarker;\n+  }\n+\n+  @Override\n+  public boolean remove(int value)\n+  {\n+    return HopScotchHashingAlgorithm.remove(table, monitor, DEFAULT_HASHING, value) == valueMarker;\n+  }\n+\n+  @SuppressWarnings(\"EqualsWhichDoesntCheckParameterClass\") // yes it does\n+  @Override\n+  public boolean equals(Object other)\n+  {\n+    if (typeAndSizeEqual(other))\n     {\n-        return HopScotchHashingAlgorithm.put( table, monitor, DEFAULT_HASHING, value, valueMarker, this ) == null;\n+      PrimitiveIntHashSet that = (PrimitiveIntHashSet) other;\n+      IntKeyEquality equality = new IntKeyEquality(that);\n+      visitKeys(equality);\n+      return equality.isEqual();\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public boolean addAll( PrimitiveIntIterator values )\n-    {\n-        boolean changed = false;\n-        while ( values.hasNext() )\n-        {\n-            changed |= HopScotchHashingAlgorithm.put( table, monitor, DEFAULT_HASHING, values.next(),\n-                    valueMarker, this ) == null;\n-        }\n-        return changed;\n-    }\n+  private static class IntKeyEquality implements PrimitiveIntVisitor<RuntimeException>\n+  {\n+    private final PrimitiveIntHashSet other;\n+    private boolean equal = true;\n \n-    @Override\n-    public boolean contains( int value )\n+    IntKeyEquality(PrimitiveIntHashSet that)\n     {\n-        return HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, value ) == valueMarker;\n+      this.other = that;\n     }\n \n-    /**\n-     * Prefer using {@link #contains(int)} - this method is identical and required by the {@link IntPredicate} interface\n-     *\n-     * @param value the input argument\n-     * @return true if the input argument matches the predicate, otherwise false\n-     */\n     @Override\n-    public boolean test( int value )\n+    public boolean visited(int value)\n     {\n-        return HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, value ) == valueMarker;\n+      equal = other.contains(value);\n+      return !equal;\n     }\n \n-    @Override\n-    public boolean remove( int value )\n+    public boolean isEqual()\n     {\n-        return HopScotchHashingAlgorithm.remove( table, monitor, DEFAULT_HASHING, value ) == valueMarker;\n+      return equal;\n     }\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    HashCodeComputer hash = new HashCodeComputer();\n+    visitKeys(hash);\n+    return hash.hashCode();\n+  }\n+\n+  private static class HashCodeComputer implements PrimitiveIntVisitor<RuntimeException>\n+  {\n+    private int hash = 1337;\n \n-    @SuppressWarnings( \"EqualsWhichDoesntCheckParameterClass\" ) // yes it does\n     @Override\n-    public boolean equals( Object other )\n+    public boolean visited(int value) throws RuntimeException\n     {\n-        if ( typeAndSizeEqual( other ) )\n-        {\n-            PrimitiveIntHashSet that = (PrimitiveIntHashSet) other;\n-            IntKeyEquality equality = new IntKeyEquality( that );\n-            visitKeys( equality );\n-            return equality.isEqual();\n-        }\n-        return false;\n+      hash += DEFAULT_HASHING.hashSingleValueToInt(value);\n+      return false;\n     }\n \n-    private static class IntKeyEquality implements PrimitiveIntVisitor<RuntimeException>\n+    @Override\n+    public int hashCode()\n     {\n-        private final PrimitiveIntHashSet other;\n-        private boolean equal = true;\n-\n-        IntKeyEquality( PrimitiveIntHashSet that )\n-        {\n-            this.other = that;\n-        }\n-\n-        @Override\n-        public boolean visited( int value )\n-        {\n-            equal = other.contains( value );\n-            return !equal;\n-        }\n-\n-        public boolean isEqual()\n-        {\n-            return equal;\n-        }\n+      return hash;\n     }\n \n     @Override\n-    public int hashCode()\n+    public boolean equals(Object o)\n     {\n-        HashCodeComputer hash = new HashCodeComputer();\n-        visitKeys( hash );\n-        return hash.hashCode();\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      HashCodeComputer that = (HashCodeComputer) o;\n+      return hash == that.hash;\n     }\n+  }\n \n-    private static class HashCodeComputer implements PrimitiveIntVisitor<RuntimeException>\n+  @Override\n+  public String toString()\n+  {\n+    final StringBuilder builder = new StringBuilder(\"{\");\n+    visitKeys(new PrimitiveIntVisitor<RuntimeException>()\n     {\n-        private int hash = 1337;\n-\n-        @Override\n-        public boolean visited( int value ) throws RuntimeException\n-        {\n-            hash += DEFAULT_HASHING.hashSingleValueToInt( value );\n-            return false;\n-        }\n+      private int count;\n \n-        @Override\n-        public int hashCode()\n+      @Override\n+      public boolean visited(int value) throws RuntimeException\n+      {\n+        if (count++ > 0)\n         {\n-            return hash;\n+          builder.append(\",\");\n         }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            HashCodeComputer that = (HashCodeComputer) o;\n-            return hash == that.hash;\n-        }\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        final StringBuilder builder = new StringBuilder( \"{\" );\n-        visitKeys( new PrimitiveIntVisitor<RuntimeException>()\n-        {\n-            private int count;\n-            @Override\n-            public boolean visited( int value ) throws RuntimeException\n-            {\n-                if ( count++ > 0 )\n-                {\n-                    builder.append( \",\" );\n-                }\n-                builder.append( value );\n-                return false;\n-            }\n-        } );\n-        return builder.append( \"}\" ).toString();\n-    }\n+        builder.append(value);\n+        return false;\n+      }\n+    });\n+    return builder.append(\"}\").toString();\n+  }\n }\n",
            "diff_size": 200
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
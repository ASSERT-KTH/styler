{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1612",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1612/DiagnosticsReportCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1612/DiagnosticsReportCommandProvider.java\nindex 19ce8ae5244..0267d4b6174 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1612/DiagnosticsReportCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1612/DiagnosticsReportCommandProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.nio.file.Path;\n@@ -31,47 +32,47 @@ import static org.neo4j.commandline.dbms.DiagnosticsReportCommand.DEFAULT_CLASSI\n \n public class DiagnosticsReportCommandProvider extends AdminCommand.Provider\n {\n-    public DiagnosticsReportCommandProvider()\n-    {\n-        super( \"report\" );\n-    }\n+  public DiagnosticsReportCommandProvider()\n+  {\n+    super(\"report\");\n+  }\n \n-    @Nonnull\n-    @Override\n-    public Arguments allArguments()\n-    {\n-        return DiagnosticsReportCommand.allArguments();\n-    }\n+  @Nonnull\n+  @Override\n+  public Arguments allArguments()\n+  {\n+    return DiagnosticsReportCommand.allArguments();\n+  }\n \n-    @Nonnull\n-    @Override\n-    public String summary()\n-    {\n-        return \"Produces a zip/tar of the most common information needed for remote assessments.\";\n-    }\n+  @Nonnull\n+  @Override\n+  public String summary()\n+  {\n+    return \"Produces a zip/tar of the most common information needed for remote assessments.\";\n+  }\n \n-    @Nonnull\n-    @Override\n-    public AdminCommandSection commandSection()\n-    {\n-        return AdminCommandSection.general();\n-    }\n+  @Nonnull\n+  @Override\n+  public AdminCommandSection commandSection()\n+  {\n+    return AdminCommandSection.general();\n+  }\n \n-    @Nonnull\n-    @Override\n-    public String description()\n-    {\n-        return \"Will collect information about the system and package everything in an archive. If you specify 'all', \" +\n-                \"everything will be included. You can also fine tune the selection by passing classifiers to the tool, \" +\n-                \"e.g 'logs tx threads'. For a complete list of all available classifiers call the tool with \" +\n-                \"the '--list' flag. If no classifiers are passed, the default list of `\" +\n-                String.join( \" \", DEFAULT_CLASSIFIERS ) + \"` will be used.\" ;\n-    }\n+  @Nonnull\n+  @Override\n+  public String description()\n+  {\n+    return \"Will collect information about the system and package everything in an archive. If you specify 'all', \" +\n+        \"everything will be included. You can also fine tune the selection by passing classifiers to the tool, \" +\n+        \"e.g 'logs tx threads'. For a complete list of all available classifiers call the tool with \" +\n+        \"the '--list' flag. If no classifiers are passed, the default list of `\" +\n+        String.join(\" \", DEFAULT_CLASSIFIERS) + \"` will be used.\";\n+  }\n \n-    @Nonnull\n-    @Override\n-    public AdminCommand create( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n-    {\n-        return new DiagnosticsReportCommand( homeDir, configDir, outsideWorld );\n-    }\n+  @Nonnull\n+  @Override\n+  public AdminCommand create(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    return new DiagnosticsReportCommand(homeDir, configDir, outsideWorld);\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 461).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1612/DiagnosticsReportCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1612/DiagnosticsReportCommandProvider.java\nindex 19ce8ae5244..ebfa48cea9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1612/DiagnosticsReportCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1612/DiagnosticsReportCommandProvider.java\n@@ -61,11 +61,7 @@ public class DiagnosticsReportCommandProvider extends AdminCommand.Provider\n     @Override\n     public String description()\n     {\n-        return \"Will collect information about the system and package everything in an archive. If you specify 'all', \" +\n-                \"everything will be included. You can also fine tune the selection by passing classifiers to the tool, \" +\n-                \"e.g 'logs tx threads'. For a complete list of all available classifiers call the tool with \" +\n-                \"the '--list' flag. If no classifiers are passed, the default list of `\" +\n-                String.join( \" \", DEFAULT_CLASSIFIERS ) + \"` will be used.\" ;\n+        return \"Will collect information about the system and package everything in an archive. If you specify 'all', \" + \"everything will be included. You can also fine tune the selection by passing classifiers to the tool, \" + \"e.g 'logs tx threads'. For a complete list of all available classifiers call the tool with \" + \"the '--list' flag. If no classifiers are passed, the default list of `\" + String.join( \" \", DEFAULT_CLASSIFIERS ) + \"` will be used.\" ;\n     }\n \n     @Nonnull\n@@ -74,4 +70,4 @@ public class DiagnosticsReportCommandProvider extends AdminCommand.Provider\n     {\n         return new DiagnosticsReportCommand( homeDir, configDir, outsideWorld );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
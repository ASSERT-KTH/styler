{
    "project_name": "Angel-ML-angel",
    "error_id": "1160",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1160/RowIdColIdValueBinaryRowFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1160/RowIdColIdValueBinaryRowFormat.java\nindex df31ab11393..b9a781ee9c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1160/RowIdColIdValueBinaryRowFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1160/RowIdColIdValueBinaryRowFormat.java\n@@ -25,110 +25,126 @@ import java.io.IOException;\n  * Binary format: row id, column id and elememt value\n  */\n public class RowIdColIdValueBinaryRowFormat extends RowFormat {\n-  @Override public void save(IntFloatElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(IntFloatElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(IntDoubleElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(IntDoubleElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(IntIntElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(IntIntElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(IntLongElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(IntLongElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeLong(element.value);\n   }\n \n-  @Override public void save(LongFloatElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongFloatElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(LongDoubleElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongDoubleElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(LongIntElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongIntElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(LongLongElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongLongElement element, DataOutputStream out)\n+      throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeLong(element.value);\n   }\n \n-  @Override public void load(IntFloatElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(IntFloatElement element, DataInputStream in)\n+      throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(IntDoubleElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(IntDoubleElement element, DataInputStream in)\n+      throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+  public void load(IntIntElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n+  @Override\n+  public void load(IntLongElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readLong();\n   }\n \n-  @Override public void load(LongFloatElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(LongFloatElement element, DataInputStream in)\n+      throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(LongDoubleElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(LongDoubleElement element, DataInputStream in)\n+      throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+  public void load(LongIntElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(LongLongElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(LongLongElement element, DataInputStream in)\n+      throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readLong();\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1160/RowIdColIdValueBinaryRowFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1160/RowIdColIdValueBinaryRowFormat.java\nindex df31ab11393..434bd30cd3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1160/RowIdColIdValueBinaryRowFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1160/RowIdColIdValueBinaryRowFormat.java\n@@ -25,112 +25,115 @@ import java.io.IOException;\n  * Binary format: row id, column id and elememt value\n  */\n public class RowIdColIdValueBinaryRowFormat extends RowFormat {\n-  @Override public void save(IntFloatElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(IntDoubleElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(IntIntElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(IntIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(IntLongElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(IntLongElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeLong(element.value);\n   }\n \n-  @Override public void save(LongFloatElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(LongDoubleElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(LongIntElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(LongIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(LongLongElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+public void save(LongLongElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeLong(element.value);\n   }\n \n-  @Override public void load(IntFloatElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+public void load(IntFloatElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(IntDoubleElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntIntElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntLongElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readLong();\n   }\n \n-  @Override public void load(LongFloatElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+public void load(LongFloatElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(LongDoubleElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongIntElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(LongLongElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+public void load(LongLongElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readLong();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1160/RowIdColIdValueBinaryRowFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1160/RowIdColIdValueBinaryRowFormat.java\nindex df31ab11393..fe95e89fad1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1160/RowIdColIdValueBinaryRowFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1160/RowIdColIdValueBinaryRowFormat.java\n@@ -24,113 +24,120 @@ import java.io.IOException;\n /**\n  * Binary format: row id, column id and elememt value\n  */\n+\n public class RowIdColIdValueBinaryRowFormat extends RowFormat {\n-  @Override public void save(IntFloatElement element, DataOutputStream out)\n-    throws IOException {\n+\n+\n+  @Override\n+  public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(IntDoubleElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(IntIntElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(IntIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(IntLongElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(IntLongElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeInt(element.colId);\n     out.writeLong(element.value);\n   }\n \n-  @Override public void save(LongFloatElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(LongDoubleElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(LongIntElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(LongLongElement element, DataOutputStream out)\n-    throws IOException {\n+  @Override\n+  public void save(LongLongElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.rowId);\n     out.writeLong(element.colId);\n     out.writeLong(element.value);\n   }\n \n-  @Override public void load(IntFloatElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(IntFloatElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(IntDoubleElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+  public void load(IntIntElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n+  @Override\n+  public void load(IntLongElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readInt();\n     element.value = in.readLong();\n   }\n \n-  @Override public void load(LongFloatElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(LongFloatElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(LongDoubleElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+  public void load(LongIntElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(LongLongElement element, DataInputStream in)\n-    throws IOException {\n+  @Override\n+  public void load(LongLongElement element, DataInputStream in) throws IOException {\n     element.rowId = in.readInt();\n     element.colId = in.readLong();\n     element.value = in.readLong();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
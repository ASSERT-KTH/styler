{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2389",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2389/ClusterDiagnosticsOfflineReportProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2389/ClusterDiagnosticsOfflineReportProvider.java\nindex 0719ae53e1c..b121679f6f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2389/ClusterDiagnosticsOfflineReportProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2389/ClusterDiagnosticsOfflineReportProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.diagnostics;\n \n import java.io.File;\n@@ -40,104 +41,102 @@ import static org.neo4j.causalclustering.core.consensus.log.RaftLog.RAFT_LOG_DIR\n \n public class ClusterDiagnosticsOfflineReportProvider extends DiagnosticsOfflineReportProvider\n {\n-    private FileSystemAbstraction fs;\n-    private File clusterStateDirectory;\n-    private ClusterStateException clusterStateException;\n+  private FileSystemAbstraction fs;\n+  private File clusterStateDirectory;\n+  private ClusterStateException clusterStateException;\n+\n+  public ClusterDiagnosticsOfflineReportProvider()\n+  {\n+    super(\"cc\", \"raft\", \"ccstate\");\n+  }\n \n-    public ClusterDiagnosticsOfflineReportProvider()\n+  @Override\n+  public void init(FileSystemAbstraction fs, Config config, File storeDirectory)\n+  {\n+    this.fs = fs;\n+    final File dataDir = config.get(GraphDatabaseSettings.data_directory);\n+    try\n     {\n-        super( \"cc\", \"raft\", \"ccstate\" );\n+      clusterStateDirectory = new ClusterStateDirectory(dataDir, storeDirectory, true).initialize(fs).get();\n+    } catch (ClusterStateException e)\n+    {\n+      clusterStateException = e;\n     }\n+  }\n \n-    @Override\n-    public void init( FileSystemAbstraction fs, Config config, File storeDirectory )\n+  @Override\n+  protected List<DiagnosticsReportSource> provideSources(Set<String> classifiers)\n+  {\n+    List<DiagnosticsReportSource> sources = new ArrayList<>();\n+    if (classifiers.contains(\"raft\"))\n     {\n-        this.fs = fs;\n-        final File dataDir = config.get( GraphDatabaseSettings.data_directory );\n-        try\n-        {\n-            clusterStateDirectory = new ClusterStateDirectory( dataDir, storeDirectory, true ).initialize( fs ).get();\n-        }\n-        catch ( ClusterStateException e )\n-        {\n-            clusterStateException = e;\n-        }\n+      getRaftLogs(sources);\n     }\n-\n-    @Override\n-    protected List<DiagnosticsReportSource> provideSources( Set<String> classifiers )\n+    if (classifiers.contains(\"ccstate\"))\n     {\n-        List<DiagnosticsReportSource> sources = new ArrayList<>();\n-        if ( classifiers.contains( \"raft\" ) )\n-        {\n-            getRaftLogs( sources );\n-        }\n-        if ( classifiers.contains( \"ccstate\" ) )\n-        {\n-            getClusterState( sources );\n-        }\n-\n-        return sources;\n+      getClusterState(sources);\n     }\n \n-    private void getRaftLogs( List<DiagnosticsReportSource> sources )\n+    return sources;\n+  }\n+\n+  private void getRaftLogs(List<DiagnosticsReportSource> sources)\n+  {\n+    if (clusterStateDirectory == null)\n     {\n-        if ( clusterStateDirectory == null )\n-        {\n-            sources.add( DiagnosticsReportSources.newDiagnosticsString( \"raft.txt\",\n-                    () -> \"error creating ClusterStateDirectory: \" + clusterStateException.getMessage() ) );\n-            return;\n-        }\n+      sources.add(DiagnosticsReportSources.newDiagnosticsString(\"raft.txt\",\n+          () -> \"error creating ClusterStateDirectory: \" + clusterStateException.getMessage()));\n+      return;\n+    }\n \n-        File raftLogDirectory = new File( clusterStateDirectory, RAFT_LOG_DIRECTORY_NAME );\n-        FileNames fileNames = new FileNames( raftLogDirectory );\n-        SortedMap<Long,File> allFiles = fileNames.getAllFiles( fs, NullLog.getInstance() );\n+    File raftLogDirectory = new File(clusterStateDirectory, RAFT_LOG_DIRECTORY_NAME);\n+    FileNames fileNames = new FileNames(raftLogDirectory);\n+    SortedMap<Long, File> allFiles = fileNames.getAllFiles(fs, NullLog.getInstance());\n \n-        for ( File logFile : allFiles.values() )\n-        {\n-            sources.add( DiagnosticsReportSources.newDiagnosticsFile( \"raft/\" + logFile.getName(), fs, logFile ) );\n-        }\n+    for (File logFile : allFiles.values())\n+    {\n+      sources.add(DiagnosticsReportSources.newDiagnosticsFile(\"raft/\" + logFile.getName(), fs, logFile));\n     }\n+  }\n \n-    private void getClusterState( List<DiagnosticsReportSource> sources )\n+  private void getClusterState(List<DiagnosticsReportSource> sources)\n+  {\n+    if (clusterStateDirectory == null)\n     {\n-        if ( clusterStateDirectory == null )\n-        {\n-            sources.add( DiagnosticsReportSources.newDiagnosticsString( \"ccstate.txt\",\n-                    () -> \"error creating ClusterStateDirectory: \" + clusterStateException.getMessage() ) );\n-            return;\n-        }\n+      sources.add(DiagnosticsReportSources.newDiagnosticsString(\"ccstate.txt\",\n+          () -> \"error creating ClusterStateDirectory: \" + clusterStateException.getMessage()));\n+      return;\n+    }\n \n-        for ( File file : fs.listFiles( clusterStateDirectory, ( dir, name ) -> !name.equals( RAFT_LOG_DIRECTORY_NAME ) ) )\n-        {\n-            addDirectory( \"ccstate\", file, sources );\n-        }\n+    for (File file : fs.listFiles(clusterStateDirectory, (dir, name) -> !name.equals(RAFT_LOG_DIRECTORY_NAME)))\n+    {\n+      addDirectory(\"ccstate\", file, sources);\n     }\n+  }\n \n-    /**\n-     * Add all files in a directory recursively.\n-     *\n-     * @param path current relative path for destination.\n-     * @param dir current directory or file.\n-     * @param sources list of source that will be accumulated.\n-     */\n-    private void addDirectory( String path, File dir, List<DiagnosticsReportSource> sources )\n+  /**\n+   * Add all files in a directory recursively.\n+   *\n+   * @param path    current relative path for destination.\n+   * @param dir     current directory or file.\n+   * @param sources list of source that will be accumulated.\n+   */\n+  private void addDirectory(String path, File dir, List<DiagnosticsReportSource> sources)\n+  {\n+    String currentLevel = path + File.separator + dir.getName();\n+    if (fs.isDirectory(dir))\n     {\n-        String currentLevel = path + File.separator + dir.getName();\n-        if ( fs.isDirectory( dir ) )\n+      File[] files = fs.listFiles(dir);\n+      if (files != null)\n+      {\n+        for (File file : files)\n         {\n-            File[] files = fs.listFiles( dir );\n-            if ( files != null )\n-            {\n-                for ( File file : files )\n-                {\n-                    addDirectory( currentLevel, file, sources );\n-                }\n-            }\n-        }\n-        else // File\n-        {\n-            sources.add( DiagnosticsReportSources.newDiagnosticsFile( currentLevel, fs, dir ) );\n+          addDirectory(currentLevel, file, sources);\n         }\n+      }\n+    } else // File\n+    {\n+      sources.add(DiagnosticsReportSources.newDiagnosticsFile(currentLevel, fs, dir));\n     }\n+  }\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2389/ClusterDiagnosticsOfflineReportProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2389/ClusterDiagnosticsOfflineReportProvider.java\nindex 0719ae53e1c..4e39814ed2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2389/ClusterDiagnosticsOfflineReportProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2389/ClusterDiagnosticsOfflineReportProvider.java\n@@ -72,7 +72,8 @@ public class ClusterDiagnosticsOfflineReportProvider extends DiagnosticsOfflineR\n         {\n             getRaftLogs( sources );\n         }\n-        if ( classifiers.contains( \"ccstate\" ) )\n+\n+if ( classifiers.contains( \"ccstate\" ) )\n         {\n             getClusterState( sources );\n         }\n@@ -86,14 +87,13 @@ public class ClusterDiagnosticsOfflineReportProvider extends DiagnosticsOfflineR\n         {\n             sources.add( DiagnosticsReportSources.newDiagnosticsString( \"raft.txt\",\n                     () -> \"error creating ClusterStateDirectory: \" + clusterStateException.getMessage() ) );\n-            return;\n+return;\n         }\n \n         File raftLogDirectory = new File( clusterStateDirectory, RAFT_LOG_DIRECTORY_NAME );\n         FileNames fileNames = new FileNames( raftLogDirectory );\n         SortedMap<Long,File> allFiles = fileNames.getAllFiles( fs, NullLog.getInstance() );\n-\n-        for ( File logFile : allFiles.values() )\n+for ( File logFile : allFiles.values() )\n         {\n             sources.add( DiagnosticsReportSources.newDiagnosticsFile( \"raft/\" + logFile.getName(), fs, logFile ) );\n         }\n@@ -105,7 +105,7 @@ public class ClusterDiagnosticsOfflineReportProvider extends DiagnosticsOfflineR\n         {\n             sources.add( DiagnosticsReportSources.newDiagnosticsString( \"ccstate.txt\",\n                     () -> \"error creating ClusterStateDirectory: \" + clusterStateException.getMessage() ) );\n-            return;\n+return;\n         }\n \n         for ( File file : fs.listFiles( clusterStateDirectory, ( dir, name ) -> !name.equals( RAFT_LOG_DIRECTORY_NAME ) ) )\n@@ -140,4 +140,4 @@ public class ClusterDiagnosticsOfflineReportProvider extends DiagnosticsOfflineR\n             sources.add( DiagnosticsReportSources.newDiagnosticsFile( currentLevel, fs, dir ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
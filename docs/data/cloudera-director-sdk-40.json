{
    "project_name": "cloudera-director-sdk",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/40/Notification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/40/Notification.java\nindex d118b23536a..7b022f2c01b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/40/Notification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/40/Notification.java\n@@ -26,11 +26,14 @@ public class Notification {\n   private String message;\n   /* type */\n   private String type;\n+\n   public interface Type {\n     String WARNING = \"WARNING\";\n     String CRITICAL = \"CRITICAL\";\n   }\n-  public Notification() { }\n+\n+  public Notification() {\n+  }\n \n   private Notification(String description, String message, String type) {\n     this.description = description;\n@@ -75,14 +78,16 @@ public class Notification {\n \n   public NotificationBuilder toBuilder() {\n     return builder()\n-      .description(description)\n-      .message(message)\n-      .type(type)\n-      ;\n+        .description(description)\n+        .message(message)\n+        .type(type)\n+        ;\n   }\n+\n   public String getDescription() {\n     return description;\n   }\n+\n   public void setDescription(String description) {\n     this.description = description;\n   }\n@@ -90,6 +95,7 @@ public class Notification {\n   public String getMessage() {\n     return message;\n   }\n+\n   public void setMessage(String message) {\n     this.message = message;\n   }\n@@ -97,26 +103,37 @@ public class Notification {\n   public String getType() {\n     return type;\n   }\n+\n   public void setType(String type) {\n     this.type = type;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     Notification other = (Notification) o; // NOPMD\n \n     if (description != null ?\n         !description.equals(other.description) :\n-        other.description != null) return false;\n+        other.description != null) {\n+      return false;\n+    }\n     if (message != null ?\n         !message.equals(other.message) :\n-        other.message != null) return false;\n+        other.message != null) {\n+      return false;\n+    }\n     if (type != null ?\n         !type.equals(other.type) :\n-        other.type != null) return false;\n+        other.type != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -130,7 +147,7 @@ public class Notification {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Notification {\" + newLine);\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/40/Notification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/40/Notification.java\nindex d118b23536a..47aae5a9bbd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/40/Notification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/40/Notification.java\n@@ -1,24 +1,8 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v5.model;\n \n-\n public class Notification {\n   /* description */\n   private String description;\n@@ -26,11 +10,13 @@ public class Notification {\n   private String message;\n   /* type */\n   private String type;\n-  public interface Type {\n+\n+public interface Type {\n     String WARNING = \"WARNING\";\n     String CRITICAL = \"CRITICAL\";\n   }\n-  public Notification() { }\n+\n+public Notification() { }\n \n   private Notification(String description, String message, String type) {\n     this.description = description;\n@@ -49,7 +35,8 @@ public class Notification {\n   }\n \n   public static class NotificationBuilder {\n-    private String description = null;\n+\n+  private String description = null;\n     private String message = null;\n     private String type = null;\n \n@@ -74,13 +61,12 @@ public class Notification {\n   }\n \n   public NotificationBuilder toBuilder() {\n-    return builder()\n-      .description(description)\n+    return builder().description(description)\n       .message(message)\n-      .type(type)\n-      ;\n+      .type(type);\n   }\n-  public String getDescription() {\n+\n+public String getDescription() {\n     return description;\n   }\n   public void setDescription(String description) {\n@@ -104,19 +90,18 @@ public class Notification {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Notification other = (Notification) o; // NOPMD\n-\n-    if (description != null ?\n-        !description.equals(other.description) :\n-        other.description != null) return false;\n-    if (message != null ?\n-        !message.equals(other.message) :\n-        other.message != null) return false;\n-    if (type != null ?\n-        !type.equals(other.type) :\n-        other.type != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    Notification other = (Notification) o;\n+\n+// NOPMD\n+\n+    if (description != null ?!description.equals(other.description) : other.description != null) return false;\n+\n+if (message != null ?!message.equals(other.message) : other.message != null) return false;\n+\n+if (type != null ?!type.equals(other.type) : other.type != null) return false;\n     return true;\n   }\n \n@@ -130,7 +115,7 @@ public class Notification {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Notification {\" + newLine);\n@@ -140,5 +125,4 @@ public class Notification {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "39",
                    "column": "25",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "column": "26",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "39",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "126",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "127",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "127",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "127",
                    "column": "55",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "128",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "128",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "128",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "46",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "42",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "62",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "62",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/40/Notification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/40/Notification.java\nindex d118b23536a..71bb56da038 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/40/Notification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/40/Notification.java\n@@ -18,39 +18,49 @@\n \n package com.cloudera.director.client.v5.model;\n \n-\n public class Notification {\n   /* description */\n+\n   private String description;\n   /* message */\n+\n   private String message;\n   /* type */\n+\n   private String type;\n+\n   public interface Type {\n-    String WARNING = \"WARNING\";\n-    String CRITICAL = \"CRITICAL\";\n+String WARNING = \"WARNING\";\n+\n+\n+String CRITICAL = \"CRITICAL\";\n   }\n-  public Notification() { }\n+\n+  public Notification() {}\n+\n \n   private Notification(String description, String message, String type) {\n-    this.description = description;\n-    this.message = message;\n-    this.type = type;\n-  }\n+                                                                        this.description = description;\n+                                                                        this.message = message;\n+                                                                        this.type = type;\n+                          }\n \n   private Notification(NotificationBuilder builder) {\n-    this.description = builder.description;\n-    this.message = builder.message;\n-    this.type = builder.type;\n-  }\n+                                                    this.description = builder.description;\n+                                                    this.message = builder.message;\n+                                                    this.type = builder.type;\n+                          }\n \n   public static NotificationBuilder builder() {\n     return new NotificationBuilder();\n   }\n \n   public static class NotificationBuilder {\n+\n     private String description = null;\n+\n     private String message = null;\n+\n     private String type = null;\n \n     public NotificationBuilder description(String description) {\n@@ -77,12 +87,13 @@ public class Notification {\n     return builder()\n       .description(description)\n       .message(message)\n-      .type(type)\n-      ;\n+      .type(type);\n   }\n+\n   public String getDescription() {\n     return description;\n   }\n+\n   public void setDescription(String description) {\n     this.description = description;\n   }\n@@ -90,6 +101,7 @@ public class Notification {\n   public String getMessage() {\n     return message;\n   }\n+\n   public void setMessage(String message) {\n     this.message = message;\n   }\n@@ -97,48 +109,50 @@ public class Notification {\n   public String getType() {\n     return type;\n   }\n+\n   public void setType(String type) {\n     this.type = type;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Notification other = (Notification) o; // NOPMD\n-\n-    if (description != null ?\n-        !description.equals(other.description) :\n-        other.description != null) return false;\n-    if (message != null ?\n-        !message.equals(other.message) :\n-        other.message != null) return false;\n-    if (type != null ?\n-        !type.equals(other.type) :\n-        other.type != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    Notification other = (Notification)o; // NOPMD\n+\n+    if (description != null?!description.equals(other.description): other.description != null) return false;\n+    if (message != null?!message.equals(other.message): other.message != null) return false;\n+    if (type != null?!type.equals(other.type): other.type != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (description != null ? description.hashCode() : 0);\n-    result = 31 * result + (message != null ? message.hashCode() : 0);\n-    result = 31 * result + (type != null ? type.hashCode() : 0);\n+    result = 31*result + (description != null? description.hashCode():0);\n+    result = 31*result + (message != null? message.hashCode():0);\n+    result = 31*result + (type != null? type.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Notification {\" + newLine);\n-    sb.append(\"  description: \").append(description).append(newLine);\n-    sb.append(\"  message: \").append(message).append(newLine);\n-    sb.append(\"  type: \").append(type).append(newLine);\n+    sb.append(\"  description: \")\n+      .append(description).append(newLine);\n+    sb.append(\"  message: \")\n+      .append(message).append(newLine);\n+    sb.append(\"  type: \")\n+      .append(type).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1772",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1772/TransactionStateChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1772/TransactionStateChecker.java\nindex 25131c72574..99b0159c64b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1772/TransactionStateChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1772/TransactionStateChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import org.neo4j.kernel.api.KernelTransaction;\n@@ -25,57 +26,57 @@ import org.neo4j.kernel.impl.api.KernelStatement;\n \n public class TransactionStateChecker implements AutoCloseable\n {\n-    private final Statement statement;\n-    private final IsNodeDeletedInCurrentTx nodeCheck;\n-    private final IsRelationshipDeletedInCurrentTx relCheck;\n+  private final Statement statement;\n+  private final IsNodeDeletedInCurrentTx nodeCheck;\n+  private final IsRelationshipDeletedInCurrentTx relCheck;\n \n-    TransactionStateChecker( Statement statement, IsNodeDeletedInCurrentTx nodeCheck,\n-            IsRelationshipDeletedInCurrentTx relCheck )\n-    {\n-        this.statement = statement;\n-        this.nodeCheck = nodeCheck;\n-        this.relCheck = relCheck;\n-    }\n+  TransactionStateChecker(Statement statement, IsNodeDeletedInCurrentTx nodeCheck,\n+                          IsRelationshipDeletedInCurrentTx relCheck)\n+  {\n+    this.statement = statement;\n+    this.nodeCheck = nodeCheck;\n+    this.relCheck = relCheck;\n+  }\n \n-    public static TransactionStateChecker create( TransitionalPeriodTransactionMessContainer container )\n-    {\n-        KernelTransaction topLevelTransactionBoundToThisThread =\n-                container.getBridge().getTopLevelTransactionBoundToThisThread( true );\n-        KernelStatement kernelStatement = (KernelStatement) topLevelTransactionBoundToThisThread.acquireStatement();\n+  public static TransactionStateChecker create(TransitionalPeriodTransactionMessContainer container)\n+  {\n+    KernelTransaction topLevelTransactionBoundToThisThread =\n+        container.getBridge().getTopLevelTransactionBoundToThisThread(true);\n+    KernelStatement kernelStatement = (KernelStatement) topLevelTransactionBoundToThisThread.acquireStatement();\n \n-        return new TransactionStateChecker(\n-                kernelStatement,\n-                nodeId -> kernelStatement.hasTxStateWithChanges() &&\n-                          kernelStatement.txState().nodeIsDeletedInThisTx( nodeId ),\n-                relId -> kernelStatement.hasTxStateWithChanges() &&\n-                         kernelStatement.txState().relationshipIsDeletedInThisTx( relId ) );\n-    }\n+    return new TransactionStateChecker(\n+        kernelStatement,\n+        nodeId -> kernelStatement.hasTxStateWithChanges() &&\n+            kernelStatement.txState().nodeIsDeletedInThisTx(nodeId),\n+        relId -> kernelStatement.hasTxStateWithChanges() &&\n+            kernelStatement.txState().relationshipIsDeletedInThisTx(relId));\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        statement.close();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    statement.close();\n+  }\n \n-    public boolean isNodeDeletedInCurrentTx( long id )\n-    {\n-        return nodeCheck.test( id );\n-    }\n+  public boolean isNodeDeletedInCurrentTx(long id)\n+  {\n+    return nodeCheck.test(id);\n+  }\n \n-    public boolean isRelationshipDeletedInCurrentTx( long id )\n-    {\n-        return relCheck.test( id );\n-    }\n+  public boolean isRelationshipDeletedInCurrentTx(long id)\n+  {\n+    return relCheck.test(id);\n+  }\n \n-    @FunctionalInterface\n-    interface IsNodeDeletedInCurrentTx\n-    {\n-        boolean test( long id );\n-    }\n+  @FunctionalInterface\n+  interface IsNodeDeletedInCurrentTx\n+  {\n+    boolean test(long id);\n+  }\n \n-    @FunctionalInterface\n-    interface IsRelationshipDeletedInCurrentTx\n-    {\n-        boolean test( long id );\n-    }\n+  @FunctionalInterface\n+  interface IsRelationshipDeletedInCurrentTx\n+  {\n+    boolean test(long id);\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 245).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "67",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "177",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1772/TransactionStateChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1772/TransactionStateChecker.java\nindex 25131c72574..c3b12fb5a11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1772/TransactionStateChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1772/TransactionStateChecker.java\n@@ -39,16 +39,10 @@ public class TransactionStateChecker implements AutoCloseable\n \n     public static TransactionStateChecker create( TransitionalPeriodTransactionMessContainer container )\n     {\n-        KernelTransaction topLevelTransactionBoundToThisThread =\n-                container.getBridge().getTopLevelTransactionBoundToThisThread( true );\n-        KernelStatement kernelStatement = (KernelStatement) topLevelTransactionBoundToThisThread.acquireStatement();\n-\n-        return new TransactionStateChecker(\n-                kernelStatement,\n-                nodeId -> kernelStatement.hasTxStateWithChanges() &&\n-                          kernelStatement.txState().nodeIsDeletedInThisTx( nodeId ),\n-                relId -> kernelStatement.hasTxStateWithChanges() &&\n-                         kernelStatement.txState().relationshipIsDeletedInThisTx( relId ) );\n+        KernelTransaction topLevelTransactionBoundToThisThread = container.getBridge().getTopLevelTransactionBoundToThisThread( true );\n+KernelStatement kernelStatement = (KernelStatement) topLevelTransactionBoundToThisThread.acquireStatement();\n+return new TransactionStateChecker( kernelStatement,\n+                nodeId -> kernelStatement.hasTxStateWithChanges() &&kernelStatement.txState().nodeIsDeletedInThisTx( nodeId ), relId -> kernelStatement.hasTxStateWithChanges() &&kernelStatement.txState().relationshipIsDeletedInThisTx( relId ) );\n     }\n \n     @Override\n@@ -78,4 +72,4 @@ public class TransactionStateChecker implements AutoCloseable\n     {\n         boolean test( long id );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
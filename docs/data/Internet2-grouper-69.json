{
    "project_name": "Internet2-grouper",
    "error_id": "69",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * style license a copy of which has been included with this distribution in\n * the LICENSE.txt file.\n * \n * Created on 04. June 2006 by Joe Walnes\n */\npackage edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.copy;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/69/HierarchicalStreamCopier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/69/HierarchicalStreamCopier.java\nindex f2699c068f8..80a0a918815 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/69/HierarchicalStreamCopier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/69/HierarchicalStreamCopier.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -21,9 +21,10 @@\n  * The software in this package is published under the terms of the BSD\r\n  * style license a copy of which has been included with this distribution in\r\n  * the LICENSE.txt file.\r\n- * \r\n+ *\r\n  * Created on 04. June 2006 by Joe Walnes\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.copy;\r\n \r\n import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamReader;\r\n@@ -47,21 +48,21 @@ import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.Hie\n  * @since 1.2\r\n  */\r\n public class HierarchicalStreamCopier {\r\n-    public void copy(HierarchicalStreamReader source, HierarchicalStreamWriter destination) {\r\n-        destination.startNode(source.getNodeName());\r\n-        int attributeCount = source.getAttributeCount();\r\n-        for (int i = 0; i < attributeCount; i++) {\r\n-            destination.addAttribute(source.getAttributeName(i), source.getAttribute(i));\r\n-        }\r\n-        String value = source.getValue();\r\n-        if (value != null && value.length() > 0) {\r\n-            destination.setValue(value);\r\n-        }\r\n-        while (source.hasMoreChildren()) {\r\n-            source.moveDown();\r\n-            copy(source, destination);\r\n-            source.moveUp();\r\n-        }\r\n-        destination.endNode();\r\n+  public void copy(HierarchicalStreamReader source, HierarchicalStreamWriter destination) {\r\n+    destination.startNode(source.getNodeName());\r\n+    int attributeCount = source.getAttributeCount();\r\n+    for (int i = 0; i < attributeCount; i++) {\r\n+      destination.addAttribute(source.getAttributeName(i), source.getAttribute(i));\r\n+    }\r\n+    String value = source.getValue();\r\n+    if (value != null && value.length() > 0) {\r\n+      destination.setValue(value);\r\n+    }\r\n+    while (source.hasMoreChildren()) {\r\n+      source.moveDown();\r\n+      copy(source, destination);\r\n+      source.moveUp();\r\n     }\r\n+    destination.endNode();\r\n+  }\r\n }\r\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/69/HierarchicalStreamCopier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/69/HierarchicalStreamCopier.java\nindex f2699c068f8..9746a7fae28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/69/HierarchicalStreamCopier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/69/HierarchicalStreamCopier.java\n@@ -56,12 +56,11 @@ public class HierarchicalStreamCopier {\n         String value = source.getValue();\r\n         if (value != null && value.length() > 0) {\r\n             destination.setValue(value);\r\n-        }\r\n-        while (source.hasMoreChildren()) {\r\n+        } while (source.hasMoreChildren()) {\r\n             source.moveDown();\r\n             copy(source, destination);\r\n             source.moveUp();\r\n         }\r\n         destination.endNode();\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/69/HierarchicalStreamCopier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/69/HierarchicalStreamCopier.java\nindex f2699c068f8..122ab1c8724 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/69/HierarchicalStreamCopier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/69/HierarchicalStreamCopier.java\n@@ -24,9 +24,9 @@\n  * \r\n  * Created on 04. June 2006 by Joe Walnes\r\n  */\r\n-package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.copy;\r\n-\r\n-import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamReader;\r\n+package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.copy;\n+\n+import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamReader;\n import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamWriter;\r\n \r\n /**\r\n@@ -45,23 +45,31 @@ import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.Hie\n  *\r\n  * @author Joe Walnes\r\n  * @since 1.2\r\n- */\r\n-public class HierarchicalStreamCopier {\r\n-    public void copy(HierarchicalStreamReader source, HierarchicalStreamWriter destination) {\r\n-        destination.startNode(source.getNodeName());\r\n-        int attributeCount = source.getAttributeCount();\r\n-        for (int i = 0; i < attributeCount; i++) {\r\n-            destination.addAttribute(source.getAttributeName(i), source.getAttribute(i));\r\n-        }\r\n-        String value = source.getValue();\r\n-        if (value != null && value.length() > 0) {\r\n-            destination.setValue(value);\r\n-        }\r\n-        while (source.hasMoreChildren()) {\r\n-            source.moveDown();\r\n-            copy(source, destination);\r\n-            source.moveUp();\r\n-        }\r\n-        destination.endNode();\r\n-    }\r\n-}\r\n+ */\n+\n+\n+public class HierarchicalStreamCopier {\n+    public void copy(HierarchicalStreamReader source, HierarchicalStreamWriter destination) {\n+        destination.startNode(source.getNodeName());\n+\n+        int attributeCount = source.getAttributeCount();\n+\n+        for (int i = 0; i < attributeCount; i++) {\n+            destination.addAttribute(source.getAttributeName(i),\n+                                     source.getAttribute(i));\n+        }\n+        String value = source.getValue();\n+\n+        if (value != null && value.length() > 0) {\n+            destination.setValue(value);\n+        }\n+\n+        while (source.hasMoreChildren()) {\n+            source.moveDown();\n+            copy(source, destination);\n+            source.moveUp();\n+        }\n+\n+        destination.endNode();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
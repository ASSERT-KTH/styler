{
    "project_name": "neo4j-neo4j",
    "error_id": "2658",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2658/ReadAheadChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2658/ReadAheadChannel.java\nindex a8e8aa435c5..fb1999a38d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2658/ReadAheadChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2658/ReadAheadChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.fs;\n \n import java.io.IOException;\n@@ -36,11 +37,12 @@ import static org.neo4j.io.fs.PhysicalFlushableChecksumChannel.DISABLE_WAL_CHECK\n /**\n  * A buffering implementation of {@link ReadableChannel}. This class also allows subclasses to read content\n  * spanning more than one file, by properly implementing {@link #next(StoreChannel)}.\n+ *\n  * @param <T> The type of StoreChannel wrapped\n  */\n public class ReadAheadChannel<T extends StoreChannel> implements ReadableChecksumChannel, PositionableChannel\n {\n-    public static final int DEFAULT_READ_AHEAD_SIZE = toIntExact( kibiBytes( 4 ) );\n+    public static final int DEFAULT_READ_AHEAD_SIZE = toIntExact(kibiBytes(4));\n     private ScopedBuffer scopedBuffer;\n \n     protected T channel;\n@@ -49,21 +51,21 @@ public class ReadAheadChannel<T extends StoreChannel> implements ReadableChecksu\n     private final Checksum checksum;\n     private final ByteBuffer checksumView;\n \n-    public ReadAheadChannel( T channel, ByteBuffer byteBuffer )\n+    public ReadAheadChannel(T channel, ByteBuffer byteBuffer)\n     {\n-        requireNonNull( channel );\n-        requireNonNull( byteBuffer );\n+        requireNonNull(channel);\n+        requireNonNull(byteBuffer);\n         this.aheadBuffer = byteBuffer;\n-        this.aheadBuffer.position( aheadBuffer.capacity() );\n+        this.aheadBuffer.position(aheadBuffer.capacity());\n         this.channel = channel;\n         this.readAheadSize = aheadBuffer.capacity();\n         this.checksumView = aheadBuffer.duplicate();\n         this.checksum = CHECKSUM_FACTORY.get();\n     }\n \n-    public ReadAheadChannel( T channel, ScopedBuffer scopedBuffer )\n+    public ReadAheadChannel(T channel, ScopedBuffer scopedBuffer)\n     {\n-        this( channel, scopedBuffer.getBuffer() );\n+        this(channel, scopedBuffer.getBuffer());\n         this.scopedBuffer = scopedBuffer;\n     }\n \n@@ -82,56 +84,56 @@ public class ReadAheadChannel<T extends StoreChannel> implements ReadableChecksu\n     @Override\n     public byte get() throws IOException\n     {\n-        ensureDataExists( 1 );\n+        ensureDataExists(1);\n         return aheadBuffer.get();\n     }\n \n     @Override\n     public short getShort() throws IOException\n     {\n-        ensureDataExists( Short.BYTES );\n+        ensureDataExists(Short.BYTES);\n         return aheadBuffer.getShort();\n     }\n \n     @Override\n     public int getInt() throws IOException\n     {\n-        ensureDataExists( Integer.BYTES );\n+        ensureDataExists(Integer.BYTES);\n         return aheadBuffer.getInt();\n     }\n \n     @Override\n     public long getLong() throws IOException\n     {\n-        ensureDataExists( Long.BYTES );\n+        ensureDataExists(Long.BYTES);\n         return aheadBuffer.getLong();\n     }\n \n     @Override\n     public float getFloat() throws IOException\n     {\n-        ensureDataExists( Float.BYTES );\n+        ensureDataExists(Float.BYTES);\n         return aheadBuffer.getFloat();\n     }\n \n     @Override\n     public double getDouble() throws IOException\n     {\n-        ensureDataExists( Double.BYTES );\n+        ensureDataExists(Double.BYTES);\n         return aheadBuffer.getDouble();\n     }\n \n     @Override\n-    public void get( byte[] bytes, int length ) throws IOException\n+    public void get(byte[] bytes, int length) throws IOException\n     {\n         assert length <= bytes.length;\n \n         int bytesGotten = 0;\n-        while ( bytesGotten < length )\n+        while (bytesGotten < length)\n         {   // get max 1024 bytes at the time, so that ensureDataExists functions as it should\n-            int chunkSize = min( readAheadSize >> 2, length - bytesGotten );\n-            ensureDataExists( chunkSize );\n-            aheadBuffer.get( bytes, bytesGotten, chunkSize );\n+            int chunkSize = min(readAheadSize >> 2, length - bytesGotten);\n+            ensureDataExists(chunkSize);\n+            aheadBuffer.get(bytes, bytesGotten, chunkSize);\n             bytesGotten += chunkSize;\n         }\n     }\n@@ -139,24 +141,24 @@ public class ReadAheadChannel<T extends StoreChannel> implements ReadableChecksu\n     @Override\n     public int endChecksumAndValidate() throws IOException\n     {\n-        ensureDataExists( 4 );\n+        ensureDataExists(4);\n \n-        if ( DISABLE_WAL_CHECKSUM )\n+        if (DISABLE_WAL_CHECKSUM)\n         {\n             aheadBuffer.getInt();\n             return 0xDEAD5EED;\n         }\n \n         // Consume remaining bytes\n-        checksumView.limit( aheadBuffer.position() );\n-        checksum.update( checksumView );\n+        checksumView.limit(aheadBuffer.position());\n+        checksum.update(checksumView);\n \n         // Validate checksum\n         int calculatedChecksum = (int) checksum.getValue();\n         int checksum = aheadBuffer.getInt();\n-        if ( calculatedChecksum != checksum )\n+        if (calculatedChecksum != checksum)\n         {\n-            throw new ChecksumMismatchException( checksum, calculatedChecksum );\n+            throw new ChecksumMismatchException(checksum, calculatedChecksum);\n         }\n         beginChecksum();\n \n@@ -166,70 +168,70 @@ public class ReadAheadChannel<T extends StoreChannel> implements ReadableChecksu\n     @Override\n     public void beginChecksum()\n     {\n-        if ( DISABLE_WAL_CHECKSUM )\n+        if (DISABLE_WAL_CHECKSUM)\n         {\n             return;\n         }\n         checksum.reset();\n-        checksumView.limit( checksumView.capacity() );\n-        checksumView.position( aheadBuffer.position() );\n+        checksumView.limit(checksumView.capacity());\n+        checksumView.position(aheadBuffer.position());\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        if ( channel != null )\n+        if (channel != null)\n         {\n             channel.close();\n             channel = null;\n         }\n-        if ( scopedBuffer != null )\n+        if (scopedBuffer != null)\n         {\n             scopedBuffer.close();\n         }\n     }\n \n-    private void ensureDataExists( int requestedNumberOfBytes ) throws IOException\n+    private void ensureDataExists(int requestedNumberOfBytes) throws IOException\n     {\n-        if ( !channel.isOpen() )\n+        if (!channel.isOpen())\n         {\n             throw new ClosedChannelException();\n         }\n \n         int remaining = aheadBuffer.remaining();\n-        if ( remaining >= requestedNumberOfBytes )\n+        if (remaining >= requestedNumberOfBytes)\n         {\n             return;\n         }\n \n         // Update checksum with consumed bytes\n-        if ( !DISABLE_WAL_CHECKSUM )\n+        if (!DISABLE_WAL_CHECKSUM)\n         {\n-            checksumView.limit( aheadBuffer.position() );\n-            checksum.update( checksumView );\n-            checksumView.limit( checksumView.capacity() );\n-            checksumView.position( 0 );\n+            checksumView.limit(aheadBuffer.position());\n+            checksum.update(checksumView);\n+            checksumView.limit(checksumView.capacity());\n+            checksumView.position(0);\n         }\n \n         // We ran out, try to read some more\n         // start by copying the remaining bytes to the beginning\n         aheadBuffer.compact();\n \n-        while ( aheadBuffer.position() < aheadBuffer.capacity() )\n+        while (aheadBuffer.position() < aheadBuffer.capacity())\n         {   // read from the current channel to try and fill the buffer\n-            int read = channel.read( aheadBuffer );\n-            if ( read == -1 )\n+            int read = channel.read(aheadBuffer);\n+            if (read == -1)\n             {\n                 // current channel ran out...\n-                if ( aheadBuffer.position() >= requestedNumberOfBytes )\n+                if (aheadBuffer.position() >= requestedNumberOfBytes)\n                 {   // ...although we have satisfied the request\n                     break;\n                 }\n \n                 // ... we need to read even further, into the next version\n-                T nextChannel = next( channel );\n+                T nextChannel = next(channel);\n                 assert nextChannel != null;\n-                if ( nextChannel == channel )\n+                if (nextChannel == channel)\n                 {\n                     // no more channels so we cannot satisfy the requested number of bytes\n                     aheadBuffer.flip();\n@@ -247,27 +249,27 @@ public class ReadAheadChannel<T extends StoreChannel> implements ReadableChecksu\n      * file channel is exhausted and a new channel is required for reading. The default implementation returns the\n      * argument, which is the condition for indicating no more content, resulting in a {@link ReadPastEndException} being\n      * thrown.\n+     *\n      * @param channel The channel that has just been exhausted.\n      * @throws IOException on I/O error.\n      */\n-    protected T next( T channel ) throws IOException\n+    protected T next(T channel) throws IOException\n     {\n         return channel;\n     }\n \n     @Override\n-    public void setCurrentPosition( long byteOffset ) throws IOException\n+    public void setCurrentPosition(long byteOffset) throws IOException\n     {\n         long positionRelativeToAheadBuffer = byteOffset - (channel.position() - aheadBuffer.limit());\n-        if ( positionRelativeToAheadBuffer >= aheadBuffer.limit() || positionRelativeToAheadBuffer < 0 )\n+        if (positionRelativeToAheadBuffer >= aheadBuffer.limit() || positionRelativeToAheadBuffer < 0)\n         {\n             // Beyond what we currently have buffered\n-            aheadBuffer.position( aheadBuffer.limit() );\n-            channel.position( byteOffset );\n-        }\n-        else\n+            aheadBuffer.position(aheadBuffer.limit());\n+            channel.position(byteOffset);\n+        } else\n         {\n-            aheadBuffer.position( toIntExact( positionRelativeToAheadBuffer ) );\n+            aheadBuffer.position(toIntExact(positionRelativeToAheadBuffer));\n         }\n \n         // After repositioning we need to reset checksum calculations\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2658/ReadAheadChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2658/ReadAheadChannel.java\nindex a8e8aa435c5..ca4550bab23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2658/ReadAheadChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2658/ReadAheadChannel.java\n@@ -273,4 +273,4 @@ public class ReadAheadChannel<T extends StoreChannel> implements ReadableChecksu\n         // After repositioning we need to reset checksum calculations\n         beginChecksum();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
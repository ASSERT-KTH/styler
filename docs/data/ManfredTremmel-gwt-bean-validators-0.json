{
    "project_name": "ManfredTremmel-gwt-bean-validators",
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "287",
                "column": "99",
                "severity": "warning",
                "message": "'}' at column 99 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n  // Invoked in the java.lang.Runtime class to implement load and loadLibrary.\n  static void loadLibrary(final Class<?> fromClass, final String name, final boolean isAbsolute) {}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "287",
                    "column": "99",
                    "severity": "warning",
                    "message": "'}' at column 99 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/0/ClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/intellij/0/ClassLoader.java\nindex 149b2c4f4d6..caca35f0b15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/0/ClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/intellij/0/ClassLoader.java\n@@ -16,7 +16,6 @@ import java.util.Objects;\n  * </p>\n  *\n  * @author \"James X. Nelson (james@wetheinter.net)\"\n- *\n  */\n public class ClassLoader {\n \n@@ -55,9 +54,7 @@ public class ClassLoader {\n    * </p>\n    *\n    * @param name The <a href=\"#name\">binary name</a> of the class\n-   *\n    * @return The resulting <tt>Class</tt> object\n-   *\n    * @throws ClassNotFoundException If the class was not found\n    */\n   public Class<?> loadClass(final String name) throws ClassNotFoundException {\n@@ -101,12 +98,9 @@ public class ClassLoader {\n    * rather than this method.\n    * </p>\n    *\n-   * @param name The <a href=\"#name\">binary name</a> of the class\n-   *\n+   * @param name    The <a href=\"#name\">binary name</a> of the class\n    * @param resolve If <tt>true</tt> then resolve the class\n-   *\n    * @return The resulting <tt>Class</tt> object\n-   *\n    * @throws ClassNotFoundException If the class could not be found\n    */\n   protected Class<?> loadClass(final String name, final boolean resolve)\n@@ -150,11 +144,8 @@ public class ClassLoader {\n    * </p>\n    *\n    * @param name The <a href=\"#name\">binary name</a> of the class\n-   *\n    * @return The resulting <tt>Class</tt> object\n-   *\n    * @throws ClassNotFoundException If the class could not be found\n-   *\n    * @since 1.2\n    */\n   protected Class<?> findClass(final String name) throws ClassNotFoundException {\n@@ -184,11 +175,8 @@ public class ClassLoader {\n    * </p>\n    *\n    * @param name The <a href=\"#name\">binary name</a> of the class\n-   *\n    * @return The <tt>Class</tt> object for the specified <tt>name</tt>\n-   *\n    * @throws ClassNotFoundException If the class could not be found\n-   *\n    * @see #ClassLoader(ClassLoader)\n    * @see #getParent()\n    */\n@@ -240,7 +228,6 @@ public class ClassLoader {\n    * Returns the parent class loader for delegation. Some implementations may use <tt>null</tt> to\n    * represent the bootstrap class loader. This method will return <tt>null</tt> in such\n    * implementations if this class loader's parent is the bootstrap class loader.\n-   *\n    */\n   public final ClassLoader getParent() {\n     return this.parent;\n@@ -284,5 +271,6 @@ public class ClassLoader {\n   }\n \n   // Invoked in the java.lang.Runtime class to implement load and loadLibrary.\n-  static void loadLibrary(final Class<?> fromClass, final String name, final boolean isAbsolute) {}\n+  static void loadLibrary(final Class<?> fromClass, final String name, final boolean isAbsolute) {\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "288",
                    "column": "99",
                    "severity": "warning",
                    "message": "'}' at column 99 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/0/ClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/naturalize/0/ClassLoader.java\nindex 149b2c4f4d6..cb37cfa8794 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/0/ClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/naturalize/0/ClassLoader.java\n@@ -112,7 +112,9 @@ public class ClassLoader {\n   protected Class<?> loadClass(final String name, final boolean resolve)\n       throws ClassNotFoundException {\n     // First, check if the class has already been loaded\n-    Class<?> clazz = null; // TODO: reimplement this goodness findLoadedClass(name);\n+    Class<?> clazz = null;\n+\n+// TODO: reimplement this goodness findLoadedClass(name);\n     if (clazz == null) {\n       try {\n         if (this.parent == null) {\n@@ -166,8 +168,7 @@ public class ClassLoader {\n    * Our ClassLoader doesn't actually load anything; it just holds a jso mapping from class name to\n    * class object.\n    */\n-  public final native Class<?> defineClass(String name, Class<?> cls)\n-  /*-{\n+  public final native Class<?> defineClass(String name, Class<?> cls) /*-{\n     this.@java.lang.ClassLoader::classes[name] = cls;\n     return cls;\n   }-*/;\n@@ -285,4 +286,4 @@ public class ClassLoader {\n \n   // Invoked in the java.lang.Runtime class to implement load and loadLibrary.\n   static void loadLibrary(final Class<?> fromClass, final String name, final boolean isAbsolute) {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'final' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "221",
                    "severity": "warning",
                    "message": "'final' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "322",
                    "severity": "warning",
                    "message": "'final' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/0/ClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/codebuff/0/ClassLoader.java\nindex 149b2c4f4d6..d8f2e483254 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/0/ClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/codebuff/0/ClassLoader.java\n@@ -1,7 +1,6 @@\n package java.lang;\n \n import com.google.gwt.core.client.JavaScriptObject;\n-\n import java.io.InputStream;\n import java.net.URL;\n import java.util.Objects;\n@@ -18,13 +17,19 @@ import java.util.Objects;\n  * @author \"James X. Nelson (james@wetheinter.net)\"\n  *\n  */\n+\n+\n public class ClassLoader {\n \n   // The parent class loader for delegation\n+\n+\n   private final ClassLoader parent;\n \n   // A JSO with all known classes;\n   // We access this value via reflection in ConstPool#extractClasses\n+\n+\n   private final JavaScriptObject classes = JavaScriptObject.createObject(); // NOPMD\n \n   /**\n@@ -32,6 +37,7 @@ public class ClassLoader {\n    *\n    * @param parent The parent class loader\n    */\n+\n   protected ClassLoader(final ClassLoader parent) {\n     this.parent = parent;\n   }\n@@ -40,6 +46,8 @@ public class ClassLoader {\n    * Creates a new class loader using the <tt>ClassLoader</tt> returned by the method\n    * {@link #getSystemClassLoader() <tt>getSystemClassLoader()</tt>} as the parent class loader.\n    */\n+\n+\n   protected ClassLoader() {\n     this(getSystemClassLoader());\n   }\n@@ -60,6 +68,8 @@ public class ClassLoader {\n    *\n    * @throws ClassNotFoundException If the class was not found\n    */\n+\n+\n   public Class<?> loadClass(final String name) throws ClassNotFoundException {\n     return this.loadClass(name, false);\n   }\n@@ -109,14 +119,16 @@ public class ClassLoader {\n    *\n    * @throws ClassNotFoundException If the class could not be found\n    */\n-  protected Class<?> loadClass(final String name, final boolean resolve)\n-      throws ClassNotFoundException {\n+\n+  protected Class<?> loadClass(final String name,\n+    final boolean resolve) throws ClassNotFoundException {\n     // First, check if the class has already been loaded\n     Class<?> clazz = null; // TODO: reimplement this goodness findLoadedClass(name);\n     if (clazz == null) {\n       try {\n         if (this.parent == null) {\n           // clazz = findBootstrapClassOrNull(name);\n+\n         } else {\n           clazz = this.parent.loadClass(name, false);\n         }\n@@ -137,6 +149,7 @@ public class ClassLoader {\n   }\n \n   // This method is invoked by the virtual machine to load a class.\n+\n   private Class<?> loadClassInternal(final String name) throws ClassNotFoundException {\n     return this.loadClass(name);\n   }\n@@ -157,6 +170,7 @@ public class ClassLoader {\n    *\n    * @since 1.2\n    */\n+\n   protected Class<?> findClass(final String name) throws ClassNotFoundException {\n     throw new ClassNotFoundException(name);\n   }\n@@ -166,7 +180,10 @@ public class ClassLoader {\n    * Our ClassLoader doesn't actually load anything; it just holds a jso mapping from class name to\n    * class object.\n    */\n-  public final native Class<?> defineClass(String name, Class<?> cls)\n+\n+\n+  public final native Class<?> defineClass(String name,\n+                                           Class<?> cls)\n   /*-{\n     this.@java.lang.ClassLoader::classes[name] = cls;\n     return cls;\n@@ -199,11 +216,16 @@ public class ClassLoader {\n   /**\n    * No-op for compatibility.\n    */\n-  protected final void setSigners(final Class<?> pclass, final Object[] signers) {\n+\n+  protected final void setSigners(final Class<?> pclass,\n+    final Object[] signers) {\n     // do nothing\n+\n   }\n \n   // -- Resource --\n+\n+\n   public URL getResource(final String name) {\n     // TODO return a magic url backed by an IO request\n     return null;\n@@ -213,6 +235,8 @@ public class ClassLoader {\n   /**\n    * Unsupported.\n    */\n+\n+\n   public InputStream getResourceAsStream(final String name) {\n     throw new UnsupportedOperationException();\n     // URL url = getResource(name);\n@@ -226,6 +250,8 @@ public class ClassLoader {\n   /**\n    * Unsupported.\n    */\n+\n+\n   public static InputStream getSystemResourceAsStream(final String name) {\n     throw new UnsupportedOperationException();\n     // URL url = getSystemResource(name);\n@@ -242,6 +268,8 @@ public class ClassLoader {\n    * implementations if this class loader's parent is the bootstrap class loader.\n    *\n    */\n+\n+\n   public final ClassLoader getParent() {\n     return this.parent;\n   }\n@@ -255,7 +283,8 @@ public class ClassLoader {\n    */\n   public static ClassLoader getSystemClassLoader() {\n     if (cl == null) { // NOPMD\n-      cl = new ClassLoader(null);\n+      cl = new ClassLoader(\n+        null);\n     }\n     return cl;\n   }\n@@ -263,6 +292,7 @@ public class ClassLoader {\n \n   // Returns true if the specified class loader can be found in this class\n   // loader's delegation chain.\n+\n   @SuppressWarnings(\"checkstyle:rightCurly\")\n   boolean isAncestor(final ClassLoader cl) {\n     ClassLoader acl = this;\n@@ -279,10 +309,17 @@ public class ClassLoader {\n   // NOTE: This must always be invoked when there is exactly one intervening\n   // frame from the core libraries on the stack between this method's\n   // invocation and the desired invoker.\n+\n+\n   static ClassLoader getCallerClassLoader() {\n     return getSystemClassLoader();\n   }\n \n   // Invoked in the java.lang.Runtime class to implement load and loadLibrary.\n-  static void loadLibrary(final Class<?> fromClass, final String name, final boolean isAbsolute) {}\n-}\n+\n+\n+  static void loadLibrary(final Class<?> fromClass, final String name,\n+    final boolean isAbsolute) {\n+\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "287",
                    "column": "99",
                    "severity": "warning",
                    "message": "'}' at column 99 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "287",
                    "column": "99",
                    "severity": "warning",
                    "message": "'}' at column 99 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1445",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1445/ConnectorDefaults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1445/ConnectorDefaults.java\nindex aea41eec165..78f3795a0a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1445/ConnectorDefaults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1445/ConnectorDefaults.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration.connectors;\n \n import java.util.Map;\n@@ -33,16 +34,16 @@ import static org.neo4j.configuration.SettingValueParsers.BOOL;\n  * WARNING! None of these fields should be accessed outside the classes mentioned above.\n  * Can be properly fixed in next major release (5.0) when the public API can be changed.\n  */\n-@Deprecated( forRemoval = true )\n+@Deprecated(forRemoval = true)\n public class ConnectorDefaults\n {\n-    static final Setting<Boolean> http_enabled = newBuilder( \"dbms.connector.http.enabled\", BOOL, false ).build();\n-    static final Setting<Boolean> https_enabled = newBuilder( \"dbms.connector.https.enabled\", BOOL, false ).build();\n-    static final Setting<Boolean> bolt_enabled = newBuilder( \"dbms.connector.bolt.enabled\", BOOL, false ).build();\n+    static final Setting<Boolean> http_enabled = newBuilder(\"dbms.connector.http.enabled\", BOOL, false).build();\n+    static final Setting<Boolean> https_enabled = newBuilder(\"dbms.connector.https.enabled\", BOOL, false).build();\n+    static final Setting<Boolean> bolt_enabled = newBuilder(\"dbms.connector.bolt.enabled\", BOOL, false).build();\n \n-    public static final Map<Setting<?>,Object> SERVER_CONNECTOR_DEFAULTS = Map.of(\n-            http_enabled, true,\n-            https_enabled, false,\n-            bolt_enabled, true\n+    public static final Map<Setting<?>, Object> SERVER_CONNECTOR_DEFAULTS = Map.of(\n+      http_enabled, true,\n+      https_enabled, false,\n+      bolt_enabled, true\n     );\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
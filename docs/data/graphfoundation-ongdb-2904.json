{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2904",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2904/CharSeekers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2904/CharSeekers.java\nindex ced4cff9bc4..f7d1f329e7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2904/CharSeekers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2904/CharSeekers.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.FileReader;\n@@ -29,58 +30,58 @@ import static org.neo4j.csv.reader.ThreadAheadReadable.threadAhead;\n  */\n public class CharSeekers\n {\n-    private CharSeekers()\n-    {\n-    }\n+  private CharSeekers()\n+  {\n+  }\n \n-    /**\n-     * Instantiates a {@link BufferedCharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n-     *\n-     * @param reader the {@link CharReadable} which is the source of data, f.ex. a {@link FileReader}.\n-     * @param config {@link Configuration} for the resulting {@link CharSeeker}.\n-     * @param readAhead whether or not to start a {@link ThreadAheadReadable read-ahead thread}\n-     * which strives towards always keeping one buffer worth of data read and available from I/O when it's\n-     * time for the {@link BufferedCharSeeker} to read more data.\n-     * @return a {@link CharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n-     */\n-    public static CharSeeker charSeeker( CharReadable reader, Configuration config, boolean readAhead )\n-    {\n-        if ( readAhead )\n-        {   // Thread that always has one buffer read ahead\n-            reader = threadAhead( reader, config.bufferSize() );\n-        }\n-\n-        // Give the reader to the char seeker\n-        return new BufferedCharSeeker( new AutoReadingSource( reader, config.bufferSize() ), config );\n+  /**\n+   * Instantiates a {@link BufferedCharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n+   *\n+   * @param reader    the {@link CharReadable} which is the source of data, f.ex. a {@link FileReader}.\n+   * @param config    {@link Configuration} for the resulting {@link CharSeeker}.\n+   * @param readAhead whether or not to start a {@link ThreadAheadReadable read-ahead thread}\n+   *                  which strives towards always keeping one buffer worth of data read and available from I/O when it's\n+   *                  time for the {@link BufferedCharSeeker} to read more data.\n+   * @return a {@link CharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n+   */\n+  public static CharSeeker charSeeker(CharReadable reader, Configuration config, boolean readAhead)\n+  {\n+    if (readAhead)\n+    {   // Thread that always has one buffer read ahead\n+      reader = threadAhead(reader, config.bufferSize());\n     }\n \n-    /**\n-     * Instantiates a {@link BufferedCharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n-     *\n-     * @param reader the {@link CharReadable} which is the source of data, f.ex. a {@link FileReader}.\n-     * @param bufferSize buffer size of the seeker and, if enabled, the read-ahead thread.\n-     * @param readAhead whether or not to start a {@link ThreadAheadReadable read-ahead thread}\n-     * which strives towards always keeping one buffer worth of data read and available from I/O when it's\n-     * time for the {@link BufferedCharSeeker} to read more data.\n-     * @param quotationCharacter character to interpret quotation character.\n-     * @return a {@link CharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n-     */\n-    public static CharSeeker charSeeker( CharReadable reader, final int bufferSize, boolean readAhead,\n-            final char quotationCharacter )\n+    // Give the reader to the char seeker\n+    return new BufferedCharSeeker(new AutoReadingSource(reader, config.bufferSize()), config);\n+  }\n+\n+  /**\n+   * Instantiates a {@link BufferedCharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n+   *\n+   * @param reader             the {@link CharReadable} which is the source of data, f.ex. a {@link FileReader}.\n+   * @param bufferSize         buffer size of the seeker and, if enabled, the read-ahead thread.\n+   * @param readAhead          whether or not to start a {@link ThreadAheadReadable read-ahead thread}\n+   *                           which strives towards always keeping one buffer worth of data read and available from I/O when it's\n+   *                           time for the {@link BufferedCharSeeker} to read more data.\n+   * @param quotationCharacter character to interpret quotation character.\n+   * @return a {@link CharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n+   */\n+  public static CharSeeker charSeeker(CharReadable reader, final int bufferSize, boolean readAhead,\n+                                      final char quotationCharacter)\n+  {\n+    return charSeeker(reader, new Configuration.Overridden(DEFAULT)\n     {\n-        return charSeeker( reader, new Configuration.Overridden( DEFAULT )\n-        {\n-            @Override\n-            public char quotationCharacter()\n-            {\n-                return quotationCharacter;\n-            }\n+      @Override\n+      public char quotationCharacter()\n+      {\n+        return quotationCharacter;\n+      }\n \n-            @Override\n-            public int bufferSize()\n-            {\n-                return bufferSize;\n-            }\n-        }, readAhead );\n-    }\n+      @Override\n+      public int bufferSize()\n+      {\n+        return bufferSize;\n+      }\n+    }, readAhead);\n+  }\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2904/CharSeekers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2904/CharSeekers.java\nindex ced4cff9bc4..831cb7fe71c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2904/CharSeekers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2904/CharSeekers.java\n@@ -46,7 +46,8 @@ public class CharSeekers\n     public static CharSeeker charSeeker( CharReadable reader, Configuration config, boolean readAhead )\n     {\n         if ( readAhead )\n-        {   // Thread that always has one buffer read ahead\n+        {\n+    // Thread that always has one buffer read ahead\n             reader = threadAhead( reader, config.bufferSize() );\n         }\n \n@@ -65,8 +66,7 @@ public class CharSeekers\n      * @param quotationCharacter character to interpret quotation character.\n      * @return a {@link CharSeeker} with optional {@link ThreadAheadReadable read-ahead} capability.\n      */\n-    public static CharSeeker charSeeker( CharReadable reader, final int bufferSize, boolean readAhead,\n-            final char quotationCharacter )\n+    public static CharSeeker charSeeker( CharReadable reader, final int bufferSize, boolean readAhead, final char quotationCharacter )\n     {\n         return charSeeker( reader, new Configuration.Overridden( DEFAULT )\n         {\n@@ -83,4 +83,4 @@ public class CharSeekers\n             }\n         }, readAhead );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
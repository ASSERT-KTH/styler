{
    "project_name": "graphfoundation-ongdb",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/26/TxPullResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/26/TxPullResponse.java\nindex c3766b5c262..10560e47046 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/26/TxPullResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/26/TxPullResponse.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.tx;\n \n import org.neo4j.causalclustering.identity.StoreId;\n@@ -24,54 +25,54 @@ import org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation;\n \n public class TxPullResponse\n {\n-    private final StoreId storeId;\n-    private final CommittedTransactionRepresentation tx;\n+  private final StoreId storeId;\n+  private final CommittedTransactionRepresentation tx;\n \n-    public TxPullResponse( StoreId storeId, CommittedTransactionRepresentation tx )\n-    {\n-        this.storeId = storeId;\n-        this.tx = tx;\n-    }\n+  public TxPullResponse(StoreId storeId, CommittedTransactionRepresentation tx)\n+  {\n+    this.storeId = storeId;\n+    this.tx = tx;\n+  }\n \n-    public StoreId storeId()\n-    {\n-        return storeId;\n-    }\n+  public StoreId storeId()\n+  {\n+    return storeId;\n+  }\n+\n+  public CommittedTransactionRepresentation tx()\n+  {\n+    return tx;\n+  }\n \n-    public CommittedTransactionRepresentation tx()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return tx;\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        TxPullResponse that = (TxPullResponse) o;\n+    TxPullResponse that = (TxPullResponse) o;\n \n-        return (storeId != null ? storeId.equals( that.storeId ) : that.storeId == null) &&\n-                (tx != null ? tx.equals( that.tx ) : that.tx == null);\n-    }\n+    return (storeId != null ? storeId.equals(that.storeId) : that.storeId == null) &&\n+        (tx != null ? tx.equals(that.tx) : that.tx == null);\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        int result = storeId != null ? storeId.hashCode() : 0;\n-        result = 31 * result + (tx != null ? tx.hashCode() : 0);\n-        return result;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = storeId != null ? storeId.hashCode() : 0;\n+    result = 31 * result + (tx != null ? tx.hashCode() : 0);\n+    return result;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"TxPullResponse{storeId=%s, tx=%s}\", storeId, tx );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"TxPullResponse{storeId=%s, tx=%s}\", storeId, tx);\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/26/TxPullResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/26/TxPullResponse.java\nindex c3766b5c262..2a5b2ffaa50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/26/TxPullResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/26/TxPullResponse.java\n@@ -50,22 +50,22 @@ public class TxPullResponse\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         TxPullResponse that = (TxPullResponse) o;\n \n-        return (storeId != null ? storeId.equals( that.storeId ) : that.storeId == null) &&\n-                (tx != null ? tx.equals( that.tx ) : that.tx == null);\n+        return (storeId != null ? storeId.equals( that.storeId ) : that.storeId == null ) && ( tx != null ? tx.equals( that.tx ) : that.tx == null );\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = storeId != null ? storeId.hashCode() : 0;\n-        result = 31 * result + (tx != null ? tx.hashCode() : 0);\n+        result = 31 * result + (tx != null ? tx.hashCode() : 0 );\n         return result;\n     }\n \n@@ -74,4 +74,4 @@ public class TxPullResponse\n     {\n         return String.format( \"TxPullResponse{storeId=%s, tx=%s}\", storeId, tx );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
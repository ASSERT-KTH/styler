{
    "project_name": "graphfoundation-ongdb",
    "error_id": "222",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "394",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/222/CompositePageCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/222/CompositePageCursor.java\nindex be129ada9c3..4072c73342d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/222/CompositePageCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/222/CompositePageCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl;\n \n import java.io.File;\n@@ -28,527 +29,529 @@ import org.neo4j.io.pagecache.PageCursor;\n \n /**\n  * A CompositePageCursor is a seamless view over parts of two other PageCursors.\n+ *\n  * @see #compose(PageCursor, int, PageCursor, int)\n  */\n public class CompositePageCursor extends PageCursor\n {\n-    private final PageCursor first;\n-    private final int firstBaseOffset;\n-    private final int firstLength;\n-    private final PageCursor second;\n-    private final int secondBaseOffset;\n-    private final int secondLength;\n-    private int offset;\n-    private PageCursor byteAccessCursor;\n-    private boolean outOfBounds;\n-\n-    // Constructed with static factory methods.\n-    private CompositePageCursor(\n-            PageCursor first, int firstBaseOffset, int firstLength,\n-            PageCursor second, int secondBaseOffset, int secondLength )\n-    {\n-        this.first = first;\n-        this.firstBaseOffset = firstBaseOffset;\n-        this.firstLength = firstLength;\n-        this.second = second;\n-        this.secondBaseOffset = secondBaseOffset;\n-        this.secondLength = secondLength;\n-        byteAccessCursor = new DelegatingPageCursor( this )\n-        {\n-            private int offset;\n-            @Override\n-            public int getInt()\n-            {\n-                int a = getByte( offset ) & 0xFF;\n-                int b = getByte( offset + 1 ) & 0xFF;\n-                int c = getByte( offset + 2 ) & 0xFF;\n-                int d = getByte( offset + 3 ) & 0xFF;\n-                int v = (a << 24) | (b << 16) | (c << 8) | d;\n-                return v;\n-            }\n-\n-            @Override\n-            public int getInt( int offset )\n-            {\n-                this.offset = offset;\n-                return getInt();\n-            }\n-\n-            @Override\n-            public short getShort()\n-            {\n-                int a = getByte( offset ) & 0xFF;\n-                int b = getByte( offset + 1 ) & 0xFF;\n-                int v = (a << 8) | b;\n-                return (short) v;\n-            }\n-\n-            @Override\n-            public short getShort( int offset )\n-            {\n-                this.offset = offset;\n-                return getShort();\n-            }\n-\n-            @Override\n-            public long getLong()\n-            {\n-                long a = getByte( offset ) & 0xFF;\n-                long b = getByte( offset + 1 ) & 0xFF;\n-                long c = getByte( offset + 2 ) & 0xFF;\n-                long d = getByte( offset + 3 ) & 0xFF;\n-                long e = getByte( offset + 4 ) & 0xFF;\n-                long f = getByte( offset + 5 ) & 0xFF;\n-                long g = getByte( offset + 6 ) & 0xFF;\n-                long h = getByte( offset + 7 ) & 0xFF;\n-                long v = (a << 56) | (b << 48) | (c << 40) | (d << 32) | (e << 24) | (f << 16) | (g << 8) | h;\n-                return v;\n-            }\n-\n-            @Override\n-            public long getLong( int offset )\n-            {\n-                this.offset = offset;\n-                return getLong();\n-            }\n-\n-            @Override\n-            public void getBytes( byte[] data )\n-            {\n-                for ( int i = 0; i < data.length; i++ )\n-                {\n-                    data[i] = getByte( offset + i );\n-                }\n-            }\n-\n-            @Override\n-            public void putInt( int value )\n-            {\n-                putByte( offset    , (byte)  (value >> 24) );\n-                putByte( offset + 1, (byte) ((value >> 16) & 0xFF) );\n-                putByte( offset + 2, (byte) ((value >>  8) & 0xFF) );\n-                putByte( offset + 3, (byte) (value & 0xFF) );\n-            }\n-\n-            @Override\n-            public void putInt( int offset, int value )\n-            {\n-                this.offset = offset;\n-                putInt( value );\n-            }\n-\n-            @Override\n-            public void putShort( short value )\n-            {\n-                putByte( offset    , (byte)  (value >>  8) );\n-                putByte( offset + 1, (byte) (value & 0xFF) );\n-            }\n-\n-            @Override\n-            public void putShort( int offset, short value )\n-            {\n-                this.offset = offset;\n-                putShort( value );\n-            }\n-\n-            @Override\n-            public void putLong( long value )\n-            {\n-                putByte( offset    , (byte)  (value >> 56) );\n-                putByte( offset + 1, (byte) ((value >> 48) & 0xFF) );\n-                putByte( offset + 2, (byte) ((value >> 40) & 0xFF) );\n-                putByte( offset + 3, (byte) ((value >> 32) & 0xFF) );\n-                putByte( offset + 4, (byte) ((value >> 24) & 0xFF) );\n-                putByte( offset + 5, (byte) ((value >> 16) & 0xFF) );\n-                putByte( offset + 6, (byte) ((value >>  8) & 0xFF) );\n-                putByte( offset + 7, (byte) (value & 0xFF) );\n-            }\n-\n-            @Override\n-            public void putLong( int offset, long value )\n-            {\n-                this.offset = offset;\n-                putLong( value );\n-            }\n-\n-            @Override\n-            public void putBytes( byte[] data )\n-            {\n-                for ( int i = 0; i < data.length; i++ )\n-                {\n-                    putByte( offset + i, data[i] );\n-                }\n-            }\n-\n-            @Override\n-            public void setOffset( int offset )\n-            {\n-                this.offset = offset;\n-            }\n-        };\n-    }\n-\n-    private PageCursor cursor( int width )\n-    {\n-        return cursor( offset, width );\n-    }\n-\n-    private PageCursor cursor( int offset, int width )\n-    {\n-        outOfBounds |= offset + width > firstLength + secondLength;\n-        if ( offset < firstLength )\n-        {\n-            return offset + width <= firstLength ? first : byteCursor( offset );\n-        }\n-        return second;\n-\n-    }\n-\n-    private PageCursor byteCursor( int offset )\n-    {\n-        byteAccessCursor.setOffset( offset );\n-        return byteAccessCursor;\n-    }\n-\n-    private int relative( int offset )\n-    {\n-        return offset < firstLength ? firstBaseOffset + offset : secondBaseOffset + (offset - firstLength);\n-    }\n-\n-    @Override\n-    public byte getByte()\n-    {\n-        PageCursor cursor = cursor( Byte.BYTES );\n-        byte b = cursor.getByte();\n-        offset++;\n-        return b;\n-    }\n-\n-    @Override\n-    public byte getByte( int offset )\n-    {\n-        return cursor( offset, Byte.BYTES ).getByte( relative( offset ) );\n-    }\n-\n-    @Override\n-    public void putByte( byte value )\n-    {\n-        PageCursor cursor = cursor( Byte.BYTES );\n-        cursor.putByte( value );\n-        offset++;\n-    }\n-\n-    @Override\n-    public void putByte( int offset, byte value )\n-    {\n-        cursor( offset, Byte.BYTES ).putByte( relative( offset ), value );\n-    }\n-\n-    @Override\n-    public long getLong()\n-    {\n-        long l = cursor( Long.BYTES ).getLong();\n-        offset += Long.BYTES;\n-        return l;\n-    }\n-\n-    @Override\n-    public long getLong( int offset )\n-    {\n-        return cursor( offset, Long.BYTES ).getLong( relative( offset ) );\n-    }\n-\n-    @Override\n-    public void putLong( long value )\n-    {\n-        cursor( Long.BYTES ).putLong( value );\n-        offset += Long.BYTES;\n-    }\n-\n-    @Override\n-    public void putLong( int offset, long value )\n-    {\n-        cursor( offset, Long.BYTES ).putLong( relative( offset ), value );\n-    }\n-\n-    @Override\n-    public int getInt()\n-    {\n-        int i = cursor( Integer.BYTES ).getInt();\n-        offset += Integer.BYTES;\n-        return i;\n-    }\n-\n-    @Override\n-    public int getInt( int offset )\n-    {\n-        return cursor( offset, Integer.BYTES ).getInt( relative( offset ) );\n-    }\n-\n-    @Override\n-    public void putInt( int value )\n-    {\n-        PageCursor cursor = cursor( Integer.BYTES );\n-        cursor.putInt( value );\n-        offset += Integer.BYTES;\n-    }\n-\n-    @Override\n-    public void putInt( int offset, int value )\n-    {\n-        cursor( offset, Integer.BYTES ).putInt( relative( offset ), value );\n-    }\n-\n-    @Override\n-    public void getBytes( byte[] data )\n-    {\n-        cursor( data.length ).getBytes( data );\n-        offset += data.length;\n-    }\n-\n-    @Override\n-    public void getBytes( byte[] data, int arrayOffset, int length )\n-    {\n-        throw new UnsupportedOperationException( \"Composite page cursor does not yet support this operation\" );\n-    }\n-\n-    @Override\n-    public void putBytes( byte[] data )\n-    {\n-        cursor( data.length ).putBytes( data );\n-        offset += data.length;\n-    }\n-\n-    @Override\n-    public void putBytes( byte[] data, int arrayOffset, int length )\n-    {\n-        throw new UnsupportedOperationException( \"Composite page cursor does not yet support this operation\" );\n-    }\n-\n-    @Override\n-    public void putBytes( int bytes, byte value )\n-    {\n-        throw new UnsupportedOperationException( \"Composite page cursor does not yet support this operation\" );\n-    }\n-\n-    @Override\n-    public short getShort()\n-    {\n-        short s = cursor( Short.BYTES ).getShort();\n-        offset += Short.BYTES;\n-        return s;\n-    }\n-\n-    @Override\n-    public short getShort( int offset )\n-    {\n-        return cursor( offset, Short.BYTES ).getShort( relative( offset ) );\n-    }\n-\n-    @Override\n-    public void putShort( short value )\n-    {\n-        cursor( Short.BYTES ).putShort( value );\n-        offset += Short.BYTES;\n-    }\n-\n-    @Override\n-    public void putShort( int offset, short value )\n-    {\n-        cursor( offset, Short.BYTES ).putShort( relative( offset ), value );\n-    }\n+  private final PageCursor first;\n+  private final int firstBaseOffset;\n+  private final int firstLength;\n+  private final PageCursor second;\n+  private final int secondBaseOffset;\n+  private final int secondLength;\n+  private int offset;\n+  private PageCursor byteAccessCursor;\n+  private boolean outOfBounds;\n+\n+  // Constructed with static factory methods.\n+  private CompositePageCursor(\n+      PageCursor first, int firstBaseOffset, int firstLength,\n+      PageCursor second, int secondBaseOffset, int secondLength)\n+  {\n+    this.first = first;\n+    this.firstBaseOffset = firstBaseOffset;\n+    this.firstLength = firstLength;\n+    this.second = second;\n+    this.secondBaseOffset = secondBaseOffset;\n+    this.secondLength = secondLength;\n+    byteAccessCursor = new DelegatingPageCursor(this)\n+    {\n+      private int offset;\n+\n+      @Override\n+      public int getInt()\n+      {\n+        int a = getByte(offset) & 0xFF;\n+        int b = getByte(offset + 1) & 0xFF;\n+        int c = getByte(offset + 2) & 0xFF;\n+        int d = getByte(offset + 3) & 0xFF;\n+        int v = (a << 24) | (b << 16) | (c << 8) | d;\n+        return v;\n+      }\n+\n+      @Override\n+      public int getInt(int offset)\n+      {\n+        this.offset = offset;\n+        return getInt();\n+      }\n+\n+      @Override\n+      public short getShort()\n+      {\n+        int a = getByte(offset) & 0xFF;\n+        int b = getByte(offset + 1) & 0xFF;\n+        int v = (a << 8) | b;\n+        return (short) v;\n+      }\n+\n+      @Override\n+      public short getShort(int offset)\n+      {\n+        this.offset = offset;\n+        return getShort();\n+      }\n+\n+      @Override\n+      public long getLong()\n+      {\n+        long a = getByte(offset) & 0xFF;\n+        long b = getByte(offset + 1) & 0xFF;\n+        long c = getByte(offset + 2) & 0xFF;\n+        long d = getByte(offset + 3) & 0xFF;\n+        long e = getByte(offset + 4) & 0xFF;\n+        long f = getByte(offset + 5) & 0xFF;\n+        long g = getByte(offset + 6) & 0xFF;\n+        long h = getByte(offset + 7) & 0xFF;\n+        long v = (a << 56) | (b << 48) | (c << 40) | (d << 32) | (e << 24) | (f << 16) | (g << 8) | h;\n+        return v;\n+      }\n+\n+      @Override\n+      public long getLong(int offset)\n+      {\n+        this.offset = offset;\n+        return getLong();\n+      }\n \n-    @Override\n-    public void setOffset( int offset )\n-    {\n-        if ( offset < firstLength )\n-        {\n-            first.setOffset( firstBaseOffset + offset );\n-            second.setOffset( secondBaseOffset );\n-        }\n-        else\n+      @Override\n+      public void getBytes(byte[] data)\n+      {\n+        for (int i = 0; i < data.length; i++)\n         {\n-            first.setOffset( firstBaseOffset + firstLength );\n-            second.setOffset( secondBaseOffset + (offset - firstLength) );\n+          data[i] = getByte(offset + i);\n         }\n+      }\n+\n+      @Override\n+      public void putInt(int value)\n+      {\n+        putByte(offset, (byte) (value >> 24));\n+        putByte(offset + 1, (byte) ((value >> 16) & 0xFF));\n+        putByte(offset + 2, (byte) ((value >> 8) & 0xFF));\n+        putByte(offset + 3, (byte) (value & 0xFF));\n+      }\n+\n+      @Override\n+      public void putInt(int offset, int value)\n+      {\n         this.offset = offset;\n-    }\n-\n-    @Override\n-    public int getOffset()\n-    {\n-        return offset;\n-    }\n-\n-    @Override\n-    public long getCurrentPageId()\n-    {\n-        return cursor( 0 ).getCurrentPageId();\n-    }\n-\n-    @Override\n-    public int getCurrentPageSize()\n-    {\n-        throw new UnsupportedOperationException( \"Getting current page size is not supported on compose PageCursor\" );\n-    }\n-\n-    @Override\n-    public File getCurrentFile()\n-    {\n-        return null;\n-    }\n-\n-    @Override\n-    public void rewind()\n-    {\n-        first.setOffset( firstBaseOffset );\n-        second.setOffset( secondBaseOffset );\n-        offset = 0;\n-    }\n-\n-    @Override\n-    public boolean next()\n-    {\n-        throw unsupportedNext();\n-    }\n-\n-    private UnsupportedOperationException unsupportedNext()\n-    {\n-        return new UnsupportedOperationException(\n-                \"Composite cursor does not support next operation. Please operate directly on underlying cursors.\" );\n-    }\n-\n-    @Override\n-    public boolean next( long pageId )\n-    {\n-        throw unsupportedNext();\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        first.close();\n-        second.close();\n-    }\n+        putInt(value);\n+      }\n+\n+      @Override\n+      public void putShort(short value)\n+      {\n+        putByte(offset, (byte) (value >> 8));\n+        putByte(offset + 1, (byte) (value & 0xFF));\n+      }\n+\n+      @Override\n+      public void putShort(int offset, short value)\n+      {\n+        this.offset = offset;\n+        putShort(value);\n+      }\n+\n+      @Override\n+      public void putLong(long value)\n+      {\n+        putByte(offset, (byte) (value >> 56));\n+        putByte(offset + 1, (byte) ((value >> 48) & 0xFF));\n+        putByte(offset + 2, (byte) ((value >> 40) & 0xFF));\n+        putByte(offset + 3, (byte) ((value >> 32) & 0xFF));\n+        putByte(offset + 4, (byte) ((value >> 24) & 0xFF));\n+        putByte(offset + 5, (byte) ((value >> 16) & 0xFF));\n+        putByte(offset + 6, (byte) ((value >> 8) & 0xFF));\n+        putByte(offset + 7, (byte) (value & 0xFF));\n+      }\n+\n+      @Override\n+      public void putLong(int offset, long value)\n+      {\n+        this.offset = offset;\n+        putLong(value);\n+      }\n \n-    @Override\n-    public boolean shouldRetry() throws IOException\n-    {\n-        boolean needsRetry = first.shouldRetry() | second.shouldRetry();\n-        if ( needsRetry )\n+      @Override\n+      public void putBytes(byte[] data)\n+      {\n+        for (int i = 0; i < data.length; i++)\n         {\n-            rewind();\n-            checkAndClearBoundsFlag();\n+          putByte(offset + i, data[i]);\n         }\n-        return needsRetry;\n-    }\n-\n-    @Override\n-    public int copyTo( int sourceOffset, PageCursor targetCursor, int targetOffset, int lengthInBytes )\n-    {\n-        throw new UnsupportedOperationException( \"Composite cursor does not support copyTo functionality.\" );\n-    }\n-\n-    @Override\n-    public int copyTo( int sourceOffset, ByteBuffer targetBuffer )\n-    {\n-        throw new UnsupportedOperationException( \"Composite cursor does not support copyTo functionality.\" );\n-    }\n-\n-    @Override\n-    public void shiftBytes( int sourceOffset, int length, int shift )\n-    {\n-        throw new UnsupportedOperationException( \"Composite cursor does not support shiftBytes functionality... yet.\" );\n-    }\n-\n-    @Override\n-    public boolean checkAndClearBoundsFlag()\n-    {\n-        boolean bounds = outOfBounds | first.checkAndClearBoundsFlag() | second.checkAndClearBoundsFlag();\n-        outOfBounds = false;\n-        return bounds;\n-    }\n+      }\n \n-    @Override\n-    public void checkAndClearCursorException() throws CursorException\n-    {\n-        first.checkAndClearCursorException();\n-        second.checkAndClearCursorException();\n-    }\n-\n-    @Override\n-    public void raiseOutOfBounds()\n-    {\n-        outOfBounds = true;\n-    }\n-\n-    @Override\n-    public void setCursorException( String message )\n-    {\n-        cursor( 0 ).setCursorException( message );\n-    }\n-\n-    @Override\n-    public void clearCursorException()\n-    {\n-        first.clearCursorException();\n-        second.clearCursorException();\n-    }\n-\n-    @Override\n-    public PageCursor openLinkedCursor( long pageId )\n-    {\n-        throw new UnsupportedOperationException( \"Linked cursors are not supported for composite cursors\" );\n-    }\n-\n-    @Override\n-    public void zapPage()\n-    {\n-        first.zapPage();\n-        second.zapPage();\n-    }\n-\n-    @Override\n-    public boolean isWriteLocked()\n-    {\n-        return first.isWriteLocked() && second.isWriteLocked();\n-    }\n-\n-    /**\n-     * Build a CompositePageCursor that is a view of the first page cursor from its current offset through the given\n-     * length, concatenated with the second cursor from its current offset through the given length. The offsets are\n-     * changed as part of accessing the underlying cursors through the composite cursor. However, the size and position\n-     * of the view does NOT change if the offsets of the underlying cursors are changed after constructing the composite\n-     * cursor.\n-     * <p>\n-     * Not all cursor operations are supported on composite cursors, notably {@link #next()} and {@link #next(long)} are\n-     * not supported.\n-     * Most things work as you would expect, though. For instance, {@link #shouldRetry()} will delegate the check to\n-     * both of the underlying cursors, as will {@link #checkAndClearBoundsFlag()}.\n-     * <p>\n-     * The composite cursor also has its own bounds flag built in, which will be raised if an access is made outside of\n-     * the composite view.\n-     *\n-     * <pre>\n-     *     offset      first length            offset     second length\n-     *        \u2502              \u2502                    \u2502              \u2502\n-     * \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n-     * \u2502         first cursor         \u2502   \u2502        second cursor         \u2502\n-     * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-     *        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-     *                   \u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\n-     *                   \u2502       composite cursor       \u2502\n-     *                   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-     *             offset = 0, page size = first length + second length\n-     * </pre>\n-     * @param first The cursor that will form the first part of this composite cursor, from its current offset.\n-     * @param firstLength The number of bytes from the first cursor that will participate in the composite view.\n-     * @param second The cursor that will form the second part of this composite cursor, from its current offset.\n-     * @param secondLength The number of bytes from the second cursor that will participate in the composite view.\n-     * @return A cursor that is a composed view of the given parts of the two given cursors.\n-     */\n-    public static PageCursor compose( PageCursor first, int firstLength, PageCursor second, int secondLength )\n-    {\n-        return new CompositePageCursor( first, first.getOffset(), firstLength, second, second.getOffset(), secondLength );\n-    }\n+      @Override\n+      public void setOffset(int offset)\n+      {\n+        this.offset = offset;\n+      }\n+    };\n+  }\n+\n+  private PageCursor cursor(int width)\n+  {\n+    return cursor(offset, width);\n+  }\n+\n+  private PageCursor cursor(int offset, int width)\n+  {\n+    outOfBounds |= offset + width > firstLength + secondLength;\n+    if (offset < firstLength)\n+    {\n+      return offset + width <= firstLength ? first : byteCursor(offset);\n+    }\n+    return second;\n+\n+  }\n+\n+  private PageCursor byteCursor(int offset)\n+  {\n+    byteAccessCursor.setOffset(offset);\n+    return byteAccessCursor;\n+  }\n+\n+  private int relative(int offset)\n+  {\n+    return offset < firstLength ? firstBaseOffset + offset : secondBaseOffset + (offset - firstLength);\n+  }\n+\n+  @Override\n+  public byte getByte()\n+  {\n+    PageCursor cursor = cursor(Byte.BYTES);\n+    byte b = cursor.getByte();\n+    offset++;\n+    return b;\n+  }\n+\n+  @Override\n+  public byte getByte(int offset)\n+  {\n+    return cursor(offset, Byte.BYTES).getByte(relative(offset));\n+  }\n+\n+  @Override\n+  public void putByte(byte value)\n+  {\n+    PageCursor cursor = cursor(Byte.BYTES);\n+    cursor.putByte(value);\n+    offset++;\n+  }\n+\n+  @Override\n+  public void putByte(int offset, byte value)\n+  {\n+    cursor(offset, Byte.BYTES).putByte(relative(offset), value);\n+  }\n+\n+  @Override\n+  public long getLong()\n+  {\n+    long l = cursor(Long.BYTES).getLong();\n+    offset += Long.BYTES;\n+    return l;\n+  }\n+\n+  @Override\n+  public long getLong(int offset)\n+  {\n+    return cursor(offset, Long.BYTES).getLong(relative(offset));\n+  }\n+\n+  @Override\n+  public void putLong(long value)\n+  {\n+    cursor(Long.BYTES).putLong(value);\n+    offset += Long.BYTES;\n+  }\n+\n+  @Override\n+  public void putLong(int offset, long value)\n+  {\n+    cursor(offset, Long.BYTES).putLong(relative(offset), value);\n+  }\n+\n+  @Override\n+  public int getInt()\n+  {\n+    int i = cursor(Integer.BYTES).getInt();\n+    offset += Integer.BYTES;\n+    return i;\n+  }\n+\n+  @Override\n+  public int getInt(int offset)\n+  {\n+    return cursor(offset, Integer.BYTES).getInt(relative(offset));\n+  }\n+\n+  @Override\n+  public void putInt(int value)\n+  {\n+    PageCursor cursor = cursor(Integer.BYTES);\n+    cursor.putInt(value);\n+    offset += Integer.BYTES;\n+  }\n+\n+  @Override\n+  public void putInt(int offset, int value)\n+  {\n+    cursor(offset, Integer.BYTES).putInt(relative(offset), value);\n+  }\n+\n+  @Override\n+  public void getBytes(byte[] data)\n+  {\n+    cursor(data.length).getBytes(data);\n+    offset += data.length;\n+  }\n+\n+  @Override\n+  public void getBytes(byte[] data, int arrayOffset, int length)\n+  {\n+    throw new UnsupportedOperationException(\"Composite page cursor does not yet support this operation\");\n+  }\n+\n+  @Override\n+  public void putBytes(byte[] data)\n+  {\n+    cursor(data.length).putBytes(data);\n+    offset += data.length;\n+  }\n+\n+  @Override\n+  public void putBytes(byte[] data, int arrayOffset, int length)\n+  {\n+    throw new UnsupportedOperationException(\"Composite page cursor does not yet support this operation\");\n+  }\n+\n+  @Override\n+  public void putBytes(int bytes, byte value)\n+  {\n+    throw new UnsupportedOperationException(\"Composite page cursor does not yet support this operation\");\n+  }\n+\n+  @Override\n+  public short getShort()\n+  {\n+    short s = cursor(Short.BYTES).getShort();\n+    offset += Short.BYTES;\n+    return s;\n+  }\n+\n+  @Override\n+  public short getShort(int offset)\n+  {\n+    return cursor(offset, Short.BYTES).getShort(relative(offset));\n+  }\n+\n+  @Override\n+  public void putShort(short value)\n+  {\n+    cursor(Short.BYTES).putShort(value);\n+    offset += Short.BYTES;\n+  }\n+\n+  @Override\n+  public void putShort(int offset, short value)\n+  {\n+    cursor(offset, Short.BYTES).putShort(relative(offset), value);\n+  }\n+\n+  @Override\n+  public void setOffset(int offset)\n+  {\n+    if (offset < firstLength)\n+    {\n+      first.setOffset(firstBaseOffset + offset);\n+      second.setOffset(secondBaseOffset);\n+    } else\n+    {\n+      first.setOffset(firstBaseOffset + firstLength);\n+      second.setOffset(secondBaseOffset + (offset - firstLength));\n+    }\n+    this.offset = offset;\n+  }\n+\n+  @Override\n+  public int getOffset()\n+  {\n+    return offset;\n+  }\n+\n+  @Override\n+  public long getCurrentPageId()\n+  {\n+    return cursor(0).getCurrentPageId();\n+  }\n+\n+  @Override\n+  public int getCurrentPageSize()\n+  {\n+    throw new UnsupportedOperationException(\"Getting current page size is not supported on compose PageCursor\");\n+  }\n+\n+  @Override\n+  public File getCurrentFile()\n+  {\n+    return null;\n+  }\n+\n+  @Override\n+  public void rewind()\n+  {\n+    first.setOffset(firstBaseOffset);\n+    second.setOffset(secondBaseOffset);\n+    offset = 0;\n+  }\n+\n+  @Override\n+  public boolean next()\n+  {\n+    throw unsupportedNext();\n+  }\n+\n+  private UnsupportedOperationException unsupportedNext()\n+  {\n+    return new UnsupportedOperationException(\n+        \"Composite cursor does not support next operation. Please operate directly on underlying cursors.\");\n+  }\n+\n+  @Override\n+  public boolean next(long pageId)\n+  {\n+    throw unsupportedNext();\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    first.close();\n+    second.close();\n+  }\n+\n+  @Override\n+  public boolean shouldRetry() throws IOException\n+  {\n+    boolean needsRetry = first.shouldRetry() | second.shouldRetry();\n+    if (needsRetry)\n+    {\n+      rewind();\n+      checkAndClearBoundsFlag();\n+    }\n+    return needsRetry;\n+  }\n+\n+  @Override\n+  public int copyTo(int sourceOffset, PageCursor targetCursor, int targetOffset, int lengthInBytes)\n+  {\n+    throw new UnsupportedOperationException(\"Composite cursor does not support copyTo functionality.\");\n+  }\n+\n+  @Override\n+  public int copyTo(int sourceOffset, ByteBuffer targetBuffer)\n+  {\n+    throw new UnsupportedOperationException(\"Composite cursor does not support copyTo functionality.\");\n+  }\n+\n+  @Override\n+  public void shiftBytes(int sourceOffset, int length, int shift)\n+  {\n+    throw new UnsupportedOperationException(\"Composite cursor does not support shiftBytes functionality... yet.\");\n+  }\n+\n+  @Override\n+  public boolean checkAndClearBoundsFlag()\n+  {\n+    boolean bounds = outOfBounds | first.checkAndClearBoundsFlag() | second.checkAndClearBoundsFlag();\n+    outOfBounds = false;\n+    return bounds;\n+  }\n+\n+  @Override\n+  public void checkAndClearCursorException() throws CursorException\n+  {\n+    first.checkAndClearCursorException();\n+    second.checkAndClearCursorException();\n+  }\n+\n+  @Override\n+  public void raiseOutOfBounds()\n+  {\n+    outOfBounds = true;\n+  }\n+\n+  @Override\n+  public void setCursorException(String message)\n+  {\n+    cursor(0).setCursorException(message);\n+  }\n+\n+  @Override\n+  public void clearCursorException()\n+  {\n+    first.clearCursorException();\n+    second.clearCursorException();\n+  }\n+\n+  @Override\n+  public PageCursor openLinkedCursor(long pageId)\n+  {\n+    throw new UnsupportedOperationException(\"Linked cursors are not supported for composite cursors\");\n+  }\n+\n+  @Override\n+  public void zapPage()\n+  {\n+    first.zapPage();\n+    second.zapPage();\n+  }\n+\n+  @Override\n+  public boolean isWriteLocked()\n+  {\n+    return first.isWriteLocked() && second.isWriteLocked();\n+  }\n+\n+  /**\n+   * Build a CompositePageCursor that is a view of the first page cursor from its current offset through the given\n+   * length, concatenated with the second cursor from its current offset through the given length. The offsets are\n+   * changed as part of accessing the underlying cursors through the composite cursor. However, the size and position\n+   * of the view does NOT change if the offsets of the underlying cursors are changed after constructing the composite\n+   * cursor.\n+   * <p>\n+   * Not all cursor operations are supported on composite cursors, notably {@link #next()} and {@link #next(long)} are\n+   * not supported.\n+   * Most things work as you would expect, though. For instance, {@link #shouldRetry()} will delegate the check to\n+   * both of the underlying cursors, as will {@link #checkAndClearBoundsFlag()}.\n+   * <p>\n+   * The composite cursor also has its own bounds flag built in, which will be raised if an access is made outside of\n+   * the composite view.\n+   *\n+   * <pre>\n+   *     offset      first length            offset     second length\n+   *        \u2502              \u2502                    \u2502              \u2502\n+   * \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n+   * \u2502         first cursor         \u2502   \u2502        second cursor         \u2502\n+   * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+   *        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+   *                   \u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\n+   *                   \u2502       composite cursor       \u2502\n+   *                   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+   *             offset = 0, page size = first length + second length\n+   * </pre>\n+   *\n+   * @param first        The cursor that will form the first part of this composite cursor, from its current offset.\n+   * @param firstLength  The number of bytes from the first cursor that will participate in the composite view.\n+   * @param second       The cursor that will form the second part of this composite cursor, from its current offset.\n+   * @param secondLength The number of bytes from the second cursor that will participate in the composite view.\n+   * @return A cursor that is a composed view of the given parts of the two given cursors.\n+   */\n+  public static PageCursor compose(PageCursor first, int firstLength, PageCursor second, int secondLength)\n+  {\n+    return new CompositePageCursor(first, first.getOffset(), firstLength, second, second.getOffset(), secondLength);\n+  }\n }\n",
            "diff_size": 816
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "201",
                    "column": "38",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/222/CompositePageCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/222/CompositePageCursor.java\nindex be129ada9c3..49b293315b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/222/CompositePageCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/222/CompositePageCursor.java\n@@ -43,8 +43,7 @@ public class CompositePageCursor extends PageCursor\n     private boolean outOfBounds;\n \n     // Constructed with static factory methods.\n-    private CompositePageCursor(\n-            PageCursor first, int firstBaseOffset, int firstLength,\n+    private CompositePageCursor( PageCursor first, int firstBaseOffset, int firstLength,\n             PageCursor second, int secondBaseOffset, int secondLength )\n     {\n         this.first = first;\n@@ -56,14 +55,15 @@ public class CompositePageCursor extends PageCursor\n         byteAccessCursor = new DelegatingPageCursor( this )\n         {\n             private int offset;\n-            @Override\n+\n+@Override\n             public int getInt()\n             {\n                 int a = getByte( offset ) & 0xFF;\n                 int b = getByte( offset + 1 ) & 0xFF;\n                 int c = getByte( offset + 2 ) & 0xFF;\n                 int d = getByte( offset + 3 ) & 0xFF;\n-                int v = (a << 24) | (b << 16) | (c << 8) | d;\n+                int v = (a << 24) | ( b << 16) | ( c << 8) | d;\n                 return v;\n             }\n \n@@ -101,7 +101,7 @@ public class CompositePageCursor extends PageCursor\n                 long f = getByte( offset + 5 ) & 0xFF;\n                 long g = getByte( offset + 6 ) & 0xFF;\n                 long h = getByte( offset + 7 ) & 0xFF;\n-                long v = (a << 56) | (b << 48) | (c << 40) | (d << 32) | (e << 24) | (f << 16) | (g << 8) | h;\n+                long v = (a << 56) | ( b << 48) | ( c << 40) | ( d << 32) | ( e << 24) | ( f << 16) | ( g << 8) | h;\n                 return v;\n             }\n \n@@ -124,51 +124,54 @@ public class CompositePageCursor extends PageCursor\n             @Override\n             public void putInt( int value )\n             {\n-                putByte( offset    , (byte)  (value >> 24) );\n+                putByte( offset, (byte) ( value >> 24) );\n                 putByte( offset + 1, (byte) ((value >> 16) & 0xFF) );\n-                putByte( offset + 2, (byte) ((value >>  8) & 0xFF) );\n-                putByte( offset + 3, (byte) (value & 0xFF) );\n+                putByte( offset + 2, (byte) ((value >> 8) & 0xFF) );\n+                putByte( offset + 3, (byte) ( value & 0xFF) );\n             }\n \n             @Override\n             public void putInt( int offset, int value )\n             {\n                 this.offset = offset;\n-                putInt( value );\n+\n+putInt( value );\n             }\n \n             @Override\n             public void putShort( short value )\n             {\n-                putByte( offset    , (byte)  (value >>  8) );\n-                putByte( offset + 1, (byte) (value & 0xFF) );\n+                putByte( offset, (byte) ( value >> 8) );\n+                putByte( offset + 1, (byte) ( value & 0xFF) );\n             }\n \n             @Override\n             public void putShort( int offset, short value )\n             {\n                 this.offset = offset;\n-                putShort( value );\n+\n+putShort( value );\n             }\n \n             @Override\n             public void putLong( long value )\n             {\n-                putByte( offset    , (byte)  (value >> 56) );\n+                putByte( offset, (byte) ( value >> 56) );\n                 putByte( offset + 1, (byte) ((value >> 48) & 0xFF) );\n                 putByte( offset + 2, (byte) ((value >> 40) & 0xFF) );\n                 putByte( offset + 3, (byte) ((value >> 32) & 0xFF) );\n                 putByte( offset + 4, (byte) ((value >> 24) & 0xFF) );\n                 putByte( offset + 5, (byte) ((value >> 16) & 0xFF) );\n-                putByte( offset + 6, (byte) ((value >>  8) & 0xFF) );\n-                putByte( offset + 7, (byte) (value & 0xFF) );\n+                putByte( offset + 6, (byte) ((value >> 8) & 0xFF) );\n+                putByte( offset + 7, (byte) ( value & 0xFF) );\n             }\n \n             @Override\n             public void putLong( int offset, long value )\n             {\n                 this.offset = offset;\n-                putLong( value );\n+\n+putLong( value );\n             }\n \n             @Override\n@@ -195,13 +198,13 @@ public class CompositePageCursor extends PageCursor\n \n     private PageCursor cursor( int offset, int width )\n     {\n-        outOfBounds |= offset + width > firstLength + secondLength;\n+        outOfBounds |= offset + width> firstLength + secondLength;\n         if ( offset < firstLength )\n         {\n             return offset + width <= firstLength ? first : byteCursor( offset );\n         }\n-        return second;\n \n+return second;\n     }\n \n     private PageCursor byteCursor( int offset )\n@@ -212,7 +215,7 @@ public class CompositePageCursor extends PageCursor\n \n     private int relative( int offset )\n     {\n-        return offset < firstLength ? firstBaseOffset + offset : secondBaseOffset + (offset - firstLength);\n+        return offset < firstLength ? firstBaseOffset + offset : secondBaseOffset + ( offset - firstLength);\n     }\n \n     @Override\n@@ -369,7 +372,7 @@ public class CompositePageCursor extends PageCursor\n         else\n         {\n             first.setOffset( firstBaseOffset + firstLength );\n-            second.setOffset( secondBaseOffset + (offset - firstLength) );\n+            second.setOffset( secondBaseOffset + ( offset - firstLength) );\n         }\n         this.offset = offset;\n     }\n@@ -414,8 +417,7 @@ public class CompositePageCursor extends PageCursor\n \n     private UnsupportedOperationException unsupportedNext()\n     {\n-        return new UnsupportedOperationException(\n-                \"Composite cursor does not support next operation. Please operate directly on underlying cursors.\" );\n+        return new UnsupportedOperationException( \"Composite cursor does not support next operation. Please operate directly on underlying cursors.\" );\n     }\n \n     @Override\n@@ -440,7 +442,8 @@ public class CompositePageCursor extends PageCursor\n             rewind();\n             checkAndClearBoundsFlag();\n         }\n-        return needsRetry;\n+\n+return needsRetry;\n     }\n \n     @Override\n@@ -551,4 +554,4 @@ public class CompositePageCursor extends PageCursor\n     {\n         return new CompositePageCursor( first, first.getOffset(), firstLength, second, second.getOffset(), secondLength );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
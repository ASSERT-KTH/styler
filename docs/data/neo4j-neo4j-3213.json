{
    "project_name": "neo4j-neo4j",
    "error_id": "3213",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "108",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "211",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3213/GenericNativeIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3213/GenericNativeIndexProvider.java\nindex 90dfcefd16f..3825dc61e1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3213/GenericNativeIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3213/GenericNativeIndexProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.nio.file.Path;\n@@ -52,21 +53,21 @@ import static org.neo4j.kernel.impl.index.schema.config.SpaceFillingCurveSetting\n \n /**\n  * Native index able to handle all value types in a single {@link GBPTree}. Single-key as well as composite-key is supported.\n- *\n+ * <p>\n  * A composite index query have one predicate per slot / column.\n  * The predicate comes in the form of an index query. Any of \"exact\", \"range\" or \"exist\".\n  * Other index providers have support for exact predicate on all columns or exists predicate on all columns (full scan).\n  * This index provider have some additional capabilities. It can combine the slot predicates under the following rules:\n  * a. Exact can only follow another Exact or be in first slot.\n  * b. Range can only follow Exact or be in first slot.\n- *\n+ * <p>\n  * We use the following notation for the predicates:\n  * x: exact predicate\n  * -: exists predicate\n  * >: range predicate (this could be ranges with zero or one open end)\n- *\n+ * <p>\n  * With an index on 5 slots as en example we can build several different composite queries:\n- *     p1 p2 p3 p4 p5 (order is important)\n+ * p1 p2 p3 p4 p5 (order is important)\n  * 1:  x  x  x  x  x\n  * 2:  -  -  -  -  -\n  * 3:  x  -  -  -  -\n@@ -78,7 +79,7 @@ import static org.neo4j.kernel.impl.index.schema.config.SpaceFillingCurveSetting\n  * 9:  >  >  -  -  - (not allowed!)\n  * 10: -  x  -  -  - (not allowed!)\n  * 11: -  >  -  -  - (not allowed!)\n- *\n+ * <p>\n  * 1: Exact match on all slots. Supported by all index providers.\n  * 2: Exists scan on all slots. Supported by all index providers.\n  * 3: Exact match on first column and exists on the rest.\n@@ -90,7 +91,7 @@ import static org.neo4j.kernel.impl.index.schema.config.SpaceFillingCurveSetting\n  * 9: Not allowed because range can only follow Exact.\n  * 10: Not allowed because Exact can only follow another Exact.\n  * 11: Not allowed because range can only follow Exact.\n- *\n+ * <p>\n  * WHY?\n  * In short, we only allow \"restrictive\" predicates (exact or range) if they help us restrict the scan range.\n  * Let's take query 11 as example\n@@ -101,10 +102,10 @@ import static org.neo4j.kernel.impl.index.schema.config.SpaceFillingCurveSetting\n  * We COULD allow this query and do filter during scan instead and take the extra cost into account when planning queries.\n  * As of writing this, there is no such filtering implementation.\n  */\n-public class GenericNativeIndexProvider extends NativeIndexProvider<GenericKey,NativeIndexValue,GenericLayout>\n+public class GenericNativeIndexProvider extends NativeIndexProvider<GenericKey, NativeIndexValue, GenericLayout>\n {\n     public static final String KEY = NATIVE_BTREE10.providerKey();\n-    public static final IndexProviderDescriptor DESCRIPTOR = new IndexProviderDescriptor( KEY, NATIVE_BTREE10.providerVersion() );\n+    public static final IndexProviderDescriptor DESCRIPTOR = new IndexProviderDescriptor(KEY, NATIVE_BTREE10.providerVersion());\n     public static final IndexCapability CAPABILITY = new GenericIndexCapability();\n \n     /**\n@@ -120,77 +121,76 @@ public class GenericNativeIndexProvider extends NativeIndexProvider<GenericKey,N\n     private final boolean archiveFailedIndex;\n     private final Config config;\n \n-    public GenericNativeIndexProvider( DatabaseIndexContext databaseIndexContext, IndexDirectoryStructure.Factory directoryStructureFactory,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, Config config )\n+    public GenericNativeIndexProvider(DatabaseIndexContext databaseIndexContext, IndexDirectoryStructure.Factory directoryStructureFactory,\n+                                      RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, Config config)\n     {\n-        super( databaseIndexContext, DESCRIPTOR, directoryStructureFactory, recoveryCleanupWorkCollector );\n+        super(databaseIndexContext, DESCRIPTOR, directoryStructureFactory, recoveryCleanupWorkCollector);\n \n-        this.configuredSettings = new ConfiguredSpaceFillingCurveSettingsCache( config );\n-        this.configuration = getConfiguredSpaceFillingCurveConfiguration( config );\n-        this.archiveFailedIndex = config.get( GraphDatabaseInternalSettings.archive_failed_index );\n+        this.configuredSettings = new ConfiguredSpaceFillingCurveSettingsCache(config);\n+        this.configuration = getConfiguredSpaceFillingCurveConfiguration(config);\n+        this.archiveFailedIndex = config.get(GraphDatabaseInternalSettings.archive_failed_index);\n         this.config = config;\n     }\n \n     @Override\n-    public IndexDescriptor completeConfiguration( IndexDescriptor index )\n+    public IndexDescriptor completeConfiguration(IndexDescriptor index)\n     {\n         IndexConfig indexConfig = index.getIndexConfig();\n-        indexConfig = completeSpatialConfiguration( indexConfig );\n-        index = index.withIndexConfig( indexConfig );\n-        if ( index.getCapability().equals( IndexCapability.NO_CAPABILITY ) )\n+        indexConfig = completeSpatialConfiguration(indexConfig);\n+        index = index.withIndexConfig(indexConfig);\n+        if (index.getCapability().equals(IndexCapability.NO_CAPABILITY))\n         {\n-            index = index.withIndexCapability( CAPABILITY );\n+            index = index.withIndexCapability(CAPABILITY);\n         }\n         return index;\n     }\n \n-    private IndexConfig completeSpatialConfiguration( IndexConfig indexConfig )\n+    private IndexConfig completeSpatialConfiguration(IndexConfig indexConfig)\n     {\n-        for ( CoordinateReferenceSystem crs : CoordinateReferenceSystem.all() )\n+        for (CoordinateReferenceSystem crs : CoordinateReferenceSystem.all())\n         {\n-            SpaceFillingCurveSettings spaceFillingCurveSettings = configuredSettings.forCRS( crs );\n-            indexConfig = SpatialIndexConfig.addSpatialConfig( indexConfig, crs, spaceFillingCurveSettings );\n+            SpaceFillingCurveSettings spaceFillingCurveSettings = configuredSettings.forCRS(crs);\n+            indexConfig = SpatialIndexConfig.addSpatialConfig(indexConfig, crs, spaceFillingCurveSettings);\n         }\n         return indexConfig;\n     }\n \n     @Override\n-    GenericLayout layout( IndexDescriptor descriptor, Path storeFile )\n+    GenericLayout layout(IndexDescriptor descriptor, Path storeFile)\n     {\n         int numberOfSlots = descriptor.schema().getPropertyIds().length;\n         IndexConfig indexConfig = descriptor.getIndexConfig();\n-        Map<CoordinateReferenceSystem,SpaceFillingCurveSettings> settings = SpatialIndexConfig.extractSpatialConfig( indexConfig );\n-        return new GenericLayout( numberOfSlots, new IndexSpecificSpaceFillingCurveSettings( settings ) );\n+        Map<CoordinateReferenceSystem, SpaceFillingCurveSettings> settings = SpatialIndexConfig.extractSpatialConfig(indexConfig);\n+        return new GenericLayout(numberOfSlots, new IndexSpecificSpaceFillingCurveSettings(settings));\n     }\n \n     @Override\n-    protected IndexPopulator newIndexPopulator( IndexFiles indexFiles, GenericLayout layout, IndexDescriptor descriptor, ByteBufferFactory bufferFactory,\n-            MemoryTracker memoryTracker, TokenNameLookup tokenNameLookup )\n+    protected IndexPopulator newIndexPopulator(IndexFiles indexFiles, GenericLayout layout, IndexDescriptor descriptor, ByteBufferFactory bufferFactory,\n+                                               MemoryTracker memoryTracker, TokenNameLookup tokenNameLookup)\n     {\n-        return new GenericBlockBasedIndexPopulator( databaseIndexContext, indexFiles, layout, descriptor, layout.getSpaceFillingCurveSettings(),\n-                configuration, archiveFailedIndex, bufferFactory, config, memoryTracker, tokenNameLookup );\n+        return new GenericBlockBasedIndexPopulator(databaseIndexContext, indexFiles, layout, descriptor, layout.getSpaceFillingCurveSettings(),\n+          configuration, archiveFailedIndex, bufferFactory, config, memoryTracker, tokenNameLookup);\n     }\n \n     @Override\n-    protected IndexAccessor newIndexAccessor( IndexFiles indexFiles, GenericLayout layout, IndexDescriptor descriptor, TokenNameLookup tokenNameLookup )\n+    protected IndexAccessor newIndexAccessor(IndexFiles indexFiles, GenericLayout layout, IndexDescriptor descriptor, TokenNameLookup tokenNameLookup)\n     {\n-        return new GenericNativeIndexAccessor( databaseIndexContext, indexFiles, layout, recoveryCleanupWorkCollector, descriptor,\n-                layout.getSpaceFillingCurveSettings(), configuration, tokenNameLookup );\n+        return new GenericNativeIndexAccessor(databaseIndexContext, indexFiles, layout, recoveryCleanupWorkCollector, descriptor,\n+          layout.getSpaceFillingCurveSettings(), configuration, tokenNameLookup);\n     }\n \n     @Override\n-    public void validatePrototype( IndexPrototype prototype )\n+    public void validatePrototype(IndexPrototype prototype)\n     {\n-        super.validatePrototype( prototype );\n+        super.validatePrototype(prototype);\n         IndexConfig indexConfig = prototype.getIndexConfig();\n-        indexConfig = completeSpatialConfiguration( indexConfig );\n+        indexConfig = completeSpatialConfiguration(indexConfig);\n         try\n         {\n-            SpatialIndexConfig.validateSpatialConfig( indexConfig );\n-        }\n-        catch ( IllegalArgumentException e )\n+            SpatialIndexConfig.validateSpatialConfig(indexConfig);\n+        } catch (IllegalArgumentException e)\n         {\n-            throw new IllegalArgumentException( \"Invalid spatial index settings.\", e );\n+            throw new IllegalArgumentException(\"Invalid spatial index settings.\", e);\n         }\n     }\n \n@@ -199,17 +199,16 @@ public class GenericNativeIndexProvider extends NativeIndexProvider<GenericKey,N\n         private final IndexBehaviour[] behaviours = {IndexBehaviour.SLOW_CONTAINS};\n \n         @Override\n-        public IndexOrderCapability orderCapability( ValueCategory... valueCategories )\n+        public IndexOrderCapability orderCapability(ValueCategory... valueCategories)\n         {\n             var seenUnknown = false;\n-            for ( ValueCategory valueCategory : valueCategories )\n+            for (ValueCategory valueCategory : valueCategories)\n             {\n-                if ( valueCategory == ValueCategory.GEOMETRY ||\n-                     valueCategory == ValueCategory.GEOMETRY_ARRAY )\n+                if (valueCategory == ValueCategory.GEOMETRY ||\n+                  valueCategory == ValueCategory.GEOMETRY_ARRAY)\n                 {\n                     return IndexOrderCapability.NONE;\n-                }\n-                else if ( valueCategory == ValueCategory.UNKNOWN )\n+                } else if (valueCategory == ValueCategory.UNKNOWN)\n                 {\n                     seenUnknown = true;\n                 }\n@@ -218,7 +217,7 @@ public class GenericNativeIndexProvider extends NativeIndexProvider<GenericKey,N\n         }\n \n         @Override\n-        public IndexValueCapability valueCapability( ValueCategory... valueCategories )\n+        public IndexValueCapability valueCapability(ValueCategory... valueCategories)\n         {\n             return IndexValueCapability.YES;\n         }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3213/GenericNativeIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3213/GenericNativeIndexProvider.java\nindex 90dfcefd16f..90a5cf17c5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3213/GenericNativeIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3213/GenericNativeIndexProvider.java\n@@ -229,4 +229,4 @@ public class GenericNativeIndexProvider extends NativeIndexProvider<GenericKey,N\n             return behaviours;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
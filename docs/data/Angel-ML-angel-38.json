{
    "project_name": "Angel-ML-angel",
    "error_id": "38",
    "information": {
        "errors": [
            {
                "line": "53",
                "column": "9",
                "severity": "error",
                "message": "',' should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
            }
        ]
    },
    "source_code": "    PartitionKey key = partKey.getPartKey();\n    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow()\n        , (int)key.getStartCol(), (int)key.getEndCol()};\n    return new FullPartitionAggrResult(result, partInfo);\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/38/FullAggrFunc.java\nindex c004df543b2..836a281608e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/38/FullAggrFunc.java\n@@ -49,8 +49,8 @@ public abstract class FullAggrFunc extends GetFunc {\n       result = process(part, partKey.getPartKey());\n     }\n     PartitionKey key = partKey.getPartKey();\n-    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow()\n-        , (int)key.getStartCol(), (int)key.getEndCol()};\n+    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow(),\n+      (int)key.getStartCol(), (int)key.getEndCol()};\n     return new FullPartitionAggrResult(result, partInfo);\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/38/FullAggrFunc.java\nindex c004df543b2..40fbc380aa2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/38/FullAggrFunc.java\n@@ -50,7 +50,7 @@ public abstract class FullAggrFunc extends GetFunc {\n     }\n     PartitionKey key = partKey.getPartKey();\n     int[] partInfo = new int[] {key.getStartRow(), key.getEndRow()\n-        , (int)key.getStartCol(), (int)key.getEndCol()};\n+        , (int) key.getStartCol(), (int) key.getEndCol()};\n     return new FullPartitionAggrResult(result, partInfo);\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/38/FullAggrFunc.java\nindex c004df543b2..3111f608d32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/38/FullAggrFunc.java\n@@ -43,15 +43,13 @@ public abstract class FullAggrFunc extends GetFunc {\n   public PartitionGetResult partitionGet(PartitionGetParam partKey) {\n     ServerPartition part = PSContext.get().getMatrixPartitionManager()\n         .getPartition(partKey.getMatrixId(), partKey.getPartKey().getPartitionId());\n-\n-    double[][] result = null;\n+double[][] result = null;\n     if (part != null) {\n       result = process(part, partKey.getPartKey());\n     }\n     PartitionKey key = partKey.getPartKey();\n-    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow()\n-        , (int)key.getStartCol(), (int)key.getEndCol()};\n-    return new FullPartitionAggrResult(result, partInfo);\n+    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow(), (int)key.getStartCol(), (int)key.getEndCol() };\n+return new FullPartitionAggrResult(result, partInfo);\n   }\n \n   private double[][] process(ServerPartition part, PartitionKey key) {\n@@ -71,4 +69,4 @@ public abstract class FullAggrFunc extends GetFunc {\n \n   protected abstract double[][] doProcess(ServerDenseDoubleRow[] rows);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/38/FullAggrFunc.java\nindex c004df543b2..3a105465df0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/38/FullAggrFunc.java\n@@ -29,6 +29,7 @@ import com.tencent.angel.ps.impl.matrix.ServerPartition;\n  * other aggregate function will extend `FullAggrFunc` and implement `doProcessRow`.\n  * This function will process the whole matrix.\n  */\n+\n public abstract class FullAggrFunc extends GetFunc {\n \n   public FullAggrFunc(int matrixId) {\n@@ -41,16 +42,14 @@ public abstract class FullAggrFunc extends GetFunc {\n \n   @Override\n   public PartitionGetResult partitionGet(PartitionGetParam partKey) {\n-    ServerPartition part = PSContext.get().getMatrixPartitionManager()\n-        .getPartition(partKey.getMatrixId(), partKey.getPartKey().getPartitionId());\n-\n+    ServerPartition part = PSContext.get().getMatrixPartitionManager().getPartition(partKey.getMatrixId(), partKey.getPartKey().getPartitionId());\n     double[][] result = null;\n     if (part != null) {\n       result = process(part, partKey.getPartKey());\n     }\n+\n     PartitionKey key = partKey.getPartKey();\n-    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow()\n-        , (int)key.getStartCol(), (int)key.getEndCol()};\n+    int[] partInfo = new int[]{key.getStartRow(), key.getEndRow(), (int) key.getStartCol(), (int) key.getEndCol()};\n     return new FullPartitionAggrResult(result, partInfo);\n   }\n \n@@ -71,4 +70,4 @@ public abstract class FullAggrFunc extends GetFunc {\n \n   protected abstract double[][] doProcess(ServerDenseDoubleRow[] rows);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/38/FullAggrFunc.java\nindex c004df543b2..836a281608e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/38/FullAggrFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/38/FullAggrFunc.java\n@@ -49,8 +49,8 @@ public abstract class FullAggrFunc extends GetFunc {\n       result = process(part, partKey.getPartKey());\n     }\n     PartitionKey key = partKey.getPartKey();\n-    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow()\n-        , (int)key.getStartCol(), (int)key.getEndCol()};\n+    int[] partInfo = new int[] {key.getStartRow(), key.getEndRow(),\n+      (int)key.getStartCol(), (int)key.getEndCol()};\n     return new FullPartitionAggrResult(result, partInfo);\n   }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
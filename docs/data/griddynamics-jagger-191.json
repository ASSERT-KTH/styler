{
    "project_name": "griddynamics-jagger",
    "error_id": "191",
    "information": {
        "errors": [
            {
                "line": "227",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 160).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                            // and it breaks statistics JFG-729\n                            if (++addedStatistics > 1)\n                                addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc, percentiles);\n                            currentCount = 0;\n                            extendedInterval = 0;\n                            windowStatisticsCalc.reset();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/191/DurationLogProcessor.java\nindex fb167c6b0f9..2acff61a9fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/191/DurationLogProcessor.java\n@@ -224,7 +224,7 @@ public class DurationLogProcessor extends LogProcessor implements DistributionLi\n                             // first point is removed because it's value very high due to the first invocation of invoker taking longer than the other\n                             // and it breaks statistics JFG-729\n                             if (++addedStatistics > 1)\n-                                addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc, percentiles);\n+                    addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc, percentiles);\n                             currentCount = 0;\n                             extendedInterval = 0;\n                             windowStatisticsCalc.reset();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/191/DurationLogProcessor.java\nindex fb167c6b0f9..f254521c587 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/191/DurationLogProcessor.java\n@@ -1,22 +1,22 @@\n /*\n-* Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved\n-* http://www.griddynamics.com\n-*\n-* This library is free software; you can redistribute it and/or modify it under the terms of\n-* the Apache License; either\n-* version 2.0 of the License, or any later version.\n-*\n-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n-* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\n-* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n-* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n-* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n-* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n-* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-*/\n+ * Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved\n+ * http://www.griddynamics.com\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under the terms of\n+ * the Apache License; either\n+ * version 2.0 of the License, or any later version.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\n+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+ * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n \n package com.griddynamics.jagger.engine.e1.aggregator.workload;\n \n@@ -65,7 +65,7 @@ import static com.griddynamics.jagger.util.StandardMetricsNamesUtil.THROUGHPUT_T\n \n /**\n  * @author Alexey Kiselyov\n- *         Date: 20.07.11\n+ * Date: 20.07.11\n  */\n public class DurationLogProcessor extends LogProcessor implements DistributionListener {\n \n@@ -223,8 +223,10 @@ public class DurationLogProcessor extends LogProcessor implements DistributionLi\n                             long currentTime = time - extendedInterval / 2;\n                             // first point is removed because it's value very high due to the first invocation of invoker taking longer than the other\n                             // and it breaks statistics JFG-729\n-                            if (++addedStatistics > 1)\n-                                addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc, percentiles);\n+                            if (++addedStatistics > 1) {\n+                                addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc,\n+                                        percentiles);\n+                            }\n                             currentCount = 0;\n                             extendedInterval = 0;\n                             windowStatisticsCalc.reset();\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "275",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 304).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/191/DurationLogProcessor.java\nindex fb167c6b0f9..754e829815a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/191/DurationLogProcessor.java\n@@ -272,11 +272,8 @@ public class DurationLogProcessor extends LogProcessor implements DistributionLi\n             return percentileMap;\n         }\n \n-        private void addStatistics(long time, long currentTime, Double throughput, StatisticsCalculator windowStatisticCalculator,\n-                                   MetricDescriptionEntity throughputDesc, MetricDescriptionEntity latencyDesc,\n-                                   MetricDescriptionEntity latencyStdDevDesc, Map<Double, MetricDescriptionEntity> percentileMap) {\n-\n-            statistics.add(new MetricPointEntity(currentTime, throughput, throughputDesc));\n+        private void addStatistics(long time, long currentTime, Double throughput, StatisticsCalculator windowStatisticCalculator, MetricDescriptionEntity throughputDesc, MetricDescriptionEntity latencyDesc, MetricDescriptionEntity latencyStdDevDesc, Map<Double, MetricDescriptionEntity> percentileMap) {\n+    statistics.add(new MetricPointEntity(currentTime, throughput, throughputDesc));\n             statistics.add(new MetricPointEntity(currentTime, windowStatisticCalculator.getMean() / 1000, latencyDesc));\n             statistics.add(new MetricPointEntity(currentTime, windowStatisticCalculator.getStandardDeviation() / 1000, latencyStdDevDesc));\n             for (Double percentileKey : getTimeWindowPercentilesKeys()) {\n@@ -285,4 +282,4 @@ public class DurationLogProcessor extends LogProcessor implements DistributionLi\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/191/DurationLogProcessor.java\nindex fb167c6b0f9..2acff61a9fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/191/DurationLogProcessor.java\n@@ -224,7 +224,7 @@ public class DurationLogProcessor extends LogProcessor implements DistributionLi\n                             // first point is removed because it's value very high due to the first invocation of invoker taking longer than the other\n                             // and it breaks statistics JFG-729\n                             if (++addedStatistics > 1)\n-                                addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc, percentiles);\n+                    addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc, percentiles);\n                             currentCount = 0;\n                             extendedInterval = 0;\n                             windowStatisticsCalc.reset();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/191/DurationLogProcessor.java\nindex fb167c6b0f9..1e85b60f87e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/191/DurationLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/191/DurationLogProcessor.java\n@@ -224,7 +224,8 @@ public class DurationLogProcessor extends LogProcessor implements DistributionLi\n                             // first point is removed because it's value very high due to the first invocation of invoker taking longer than the other\n                             // and it breaks statistics JFG-729\n                             if (++addedStatistics > 1)\n-                                addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc, latencyDesc, latencyStdDevDesc, percentiles);\n+                            addStatistics(time, currentTime, throughput, windowStatisticsCalc, throughputDesc,\n+                                            latencyDesc, latencyStdDevDesc, percentiles);\n                             currentCount = 0;\n                             extendedInterval = 0;\n                             windowStatisticsCalc.reset();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
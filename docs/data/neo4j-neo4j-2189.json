{
    "project_name": "neo4j-neo4j",
    "error_id": "2189",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2189/TokenScanValueIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2189/TokenScanValueIterator.java\nindex a90e2e49c4f..d4df6384a54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2189/TokenScanValueIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2189/TokenScanValueIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -36,7 +37,7 @@ import static org.neo4j.kernel.impl.index.schema.TokenScanValue.RANGE_SIZE;\n /**\n  * {@link LongIterator} which iterate over multiple {@link TokenScanValue} and for each\n  * iterate over each set bit, returning actual entity ids, i.e. {@code entityIdRange+bitOffset}.\n- *\n+ * <p>\n  * The provided {@link Seeker} is managed externally, e.g. {@link NativeTokenScanReader},\n  * this because implemented interface lacks close-method.\n  */\n@@ -49,18 +50,18 @@ class TokenScanValueIterator extends TokenScanValueIndexAccessor implements Prim\n \n     /**\n      * @param fromId entity to start from (exclusive). The cursor gives entries that are effectively small bit-sets, and the fromId may\n-     * be somewhere inside a bit-set range.\n+     *               be somewhere inside a bit-set range.\n      */\n-    TokenScanValueIterator( Seeker<TokenScanKey,TokenScanValue> cursor, long fromId )\n+    TokenScanValueIterator(Seeker<TokenScanKey, TokenScanValue> cursor, long fromId)\n     {\n-        super( cursor );\n+        super(cursor);\n         this.fromId = fromId;\n     }\n \n     @Override\n     public boolean hasNext()\n     {\n-        if ( !hasNextDecided )\n+        if (!hasNextDecided)\n         {\n             hasNext = fetchNext();\n             hasNextDecided = true;\n@@ -71,9 +72,9 @@ class TokenScanValueIterator extends TokenScanValueIndexAccessor implements Prim\n     @Override\n     public long next()\n     {\n-        if ( !hasNext() )\n+        if (!hasNext())\n         {\n-            throw new NoSuchElementException( \"No more elements in \" + this );\n+            throw new NoSuchElementException(\"No more elements in \" + this);\n         }\n         hasNextDecided = false;\n         return next;\n@@ -86,42 +87,41 @@ class TokenScanValueIterator extends TokenScanValueIndexAccessor implements Prim\n      */\n     protected boolean fetchNext()\n     {\n-        while ( true )\n+        while (true)\n         {\n-            if ( bits != 0 )\n+            if (bits != 0)\n             {\n-                int delta = Long.numberOfTrailingZeros( bits );\n+                int delta = Long.numberOfTrailingZeros(bits);\n                 bits &= bits - 1;\n-                next =  baseEntityId + delta ;\n+                next = baseEntityId + delta;\n                 hasNext = true;\n                 return true;\n             }\n \n             try\n             {\n-                if ( !cursor.next() )\n+                if (!cursor.next())\n                 {\n                     close();\n                     return false;\n                 }\n-            }\n-            catch ( IOException e )\n+            } catch (IOException e)\n             {\n-                throw new UncheckedIOException( e );\n+                throw new UncheckedIOException(e);\n             }\n \n             TokenScanKey key = cursor.key();\n             baseEntityId = key.idRange * RANGE_SIZE;\n             bits = cursor.value().bits;\n \n-            if ( fromId != TokenScanReader.NO_ID )\n+            if (fromId != TokenScanReader.NO_ID)\n             {\n                 // If we've been told to start at a specific id then trim off ids in this range less than or equal to that id\n-                long range = rangeOf( fromId );\n-                if ( range == key.idRange )\n+                long range = rangeOf(fromId);\n+                if (range == key.idRange)\n                 {\n                     // Only do this if we're in the idRange that fromId is in, otherwise there were no ids this time in this range\n-                    long relativeStartId = offsetOf( fromId );\n+                    long relativeStartId = offsetOf(fromId);\n                     long mask = relativeStartId == RANGE_SIZE - 1 ? -1 : (1L << (relativeStartId + 1)) - 1;\n                     bits &= ~mask;\n                 }\n@@ -130,7 +130,7 @@ class TokenScanValueIterator extends TokenScanValueIndexAccessor implements Prim\n             }\n \n             //noinspection AssertWithSideEffects\n-            assert keysInOrder( key, IndexOrder.ASCENDING );\n+            assert keysInOrder(key, IndexOrder.ASCENDING);\n         }\n     }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
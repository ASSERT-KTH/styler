{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2593",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2593/ProcedureGDBFacadeSPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2593/ProcedureGDBFacadeSPI.java\nindex dcc3fd37acb..0bc86da54d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2593/ProcedureGDBFacadeSPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2593/ProcedureGDBFacadeSPI.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.io.File;\n@@ -47,152 +48,149 @@ import org.neo4j.values.virtual.MapValue;\n \n class ProcedureGDBFacadeSPI implements GraphDatabaseFacade.SPI\n {\n-    private final File storeDir;\n-    private final DataSourceModule sourceModule;\n-    private final DependencyResolver resolver;\n-    private final CoreAPIAvailabilityGuard availability;\n-    private final ThrowingFunction<URL,URL,URLAccessValidationError> urlValidator;\n-    private final SecurityContext securityContext;\n-\n-    ProcedureGDBFacadeSPI( PlatformModule platform, DataSourceModule sourceModule, DependencyResolver resolver,\n-            CoreAPIAvailabilityGuard availability, ThrowingFunction<URL,URL,URLAccessValidationError> urlValidator,\n-            SecurityContext securityContext )\n-    {\n-        this.storeDir = platform.storeDir;\n-        this.sourceModule = sourceModule;\n-        this.resolver = resolver;\n-        this.availability = availability;\n-        this.urlValidator = urlValidator;\n-        this.securityContext = securityContext;\n-    }\n-\n-    @Override\n-    public boolean databaseIsAvailable( long timeout )\n-    {\n-        return availability.isAvailable( timeout );\n-    }\n-\n-    @Override\n-    public DependencyResolver resolver()\n-    {\n-        return resolver;\n-    }\n-\n-    @Override\n-    public StoreId storeId()\n-    {\n-        return sourceModule.storeId.get();\n-    }\n-\n-    @Override\n-    public File storeDir()\n-    {\n-        return storeDir;\n-    }\n-\n-    @Override\n-    public String name()\n-    {\n-        return \"ProcedureGraphDatabaseService\";\n-    }\n-\n-    @Override\n-    public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext tc )\n-    {\n-        try\n-        {\n-            availability.assertDatabaseAvailable();\n-            return sourceModule.queryExecutor.get().executeQuery( query, parameters, tc );\n-        }\n-        catch ( QueryExecutionKernelException e )\n-        {\n-            throw e.asUserException();\n-        }\n-    }\n-\n-    @Override\n-    public Result executeQuery( String query, MapValue parameters, TransactionalContext tc )\n-    {\n-        try\n-        {\n-            availability.assertDatabaseAvailable();\n-            return sourceModule.queryExecutor.get().executeQuery( query, parameters, tc );\n-        }\n-        catch ( QueryExecutionKernelException e )\n-        {\n-            throw e.asUserException();\n-        }\n-    }\n-\n-    @Override\n-    public AutoIndexing autoIndexing()\n-    {\n-        return sourceModule.autoIndexing;\n-    }\n-\n-    @Override\n-    public void registerKernelEventHandler( KernelEventHandler handler )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void unregisterKernelEventHandler( KernelEventHandler handler )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public <T> void registerTransactionEventHandler( TransactionEventHandler<T> handler )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public <T> void unregisterTransactionEventHandler( TransactionEventHandler<T> handler )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public URL validateURLAccess( URL url ) throws URLAccessValidationError\n-    {\n-        return urlValidator.apply( url );\n-    }\n-\n-    @Override\n-    public GraphDatabaseQueryService queryService()\n-    {\n-        return resolver.resolveDependency( GraphDatabaseQueryService.class );\n-    }\n-\n-    @Override\n-    public Kernel kernel()\n-    {\n-        return resolver.resolveDependency( Kernel.class );\n-    }\n-\n-    @Override\n-    public void shutdown()\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext ignored, long timeout )\n-    {\n-        try\n-        {\n-            availability.assertDatabaseAvailable();\n-            KernelTransaction kernelTx = sourceModule.kernelAPI.get().newTransaction( type, this.securityContext, timeout );\n-            kernelTx.registerCloseListener(\n-                    txId -> sourceModule.threadToTransactionBridge.unbindTransactionFromCurrentThread() );\n-            sourceModule.threadToTransactionBridge.bindTransactionToCurrentThread( kernelTx );\n-            return kernelTx;\n-        }\n-        catch ( TransactionFailureException e )\n-        {\n-            throw new org.neo4j.graphdb.TransactionFailureException( e.getMessage(), e );\n-        }\n-    }\n+  private final File storeDir;\n+  private final DataSourceModule sourceModule;\n+  private final DependencyResolver resolver;\n+  private final CoreAPIAvailabilityGuard availability;\n+  private final ThrowingFunction<URL, URL, URLAccessValidationError> urlValidator;\n+  private final SecurityContext securityContext;\n+\n+  ProcedureGDBFacadeSPI(PlatformModule platform, DataSourceModule sourceModule, DependencyResolver resolver,\n+                        CoreAPIAvailabilityGuard availability, ThrowingFunction<URL, URL, URLAccessValidationError> urlValidator,\n+                        SecurityContext securityContext)\n+  {\n+    this.storeDir = platform.storeDir;\n+    this.sourceModule = sourceModule;\n+    this.resolver = resolver;\n+    this.availability = availability;\n+    this.urlValidator = urlValidator;\n+    this.securityContext = securityContext;\n+  }\n+\n+  @Override\n+  public boolean databaseIsAvailable(long timeout)\n+  {\n+    return availability.isAvailable(timeout);\n+  }\n+\n+  @Override\n+  public DependencyResolver resolver()\n+  {\n+    return resolver;\n+  }\n+\n+  @Override\n+  public StoreId storeId()\n+  {\n+    return sourceModule.storeId.get();\n+  }\n+\n+  @Override\n+  public File storeDir()\n+  {\n+    return storeDir;\n+  }\n+\n+  @Override\n+  public String name()\n+  {\n+    return \"ProcedureGraphDatabaseService\";\n+  }\n+\n+  @Override\n+  public Result executeQuery(String query, Map<String, Object> parameters, TransactionalContext tc)\n+  {\n+    try\n+    {\n+      availability.assertDatabaseAvailable();\n+      return sourceModule.queryExecutor.get().executeQuery(query, parameters, tc);\n+    } catch (QueryExecutionKernelException e)\n+    {\n+      throw e.asUserException();\n+    }\n+  }\n+\n+  @Override\n+  public Result executeQuery(String query, MapValue parameters, TransactionalContext tc)\n+  {\n+    try\n+    {\n+      availability.assertDatabaseAvailable();\n+      return sourceModule.queryExecutor.get().executeQuery(query, parameters, tc);\n+    } catch (QueryExecutionKernelException e)\n+    {\n+      throw e.asUserException();\n+    }\n+  }\n+\n+  @Override\n+  public AutoIndexing autoIndexing()\n+  {\n+    return sourceModule.autoIndexing;\n+  }\n+\n+  @Override\n+  public void registerKernelEventHandler(KernelEventHandler handler)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public void unregisterKernelEventHandler(KernelEventHandler handler)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public <T> void registerTransactionEventHandler(TransactionEventHandler<T> handler)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public <T> void unregisterTransactionEventHandler(TransactionEventHandler<T> handler)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public URL validateURLAccess(URL url) throws URLAccessValidationError\n+  {\n+    return urlValidator.apply(url);\n+  }\n+\n+  @Override\n+  public GraphDatabaseQueryService queryService()\n+  {\n+    return resolver.resolveDependency(GraphDatabaseQueryService.class);\n+  }\n+\n+  @Override\n+  public Kernel kernel()\n+  {\n+    return resolver.resolveDependency(Kernel.class);\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext ignored, long timeout)\n+  {\n+    try\n+    {\n+      availability.assertDatabaseAvailable();\n+      KernelTransaction kernelTx = sourceModule.kernelAPI.get().newTransaction(type, this.securityContext, timeout);\n+      kernelTx.registerCloseListener(\n+          txId -> sourceModule.threadToTransactionBridge.unbindTransactionFromCurrentThread());\n+      sourceModule.threadToTransactionBridge.bindTransactionToCurrentThread(kernelTx);\n+      return kernelTx;\n+    } catch (TransactionFailureException e)\n+    {\n+      throw new org.neo4j.graphdb.TransactionFailureException(e.getMessage(), e);\n+    }\n+  }\n }\n",
            "diff_size": 149
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2593/ProcedureGDBFacadeSPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2593/ProcedureGDBFacadeSPI.java\nindex dcc3fd37acb..b9d49eaa2fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2593/ProcedureGDBFacadeSPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2593/ProcedureGDBFacadeSPI.java\n@@ -185,9 +185,8 @@ class ProcedureGDBFacadeSPI implements GraphDatabaseFacade.SPI\n         {\n             availability.assertDatabaseAvailable();\n             KernelTransaction kernelTx = sourceModule.kernelAPI.get().newTransaction( type, this.securityContext, timeout );\n-            kernelTx.registerCloseListener(\n-                    txId -> sourceModule.threadToTransactionBridge.unbindTransactionFromCurrentThread() );\n-            sourceModule.threadToTransactionBridge.bindTransactionToCurrentThread( kernelTx );\n+            kernelTx.registerCloseListener( txId -> sourceModule.threadToTransactionBridge.unbindTransactionFromCurrentThread() );\n+sourceModule.threadToTransactionBridge.bindTransactionToCurrentThread( kernelTx );\n             return kernelTx;\n         }\n         catch ( TransactionFailureException e )\n@@ -195,4 +194,4 @@ class ProcedureGDBFacadeSPI implements GraphDatabaseFacade.SPI\n             throw new org.neo4j.graphdb.TransactionFailureException( e.getMessage(), e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
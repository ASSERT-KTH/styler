{
    "project_name": "neo4j-neo4j",
    "error_id": "1092",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1092/MethodSignatureCompiler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1092/MethodSignatureCompiler.java\nindex 533eca4c9b6..28965d2cefb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1092/MethodSignatureCompiler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1092/MethodSignatureCompiler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.impl;\n \n import java.lang.reflect.Method;\n@@ -45,67 +46,66 @@ class MethodSignatureCompiler\n {\n     private final TypeCheckers typeCheckers;\n \n-    MethodSignatureCompiler( TypeCheckers typeCheckers )\n+    MethodSignatureCompiler(TypeCheckers typeCheckers)\n     {\n         this.typeCheckers = typeCheckers;\n     }\n \n-    List<FieldSignature> signatureFor( Method method ) throws ProcedureException\n+    List<FieldSignature> signatureFor(Method method) throws ProcedureException\n     {\n         Parameter[] params = method.getParameters();\n         Type[] types = method.getGenericParameterTypes();\n-        List<FieldSignature> signature = new ArrayList<>( params.length );\n+        List<FieldSignature> signature = new ArrayList<>(params.length);\n         boolean seenDefault = false;\n-        for ( int i = 0; i < params.length; i++ )\n+        for (int i = 0; i < params.length; i++)\n         {\n             Parameter param = params[i];\n             Type type = types[i];\n \n-            if ( !param.isAnnotationPresent( Name.class ) )\n+            if (!param.isAnnotationPresent(Name.class))\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Argument at position %d in method `%s` is missing an `@%s` annotation.%n\" +\n-                        \"Please add the annotation, recompile the class and try again.\",\n-                        i, method.getName(), Name.class.getSimpleName() );\n+                throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+                  \"Argument at position %d in method `%s` is missing an `@%s` annotation.%n\" +\n+                    \"Please add the annotation, recompile the class and try again.\",\n+                  i, method.getName(), Name.class.getSimpleName());\n             }\n-            Name parameter = param.getAnnotation( Name.class );\n+            Name parameter = param.getAnnotation(Name.class);\n             String name = parameter.value();\n \n-            if ( name.isBlank() )\n+            if (name.isBlank())\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Argument at position %d in method `%s` is annotated with a name,%n\" +\n-                        \"but the name is empty, please provide a non-empty name for the argument.\",\n-                        i, method.getName() );\n+                throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+                  \"Argument at position %d in method `%s` is annotated with a name,%n\" +\n+                    \"but the name is empty, please provide a non-empty name for the argument.\",\n+                  i, method.getName());\n             }\n \n             try\n             {\n-                DefaultValueConverter valueConverter = typeCheckers.converterFor( type );\n-                Optional<DefaultParameterValue> defaultValue = valueConverter.defaultValue( parameter.defaultValue() );\n+                DefaultValueConverter valueConverter = typeCheckers.converterFor(type);\n+                Optional<DefaultParameterValue> defaultValue = valueConverter.defaultValue(parameter.defaultValue());\n                 //it is not allowed to have holes in default values\n-                if ( seenDefault && !defaultValue.isPresent() )\n+                if (seenDefault && !defaultValue.isPresent())\n                 {\n-                    throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                            \"Non-default argument at position %d with name %s in method %s follows default argument. \" +\n-                            \"Add a default value or rearrange arguments so that the non-default values comes first.\",\n-                            i, parameter.value(), method.getName() );\n+                    throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+                      \"Non-default argument at position %d with name %s in method %s follows default argument. \" +\n+                        \"Add a default value or rearrange arguments so that the non-default values comes first.\",\n+                      i, parameter.value(), method.getName());\n                 }\n \n                 seenDefault = defaultValue.isPresent();\n \n-                boolean isSensitive = param.isAnnotationPresent( Sensitive.class );\n+                boolean isSensitive = param.isAnnotationPresent(Sensitive.class);\n \n-                signature.add( defaultValue.map( neo4jValue -> inputField( name, valueConverter.type(), neo4jValue, isSensitive ) ).orElseGet(\n-                        () -> inputField( name, valueConverter.type(), isSensitive ) ) );\n-            }\n-            catch ( ProcedureException e )\n+                signature.add(defaultValue.map(neo4jValue -> inputField(name, valueConverter.type(), neo4jValue, isSensitive)).orElseGet(\n+                  () -> inputField(name, valueConverter.type(), isSensitive)));\n+            } catch (ProcedureException e)\n             {\n-                throw new ProcedureException( e.status(),\n-                        \"Argument `%s` at position %d in `%s` with%n\" +\n-                        \"type `%s` cannot be converted to a Neo4j type: %s\",\n-                        name, i, method.getName(), param.getType().getSimpleName(),\n-                        e.getMessage() );\n+                throw new ProcedureException(e.status(),\n+                  \"Argument `%s` at position %d in `%s` with%n\" +\n+                    \"type `%s` cannot be converted to a Neo4j type: %s\",\n+                  name, i, method.getName(), param.getType().getSimpleName(),\n+                  e.getMessage());\n             }\n \n         }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1092/MethodSignatureCompiler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1092/MethodSignatureCompiler.java\nindex 533eca4c9b6..57f11023365 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1092/MethodSignatureCompiler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1092/MethodSignatureCompiler.java\n@@ -112,4 +112,4 @@ class MethodSignatureCompiler\n \n         return signature;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2254",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "50",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2254/NodeLoadingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2254/NodeLoadingIterator.java\nindex 882f5709e24..2ceee26a675 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2254/NodeLoadingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2254/NodeLoadingIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.store;\n \n import org.neo4j.collection.primitive.PrimitiveLongIterator;\n@@ -28,31 +29,30 @@ import org.neo4j.storageengine.api.NodeItem;\n \n public class NodeLoadingIterator extends PrefetchingIterator<Cursor<NodeItem>>\n {\n-    private final PrimitiveLongIterator ids;\n-    private final ThrowingLongFunction<Cursor<NodeItem>,EntityNotFoundException> loader;\n+  private final PrimitiveLongIterator ids;\n+  private final ThrowingLongFunction<Cursor<NodeItem>, EntityNotFoundException> loader;\n \n-    public NodeLoadingIterator( PrimitiveLongIterator ids,\n-            ThrowingLongFunction<Cursor<NodeItem>,EntityNotFoundException> loader )\n-    {\n-        this.ids = ids;\n-        this.loader = loader;\n-    }\n+  public NodeLoadingIterator(PrimitiveLongIterator ids,\n+                             ThrowingLongFunction<Cursor<NodeItem>, EntityNotFoundException> loader)\n+  {\n+    this.ids = ids;\n+    this.loader = loader;\n+  }\n \n-    @Override\n-    protected Cursor<NodeItem> fetchNextOrNull()\n+  @Override\n+  protected Cursor<NodeItem> fetchNextOrNull()\n+  {\n+    while (ids.hasNext())\n     {\n-        while ( ids.hasNext() )\n-        {\n-            try\n-            {\n-                return loader.apply( ids.next() );\n-            }\n-            catch ( EntityNotFoundException e )\n-            {\n-                // skip this id\n-            }\n-        }\n-\n-        return null;\n+      try\n+      {\n+        return loader.apply(ids.next());\n+      } catch (EntityNotFoundException e)\n+      {\n+        // skip this id\n+      }\n     }\n+\n+    return null;\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2254/NodeLoadingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2254/NodeLoadingIterator.java\nindex 882f5709e24..57582d7b463 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2254/NodeLoadingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2254/NodeLoadingIterator.java\n@@ -31,8 +31,7 @@ public class NodeLoadingIterator extends PrefetchingIterator<Cursor<NodeItem>>\n     private final PrimitiveLongIterator ids;\n     private final ThrowingLongFunction<Cursor<NodeItem>,EntityNotFoundException> loader;\n \n-    public NodeLoadingIterator( PrimitiveLongIterator ids,\n-            ThrowingLongFunction<Cursor<NodeItem>,EntityNotFoundException> loader )\n+    public NodeLoadingIterator( PrimitiveLongIterator ids, ThrowingLongFunction<Cursor<NodeItem>,EntityNotFoundException> loader )\n     {\n         this.ids = ids;\n         this.loader = loader;\n@@ -55,4 +54,4 @@ public class NodeLoadingIterator extends PrefetchingIterator<Cursor<NodeItem>>\n \n         return null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
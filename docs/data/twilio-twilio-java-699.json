{
    "project_name": "twilio-twilio-java",
    "error_id": "699",
    "information": {
        "errors": [
            {
                "line": "177",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/699/UsageRecordReader.java\nindex b7997f0e9d4..5241be98b6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/699/UsageRecordReader.java\n@@ -174,7 +174,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/699/UsageRecordReader.java\nindex b7997f0e9d4..d78287e7d87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/699/UsageRecordReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.wireless.v1.sim;\n@@ -174,7 +174,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/699/UsageRecordReader.java\nindex b7997f0e9d4..d8b2cbee752 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/699/UsageRecordReader.java\n@@ -32,6 +32,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      *\n      * @param pathSimSid The SID of the Sim resource to read the usage from\n      */\n+\n+\n     public UsageRecordReader(final String pathSimSid) {\n         this.pathSimSid = pathSimSid;\n     }\n@@ -44,6 +46,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param end Only include usage that occurred on or before this date\n      * @return this\n      */\n+\n+\n     public UsageRecordReader setEnd(final DateTime end) {\n         this.end = end;\n         return this;\n@@ -57,6 +61,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param start Only include usage that has occurred on or after this date\n      * @return this\n      */\n+\n+\n     public UsageRecordReader setStart(final DateTime start) {\n         this.start = start;\n         return this;\n@@ -70,6 +76,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param granularity The time-based grouping that results are aggregated by\n      * @return this\n      */\n+\n+\n     public UsageRecordReader setGranularity(final UsageRecord.Granularity granularity) {\n         this.granularity = granularity;\n         return this;\n@@ -81,6 +89,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UsageRecord ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<UsageRecord> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -92,13 +101,14 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UsageRecord ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<UsageRecord> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.WIRELESS.toString(),\n-            \"/v1/Sims/\" + this.pathSimSid + \"/UsageRecords\"\n+                              HttpMethod.GET,\n+                              Domains.WIRELESS.toString(),\n+                              \"/v1/Sims/\" + this.pathSimSid + \"/UsageRecords\"\n         );\n \n         addQueryParams(request);\n@@ -112,14 +122,12 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UsageRecord ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<UsageRecord> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<UsageRecord> getPage(final String targetUrl,\n+                                     final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -130,13 +138,11 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<UsageRecord> nextPage(final Page<UsageRecord> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.WIRELESS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.WIRELESS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -147,13 +153,11 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<UsageRecord> previousPage(final Page<UsageRecord> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.WIRELESS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.WIRELESS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -164,9 +168,11 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<UsageRecord> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<UsageRecord> pageForRequest(final TwilioRestClient client,\n+                                             final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"UsageRecord read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -174,7 +180,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -182,7 +189,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             response.getContent(),\n             UsageRecord.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -190,6 +197,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (end != null) {\n             request.addQueryParam(\"End\", end.toString());\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/699/UsageRecordReader.java\nindex b7997f0e9d4..5241be98b6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/699/UsageRecordReader.java\n@@ -174,7 +174,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/699/UsageRecordReader.java\nindex b7997f0e9d4..7a798e07450 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/699/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/699/UsageRecordReader.java\n@@ -174,7 +174,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
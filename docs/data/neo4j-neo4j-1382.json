{
    "project_name": "neo4j-neo4j",
    "error_id": "1382",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1382/BidirectionalTraversalBranchPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1382/BidirectionalTraversalBranchPath.java\nindex 2e863db7e71..97ff2c914f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1382/BidirectionalTraversalBranchPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1382/BidirectionalTraversalBranchPath.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.impl.traversal;\n \n import java.util.Iterator;\n@@ -40,7 +41,7 @@ class BidirectionalTraversalBranchPath implements Path\n     private Node cachedStartNode;\n     private List<Relationship> cachedRelationships;\n \n-    BidirectionalTraversalBranchPath( TraversalBranch start, TraversalBranch end )\n+    BidirectionalTraversalBranchPath(TraversalBranch start, TraversalBranch end)\n     {\n         this.start = start;\n         this.end = end;\n@@ -49,14 +50,14 @@ class BidirectionalTraversalBranchPath implements Path\n         Iterator<Entity> endPathEntities = end.iterator();\n         this.endNode = (Node) endPathEntities.next();\n         this.lastRelationship = endPathEntities.hasNext() ?\n-                (Relationship) endPathEntities.next() : start.lastRelationship();\n+          (Relationship) endPathEntities.next() : start.lastRelationship();\n     }\n \n     @Override\n     public Node startNode()\n     {\n         // Getting the start node is expensive in some Path implementations, so cache it\n-        if ( cachedStartNode == null )\n+        if (cachedStartNode == null)\n         {\n             cachedStartNode = start.startNode();\n         }\n@@ -79,9 +80,9 @@ class BidirectionalTraversalBranchPath implements Path\n     public Iterable<Relationship> relationships()\n     {\n         // Cache the relationships since we use them in hashCode/equals too.\n-        if ( cachedRelationships == null )\n+        if (cachedRelationships == null)\n         {\n-            cachedRelationships = gatherRelationships( start, end );\n+            cachedRelationships = gatherRelationships(start, end);\n         }\n         return cachedRelationships;\n     }\n@@ -89,31 +90,31 @@ class BidirectionalTraversalBranchPath implements Path\n     @Override\n     public Iterable<Relationship> reverseRelationships()\n     {\n-        return gatherRelationships( end, start );\n+        return gatherRelationships(end, start);\n     }\n \n-    private List<Relationship> gatherRelationships( TraversalBranch first, TraversalBranch then )\n+    private List<Relationship> gatherRelationships(TraversalBranch first, TraversalBranch then)\n     {\n         // TODO Don't loop through them all up front\n         LinkedList<Relationship> relationships = new LinkedList<>();\n         TraversalBranch branch = first;\n-        while ( branch.length() > 0 )\n+        while (branch.length() > 0)\n         {\n-            relationships.addFirst( branch.lastRelationship() );\n+            relationships.addFirst(branch.lastRelationship());\n             branch = branch.parent();\n         }\n         // We can might as well cache start node since we're right now there anyway\n-        if ( cachedStartNode == null && first == start && branch.length() >= 0 )\n+        if (cachedStartNode == null && first == start && branch.length() >= 0)\n         {\n             cachedStartNode = branch.endNode();\n         }\n         branch = then;\n-        while ( branch.length() > 0 )\n+        while (branch.length() > 0)\n         {\n-            relationships.add( branch.lastRelationship() );\n+            relationships.add(branch.lastRelationship());\n             branch = branch.parent();\n         }\n-        if ( cachedStartNode == null && then == start && branch.length() >= 0 )\n+        if (cachedStartNode == null && then == start && branch.length() >= 0)\n         {\n             cachedStartNode = branch.endNode();\n         }\n@@ -123,44 +124,44 @@ class BidirectionalTraversalBranchPath implements Path\n     @Override\n     public Iterable<Node> nodes()\n     {\n-        return gatherNodes( start, end );\n+        return gatherNodes(start, end);\n     }\n \n     @Override\n     public Iterable<Node> reverseNodes()\n     {\n-        return gatherNodes( end, start );\n+        return gatherNodes(end, start);\n     }\n \n-    private Iterable<Node> gatherNodes( TraversalBranch first, TraversalBranch then )\n+    private Iterable<Node> gatherNodes(TraversalBranch first, TraversalBranch then)\n     {\n         // TODO Don't loop through them all up front\n         LinkedList<Node> nodes = new LinkedList<>();\n         TraversalBranch branch = first;\n-        while ( branch.length() > 0 )\n+        while (branch.length() > 0)\n         {\n-            nodes.addFirst( branch.endNode() );\n+            nodes.addFirst(branch.endNode());\n             branch = branch.parent();\n         }\n-        if ( cachedStartNode == null && first == start && branch.length() >= 0 )\n+        if (cachedStartNode == null && first == start && branch.length() >= 0)\n         {\n             cachedStartNode = branch.endNode();\n         }\n-        nodes.addFirst( branch.endNode() );\n+        nodes.addFirst(branch.endNode());\n         branch = then.parent();\n-        if ( branch != null )\n+        if (branch != null)\n         {\n-            while ( branch.length() > 0 )\n+            while (branch.length() > 0)\n             {\n-                nodes.add( branch.endNode() );\n+                nodes.add(branch.endNode());\n                 branch = branch.parent();\n             }\n-            if ( branch.length() >= 0 )\n+            if (branch.length() >= 0)\n             {\n-                nodes.add( branch.endNode() );\n+                nodes.add(branch.endNode());\n             }\n         }\n-        if ( cachedStartNode == null && then == start && branch != null && branch.length() >= 0 )\n+        if (cachedStartNode == null && then == start && branch != null && branch.length() >= 0)\n         {\n             cachedStartNode = branch.endNode();\n         }\n@@ -179,28 +180,28 @@ class BidirectionalTraversalBranchPath implements Path\n         // TODO Don't loop through them all up front\n         LinkedList<Entity> entities = new LinkedList<>();\n         TraversalBranch branch = start;\n-        while ( branch.length() > 0 )\n+        while (branch.length() > 0)\n         {\n-            entities.addFirst( branch.endNode() );\n-            entities.addFirst( branch.lastRelationship() );\n+            entities.addFirst(branch.endNode());\n+            entities.addFirst(branch.lastRelationship());\n             branch = branch.parent();\n         }\n-        entities.addFirst( branch.endNode() );\n-        if ( cachedStartNode == null )\n+        entities.addFirst(branch.endNode());\n+        if (cachedStartNode == null)\n         {\n             cachedStartNode = branch.endNode();\n         }\n-        if ( end.length() > 0 )\n+        if (end.length() > 0)\n         {\n-            entities.add( end.lastRelationship() );\n+            entities.add(end.lastRelationship());\n             branch = end.parent();\n-            while ( branch.length() > 0 )\n+            while (branch.length() > 0)\n             {\n-                entities.add( branch.endNode() );\n-                entities.add( branch.lastRelationship() );\n+                entities.add(branch.endNode());\n+                entities.add(branch.lastRelationship());\n                 branch = branch.parent();\n             }\n-            entities.add( branch.endNode() );\n+            entities.add(branch.endNode());\n         }\n         return entities.iterator();\n     }\n@@ -212,24 +213,24 @@ class BidirectionalTraversalBranchPath implements Path\n     }\n \n     @Override\n-    public boolean equals( Object obj )\n+    public boolean equals(Object obj)\n     {\n-        if ( obj == this )\n+        if (obj == this)\n         {\n             return true;\n         }\n-        if ( !(obj instanceof Path) )\n+        if (!(obj instanceof Path))\n         {\n             return false;\n         }\n \n         Path other = (Path) obj;\n-        return relationships().equals( other.relationships() ) && other.startNode().equals( cachedStartNode );\n+        return relationships().equals(other.relationships()) && other.startNode().equals(cachedStartNode);\n     }\n \n     @Override\n     public String toString()\n     {\n-        return Paths.defaultPathToString( this );\n+        return Paths.defaultPathToString(this);\n     }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
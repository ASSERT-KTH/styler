{
    "project_name": "Activiti-Activiti",
    "error_id": "125",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.persistence.entity;\n\nimport java.util.List;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/125/ProcessDefinitionEntity.java\nindex 68f1b24f50d..f2da587cd6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/125/ProcessDefinitionEntity.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/125/ProcessDefinitionEntity.java\nindex 68f1b24f50d..0cd32f6527f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/125/ProcessDefinitionEntity.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n@@ -21,46 +22,46 @@ import org.activiti.engine.repository.ProcessDefinition;\n @Internal\n public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasRevision {\n \n-  List<IdentityLinkEntity> getIdentityLinks();\n+    List<IdentityLinkEntity> getIdentityLinks();\n+\n+    void setKey(String key);\n \n-  void setKey(String key);\n+    void setName(String name);\n \n-  void setName(String name);\n+    void setDescription(String description);\n \n-  void setDescription(String description);\n+    void setDeploymentId(String deploymentId);\n \n-  void setDeploymentId(String deploymentId);\n+    void setVersion(int version);\n \n-  void setVersion(int version);\n+    void setResourceName(String resourceName);\n \n-  void setResourceName(String resourceName);\n+    void setTenantId(String tenantId);\n \n-  void setTenantId(String tenantId);\n+    Integer getHistoryLevel();\n \n-  Integer getHistoryLevel();\n+    void setHistoryLevel(Integer historyLevel);\n \n-  void setHistoryLevel(Integer historyLevel);\n+    void setCategory(String category);\n \n-  void setCategory(String category);\n+    void setDiagramResourceName(String diagramResourceName);\n \n-  void setDiagramResourceName(String diagramResourceName);\n+    boolean getHasStartFormKey();\n \n-  boolean getHasStartFormKey();\n+    void setStartFormKey(boolean hasStartFormKey);\n \n-  void setStartFormKey(boolean hasStartFormKey);\n+    void setHasStartFormKey(boolean hasStartFormKey);\n \n-  void setHasStartFormKey(boolean hasStartFormKey);\n+    boolean isGraphicalNotationDefined();\n \n-  boolean isGraphicalNotationDefined();\n+    void setGraphicalNotationDefined(boolean isGraphicalNotationDefined);\n \n-  void setGraphicalNotationDefined(boolean isGraphicalNotationDefined);\n+    int getSuspensionState();\n \n-  int getSuspensionState();\n+    void setSuspensionState(int suspensionState);\n \n-  void setSuspensionState(int suspensionState);\n+    String getEngineVersion();\n \n-  String getEngineVersion();\n+    void setEngineVersion(String engineVersion);\n \n-  void setEngineVersion(String engineVersion);\n-  \n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'INTERFACE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/125/ProcessDefinitionEntity.java\nindex 68f1b24f50d..1be095f10e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/125/ProcessDefinitionEntity.java\n@@ -13,14 +13,15 @@\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n-\n import org.activiti.engine.api.internal.Internal;\n import org.activiti.engine.impl.db.HasRevision;\n import org.activiti.engine.repository.ProcessDefinition;\n \n+\n @Internal\n public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasRevision {\n \n+\n   List<IdentityLinkEntity> getIdentityLinks();\n \n   void setKey(String key);\n@@ -37,6 +38,7 @@ public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasR\n \n   void setTenantId(String tenantId);\n \n+\n   Integer getHistoryLevel();\n \n   void setHistoryLevel(Integer historyLevel);\n@@ -45,22 +47,26 @@ public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasR\n \n   void setDiagramResourceName(String diagramResourceName);\n \n+\n   boolean getHasStartFormKey();\n \n   void setStartFormKey(boolean hasStartFormKey);\n \n   void setHasStartFormKey(boolean hasStartFormKey);\n \n+\n   boolean isGraphicalNotationDefined();\n \n   void setGraphicalNotationDefined(boolean isGraphicalNotationDefined);\n \n+\n   int getSuspensionState();\n \n   void setSuspensionState(int suspensionState);\n \n+\n   String getEngineVersion();\n \n   void setEngineVersion(String engineVersion);\n-  \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/125/ProcessDefinitionEntity.java\nindex 68f1b24f50d..f2da587cd6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/125/ProcessDefinitionEntity.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/125/ProcessDefinitionEntity.java\nindex 68f1b24f50d..f2da587cd6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/125/ProcessDefinitionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/125/ProcessDefinitionEntity.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "1003",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.core.el;\n\nimport java.beans.FeatureDescriptor;\nimport java.util.Iterator;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/1003/ReadOnlyMapELResolver.java\nindex 1b630041dab..d84c721bed6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/1003/ReadOnlyMapELResolver.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.core.el;\n \n import java.beans.FeatureDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/1003/ReadOnlyMapELResolver.java\nindex 1b630041dab..9471054112f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/1003/ReadOnlyMapELResolver.java\n@@ -27,48 +27,46 @@ import javax.el.ELResolver;\n /**\n  * An {@link ELResolver} that exposed object values in the map, under the name of the entry's key. The values in the map are only returned when requested property has no 'base', meaning it's a\n  * root-object.\n- *\n-\n  */\n public class ReadOnlyMapELResolver extends ELResolver {\n \n-  protected Map<Object, Object> wrappedMap;\n+    protected Map<Object, Object> wrappedMap;\n \n-  public ReadOnlyMapELResolver(Map<Object, Object> map) {\n-    this.wrappedMap = map;\n-  }\n+    public ReadOnlyMapELResolver(Map<Object, Object> map) {\n+        this.wrappedMap = map;\n+    }\n \n-  public Object getValue(ELContext context, Object base, Object property) {\n-    if (base == null) {\n-      if (wrappedMap.containsKey(property)) {\n-        context.setPropertyResolved(true);\n-        return wrappedMap.get(property);\n-      }\n+    public Object getValue(ELContext context, Object base, Object property) {\n+        if (base == null) {\n+            if (wrappedMap.containsKey(property)) {\n+                context.setPropertyResolved(true);\n+                return wrappedMap.get(property);\n+            }\n+        }\n+        return null;\n     }\n-    return null;\n-  }\n \n-  public boolean isReadOnly(ELContext context, Object base, Object property) {\n-    return true;\n-  }\n+    public boolean isReadOnly(ELContext context, Object base, Object property) {\n+        return true;\n+    }\n \n-  public void setValue(ELContext context, Object base, Object property, Object value) {\n-    if (base == null) {\n-      if (wrappedMap.containsKey(property)) {\n-        throw new IllegalArgumentException(\"Cannot set value of '\" + property + \"', it's readonly!\");\n-      }\n+    public void setValue(ELContext context, Object base, Object property, Object value) {\n+        if (base == null) {\n+            if (wrappedMap.containsKey(property)) {\n+                throw new IllegalArgumentException(\"Cannot set value of '\" + property + \"', it's readonly!\");\n+            }\n+        }\n     }\n-  }\n \n-  public Class<?> getCommonPropertyType(ELContext context, Object arg) {\n-    return Object.class;\n-  }\n+    public Class<?> getCommonPropertyType(ELContext context, Object arg) {\n+        return Object.class;\n+    }\n \n-  public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object arg) {\n-    return null;\n-  }\n+    public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object arg) {\n+        return null;\n+    }\n \n-  public Class<?> getType(ELContext context, Object arg1, Object arg2) {\n-    return Object.class;\n-  }\n+    public Class<?> getType(ELContext context, Object arg1, Object arg2) {\n+        return Object.class;\n+    }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/1003/ReadOnlyMapELResolver.java\nindex 1b630041dab..0b4919cb2d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/1003/ReadOnlyMapELResolver.java\n@@ -20,7 +20,6 @@ package org.activiti.core.el;\n import java.beans.FeatureDescriptor;\n import java.util.Iterator;\n import java.util.Map;\n-\n import javax.el.ELContext;\n import javax.el.ELResolver;\n \n@@ -30,6 +29,8 @@ import javax.el.ELResolver;\n  *\n \n  */\n+\n+\n public class ReadOnlyMapELResolver extends ELResolver {\n \n   protected Map<Object, Object> wrappedMap;\n@@ -71,4 +72,4 @@ public class ReadOnlyMapELResolver extends ELResolver {\n   public Class<?> getType(ELContext context, Object arg1, Object arg2) {\n     return Object.class;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/1003/ReadOnlyMapELResolver.java\nindex 1b630041dab..d84c721bed6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/1003/ReadOnlyMapELResolver.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.core.el;\n \n import java.beans.FeatureDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/1003/ReadOnlyMapELResolver.java\nindex 1b630041dab..d84c721bed6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/1003/ReadOnlyMapELResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/1003/ReadOnlyMapELResolver.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.core.el;\n \n import java.beans.FeatureDescriptor;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
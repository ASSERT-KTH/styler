{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3963",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3963/CommandUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3963/CommandUsage.java\nindex 72264034a83..e71ab86d9b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3963/CommandUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3963/CommandUsage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin;\n \n import java.util.function.Consumer;\n@@ -27,25 +28,25 @@ import static java.lang.String.format;\n \n class CommandUsage\n {\n-    private final AdminCommand.Provider command;\n-    private final String scriptName;\n+  private final AdminCommand.Provider command;\n+  private final String scriptName;\n \n-    CommandUsage( AdminCommand.Provider command, String scriptName )\n-    {\n-        this.command = command;\n-        this.scriptName = scriptName;\n-    }\n+  CommandUsage(AdminCommand.Provider command, String scriptName)\n+  {\n+    this.command = command;\n+    this.scriptName = scriptName;\n+  }\n \n-    void printDetailed( Consumer<String> output )\n+  void printDetailed(Consumer<String> output)\n+  {\n+    for (Arguments arguments : command.possibleArguments())\n     {\n-        for ( Arguments arguments : command.possibleArguments() )\n-        {\n-            String left = format( \"usage: %s %s\", scriptName, command.name() );\n-\n-            output.accept( Arguments.rightColumnFormatted( left, arguments.usage(), left.length() + 1 ) );\n-        }\n-        output.accept( \"\" );\n-        Usage.printEnvironmentVariables( output );\n-        output.accept( command.allArguments().description( command.description() ) );\n+      String left = format(\"usage: %s %s\", scriptName, command.name());\n+\n+      output.accept(Arguments.rightColumnFormatted(left, arguments.usage(), left.length() + 1));\n     }\n+    output.accept(\"\");\n+    Usage.printEnvironmentVariables(output);\n+    output.accept(command.allArguments().description(command.description()));\n+  }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3963/CommandUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3963/CommandUsage.java\nindex 72264034a83..ca1ea45c4ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3963/CommandUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3963/CommandUsage.java\n@@ -41,11 +41,10 @@ class CommandUsage\n         for ( Arguments arguments : command.possibleArguments() )\n         {\n             String left = format( \"usage: %s %s\", scriptName, command.name() );\n-\n-            output.accept( Arguments.rightColumnFormatted( left, arguments.usage(), left.length() + 1 ) );\n+output.accept( Arguments.rightColumnFormatted( left, arguments.usage(), left.length() + 1 ) );\n         }\n         output.accept( \"\" );\n         Usage.printEnvironmentVariables( output );\n         output.accept( command.allArguments().description( command.description() ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "868",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.persistence.entity;\n\nimport java.util.List;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/868/HistoricDetailEntityManagerImpl.java\nindex 58ca514f7e3..16f1fbe86d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/868/HistoricDetailEntityManagerImpl.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/868/HistoricDetailEntityManagerImpl.java\nindex 58ca514f7e3..79a7ad0d82d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/868/HistoricDetailEntityManagerImpl.java\n@@ -30,100 +30,100 @@ import org.activiti.engine.impl.persistence.entity.data.HistoricDetailDataManage\n \n public class HistoricDetailEntityManagerImpl extends AbstractEntityManager<HistoricDetailEntity> implements HistoricDetailEntityManager {\n \n-  protected HistoricDetailDataManager historicDetailDataManager;\n-\n-  public HistoricDetailEntityManagerImpl(ProcessEngineConfigurationImpl processEngineConfiguration, HistoricDetailDataManager historicDetailDataManager) {\n-    super(processEngineConfiguration);\n-    this.historicDetailDataManager = historicDetailDataManager;\n-  }\n-\n-  @Override\n-  protected DataManager<HistoricDetailEntity> getDataManager() {\n-    return historicDetailDataManager;\n-  }\n-\n-  @Override\n-  public HistoricDetailVariableInstanceUpdateEntity copyAndInsertHistoricDetailVariableInstanceUpdateEntity(VariableInstanceEntity variableInstance) {\n-    HistoricDetailVariableInstanceUpdateEntity historicVariableUpdate = historicDetailDataManager.createHistoricDetailVariableInstanceUpdate();\n-    historicVariableUpdate.setProcessInstanceId(variableInstance.getProcessInstanceId());\n-    historicVariableUpdate.setExecutionId(variableInstance.getExecutionId());\n-    historicVariableUpdate.setTaskId(variableInstance.getTaskId());\n-    historicVariableUpdate.setTime(getClock().getCurrentTime());\n-    historicVariableUpdate.setRevision(variableInstance.getRevision());\n-    historicVariableUpdate.setName(variableInstance.getName());\n-    historicVariableUpdate.setVariableType(variableInstance.getType());\n-    historicVariableUpdate.setTextValue(variableInstance.getTextValue());\n-    historicVariableUpdate.setTextValue2(variableInstance.getTextValue2());\n-    historicVariableUpdate.setDoubleValue(variableInstance.getDoubleValue());\n-    historicVariableUpdate.setLongValue(variableInstance.getLongValue());\n-\n-    if (variableInstance.getBytes() != null) {\n-      historicVariableUpdate.setBytes(variableInstance.getBytes());\n+    protected HistoricDetailDataManager historicDetailDataManager;\n+\n+    public HistoricDetailEntityManagerImpl(ProcessEngineConfigurationImpl processEngineConfiguration, HistoricDetailDataManager historicDetailDataManager) {\n+        super(processEngineConfiguration);\n+        this.historicDetailDataManager = historicDetailDataManager;\n+    }\n+\n+    @Override\n+    protected DataManager<HistoricDetailEntity> getDataManager() {\n+        return historicDetailDataManager;\n     }\n \n-    insert(historicVariableUpdate);\n-    return historicVariableUpdate;\n-  }\n+    @Override\n+    public HistoricDetailVariableInstanceUpdateEntity copyAndInsertHistoricDetailVariableInstanceUpdateEntity(VariableInstanceEntity variableInstance) {\n+        HistoricDetailVariableInstanceUpdateEntity historicVariableUpdate = historicDetailDataManager.createHistoricDetailVariableInstanceUpdate();\n+        historicVariableUpdate.setProcessInstanceId(variableInstance.getProcessInstanceId());\n+        historicVariableUpdate.setExecutionId(variableInstance.getExecutionId());\n+        historicVariableUpdate.setTaskId(variableInstance.getTaskId());\n+        historicVariableUpdate.setTime(getClock().getCurrentTime());\n+        historicVariableUpdate.setRevision(variableInstance.getRevision());\n+        historicVariableUpdate.setName(variableInstance.getName());\n+        historicVariableUpdate.setVariableType(variableInstance.getType());\n+        historicVariableUpdate.setTextValue(variableInstance.getTextValue());\n+        historicVariableUpdate.setTextValue2(variableInstance.getTextValue2());\n+        historicVariableUpdate.setDoubleValue(variableInstance.getDoubleValue());\n+        historicVariableUpdate.setLongValue(variableInstance.getLongValue());\n+\n+        if (variableInstance.getBytes() != null) {\n+            historicVariableUpdate.setBytes(variableInstance.getBytes());\n+        }\n+\n+        insert(historicVariableUpdate);\n+        return historicVariableUpdate;\n+    }\n \n-  @Override\n-  public void delete(HistoricDetailEntity entity, boolean fireDeleteEvent) {\n-    super.delete(entity, fireDeleteEvent);\n+    @Override\n+    public void delete(HistoricDetailEntity entity, boolean fireDeleteEvent) {\n+        super.delete(entity, fireDeleteEvent);\n \n-    if (entity instanceof HistoricDetailVariableInstanceUpdateEntity) {\n-      HistoricDetailVariableInstanceUpdateEntity historicDetailVariableInstanceUpdateEntity = ((HistoricDetailVariableInstanceUpdateEntity) entity);\n-      if (historicDetailVariableInstanceUpdateEntity.getByteArrayRef() != null) {\n-        historicDetailVariableInstanceUpdateEntity.getByteArrayRef().delete();\n-      }\n+        if (entity instanceof HistoricDetailVariableInstanceUpdateEntity) {\n+            HistoricDetailVariableInstanceUpdateEntity historicDetailVariableInstanceUpdateEntity = ((HistoricDetailVariableInstanceUpdateEntity) entity);\n+            if (historicDetailVariableInstanceUpdateEntity.getByteArrayRef() != null) {\n+                historicDetailVariableInstanceUpdateEntity.getByteArrayRef().delete();\n+            }\n+        }\n     }\n-  }\n \n-  @Override\n-  public void deleteHistoricDetailsByProcessInstanceId(String historicProcessInstanceId) {\n-    if (getHistoryManager().isHistoryLevelAtLeast(HistoryLevel.AUDIT)) {\n-      List<HistoricDetailEntity> historicDetails = historicDetailDataManager.findHistoricDetailsByProcessInstanceId(historicProcessInstanceId);\n+    @Override\n+    public void deleteHistoricDetailsByProcessInstanceId(String historicProcessInstanceId) {\n+        if (getHistoryManager().isHistoryLevelAtLeast(HistoryLevel.AUDIT)) {\n+            List<HistoricDetailEntity> historicDetails = historicDetailDataManager.findHistoricDetailsByProcessInstanceId(historicProcessInstanceId);\n \n-      for (HistoricDetailEntity historicDetail : historicDetails) {\n-        delete(historicDetail);\n-      }\n+            for (HistoricDetailEntity historicDetail : historicDetails) {\n+                delete(historicDetail);\n+            }\n+        }\n     }\n-  }\n-\n-  @Override\n-  public long findHistoricDetailCountByQueryCriteria(HistoricDetailQueryImpl historicVariableUpdateQuery) {\n-    return historicDetailDataManager.findHistoricDetailCountByQueryCriteria(historicVariableUpdateQuery);\n-  }\n-\n-  @Override\n-  public List<HistoricDetail> findHistoricDetailsByQueryCriteria(HistoricDetailQueryImpl historicVariableUpdateQuery, Page page) {\n-    return historicDetailDataManager.findHistoricDetailsByQueryCriteria(historicVariableUpdateQuery, page);\n-  }\n-\n-  @Override\n-  public void deleteHistoricDetailsByTaskId(String taskId) {\n-    if (getHistoryManager().isHistoryLevelAtLeast(HistoryLevel.FULL)) {\n-      List<HistoricDetailEntity> details = historicDetailDataManager.findHistoricDetailsByTaskId(taskId);\n-      for (HistoricDetail detail : details) {\n-        delete((HistoricDetailEntity) detail);\n-      }\n+\n+    @Override\n+    public long findHistoricDetailCountByQueryCriteria(HistoricDetailQueryImpl historicVariableUpdateQuery) {\n+        return historicDetailDataManager.findHistoricDetailCountByQueryCriteria(historicVariableUpdateQuery);\n     }\n-  }\n \n-  @Override\n-  public List<HistoricDetail> findHistoricDetailsByNativeQuery(Map<String, Object> parameterMap, int firstResult, int maxResults) {\n-    return historicDetailDataManager.findHistoricDetailsByNativeQuery(parameterMap, firstResult, maxResults);\n-  }\n+    @Override\n+    public List<HistoricDetail> findHistoricDetailsByQueryCriteria(HistoricDetailQueryImpl historicVariableUpdateQuery, Page page) {\n+        return historicDetailDataManager.findHistoricDetailsByQueryCriteria(historicVariableUpdateQuery, page);\n+    }\n \n-  @Override\n-  public long findHistoricDetailCountByNativeQuery(Map<String, Object> parameterMap) {\n-    return historicDetailDataManager.findHistoricDetailCountByNativeQuery(parameterMap);\n-  }\n+    @Override\n+    public void deleteHistoricDetailsByTaskId(String taskId) {\n+        if (getHistoryManager().isHistoryLevelAtLeast(HistoryLevel.FULL)) {\n+            List<HistoricDetailEntity> details = historicDetailDataManager.findHistoricDetailsByTaskId(taskId);\n+            for (HistoricDetail detail : details) {\n+                delete((HistoricDetailEntity) detail);\n+            }\n+        }\n+    }\n \n-  public HistoricDetailDataManager getHistoricDetailDataManager() {\n-    return historicDetailDataManager;\n-  }\n+    @Override\n+    public List<HistoricDetail> findHistoricDetailsByNativeQuery(Map<String, Object> parameterMap, int firstResult, int maxResults) {\n+        return historicDetailDataManager.findHistoricDetailsByNativeQuery(parameterMap, firstResult, maxResults);\n+    }\n+\n+    @Override\n+    public long findHistoricDetailCountByNativeQuery(Map<String, Object> parameterMap) {\n+        return historicDetailDataManager.findHistoricDetailCountByNativeQuery(parameterMap);\n+    }\n \n-  public void setHistoricDetailDataManager(HistoricDetailDataManager historicDetailDataManager) {\n-    this.historicDetailDataManager = historicDetailDataManager;\n-  }\n+    public HistoricDetailDataManager getHistoricDetailDataManager() {\n+        return historicDetailDataManager;\n+    }\n+\n+    public void setHistoricDetailDataManager(HistoricDetailDataManager historicDetailDataManager) {\n+        this.historicDetailDataManager = historicDetailDataManager;\n+    }\n \n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/868/HistoricDetailEntityManagerImpl.java\nindex 58ca514f7e3..f9b627aa44f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/868/HistoricDetailEntityManagerImpl.java\n@@ -19,7 +19,6 @@ package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n import java.util.Map;\n-\n import org.activiti.engine.history.HistoricDetail;\n import org.activiti.engine.impl.HistoricDetailQueryImpl;\n import org.activiti.engine.impl.Page;\n@@ -28,6 +27,7 @@ import org.activiti.engine.impl.history.HistoryLevel;\n import org.activiti.engine.impl.persistence.entity.data.DataManager;\n import org.activiti.engine.impl.persistence.entity.data.HistoricDetailDataManager;\n \n+\n public class HistoricDetailEntityManagerImpl extends AbstractEntityManager<HistoricDetailEntity> implements HistoricDetailEntityManager {\n \n   protected HistoricDetailDataManager historicDetailDataManager;\n@@ -56,11 +56,9 @@ public class HistoricDetailEntityManagerImpl extends AbstractEntityManager<Histo\n     historicVariableUpdate.setTextValue2(variableInstance.getTextValue2());\n     historicVariableUpdate.setDoubleValue(variableInstance.getDoubleValue());\n     historicVariableUpdate.setLongValue(variableInstance.getLongValue());\n-\n     if (variableInstance.getBytes() != null) {\n       historicVariableUpdate.setBytes(variableInstance.getBytes());\n     }\n-\n     insert(historicVariableUpdate);\n     return historicVariableUpdate;\n   }\n@@ -68,7 +66,6 @@ public class HistoricDetailEntityManagerImpl extends AbstractEntityManager<Histo\n   @Override\n   public void delete(HistoricDetailEntity entity, boolean fireDeleteEvent) {\n     super.delete(entity, fireDeleteEvent);\n-\n     if (entity instanceof HistoricDetailVariableInstanceUpdateEntity) {\n       HistoricDetailVariableInstanceUpdateEntity historicDetailVariableInstanceUpdateEntity = ((HistoricDetailVariableInstanceUpdateEntity) entity);\n       if (historicDetailVariableInstanceUpdateEntity.getByteArrayRef() != null) {\n@@ -81,9 +78,8 @@ public class HistoricDetailEntityManagerImpl extends AbstractEntityManager<Histo\n   public void deleteHistoricDetailsByProcessInstanceId(String historicProcessInstanceId) {\n     if (getHistoryManager().isHistoryLevelAtLeast(HistoryLevel.AUDIT)) {\n       List<HistoricDetailEntity> historicDetails = historicDetailDataManager.findHistoricDetailsByProcessInstanceId(historicProcessInstanceId);\n-\n       for (HistoricDetailEntity historicDetail : historicDetails) {\n-        delete(historicDetail);\n+          delete(historicDetail);\n       }\n     }\n   }\n@@ -103,7 +99,7 @@ public class HistoricDetailEntityManagerImpl extends AbstractEntityManager<Histo\n     if (getHistoryManager().isHistoryLevelAtLeast(HistoryLevel.FULL)) {\n       List<HistoricDetailEntity> details = historicDetailDataManager.findHistoricDetailsByTaskId(taskId);\n       for (HistoricDetail detail : details) {\n-        delete((HistoricDetailEntity) detail);\n+          delete((HistoricDetailEntity) detail);\n       }\n     }\n   }\n@@ -126,4 +122,4 @@ public class HistoricDetailEntityManagerImpl extends AbstractEntityManager<Histo\n     this.historicDetailDataManager = historicDetailDataManager;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/868/HistoricDetailEntityManagerImpl.java\nindex 58ca514f7e3..16f1fbe86d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/868/HistoricDetailEntityManagerImpl.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/868/HistoricDetailEntityManagerImpl.java\nindex 58ca514f7e3..16f1fbe86d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/868/HistoricDetailEntityManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/868/HistoricDetailEntityManagerImpl.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "900",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/900/PrimitiveLongArrayQueue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/900/PrimitiveLongArrayQueue.java\nindex 0c1056e3c15..f15b6e14db5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/900/PrimitiveLongArrayQueue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/900/PrimitiveLongArrayQueue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive;\n \n import java.util.NoSuchElementException;\n@@ -25,141 +26,141 @@ import java.util.NoSuchElementException;\n  * Simple array based FIFO queue for primitive longs.\n  * Newly enqueued element is added into the end of the queue, and dequeue will return\n  * element from the head of the queue. (See CLRS 10.1 for more detailed description)\n- *\n+ * <p>\n  * Queue capacity should always be power of two to be able to use\n  * '&' mask operation with {@link #values} length.\n  */\n public class PrimitiveLongArrayQueue implements PrimitiveLongCollection\n {\n-    private static final int DEFAULT_CAPACITY = 16;\n-    private long[] values;\n-    private int head;\n-    private int tail;\n-\n-    public PrimitiveLongArrayQueue()\n-    {\n-        this( DEFAULT_CAPACITY );\n-    }\n-\n-    PrimitiveLongArrayQueue( int capacity )\n+  private static final int DEFAULT_CAPACITY = 16;\n+  private long[] values;\n+  private int head;\n+  private int tail;\n+\n+  public PrimitiveLongArrayQueue()\n+  {\n+    this(DEFAULT_CAPACITY);\n+  }\n+\n+  PrimitiveLongArrayQueue(int capacity)\n+  {\n+    assert (capacity != 0) && ((capacity & (capacity - 1)) == 0) : \"Capacity should be power of 2.\";\n+    initValues(capacity);\n+  }\n+\n+  @Override\n+  public <E extends Exception> void visitKeys(PrimitiveLongVisitor<E> visitor) throws E\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public boolean isEmpty()\n+  {\n+    return head == tail;\n+  }\n+\n+  @Override\n+  public void clear()\n+  {\n+    initValues(DEFAULT_CAPACITY);\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return (tail - head) & (values.length - 1);\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    values = PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n+  }\n+\n+  @Override\n+  public PrimitiveLongIterator iterator()\n+  {\n+    return new PrimitiveLongArrayQueueIterator();\n+  }\n+\n+  public long dequeue()\n+  {\n+    if (isEmpty())\n     {\n-        assert (capacity != 0) && ((capacity & (capacity - 1)) == 0) : \"Capacity should be power of 2.\";\n-        initValues( capacity );\n+      throw new IllegalStateException(\"Fail to poll first element. Queue is empty.\");\n     }\n-\n-    @Override\n-    public <E extends Exception> void visitKeys( PrimitiveLongVisitor<E> visitor ) throws E\n+    long value = values[head];\n+    head = (head + 1) & (values.length - 1);\n+    return value;\n+  }\n+\n+  public void enqueue(long value)\n+  {\n+    values[tail] = value;\n+    tail = (tail + 1) & (values.length - 1);\n+    if (tail == head)\n     {\n-        throw new UnsupportedOperationException();\n+      ensureCapacity();\n     }\n+  }\n \n-    @Override\n-    public boolean isEmpty()\n+  public void addAll(PrimitiveLongArrayQueue otherQueue)\n+  {\n+    while (!otherQueue.isEmpty())\n     {\n-        return head == tail;\n+      enqueue(otherQueue.dequeue());\n     }\n-\n-    @Override\n-    public void clear()\n+  }\n+\n+  private void initValues(int capacity)\n+  {\n+    values = new long[capacity];\n+    head = 0;\n+    tail = 0;\n+  }\n+\n+  private void ensureCapacity()\n+  {\n+    int newCapacity = values.length << 1;\n+    if (newCapacity < 0)\n     {\n-        initValues( DEFAULT_CAPACITY );\n+      throw new IllegalStateException(\"Fail to increase queue capacity.\");\n     }\n-\n-    @Override\n-    public int size()\n+    long[] newValues = new long[newCapacity];\n+    int elementsFromHeadTillEnd = values.length - head;\n+    System.arraycopy(values, head, newValues, 0, elementsFromHeadTillEnd);\n+    System.arraycopy(values, 0, newValues, elementsFromHeadTillEnd, head);\n+    tail = values.length;\n+    head = 0;\n+    values = newValues;\n+  }\n+\n+  private class PrimitiveLongArrayQueueIterator implements PrimitiveLongIterator\n+  {\n+    private int position;\n+\n+    PrimitiveLongArrayQueueIterator()\n     {\n-        return (tail - head) & (values.length - 1);\n+      this.position = head;\n     }\n \n     @Override\n-    public void close()\n+    public boolean hasNext()\n     {\n-        values = PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n+      return position != tail;\n     }\n \n     @Override\n-    public PrimitiveLongIterator iterator()\n-    {\n-        return new PrimitiveLongArrayQueueIterator();\n-    }\n-\n-    public long dequeue()\n+    public long next()\n     {\n-        if ( isEmpty() )\n-        {\n-            throw new IllegalStateException( \"Fail to poll first element. Queue is empty.\" );\n-        }\n-        long value = values[head];\n-        head = (head + 1) & (values.length - 1);\n+      if (hasNext())\n+      {\n+        long value = values[position];\n+        position = (position + 1) & (values.length - 1);\n         return value;\n+      }\n+      throw new NoSuchElementException();\n     }\n-\n-    public void enqueue( long value )\n-    {\n-        values[tail] = value;\n-        tail = (tail + 1) & (values.length - 1);\n-        if ( tail == head )\n-        {\n-            ensureCapacity();\n-        }\n-    }\n-\n-    public void addAll( PrimitiveLongArrayQueue otherQueue )\n-    {\n-        while ( !otherQueue.isEmpty() )\n-        {\n-            enqueue( otherQueue.dequeue() );\n-        }\n-    }\n-\n-    private void initValues( int capacity )\n-    {\n-        values = new long[capacity];\n-        head = 0;\n-        tail = 0;\n-    }\n-\n-    private void ensureCapacity()\n-    {\n-        int newCapacity = values.length << 1;\n-        if ( newCapacity < 0 )\n-        {\n-            throw new IllegalStateException( \"Fail to increase queue capacity.\" );\n-        }\n-        long[] newValues = new long[newCapacity];\n-        int elementsFromHeadTillEnd = values.length - head;\n-        System.arraycopy( values, head, newValues, 0, elementsFromHeadTillEnd );\n-        System.arraycopy( values, 0, newValues, elementsFromHeadTillEnd, head );\n-        tail = values.length;\n-        head = 0;\n-        values = newValues;\n-    }\n-\n-    private class PrimitiveLongArrayQueueIterator implements PrimitiveLongIterator\n-    {\n-        private int position;\n-\n-        PrimitiveLongArrayQueueIterator()\n-        {\n-            this.position = head;\n-        }\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            return position != tail;\n-        }\n-\n-        @Override\n-        public long next()\n-        {\n-            if ( hasNext() )\n-            {\n-                long value = values[position];\n-                position = (position + 1) & (values.length - 1);\n-                return value;\n-            }\n-            throw new NoSuchElementException();\n-        }\n-    }\n+  }\n }\n",
            "diff_size": 189
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/900/PrimitiveLongArrayQueue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/900/PrimitiveLongArrayQueue.java\nindex 0c1056e3c15..87ff700659b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/900/PrimitiveLongArrayQueue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/900/PrimitiveLongArrayQueue.java\n@@ -43,7 +43,7 @@ public class PrimitiveLongArrayQueue implements PrimitiveLongCollection\n \n     PrimitiveLongArrayQueue( int capacity )\n     {\n-        assert (capacity != 0) && ((capacity & (capacity - 1)) == 0) : \"Capacity should be power of 2.\";\n+        assert (capacity != 0 ) && ((capacity & ( capacity - 1 )) == 0) : \"Capacity should be power of 2.\";\n         initValues( capacity );\n     }\n \n@@ -68,7 +68,7 @@ public class PrimitiveLongArrayQueue implements PrimitiveLongCollection\n     @Override\n     public int size()\n     {\n-        return (tail - head) & (values.length - 1);\n+        return ( tail - head) & (values.length - 1 );\n     }\n \n     @Override\n@@ -90,14 +90,14 @@ public class PrimitiveLongArrayQueue implements PrimitiveLongCollection\n             throw new IllegalStateException( \"Fail to poll first element. Queue is empty.\" );\n         }\n         long value = values[head];\n-        head = (head + 1) & (values.length - 1);\n+        head = (head + 1 ) & (values.length - 1 );\n         return value;\n     }\n \n     public void enqueue( long value )\n     {\n         values[tail] = value;\n-        tail = (tail + 1) & (values.length - 1);\n+        tail = (tail + 1 ) & (values.length - 1 );\n         if ( tail == head )\n         {\n             ensureCapacity();\n@@ -156,10 +156,10 @@ public class PrimitiveLongArrayQueue implements PrimitiveLongCollection\n             if ( hasNext() )\n             {\n                 long value = values[position];\n-                position = (position + 1) & (values.length - 1);\n+                position = (position + 1 ) & (values.length - 1 );\n                 return value;\n             }\n             throw new NoSuchElementException();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1058",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1058/LuceneIndexImplementation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1058/LuceneIndexImplementation.java\nindex 07f61a2e4cb..d8a9e0e0b93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1058/LuceneIndexImplementation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1058/LuceneIndexImplementation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import java.io.File;\n@@ -41,147 +42,146 @@ import org.neo4j.kernel.spi.explicitindex.IndexImplementation;\n \n public class LuceneIndexImplementation extends LifecycleAdapter implements IndexImplementation\n {\n-    static final String KEY_TYPE = \"type\";\n-    static final String KEY_ANALYZER = \"analyzer\";\n-    static final String KEY_TO_LOWER_CASE = \"to_lower_case\";\n-    static final String KEY_SIMILARITY = \"similarity\";\n-    public static final String SERVICE_NAME = \"lucene\";\n-\n-    public static final Map<String, String> EXACT_CONFIG =\n-            Collections.unmodifiableMap( MapUtil.stringMap(\n-                    IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"exact\" ) );\n-\n-    public static final Map<String, String> FULLTEXT_CONFIG =\n-            Collections.unmodifiableMap( MapUtil.stringMap(\n-                    IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"fulltext\",\n-                    KEY_TO_LOWER_CASE, \"true\" ) );\n-\n-    private LuceneDataSource dataSource;\n-    private final File storeDir;\n-    private final Config config;\n-    private final Supplier<IndexConfigStore> indexStore;\n-    private final FileSystemAbstraction fileSystemAbstraction;\n-    private final OperationalMode operationalMode;\n-\n-    public LuceneIndexImplementation( File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n-            FileSystemAbstraction fileSystemAbstraction, OperationalMode operationalMode )\n+  static final String KEY_TYPE = \"type\";\n+  static final String KEY_ANALYZER = \"analyzer\";\n+  static final String KEY_TO_LOWER_CASE = \"to_lower_case\";\n+  static final String KEY_SIMILARITY = \"similarity\";\n+  public static final String SERVICE_NAME = \"lucene\";\n+\n+  public static final Map<String, String> EXACT_CONFIG =\n+      Collections.unmodifiableMap(MapUtil.stringMap(\n+          IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"exact\"));\n+\n+  public static final Map<String, String> FULLTEXT_CONFIG =\n+      Collections.unmodifiableMap(MapUtil.stringMap(\n+          IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"fulltext\",\n+          KEY_TO_LOWER_CASE, \"true\"));\n+\n+  private LuceneDataSource dataSource;\n+  private final File storeDir;\n+  private final Config config;\n+  private final Supplier<IndexConfigStore> indexStore;\n+  private final FileSystemAbstraction fileSystemAbstraction;\n+  private final OperationalMode operationalMode;\n+\n+  public LuceneIndexImplementation(File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n+                                   FileSystemAbstraction fileSystemAbstraction, OperationalMode operationalMode)\n+  {\n+    this.storeDir = storeDir;\n+    this.config = config;\n+    this.indexStore = indexStore;\n+    this.fileSystemAbstraction = fileSystemAbstraction;\n+    this.operationalMode = operationalMode;\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+    this.dataSource = new LuceneDataSource(storeDir, config, indexStore.get(), fileSystemAbstraction, operationalMode);\n+    this.dataSource.init();\n+  }\n+\n+  @Override\n+  public void start() throws Throwable\n+  {\n+    this.dataSource.start();\n+  }\n+\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    this.dataSource.stop();\n+  }\n+\n+  @Override\n+  public void shutdown() throws Throwable\n+  {\n+    this.dataSource.shutdown();\n+    this.dataSource = null;\n+  }\n+\n+  @Override\n+  public File getIndexImplementationDirectory(File storeDir)\n+  {\n+    return LuceneDataSource.getLuceneIndexStoreDirectory(storeDir);\n+  }\n+\n+  @Override\n+  public ExplicitIndexProviderTransaction newTransaction(IndexCommandFactory commandFactory)\n+  {\n+    return new LuceneExplicitIndexTransaction(dataSource, commandFactory);\n+  }\n+\n+  @Override\n+  public Map<String, String> fillInDefaults(Map<String, String> source)\n+  {\n+    Map<String, String> result = source != null ?\n+        new HashMap<>(source) : new HashMap<>();\n+    String analyzer = result.get(KEY_ANALYZER);\n+    if (analyzer == null)\n     {\n-        this.storeDir = storeDir;\n-        this.config = config;\n-        this.indexStore = indexStore;\n-        this.fileSystemAbstraction = fileSystemAbstraction;\n-        this.operationalMode = operationalMode;\n+      // Type is only considered if \"analyzer\" isn't supplied\n+      String type = result.computeIfAbsent(KEY_TYPE, k -> \"exact\");\n+      if (type.equals(\"fulltext\") && !result.containsKey(LuceneIndexImplementation.KEY_TO_LOWER_CASE))\n+      {\n+        result.put(KEY_TO_LOWER_CASE, \"true\");\n+      }\n     }\n \n-    @Override\n-    public void init()\n+    // Try it on for size. Calling this will reveal configuration problems.\n+    IndexType.getIndexType(result);\n+\n+    return result;\n+  }\n+\n+  @Override\n+  public boolean configMatches(Map<String, String> storedConfig, Map<String, String> config)\n+  {\n+    return match(storedConfig, config, KEY_TYPE, null) &&\n+        match(storedConfig, config, KEY_TO_LOWER_CASE, \"true\") &&\n+        match(storedConfig, config, KEY_ANALYZER, null) &&\n+        match(storedConfig, config, KEY_SIMILARITY, null);\n+  }\n+\n+  private boolean match(Map<String, String> storedConfig, Map<String, String> config,\n+                        String key, String defaultValue)\n+  {\n+    String value1 = storedConfig.get(key);\n+    String value2 = config.get(key);\n+    if (value1 == null || value2 == null)\n     {\n-        this.dataSource = new LuceneDataSource( storeDir, config, indexStore.get(), fileSystemAbstraction, operationalMode );\n-        this.dataSource.init();\n-    }\n-\n-    @Override\n-    public void start() throws Throwable\n-    {\n-        this.dataSource.start();\n-    }\n-\n-    @Override\n-    public void stop() throws Throwable\n-    {\n-        this.dataSource.stop();\n-    }\n-\n-    @Override\n-    public void shutdown() throws Throwable\n-    {\n-        this.dataSource.shutdown();\n-        this.dataSource = null;\n-    }\n-\n-    @Override\n-    public File getIndexImplementationDirectory( File storeDir )\n-    {\n-        return LuceneDataSource.getLuceneIndexStoreDirectory(storeDir);\n-    }\n-\n-    @Override\n-    public ExplicitIndexProviderTransaction newTransaction( IndexCommandFactory commandFactory )\n-    {\n-        return new LuceneExplicitIndexTransaction( dataSource, commandFactory );\n-    }\n-\n-    @Override\n-    public Map<String, String> fillInDefaults( Map<String, String> source )\n-    {\n-        Map<String, String> result = source != null ?\n-                new HashMap<>( source ) : new HashMap<>();\n-        String analyzer = result.get( KEY_ANALYZER );\n-        if ( analyzer == null )\n-        {\n-            // Type is only considered if \"analyzer\" isn't supplied\n-            String type = result.computeIfAbsent( KEY_TYPE, k -> \"exact\" );\n-            if ( type.equals( \"fulltext\" ) && !result.containsKey( LuceneIndexImplementation.KEY_TO_LOWER_CASE ) )\n-            {\n-                result.put( KEY_TO_LOWER_CASE, \"true\" );\n-            }\n-        }\n-\n-        // Try it on for size. Calling this will reveal configuration problems.\n-        IndexType.getIndexType( result );\n-\n-        return result;\n-    }\n-\n-    @Override\n-    public boolean configMatches( Map<String, String> storedConfig, Map<String, String> config )\n-    {\n-        return  match( storedConfig, config, KEY_TYPE, null ) &&\n-                match( storedConfig, config, KEY_TO_LOWER_CASE, \"true\" ) &&\n-                match( storedConfig, config, KEY_ANALYZER, null ) &&\n-                match( storedConfig, config, KEY_SIMILARITY, null );\n-    }\n-\n-    private boolean match( Map<String, String> storedConfig, Map<String, String> config,\n-            String key, String defaultValue )\n-    {\n-        String value1 = storedConfig.get( key );\n-        String value2 = config.get( key );\n-        if ( value1 == null || value2 == null )\n-        {\n-            if ( value1 == value2 )\n-            {\n-                return true;\n-            }\n-            if ( defaultValue != null )\n-            {\n-                value1 = value1 != null ? value1 : defaultValue;\n-                value2 = value2 != null ? value2 : defaultValue;\n-                return value1.equals( value2 );\n-            }\n-        }\n-        else\n-        {\n-            return value1.equals( value2 );\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public TransactionApplier newApplier( boolean recovery )\n-    {\n-        return new LuceneCommandApplier( dataSource, recovery );\n-    }\n-\n-    @Override\n-    public ResourceIterator<File> listStoreFiles() throws IOException\n-    {\n-        return dataSource.listStoreFiles();\n-    }\n-\n-    @Override\n-    public void force()\n+      if (value1 == value2)\n+      {\n+        return true;\n+      }\n+      if (defaultValue != null)\n+      {\n+        value1 = value1 != null ? value1 : defaultValue;\n+        value2 = value2 != null ? value2 : defaultValue;\n+        return value1.equals(value2);\n+      }\n+    } else\n     {\n-        dataSource.force();\n+      return value1.equals(value2);\n     }\n+    return false;\n+  }\n+\n+  @Override\n+  public TransactionApplier newApplier(boolean recovery)\n+  {\n+    return new LuceneCommandApplier(dataSource, recovery);\n+  }\n+\n+  @Override\n+  public ResourceIterator<File> listStoreFiles() throws IOException\n+  {\n+    return dataSource.listStoreFiles();\n+  }\n+\n+  @Override\n+  public void force()\n+  {\n+    dataSource.force();\n+  }\n }\n",
            "diff_size": 231
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1058/LuceneIndexImplementation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1058/LuceneIndexImplementation.java\nindex 07f61a2e4cb..542819b4622 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1058/LuceneIndexImplementation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1058/LuceneIndexImplementation.java\n@@ -45,18 +45,14 @@ public class LuceneIndexImplementation extends LifecycleAdapter implements Index\n     static final String KEY_ANALYZER = \"analyzer\";\n     static final String KEY_TO_LOWER_CASE = \"to_lower_case\";\n     static final String KEY_SIMILARITY = \"similarity\";\n-    public static final String SERVICE_NAME = \"lucene\";\n \n-    public static final Map<String, String> EXACT_CONFIG =\n-            Collections.unmodifiableMap( MapUtil.stringMap(\n-                    IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"exact\" ) );\n+public static final String SERVICE_NAME = \"lucene\";\n \n-    public static final Map<String, String> FULLTEXT_CONFIG =\n-            Collections.unmodifiableMap( MapUtil.stringMap(\n-                    IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"fulltext\",\n-                    KEY_TO_LOWER_CASE, \"true\" ) );\n+    public static final Map<String,String> EXACT_CONFIG = Collections.unmodifiableMap( MapUtil.stringMap( IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"exact\" ) );\n \n-    private LuceneDataSource dataSource;\n+public static final Map<String,String> FULLTEXT_CONFIG = Collections.unmodifiableMap( MapUtil.stringMap( IndexManager.PROVIDER, SERVICE_NAME, KEY_TYPE, \"fulltext\", KEY_TO_LOWER_CASE, \"true\" ) );\n+\n+private LuceneDataSource dataSource;\n     private final File storeDir;\n     private final Config config;\n     private final Supplier<IndexConfigStore> indexStore;\n@@ -112,11 +108,10 @@ public class LuceneIndexImplementation extends LifecycleAdapter implements Index\n     }\n \n     @Override\n-    public Map<String, String> fillInDefaults( Map<String, String> source )\n+    public Map<String,String> fillInDefaults( Map<String,String> source )\n     {\n-        Map<String, String> result = source != null ?\n-                new HashMap<>( source ) : new HashMap<>();\n-        String analyzer = result.get( KEY_ANALYZER );\n+        Map<String,String> result = source != null ? new HashMap<>( source ) : new HashMap<>();\n+String analyzer = result.get( KEY_ANALYZER );\n         if ( analyzer == null )\n         {\n             // Type is only considered if \"analyzer\" isn't supplied\n@@ -129,20 +124,18 @@ public class LuceneIndexImplementation extends LifecycleAdapter implements Index\n \n         // Try it on for size. Calling this will reveal configuration problems.\n         IndexType.getIndexType( result );\n-\n-        return result;\n+return result;\n     }\n \n     @Override\n-    public boolean configMatches( Map<String, String> storedConfig, Map<String, String> config )\n+    public boolean configMatches( Map<String,String> storedConfig, Map<String,String> config )\n     {\n-        return  match( storedConfig, config, KEY_TYPE, null ) &&\n-                match( storedConfig, config, KEY_TO_LOWER_CASE, \"true\" ) &&\n+        return match( storedConfig, config, KEY_TYPE, null ) && match( storedConfig, config, KEY_TO_LOWER_CASE, \"true\" ) &&\n                 match( storedConfig, config, KEY_ANALYZER, null ) &&\n                 match( storedConfig, config, KEY_SIMILARITY, null );\n     }\n \n-    private boolean match( Map<String, String> storedConfig, Map<String, String> config,\n+    private boolean match( Map<String,String> storedConfig, Map<String,String> config,\n             String key, String defaultValue )\n     {\n         String value1 = storedConfig.get( key );\n@@ -153,7 +146,8 @@ public class LuceneIndexImplementation extends LifecycleAdapter implements Index\n             {\n                 return true;\n             }\n-            if ( defaultValue != null )\n+\n+if ( defaultValue != null )\n             {\n                 value1 = value1 != null ? value1 : defaultValue;\n                 value2 = value2 != null ? value2 : defaultValue;\n@@ -184,4 +178,4 @@ public class LuceneIndexImplementation extends LifecycleAdapter implements Index\n     {\n         dataSource.force();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
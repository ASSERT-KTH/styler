{
    "project_name": "eclipse-milo",
    "error_id": "261",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "36",
                "severity": "error",
                "message": "'}' at column 36 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "     * Create an empty {@link AttributeFilterChain}.\n     */\n    public AttributeFilterChain() {}\n\n    /**\n     * Create an {@link AttributeFilterChain} with {@code filter} added to it.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/261/AttributeFilterChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/261/AttributeFilterChain.java\nindex a5ee5cd2fa8..81aaac3db21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/261/AttributeFilterChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/261/AttributeFilterChain.java\n@@ -31,7 +31,8 @@ public class AttributeFilterChain {\n     /**\n      * Create an empty {@link AttributeFilterChain}.\n      */\n-    public AttributeFilterChain() {}\n+    public AttributeFilterChain() {\n+    }\n \n     /**\n      * Create an {@link AttributeFilterChain} with {@code filter} added to it.\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/261/AttributeFilterChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/261/AttributeFilterChain.java\nindex a5ee5cd2fa8..a6e35c76bfa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/261/AttributeFilterChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/261/AttributeFilterChain.java\n@@ -200,4 +200,4 @@ public class AttributeFilterChain {\n         return new ArrayList<>(filters);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/261/AttributeFilterChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/261/AttributeFilterChain.java\nindex a5ee5cd2fa8..fc46bf7337b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/261/AttributeFilterChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/261/AttributeFilterChain.java\n@@ -16,7 +16,6 @@ import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n import java.util.concurrent.ConcurrentLinkedDeque;\n-\n import org.eclipse.milo.opcua.sdk.server.Session;\n import org.eclipse.milo.opcua.sdk.server.nodes.UaNode;\n import org.eclipse.milo.opcua.sdk.server.nodes.filters.AttributeFilterContext.GetAttributeContext;\n@@ -31,13 +30,16 @@ public class AttributeFilterChain {\n     /**\n      * Create an empty {@link AttributeFilterChain}.\n      */\n-    public AttributeFilterChain() {}\n+\n+    public AttributeFilterChain() {\n+    }\n \n     /**\n      * Create an {@link AttributeFilterChain} with {@code filter} added to it.\n      *\n      * @param filter the filter to add.\n      */\n+\n     public AttributeFilterChain(AttributeFilter filter) {\n         filters.add(filter);\n     }\n@@ -47,6 +49,7 @@ public class AttributeFilterChain {\n      *\n      * @param filters the filters to add.\n      */\n+\n     public AttributeFilterChain(List<AttributeFilter> filters) {\n         this.filters.addAll(filters);\n     }\n@@ -58,6 +61,7 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to get the value of.\n      * @return the value for the attribute identified by {@code attributeId} from {@code node}.\n      */\n+\n     public Object getAttribute(UaNode node, AttributeId attributeId) {\n         return getAttribute(null, node, attributeId);\n     }\n@@ -70,12 +74,11 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to get the value of.\n      * @return the value for the attribute identified by {@code attributeId} from {@code node}.\n      */\n+\n     public Object getAttribute(@Nullable Session session, UaNode node, AttributeId attributeId) {\n         Iterator<AttributeFilter> filterIterator = filters.iterator();\n \n-        AttributeFilter filter = filterIterator.hasNext() ?\n-            filterIterator.next() :\n-            AttributeFilter.DEFAULT_INSTANCE;\n+        AttributeFilter filter = filterIterator.hasNext() ? filterIterator.next() : AttributeFilter.DEFAULT_INSTANCE;\n \n         GetAttributeContext ctx = new GetAttributeContext(session, node, filterIterator);\n \n@@ -95,6 +98,7 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to set the value of.\n      * @param value       the value to set.\n      */\n+\n     public void setAttribute(UaNode node, AttributeId attributeId, Object value) {\n         setAttribute(null, node, attributeId, value);\n     }\n@@ -107,12 +111,15 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to set the value of.\n      * @param value       the value to set.\n      */\n-    public void setAttribute(@Nullable Session session, UaNode node, AttributeId attributeId, Object value) {\n+\n+    public void setAttribute(\n+        @Nullable Session session,\n+        UaNode node,\n+        AttributeId attributeId, Object value\n+    ) {\n         Iterator<AttributeFilter> filterIterator = filters.iterator();\n \n-        AttributeFilter filter = filterIterator.hasNext() ?\n-            filterIterator.next() :\n-            AttributeFilter.DEFAULT_INSTANCE;\n+        AttributeFilter filter = filterIterator.hasNext() ? filterIterator.next() : AttributeFilter.DEFAULT_INSTANCE;\n \n         SetAttributeContext ctx = new SetAttributeContext(session, node, filterIterator);\n \n@@ -125,9 +132,9 @@ public class AttributeFilterChain {\n      * @param attributeFilter the {@link AttributeFilter} to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addFirst(AttributeFilter attributeFilter) {\n         filters.addFirst(attributeFilter);\n-\n         return this;\n     }\n \n@@ -137,9 +144,9 @@ public class AttributeFilterChain {\n      * @param attributeFilters the {@link AttributeFilter}s to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addFirst(AttributeFilter... attributeFilters) {\n         Arrays.stream(attributeFilters).forEach(this::addFirst);\n-\n         return this;\n     }\n \n@@ -149,9 +156,9 @@ public class AttributeFilterChain {\n      * @param attributeFilters the {@link AttributeFilter}s to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addFirst(Collection<AttributeFilter> attributeFilters) {\n         attributeFilters.forEach(this::addFirst);\n-\n         return this;\n     }\n \n@@ -161,9 +168,9 @@ public class AttributeFilterChain {\n      * @param attributeFilter the {@link AttributeFilter} to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addLast(AttributeFilter attributeFilter) {\n         filters.addLast(attributeFilter);\n-\n         return this;\n     }\n \n@@ -173,9 +180,9 @@ public class AttributeFilterChain {\n      * @param attributeFilters the {@link AttributeFilter}s to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addLast(AttributeFilter... attributeFilters) {\n         Arrays.stream(attributeFilters).forEach(this::addLast);\n-\n         return this;\n     }\n \n@@ -185,9 +192,9 @@ public class AttributeFilterChain {\n      * @param attributeFilters the {@link AttributeFilter}s to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addLast(Collection<AttributeFilter> attributeFilters) {\n         attributeFilters.forEach(this::addLast);\n-\n         return this;\n     }\n \n@@ -196,8 +203,9 @@ public class AttributeFilterChain {\n      *\n      * @return a List containing all the {@link AttributeFilter}s belonging to this chain.\n      */\n+\n     public List<AttributeFilter> getFilters() {\n         return new ArrayList<>(filters);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
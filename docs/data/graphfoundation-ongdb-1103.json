{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1103",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1103/TransactionalRequestDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1103/TransactionalRequestDispatcher.java\nindex 53d04e57ec2..eda4cd67e2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1103/TransactionalRequestDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1103/TransactionalRequestDispatcher.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import com.sun.jersey.api.core.HttpContext;\n@@ -39,118 +40,113 @@ import static org.neo4j.server.rest.repr.RepresentationWriteHandler.DO_NOTHING;\n \n public class TransactionalRequestDispatcher implements RequestDispatcher\n {\n-    private final Database database;\n-    private final RequestDispatcher requestDispatcher;\n+  private final Database database;\n+  private final RequestDispatcher requestDispatcher;\n \n-    public TransactionalRequestDispatcher( Database database, RequestDispatcher requestDispatcher )\n-    {\n-        this.database = database;\n-        this.requestDispatcher = requestDispatcher;\n-    }\n+  public TransactionalRequestDispatcher(Database database, RequestDispatcher requestDispatcher)\n+  {\n+    this.database = database;\n+    this.requestDispatcher = requestDispatcher;\n+  }\n+\n+  @Override\n+  public void dispatch(Object o, final HttpContext httpContext)\n+  {\n+    RepresentationWriteHandler representationWriteHandler = DO_NOTHING;\n+\n+    LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpContext(httpContext);\n \n-    @Override\n-    public void dispatch( Object o, final HttpContext httpContext )\n+    final GraphDatabaseFacade graph = database.getGraph();\n+    if (o instanceof RestfulGraphDatabase)\n     {\n-        RepresentationWriteHandler representationWriteHandler = DO_NOTHING;\n+      RestfulGraphDatabase restfulGraphDatabase = (RestfulGraphDatabase) o;\n \n-        LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpContext( httpContext );\n+      final Transaction transaction = graph.beginTransaction(KernelTransaction.Type.implicit, loginContext);\n \n-        final GraphDatabaseFacade graph = database.getGraph();\n-        if ( o instanceof RestfulGraphDatabase )\n-        {\n-            RestfulGraphDatabase restfulGraphDatabase = (RestfulGraphDatabase) o;\n+      restfulGraphDatabase.getOutputFormat().setRepresentationWriteHandler(representationWriteHandler = new\n+          CommitOnSuccessfulStatusCodeRepresentationWriteHandler(httpContext, transaction));\n+    } else if (o instanceof BatchOperationService)\n+    {\n+      BatchOperationService batchOperationService = (BatchOperationService) o;\n \n-            final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.implicit, loginContext );\n+      final Transaction transaction = graph.beginTransaction(KernelTransaction.Type.explicit, loginContext);\n \n-            restfulGraphDatabase.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new\n-                    CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ));\n-        }\n-        else if ( o instanceof BatchOperationService )\n-        {\n-            BatchOperationService batchOperationService = (BatchOperationService) o;\n+      batchOperationService.setRepresentationWriteHandler(representationWriteHandler = new\n+          CommitOnSuccessfulStatusCodeRepresentationWriteHandler(httpContext, transaction));\n+    } else if (o instanceof CypherService)\n+    {\n+      CypherService cypherService = (CypherService) o;\n \n-            final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.explicit, loginContext );\n+      final Transaction transaction = graph.beginTransaction(KernelTransaction.Type.explicit, loginContext);\n \n-            batchOperationService.setRepresentationWriteHandler( representationWriteHandler = new\n-                    CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ) );\n-        }\n-        else if ( o instanceof CypherService )\n-        {\n-            CypherService cypherService = (CypherService) o;\n+      cypherService.getOutputFormat().setRepresentationWriteHandler(representationWriteHandler = new\n+          CommitOnSuccessfulStatusCodeRepresentationWriteHandler(httpContext, transaction));\n+    } else if (o instanceof DatabaseMetadataService)\n+    {\n+      DatabaseMetadataService databaseMetadataService = (DatabaseMetadataService) o;\n \n-            final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.explicit, loginContext );\n+      final Transaction transaction = graph.beginTransaction(KernelTransaction.Type.implicit, loginContext);\n+\n+      databaseMetadataService.setRepresentationWriteHandler(representationWriteHandler = new\n+          RepresentationWriteHandler()\n+          {\n+            @Override\n+            public void onRepresentationStartWriting()\n+            {\n+              // do nothing\n+            }\n \n-            cypherService.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new\n-                    CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ) );\n-        }\n-        else if ( o instanceof DatabaseMetadataService )\n-        {\n-            DatabaseMetadataService databaseMetadataService = (DatabaseMetadataService) o;\n+            @Override\n+            public void onRepresentationWritten()\n+            {\n+              // doesn't need to commit\n+            }\n \n-            final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.implicit, loginContext );\n+            @Override\n+            public void onRepresentationFinal()\n+            {\n+              transaction.close();\n+            }\n+          });\n+    } else if (o instanceof ExtensionService)\n+    {\n+      ExtensionService extensionService = (ExtensionService) o;\n+      extensionService.getOutputFormat().setRepresentationWriteHandler(representationWriteHandler = new\n+          RepresentationWriteHandler()\n+          {\n+            Transaction transaction;\n+\n+            @Override\n+            public void onRepresentationStartWriting()\n+            {\n+              transaction = graph.beginTransaction(KernelTransaction.Type.implicit, loginContext);\n+            }\n \n-            databaseMetadataService.setRepresentationWriteHandler( representationWriteHandler = new\n-                    RepresentationWriteHandler()\n+            @Override\n+            public void onRepresentationWritten()\n             {\n-                @Override\n-                public void onRepresentationStartWriting()\n-                {\n-                    // do nothing\n-                }\n-\n-                @Override\n-                public void onRepresentationWritten()\n-                {\n-                    // doesn't need to commit\n-                }\n-\n-                @Override\n-                public void onRepresentationFinal()\n-                {\n-                    transaction.close();\n-                }\n-            } );\n-        }\n-        else if ( o instanceof ExtensionService )\n-        {\n-            ExtensionService extensionService = (ExtensionService) o;\n-            extensionService.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new\n-                    RepresentationWriteHandler()\n+              // doesn't need to commit\n+            }\n+\n+            @Override\n+            public void onRepresentationFinal()\n             {\n-                Transaction transaction;\n-\n-                @Override\n-                public void onRepresentationStartWriting()\n-                {\n-                    transaction = graph.beginTransaction( KernelTransaction.Type.implicit, loginContext );\n-                }\n-\n-                @Override\n-                public void onRepresentationWritten()\n-                {\n-                    // doesn't need to commit\n-                }\n-\n-                @Override\n-                public void onRepresentationFinal()\n-                {\n-                    if ( transaction != null )\n-                    {\n-                        transaction.close();\n-                    }\n-                }\n-            } );\n-        }\n-\n-        try\n-        {\n-            requestDispatcher.dispatch( o, httpContext );\n-        }\n-        catch ( RuntimeException e )\n-        {\n-            representationWriteHandler.onRepresentationFinal();\n-\n-            throw e;\n-        }\n+              if (transaction != null)\n+              {\n+                transaction.close();\n+              }\n+            }\n+          });\n+    }\n+\n+    try\n+    {\n+      requestDispatcher.dispatch(o, httpContext);\n+    } catch (RuntimeException e)\n+    {\n+      representationWriteHandler.onRepresentationFinal();\n+\n+      throw e;\n     }\n+  }\n }\n",
            "diff_size": 135
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1103/TransactionalRequestDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1103/TransactionalRequestDispatcher.java\nindex 53d04e57ec2..258cdeb5d70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1103/TransactionalRequestDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1103/TransactionalRequestDispatcher.java\n@@ -61,37 +61,29 @@ public class TransactionalRequestDispatcher implements RequestDispatcher\n             RestfulGraphDatabase restfulGraphDatabase = (RestfulGraphDatabase) o;\n \n             final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.implicit, loginContext );\n-\n-            restfulGraphDatabase.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new\n-                    CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ));\n+restfulGraphDatabase.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ));\n         }\n         else if ( o instanceof BatchOperationService )\n         {\n             BatchOperationService batchOperationService = (BatchOperationService) o;\n \n             final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.explicit, loginContext );\n-\n-            batchOperationService.setRepresentationWriteHandler( representationWriteHandler = new\n-                    CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ) );\n+batchOperationService.setRepresentationWriteHandler( representationWriteHandler = new CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ) );\n         }\n         else if ( o instanceof CypherService )\n         {\n             CypherService cypherService = (CypherService) o;\n \n             final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.explicit, loginContext );\n-\n-            cypherService.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new\n-                    CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ) );\n+cypherService.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new CommitOnSuccessfulStatusCodeRepresentationWriteHandler( httpContext, transaction ) );\n         }\n         else if ( o instanceof DatabaseMetadataService )\n         {\n             DatabaseMetadataService databaseMetadataService = (DatabaseMetadataService) o;\n \n             final Transaction transaction = graph.beginTransaction( KernelTransaction.Type.implicit, loginContext );\n-\n-            databaseMetadataService.setRepresentationWriteHandler( representationWriteHandler = new\n-                    RepresentationWriteHandler()\n-            {\n+databaseMetadataService.setRepresentationWriteHandler( representationWriteHandler = new RepresentationWriteHandler()\n+{\n                 @Override\n                 public void onRepresentationStartWriting()\n                 {\n@@ -114,9 +106,8 @@ public class TransactionalRequestDispatcher implements RequestDispatcher\n         else if ( o instanceof ExtensionService )\n         {\n             ExtensionService extensionService = (ExtensionService) o;\n-            extensionService.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new\n-                    RepresentationWriteHandler()\n-            {\n+            extensionService.getOutputFormat().setRepresentationWriteHandler( representationWriteHandler = new RepresentationWriteHandler()\n+{\n                 Transaction transaction;\n \n                 @Override\n@@ -153,4 +144,4 @@ public class TransactionalRequestDispatcher implements RequestDispatcher\n             throw e;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
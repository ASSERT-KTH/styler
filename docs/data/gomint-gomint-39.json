{
    "project_name": "gomint-gomint",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "17",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic interface JwtSignature {\n\t\n\t/**\n\t * Validates a signature using a pre-specified algorithm.\n\t * <p>",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/errored/1/39/JwtSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/intellij/39/JwtSignature.java\nindex c3de152ebab..97a8eeaf7fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/errored/1/39/JwtSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/intellij/39/JwtSignature.java\n@@ -14,35 +14,33 @@ import java.security.Key;\n  * @version 1.0\n  */\n public interface JwtSignature {\n-\t\n-\t/**\n-\t * Validates a signature using a pre-specified algorithm.\n-\t * <p>\n-\t * This method takes a Key as its arguments even though it only supports ES384 which requires a PublicKey instead\n-\t * and got to upcast in order to ensure it has been passed one. This is done as other algorithms allowed per JWT\n-\t * standard such as Hmac256 might require a regular Key in case Mojang should ever decide to use them (would not\n-\t * make sense, though).\n-\t *\n-\t * @param key       The key to be used to verify the signature\n-\t * @param signature The signature to be verified\n-\t * @param digest    The digest appended to a JWT token as proof\n-\t *\n-\t * @return Whether or not the signature could be validated successfully\n-\t * @throws JwtSignatureException Thrown in case the signature could not be validated\n-\t */\n-\tboolean validate( Key key, byte[] signature, byte[] digest ) throws JwtSignatureException;\n-\t\n-\t/**\n-\t * Signs the given signature bytes and returns the encoded digest.\n-\t * <p>\n-\t * See {@link #validate(Key, byte[], byte[])} as for why this method uses Key as type for the key parameter.\n-\t *\n-\t * @param key       The key to be used to sign the signature\n-\t * @param signature The signature to be verified\n-\t *\n-\t * @return The digest to be appended to a JWT token as proof\n-\t * @throws JwtSignatureException Thrown in case the signature bytes could not be signed\n-\t */\n-\tbyte[] sign( Key key, byte[] signature ) throws JwtSignatureException;\n-\t\n+\n+    /**\n+     * Validates a signature using a pre-specified algorithm.\n+     * <p>\n+     * This method takes a Key as its arguments even though it only supports ES384 which requires a PublicKey instead\n+     * and got to upcast in order to ensure it has been passed one. This is done as other algorithms allowed per JWT\n+     * standard such as Hmac256 might require a regular Key in case Mojang should ever decide to use them (would not\n+     * make sense, though).\n+     *\n+     * @param key       The key to be used to verify the signature\n+     * @param signature The signature to be verified\n+     * @param digest    The digest appended to a JWT token as proof\n+     * @return Whether or not the signature could be validated successfully\n+     * @throws JwtSignatureException Thrown in case the signature could not be validated\n+     */\n+    boolean validate(Key key, byte[] signature, byte[] digest) throws JwtSignatureException;\n+\n+    /**\n+     * Signs the given signature bytes and returns the encoded digest.\n+     * <p>\n+     * See {@link #validate(Key, byte[], byte[])} as for why this method uses Key as type for the key parameter.\n+     *\n+     * @param key       The key to be used to sign the signature\n+     * @param signature The signature to be verified\n+     * @return The digest to be appended to a JWT token as proof\n+     * @throws JwtSignatureException Thrown in case the signature bytes could not be signed\n+     */\n+    byte[] sign(Key key, byte[] signature) throws JwtSignatureException;\n+\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/errored/1/39/JwtSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/naturalize/39/JwtSignature.java\nindex c3de152ebab..867c29d9b99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/errored/1/39/JwtSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/gomint-gomint/naturalize/39/JwtSignature.java\n@@ -14,8 +14,8 @@ import java.security.Key;\n  * @version 1.0\n  */\n public interface JwtSignature {\n-\t\n-\t/**\n+\n+    /**\n \t * Validates a signature using a pre-specified algorithm.\n \t * <p>\n \t * This method takes a Key as its arguments even though it only supports ES384 which requires a PublicKey instead\n@@ -30,9 +30,9 @@ public interface JwtSignature {\n \t * @return Whether or not the signature could be validated successfully\n \t * @throws JwtSignatureException Thrown in case the signature could not be validated\n \t */\n-\tboolean validate( Key key, byte[] signature, byte[] digest ) throws JwtSignatureException;\n-\t\n-\t/**\n+boolean validate( Key key, byte[] signature, byte[] digest ) throws JwtSignatureException;\n+\n+/**\n \t * Signs the given signature bytes and returns the encoded digest.\n \t * <p>\n \t * See {@link #validate(Key, byte[], byte[])} as for why this method uses Key as type for the key parameter.\n@@ -43,6 +43,5 @@ public interface JwtSignature {\n \t * @return The digest to be appended to a JWT token as proof\n \t * @throws JwtSignatureException Thrown in case the signature bytes could not be signed\n \t */\n-\tbyte[] sign( Key key, byte[] signature ) throws JwtSignatureException;\n-\t\n-}\n+byte[] sign( Key key, byte[] signature ) throws JwtSignatureException;\n+    }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
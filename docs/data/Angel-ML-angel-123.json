{
    "project_name": "Angel-ML-angel",
    "error_id": "123",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/123/DotParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/123/DotParam.java\nindex 88b4b8235a9..edb460e5373 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/123/DotParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/123/DotParam.java\n@@ -53,11 +53,11 @@ public class DotParam extends GetParam {\n     while (iterator.hasNext()) {\n       PartitionKey pkey = iterator.next();\n       params.add(new DotPartitionParam(matrixId,\n-              seed,\n-              partitionId,\n-              model,\n-              pkey,\n-              sentences));\n+          seed,\n+          partitionId,\n+          model,\n+          pkey,\n+          sentences));\n     }\n     return params;\n   }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/123/DotParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/123/DotParam.java\nindex 88b4b8235a9..f34987e7f56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/123/DotParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/123/DotParam.java\n@@ -33,12 +33,11 @@ public class DotParam extends GetParam {\n   int model;\n   int[][] sentences;\n \n-  public DotParam(int matrixId,\n-                  int seed,\n+  public DotParam(int matrixId, int seed,\n                   int partitionId,\n                   int model,\n                   int[][] sentences) {\n-    super(matrixId);\n+  super(matrixId);\n     this.seed = seed;\n     this.partitionId = partitionId;\n     this.model = model;\n@@ -52,13 +51,12 @@ public class DotParam extends GetParam {\n     Iterator<PartitionKey> iterator = pkeys.iterator();\n     while (iterator.hasNext()) {\n       PartitionKey pkey = iterator.next();\n-      params.add(new DotPartitionParam(matrixId,\n-              seed,\n+      params.add(new DotPartitionParam(matrixId, seed,\n               partitionId,\n               model,\n               pkey,\n               sentences));\n-    }\n+  }\n     return params;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/123/DotParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/123/DotParam.java\nindex 88b4b8235a9..921b5102ce4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/123/DotParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/123/DotParam.java\n@@ -21,7 +21,6 @@ import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.matrix.psf.get.base.GetParam;\n import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetParam;\n import com.tencent.angel.psagent.PSAgentContext;\n-\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n@@ -29,15 +28,17 @@ import java.util.List;\n public class DotParam extends GetParam {\n \n   int seed;\n+\n+\n   int partitionId;\n+\n+\n   int model;\n+\n+\n   int[][] sentences;\n \n-  public DotParam(int matrixId,\n-                  int seed,\n-                  int partitionId,\n-                  int model,\n-                  int[][] sentences) {\n+  public DotParam(int matrixId, int seed, int partitionId, int model, int[][] sentences) {\n     super(matrixId);\n     this.seed = seed;\n     this.partitionId = partitionId;\n@@ -52,13 +53,9 @@ public class DotParam extends GetParam {\n     Iterator<PartitionKey> iterator = pkeys.iterator();\n     while (iterator.hasNext()) {\n       PartitionKey pkey = iterator.next();\n-      params.add(new DotPartitionParam(matrixId,\n-              seed,\n-              partitionId,\n-              model,\n-              pkey,\n-              sentences));\n+      params.add(new DotPartitionParam(matrixId, seed, partitionId, model, pkey, sentences));\n     }\n     return params;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
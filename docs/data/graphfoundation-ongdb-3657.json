{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3657",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "185",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "194",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3657/HandshakeClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3657/HandshakeClient.java\nindex dc472d443d7..650b1272c47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3657/HandshakeClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3657/HandshakeClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol.handshake;\n \n import java.util.ArrayList;\n@@ -36,176 +37,172 @@ import static org.neo4j.causalclustering.protocol.handshake.StatusCode.SUCCESS;\n \n public class HandshakeClient implements ClientMessageHandler\n {\n-    private Channel channel;\n-    private ApplicationProtocolRepository applicationProtocolRepository;\n-    private ApplicationSupportedProtocols supportedApplicationProtocol;\n-    private ModifierProtocolRepository modifierProtocolRepository;\n-    private Collection<ModifierSupportedProtocols> supportedModifierProtocols;\n-    private ApplicationProtocol negotiatedApplicationProtocol;\n-    private List<Pair<String,Optional<ModifierProtocol>>> negotiatedModifierProtocols;\n-    private ProtocolStack protocolStack;\n-    private CompletableFuture<ProtocolStack> future = new CompletableFuture<>();\n-    private boolean magicReceived;\n-\n-    public CompletableFuture<ProtocolStack> initiate( Channel channel, ApplicationProtocolRepository applicationProtocolRepository,\n-            ModifierProtocolRepository modifierProtocolRepository )\n-    {\n-        this.channel = channel;\n+  private Channel channel;\n+  private ApplicationProtocolRepository applicationProtocolRepository;\n+  private ApplicationSupportedProtocols supportedApplicationProtocol;\n+  private ModifierProtocolRepository modifierProtocolRepository;\n+  private Collection<ModifierSupportedProtocols> supportedModifierProtocols;\n+  private ApplicationProtocol negotiatedApplicationProtocol;\n+  private List<Pair<String, Optional<ModifierProtocol>>> negotiatedModifierProtocols;\n+  private ProtocolStack protocolStack;\n+  private CompletableFuture<ProtocolStack> future = new CompletableFuture<>();\n+  private boolean magicReceived;\n \n-        this.applicationProtocolRepository = applicationProtocolRepository;\n-        this.supportedApplicationProtocol = applicationProtocolRepository.supportedProtocol();\n+  public CompletableFuture<ProtocolStack> initiate(Channel channel, ApplicationProtocolRepository applicationProtocolRepository,\n+                                                   ModifierProtocolRepository modifierProtocolRepository)\n+  {\n+    this.channel = channel;\n \n-        this.modifierProtocolRepository = modifierProtocolRepository;\n-        this.supportedModifierProtocols = modifierProtocolRepository.supportedProtocols();\n+    this.applicationProtocolRepository = applicationProtocolRepository;\n+    this.supportedApplicationProtocol = applicationProtocolRepository.supportedProtocol();\n \n-        negotiatedModifierProtocols = new ArrayList<>( supportedModifierProtocols.size() );\n+    this.modifierProtocolRepository = modifierProtocolRepository;\n+    this.supportedModifierProtocols = modifierProtocolRepository.supportedProtocols();\n \n-        channel.write( InitialMagicMessage.instance() );\n+    negotiatedModifierProtocols = new ArrayList<>(supportedModifierProtocols.size());\n \n-        sendProtocolRequests( channel, supportedApplicationProtocol, supportedModifierProtocols );\n+    channel.write(InitialMagicMessage.instance());\n \n-        return future;\n-    }\n+    sendProtocolRequests(channel, supportedApplicationProtocol, supportedModifierProtocols);\n \n-    private void sendProtocolRequests( Channel channel, ApplicationSupportedProtocols applicationProtocols,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols )\n-    {\n-        supportedModifierProtocols.forEach( modifierProtocol ->\n-                {\n-                    ProtocolSelection<String,ModifierProtocol> protocolSelection =\n-                            modifierProtocolRepository.getAll( modifierProtocol.identifier(), modifierProtocol.versions() );\n-                    channel.write( new ModifierProtocolRequest( protocolSelection.identifier(), protocolSelection.versions() ) );\n-                } );\n-\n-        ProtocolSelection<Integer,ApplicationProtocol> applicationProtocolSelection =\n-                applicationProtocolRepository.getAll( applicationProtocols.identifier(), applicationProtocols.versions() );\n-        channel.writeAndFlush( new ApplicationProtocolRequest( applicationProtocolSelection.identifier(), applicationProtocolSelection.versions() ) );\n-    }\n+    return future;\n+  }\n \n-    private void ensureMagic()\n+  private void sendProtocolRequests(Channel channel, ApplicationSupportedProtocols applicationProtocols,\n+                                    Collection<ModifierSupportedProtocols> supportedModifierProtocols)\n+  {\n+    supportedModifierProtocols.forEach(modifierProtocol ->\n+    {\n+      ProtocolSelection<String, ModifierProtocol> protocolSelection =\n+          modifierProtocolRepository.getAll(modifierProtocol.identifier(), modifierProtocol.versions());\n+      channel.write(new ModifierProtocolRequest(protocolSelection.identifier(), protocolSelection.versions()));\n+    });\n+\n+    ProtocolSelection<Integer, ApplicationProtocol> applicationProtocolSelection =\n+        applicationProtocolRepository.getAll(applicationProtocols.identifier(), applicationProtocols.versions());\n+    channel.writeAndFlush(new ApplicationProtocolRequest(applicationProtocolSelection.identifier(), applicationProtocolSelection.versions()));\n+  }\n+\n+  private void ensureMagic()\n+  {\n+    if (!magicReceived)\n     {\n-        if ( !magicReceived )\n-        {\n-            decline( \"Magic value not received.\" );\n-            throw new IllegalStateException( \"Magic value not received.\" );\n-        }\n+      decline(\"Magic value not received.\");\n+      throw new IllegalStateException(\"Magic value not received.\");\n     }\n+  }\n \n-    @Override\n-    public void handle( InitialMagicMessage magicMessage )\n+  @Override\n+  public void handle(InitialMagicMessage magicMessage)\n+  {\n+    if (!magicMessage.isCorrectMagic())\n     {\n-        if ( !magicMessage.isCorrectMagic() )\n-        {\n-            decline( \"Incorrect magic value received\" );\n-        }\n-        // TODO: check clusterId as well\n-\n-        magicReceived = true;\n+      decline(\"Incorrect magic value received\");\n     }\n+    // TODO: check clusterId as well\n+\n+    magicReceived = true;\n+  }\n \n-    @Override\n-    public void handle( ApplicationProtocolResponse applicationProtocolResponse )\n+  @Override\n+  public void handle(ApplicationProtocolResponse applicationProtocolResponse)\n+  {\n+    ensureMagic();\n+    if (applicationProtocolResponse.statusCode() != SUCCESS)\n     {\n-        ensureMagic();\n-        if ( applicationProtocolResponse.statusCode() != SUCCESS )\n-        {\n-            decline( \"Unsuccessful application protocol response\" );\n-            return;\n-        }\n-\n-        Optional<ApplicationProtocol> protocol =\n-                applicationProtocolRepository.select( applicationProtocolResponse.protocolName(), applicationProtocolResponse.version() );\n-\n-        if ( !protocol.isPresent() )\n-        {\n-            ProtocolSelection<Integer,ApplicationProtocol> knownApplicationProtocolVersions =\n-                    applicationProtocolRepository.getAll( supportedApplicationProtocol.identifier(), supportedApplicationProtocol.versions() );\n-            decline( String.format(\n-                    \"Mismatch of application protocols between client and server: Server protocol %s version %d: Client protocol %s versions %s\",\n-                    applicationProtocolResponse.protocolName(), applicationProtocolResponse.version(),\n-                    knownApplicationProtocolVersions.identifier(), knownApplicationProtocolVersions.versions() ) );\n-        }\n-        else\n-        {\n-            negotiatedApplicationProtocol = protocol.get();\n-\n-            sendSwitchOverRequestIfReady();\n-        }\n+      decline(\"Unsuccessful application protocol response\");\n+      return;\n     }\n \n-    @Override\n-    public void handle( ModifierProtocolResponse modifierProtocolResponse )\n+    Optional<ApplicationProtocol> protocol =\n+        applicationProtocolRepository.select(applicationProtocolResponse.protocolName(), applicationProtocolResponse.version());\n+\n+    if (!protocol.isPresent())\n+    {\n+      ProtocolSelection<Integer, ApplicationProtocol> knownApplicationProtocolVersions =\n+          applicationProtocolRepository.getAll(supportedApplicationProtocol.identifier(), supportedApplicationProtocol.versions());\n+      decline(String.format(\n+          \"Mismatch of application protocols between client and server: Server protocol %s version %d: Client protocol %s versions %s\",\n+          applicationProtocolResponse.protocolName(), applicationProtocolResponse.version(),\n+          knownApplicationProtocolVersions.identifier(), knownApplicationProtocolVersions.versions()));\n+    } else\n     {\n-        ensureMagic();\n-        if ( modifierProtocolResponse.statusCode() == StatusCode.SUCCESS )\n-        {\n-            Optional<ModifierProtocol> selectedModifierProtocol =\n-                    modifierProtocolRepository.select( modifierProtocolResponse.protocolName(), modifierProtocolResponse.version() );\n-            negotiatedModifierProtocols.add( Pair.of( modifierProtocolResponse.protocolName(), selectedModifierProtocol ) );\n-        }\n-        else\n-        {\n-            negotiatedModifierProtocols.add( Pair.of( modifierProtocolResponse.protocolName(), Optional.empty() ) );\n-        }\n-\n-        sendSwitchOverRequestIfReady();\n+      negotiatedApplicationProtocol = protocol.get();\n+\n+      sendSwitchOverRequestIfReady();\n     }\n+  }\n \n-    private void sendSwitchOverRequestIfReady()\n+  @Override\n+  public void handle(ModifierProtocolResponse modifierProtocolResponse)\n+  {\n+    ensureMagic();\n+    if (modifierProtocolResponse.statusCode() == StatusCode.SUCCESS)\n+    {\n+      Optional<ModifierProtocol> selectedModifierProtocol =\n+          modifierProtocolRepository.select(modifierProtocolResponse.protocolName(), modifierProtocolResponse.version());\n+      negotiatedModifierProtocols.add(Pair.of(modifierProtocolResponse.protocolName(), selectedModifierProtocol));\n+    } else\n     {\n-        if ( negotiatedApplicationProtocol != null && negotiatedModifierProtocols.size() == supportedModifierProtocols.size() )\n-        {\n-            List<ModifierProtocol> agreedModifierProtocols = negotiatedModifierProtocols\n-                    .stream()\n-                    .map( Pair::other )\n-                    .flatMap( Streams::ofOptional )\n-                    .collect( Collectors.toList() );\n-\n-            protocolStack = new ProtocolStack( negotiatedApplicationProtocol, agreedModifierProtocols );\n-            List<Pair<String,String>> switchOverModifierProtocols =\n-                    agreedModifierProtocols\n-                            .stream()\n-                            .map( protocol -> Pair.of( protocol.category(), protocol.implementation() ) )\n-                            .collect( Collectors.toList() );\n-\n-            channel.writeAndFlush(\n-                    new SwitchOverRequest(\n-                            negotiatedApplicationProtocol.category(),\n-                            negotiatedApplicationProtocol.implementation(),\n-                            switchOverModifierProtocols ) );\n-        }\n+      negotiatedModifierProtocols.add(Pair.of(modifierProtocolResponse.protocolName(), Optional.empty()));\n     }\n \n-    @Override\n-    public void handle( SwitchOverResponse response )\n+    sendSwitchOverRequestIfReady();\n+  }\n+\n+  private void sendSwitchOverRequestIfReady()\n+  {\n+    if (negotiatedApplicationProtocol != null && negotiatedModifierProtocols.size() == supportedModifierProtocols.size())\n     {\n-        ensureMagic();\n-        if ( protocolStack == null )\n-        {\n-            decline( \"Attempted to switch over when protocol stack not established\" );\n-        }\n-        else if ( response.status() != StatusCode.SUCCESS )\n-        {\n-            decline( \"Server failed to switch over\" );\n-        }\n-        else\n-        {\n-            future.complete( protocolStack );\n-        }\n+      List<ModifierProtocol> agreedModifierProtocols = negotiatedModifierProtocols\n+          .stream()\n+          .map(Pair::other)\n+          .flatMap(Streams::ofOptional)\n+          .collect(Collectors.toList());\n+\n+      protocolStack = new ProtocolStack(negotiatedApplicationProtocol, agreedModifierProtocols);\n+      List<Pair<String, String>> switchOverModifierProtocols =\n+          agreedModifierProtocols\n+              .stream()\n+              .map(protocol -> Pair.of(protocol.category(), protocol.implementation()))\n+              .collect(Collectors.toList());\n+\n+      channel.writeAndFlush(\n+          new SwitchOverRequest(\n+              negotiatedApplicationProtocol.category(),\n+              negotiatedApplicationProtocol.implementation(),\n+              switchOverModifierProtocols));\n     }\n+  }\n \n-    boolean failIfNotDone( String message )\n+  @Override\n+  public void handle(SwitchOverResponse response)\n+  {\n+    ensureMagic();\n+    if (protocolStack == null)\n+    {\n+      decline(\"Attempted to switch over when protocol stack not established\");\n+    } else if (response.status() != StatusCode.SUCCESS)\n     {\n-        if ( !future.isDone() )\n-        {\n-            decline( message );\n-            return true;\n-        }\n-        return false;\n+      decline(\"Server failed to switch over\");\n+    } else\n+    {\n+      future.complete(protocolStack);\n     }\n+  }\n \n-    private void decline( String message )\n+  boolean failIfNotDone(String message)\n+  {\n+    if (!future.isDone())\n     {\n-        future.completeExceptionally( new ClientHandshakeException( message, negotiatedApplicationProtocol, negotiatedModifierProtocols ) );\n+      decline(message);\n+      return true;\n     }\n+    return false;\n+  }\n+\n+  private void decline(String message)\n+  {\n+    future.completeExceptionally(new ClientHandshakeException(message, negotiatedApplicationProtocol, negotiatedModifierProtocols));\n+  }\n }\n",
            "diff_size": 220
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3657/HandshakeClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3657/HandshakeClient.java\nindex dc472d443d7..6a025bb6562 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3657/HandshakeClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3657/HandshakeClient.java\n@@ -51,35 +51,27 @@ public class HandshakeClient implements ClientMessageHandler\n             ModifierProtocolRepository modifierProtocolRepository )\n     {\n         this.channel = channel;\n-\n-        this.applicationProtocolRepository = applicationProtocolRepository;\n+this.applicationProtocolRepository = applicationProtocolRepository;\n         this.supportedApplicationProtocol = applicationProtocolRepository.supportedProtocol();\n-\n-        this.modifierProtocolRepository = modifierProtocolRepository;\n+this.modifierProtocolRepository = modifierProtocolRepository;\n         this.supportedModifierProtocols = modifierProtocolRepository.supportedProtocols();\n \n         negotiatedModifierProtocols = new ArrayList<>( supportedModifierProtocols.size() );\n-\n-        channel.write( InitialMagicMessage.instance() );\n+channel.write( InitialMagicMessage.instance() );\n \n         sendProtocolRequests( channel, supportedApplicationProtocol, supportedModifierProtocols );\n-\n-        return future;\n+return future;\n     }\n \n-    private void sendProtocolRequests( Channel channel, ApplicationSupportedProtocols applicationProtocols,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols )\n+    private void sendProtocolRequests( Channel channel, ApplicationSupportedProtocols applicationProtocols, Collection<ModifierSupportedProtocols> supportedModifierProtocols )\n     {\n         supportedModifierProtocols.forEach( modifierProtocol ->\n-                {\n-                    ProtocolSelection<String,ModifierProtocol> protocolSelection =\n-                            modifierProtocolRepository.getAll( modifierProtocol.identifier(), modifierProtocol.versions() );\n-                    channel.write( new ModifierProtocolRequest( protocolSelection.identifier(), protocolSelection.versions() ) );\n+{\n+                    ProtocolSelection<String,ModifierProtocol> protocolSelection = modifierProtocolRepository.getAll( modifierProtocol.identifier(), modifierProtocol.versions() );\n+channel.write( new ModifierProtocolRequest( protocolSelection.identifier(), protocolSelection.versions() ) );\n                 } );\n-\n-        ProtocolSelection<Integer,ApplicationProtocol> applicationProtocolSelection =\n-                applicationProtocolRepository.getAll( applicationProtocols.identifier(), applicationProtocols.versions() );\n-        channel.writeAndFlush( new ApplicationProtocolRequest( applicationProtocolSelection.identifier(), applicationProtocolSelection.versions() ) );\n+ProtocolSelection<Integer,ApplicationProtocol> applicationProtocolSelection = applicationProtocolRepository.getAll( applicationProtocols.identifier(), applicationProtocols.versions() );\n+channel.writeAndFlush( new ApplicationProtocolRequest( applicationProtocolSelection.identifier(), applicationProtocolSelection.versions() ) );\n     }\n \n     private void ensureMagic()\n@@ -113,17 +105,12 @@ public class HandshakeClient implements ClientMessageHandler\n             return;\n         }\n \n-        Optional<ApplicationProtocol> protocol =\n-                applicationProtocolRepository.select( applicationProtocolResponse.protocolName(), applicationProtocolResponse.version() );\n-\n-        if ( !protocol.isPresent() )\n+        Optional<ApplicationProtocol> protocol = applicationProtocolRepository.select( applicationProtocolResponse.protocolName(), applicationProtocolResponse.version() );\n+if ( !protocol.isPresent() )\n         {\n-            ProtocolSelection<Integer,ApplicationProtocol> knownApplicationProtocolVersions =\n-                    applicationProtocolRepository.getAll( supportedApplicationProtocol.identifier(), supportedApplicationProtocol.versions() );\n-            decline( String.format(\n-                    \"Mismatch of application protocols between client and server: Server protocol %s version %d: Client protocol %s versions %s\",\n-                    applicationProtocolResponse.protocolName(), applicationProtocolResponse.version(),\n-                    knownApplicationProtocolVersions.identifier(), knownApplicationProtocolVersions.versions() ) );\n+            ProtocolSelection<Integer,ApplicationProtocol> knownApplicationProtocolVersions = applicationProtocolRepository.getAll( supportedApplicationProtocol.identifier(), supportedApplicationProtocol.versions() );\n+decline( String.format( \"Mismatch of application protocols between client and server: Server protocol %s version %d: Client protocol %s versions %s\",\n+                    applicationProtocolResponse.protocolName(), applicationProtocolResponse.version(), knownApplicationProtocolVersions.identifier(), knownApplicationProtocolVersions.versions() ) );\n         }\n         else\n         {\n@@ -139,9 +126,8 @@ public class HandshakeClient implements ClientMessageHandler\n         ensureMagic();\n         if ( modifierProtocolResponse.statusCode() == StatusCode.SUCCESS )\n         {\n-            Optional<ModifierProtocol> selectedModifierProtocol =\n-                    modifierProtocolRepository.select( modifierProtocolResponse.protocolName(), modifierProtocolResponse.version() );\n-            negotiatedModifierProtocols.add( Pair.of( modifierProtocolResponse.protocolName(), selectedModifierProtocol ) );\n+            Optional<ModifierProtocol> selectedModifierProtocol = modifierProtocolRepository.select( modifierProtocolResponse.protocolName(), modifierProtocolResponse.version() );\n+negotiatedModifierProtocols.add( Pair.of( modifierProtocolResponse.protocolName(), selectedModifierProtocol ) );\n         }\n         else\n         {\n@@ -155,25 +141,12 @@ public class HandshakeClient implements ClientMessageHandler\n     {\n         if ( negotiatedApplicationProtocol != null && negotiatedModifierProtocols.size() == supportedModifierProtocols.size() )\n         {\n-            List<ModifierProtocol> agreedModifierProtocols = negotiatedModifierProtocols\n-                    .stream()\n-                    .map( Pair::other )\n-                    .flatMap( Streams::ofOptional )\n-                    .collect( Collectors.toList() );\n-\n-            protocolStack = new ProtocolStack( negotiatedApplicationProtocol, agreedModifierProtocols );\n+            List<ModifierProtocol> agreedModifierProtocols = negotiatedModifierProtocols.stream().map( Pair::other ).flatMap( Streams::ofOptional ).collect( Collectors.toList() );\n+protocolStack = new ProtocolStack( negotiatedApplicationProtocol, agreedModifierProtocols );\n             List<Pair<String,String>> switchOverModifierProtocols =\n-                    agreedModifierProtocols\n-                            .stream()\n-                            .map( protocol -> Pair.of( protocol.category(), protocol.implementation() ) )\n-                            .collect( Collectors.toList() );\n-\n-            channel.writeAndFlush(\n-                    new SwitchOverRequest(\n-                            negotiatedApplicationProtocol.category(),\n-                            negotiatedApplicationProtocol.implementation(),\n-                            switchOverModifierProtocols ) );\n-        }\n+                    agreedModifierProtocols.stream().map( protocol -> Pair.of( protocol.category(), protocol.implementation() ) ).collect( Collectors.toList() );\n+channel.writeAndFlush( new SwitchOverRequest( negotiatedApplicationProtocol.category(), negotiatedApplicationProtocol.implementation(), switchOverModifierProtocols ) );\n+    }\n     }\n \n     @Override\n@@ -208,4 +181,4 @@ public class HandshakeClient implements ClientMessageHandler\n     {\n         future.completeExceptionally( new ClientHandshakeException( message, negotiatedApplicationProtocol, negotiatedModifierProtocols ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 340).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "column": "51",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3657/HandshakeClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3657/HandshakeClient.java\nindex dc472d443d7..0a29404f5b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3657/HandshakeClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3657/HandshakeClient.java\n@@ -25,13 +25,11 @@ import java.util.List;\n import java.util.Optional;\n import java.util.concurrent.CompletableFuture;\n import java.util.stream.Collectors;\n-\n import org.neo4j.causalclustering.messaging.Channel;\n import org.neo4j.causalclustering.protocol.Protocol.ApplicationProtocol;\n import org.neo4j.causalclustering.protocol.Protocol.ModifierProtocol;\n import org.neo4j.helpers.collection.Pair;\n import org.neo4j.stream.Streams;\n-\n import static org.neo4j.causalclustering.protocol.handshake.StatusCode.SUCCESS;\n \n public class HandshakeClient implements ClientMessageHandler\n@@ -47,44 +45,33 @@ public class HandshakeClient implements ClientMessageHandler\n     private CompletableFuture<ProtocolStack> future = new CompletableFuture<>();\n     private boolean magicReceived;\n \n-    public CompletableFuture<ProtocolStack> initiate( Channel channel, ApplicationProtocolRepository applicationProtocolRepository,\n-            ModifierProtocolRepository modifierProtocolRepository )\n+    public CompletableFuture<ProtocolStack> initiate( Channel channel, ApplicationProtocolRepository applicationProtocolRepository, ModifierProtocolRepository modifierProtocolRepository )\n     {\n         this.channel = channel;\n-\n         this.applicationProtocolRepository = applicationProtocolRepository;\n         this.supportedApplicationProtocol = applicationProtocolRepository.supportedProtocol();\n-\n         this.modifierProtocolRepository = modifierProtocolRepository;\n         this.supportedModifierProtocols = modifierProtocolRepository.supportedProtocols();\n-\n         negotiatedModifierProtocols = new ArrayList<>( supportedModifierProtocols.size() );\n-\n         channel.write( InitialMagicMessage.instance() );\n-\n         sendProtocolRequests( channel, supportedApplicationProtocol, supportedModifierProtocols );\n-\n         return future;\n     }\n \n-    private void sendProtocolRequests( Channel channel, ApplicationSupportedProtocols applicationProtocols,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols )\n+    private void sendProtocolRequests( Channel channel, ApplicationSupportedProtocols applicationProtocols, Collection<ModifierSupportedProtocols> supportedModifierProtocols )\n     {\n         supportedModifierProtocols.forEach( modifierProtocol ->\n-                {\n-                    ProtocolSelection<String,ModifierProtocol> protocolSelection =\n-                            modifierProtocolRepository.getAll( modifierProtocol.identifier(), modifierProtocol.versions() );\n-                    channel.write( new ModifierProtocolRequest( protocolSelection.identifier(), protocolSelection.versions() ) );\n-                } );\n-\n-        ProtocolSelection<Integer,ApplicationProtocol> applicationProtocolSelection =\n-                applicationProtocolRepository.getAll( applicationProtocols.identifier(), applicationProtocols.versions() );\n+                                            {\n+                                                ProtocolSelection<String,ModifierProtocol> protocolSelection = modifierProtocolRepository.getAll( modifierProtocol.identifier(), modifierProtocol.versions() );\n+                                                channel.write( new ModifierProtocolRequest( protocolSelection.identifier(), protocolSelection.versions() ) );\n+                                            } );\n+        ProtocolSelection<Integer,ApplicationProtocol> applicationProtocolSelection = applicationProtocolRepository.getAll( applicationProtocols.identifier(), applicationProtocols.versions() );\n         channel.writeAndFlush( new ApplicationProtocolRequest( applicationProtocolSelection.identifier(), applicationProtocolSelection.versions() ) );\n     }\n \n     private void ensureMagic()\n     {\n-        if ( !magicReceived )\n+        if ( ! magicReceived )\n         {\n             decline( \"Magic value not received.\" );\n             throw new IllegalStateException( \"Magic value not received.\" );\n@@ -94,7 +81,7 @@ public class HandshakeClient implements ClientMessageHandler\n     @Override\n     public void handle( InitialMagicMessage magicMessage )\n     {\n-        if ( !magicMessage.isCorrectMagic() )\n+        if ( ! magicMessage.isCorrectMagic() )\n         {\n             decline( \"Incorrect magic value received\" );\n         }\n@@ -113,22 +100,15 @@ public class HandshakeClient implements ClientMessageHandler\n             return;\n         }\n \n-        Optional<ApplicationProtocol> protocol =\n-                applicationProtocolRepository.select( applicationProtocolResponse.protocolName(), applicationProtocolResponse.version() );\n-\n-        if ( !protocol.isPresent() )\n+        Optional<ApplicationProtocol> protocol = applicationProtocolRepository.select( applicationProtocolResponse.protocolName(), applicationProtocolResponse.version() );\n+        if ( ! protocol.isPresent() )\n         {\n-            ProtocolSelection<Integer,ApplicationProtocol> knownApplicationProtocolVersions =\n-                    applicationProtocolRepository.getAll( supportedApplicationProtocol.identifier(), supportedApplicationProtocol.versions() );\n-            decline( String.format(\n-                    \"Mismatch of application protocols between client and server: Server protocol %s version %d: Client protocol %s versions %s\",\n-                    applicationProtocolResponse.protocolName(), applicationProtocolResponse.version(),\n-                    knownApplicationProtocolVersions.identifier(), knownApplicationProtocolVersions.versions() ) );\n+            ProtocolSelection<Integer,ApplicationProtocol> knownApplicationProtocolVersions = applicationProtocolRepository.getAll( supportedApplicationProtocol.identifier(), supportedApplicationProtocol.versions() );\n+            decline( String.format( \"Mismatch of application protocols between client and server: Server protocol %s version %d: Client protocol %s versions %s\", applicationProtocolResponse.protocolName(), applicationProtocolResponse.version(), knownApplicationProtocolVersions.identifier(), knownApplicationProtocolVersions.versions() ) );\n         }\n         else\n         {\n             negotiatedApplicationProtocol = protocol.get();\n-\n             sendSwitchOverRequestIfReady();\n         }\n     }\n@@ -139,8 +119,7 @@ public class HandshakeClient implements ClientMessageHandler\n         ensureMagic();\n         if ( modifierProtocolResponse.statusCode() == StatusCode.SUCCESS )\n         {\n-            Optional<ModifierProtocol> selectedModifierProtocol =\n-                    modifierProtocolRepository.select( modifierProtocolResponse.protocolName(), modifierProtocolResponse.version() );\n+            Optional<ModifierProtocol> selectedModifierProtocol = modifierProtocolRepository.select( modifierProtocolResponse.protocolName(), modifierProtocolResponse.version() );\n             negotiatedModifierProtocols.add( Pair.of( modifierProtocolResponse.protocolName(), selectedModifierProtocol ) );\n         }\n         else\n@@ -153,26 +132,12 @@ public class HandshakeClient implements ClientMessageHandler\n \n     private void sendSwitchOverRequestIfReady()\n     {\n-        if ( negotiatedApplicationProtocol != null && negotiatedModifierProtocols.size() == supportedModifierProtocols.size() )\n+        if ( negotiatedApplicationProtocol != null&& negotiatedModifierProtocols.size() == supportedModifierProtocols.size() )\n         {\n-            List<ModifierProtocol> agreedModifierProtocols = negotiatedModifierProtocols\n-                    .stream()\n-                    .map( Pair::other )\n-                    .flatMap( Streams::ofOptional )\n-                    .collect( Collectors.toList() );\n-\n+            List<ModifierProtocol> agreedModifierProtocols = negotiatedModifierProtocols.stream().map( Pair::other ).flatMap( Streams::ofOptional ).collect( Collectors.toList() );\n             protocolStack = new ProtocolStack( negotiatedApplicationProtocol, agreedModifierProtocols );\n-            List<Pair<String,String>> switchOverModifierProtocols =\n-                    agreedModifierProtocols\n-                            .stream()\n-                            .map( protocol -> Pair.of( protocol.category(), protocol.implementation() ) )\n-                            .collect( Collectors.toList() );\n-\n-            channel.writeAndFlush(\n-                    new SwitchOverRequest(\n-                            negotiatedApplicationProtocol.category(),\n-                            negotiatedApplicationProtocol.implementation(),\n-                            switchOverModifierProtocols ) );\n+            List<Pair<String,String>> switchOverModifierProtocols = agreedModifierProtocols.stream().map( protocol -> Pair.of( protocol.category(), protocol.implementation() ) ).collect( Collectors.toList() );\n+            channel.writeAndFlush( new SwitchOverRequest( negotiatedApplicationProtocol.category(), negotiatedApplicationProtocol.implementation(), switchOverModifierProtocols ) );\n         }\n     }\n \n@@ -184,23 +149,25 @@ public class HandshakeClient implements ClientMessageHandler\n         {\n             decline( \"Attempted to switch over when protocol stack not established\" );\n         }\n-        else if ( response.status() != StatusCode.SUCCESS )\n+        else\n+        if ( response.status() != StatusCode.SUCCESS )\n         {\n             decline( \"Server failed to switch over\" );\n         }\n         else\n-        {\n-            future.complete( protocolStack );\n-        }\n+            {\n+                future.complete( protocolStack );\n+            }\n     }\n \n     boolean failIfNotDone( String message )\n     {\n-        if ( !future.isDone() )\n+        if ( ! future.isDone() )\n         {\n             decline( message );\n             return true;\n         }\n+\n         return false;\n     }\n \n@@ -208,4 +175,4 @@ public class HandshakeClient implements ClientMessageHandler\n     {\n         future.completeExceptionally( new ClientHandshakeException( message, negotiatedApplicationProtocol, negotiatedModifierProtocols ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
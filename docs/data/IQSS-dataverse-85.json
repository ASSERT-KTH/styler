{
    "project_name": "IQSS-dataverse",
    "error_id": "85",
    "information": {
        "errors": [
            {
                "line": "16",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class FileSizeChecker {\n\n\t/* This method turns a number of bytes into a human readable version\n\t */\n\tpublic static String bytesToHumanReadable(long v) {\n\t\treturn bytesToHumanReadable(v, 1);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/85/FileSizeChecker.java\nindex 06b3f467867..1e7c97e87c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/85/FileSizeChecker.java\n@@ -13,9 +13,9 @@ import edu.harvard.iq.dataverse.util.BundleUtil;\n  */\n public class FileSizeChecker {\n \n-\t/* This method turns a number of bytes into a human readable version\n+    /* This method turns a number of bytes into a human readable version\n \t */\n-\tpublic static String bytesToHumanReadable(long v) {\n+public static String bytesToHumanReadable(long v) {\n \t\treturn bytesToHumanReadable(v, 1);\n \t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/85/FileSizeChecker.java\nindex 06b3f467867..9a3354784cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/85/FileSizeChecker.java\n@@ -3,34 +3,37 @@\n  * To change this template file, choose Tools | Templates\n  * and open the template in the editor.\n  */\n+\n package edu.harvard.iq.dataverse.datasetutility;\n \n import edu.harvard.iq.dataverse.util.BundleUtil;\n \n /**\n  * Convenience methods for checking max. file size\n+ *\n  * @author rmp553\n  */\n public class FileSizeChecker {\n \n-\t/* This method turns a number of bytes into a human readable version\n-\t */\n-\tpublic static String bytesToHumanReadable(long v) {\n-\t\treturn bytesToHumanReadable(v, 1);\n-\t}\n+  /* This method turns a number of bytes into a human readable version\n+   */\n+  public static String bytesToHumanReadable(long v) {\n+    return bytesToHumanReadable(v, 1);\n+  }\n \n-\t/* This method turns a number of bytes into a human readable version\n-\t * with figs decimal places\n-\t */\n-\tpublic static String bytesToHumanReadable(long v, int figs) {\n-\t\tif (v < 1024) {\n-\t\t\treturn v +  \" \"  + BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n-\t\t}\n-\t\t// 63 - because long has 63 binary digits\n-\t\tint trailingBin0s = (63 - Long.numberOfLeadingZeros(v))/10;\n-\t\t//String base = \"%.\"+figs+\"f %s\"+ BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n-\t\treturn String.format(\"%.\"+figs+\"f %s\"+ BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\"), (double)v / (1L << (trailingBin0s*10)),\n-\t\t\t\t\" KMGTPE\".charAt(trailingBin0s));\n-\t}\n+  /* This method turns a number of bytes into a human readable version\n+   * with figs decimal places\n+   */\n+  public static String bytesToHumanReadable(long v, int figs) {\n+    if (v < 1024) {\n+      return v + \" \" + BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n+    }\n+    // 63 - because long has 63 binary digits\n+    int trailingBin0s = (63 - Long.numberOfLeadingZeros(v)) / 10;\n+    //String base = \"%.\"+figs+\"f %s\"+ BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n+    return String.format(\"%.\" + figs + \"f %s\" + BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\"),\n+      (double) v / (1L << (trailingBin0s * 10)),\n+      \" KMGTPE\".charAt(trailingBin0s));\n+  }\n \n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/85/FileSizeChecker.java\nindex 06b3f467867..4846d0fa140 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/85/FileSizeChecker.java\n@@ -11,26 +11,30 @@ import edu.harvard.iq.dataverse.util.BundleUtil;\n  * Convenience methods for checking max. file size\n  * @author rmp553\n  */\n+\n+\n public class FileSizeChecker {\n \n-\t/* This method turns a number of bytes into a human readable version\n-\t */\n-\tpublic static String bytesToHumanReadable(long v) {\n-\t\treturn bytesToHumanReadable(v, 1);\n-\t}\n-\n-\t/* This method turns a number of bytes into a human readable version\n-\t * with figs decimal places\n-\t */\n-\tpublic static String bytesToHumanReadable(long v, int figs) {\n-\t\tif (v < 1024) {\n-\t\t\treturn v +  \" \"  + BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n-\t\t}\n-\t\t// 63 - because long has 63 binary digits\n-\t\tint trailingBin0s = (63 - Long.numberOfLeadingZeros(v))/10;\n-\t\t//String base = \"%.\"+figs+\"f %s\"+ BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n-\t\treturn String.format(\"%.\"+figs+\"f %s\"+ BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\"), (double)v / (1L << (trailingBin0s*10)),\n-\t\t\t\t\" KMGTPE\".charAt(trailingBin0s));\n-\t}\n-\n-}\n+    /* This method turns a number of bytes into a human readable version\n+     */\n+\n+    public static String bytesToHumanReadable(long v) {\n+        return bytesToHumanReadable(v, 1);\n+    }\n+\n+    /* This method turns a number of bytes into a human readable version\n+     * with figs decimal places\n+     */\n+\n+    public static String bytesToHumanReadable(long v, int figs) {\n+        if (v < 1024) {\n+            return v + \" \" + BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n+        }\n+        // 63 - because long has 63 binary digits\n+\n+        int trailingBin0s = (63 - Long.numberOfLeadingZeros(v)) / 10;\n+        //String base = \"%.\"+figs+\"f %s\"+ BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\");\n+        return String.format(\"%.\" + figs + \"f %s\" + BundleUtil.getStringFromBundle(\"file.addreplace.error.byte_abrev\"), (double)v / (1L<<(trailingBin0s * 10)), \" KMGTPE\".charAt(trailingBin0s));\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/85/FileSizeChecker.java\nindex 06b3f467867..1e7c97e87c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/85/FileSizeChecker.java\n@@ -13,9 +13,9 @@ import edu.harvard.iq.dataverse.util.BundleUtil;\n  */\n public class FileSizeChecker {\n \n-\t/* This method turns a number of bytes into a human readable version\n+    /* This method turns a number of bytes into a human readable version\n \t */\n-\tpublic static String bytesToHumanReadable(long v) {\n+public static String bytesToHumanReadable(long v) {\n \t\treturn bytesToHumanReadable(v, 1);\n \t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/85/FileSizeChecker.java\nindex 06b3f467867..d1326695a3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/85/FileSizeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/85/FileSizeChecker.java\n@@ -13,9 +13,9 @@ import edu.harvard.iq.dataverse.util.BundleUtil;\n  */\n public class FileSizeChecker {\n \n-\t/* This method turns a number of bytes into a human readable version\n+    /* This method turns a number of bytes into a human readable version\n \t */\n-\tpublic static String bytesToHumanReadable(long v) {\n+ public static String bytesToHumanReadable(long v) {\n \t\treturn bytesToHumanReadable(v, 1);\n \t}\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
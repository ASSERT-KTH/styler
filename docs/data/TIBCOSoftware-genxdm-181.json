{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "181",
    "information": {
        "errors": [
            {
                "line": "52",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "{\n    public AxiomSAProcessingContext(final AxiomProcessingContext context)\n\t{\n\t    this.context = PreCondition.assertNotNull(context, \"context\");\n\t\tfinal SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n\t\tthis.cache = cacheFactory.newSchemaCache();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "54",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/181/AxiomSAProcessingContext.java\nindex d9f0e6e8596..efe92ff7144 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/181/AxiomSAProcessingContext.java\n@@ -49,8 +49,8 @@ public final class AxiomSAProcessingContext\n     implements TypedContext<Object, XmlAtom>\n {\n     public AxiomSAProcessingContext(final AxiomProcessingContext context)\n-\t{\n-\t    this.context = PreCondition.assertNotNull(context, \"context\");\n+{\n+     this.context = PreCondition.assertNotNull(context, \"context\");\n \t\tfinal SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n \t\tthis.cache = cacheFactory.newSchemaCache();\n \t\tthis.metaBridge = new TypesBridgeImpl();\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/181/AxiomSAProcessingContext.java\nindex d9f0e6e8596..1683b396248 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/181/AxiomSAProcessingContext.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.bridge.axiom.enhanced;\n \n import java.net.URI;\n@@ -45,53 +46,46 @@ import org.genxdm.typed.types.AtomBridge;\n import org.genxdm.typed.types.TypesBridge;\n import org.genxdm.xs.Schema;\n \n-public final class AxiomSAProcessingContext \n-    implements TypedContext<Object, XmlAtom>\n-{\n-    public AxiomSAProcessingContext(final AxiomProcessingContext context)\n-\t{\n-\t    this.context = PreCondition.assertNotNull(context, \"context\");\n-\t\tfinal SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n-\t\tthis.cache = cacheFactory.newSchemaCache();\n-\t\tthis.metaBridge = new TypesBridgeImpl();\n+public final class AxiomSAProcessingContext\n+    implements TypedContext<Object, XmlAtom> {\n+    public AxiomSAProcessingContext(final AxiomProcessingContext context) {\n+        this.context = PreCondition.assertNotNull(context, \"context\");\n+        final SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n+        this.cache = cacheFactory.newSchemaCache();\n+        this.metaBridge = new TypesBridgeImpl();\n         this.atomBridge = new XmlAtomBridge(this.cache);\n-\t\tEnumSet<CoreModelDecoration> delegations = EnumSet.noneOf(CoreModelDecoration.class);\n-\t\tdelegations.add(CoreModelDecoration.CHILD_AXIS);\n-\t\tdelegations.add(CoreModelDecoration.CHILD_ELEMENTS);\n-\t\tthis.model = new CoreModelDecorator<Object, XmlAtom>(delegations, new AxiomSAModel(new org.genxdm.bridge.axiom.AxiomModel(), atomBridge), atomBridge);\n-\t}\n-\t\n-\tpublic AtomBridge<XmlAtom> getAtomBridge()\n-\t{\n-\t\treturn atomBridge;\n-\t}\n-\n-    public TypesBridge getTypesBridge()\n-\t{\n-\t\treturn metaBridge;\n-\t}\n-\n-    public Schema getSchema()\n-    {\n-    \treturn cache;\n+        EnumSet<CoreModelDecoration> delegations = EnumSet.noneOf(CoreModelDecoration.class);\n+        delegations.add(CoreModelDecoration.CHILD_AXIS);\n+        delegations.add(CoreModelDecoration.CHILD_ELEMENTS);\n+        this.model = new CoreModelDecorator<Object, XmlAtom>(delegations,\n+            new AxiomSAModel(new org.genxdm.bridge.axiom.AxiomModel(), atomBridge), atomBridge);\n+    }\n+\n+    public AtomBridge<XmlAtom> getAtomBridge() {\n+        return atomBridge;\n+    }\n+\n+    public TypesBridge getTypesBridge() {\n+        return metaBridge;\n+    }\n+\n+    public Schema getSchema() {\n+        return cache;\n+    }\n+\n+    public TypedModel<Object, XmlAtom> getModel() {\n+        return model;\n+    }\n+\n+    public AxiomProcessingContext getProcessingContext() {\n+        return context;\n     }\n-\tpublic TypedModel<Object, XmlAtom> getModel()\n-\t{\n-\t\treturn model;\n-\t}\n-\n-\tpublic AxiomProcessingContext getProcessingContext()\n-\t{\n-\t    return context;\n-\t}\n-\n-\tpublic TypedCursor<Object, XmlAtom> newCursor(Object node)\n-\t{\n-\t\treturn new CursorOnTypedModel<Object, XmlAtom>(node, model);\n-\t}\n-\n-    public SequenceBuilder<Object, XmlAtom> newSequenceBuilder()\n-    {\n+\n+    public TypedCursor<Object, XmlAtom> newCursor(Object node) {\n+        return new CursorOnTypedModel<Object, XmlAtom>(node, model);\n+    }\n+\n+    public SequenceBuilder<Object, XmlAtom> newSequenceBuilder() {\n         // TODO: this is temporary; it enables namespace fixup that we\n         // need, but does so by piling on the virtual calls.  fix is\n         // either combining the filter and the wrapper, or pulling the\n@@ -99,29 +93,34 @@ public final class AxiomSAProcessingContext\n         SequenceFilter<XmlAtom> filter = new NamespaceFixupSequenceFilter<XmlAtom>();\n         filter.setSchema(cache);\n         filter.setAtomBridge(atomBridge);\n-\t    return new FilteredSequenceBuilder<Object, XmlAtom>(filter, new AxiomSequenceBuilder(this, context.getOMFactory(), true));\n+        return new FilteredSequenceBuilder<Object, XmlAtom>(filter,\n+            new AxiomSequenceBuilder(this, context.getOMFactory(), true));\n     }\n-    \n+\n     @Override\n-    public TypedDocumentHandler<Object, XmlAtom> newDocumentHandler(SAXValidator<XmlAtom> validator, XMLReporter reporter, Resolver resolver)\n-    {\n+    public TypedDocumentHandler<Object, XmlAtom> newDocumentHandler(SAXValidator<XmlAtom> validator,\n+                                                                    XMLReporter reporter,\n+                                                                    Resolver resolver) {\n         // TODO Auto-generated method stub\n         return new ValidatingDocumentHandler<Object, XmlAtom>(this, validator, reporter, resolver);\n     }\n \n     @Override\n-    public Object validate(Object source, ValidationHandler<XmlAtom> validator, URI namespace)\n-    {\n+    public Object validate(Object source, ValidationHandler<XmlAtom> validator, URI namespace) {\n         // TODO: implement\n         throw new UnsupportedOperationException();\n     }\n-    \n+\n     private final AxiomProcessingContext context;\n-\tprivate final AtomBridge<XmlAtom> atomBridge;\n-\tprivate final Schema cache;\n-\t\n-\t@SuppressWarnings(\"unused\")\n-\tprivate boolean locked;\n-\tprivate final TypesBridge metaBridge;\n-\tprivate final TypedModel<Object, XmlAtom> model;\n+\n+    private final AtomBridge<XmlAtom> atomBridge;\n+\n+    private final Schema cache;\n+\n+    @SuppressWarnings(\"unused\")\n+    private boolean locked;\n+\n+    private final TypesBridge metaBridge;\n+\n+    private final TypedModel<Object, XmlAtom> model;\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/181/AxiomSAProcessingContext.java\nindex d9f0e6e8596..edbf346a674 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/181/AxiomSAProcessingContext.java\n@@ -49,36 +49,37 @@ public final class AxiomSAProcessingContext\n     implements TypedContext<Object, XmlAtom>\n {\n     public AxiomSAProcessingContext(final AxiomProcessingContext context)\n-\t{\n+{\n \t    this.context = PreCondition.assertNotNull(context, \"context\");\n-\t\tfinal SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n+final SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n \t\tthis.cache = cacheFactory.newSchemaCache();\n \t\tthis.metaBridge = new TypesBridgeImpl();\n-        this.atomBridge = new XmlAtomBridge(this.cache);\n-\t\tEnumSet<CoreModelDecoration> delegations = EnumSet.noneOf(CoreModelDecoration.class);\n+this.atomBridge = new XmlAtomBridge(this.cache);\n+EnumSet<CoreModelDecoration> delegations = EnumSet.noneOf(CoreModelDecoration.class);\n \t\tdelegations.add(CoreModelDecoration.CHILD_AXIS);\n \t\tdelegations.add(CoreModelDecoration.CHILD_ELEMENTS);\n \t\tthis.model = new CoreModelDecorator<Object, XmlAtom>(delegations, new AxiomSAModel(new org.genxdm.bridge.axiom.AxiomModel(), atomBridge), atomBridge);\n-\t}\n-\t\n-\tpublic AtomBridge<XmlAtom> getAtomBridge()\n-\t{\n-\t\treturn atomBridge;\n-\t}\n+    }\n \n-    public TypesBridge getTypesBridge()\n-\t{\n-\t\treturn metaBridge;\n-\t}\n+public AtomBridge<XmlAtom> getAtomBridge()\n+{\n+    return atomBridge;\n+    }\n \n-    public Schema getSchema()\n+public TypesBridge getTypesBridge()\n+{\n+    return metaBridge;\n+    }\n+\n+public Schema getSchema()\n     {\n-    \treturn cache;\n+    return cache;\n     }\n-\tpublic TypedModel<Object, XmlAtom> getModel()\n+\n+public TypedModel<Object, XmlAtom> getModel()\n \t{\n-\t\treturn model;\n-\t}\n+    return model;\n+    }\n \n \tpublic AxiomProcessingContext getProcessingContext()\n \t{\n@@ -87,10 +88,10 @@ public final class AxiomSAProcessingContext\n \n \tpublic TypedCursor<Object, XmlAtom> newCursor(Object node)\n \t{\n-\t\treturn new CursorOnTypedModel<Object, XmlAtom>(node, model);\n-\t}\n+    return new CursorOnTypedModel<Object, XmlAtom>(node, model);\n+    }\n \n-    public SequenceBuilder<Object, XmlAtom> newSequenceBuilder()\n+public SequenceBuilder<Object, XmlAtom> newSequenceBuilder()\n     {\n         // TODO: this is temporary; it enables namespace fixup that we\n         // need, but does so by piling on the virtual calls.  fix is\n@@ -99,7 +100,7 @@ public final class AxiomSAProcessingContext\n         SequenceFilter<XmlAtom> filter = new NamespaceFixupSequenceFilter<XmlAtom>();\n         filter.setSchema(cache);\n         filter.setAtomBridge(atomBridge);\n-\t    return new FilteredSequenceBuilder<Object, XmlAtom>(filter, new AxiomSequenceBuilder(this, context.getOMFactory(), true));\n+return new FilteredSequenceBuilder<Object, XmlAtom>(filter, new AxiomSequenceBuilder(this, context.getOMFactory(), true));\n     }\n     \n     @Override\n@@ -117,11 +118,11 @@ public final class AxiomSAProcessingContext\n     }\n     \n     private final AxiomProcessingContext context;\n-\tprivate final AtomBridge<XmlAtom> atomBridge;\n+private final AtomBridge<XmlAtom> atomBridge;\n \tprivate final Schema cache;\n-\t\n-\t@SuppressWarnings(\"unused\")\n-\tprivate boolean locked;\n+\n+@SuppressWarnings(\"unused\")\n+    private boolean locked;\n \tprivate final TypesBridge metaBridge;\n \tprivate final TypedModel<Object, XmlAtom> model;\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/181/AxiomSAProcessingContext.java\nindex d9f0e6e8596..f46eebd688c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/181/AxiomSAProcessingContext.java\n@@ -17,9 +17,7 @@ package org.genxdm.bridge.axiom.enhanced;\n \n import java.net.URI;\n import java.util.EnumSet;\n-\n import javax.xml.stream.XMLReporter;\n-\n import org.genxdm.bridge.axiom.AxiomProcessingContext;\n import org.genxdm.bridgekit.atoms.XmlAtom;\n import org.genxdm.bridgekit.atoms.XmlAtomBridge;\n@@ -45,50 +43,51 @@ import org.genxdm.typed.types.AtomBridge;\n import org.genxdm.typed.types.TypesBridge;\n import org.genxdm.xs.Schema;\n \n-public final class AxiomSAProcessingContext \n-    implements TypedContext<Object, XmlAtom>\n+public final class AxiomSAProcessingContext implements TypedContext<Object, XmlAtom>\n {\n     public AxiomSAProcessingContext(final AxiomProcessingContext context)\n-\t{\n-\t    this.context = PreCondition.assertNotNull(context, \"context\");\n-\t\tfinal SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n-\t\tthis.cache = cacheFactory.newSchemaCache();\n-\t\tthis.metaBridge = new TypesBridgeImpl();\n+    {\n+        this.context = PreCondition.assertNotNull(context, \"context\");\n+\n+        final SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n+        this.cache = cacheFactory.newSchemaCache();\n+        this.metaBridge = new TypesBridgeImpl();\n         this.atomBridge = new XmlAtomBridge(this.cache);\n-\t\tEnumSet<CoreModelDecoration> delegations = EnumSet.noneOf(CoreModelDecoration.class);\n-\t\tdelegations.add(CoreModelDecoration.CHILD_AXIS);\n-\t\tdelegations.add(CoreModelDecoration.CHILD_ELEMENTS);\n-\t\tthis.model = new CoreModelDecorator<Object, XmlAtom>(delegations, new AxiomSAModel(new org.genxdm.bridge.axiom.AxiomModel(), atomBridge), atomBridge);\n-\t}\n-\t\n-\tpublic AtomBridge<XmlAtom> getAtomBridge()\n-\t{\n-\t\treturn atomBridge;\n-\t}\n+        EnumSet<CoreModelDecoration> delegations = EnumSet.noneOf(CoreModelDecoration.class);\n+        delegations.add(CoreModelDecoration.CHILD_AXIS);\n+        delegations.add(CoreModelDecoration.CHILD_ELEMENTS);\n+        this.model = new CoreModelDecorator<Object, XmlAtom>(delegations, new AxiomSAModel(new org.genxdm.bridge.axiom.AxiomModel(), atomBridge), atomBridge);\n+    }\n+\n+    public AtomBridge<XmlAtom> getAtomBridge()\n+    {\n+        return atomBridge;\n+    }\n \n     public TypesBridge getTypesBridge()\n-\t{\n-\t\treturn metaBridge;\n-\t}\n+    {\n+        return metaBridge;\n+    }\n \n     public Schema getSchema()\n     {\n-    \treturn cache;\n+        return cache;\n     }\n-\tpublic TypedModel<Object, XmlAtom> getModel()\n-\t{\n-\t\treturn model;\n-\t}\n \n-\tpublic AxiomProcessingContext getProcessingContext()\n-\t{\n-\t    return context;\n-\t}\n+    public TypedModel<Object, XmlAtom> getModel()\n+    {\n+        return model;\n+    }\n+\n+    public AxiomProcessingContext getProcessingContext()\n+    {\n+        return context;\n+    }\n \n-\tpublic TypedCursor<Object, XmlAtom> newCursor(Object node)\n-\t{\n-\t\treturn new CursorOnTypedModel<Object, XmlAtom>(node, model);\n-\t}\n+    public TypedCursor<Object, XmlAtom> newCursor(Object node)\n+    {\n+        return new CursorOnTypedModel<Object, XmlAtom>(node, model);\n+    }\n \n     public SequenceBuilder<Object, XmlAtom> newSequenceBuilder()\n     {\n@@ -99,9 +98,9 @@ public final class AxiomSAProcessingContext\n         SequenceFilter<XmlAtom> filter = new NamespaceFixupSequenceFilter<XmlAtom>();\n         filter.setSchema(cache);\n         filter.setAtomBridge(atomBridge);\n-\t    return new FilteredSequenceBuilder<Object, XmlAtom>(filter, new AxiomSequenceBuilder(this, context.getOMFactory(), true));\n+        return new FilteredSequenceBuilder<Object, XmlAtom>(filter, new AxiomSequenceBuilder(this, context.getOMFactory(), true));\n     }\n-    \n+\n     @Override\n     public TypedDocumentHandler<Object, XmlAtom> newDocumentHandler(SAXValidator<XmlAtom> validator, XMLReporter reporter, Resolver resolver)\n     {\n@@ -115,13 +114,13 @@ public final class AxiomSAProcessingContext\n         // TODO: implement\n         throw new UnsupportedOperationException();\n     }\n-    \n+\n     private final AxiomProcessingContext context;\n-\tprivate final AtomBridge<XmlAtom> atomBridge;\n-\tprivate final Schema cache;\n-\t\n-\t@SuppressWarnings(\"unused\")\n-\tprivate boolean locked;\n-\tprivate final TypesBridge metaBridge;\n-\tprivate final TypedModel<Object, XmlAtom> model;\n-}\n+    private final AtomBridge<XmlAtom> atomBridge;\n+    private final Schema cache;\n+\n+    @SuppressWarnings(\"unused\")\n+    private boolean locked;\n+    private final TypesBridge metaBridge;\n+    private final TypedModel<Object, XmlAtom> model;\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "54",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/181/AxiomSAProcessingContext.java\nindex d9f0e6e8596..efe92ff7144 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/181/AxiomSAProcessingContext.java\n@@ -49,8 +49,8 @@ public final class AxiomSAProcessingContext\n     implements TypedContext<Object, XmlAtom>\n {\n     public AxiomSAProcessingContext(final AxiomProcessingContext context)\n-\t{\n-\t    this.context = PreCondition.assertNotNull(context, \"context\");\n+{\n+     this.context = PreCondition.assertNotNull(context, \"context\");\n \t\tfinal SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n \t\tthis.cache = cacheFactory.newSchemaCache();\n \t\tthis.metaBridge = new TypesBridgeImpl();\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "54",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/181/AxiomSAProcessingContext.java\nindex d9f0e6e8596..5ff12ab10f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/181/AxiomSAProcessingContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/181/AxiomSAProcessingContext.java\n@@ -49,8 +49,8 @@ public final class AxiomSAProcessingContext\n     implements TypedContext<Object, XmlAtom>\n {\n     public AxiomSAProcessingContext(final AxiomProcessingContext context)\n-\t{\n-\t    this.context = PreCondition.assertNotNull(context, \"context\");\n+        {\n+     this.context = PreCondition.assertNotNull(context, \"context\");\n \t\tfinal SchemaCacheFactory cacheFactory = new SchemaCacheFactory();\n \t\tthis.cache = cacheFactory.newSchemaCache();\n \t\tthis.metaBridge = new TypesBridgeImpl();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
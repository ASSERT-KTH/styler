{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3752",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3752/LoggingMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3752/LoggingMonitor.java\nindex 83d9d9d1f21..c40ca15325a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3752/LoggingMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3752/LoggingMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.index;\n \n import org.apache.commons.lang3.exception.ExceptionUtils;\n@@ -31,58 +32,58 @@ import static org.neo4j.helpers.Format.duration;\n \n public class LoggingMonitor implements IndexProvider.Monitor\n {\n-    private final Log log;\n+  private final Log log;\n \n-    public LoggingMonitor( Log log )\n-    {\n-        this.log = log;\n-    }\n+  public LoggingMonitor(Log log)\n+  {\n+    this.log = log;\n+  }\n \n-    @Override\n-    public void failedToOpenIndex( long indexId, SchemaIndexDescriptor schemaIndexDescriptor, String action, Exception cause )\n-    {\n-        log.error( \"Failed to open index:\" + indexId + \". \" + action, cause );\n-    }\n+  @Override\n+  public void failedToOpenIndex(long indexId, SchemaIndexDescriptor schemaIndexDescriptor, String action, Exception cause)\n+  {\n+    log.error(\"Failed to open index:\" + indexId + \". \" + action, cause);\n+  }\n \n-    @Override\n-    public void recoveryCleanupRegistered( File indexFile, SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        log.info( \"Schema index cleanup job registered: \" + indexDescription( indexFile, schemaIndexDescriptor ) );\n-    }\n+  @Override\n+  public void recoveryCleanupRegistered(File indexFile, SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    log.info(\"Schema index cleanup job registered: \" + indexDescription(indexFile, schemaIndexDescriptor));\n+  }\n \n-    @Override\n-    public void recoveryCleanupStarted( File indexFile, SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        log.info( \"Schema index cleanup job started: \" + indexDescription( indexFile, schemaIndexDescriptor ) );\n-    }\n+  @Override\n+  public void recoveryCleanupStarted(File indexFile, SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    log.info(\"Schema index cleanup job started: \" + indexDescription(indexFile, schemaIndexDescriptor));\n+  }\n \n-    @Override\n-    public void recoveryCleanupFinished( File indexFile, SchemaIndexDescriptor schemaIndexDescriptor,\n-            long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis )\n-    {\n-        StringJoiner joiner =\n-                new StringJoiner( \", \", \"Schema index cleanup job finished: \" + indexDescription( indexFile, schemaIndexDescriptor ) + \" \", \"\" );\n-        joiner.add( \"Number of pages visited: \" + numberOfPagesVisited );\n-        joiner.add( \"Number of cleaned crashed pointers: \" + numberOfCleanedCrashPointers );\n-        joiner.add( \"Time spent: \" + duration( durationMillis ) );\n-        log.info( joiner.toString() );\n-    }\n+  @Override\n+  public void recoveryCleanupFinished(File indexFile, SchemaIndexDescriptor schemaIndexDescriptor,\n+                                      long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis)\n+  {\n+    StringJoiner joiner =\n+        new StringJoiner(\", \", \"Schema index cleanup job finished: \" + indexDescription(indexFile, schemaIndexDescriptor) + \" \", \"\");\n+    joiner.add(\"Number of pages visited: \" + numberOfPagesVisited);\n+    joiner.add(\"Number of cleaned crashed pointers: \" + numberOfCleanedCrashPointers);\n+    joiner.add(\"Time spent: \" + duration(durationMillis));\n+    log.info(joiner.toString());\n+  }\n \n-    @Override\n-    public void recoveryCleanupClosed( File indexFile, SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        log.info( \"Schema index cleanup job closed: \" + indexDescription( indexFile, schemaIndexDescriptor ) );\n-    }\n+  @Override\n+  public void recoveryCleanupClosed(File indexFile, SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    log.info(\"Schema index cleanup job closed: \" + indexDescription(indexFile, schemaIndexDescriptor));\n+  }\n \n-    @Override\n-    public void recoveryCleanupFailed( File indexFile, SchemaIndexDescriptor schemaIndexDescriptor, Throwable throwable )\n-    {\n-        log.info( String.format( \"Schema index cleanup job failed: %s.%nCaused by: %s\",\n-                indexDescription( indexFile, schemaIndexDescriptor ), ExceptionUtils.getStackTrace( throwable ) ) );\n-    }\n+  @Override\n+  public void recoveryCleanupFailed(File indexFile, SchemaIndexDescriptor schemaIndexDescriptor, Throwable throwable)\n+  {\n+    log.info(String.format(\"Schema index cleanup job failed: %s.%nCaused by: %s\",\n+        indexDescription(indexFile, schemaIndexDescriptor), ExceptionUtils.getStackTrace(throwable)));\n+  }\n \n-    private String indexDescription( File indexFile, SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        return \"descriptor=\" + schemaIndexDescriptor.toString() + \", indexFile=\" + indexFile.getAbsolutePath();\n-    }\n+  private String indexDescription(File indexFile, SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    return \"descriptor=\" + schemaIndexDescriptor.toString() + \", indexFile=\" + indexFile.getAbsolutePath();\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3752/LoggingMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3752/LoggingMonitor.java\nindex 83d9d9d1f21..207283d0cd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3752/LoggingMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3752/LoggingMonitor.java\n@@ -60,9 +60,8 @@ public class LoggingMonitor implements IndexProvider.Monitor\n     public void recoveryCleanupFinished( File indexFile, SchemaIndexDescriptor schemaIndexDescriptor,\n             long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis )\n     {\n-        StringJoiner joiner =\n-                new StringJoiner( \", \", \"Schema index cleanup job finished: \" + indexDescription( indexFile, schemaIndexDescriptor ) + \" \", \"\" );\n-        joiner.add( \"Number of pages visited: \" + numberOfPagesVisited );\n+        StringJoiner joiner = new StringJoiner( \", \", \"Schema index cleanup job finished: \" + indexDescription( indexFile, schemaIndexDescriptor ) + \" \", \"\" );\n+joiner.add( \"Number of pages visited: \" + numberOfPagesVisited );\n         joiner.add( \"Number of cleaned crashed pointers: \" + numberOfCleanedCrashPointers );\n         joiner.add( \"Time spent: \" + duration( durationMillis ) );\n         log.info( joiner.toString() );\n@@ -85,4 +84,4 @@ public class LoggingMonitor implements IndexProvider.Monitor\n     {\n         return \"descriptor=\" + schemaIndexDescriptor.toString() + \", indexFile=\" + indexFile.getAbsolutePath();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1947",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1947/LogVersionUpgradeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1947/LogVersionUpgradeChecker.java\nindex 6303806b6dd..55d88bdb65c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1947/LogVersionUpgradeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1947/LogVersionUpgradeChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n@@ -35,24 +36,24 @@ import org.neo4j.kernel.recovery.LogTailScanner;\n  */\n public class LogVersionUpgradeChecker\n {\n-    private LogVersionUpgradeChecker()\n-    {\n-        throw new AssertionError( \"No instances allowed\" );\n-    }\n+  private LogVersionUpgradeChecker()\n+  {\n+    throw new AssertionError(\"No instances allowed\");\n+  }\n \n-    public static void check( LogTailScanner tailScanner, Config config ) throws UpgradeNotAllowedByConfigurationException\n+  public static void check(LogTailScanner tailScanner, Config config) throws UpgradeNotAllowedByConfigurationException\n+  {\n+    if (!config.get(GraphDatabaseSettings.allow_upgrade))\n     {\n-        if ( !config.get( GraphDatabaseSettings.allow_upgrade ) )\n-        {\n-            // The user doesn't want us to upgrade the store.\n-            LogEntryVersion latestLogEntryVersion = tailScanner.getTailInformation().latestLogEntryVersion;\n-            if ( latestLogEntryVersion != null && LogEntryVersion.moreRecentVersionExists( latestLogEntryVersion ) )\n-            {\n-                String message = \"The version you're upgrading to is using a new transaction log format. This is a \" +\n-                        \"non-reversible upgrade and you wont be able to downgrade after starting\";\n+      // The user doesn't want us to upgrade the store.\n+      LogEntryVersion latestLogEntryVersion = tailScanner.getTailInformation().latestLogEntryVersion;\n+      if (latestLogEntryVersion != null && LogEntryVersion.moreRecentVersionExists(latestLogEntryVersion))\n+      {\n+        String message = \"The version you're upgrading to is using a new transaction log format. This is a \" +\n+            \"non-reversible upgrade and you wont be able to downgrade after starting\";\n \n-                throw new UpgradeNotAllowedByConfigurationException( message );\n-            }\n-        }\n+        throw new UpgradeNotAllowedByConfigurationException(message);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1947/LogVersionUpgradeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1947/LogVersionUpgradeChecker.java\nindex 6303806b6dd..db378aef511 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1947/LogVersionUpgradeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1947/LogVersionUpgradeChecker.java\n@@ -48,11 +48,9 @@ public class LogVersionUpgradeChecker\n             LogEntryVersion latestLogEntryVersion = tailScanner.getTailInformation().latestLogEntryVersion;\n             if ( latestLogEntryVersion != null && LogEntryVersion.moreRecentVersionExists( latestLogEntryVersion ) )\n             {\n-                String message = \"The version you're upgrading to is using a new transaction log format. This is a \" +\n-                        \"non-reversible upgrade and you wont be able to downgrade after starting\";\n-\n-                throw new UpgradeNotAllowedByConfigurationException( message );\n+                String message = \"The version you're upgrading to is using a new transaction log format. This is a \" + \"non-reversible upgrade and you wont be able to downgrade after starting\";\n+    throw new UpgradeNotAllowedByConfigurationException( message );\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "47",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1947/LogVersionUpgradeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1947/LogVersionUpgradeChecker.java\nindex 6303806b6dd..8d79006433d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1947/LogVersionUpgradeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1947/LogVersionUpgradeChecker.java\n@@ -33,6 +33,7 @@ import org.neo4j.kernel.recovery.LogTailScanner;\n  * This can be considered an upgrade since the user is not able to revert back to the previous version of neo4j. This\n  * will effectively guard the users from accidental upgrades.\n  */\n+\n public class LogVersionUpgradeChecker\n {\n     private LogVersionUpgradeChecker()\n@@ -42,17 +43,15 @@ public class LogVersionUpgradeChecker\n \n     public static void check( LogTailScanner tailScanner, Config config ) throws UpgradeNotAllowedByConfigurationException\n     {\n-        if ( !config.get( GraphDatabaseSettings.allow_upgrade ) )\n+        if ( ! config.get( GraphDatabaseSettings.allow_upgrade ) )\n         {\n             // The user doesn't want us to upgrade the store.\n             LogEntryVersion latestLogEntryVersion = tailScanner.getTailInformation().latestLogEntryVersion;\n-            if ( latestLogEntryVersion != null && LogEntryVersion.moreRecentVersionExists( latestLogEntryVersion ) )\n+            if ( latestLogEntryVersion != null&& LogEntryVersion.moreRecentVersionExists( latestLogEntryVersion ) )\n             {\n-                String message = \"The version you're upgrading to is using a new transaction log format. This is a \" +\n-                        \"non-reversible upgrade and you wont be able to downgrade after starting\";\n-\n+                String message = \"The version you're upgrading to is using a new transaction log format. This is a \" + \"non-reversible upgrade and you wont be able to downgrade after starting\";\n                 throw new UpgradeNotAllowedByConfigurationException( message );\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
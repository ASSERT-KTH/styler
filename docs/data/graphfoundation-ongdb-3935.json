{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3935",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3935/SslPolicyConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3935/SslPolicyConfig.java\nindex def777bbbc4..49c89b2f32f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3935/SslPolicyConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3935/SslPolicyConfig.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration.ssl;\n \n import java.io.File;\n@@ -43,88 +44,87 @@ import static org.neo4j.kernel.configuration.Settings.options;\n import static org.neo4j.kernel.configuration.Settings.pathSetting;\n import static org.neo4j.kernel.configuration.Settings.setting;\n \n-@Group( \"dbms.ssl.policy\" )\n+@Group(\"dbms.ssl.policy\")\n public class SslPolicyConfig implements LoadableConfig\n {\n-    public static final List<String> TLS_VERSION_DEFAULTS = asList( \"TLSv1.2\" );\n-    public static final List<String> CIPHER_SUITES_DEFAULTS = null;\n+  public static final List<String> TLS_VERSION_DEFAULTS = asList(\"TLSv1.2\");\n+  public static final List<String> CIPHER_SUITES_DEFAULTS = null;\n \n-    @Description( \"The mandatory base directory for cryptographic objects of this policy.\" +\n-                  \" It is also possible to override each individual configuration with absolute paths.\" )\n-    public final Setting<File> base_directory;\n+  @Description(\"The mandatory base directory for cryptographic objects of this policy.\" +\n+      \" It is also possible to override each individual configuration with absolute paths.\")\n+  public final Setting<File> base_directory;\n \n-    @Description( \"Allows the generation of a private key and associated self-signed certificate.\" +\n-                  \" Only performed when both objects cannot be found.\" )\n-    public final Setting<Boolean> allow_key_generation;\n+  @Description(\"Allows the generation of a private key and associated self-signed certificate.\" +\n+      \" Only performed when both objects cannot be found.\")\n+  public final Setting<Boolean> allow_key_generation;\n \n-    @Description( \"Makes this policy trust all remote parties.\" +\n-                  \" Enabling this is not recommended and the trusted directory will be ignored.\" )\n-    public final Setting<Boolean> trust_all;\n+  @Description(\"Makes this policy trust all remote parties.\" +\n+      \" Enabling this is not recommended and the trusted directory will be ignored.\")\n+  public final Setting<Boolean> trust_all;\n \n-    @Description( \"Private PKCS#8 key in PEM format.\" )\n-    public final Setting<File> private_key;\n+  @Description(\"Private PKCS#8 key in PEM format.\")\n+  public final Setting<File> private_key;\n \n-    @Internal // not yet implemented\n-    @Description( \"The password for the private key.\" )\n-    public final Setting<String> private_key_password;\n+  @Internal // not yet implemented\n+  @Description(\"The password for the private key.\")\n+  public final Setting<String> private_key_password;\n \n-    @Description( \"X.509 certificate (chain) of this server in PEM format.\" )\n-    public final Setting<File> public_certificate;\n+  @Description(\"X.509 certificate (chain) of this server in PEM format.\")\n+  public final Setting<File> public_certificate;\n \n-    @Description( \"Path to directory of X.509 certificates in PEM format for trusted parties.\" )\n-    public final Setting<File> trusted_dir;\n+  @Description(\"Path to directory of X.509 certificates in PEM format for trusted parties.\")\n+  public final Setting<File> trusted_dir;\n \n-    @Description( \"Path to directory of CRLs (Certificate Revocation Lists) in PEM format.\" )\n-    public final Setting<File> revoked_dir;\n+  @Description(\"Path to directory of CRLs (Certificate Revocation Lists) in PEM format.\")\n+  public final Setting<File> revoked_dir;\n \n-    @Description( \"Client authentication stance.\" )\n-    public final Setting<ClientAuth> client_auth;\n+  @Description(\"Client authentication stance.\")\n+  public final Setting<ClientAuth> client_auth;\n \n-    @Description( \"Restrict allowed TLS protocol versions.\" )\n-    public final Setting<List<String>> tls_versions;\n+  @Description(\"Restrict allowed TLS protocol versions.\")\n+  public final Setting<List<String>> tls_versions;\n \n-    @Description( \"Restrict allowed ciphers.\" )\n-    public final Setting<List<String>> ciphers;\n+  @Description(\"Restrict allowed ciphers.\")\n+  public final Setting<List<String>> ciphers;\n \n-    public SslPolicyConfig()\n-    {\n-        this( \"<policyname>\" );\n-    }\n+  public SslPolicyConfig()\n+  {\n+    this(\"<policyname>\");\n+  }\n \n-    public SslPolicyConfig( String policyName )\n-    {\n-        GroupSettingSupport group = new GroupSettingSupport( SslPolicyConfig.class, policyName );\n+  public SslPolicyConfig(String policyName)\n+  {\n+    GroupSettingSupport group = new GroupSettingSupport(SslPolicyConfig.class, policyName);\n \n-        this.base_directory = group.scope( pathSetting( \"base_directory\", NO_DEFAULT ) );\n-        this.allow_key_generation = group.scope( setting( \"allow_key_generation\", BOOLEAN, FALSE ) );\n-        this.trust_all = group.scope( setting( \"trust_all\", BOOLEAN, FALSE ) );\n+    this.base_directory = group.scope(pathSetting(\"base_directory\", NO_DEFAULT));\n+    this.allow_key_generation = group.scope(setting(\"allow_key_generation\", BOOLEAN, FALSE));\n+    this.trust_all = group.scope(setting(\"trust_all\", BOOLEAN, FALSE));\n \n-        this.private_key = group.scope( derivedDefault( \"private_key\", base_directory, \"private.key\" ) );\n-        this.public_certificate = group.scope( derivedDefault( \"public_certificate\", base_directory, \"public.crt\" ) );\n-        this.trusted_dir = group.scope( derivedDefault( \"trusted_dir\", base_directory, \"trusted\" ) );\n-        this.revoked_dir = group.scope( derivedDefault( \"revoked_dir\", base_directory, \"revoked\" ) );\n+    this.private_key = group.scope(derivedDefault(\"private_key\", base_directory, \"private.key\"));\n+    this.public_certificate = group.scope(derivedDefault(\"public_certificate\", base_directory, \"public.crt\"));\n+    this.trusted_dir = group.scope(derivedDefault(\"trusted_dir\", base_directory, \"trusted\"));\n+    this.revoked_dir = group.scope(derivedDefault(\"revoked_dir\", base_directory, \"revoked\"));\n \n-        this.private_key_password = group.scope( setting( \"private_key_password\", STRING, NO_DEFAULT ) );\n-        this.client_auth = group.scope( setting( \"client_auth\", options( ClientAuth.class, true ), ClientAuth.REQUIRE.name() ) );\n-        this.tls_versions = group.scope( setting( \"tls_versions\", STRING_LIST, joinList( TLS_VERSION_DEFAULTS ) ) );\n-        this.ciphers = group.scope( setting( \"ciphers\", STRING_LIST, joinList( CIPHER_SUITES_DEFAULTS ) ) );\n-    }\n+    this.private_key_password = group.scope(setting(\"private_key_password\", STRING, NO_DEFAULT));\n+    this.client_auth = group.scope(setting(\"client_auth\", options(ClientAuth.class, true), ClientAuth.REQUIRE.name()));\n+    this.tls_versions = group.scope(setting(\"tls_versions\", STRING_LIST, joinList(TLS_VERSION_DEFAULTS)));\n+    this.ciphers = group.scope(setting(\"ciphers\", STRING_LIST, joinList(CIPHER_SUITES_DEFAULTS)));\n+  }\n \n-    // TODO: can we make this handle relative paths?\n-    private Setting<File> derivedDefault( String settingName, Setting<File> baseDirectory, String defaultFilename )\n-    {\n-        return derivedSetting( settingName, baseDirectory, base -> new File( base, defaultFilename ), PATH );\n-    }\n+  // TODO: can we make this handle relative paths?\n+  private Setting<File> derivedDefault(String settingName, Setting<File> baseDirectory, String defaultFilename)\n+  {\n+    return derivedSetting(settingName, baseDirectory, base -> new File(base, defaultFilename), PATH);\n+  }\n \n-    private String joinList( List<String> list )\n+  private String joinList(List<String> list)\n+  {\n+    if (list == null)\n+    {\n+      return null;\n+    } else\n     {\n-        if ( list == null )\n-        {\n-            return null;\n-        }\n-        else\n-        {\n-            return join( \",\", list );\n-        }\n+      return join(\",\", list);\n     }\n+  }\n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3935/SslPolicyConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3935/SslPolicyConfig.java\nindex def777bbbc4..e1b3ae1d50a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3935/SslPolicyConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3935/SslPolicyConfig.java\n@@ -49,17 +49,14 @@ public class SslPolicyConfig implements LoadableConfig\n     public static final List<String> TLS_VERSION_DEFAULTS = asList( \"TLSv1.2\" );\n     public static final List<String> CIPHER_SUITES_DEFAULTS = null;\n \n-    @Description( \"The mandatory base directory for cryptographic objects of this policy.\" +\n-                  \" It is also possible to override each individual configuration with absolute paths.\" )\n-    public final Setting<File> base_directory;\n+    @Description( \"The mandatory base directory for cryptographic objects of this policy.\" + \" It is also possible to override each individual configuration with absolute paths.\" )\n+public final Setting<File> base_directory;\n \n-    @Description( \"Allows the generation of a private key and associated self-signed certificate.\" +\n-                  \" Only performed when both objects cannot be found.\" )\n-    public final Setting<Boolean> allow_key_generation;\n+    @Description( \"Allows the generation of a private key and associated self-signed certificate.\" + \" Only performed when both objects cannot be found.\" )\n+public final Setting<Boolean> allow_key_generation;\n \n-    @Description( \"Makes this policy trust all remote parties.\" +\n-                  \" Enabling this is not recommended and the trusted directory will be ignored.\" )\n-    public final Setting<Boolean> trust_all;\n+    @Description( \"Makes this policy trust all remote parties.\" + \" Enabling this is not recommended and the trusted directory will be ignored.\" )\n+public final Setting<Boolean> trust_all;\n \n     @Description( \"Private PKCS#8 key in PEM format.\" )\n     public final Setting<File> private_key;\n@@ -94,17 +91,14 @@ public class SslPolicyConfig implements LoadableConfig\n     public SslPolicyConfig( String policyName )\n     {\n         GroupSettingSupport group = new GroupSettingSupport( SslPolicyConfig.class, policyName );\n-\n-        this.base_directory = group.scope( pathSetting( \"base_directory\", NO_DEFAULT ) );\n+this.base_directory = group.scope( pathSetting( \"base_directory\", NO_DEFAULT ) );\n         this.allow_key_generation = group.scope( setting( \"allow_key_generation\", BOOLEAN, FALSE ) );\n         this.trust_all = group.scope( setting( \"trust_all\", BOOLEAN, FALSE ) );\n-\n-        this.private_key = group.scope( derivedDefault( \"private_key\", base_directory, \"private.key\" ) );\n+this.private_key = group.scope( derivedDefault( \"private_key\", base_directory, \"private.key\" ) );\n         this.public_certificate = group.scope( derivedDefault( \"public_certificate\", base_directory, \"public.crt\" ) );\n         this.trusted_dir = group.scope( derivedDefault( \"trusted_dir\", base_directory, \"trusted\" ) );\n         this.revoked_dir = group.scope( derivedDefault( \"revoked_dir\", base_directory, \"revoked\" ) );\n-\n-        this.private_key_password = group.scope( setting( \"private_key_password\", STRING, NO_DEFAULT ) );\n+this.private_key_password = group.scope( setting( \"private_key_password\", STRING, NO_DEFAULT ) );\n         this.client_auth = group.scope( setting( \"client_auth\", options( ClientAuth.class, true ), ClientAuth.REQUIRE.name() ) );\n         this.tls_versions = group.scope( setting( \"tls_versions\", STRING_LIST, joinList( TLS_VERSION_DEFAULTS ) ) );\n         this.ciphers = group.scope( setting( \"ciphers\", STRING_LIST, joinList( CIPHER_SUITES_DEFAULTS ) ) );\n@@ -127,4 +121,4 @@ public class SslPolicyConfig implements LoadableConfig\n             return join( \",\", list );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
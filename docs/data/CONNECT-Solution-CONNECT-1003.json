{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1003",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admingui.services.impl;\n\nimport gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\nimport gov.hhs.fha.nhinc.admingui.model.AvailableService;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1003/StatusServiceImpl.java\nindex 1f386e6e7b0..9c9f75903ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1003/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1003/StatusServiceImpl.java\nindex 1f386e6e7b0..82b497a99fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1003/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n@@ -47,105 +48,104 @@ import org.uddi.api_v3.BusinessEntity;\n import org.uddi.api_v3.BusinessService;\n \n /**\n- *\n  * @author jassmit\n  */\n public class StatusServiceImpl implements StatusService {\n \n-    private static final String JAVA_VERSION_KEY = \"java.version\";\n-    private static final String JAVA_VENDOR_KEY = \"java.vm.vendor\";\n-    private static final String OS_KEY = \"os.name\";\n-    private static final String OS_VERSION_KEY = \"os.version\";\n-    private static final long MB_VALUE = 1048576;\n-\n-    private final ConnectionManagerCacheHelper cmHelper = new ConnectionManagerCacheHelper();\n-    private final PingService pingService = new PingServiceImpl();\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(StatusServiceImpl.class);\n-\n-    @Override\n-    public String getOperatingSystem() {\n-        StringBuilder osStrBuilder = new StringBuilder();\n-        osStrBuilder.append(System.getProperty(OS_KEY));\n-        osStrBuilder.append(\", \");\n-        osStrBuilder.append(System.getProperty(OS_VERSION_KEY));\n-        return osStrBuilder.toString();\n+  private static final String JAVA_VERSION_KEY = \"java.version\";\n+  private static final String JAVA_VENDOR_KEY = \"java.vm.vendor\";\n+  private static final String OS_KEY = \"os.name\";\n+  private static final String OS_VERSION_KEY = \"os.version\";\n+  private static final long MB_VALUE = 1048576;\n+\n+  private final ConnectionManagerCacheHelper cmHelper = new ConnectionManagerCacheHelper();\n+  private final PingService pingService = new PingServiceImpl();\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(StatusServiceImpl.class);\n+\n+  @Override\n+  public String getOperatingSystem() {\n+    StringBuilder osStrBuilder = new StringBuilder();\n+    osStrBuilder.append(System.getProperty(OS_KEY));\n+    osStrBuilder.append(\", \");\n+    osStrBuilder.append(System.getProperty(OS_VERSION_KEY));\n+    return osStrBuilder.toString();\n+  }\n+\n+  @Override\n+  public String getJavaVersion() {\n+    StringBuilder javaStrBuilder = new StringBuilder();\n+    javaStrBuilder.append(System.getProperty(JAVA_VERSION_KEY));\n+    javaStrBuilder.append(\", \");\n+    javaStrBuilder.append(System.getProperty(JAVA_VENDOR_KEY));\n+    return javaStrBuilder.toString();\n+  }\n+\n+  @Override\n+  public String getMemory() {\n+    MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();\n+    long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n+    long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n+    long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n+\n+    if (totalMemoryUsed > 0) {\n+      return Long.toString(totalMemoryUsed) + \" MB\";\n+    } else {\n+      return null;\n     }\n+  }\n \n-    @Override\n-    public String getJavaVersion() {\n-        StringBuilder javaStrBuilder = new StringBuilder();\n-        javaStrBuilder.append(System.getProperty(JAVA_VERSION_KEY));\n-        javaStrBuilder.append(\", \");\n-        javaStrBuilder.append(System.getProperty(JAVA_VENDOR_KEY));\n-        return javaStrBuilder.toString();\n-    }\n+  @Override\n+  public String getApplicationServer() {\n+    return ApplicationInfo.getInstance().getServerInfo();\n+  }\n \n-    @Override\n-    public String getMemory() {\n-        MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();\n-        long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n-        long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n-        long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n-\n-        if (totalMemoryUsed > 0) {\n-            return Long.toString(totalMemoryUsed) + \" MB\";\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    @Override\n-    public String getApplicationServer() {\n-        return ApplicationInfo.getInstance().getServerInfo();\n-    }\n+  @Override\n+  public List<AvailableService> buildServices() {\n+    List<AvailableService> services = new ArrayList<>();\n \n-    @Override\n-    public List<AvailableService> buildServices() {\n-        List<AvailableService> services = new ArrayList<>();\n+    ConnectionHelper cHelper = new ConnectionHelper();\n+    BusinessEntity localEntity = cHelper.getLocalBusinessEntity();\n \n-        ConnectionHelper cHelper = new ConnectionHelper();\n-        BusinessEntity localEntity = cHelper.getLocalBusinessEntity();\n+    if (localEntity != null && localEntity.getBusinessServices() != null\n+        && !CollectionUtils.isEmpty(localEntity.getBusinessServices().getBusinessService())) {\n \n-        if (localEntity != null && localEntity.getBusinessServices() != null\n-            && !CollectionUtils.isEmpty(localEntity.getBusinessServices().getBusinessService())) {\n-\n-            for (NhincConstants.NHIN_SERVICE_NAMES name : NhincConstants.NHIN_SERVICE_NAMES.values()) {\n-                services.addAll(getServicesFromName(name.getUDDIServiceName(), localEntity));\n-            }\n-        }\n-        return services;\n+      for (NhincConstants.NHIN_SERVICE_NAMES name : NhincConstants.NHIN_SERVICE_NAMES.values()) {\n+        services.addAll(getServicesFromName(name.getUDDIServiceName(), localEntity));\n+      }\n     }\n+    return services;\n+  }\n \n-    private List<AvailableService> getServicesFromName(String uddiServiceName, BusinessEntity localEntity) {\n-        List<AvailableService> namedServices = new ArrayList<>();\n-        try {\n+  private List<AvailableService> getServicesFromName(String uddiServiceName, BusinessEntity localEntity) {\n+    List<AvailableService> namedServices = new ArrayList<>();\n+    try {\n \n-            BusinessService bService = cmHelper.getBusinessServiceByServiceName(localEntity, uddiServiceName);\n-            List<NhincConstants.UDDI_SPEC_VERSION> specVersions = cmHelper.getSpecVersions(bService);\n+      BusinessService bService = cmHelper.getBusinessServiceByServiceName(localEntity, uddiServiceName);\n+      List<NhincConstants.UDDI_SPEC_VERSION> specVersions = cmHelper.getSpecVersions(bService);\n \n-            if (!CollectionUtils.isEmpty(specVersions)) {\n-                populateNamedServices(specVersions, uddiServiceName, bService, namedServices);\n-            }\n-        } catch (ConnectionManagerException ex) {\n-            LOG.warn(\"Error when accessing services for {}\", uddiServiceName, ex);\n-        }\n-        return namedServices;\n+      if (!CollectionUtils.isEmpty(specVersions)) {\n+        populateNamedServices(specVersions, uddiServiceName, bService, namedServices);\n+      }\n+    } catch (ConnectionManagerException ex) {\n+      LOG.warn(\"Error when accessing services for {}\", uddiServiceName, ex);\n     }\n-\n-    private void populateNamedServices(List<NhincConstants.UDDI_SPEC_VERSION> specVersions, String uddiServiceName,\n-        BusinessService bService, List<AvailableService> namedServices) {\n-        for (NhincConstants.UDDI_SPEC_VERSION spec : specVersions) {\n-            AvailableService aService = new AvailableService();\n-            aService.setServiceName(uddiServiceName + \" - \" + spec.toString());\n-            BindingTemplate bindingTemplate = cmHelper.findBindingTemplateByKey(bService,\n-                UDDIConstants.UDDI_SPEC_VERSION_KEY,\n-                spec.toString());\n-            if (bindingTemplate != null && bindingTemplate.getAccessPoint() != null) {\n-                aService.setAvailable(pingService.ping(bindingTemplate.getAccessPoint().getValue()));\n-                namedServices.add(aService);\n-            }\n-        }\n+    return namedServices;\n+  }\n+\n+  private void populateNamedServices(List<NhincConstants.UDDI_SPEC_VERSION> specVersions, String uddiServiceName,\n+                                     BusinessService bService, List<AvailableService> namedServices) {\n+    for (NhincConstants.UDDI_SPEC_VERSION spec : specVersions) {\n+      AvailableService aService = new AvailableService();\n+      aService.setServiceName(uddiServiceName + \" - \" + spec.toString());\n+      BindingTemplate bindingTemplate = cmHelper.findBindingTemplateByKey(bService,\n+          UDDIConstants.UDDI_SPEC_VERSION_KEY,\n+          spec.toString());\n+      if (bindingTemplate != null && bindingTemplate.getAccessPoint() != null) {\n+        aService.setAvailable(pingService.ping(bindingTemplate.getAccessPoint().getValue()));\n+        namedServices.add(aService);\n+      }\n     }\n+  }\n \n }\n",
            "diff_size": 112
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "93",
                    "column": "20",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1003/StatusServiceImpl.java\nindex 1f386e6e7b0..4db57c31385 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1003/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n@@ -69,7 +70,8 @@ public class StatusServiceImpl implements StatusService {\n         osStrBuilder.append(System.getProperty(OS_KEY));\n         osStrBuilder.append(\", \");\n         osStrBuilder.append(System.getProperty(OS_VERSION_KEY));\n-        return osStrBuilder.toString();\n+\n+return osStrBuilder.toString();\n     }\n \n     @Override\n@@ -78,7 +80,8 @@ public class StatusServiceImpl implements StatusService {\n         javaStrBuilder.append(System.getProperty(JAVA_VERSION_KEY));\n         javaStrBuilder.append(\", \");\n         javaStrBuilder.append(System.getProperty(JAVA_VENDOR_KEY));\n-        return javaStrBuilder.toString();\n+\n+return javaStrBuilder.toString();\n     }\n \n     @Override\n@@ -87,8 +90,7 @@ public class StatusServiceImpl implements StatusService {\n         long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n         long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n         long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n-\n-        if (totalMemoryUsed > 0) {\n+if (totalMemoryUsed> 0) {\n             return Long.toString(totalMemoryUsed) + \" MB\";\n         } else {\n             return null;\n@@ -106,11 +108,8 @@ public class StatusServiceImpl implements StatusService {\n \n         ConnectionHelper cHelper = new ConnectionHelper();\n         BusinessEntity localEntity = cHelper.getLocalBusinessEntity();\n-\n-        if (localEntity != null && localEntity.getBusinessServices() != null\n-            && !CollectionUtils.isEmpty(localEntity.getBusinessServices().getBusinessService())) {\n-\n-            for (NhincConstants.NHIN_SERVICE_NAMES name : NhincConstants.NHIN_SERVICE_NAMES.values()) {\n+if (localEntity != null && localEntity.getBusinessServices() != null && !CollectionUtils.isEmpty(localEntity.getBusinessServices().getBusinessService())) {\n+    for (NhincConstants.NHIN_SERVICE_NAMES name : NhincConstants.NHIN_SERVICE_NAMES.values()) {\n                 services.addAll(getServicesFromName(name.getUDDIServiceName(), localEntity));\n             }\n         }\n@@ -120,32 +119,30 @@ public class StatusServiceImpl implements StatusService {\n     private List<AvailableService> getServicesFromName(String uddiServiceName, BusinessEntity localEntity) {\n         List<AvailableService> namedServices = new ArrayList<>();\n         try {\n-\n-            BusinessService bService = cmHelper.getBusinessServiceByServiceName(localEntity, uddiServiceName);\n+    BusinessService bService = cmHelper.getBusinessServiceByServiceName(localEntity, uddiServiceName);\n             List<NhincConstants.UDDI_SPEC_VERSION> specVersions = cmHelper.getSpecVersions(bService);\n-\n-            if (!CollectionUtils.isEmpty(specVersions)) {\n+if (!CollectionUtils.isEmpty(specVersions)) {\n                 populateNamedServices(specVersions, uddiServiceName, bService, namedServices);\n             }\n         } catch (ConnectionManagerException ex) {\n             LOG.warn(\"Error when accessing services for {}\", uddiServiceName, ex);\n-        }\n+\n+    }\n         return namedServices;\n     }\n \n     private void populateNamedServices(List<NhincConstants.UDDI_SPEC_VERSION> specVersions, String uddiServiceName,\n         BusinessService bService, List<AvailableService> namedServices) {\n-        for (NhincConstants.UDDI_SPEC_VERSION spec : specVersions) {\n+    for (NhincConstants.UDDI_SPEC_VERSION spec : specVersions) {\n             AvailableService aService = new AvailableService();\n             aService.setServiceName(uddiServiceName + \" - \" + spec.toString());\n             BindingTemplate bindingTemplate = cmHelper.findBindingTemplateByKey(bService,\n-                UDDIConstants.UDDI_SPEC_VERSION_KEY,\n-                spec.toString());\n-            if (bindingTemplate != null && bindingTemplate.getAccessPoint() != null) {\n+                UDDIConstants.UDDI_SPEC_VERSION_KEY, spec.toString());\n+if (bindingTemplate != null && bindingTemplate.getAccessPoint() != null) {\n                 aService.setAvailable(pingService.ping(bindingTemplate.getAccessPoint().getValue()));\n                 namedServices.add(aService);\n             }\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "95",
                    "column": "60",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "95",
                    "column": "60",
                    "severity": "error",
                    "message": "'/' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "97",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1003/StatusServiceImpl.java\nindex 1f386e6e7b0..061c449122f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1003/StatusServiceImpl.java\n@@ -50,6 +50,8 @@ import org.uddi.api_v3.BusinessService;\n  *\n  * @author jassmit\n  */\n+\n+\n public class StatusServiceImpl implements StatusService {\n \n     private static final String JAVA_VERSION_KEY = \"java.version\";\n@@ -57,12 +59,11 @@ public class StatusServiceImpl implements StatusService {\n     private static final String OS_KEY = \"os.name\";\n     private static final String OS_VERSION_KEY = \"os.version\";\n     private static final long MB_VALUE = 1048576;\n-\n     private final ConnectionManagerCacheHelper cmHelper = new ConnectionManagerCacheHelper();\n     private final PingService pingService = new PingServiceImpl();\n-\n     private static final Logger LOG = LoggerFactory.getLogger(StatusServiceImpl.class);\n \n+\n     @Override\n     public String getOperatingSystem() {\n         StringBuilder osStrBuilder = new StringBuilder();\n@@ -72,6 +73,7 @@ public class StatusServiceImpl implements StatusService {\n         return osStrBuilder.toString();\n     }\n \n+\n     @Override\n     public String getJavaVersion() {\n         StringBuilder javaStrBuilder = new StringBuilder();\n@@ -81,35 +83,41 @@ public class StatusServiceImpl implements StatusService {\n         return javaStrBuilder.toString();\n     }\n \n+\n     @Override\n     public String getMemory() {\n         MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();\n+\n         long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n+\n         long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n-        long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n \n-        if (totalMemoryUsed > 0) {\n+        long totalMemoryUsed = (heapMemUsed + otherMemUsed)/\n+                                   MB_VALUE;\n+        if(totalMemoryUsed> 0) {\n             return Long.toString(totalMemoryUsed) + \" MB\";\n-        } else {\n+        }\n+\n+\n+else {\n             return null;\n         }\n     }\n \n+\n     @Override\n     public String getApplicationServer() {\n         return ApplicationInfo.getInstance().getServerInfo();\n     }\n \n+\n     @Override\n     public List<AvailableService> buildServices() {\n         List<AvailableService> services = new ArrayList<>();\n-\n         ConnectionHelper cHelper = new ConnectionHelper();\n         BusinessEntity localEntity = cHelper.getLocalBusinessEntity();\n-\n-        if (localEntity != null && localEntity.getBusinessServices() != null\n-            && !CollectionUtils.isEmpty(localEntity.getBusinessServices().getBusinessService())) {\n-\n+        if (localEntity != null && localEntity.getBusinessServices() != null && !\n+                                                                                    CollectionUtils.isEmpty(localEntity.getBusinessServices().getBusinessService())) {\n             for (NhincConstants.NHIN_SERVICE_NAMES name : NhincConstants.NHIN_SERVICE_NAMES.values()) {\n                 services.addAll(getServicesFromName(name.getUDDIServiceName(), localEntity));\n             }\n@@ -120,11 +128,10 @@ public class StatusServiceImpl implements StatusService {\n     private List<AvailableService> getServicesFromName(String uddiServiceName, BusinessEntity localEntity) {\n         List<AvailableService> namedServices = new ArrayList<>();\n         try {\n-\n             BusinessService bService = cmHelper.getBusinessServiceByServiceName(localEntity, uddiServiceName);\n             List<NhincConstants.UDDI_SPEC_VERSION> specVersions = cmHelper.getSpecVersions(bService);\n-\n-            if (!CollectionUtils.isEmpty(specVersions)) {\n+            if (!\n+                    CollectionUtils.isEmpty(specVersions)) {\n                 populateNamedServices(specVersions, uddiServiceName, bService, namedServices);\n             }\n         } catch (ConnectionManagerException ex) {\n@@ -133,14 +140,13 @@ public class StatusServiceImpl implements StatusService {\n         return namedServices;\n     }\n \n-    private void populateNamedServices(List<NhincConstants.UDDI_SPEC_VERSION> specVersions, String uddiServiceName,\n+    private void populateNamedServices(List<NhincConstants.UDDI_SPEC_VERSION> specVersions,\n+        String uddiServiceName,\n         BusinessService bService, List<AvailableService> namedServices) {\n         for (NhincConstants.UDDI_SPEC_VERSION spec : specVersions) {\n             AvailableService aService = new AvailableService();\n             aService.setServiceName(uddiServiceName + \" - \" + spec.toString());\n-            BindingTemplate bindingTemplate = cmHelper.findBindingTemplateByKey(bService,\n-                UDDIConstants.UDDI_SPEC_VERSION_KEY,\n-                spec.toString());\n+            BindingTemplate bindingTemplate = cmHelper.findBindingTemplateByKey(bService, UDDIConstants.UDDI_SPEC_VERSION_KEY, spec.toString());\n             if (bindingTemplate != null && bindingTemplate.getAccessPoint() != null) {\n                 aService.setAvailable(pingService.ping(bindingTemplate.getAccessPoint().getValue()));\n                 namedServices.add(aService);\n@@ -148,4 +154,4 @@ public class StatusServiceImpl implements StatusService {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1003/StatusServiceImpl.java\nindex 1f386e6e7b0..a762a3cd0d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1003/StatusServiceImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.admingui.services.impl;\n-\n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n import gov.hhs.fha.nhinc.admingui.model.AvailableService;\n import gov.hhs.fha.nhinc.admingui.services.PingService;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1003/StatusServiceImpl.java\nindex 1f386e6e7b0..9c9f75903ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1003/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1003/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
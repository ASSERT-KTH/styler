{
    "project_name": "neo4j-neo4j",
    "error_id": "802",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "154",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "212",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "221",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/802/ConstraintIndexCreator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/802/ConstraintIndexCreator.java\nindex 1015a54e3b2..93021b3ede5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/802/ConstraintIndexCreator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/802/ConstraintIndexCreator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.state;\n \n import java.io.IOException;\n@@ -64,11 +65,11 @@ public class ConstraintIndexCreator\n     private final Supplier<Kernel> kernelSupplier;\n     private final Log log;\n \n-    public ConstraintIndexCreator( Supplier<Kernel> kernelSupplier, IndexingService indexingService, LogProvider logProvider )\n+    public ConstraintIndexCreator(Supplier<Kernel> kernelSupplier, IndexingService indexingService, LogProvider logProvider)\n     {\n         this.kernelSupplier = kernelSupplier;\n         this.indexingService = indexingService;\n-        this.log = logProvider.getLog( ConstraintIndexCreator.class );\n+        this.log = logProvider.getLog(ConstraintIndexCreator.class);\n     }\n \n     /**\n@@ -90,27 +91,25 @@ public class ConstraintIndexCreator\n      * and this tx committed, which will create the uniqueness constraint</li>\n      * </ol>\n      */\n-    public IndexDescriptor createUniquenessConstraintIndex( KernelTransactionImplementation transaction,\n-            IndexBackedConstraintDescriptor constraint, IndexPrototype prototype )\n-            throws TransactionFailureException, CreateConstraintFailureException,\n-            UniquePropertyValueValidationException, AlreadyConstrainedException\n+    public IndexDescriptor createUniquenessConstraintIndex(KernelTransactionImplementation transaction,\n+                                                           IndexBackedConstraintDescriptor constraint, IndexPrototype prototype)\n+      throws TransactionFailureException, CreateConstraintFailureException,\n+      UniquePropertyValueValidationException, AlreadyConstrainedException\n     {\n-        String constraintString = constraint.userDescription( transaction.tokenRead() );\n-        log.info( \"Starting constraint creation: %s.\", constraintString );\n+        String constraintString = constraint.userDescription(transaction.tokenRead());\n+        log.info(\"Starting constraint creation: %s.\", constraintString);\n \n         IndexDescriptor index;\n         SchemaRead schemaRead = transaction.schemaRead();\n         try\n         {\n-            index = checkAndCreateConstraintIndex( schemaRead, transaction.tokenRead(), constraint, prototype );\n-        }\n-        catch ( AlreadyConstrainedException e )\n+            index = checkAndCreateConstraintIndex(schemaRead, transaction.tokenRead(), constraint, prototype);\n+        } catch (AlreadyConstrainedException e)\n         {\n             throw e;\n-        }\n-        catch ( KernelException e )\n+        } catch (KernelException e)\n         {\n-            throw new CreateConstraintFailureException( constraint, e );\n+            throw new CreateConstraintFailureException(constraint, e);\n         }\n \n         boolean success = false;\n@@ -120,139 +119,133 @@ public class ConstraintIndexCreator\n         long[] lockingKeys = constraint.schema().lockingKeys();\n         try\n         {\n-            locks.acquireShared( transaction.lockTracer(), keyType, lockingKeys );\n-            IndexProxy proxy = indexingService.getIndexProxy( index );\n+            locks.acquireShared(transaction.lockTracer(), keyType, lockingKeys);\n+            IndexProxy proxy = indexingService.getIndexProxy(index);\n \n             // Release the LABEL WRITE lock during index population.\n             // At this point the integrity of the constraint to be created was checked\n             // while holding the lock and the index rule backing the soon-to-be-created constraint\n             // has been created. Now it's just the population left, which can take a long time\n-            locks.releaseExclusive( keyType, lockingKeys );\n+            locks.releaseExclusive(keyType, lockingKeys);\n \n-            awaitConstraintIndexPopulation( constraint, proxy, transaction );\n-            log.info( \"Constraint %s populated, starting verification.\", constraintString );\n+            awaitConstraintIndexPopulation(constraint, proxy, transaction);\n+            log.info(\"Constraint %s populated, starting verification.\", constraintString);\n \n             // Index population was successful, but at this point we don't know if the uniqueness constraint holds.\n             // Acquire LABEL WRITE lock and verify the constraints here in this user transaction\n             // and if everything checks out then it will be held until after the constraint has been\n             // created and activated.\n-            locks.acquireExclusive( transaction.lockTracer(), keyType, lockingKeys );\n+            locks.acquireExclusive(transaction.lockTracer(), keyType, lockingKeys);\n             reacquiredLabelLock = true;\n \n-            try ( NodePropertyAccessor propertyAccessor = new DefaultNodePropertyAccessor( transaction.newStorageReader(), transaction.pageCursorTracer(),\n-                    transaction.memoryTracker() ) )\n+            try (NodePropertyAccessor propertyAccessor = new DefaultNodePropertyAccessor(transaction.newStorageReader(), transaction.pageCursorTracer(),\n+              transaction.memoryTracker()))\n             {\n-                indexingService.getIndexProxy( index ).verifyDeferredConstraints( propertyAccessor );\n+                indexingService.getIndexProxy(index).verifyDeferredConstraints(propertyAccessor);\n             }\n-            log.info( \"Constraint %s verified.\", constraintString );\n+            log.info(\"Constraint %s verified.\", constraintString);\n             success = true;\n             return index;\n-        }\n-        catch ( IndexNotFoundKernelException e )\n+        } catch (IndexNotFoundKernelException e)\n         {\n-            String indexString = index.userDescription( transaction.tokenRead() );\n-            throw new TransactionFailureException( format( \"Index (%s) that we just created does not exist.\", indexString ), e );\n-        }\n-        catch ( IndexEntryConflictException e )\n+            String indexString = index.userDescription(transaction.tokenRead());\n+            throw new TransactionFailureException(format(\"Index (%s) that we just created does not exist.\", indexString), e);\n+        } catch (IndexEntryConflictException e)\n         {\n-            throw new UniquePropertyValueValidationException( constraint, VERIFICATION, e, transaction.tokenRead() );\n-        }\n-        catch ( InterruptedException | IOException e )\n+            throw new UniquePropertyValueValidationException(constraint, VERIFICATION, e, transaction.tokenRead());\n+        } catch (InterruptedException | IOException e)\n         {\n-            throw new CreateConstraintFailureException( constraint, e );\n-        }\n-        finally\n+            throw new CreateConstraintFailureException(constraint, e);\n+        } finally\n         {\n-            if ( !success )\n+            if (!success)\n             {\n-                if ( !reacquiredLabelLock )\n+                if (!reacquiredLabelLock)\n                 {\n-                    locks.acquireExclusive( transaction.lockTracer(), keyType, lockingKeys );\n+                    locks.acquireExclusive(transaction.lockTracer(), keyType, lockingKeys);\n                 }\n \n-                if ( indexStillExists( schemaRead, index ) )\n+                if (indexStillExists(schemaRead, index))\n                 {\n-                    dropUniquenessConstraintIndex( index );\n+                    dropUniquenessConstraintIndex(index);\n                 }\n             }\n         }\n     }\n \n-    private boolean indexStillExists( SchemaRead schemaRead, IndexDescriptor index )\n+    private boolean indexStillExists(SchemaRead schemaRead, IndexDescriptor index)\n     {\n-        IndexDescriptor existingIndex = schemaRead.indexGetForName( index.getName() );\n-        return existingIndex != IndexDescriptor.NO_INDEX && existingIndex.equals( index );\n+        IndexDescriptor existingIndex = schemaRead.indexGetForName(index.getName());\n+        return existingIndex != IndexDescriptor.NO_INDEX && existingIndex.equals(index);\n     }\n \n     /**\n      * You MUST hold a schema write lock before you call this method.\n      */\n-    public void dropUniquenessConstraintIndex( IndexDescriptor index )\n-            throws TransactionFailureException\n+    public void dropUniquenessConstraintIndex(IndexDescriptor index)\n+      throws TransactionFailureException\n     {\n-        try ( KernelTransaction transaction = kernelSupplier.get().beginTransaction( Type.IMPLICIT, AUTH_DISABLED ) )\n+        try (KernelTransaction transaction = kernelSupplier.get().beginTransaction(Type.IMPLICIT, AUTH_DISABLED))\n         {\n-            ((KernelTransactionImplementation)transaction).addIndexDoDropToTxState( index );\n+            ((KernelTransactionImplementation) transaction).addIndexDoDropToTxState(index);\n             transaction.commit();\n         }\n     }\n \n-    private void awaitConstraintIndexPopulation( IndexBackedConstraintDescriptor constraint, IndexProxy proxy, KernelTransactionImplementation transaction )\n-            throws InterruptedException, UniquePropertyValueValidationException\n+    private void awaitConstraintIndexPopulation(IndexBackedConstraintDescriptor constraint, IndexProxy proxy, KernelTransactionImplementation transaction)\n+      throws InterruptedException, UniquePropertyValueValidationException\n     {\n         try\n         {\n             boolean stillGoing;\n             do\n             {\n-                stillGoing = proxy.awaitStoreScanCompleted( 1, TimeUnit.SECONDS );\n-                if ( transaction.isTerminated() )\n+                stillGoing = proxy.awaitStoreScanCompleted(1, TimeUnit.SECONDS);\n+                if (transaction.isTerminated())\n                 {\n                     Optional<Status> reasonIfTerminated = transaction.getReasonIfTerminated();\n                     assert reasonIfTerminated.isPresent();\n-                    throw new TransactionTerminatedException( reasonIfTerminated.get() );\n+                    throw new TransactionTerminatedException(reasonIfTerminated.get());\n                 }\n             }\n-            while ( stillGoing );\n-        }\n-        catch ( IndexPopulationFailedKernelException e )\n+            while (stillGoing);\n+        } catch (IndexPopulationFailedKernelException e)\n         {\n             Throwable cause = e.getCause();\n-            if ( cause instanceof IndexEntryConflictException )\n+            if (cause instanceof IndexEntryConflictException)\n             {\n-                throw new UniquePropertyValueValidationException( constraint, VERIFICATION, (IndexEntryConflictException) cause,\n-                        transaction.tokenRead() );\n-            }\n-            else\n+                throw new UniquePropertyValueValidationException(constraint, VERIFICATION, (IndexEntryConflictException) cause,\n+                  transaction.tokenRead());\n+            } else\n             {\n-                throw new UniquePropertyValueValidationException( constraint, VERIFICATION, e, transaction.tokenRead() );\n+                throw new UniquePropertyValueValidationException(constraint, VERIFICATION, e, transaction.tokenRead());\n             }\n         }\n     }\n \n     private IndexDescriptor checkAndCreateConstraintIndex(\n-            SchemaRead schemaRead, TokenNameLookup tokenLookup, IndexBackedConstraintDescriptor constraint,\n-            IndexPrototype prototype ) throws KernelException\n+      SchemaRead schemaRead, TokenNameLookup tokenLookup, IndexBackedConstraintDescriptor constraint,\n+      IndexPrototype prototype) throws KernelException\n     {\n-        IndexDescriptor descriptor = schemaRead.indexGetForName( constraint.getName() );\n-        if ( descriptor != IndexDescriptor.NO_INDEX )\n+        IndexDescriptor descriptor = schemaRead.indexGetForName(constraint.getName());\n+        if (descriptor != IndexDescriptor.NO_INDEX)\n         {\n-            if ( descriptor.isUnique() )\n+            if (descriptor.isUnique())\n             {\n                 // Looks like there is already a constraint like this.\n-                throw new AlreadyConstrainedException( constraint, CONSTRAINT_CREATION, tokenLookup );\n+                throw new AlreadyConstrainedException(constraint, CONSTRAINT_CREATION, tokenLookup);\n             }\n             // There's already an index for the schema of this constraint, which isn't of the type we're after.\n-            throw new AlreadyIndexedException( constraint.schema(), CONSTRAINT_CREATION, tokenLookup );\n+            throw new AlreadyIndexedException(constraint.schema(), CONSTRAINT_CREATION, tokenLookup);\n         }\n-        return createConstraintIndex( prototype );\n+        return createConstraintIndex(prototype);\n     }\n \n-    public IndexDescriptor createConstraintIndex( IndexPrototype prototype ) throws KernelException\n+    public IndexDescriptor createConstraintIndex(IndexPrototype prototype) throws KernelException\n     {\n-        try ( KernelTransaction transaction = kernelSupplier.get().beginTransaction( Type.IMPLICIT, AUTH_DISABLED ) )\n+        try (KernelTransaction transaction = kernelSupplier.get().beginTransaction(Type.IMPLICIT, AUTH_DISABLED))\n         {\n-            IndexDescriptor index = transaction.indexUniqueCreate( prototype );\n+            IndexDescriptor index = transaction.indexUniqueCreate(prototype);\n             transaction.commit();\n             return index;\n         }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/802/ConstraintIndexCreator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/802/ConstraintIndexCreator.java\nindex 1015a54e3b2..48fdeb5255f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/802/ConstraintIndexCreator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/802/ConstraintIndexCreator.java\n@@ -257,4 +257,4 @@ public class ConstraintIndexCreator\n             return index;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
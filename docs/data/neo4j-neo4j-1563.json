{
    "project_name": "neo4j-neo4j",
    "error_id": "1563",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1563/CodeBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1563/CodeBlock.java\nindex 28ed972ccef..33e75f08bec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1563/CodeBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1563/CodeBlock.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.util.Iterator;\n@@ -40,35 +41,35 @@ public class CodeBlock implements AutoCloseable\n \n     private LocalVariables localVariables = new LocalVariables();\n \n-    private CodeBlock( CodeBlock parent )\n+    private CodeBlock(CodeBlock parent)\n     {\n-        this( parent, parent.continuableBlock );\n+        this(parent, parent.continuableBlock);\n     }\n \n-    private CodeBlock( CodeBlock parent, boolean continuableBlock )\n+    private CodeBlock(CodeBlock parent, boolean continuableBlock)\n     {\n         this.clazz = parent.clazz;\n         this.writer = parent.writer;\n         parent.writer = InvalidState.IN_SUB_BLOCK;\n         this.parent = parent;\n         //copy over local variables from parent\n-        this.localVariables = copy( parent.localVariables );\n+        this.localVariables = copy(parent.localVariables);\n         this.continuableBlock = continuableBlock;\n     }\n \n-    CodeBlock( ClassGenerator clazz, MethodWriter writer, Parameter... parameters )\n+    CodeBlock(ClassGenerator clazz, MethodWriter writer, Parameter... parameters)\n     {\n         this.clazz = clazz;\n         this.writer = writer;\n         this.parent = null;\n         this.continuableBlock = false;\n-        if ( !writer.isStatic() )\n+        if (!writer.isStatic())\n         {\n-            localVariables.createNew( clazz.handle(), \"this\" );\n+            localVariables.createNew(clazz.handle(), \"this\");\n         }\n-        for ( Parameter parameter : parameters )\n+        for (Parameter parameter : parameters)\n         {\n-            localVariables.createNew( parameter.type(), parameter.name() );\n+            localVariables.createNew(parameter.type(), parameter.name());\n         }\n     }\n \n@@ -86,11 +87,10 @@ public class CodeBlock implements AutoCloseable\n     public void close()\n     {\n         endBlock();\n-        if ( parent != null )\n+        if (parent != null)\n         {\n             parent.writer = writer;\n-        }\n-        else\n+        } else\n         {\n             writer.done();\n         }\n@@ -99,116 +99,116 @@ public class CodeBlock implements AutoCloseable\n \n     private void endBlock()\n     {\n-        if ( !done )\n+        if (!done)\n         {\n             writer.endBlock();\n             done = true;\n         }\n     }\n \n-    public void expression( Expression expression )\n+    public void expression(Expression expression)\n     {\n-        writer.expression( expression );\n+        writer.expression(expression);\n     }\n \n-    public LocalVariable local( String name )\n+    public LocalVariable local(String name)\n     {\n-        return localVariables.get( name );\n+        return localVariables.get(name);\n     }\n \n-    public LocalVariable declare( TypeReference type, String name )\n+    public LocalVariable declare(TypeReference type, String name)\n     {\n-        LocalVariable local = localVariables.createNew( type, name );\n-        writer.declare( local );\n+        LocalVariable local = localVariables.createNew(type, name);\n+        writer.declare(local);\n         return local;\n     }\n \n-    public void assign( LocalVariable local, Expression value )\n+    public void assign(LocalVariable local, Expression value)\n     {\n-        writer.assignVariableInScope( local, value );\n+        writer.assignVariableInScope(local, value);\n     }\n \n-    public void assign( Class<?> type, String name, Expression value )\n+    public void assign(Class<?> type, String name, Expression value)\n     {\n-        assign( typeReference( type ), name, value );\n+        assign(typeReference(type), name, value);\n     }\n \n-    public void assign( TypeReference type, String name, Expression value )\n+    public void assign(TypeReference type, String name, Expression value)\n     {\n-        LocalVariable variable = localVariables.createNew( type, name );\n-        writer.assign( variable, value );\n+        LocalVariable variable = localVariables.createNew(type, name);\n+        writer.assign(variable, value);\n     }\n \n-    public void put( Expression target, FieldReference field, Expression value )\n+    public void put(Expression target, FieldReference field, Expression value)\n     {\n-        writer.put( target, field, value );\n+        writer.put(target, field, value);\n     }\n \n-    public void putStatic( FieldReference field, Expression value )\n+    public void putStatic(FieldReference field, Expression value)\n     {\n-        writer.putStatic( field, value );\n+        writer.putStatic(field, value);\n     }\n \n     public Expression self()\n     {\n-        return load( \"this\" );\n+        return load(\"this\");\n     }\n \n-    public Expression load( String name )\n+    public Expression load(String name)\n     {\n-        return Expression.load( local( name ) );\n+        return Expression.load(local(name));\n     }\n \n     /*\n      * Foreach is just syntactic sugar for a while loop.\n      */\n-    public CodeBlock forEach( Parameter local, Expression iterable )\n+    public CodeBlock forEach(Parameter local, Expression iterable)\n     {\n         String iteratorName = local.name() + \"Iter\";\n \n-        assign( Iterator.class, iteratorName, Expression.invoke( iterable,\n-                MethodReference.methodReference( Iterable.class, Iterator.class, \"iterator\" ) ) );\n-        CodeBlock block = whileLoop( Expression\n-                .invoke( load( iteratorName ), methodReference( Iterator.class, boolean.class, \"hasNext\" ) ) );\n-        block.assign( local.type(), local.name(),\n-                Expression.cast( local.type(), Expression.invoke( block.load( iteratorName ),\n-                        methodReference( Iterator.class, Object.class, \"next\" ) ) ) );\n+        assign(Iterator.class, iteratorName, Expression.invoke(iterable,\n+          MethodReference.methodReference(Iterable.class, Iterator.class, \"iterator\")));\n+        CodeBlock block = whileLoop(Expression\n+          .invoke(load(iteratorName), methodReference(Iterator.class, boolean.class, \"hasNext\")));\n+        block.assign(local.type(), local.name(),\n+          Expression.cast(local.type(), Expression.invoke(block.load(iteratorName),\n+            methodReference(Iterator.class, Object.class, \"next\"))));\n \n         return block;\n     }\n \n-    public CodeBlock whileLoop( Expression test )\n+    public CodeBlock whileLoop(Expression test)\n     {\n-        writer.beginWhile( test, null );\n-        return new CodeBlock( this, true );\n+        writer.beginWhile(test, null);\n+        return new CodeBlock(this, true);\n     }\n \n-    public CodeBlock whileLoop( Expression test, String labelName )\n+    public CodeBlock whileLoop(Expression test, String labelName)\n     {\n-        writer.beginWhile( test, labelName );\n-        return new CodeBlock( this, true );\n+        writer.beginWhile(test, labelName);\n+        return new CodeBlock(this, true);\n     }\n \n-    public CodeBlock ifStatement( Expression test )\n+    public CodeBlock ifStatement(Expression test)\n     {\n-        writer.beginIf( test );\n-        return new CodeBlock( this );\n+        writer.beginIf(test);\n+        return new CodeBlock(this);\n     }\n \n-    public void ifElseStatement( Expression test, Consumer<CodeBlock> onTrue, Consumer<CodeBlock> onFalse )\n+    public void ifElseStatement(Expression test, Consumer<CodeBlock> onTrue, Consumer<CodeBlock> onFalse)\n     {\n-        writer.ifElseStatement( test, onTrue, onFalse, this );\n+        writer.ifElseStatement(test, onTrue, onFalse, this);\n     }\n \n     public CodeBlock block()\n     {\n         writer.beginBlock();\n-        return new CodeBlock( this );\n+        return new CodeBlock(this);\n     }\n \n-    public void tryCatch( Consumer<CodeBlock> body, Consumer<CodeBlock> onError, Parameter exception )\n+    public void tryCatch(Consumer<CodeBlock> body, Consumer<CodeBlock> onError, Parameter exception)\n     {\n-        writer.tryCatchBlock( body, onError, localVariables.createNew( exception.type(), exception.name() ), this );\n+        writer.tryCatchBlock(body, onError, localVariables.createNew(exception.type(), exception.name()), this);\n     }\n \n     public void returns()\n@@ -216,27 +216,27 @@ public class CodeBlock implements AutoCloseable\n         writer.returns();\n     }\n \n-    public void returns( Expression value )\n+    public void returns(Expression value)\n     {\n-        writer.returns( value );\n+        writer.returns(value);\n     }\n \n     public void continueIfPossible()\n     {\n-        if ( continuableBlock )\n+        if (continuableBlock)\n         {\n             writer.continues();\n         }\n     }\n \n-    public void breaks( String labelName )\n+    public void breaks(String labelName)\n     {\n-        writer.breaks( labelName );\n+        writer.breaks(labelName);\n     }\n \n-    public void throwException( Expression exception )\n+    public void throwException(Expression exception)\n     {\n-        writer.throwException( exception );\n+        writer.throwException(exception);\n     }\n \n     public TypeReference owner()\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1563/CodeBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1563/CodeBlock.java\nindex 28ed972ccef..588834f06c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1563/CodeBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1563/CodeBlock.java\n@@ -168,13 +168,11 @@ public class CodeBlock implements AutoCloseable\n \n         assign( Iterator.class, iteratorName, Expression.invoke( iterable,\n                 MethodReference.methodReference( Iterable.class, Iterator.class, \"iterator\" ) ) );\n-        CodeBlock block = whileLoop( Expression\n-                .invoke( load( iteratorName ), methodReference( Iterator.class, boolean.class, \"hasNext\" ) ) );\n+        CodeBlock block = whileLoop( Expression.invoke( load( iteratorName ), methodReference( Iterator.class, boolean.class, \"hasNext\" ) ) );\n         block.assign( local.type(), local.name(),\n                 Expression.cast( local.type(), Expression.invoke( block.load( iteratorName ),\n                         methodReference( Iterator.class, Object.class, \"next\" ) ) ) );\n-\n-        return block;\n+return block;\n     }\n \n     public CodeBlock whileLoop( Expression test )\n@@ -243,4 +241,4 @@ public class CodeBlock implements AutoCloseable\n     {\n         return clazz.handle();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4403",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4403/EvaluatorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4403/EvaluatorFactory.java\nindex 85f30b3cfc2..7c1d3dd8393 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4403/EvaluatorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4403/EvaluatorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.domain;\n \n import java.util.HashMap;\n@@ -39,141 +40,136 @@ import static org.neo4j.graphdb.traversal.Evaluators.excludeStartPosition;\n  */\n public class EvaluatorFactory\n {\n-    private static final String BUILTIN = \"builtin\";\n-    private static final String KEY_LANGUAGE = \"language\";\n-    private static final String KEY_BODY = \"body\";\n-    private static final String KEY_NAME = \"name\";\n+  private static final String BUILTIN = \"builtin\";\n+  private static final String KEY_LANGUAGE = \"language\";\n+  private static final String KEY_BODY = \"body\";\n+  private static final String KEY_NAME = \"name\";\n \n-    private final ScriptExecutorFactoryRepository factoryRepo;\n+  private final ScriptExecutorFactoryRepository factoryRepo;\n \n-    public EvaluatorFactory( ScriptExecutionMode executionMode )\n-    {\n-        Map<String,ScriptExecutor.Factory> languages = new HashMap<>();\n-        languages.put( \"javascript\", new JavascriptExecutor.Factory( executionMode ) );\n+  public EvaluatorFactory(ScriptExecutionMode executionMode)\n+  {\n+    Map<String, ScriptExecutor.Factory> languages = new HashMap<>();\n+    languages.put(\"javascript\", new JavascriptExecutor.Factory(executionMode));\n \n-        factoryRepo = new ScriptExecutorFactoryRepository( languages );\n-    }\n+    factoryRepo = new ScriptExecutorFactoryRepository(languages);\n+  }\n \n-    public Evaluator pruneEvaluator( Map<String, Object> description )\n+  public Evaluator pruneEvaluator(Map<String, Object> description)\n+  {\n+    if (refersToBuiltInEvaluator(description))\n     {\n-        if ( refersToBuiltInEvaluator( description ) )\n-        {\n-            return builtInPruneEvaluator( description );\n-        }\n-        else\n-        {\n-            return new ScriptedPruneEvaluator( getOrCreateExecutorFor(description) );\n-        }\n-    }\n-\n-    public Evaluator returnFilter( Map<String, Object> description )\n+      return builtInPruneEvaluator(description);\n+    } else\n     {\n-        if ( refersToBuiltInEvaluator( description ) )\n-        {\n-            return builtInReturnFilter( description );\n-        }\n-        else\n-        {\n-            return new ScriptedReturnEvaluator( getOrCreateExecutorFor(description) );\n-        }\n+      return new ScriptedPruneEvaluator(getOrCreateExecutorFor(description));\n     }\n+  }\n \n-    private ScriptExecutor getOrCreateExecutorFor( Map<String, Object> description )\n+  public Evaluator returnFilter(Map<String, Object> description)\n+  {\n+    if (refersToBuiltInEvaluator(description))\n     {\n-        String language = (String) description.get( KEY_LANGUAGE );\n-        String body = (String) description.get( KEY_BODY );\n-\n-        return factoryRepo.getFactory(language).createExecutorForScript( body );\n+      return builtInReturnFilter(description);\n+    } else\n+    {\n+      return new ScriptedReturnEvaluator(getOrCreateExecutorFor(description));\n     }\n-\n-    private static boolean refersToBuiltInEvaluator( Map<String, Object> description )\n+  }\n+\n+  private ScriptExecutor getOrCreateExecutorFor(Map<String, Object> description)\n+  {\n+    String language = (String) description.get(KEY_LANGUAGE);\n+    String body = (String) description.get(KEY_BODY);\n+\n+    return factoryRepo.getFactory(language).createExecutorForScript(body);\n+  }\n+\n+  private static boolean refersToBuiltInEvaluator(Map<String, Object> description)\n+  {\n+    String language = (String) description.get(KEY_LANGUAGE);\n+    return language.equals(BUILTIN);\n+  }\n+\n+  private static Evaluator builtInPruneEvaluator(Map<String, Object> description)\n+  {\n+    String name = (String) description.get(KEY_NAME);\n+    // FIXME I don't like these hardcoded strings\n+    if (name.equalsIgnoreCase(\"none\"))\n     {\n-        String language = (String) description.get( KEY_LANGUAGE );\n-        return language.equals( BUILTIN );\n+      return null;\n+    } else\n+    {\n+      throw new EvaluationException(\"Unrecognized prune evaluator name '\" + name + \"'\");\n     }\n+  }\n \n-    private static Evaluator builtInPruneEvaluator( Map<String, Object> description )\n+  private static Evaluator builtInReturnFilter(Map<String, Object> description)\n+  {\n+    String name = (String) description.get(KEY_NAME);\n+    // FIXME I don't like these hardcoded strings\n+    if (name.equalsIgnoreCase(\"all\"))\n+    {\n+      return null;\n+    } else if (name.equalsIgnoreCase(\"all_but_start_node\"))\n     {\n-        String name = (String) description.get( KEY_NAME );\n-        // FIXME I don't like these hardcoded strings\n-        if ( name.equalsIgnoreCase( \"none\" ) )\n-        {\n-            return null;\n-        }\n-        else\n-        {\n-            throw new EvaluationException( \"Unrecognized prune evaluator name '\" + name + \"'\" );\n-        }\n+      return excludeStartPosition();\n+    } else\n+    {\n+      throw new EvaluationException(\"Unrecognized return evaluator name '\" + name + \"'\");\n     }\n+  }\n+\n+  private abstract static class ScriptedEvaluator\n+  {\n+    private final ScriptExecutor executor;\n+    private final Map<String, Object> scriptContext = new HashMap<>(1);\n \n-    private static Evaluator builtInReturnFilter( Map<String, Object> description )\n+    ScriptedEvaluator(ScriptExecutor executor)\n     {\n-        String name = (String) description.get( KEY_NAME );\n-        // FIXME I don't like these hardcoded strings\n-        if ( name.equalsIgnoreCase( \"all\" ) )\n-        {\n-            return null;\n-        }\n-        else if ( name.equalsIgnoreCase( \"all_but_start_node\" ) )\n-        {\n-            return excludeStartPosition();\n-        }\n-        else\n-        {\n-            throw new EvaluationException( \"Unrecognized return evaluator name '\" + name + \"'\" );\n-        }\n+      this.executor = executor;\n     }\n \n-    private abstract static class ScriptedEvaluator\n+    protected boolean evalPosition(Path path)\n     {\n-        private final ScriptExecutor executor;\n-        private final Map<String,Object> scriptContext = new HashMap<>( 1 );\n+      scriptContext.put(\"position\", path);\n \n-        ScriptedEvaluator( ScriptExecutor executor )\n-        {\n-            this.executor = executor;\n-        }\n+      Object out = executor.execute(scriptContext);\n \n-        protected boolean evalPosition( Path path )\n-        {\n-            scriptContext.put( \"position\", path );\n+      if (out instanceof Boolean)\n+      {\n+        return (Boolean) out;\n+      }\n \n-            Object out = executor.execute( scriptContext );\n+      throw new EvaluationException(\"Provided script did not return a boolean value.\");\n+    }\n+  }\n \n-            if ( out instanceof Boolean )\n-            {\n-                return (Boolean) out;\n-            }\n+  private static class ScriptedPruneEvaluator extends ScriptedEvaluator implements Evaluator\n+  {\n+    ScriptedPruneEvaluator(ScriptExecutor executor)\n+    {\n+      super(executor);\n+    }\n \n-            throw new EvaluationException( \"Provided script did not return a boolean value.\" );\n-        }\n+    @Override\n+    public Evaluation evaluate(Path path)\n+    {\n+      return Evaluation.ofContinues(!evalPosition(path));\n     }\n+  }\n \n-    private static class ScriptedPruneEvaluator extends ScriptedEvaluator implements Evaluator\n+  private static class ScriptedReturnEvaluator extends ScriptedEvaluator implements Evaluator\n+  {\n+    ScriptedReturnEvaluator(ScriptExecutor executor)\n     {\n-        ScriptedPruneEvaluator( ScriptExecutor executor )\n-        {\n-            super( executor );\n-        }\n-\n-        @Override\n-        public Evaluation evaluate( Path path )\n-        {\n-            return Evaluation.ofContinues( !evalPosition( path ) );\n-        }\n+      super(executor);\n     }\n \n-    private static class ScriptedReturnEvaluator extends ScriptedEvaluator implements Evaluator\n+    @Override\n+    public Evaluation evaluate(Path path)\n     {\n-        ScriptedReturnEvaluator( ScriptExecutor executor )\n-        {\n-            super( executor );\n-        }\n-\n-        @Override\n-        public Evaluation evaluate( Path path )\n-        {\n-            return Evaluation.ofIncludes( evalPosition( path ) );\n-        }\n+      return Evaluation.ofIncludes(evalPosition(path));\n     }\n+  }\n }\n",
            "diff_size": 158
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4403/EvaluatorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4403/EvaluatorFactory.java\nindex 85f30b3cfc2..59511168270 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4403/EvaluatorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4403/EvaluatorFactory.java\n@@ -43,18 +43,16 @@ public class EvaluatorFactory\n     private static final String KEY_LANGUAGE = \"language\";\n     private static final String KEY_BODY = \"body\";\n     private static final String KEY_NAME = \"name\";\n-\n-    private final ScriptExecutorFactoryRepository factoryRepo;\n+private final ScriptExecutorFactoryRepository factoryRepo;\n \n     public EvaluatorFactory( ScriptExecutionMode executionMode )\n     {\n         Map<String,ScriptExecutor.Factory> languages = new HashMap<>();\n         languages.put( \"javascript\", new JavascriptExecutor.Factory( executionMode ) );\n-\n-        factoryRepo = new ScriptExecutorFactoryRepository( languages );\n+factoryRepo = new ScriptExecutorFactoryRepository( languages );\n     }\n \n-    public Evaluator pruneEvaluator( Map<String, Object> description )\n+    public Evaluator pruneEvaluator( Map<String,Object> description )\n     {\n         if ( refersToBuiltInEvaluator( description ) )\n         {\n@@ -66,7 +64,7 @@ public class EvaluatorFactory\n         }\n     }\n \n-    public Evaluator returnFilter( Map<String, Object> description )\n+    public Evaluator returnFilter( Map<String,Object> description )\n     {\n         if ( refersToBuiltInEvaluator( description ) )\n         {\n@@ -78,21 +76,20 @@ public class EvaluatorFactory\n         }\n     }\n \n-    private ScriptExecutor getOrCreateExecutorFor( Map<String, Object> description )\n+    private ScriptExecutor getOrCreateExecutorFor( Map<String,Object> description )\n     {\n         String language = (String) description.get( KEY_LANGUAGE );\n         String body = (String) description.get( KEY_BODY );\n-\n-        return factoryRepo.getFactory(language).createExecutorForScript( body );\n+return factoryRepo.getFactory(language).createExecutorForScript( body );\n     }\n \n-    private static boolean refersToBuiltInEvaluator( Map<String, Object> description )\n+    private static boolean refersToBuiltInEvaluator( Map<String,Object> description )\n     {\n         String language = (String) description.get( KEY_LANGUAGE );\n         return language.equals( BUILTIN );\n     }\n \n-    private static Evaluator builtInPruneEvaluator( Map<String, Object> description )\n+    private static Evaluator builtInPruneEvaluator( Map<String,Object> description )\n     {\n         String name = (String) description.get( KEY_NAME );\n         // FIXME I don't like these hardcoded strings\n@@ -106,7 +103,7 @@ public class EvaluatorFactory\n         }\n     }\n \n-    private static Evaluator builtInReturnFilter( Map<String, Object> description )\n+    private static Evaluator builtInReturnFilter( Map<String,Object> description )\n     {\n         String name = (String) description.get( KEY_NAME );\n         // FIXME I don't like these hardcoded strings\n@@ -137,10 +134,8 @@ public class EvaluatorFactory\n         protected boolean evalPosition( Path path )\n         {\n             scriptContext.put( \"position\", path );\n-\n-            Object out = executor.execute( scriptContext );\n-\n-            if ( out instanceof Boolean )\n+Object out = executor.execute( scriptContext );\n+if ( out instanceof Boolean )\n             {\n                 return (Boolean) out;\n             }\n@@ -176,4 +171,4 @@ public class EvaluatorFactory\n             return Evaluation.ofIncludes( evalPosition( path ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
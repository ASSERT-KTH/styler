{
    "project_name": "neo4j-neo4j",
    "error_id": "747",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/747/HeapTrackingOrderedAppendMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/747/HeapTrackingOrderedAppendMap.java\nindex 479294fbb69..36b3e41de06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/747/HeapTrackingOrderedAppendMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/747/HeapTrackingOrderedAppendMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.collection;\n \n import org.eclipse.collections.api.block.function.Function;\n@@ -41,7 +42,7 @@ import static org.neo4j.memory.HeapEstimator.shallowSizeOfObjectArray;\n \n /**\n  * A heap tracking, ordered, append-only, map. It only tracks the internal structure, not the elements within.\n- *\n+ * <p>\n  * Elements are also inserted in a single-linked list to allow traversal from first to last in the order of insertion.\n  * No replacement of existing elements is possible.\n  *\n@@ -50,29 +51,29 @@ import static org.neo4j.memory.HeapEstimator.shallowSizeOfObjectArray;\n  */\n public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n {\n-    private static final long SHALLOW_SIZE = shallowSizeOfInstance( HeapTrackingOrderedAppendMap.class );\n+    private static final long SHALLOW_SIZE = shallowSizeOfInstance(HeapTrackingOrderedAppendMap.class);\n     private static final int INITIAL_CHUNK_SIZE = 32; // Must be even, preferably a power of 2 (32 matches the HeapTrackingUnifiedMap initial size)\n     private static final int MAX_CHUNK_SIZE = 8192; // Must be even, preferably a power of 2\n \n     private final MemoryTracker scopedMemoryTracker;\n-    private HeapTrackingUnifiedMap<K,V> map;\n+    private HeapTrackingUnifiedMap<K, V> map;\n \n     // Linked chunk list used to store key-value pairs in order\n     private Chunk first;\n     private Chunk current;\n \n-    public static <K, V> HeapTrackingOrderedAppendMap<K,V> createOrderedMap( MemoryTracker memoryTracker )\n+    public static <K, V> HeapTrackingOrderedAppendMap<K, V> createOrderedMap(MemoryTracker memoryTracker)\n     {\n         MemoryTracker scopedMemoryTracker = memoryTracker.getScopedMemoryTracker();\n-        scopedMemoryTracker.allocateHeap( SHALLOW_SIZE + SCOPED_MEMORY_TRACKER_SHALLOW_SIZE );\n-        return new HeapTrackingOrderedAppendMap<>( scopedMemoryTracker );\n+        scopedMemoryTracker.allocateHeap(SHALLOW_SIZE + SCOPED_MEMORY_TRACKER_SHALLOW_SIZE);\n+        return new HeapTrackingOrderedAppendMap<>(scopedMemoryTracker);\n     }\n \n-    private HeapTrackingOrderedAppendMap( MemoryTracker scopedMemoryTracker )\n+    private HeapTrackingOrderedAppendMap(MemoryTracker scopedMemoryTracker)\n     {\n         this.scopedMemoryTracker = scopedMemoryTracker;\n-        this.map = newMap( scopedMemoryTracker );\n-        first = new Chunk( INITIAL_CHUNK_SIZE, scopedMemoryTracker );\n+        this.map = newMap(scopedMemoryTracker);\n+        first = new Chunk(INITIAL_CHUNK_SIZE, scopedMemoryTracker);\n         current = first;\n     }\n \n@@ -81,19 +82,19 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n      * return the result of evaluating the specified Function given the internal scoped memory tracker, and put that value in the\n      * map at the specified key.\n      *\n-     * @param key The key to look up or insert a new value for\n+     * @param key      The key to look up or insert a new value for\n      * @param function A function that takes a memory tracker and returns a value.\n      * @return The value for the given key\n      */\n-    public V getIfAbsentPutWithMemoryTracker( K key, Function<MemoryTracker,? extends V> function )\n+    public V getIfAbsentPutWithMemoryTracker(K key, Function<MemoryTracker, ? extends V> function)\n     {\n-        return map.getIfAbsentPutWith( key, p ->\n+        return map.getIfAbsentPutWith(key, p ->\n         {\n             MemoryTracker memoryTracker = scopedMemoryTracker;\n-            V value = p.valueOf( memoryTracker );\n-            addToBuffer( key, value );\n+            V value = p.valueOf(memoryTracker);\n+            addToBuffer(key, value);\n             return value;\n-        }, function );\n+        }, function);\n     }\n \n     /**\n@@ -101,60 +102,60 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n      * return the result of evaluating the specified Function given the internal scoped memory tracker, and put that value in the\n      * map at the specified key.\n      *\n-     * @param key The key to look up or insert a new value for\n+     * @param key      The key to look up or insert a new value for\n      * @param function A function that takes the key and a memory tracker and returns a value.\n      * @return The value for the given key\n      */\n-    public V getIfAbsentPutWithMemoryTracker2( K key, Function2<K, MemoryTracker,? extends V> function )\n+    public V getIfAbsentPutWithMemoryTracker2(K key, Function2<K, MemoryTracker, ? extends V> function)\n     {\n         // NOTE: Based on profiling it seems that because of the overhead of creating an linking a lambda in this method it is faster to do\n         //       separate gets and puts, especially when we expect more gets to happen on existing values.\n-        V value = map.get( key );\n-        if ( value != null )\n+        V value = map.get(key);\n+        if (value != null)\n         {\n             return value;\n         }\n         // Put a new value\n-        V newValue = function.value( key, scopedMemoryTracker );\n-        map.put( key, newValue );\n-        addToBuffer( key, newValue );\n+        V newValue = function.value(key, scopedMemoryTracker);\n+        map.put(key, newValue);\n+        addToBuffer(key, newValue);\n         return newValue;\n     }\n \n     @CalledFromGeneratedCode\n-    public V get( K key )\n+    public V get(K key)\n     {\n-        return map.get( key );\n+        return map.get(key);\n     }\n \n     /**\n      * WARNING: Use only from generated code where we always first call get( key ) to check that the key does not already exist.\n-     *          Will throw if you accidentally replace a value!\n-     *          (This is to avoid having to unnecessarily implement a slow linear scan through the singly-linked list to find and replace the entry)\n+     * Will throw if you accidentally replace a value!\n+     * (This is to avoid having to unnecessarily implement a slow linear scan through the singly-linked list to find and replace the entry)\n      */\n     @CalledFromGeneratedCode\n-    public void put( K key, V value )\n+    public void put(K key, V value)\n     {\n-        addToBuffer( key, value );\n-        if ( map.put( key, value ) != null )\n+        addToBuffer(key, value);\n+        if (map.put(key, value) != null)\n         {\n-            throw new UnsupportedOperationException( \"Replacing an existing value is not supported.\" );\n+            throw new UnsupportedOperationException(\"Replacing an existing value is not supported.\");\n         }\n     }\n \n     /**\n      * Apply the procedure for each value in the map.\n      */\n-    @SuppressWarnings( \"unchecked\" )\n-    public void forEachValue( Procedure<? super V> p )\n+    @SuppressWarnings(\"unchecked\")\n+    public void forEachValue(Procedure<? super V> p)\n     {\n         Chunk chunk = first;\n-        while ( chunk != null )\n+        while (chunk != null)\n         {\n             // Value is at odd indicies (1, 3, 5, ...)\n-            for ( int i = 1; i < chunk.cursor; i += 2 )\n+            for (int i = 1; i < chunk.cursor; i += 2)\n             {\n-                p.accept( (V) chunk.elements[i] );\n+                p.accept((V) chunk.elements[i]);\n             }\n             chunk = chunk.next;\n         }\n@@ -163,11 +164,11 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n     /**\n      * After calling this you can only consume the existing entries through the returned iterator.\n      * The map will be closed and no further entries can be added.\n-     *\n+     * <p>\n      * When the iterator is exhausted it will call close() automatically.\n      * (Everything allocated by the function given to getIfAbsentPutWithMemoryTracker() will then\n-     *  also be released when the scoped memory tracker is closed.)\n-     *\n+     * also be released when the scoped memory tracker is closed.)\n+     * <p>\n      * WARNING: The entries returned by next() are transient and must be consumed before calling next() again!\n      */\n     public Iterator<Map.Entry<K, V>> autoClosingEntryIterator()\n@@ -199,19 +200,19 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n         return first == null;\n     }\n \n-    public void addToBuffer( Object key, Object value )\n+    public void addToBuffer(Object key, Object value)\n     {\n-        if ( !current.add( key, value ) )\n+        if (!current.add(key, value))\n         {\n-            int newChunkSize = grow( current.elements.length );\n-            Chunk newChunk = new Chunk( newChunkSize, scopedMemoryTracker );\n+            int newChunkSize = grow(current.elements.length);\n+            Chunk newChunk = new Chunk(newChunkSize, scopedMemoryTracker);\n             current.next = newChunk;\n             current = newChunk;\n-            current.add( key, value );\n+            current.add(key, value);\n         }\n     }\n \n-    private class AutoClosingTransientEntryIterator implements Iterator<Map.Entry<K,V>>, Map.Entry<K,V>\n+    private class AutoClosingTransientEntryIterator implements Iterator<Map.Entry<K, V>>, Map.Entry<K, V>\n     {\n         private Chunk chunk;\n         private Chunk nextChunk;\n@@ -227,7 +228,7 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n         @Override\n         public boolean hasNext()\n         {\n-            if ( nextChunk == null || nextIndex >= nextChunk.cursor )\n+            if (nextChunk == null || nextIndex >= nextChunk.cursor)\n             {\n                 close();\n                 return false;\n@@ -236,9 +237,9 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n         }\n \n         @Override\n-        public Map.Entry<K,V> next()\n+        public Map.Entry<K, V> next()\n         {\n-            if ( nextChunk == null )\n+            if (nextChunk == null)\n             {\n                 throw new NoSuchElementException();\n             }\n@@ -249,7 +250,7 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n \n             // Advance next entry\n             nextIndex += 2;\n-            if ( nextIndex >= nextChunk.cursor )\n+            if (nextIndex >= nextChunk.cursor)\n             {\n                 nextChunk = nextChunk.next;\n                 nextIndex = 0;\n@@ -260,32 +261,32 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n         }\n \n         @Override\n-        @SuppressWarnings( \"unchecked\" )\n+        @SuppressWarnings(\"unchecked\")\n         public K getKey()\n         {\n             return (K) chunk.elements[index];\n         }\n \n         @Override\n-        @SuppressWarnings( \"unchecked\" )\n+        @SuppressWarnings(\"unchecked\")\n         public V getValue()\n         {\n             return (V) chunk.elements[index + 1];\n         }\n \n         @Override\n-        public V setValue( V value )\n+        public V setValue(V value)\n         {\n             throw new UnsupportedOperationException();\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( o instanceof Map.Entry )\n+            if (o instanceof Map.Entry)\n             {\n-                Map.Entry<?,?> that = (Map.Entry<?,?>) o;\n-                return Objects.equals( this.getKey(), that.getKey() ) && Objects.equals( this.getValue(), that.getValue() );\n+                Map.Entry<?, ?> that = (Map.Entry<?, ?>) o;\n+                return Objects.equals(this.getKey(), that.getKey()) && Objects.equals(this.getValue(), that.getValue());\n             }\n             return false;\n         }\n@@ -304,7 +305,7 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n     {\n         int i = 0;\n         var chunk = first;\n-        while ( chunk != null )\n+        while (chunk != null)\n         {\n             chunk = chunk.next;\n             i++;\n@@ -312,14 +313,14 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n         return i;\n     }\n \n-    private int grow( int size )\n+    private int grow(int size)\n     {\n-        if ( size == MAX_CHUNK_SIZE )\n+        if (size == MAX_CHUNK_SIZE)\n         {\n             return size;\n         }\n         int newSize = size << 1;\n-        if ( newSize <= 0 || newSize > MAX_CHUNK_SIZE ) // Check overflow\n+        if (newSize <= 0 || newSize > MAX_CHUNK_SIZE) // Check overflow\n         {\n             return MAX_CHUNK_SIZE;\n         }\n@@ -328,21 +329,21 @@ public class HeapTrackingOrderedAppendMap<K, V> extends DefaultCloseListenable\n \n     private static class Chunk\n     {\n-        private static final long SHALLOW_SIZE = shallowSizeOfInstance( Chunk.class );\n+        private static final long SHALLOW_SIZE = shallowSizeOfInstance(Chunk.class);\n \n         private final Object[] elements;\n         private Chunk next;\n         private int cursor;\n \n-        Chunk( int size, MemoryTracker memoryTracker )\n+        Chunk(int size, MemoryTracker memoryTracker)\n         {\n-            memoryTracker.allocateHeap( SHALLOW_SIZE + shallowSizeOfObjectArray( size ) );\n+            memoryTracker.allocateHeap(SHALLOW_SIZE + shallowSizeOfObjectArray(size));\n             elements = new Object[size];\n         }\n \n-        boolean add( Object key, Object value )\n+        boolean add(Object key, Object value)\n         {\n-            if ( cursor < elements.length )\n+            if (cursor < elements.length)\n             {\n                 elements[cursor] = key;\n                 elements[cursor + 1] = value;\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
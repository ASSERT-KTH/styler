{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3405",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "63",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3405/KernelTransactionsSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3405/KernelTransactionsSnapshot.java\nindex 64493a40ddf..b230c930866 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3405/KernelTransactionsSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3405/KernelTransactionsSnapshot.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.Set;\n@@ -32,68 +33,67 @@ import org.neo4j.kernel.api.KernelTransactionHandle;\n  */\n public class KernelTransactionsSnapshot\n {\n-    private Tx relevantTransactions;\n-    private final long snapshotTime;\n+  private Tx relevantTransactions;\n+  private final long snapshotTime;\n \n-    public KernelTransactionsSnapshot( Set<KernelTransactionHandle> allTransactions, long snapshotTime )\n+  public KernelTransactionsSnapshot(Set<KernelTransactionHandle> allTransactions, long snapshotTime)\n+  {\n+    Tx head = null;\n+    for (KernelTransactionHandle tx : allTransactions)\n     {\n-        Tx head = null;\n-        for ( KernelTransactionHandle tx : allTransactions )\n+      if (tx.isOpen())\n+      {\n+        Tx current = new Tx(tx);\n+        if (head != null)\n+        {\n+          current.next = head;\n+          head = current;\n+        } else\n         {\n-            if ( tx.isOpen() )\n-            {\n-                Tx current = new Tx( tx );\n-                if ( head != null )\n-                {\n-                    current.next = head;\n-                    head = current;\n-                }\n-                else\n-                {\n-                    head = current;\n-                }\n-            }\n+          head = current;\n         }\n-        relevantTransactions = head;\n-        this.snapshotTime = snapshotTime;\n+      }\n     }\n+    relevantTransactions = head;\n+    this.snapshotTime = snapshotTime;\n+  }\n \n-    public boolean allClosed()\n+  public boolean allClosed()\n+  {\n+    while (relevantTransactions != null)\n     {\n-        while ( relevantTransactions != null )\n-        {\n-            if ( !relevantTransactions.haveClosed() )\n-            {\n-                // At least one transaction hasn't closed yet\n-                return false;\n-            }\n+      if (!relevantTransactions.haveClosed())\n+      {\n+        // At least one transaction hasn't closed yet\n+        return false;\n+      }\n \n-            // This transaction has been closed, unlink so we don't have to check it the next time\n-            relevantTransactions = relevantTransactions.next;\n-        }\n-\n-        // All transactions have been closed\n-        return true;\n+      // This transaction has been closed, unlink so we don't have to check it the next time\n+      relevantTransactions = relevantTransactions.next;\n     }\n \n-    public long snapshotTime()\n+    // All transactions have been closed\n+    return true;\n+  }\n+\n+  public long snapshotTime()\n+  {\n+    return snapshotTime;\n+  }\n+\n+  private static class Tx\n+  {\n+    private final KernelTransactionHandle transaction;\n+    private Tx next;\n+\n+    Tx(KernelTransactionHandle tx)\n     {\n-        return snapshotTime;\n+      this.transaction = tx;\n     }\n \n-    private static class Tx\n+    boolean haveClosed()\n     {\n-        private final KernelTransactionHandle transaction;\n-        private Tx next;\n-\n-        Tx( KernelTransactionHandle tx )\n-        {\n-            this.transaction = tx;\n-        }\n-\n-        boolean haveClosed()\n-        {\n-            return !transaction.isOpen();\n-        }\n+      return !transaction.isOpen();\n     }\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3405/KernelTransactionsSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3405/KernelTransactionsSnapshot.java\nindex 64493a40ddf..4f2aca62eb5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3405/KernelTransactionsSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3405/KernelTransactionsSnapshot.java\n@@ -96,4 +96,4 @@ public class KernelTransactionsSnapshot\n             return !transaction.isOpen();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
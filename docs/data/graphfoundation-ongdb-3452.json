{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3452",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3452/DefaultMasterImplSPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3452/DefaultMasterImplSPI.java\nindex 3ddb26e4509..428cce05298 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3452/DefaultMasterImplSPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3452/DefaultMasterImplSPI.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster;\n \n import java.io.File;\n@@ -57,195 +58,195 @@ import org.neo4j.storageengine.api.TransactionApplicationMode;\n \n public class DefaultMasterImplSPI implements MasterImpl.SPI\n {\n-    private static final int ID_GRAB_SIZE = 1000;\n-    static final String STORE_COPY_CHECKPOINT_TRIGGER = \"store copy\";\n-\n-    private final GraphDatabaseAPI graphDb;\n-    private final TransactionChecksumLookup txChecksumLookup;\n-    private final FileSystemAbstraction fileSystem;\n-    private final LabelTokenHolder labels;\n-    private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n-    private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n-    private final IdGeneratorFactory idGeneratorFactory;\n-    private final NeoStoreDataSource neoStoreDataSource;\n-    private final File storeDir;\n-    private final ResponsePacker responsePacker;\n-    private final Monitors monitors;\n-    private final PageCache pageCache;\n-\n-    private final TransactionCommitProcess transactionCommitProcess;\n-    private final CheckPointer checkPointer;\n-    private final StoreCopyCheckPointMutex mutex;\n-\n-    public DefaultMasterImplSPI( final GraphDatabaseAPI graphDb,\n-                                 FileSystemAbstraction fileSystemAbstraction,\n-                                 Monitors monitors,\n-                                 LabelTokenHolder labels, PropertyKeyTokenHolder propertyKeyTokenHolder,\n-                                 RelationshipTypeTokenHolder relationshipTypeTokenHolder,\n-                                 IdGeneratorFactory idGeneratorFactory,\n-                                 TransactionCommitProcess transactionCommitProcess,\n-                                 CheckPointer checkPointer,\n-                                 TransactionIdStore transactionIdStore,\n-                                 LogicalTransactionStore logicalTransactionStore,\n-                                 NeoStoreDataSource neoStoreDataSource,\n-                                 PageCache pageCache,\n-                                 StoreCopyCheckPointMutex mutex,\n-                                 LogProvider logProvider )\n-    {\n-        this.graphDb = graphDb;\n-        this.fileSystem = fileSystemAbstraction;\n-        this.labels = labels;\n-        this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n-        this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n-        this.idGeneratorFactory = idGeneratorFactory;\n-        this.transactionCommitProcess = transactionCommitProcess;\n-        this.checkPointer = checkPointer;\n-        this.neoStoreDataSource = neoStoreDataSource;\n-        this.mutex = mutex;\n-        this.storeDir = graphDb.getStoreDir();\n-        this.txChecksumLookup = new TransactionChecksumLookup( transactionIdStore, logicalTransactionStore );\n-        this.responsePacker = new ResponsePacker( logicalTransactionStore, transactionIdStore, graphDb::storeId );\n-        this.monitors = monitors;\n-        this.pageCache = pageCache;\n-        monitors.addMonitorListener( new LoggingStoreCopyServerMonitor( logProvider.getLog( StoreCopyServer.class ) ),\n-                StoreCopyServer.class.getName() );\n-    }\n-\n-    @Override\n-    public boolean isAccessible()\n-    {\n-        // Wait for 5s for the database to become available, if not already so\n-        return graphDb.isAvailable( 5000 );\n-    }\n-\n-    @Override\n-    public int getOrCreateLabel( String name )\n-    {\n-        return labels.getOrCreateId( name );\n-    }\n-\n-    @Override\n-    public int getOrCreateProperty( String name )\n-    {\n-        return propertyKeyTokenHolder.getOrCreateId( name );\n-    }\n-\n-    @Override\n-    public IdAllocation allocateIds( IdType idType )\n+  private static final int ID_GRAB_SIZE = 1000;\n+  static final String STORE_COPY_CHECKPOINT_TRIGGER = \"store copy\";\n+\n+  private final GraphDatabaseAPI graphDb;\n+  private final TransactionChecksumLookup txChecksumLookup;\n+  private final FileSystemAbstraction fileSystem;\n+  private final LabelTokenHolder labels;\n+  private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n+  private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+  private final IdGeneratorFactory idGeneratorFactory;\n+  private final NeoStoreDataSource neoStoreDataSource;\n+  private final File storeDir;\n+  private final ResponsePacker responsePacker;\n+  private final Monitors monitors;\n+  private final PageCache pageCache;\n+\n+  private final TransactionCommitProcess transactionCommitProcess;\n+  private final CheckPointer checkPointer;\n+  private final StoreCopyCheckPointMutex mutex;\n+\n+  public DefaultMasterImplSPI(final GraphDatabaseAPI graphDb,\n+                              FileSystemAbstraction fileSystemAbstraction,\n+                              Monitors monitors,\n+                              LabelTokenHolder labels, PropertyKeyTokenHolder propertyKeyTokenHolder,\n+                              RelationshipTypeTokenHolder relationshipTypeTokenHolder,\n+                              IdGeneratorFactory idGeneratorFactory,\n+                              TransactionCommitProcess transactionCommitProcess,\n+                              CheckPointer checkPointer,\n+                              TransactionIdStore transactionIdStore,\n+                              LogicalTransactionStore logicalTransactionStore,\n+                              NeoStoreDataSource neoStoreDataSource,\n+                              PageCache pageCache,\n+                              StoreCopyCheckPointMutex mutex,\n+                              LogProvider logProvider)\n+  {\n+    this.graphDb = graphDb;\n+    this.fileSystem = fileSystemAbstraction;\n+    this.labels = labels;\n+    this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n+    this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n+    this.idGeneratorFactory = idGeneratorFactory;\n+    this.transactionCommitProcess = transactionCommitProcess;\n+    this.checkPointer = checkPointer;\n+    this.neoStoreDataSource = neoStoreDataSource;\n+    this.mutex = mutex;\n+    this.storeDir = graphDb.getStoreDir();\n+    this.txChecksumLookup = new TransactionChecksumLookup(transactionIdStore, logicalTransactionStore);\n+    this.responsePacker = new ResponsePacker(logicalTransactionStore, transactionIdStore, graphDb::storeId);\n+    this.monitors = monitors;\n+    this.pageCache = pageCache;\n+    monitors.addMonitorListener(new LoggingStoreCopyServerMonitor(logProvider.getLog(StoreCopyServer.class)),\n+        StoreCopyServer.class.getName());\n+  }\n+\n+  @Override\n+  public boolean isAccessible()\n+  {\n+    // Wait for 5s for the database to become available, if not already so\n+    return graphDb.isAvailable(5000);\n+  }\n+\n+  @Override\n+  public int getOrCreateLabel(String name)\n+  {\n+    return labels.getOrCreateId(name);\n+  }\n+\n+  @Override\n+  public int getOrCreateProperty(String name)\n+  {\n+    return propertyKeyTokenHolder.getOrCreateId(name);\n+  }\n+\n+  @Override\n+  public IdAllocation allocateIds(IdType idType)\n+  {\n+    IdGenerator generator = idGeneratorFactory.get(idType);\n+    return new IdAllocation(generator.nextIdBatch(ID_GRAB_SIZE), generator.getHighId(),\n+        generator.getDefragCount());\n+  }\n+\n+  @Override\n+  public StoreId storeId()\n+  {\n+    return graphDb.storeId();\n+  }\n+\n+  @Override\n+  public long applyPreparedTransaction(TransactionRepresentation preparedTransaction)\n+      throws TransactionFailureException\n+  {\n+    return transactionCommitProcess.commit(new TransactionToApply(preparedTransaction), CommitEvent.NULL,\n+        TransactionApplicationMode.EXTERNAL);\n+  }\n+\n+  @Override\n+  public Integer createRelationshipType(String name)\n+  {\n+    return relationshipTypeTokenHolder.getOrCreateId(name);\n+  }\n+\n+  @Override\n+  public long getTransactionChecksum(long txId) throws IOException\n+  {\n+    return txChecksumLookup.lookup(txId);\n+  }\n+\n+  @Override\n+  public RequestContext flushStoresAndStreamStoreFiles(StoreWriter writer)\n+  {\n+    StoreCopyServer streamer = new StoreCopyServer(neoStoreDataSource, checkPointer, fileSystem, storeDir,\n+        monitors.newMonitor(StoreCopyServer.Monitor.class, StoreCopyServer.class),\n+        pageCache, mutex);\n+    return streamer.flushStoresAndStreamStoreFiles(STORE_COPY_CHECKPOINT_TRIGGER, writer, false);\n+  }\n+\n+  @Override\n+  public <T> Response<T> packTransactionStreamResponse(RequestContext context, T response)\n+  {\n+    return responsePacker.packTransactionStreamResponse(context, response);\n+  }\n+\n+  @Override\n+  public <T> Response<T> packTransactionObligationResponse(RequestContext context, T response)\n+  {\n+    return responsePacker.packTransactionObligationResponse(context, response);\n+  }\n+\n+  @Override\n+  public <T> Response<T> packEmptyResponse(T response)\n+  {\n+    return responsePacker.packEmptyResponse(response);\n+  }\n+\n+  private static class LoggingStoreCopyServerMonitor implements StoreCopyServer.Monitor\n+  {\n+    private Log log;\n+\n+    LoggingStoreCopyServerMonitor(Log log)\n     {\n-        IdGenerator generator = idGeneratorFactory.get( idType );\n-        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ), generator.getHighId(),\n-                generator.getDefragCount() );\n+      this.log = log;\n     }\n \n     @Override\n-    public StoreId storeId()\n+    public void startTryCheckPoint(String storeCopyIdentifier)\n     {\n-        return graphDb.storeId();\n+      log.debug(\"%s: try to checkpoint before sending store.\", storeCopyIdentifier);\n     }\n \n     @Override\n-    public long applyPreparedTransaction( TransactionRepresentation preparedTransaction )\n-            throws TransactionFailureException\n+    public void finishTryCheckPoint(String storeCopyIdentifier)\n     {\n-        return transactionCommitProcess.commit( new TransactionToApply( preparedTransaction ), CommitEvent.NULL,\n-                TransactionApplicationMode.EXTERNAL );\n+      log.debug(\"%s: checkpoint before sending store completed.\", storeCopyIdentifier);\n     }\n \n     @Override\n-    public Integer createRelationshipType( String name )\n+    public void startStreamingStoreFile(File file, String storeCopyIdentifier)\n     {\n-        return relationshipTypeTokenHolder.getOrCreateId( name );\n+      log.debug(\"%s: start streaming file %s.\", storeCopyIdentifier, file);\n     }\n \n     @Override\n-    public long getTransactionChecksum( long txId ) throws IOException\n+    public void finishStreamingStoreFile(File file, String storeCopyIdentifier)\n     {\n-        return txChecksumLookup.lookup( txId );\n+      log.debug(\"%s: finish streaming file %s.\", storeCopyIdentifier, file);\n     }\n \n     @Override\n-    public RequestContext flushStoresAndStreamStoreFiles( StoreWriter writer )\n+    public void startStreamingStoreFiles(String storeCopyIdentifier)\n     {\n-        StoreCopyServer streamer = new StoreCopyServer( neoStoreDataSource, checkPointer, fileSystem, storeDir,\n-                monitors.newMonitor( StoreCopyServer.Monitor.class, StoreCopyServer.class ),\n-                pageCache, mutex );\n-        return streamer.flushStoresAndStreamStoreFiles( STORE_COPY_CHECKPOINT_TRIGGER, writer, false );\n+      log.debug(\"%s: start streaming store files.\", storeCopyIdentifier);\n     }\n \n     @Override\n-    public <T> Response<T> packTransactionStreamResponse( RequestContext context, T response )\n+    public void finishStreamingStoreFiles(String storeCopyIdentifier)\n     {\n-        return responsePacker.packTransactionStreamResponse( context, response );\n+      log.debug(\"%s: finish streaming store files.\", storeCopyIdentifier);\n     }\n \n     @Override\n-    public <T> Response<T> packTransactionObligationResponse( RequestContext context, T response )\n+    public void startStreamingTransactions(long startTxId, String storeCopyIdentifier)\n     {\n-        return responsePacker.packTransactionObligationResponse( context, response );\n+      log.debug(\"%s: start streaming transaction starting %d.\", storeCopyIdentifier, startTxId);\n     }\n \n     @Override\n-    public <T> Response<T> packEmptyResponse( T response )\n-    {\n-        return responsePacker.packEmptyResponse( response );\n-    }\n-\n-    private static class LoggingStoreCopyServerMonitor implements StoreCopyServer.Monitor\n+    public void finishStreamingTransactions(long endTxId, String storeCopyIdentifier)\n     {\n-        private Log log;\n-\n-        LoggingStoreCopyServerMonitor( Log log )\n-        {\n-            this.log = log;\n-        }\n-\n-        @Override\n-        public void startTryCheckPoint( String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: try to checkpoint before sending store.\", storeCopyIdentifier );\n-        }\n-\n-        @Override\n-        public void finishTryCheckPoint( String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: checkpoint before sending store completed.\", storeCopyIdentifier );\n-        }\n-\n-        @Override\n-        public void startStreamingStoreFile( File file, String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: start streaming file %s.\", storeCopyIdentifier, file );\n-        }\n-\n-        @Override\n-        public void finishStreamingStoreFile( File file, String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: finish streaming file %s.\", storeCopyIdentifier, file );\n-        }\n-\n-        @Override\n-        public void startStreamingStoreFiles( String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: start streaming store files.\", storeCopyIdentifier );\n-        }\n-\n-        @Override\n-        public void finishStreamingStoreFiles( String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: finish streaming store files.\", storeCopyIdentifier );\n-        }\n-\n-        @Override\n-        public void startStreamingTransactions( long startTxId, String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: start streaming transaction starting %d.\", storeCopyIdentifier, startTxId );\n-        }\n-\n-        @Override\n-        public void finishStreamingTransactions( long endTxId, String storeCopyIdentifier )\n-        {\n-            log.debug( \"%s: finish streaming transactions at %d.\", storeCopyIdentifier, endTxId );\n-        }\n+      log.debug(\"%s: finish streaming transactions at %d.\", storeCopyIdentifier, endTxId);\n     }\n+  }\n }\n",
            "diff_size": 223
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3452/DefaultMasterImplSPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3452/DefaultMasterImplSPI.java\nindex 3ddb26e4509..54486360594 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3452/DefaultMasterImplSPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3452/DefaultMasterImplSPI.java\n@@ -59,8 +59,7 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n {\n     private static final int ID_GRAB_SIZE = 1000;\n     static final String STORE_COPY_CHECKPOINT_TRIGGER = \"store copy\";\n-\n-    private final GraphDatabaseAPI graphDb;\n+private final GraphDatabaseAPI graphDb;\n     private final TransactionChecksumLookup txChecksumLookup;\n     private final FileSystemAbstraction fileSystem;\n     private final LabelTokenHolder labels;\n@@ -77,8 +76,7 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n     private final CheckPointer checkPointer;\n     private final StoreCopyCheckPointMutex mutex;\n \n-    public DefaultMasterImplSPI( final GraphDatabaseAPI graphDb,\n-                                 FileSystemAbstraction fileSystemAbstraction,\n+    public DefaultMasterImplSPI( final GraphDatabaseAPI graphDb, FileSystemAbstraction fileSystemAbstraction,\n                                  Monitors monitors,\n                                  LabelTokenHolder labels, PropertyKeyTokenHolder propertyKeyTokenHolder,\n                                  RelationshipTypeTokenHolder relationshipTypeTokenHolder,\n@@ -91,7 +89,7 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n                                  PageCache pageCache,\n                                  StoreCopyCheckPointMutex mutex,\n                                  LogProvider logProvider )\n-    {\n+{\n         this.graphDb = graphDb;\n         this.fileSystem = fileSystemAbstraction;\n         this.labels = labels;\n@@ -107,8 +105,7 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n         this.responsePacker = new ResponsePacker( logicalTransactionStore, transactionIdStore, graphDb::storeId );\n         this.monitors = monitors;\n         this.pageCache = pageCache;\n-        monitors.addMonitorListener( new LoggingStoreCopyServerMonitor( logProvider.getLog( StoreCopyServer.class ) ),\n-                StoreCopyServer.class.getName() );\n+        monitors.addMonitorListener( new LoggingStoreCopyServerMonitor( logProvider.getLog( StoreCopyServer.class ) ), StoreCopyServer.class.getName() );\n     }\n \n     @Override\n@@ -134,8 +131,7 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n     public IdAllocation allocateIds( IdType idType )\n     {\n         IdGenerator generator = idGeneratorFactory.get( idType );\n-        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ), generator.getHighId(),\n-                generator.getDefragCount() );\n+        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ), generator.getHighId(), generator.getDefragCount() );\n     }\n \n     @Override\n@@ -145,9 +141,8 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n     }\n \n     @Override\n-    public long applyPreparedTransaction( TransactionRepresentation preparedTransaction )\n-            throws TransactionFailureException\n-    {\n+    public long applyPreparedTransaction( TransactionRepresentation preparedTransaction ) throws TransactionFailureException\n+{\n         return transactionCommitProcess.commit( new TransactionToApply( preparedTransaction ), CommitEvent.NULL,\n                 TransactionApplicationMode.EXTERNAL );\n     }\n@@ -168,9 +163,8 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n     public RequestContext flushStoresAndStreamStoreFiles( StoreWriter writer )\n     {\n         StoreCopyServer streamer = new StoreCopyServer( neoStoreDataSource, checkPointer, fileSystem, storeDir,\n-                monitors.newMonitor( StoreCopyServer.Monitor.class, StoreCopyServer.class ),\n-                pageCache, mutex );\n-        return streamer.flushStoresAndStreamStoreFiles( STORE_COPY_CHECKPOINT_TRIGGER, writer, false );\n+                monitors.newMonitor( StoreCopyServer.Monitor.class, StoreCopyServer.class ), pageCache, mutex );\n+return streamer.flushStoresAndStreamStoreFiles( STORE_COPY_CHECKPOINT_TRIGGER, writer, false );\n     }\n \n     @Override\n@@ -248,4 +242,4 @@ public class DefaultMasterImplSPI implements MasterImpl.SPI\n             log.debug( \"%s: finish streaming transactions at %d.\", storeCopyIdentifier, endTxId );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
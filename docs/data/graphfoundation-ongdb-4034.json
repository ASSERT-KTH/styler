{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4034",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "204",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "300",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "321",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4034/TxStateTransactionDataSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4034/TxStateTransactionDataSnapshot.java\nindex efd9b79e6c0..845649e79f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4034/TxStateTransactionDataSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4034/TxStateTransactionDataSnapshot.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import java.util.ArrayList;\n@@ -64,492 +65,489 @@ import static org.neo4j.kernel.api.AssertOpen.ALWAYS_OPEN;\n  */\n public class TxStateTransactionDataSnapshot implements TransactionData\n {\n-    private final ReadableTransactionState state;\n-    private final EmbeddedProxySPI proxySpi;\n-    private final StorageStatement storeStatement;\n-    private final StoreReadLayer store;\n-    private final KernelTransaction transaction;\n-\n-    private final Collection<PropertyEntry<Node>> assignedNodeProperties = new ArrayList<>();\n-    private final Collection<PropertyEntry<Relationship>> assignedRelationshipProperties = new ArrayList<>();\n-    private final Collection<LabelEntry> assignedLabels = new ArrayList<>();\n-\n-    private final Collection<PropertyEntry<Node>> removedNodeProperties = new ArrayList<>();\n-    private final Collection<PropertyEntry<Relationship>> removedRelationshipProperties = new ArrayList<>();\n-    private final Collection<LabelEntry> removedLabels = new ArrayList<>();\n-    private final PrimitiveLongObjectMap<RelationshipProxy> relationshipsReadFromStore = Primitive.longObjectMap( 16 );\n-\n-    public TxStateTransactionDataSnapshot(\n-            ReadableTransactionState state, EmbeddedProxySPI proxySpi,\n-            StoreReadLayer storeReadLayer, StorageStatement storageStatement, KernelTransaction transaction )\n+  private final ReadableTransactionState state;\n+  private final EmbeddedProxySPI proxySpi;\n+  private final StorageStatement storeStatement;\n+  private final StoreReadLayer store;\n+  private final KernelTransaction transaction;\n+\n+  private final Collection<PropertyEntry<Node>> assignedNodeProperties = new ArrayList<>();\n+  private final Collection<PropertyEntry<Relationship>> assignedRelationshipProperties = new ArrayList<>();\n+  private final Collection<LabelEntry> assignedLabels = new ArrayList<>();\n+\n+  private final Collection<PropertyEntry<Node>> removedNodeProperties = new ArrayList<>();\n+  private final Collection<PropertyEntry<Relationship>> removedRelationshipProperties = new ArrayList<>();\n+  private final Collection<LabelEntry> removedLabels = new ArrayList<>();\n+  private final PrimitiveLongObjectMap<RelationshipProxy> relationshipsReadFromStore = Primitive.longObjectMap(16);\n+\n+  public TxStateTransactionDataSnapshot(\n+      ReadableTransactionState state, EmbeddedProxySPI proxySpi,\n+      StoreReadLayer storeReadLayer, StorageStatement storageStatement, KernelTransaction transaction)\n+  {\n+    this.state = state;\n+    this.proxySpi = proxySpi;\n+    this.storeStatement = storageStatement;\n+    this.store = storeReadLayer;\n+    this.transaction = transaction;\n+\n+    // Load changes that require store access eagerly, because we won't have access to the after-state\n+    // after the tx has been committed.\n+    takeSnapshot();\n+  }\n+\n+  @Override\n+  public Iterable<Node> createdNodes()\n+  {\n+    return map2Nodes(state.addedAndRemovedNodes().getAdded());\n+  }\n+\n+  @Override\n+  public Iterable<Node> deletedNodes()\n+  {\n+    return map2Nodes(state.addedAndRemovedNodes().getRemoved());\n+  }\n+\n+  @Override\n+  public Iterable<Relationship> createdRelationships()\n+  {\n+    return map2Rels(state.addedAndRemovedRelationships().getAdded());\n+  }\n+\n+  @Override\n+  public Iterable<Relationship> deletedRelationships()\n+  {\n+    return map2Rels(state.addedAndRemovedRelationships().getRemoved());\n+  }\n+\n+  @Override\n+  public boolean isDeleted(Node node)\n+  {\n+    return state.nodeIsDeletedInThisTx(node.getId());\n+  }\n+\n+  @Override\n+  public boolean isDeleted(Relationship relationship)\n+  {\n+    return state.relationshipIsDeletedInThisTx(relationship.getId());\n+  }\n+\n+  @Override\n+  public Iterable<PropertyEntry<Node>> assignedNodeProperties()\n+  {\n+    return assignedNodeProperties;\n+  }\n+\n+  @Override\n+  public Iterable<PropertyEntry<Node>> removedNodeProperties()\n+  {\n+    return removedNodeProperties;\n+  }\n+\n+  @Override\n+  public Iterable<PropertyEntry<Relationship>> assignedRelationshipProperties()\n+  {\n+    return assignedRelationshipProperties;\n+  }\n+\n+  @Override\n+  public Iterable<PropertyEntry<Relationship>> removedRelationshipProperties()\n+  {\n+    return removedRelationshipProperties;\n+  }\n+\n+  @Override\n+  public String username()\n+  {\n+    return transaction.securityContext().subject().username();\n+  }\n+\n+  @Override\n+  public Map<String, Object> metaData()\n+  {\n+    if (transaction instanceof KernelTransactionImplementation)\n     {\n-        this.state = state;\n-        this.proxySpi = proxySpi;\n-        this.storeStatement = storageStatement;\n-        this.store = storeReadLayer;\n-        this.transaction = transaction;\n-\n-        // Load changes that require store access eagerly, because we won't have access to the after-state\n-        // after the tx has been committed.\n-        takeSnapshot();\n-    }\n-\n-    @Override\n-    public Iterable<Node> createdNodes()\n+      return ((KernelTransactionImplementation) transaction).getMetaData();\n+    } else\n     {\n-        return map2Nodes( state.addedAndRemovedNodes().getAdded() );\n+      return Collections.emptyMap();\n     }\n+  }\n+\n+  @Override\n+  public Iterable<LabelEntry> removedLabels()\n+  {\n+    return removedLabels;\n+  }\n+\n+  @Override\n+  public Iterable<LabelEntry> assignedLabels()\n+  {\n+    return assignedLabels;\n+  }\n+\n+  @Override\n+  public long getTransactionId()\n+  {\n+    return transaction.getTransactionId();\n+  }\n+\n+  @Override\n+  public long getCommitTime()\n+  {\n+    return transaction.getCommitTime();\n+  }\n+\n+  private void takeSnapshot()\n+  {\n+    try\n+    {\n+      for (long nodeId : state.addedAndRemovedNodes().getRemoved())\n+      {\n+        try (Cursor<NodeItem> node = storeStatement.acquireSingleNodeCursor(nodeId))\n+        {\n+          if (node.next())\n+          {\n+            Lock lock = node.get().lock();\n+            try (Cursor<PropertyItem> properties = storeStatement\n+                .acquirePropertyCursor(node.get().nextPropertyId(), lock, ALWAYS_OPEN))\n+            {\n+              while (properties.next())\n+              {\n+                removedNodeProperties.add(new NodePropertyEntryView(nodeId,\n+                    store.propertyKeyGetName(properties.get().propertyKeyId()), null,\n+                    properties.get().value()));\n+              }\n+            }\n \n-    @Override\n-    public Iterable<Node> deletedNodes()\n+            node.get().labels().visitKeys(labelId ->\n+            {\n+              removedLabels.add(new LabelEntryView(nodeId, store.labelGetName(labelId)));\n+              return false;\n+            });\n+          }\n+        }\n+      }\n+      for (long relId : state.addedAndRemovedRelationships().getRemoved())\n+      {\n+        Relationship relationshipProxy = relationship(relId);\n+        try (Cursor<RelationshipItem> relationship = storeStatement.acquireSingleRelationshipCursor(relId))\n+        {\n+          if (relationship.next())\n+          {\n+            Lock lock = relationship.get().lock();\n+            try (Cursor<PropertyItem> properties = storeStatement\n+                .acquirePropertyCursor(relationship.get().nextPropertyId(), lock, ALWAYS_OPEN))\n+            {\n+              while (properties.next())\n+              {\n+                removedRelationshipProperties.add(new RelationshipPropertyEntryView(relationshipProxy,\n+                    store.propertyKeyGetName(properties.get().propertyKeyId()), null,\n+                    properties.get().value()));\n+              }\n+            }\n+\n+          }\n+        }\n+      }\n+      for (NodeState nodeState : state.modifiedNodes())\n+      {\n+        Iterator<StorageProperty> added = nodeState.addedAndChangedProperties();\n+        while (added.hasNext())\n+        {\n+          StorageProperty property = added.next();\n+          assignedNodeProperties.add(new NodePropertyEntryView(nodeState.getId(),\n+              store.propertyKeyGetName(property.propertyKeyId()), property.value(),\n+              committedValue(nodeState, property.propertyKeyId())));\n+        }\n+        Iterator<Integer> removed = nodeState.removedProperties();\n+        while (removed.hasNext())\n+        {\n+          Integer property = removed.next();\n+          removedNodeProperties.add(new NodePropertyEntryView(nodeState.getId(),\n+              store.propertyKeyGetName(property), null,\n+              committedValue(nodeState, property)));\n+        }\n+        ReadableDiffSets<Integer> labels = nodeState.labelDiffSets();\n+        for (Integer label : labels.getAdded())\n+        {\n+          assignedLabels.add(new LabelEntryView(nodeState.getId(), store.labelGetName(label)));\n+        }\n+        for (Integer label : labels.getRemoved())\n+        {\n+          removedLabels.add(new LabelEntryView(nodeState.getId(), store.labelGetName(label)));\n+        }\n+      }\n+      for (RelationshipState relState : state.modifiedRelationships())\n+      {\n+        Relationship relationship = relationship(relState.getId());\n+        Iterator<StorageProperty> added = relState.addedAndChangedProperties();\n+        while (added.hasNext())\n+        {\n+          StorageProperty property = added.next();\n+          assignedRelationshipProperties.add(new RelationshipPropertyEntryView(relationship,\n+              store.propertyKeyGetName(property.propertyKeyId()), property.value(),\n+              committedValue(relState, property.propertyKeyId())));\n+        }\n+        Iterator<Integer> removed = relState.removedProperties();\n+        while (removed.hasNext())\n+        {\n+          Integer property = removed.next();\n+          removedRelationshipProperties.add(new RelationshipPropertyEntryView(relationship,\n+              store.propertyKeyGetName(property), null,\n+              committedValue(relState, property)));\n+        }\n+      }\n+    } catch (PropertyKeyIdNotFoundKernelException | LabelNotFoundKernelException e)\n     {\n-        return map2Nodes( state.addedAndRemovedNodes().getRemoved() );\n+      throw new IllegalStateException(\"An entity that does not exist was modified.\", e);\n+    }\n+  }\n+\n+  private Relationship relationship(long relId)\n+  {\n+    RelationshipProxy relationship = proxySpi.newRelationshipProxy(relId);\n+    if (!state.relationshipVisit(relId, relationship))\n+    {   // This relationship has been created or changed in this transaction\n+      RelationshipProxy cached = relationshipsReadFromStore.get(relId);\n+      if (cached != null)\n+      {\n+        return cached;\n+      }\n+\n+      try\n+      {   // Get this relationship data from the store\n+        store.relationshipVisit(relId, relationship);\n+        relationshipsReadFromStore.put(relId, relationship);\n+      } catch (EntityNotFoundException e)\n+      {\n+        throw new IllegalStateException(\n+            \"Getting deleted relationship data should have been covered by the tx state\");\n+      }\n     }\n+    return relationship;\n+  }\n \n-    @Override\n-    public Iterable<Relationship> createdRelationships()\n+  private Iterable<Node> map2Nodes(Iterable<Long> added)\n+  {\n+    return new IterableWrapper<Node, Long>(added)\n+    {\n+      @Override\n+      protected Node underlyingObjectToObject(Long id)\n+      {\n+        return new NodeProxy(proxySpi, id);\n+      }\n+    };\n+  }\n+\n+  private Iterable<Relationship> map2Rels(Iterable<Long> ids)\n+  {\n+    return new IterableWrapper<Relationship, Long>(ids)\n     {\n-        return map2Rels( state.addedAndRemovedRelationships().getAdded() );\n+      @Override\n+      protected Relationship underlyingObjectToObject(Long id)\n+      {\n+        return relationship(id);\n+      }\n+    };\n+  }\n+\n+  private Value committedValue(NodeState nodeState, int property)\n+  {\n+    if (state.nodeIsAddedInThisTx(nodeState.getId()))\n+    {\n+      return Values.NO_VALUE;\n     }\n \n-    @Override\n-    public Iterable<Relationship> deletedRelationships()\n+    try (Cursor<NodeItem> node = storeStatement.acquireSingleNodeCursor(nodeState.getId()))\n     {\n-        return map2Rels( state.addedAndRemovedRelationships().getRemoved() );\n+      if (!node.next())\n+      {\n+        return Values.NO_VALUE;\n+      }\n+\n+      Lock lock = node.get().lock();\n+      try (Cursor<PropertyItem> properties = storeStatement\n+          .acquireSinglePropertyCursor(node.get().nextPropertyId(), property, lock, ALWAYS_OPEN))\n+      {\n+        if (properties.next())\n+        {\n+          return properties.get().value();\n+        }\n+      }\n     }\n \n-    @Override\n-    public boolean isDeleted( Node node )\n+    return Values.NO_VALUE;\n+  }\n+\n+  private Value committedValue(RelationshipState relState, int property)\n+  {\n+    if (state.relationshipIsAddedInThisTx(relState.getId()))\n     {\n-        return state.nodeIsDeletedInThisTx( node.getId() );\n+      return Values.NO_VALUE;\n     }\n \n-    @Override\n-    public boolean isDeleted( Relationship relationship )\n+    try (Cursor<RelationshipItem> relationship = storeStatement.acquireSingleRelationshipCursor(\n+        relState.getId()))\n     {\n-        return state.relationshipIsDeletedInThisTx( relationship.getId() );\n+      if (!relationship.next())\n+      {\n+        return Values.NO_VALUE;\n+      }\n+\n+      Lock lock = relationship.get().lock();\n+      try (Cursor<PropertyItem> properties = storeStatement\n+          .acquireSinglePropertyCursor(relationship.get().nextPropertyId(), property, lock, ALWAYS_OPEN))\n+      {\n+        if (properties.next())\n+        {\n+          return properties.get().value();\n+        }\n+      }\n     }\n \n-    @Override\n-    public Iterable<PropertyEntry<Node>> assignedNodeProperties()\n+    return Values.NO_VALUE;\n+  }\n+\n+  private class NodePropertyEntryView implements PropertyEntry<Node>\n+  {\n+    private final long nodeId;\n+    private final String key;\n+    private final Value newValue;\n+    private final Value oldValue;\n+\n+    NodePropertyEntryView(long nodeId, String key, Value newValue, Value oldValue)\n     {\n-        return assignedNodeProperties;\n+      this.nodeId = nodeId;\n+      this.key = key;\n+      this.newValue = newValue;\n+      this.oldValue = oldValue;\n     }\n \n     @Override\n-    public Iterable<PropertyEntry<Node>> removedNodeProperties()\n+    public Node entity()\n     {\n-        return removedNodeProperties;\n+      return new NodeProxy(proxySpi, nodeId);\n     }\n \n     @Override\n-    public Iterable<PropertyEntry<Relationship>> assignedRelationshipProperties()\n+    public String key()\n     {\n-        return assignedRelationshipProperties;\n+      return key;\n     }\n \n     @Override\n-    public Iterable<PropertyEntry<Relationship>> removedRelationshipProperties()\n+    public Object previouslyCommitedValue()\n     {\n-        return removedRelationshipProperties;\n+      return oldValue.asObjectCopy();\n     }\n \n     @Override\n-    public String username()\n+    public Object value()\n     {\n-        return transaction.securityContext().subject().username();\n+      if (newValue == null || newValue == Values.NO_VALUE)\n+      {\n+        throw new IllegalStateException(\"This property has been removed, it has no value anymore.\");\n+      }\n+      return newValue.asObjectCopy();\n     }\n \n     @Override\n-    public Map<String,Object> metaData()\n+    public String toString()\n     {\n-        if ( transaction instanceof KernelTransactionImplementation )\n-        {\n-            return ((KernelTransactionImplementation) transaction).getMetaData();\n-        }\n-        else\n-        {\n-            return Collections.emptyMap();\n-        }\n+      return \"NodePropertyEntryView{\" +\n+          \"nodeId=\" + nodeId +\n+          \", key='\" + key + '\\'' +\n+          \", newValue=\" + newValue +\n+          \", oldValue=\" + oldValue +\n+          '}';\n     }\n+  }\n \n-    @Override\n-    public Iterable<LabelEntry> removedLabels()\n+  private static class RelationshipPropertyEntryView implements PropertyEntry<Relationship>\n+  {\n+    private final Relationship relationship;\n+    private final String key;\n+    private final Value newValue;\n+    private final Value oldValue;\n+\n+    RelationshipPropertyEntryView(Relationship relationship, String key, Value newValue, Value oldValue)\n     {\n-        return removedLabels;\n+      this.relationship = relationship;\n+      this.key = key;\n+      this.newValue = newValue;\n+      this.oldValue = oldValue;\n     }\n \n     @Override\n-    public Iterable<LabelEntry> assignedLabels()\n+    public Relationship entity()\n     {\n-        return assignedLabels;\n+      return relationship;\n     }\n \n     @Override\n-    public long getTransactionId()\n+    public String key()\n     {\n-        return transaction.getTransactionId();\n+      return key;\n     }\n \n     @Override\n-    public long getCommitTime()\n+    public Object previouslyCommitedValue()\n     {\n-        return transaction.getCommitTime();\n+      return oldValue.asObjectCopy();\n     }\n \n-    private void takeSnapshot()\n+    @Override\n+    public Object value()\n     {\n-        try\n-        {\n-            for ( long nodeId : state.addedAndRemovedNodes().getRemoved() )\n-            {\n-                try ( Cursor<NodeItem> node = storeStatement.acquireSingleNodeCursor( nodeId ) )\n-                {\n-                    if ( node.next() )\n-                    {\n-                        Lock lock = node.get().lock();\n-                        try ( Cursor<PropertyItem> properties = storeStatement\n-                                .acquirePropertyCursor( node.get().nextPropertyId(), lock, ALWAYS_OPEN ) )\n-                        {\n-                            while ( properties.next() )\n-                            {\n-                                removedNodeProperties.add( new NodePropertyEntryView( nodeId,\n-                                        store.propertyKeyGetName( properties.get().propertyKeyId() ), null,\n-                                        properties.get().value() ) );\n-                            }\n-                        }\n-\n-                        node.get().labels().visitKeys( labelId ->\n-                        {\n-                            removedLabels.add( new LabelEntryView( nodeId, store.labelGetName( labelId ) ) );\n-                            return false;\n-                        } );\n-                    }\n-                }\n-            }\n-            for ( long relId : state.addedAndRemovedRelationships().getRemoved() )\n-            {\n-                Relationship relationshipProxy = relationship( relId );\n-                try ( Cursor<RelationshipItem> relationship = storeStatement.acquireSingleRelationshipCursor( relId ) )\n-                {\n-                    if ( relationship.next() )\n-                    {\n-                        Lock lock = relationship.get().lock();\n-                        try ( Cursor<PropertyItem> properties = storeStatement\n-                                .acquirePropertyCursor( relationship.get().nextPropertyId(), lock, ALWAYS_OPEN ) )\n-                        {\n-                            while ( properties.next() )\n-                            {\n-                                removedRelationshipProperties.add( new RelationshipPropertyEntryView( relationshipProxy,\n-                                        store.propertyKeyGetName( properties.get().propertyKeyId() ), null,\n-                                        properties.get().value() ) );\n-                            }\n-                        }\n-\n-                    }\n-                }\n-            }\n-            for ( NodeState nodeState : state.modifiedNodes() )\n-            {\n-                Iterator<StorageProperty> added = nodeState.addedAndChangedProperties();\n-                while ( added.hasNext() )\n-                {\n-                    StorageProperty property = added.next();\n-                    assignedNodeProperties.add( new NodePropertyEntryView( nodeState.getId(),\n-                            store.propertyKeyGetName( property.propertyKeyId() ), property.value(),\n-                            committedValue( nodeState, property.propertyKeyId() ) ) );\n-                }\n-                Iterator<Integer> removed = nodeState.removedProperties();\n-                while ( removed.hasNext() )\n-                {\n-                    Integer property = removed.next();\n-                    removedNodeProperties.add( new NodePropertyEntryView( nodeState.getId(),\n-                            store.propertyKeyGetName( property ), null,\n-                            committedValue( nodeState, property ) ) );\n-                }\n-                ReadableDiffSets<Integer> labels = nodeState.labelDiffSets();\n-                for ( Integer label : labels.getAdded() )\n-                {\n-                    assignedLabels.add( new LabelEntryView( nodeState.getId(), store.labelGetName( label ) ) );\n-                }\n-                for ( Integer label : labels.getRemoved() )\n-                {\n-                    removedLabels.add( new LabelEntryView( nodeState.getId(), store.labelGetName( label ) ) );\n-                }\n-            }\n-            for ( RelationshipState relState : state.modifiedRelationships() )\n-            {\n-                Relationship relationship = relationship( relState.getId() );\n-                Iterator<StorageProperty> added = relState.addedAndChangedProperties();\n-                while ( added.hasNext() )\n-                {\n-                    StorageProperty property = added.next();\n-                    assignedRelationshipProperties.add( new RelationshipPropertyEntryView( relationship,\n-                            store.propertyKeyGetName( property.propertyKeyId() ), property.value(),\n-                            committedValue( relState, property.propertyKeyId() ) ) );\n-                }\n-                Iterator<Integer> removed = relState.removedProperties();\n-                while ( removed.hasNext() )\n-                {\n-                    Integer property = removed.next();\n-                    removedRelationshipProperties.add( new RelationshipPropertyEntryView( relationship,\n-                            store.propertyKeyGetName( property ), null,\n-                            committedValue( relState, property ) ) );\n-                }\n-            }\n-        }\n-        catch ( PropertyKeyIdNotFoundKernelException | LabelNotFoundKernelException e )\n-        {\n-            throw new IllegalStateException( \"An entity that does not exist was modified.\", e );\n-        }\n+      if (newValue == null || newValue == Values.NO_VALUE)\n+      {\n+        throw new IllegalStateException(\"This property has been removed, it has no value anymore.\");\n+      }\n+      return newValue.asObjectCopy();\n     }\n \n-    private Relationship relationship( long relId )\n+    @Override\n+    public String toString()\n     {\n-        RelationshipProxy relationship = proxySpi.newRelationshipProxy( relId );\n-        if ( !state.relationshipVisit( relId, relationship ) )\n-        {   // This relationship has been created or changed in this transaction\n-            RelationshipProxy cached = relationshipsReadFromStore.get( relId );\n-            if ( cached != null )\n-            {\n-                return cached;\n-            }\n-\n-            try\n-            {   // Get this relationship data from the store\n-                store.relationshipVisit( relId, relationship );\n-                relationshipsReadFromStore.put( relId, relationship );\n-            }\n-            catch ( EntityNotFoundException e )\n-            {\n-                throw new IllegalStateException(\n-                        \"Getting deleted relationship data should have been covered by the tx state\" );\n-            }\n-        }\n-        return relationship;\n+      return \"RelationshipPropertyEntryView{\" +\n+          \"relId=\" + relationship.getId() +\n+          \", key='\" + key + '\\'' +\n+          \", newValue=\" + newValue +\n+          \", oldValue=\" + oldValue +\n+          '}';\n     }\n+  }\n \n-    private Iterable<Node> map2Nodes( Iterable<Long> added )\n-    {\n-        return new IterableWrapper<Node, Long>( added )\n-        {\n-            @Override\n-            protected Node underlyingObjectToObject( Long id )\n-            {\n-                return new NodeProxy( proxySpi, id );\n-            }\n-        };\n-    }\n+  private class LabelEntryView implements LabelEntry\n+  {\n+    private final long nodeId;\n+    private final Label label;\n \n-    private Iterable<Relationship> map2Rels( Iterable<Long> ids )\n+    LabelEntryView(long nodeId, String labelName)\n     {\n-        return new IterableWrapper<Relationship, Long>( ids )\n-        {\n-            @Override\n-            protected Relationship underlyingObjectToObject( Long id )\n-            {\n-                return relationship( id );\n-            }\n-        };\n+      this.nodeId = nodeId;\n+      this.label = Label.label(labelName);\n     }\n \n-    private Value committedValue( NodeState nodeState, int property )\n-    {\n-        if ( state.nodeIsAddedInThisTx( nodeState.getId() ) )\n-        {\n-            return Values.NO_VALUE;\n-        }\n-\n-        try ( Cursor<NodeItem> node = storeStatement.acquireSingleNodeCursor( nodeState.getId() ) )\n-        {\n-            if ( !node.next() )\n-            {\n-                return Values.NO_VALUE;\n-            }\n-\n-            Lock lock = node.get().lock();\n-            try ( Cursor<PropertyItem> properties = storeStatement\n-                    .acquireSinglePropertyCursor( node.get().nextPropertyId(), property, lock, ALWAYS_OPEN ) )\n-            {\n-                if ( properties.next() )\n-                {\n-                    return properties.get().value();\n-                }\n-            }\n-        }\n-\n-        return Values.NO_VALUE;\n-    }\n-\n-    private Value committedValue( RelationshipState relState, int property )\n+    @Override\n+    public Label label()\n     {\n-        if ( state.relationshipIsAddedInThisTx( relState.getId() ) )\n-        {\n-            return Values.NO_VALUE;\n-        }\n-\n-        try ( Cursor<RelationshipItem> relationship = storeStatement.acquireSingleRelationshipCursor(\n-                relState.getId() ) )\n-        {\n-            if ( !relationship.next() )\n-            {\n-                return Values.NO_VALUE;\n-            }\n-\n-            Lock lock = relationship.get().lock();\n-            try ( Cursor<PropertyItem> properties = storeStatement\n-                    .acquireSinglePropertyCursor( relationship.get().nextPropertyId(), property, lock, ALWAYS_OPEN ) )\n-            {\n-                if ( properties.next() )\n-                {\n-                    return properties.get().value();\n-                }\n-            }\n-        }\n-\n-        return Values.NO_VALUE;\n+      return label;\n     }\n \n-    private class NodePropertyEntryView implements PropertyEntry<Node>\n-    {\n-        private final long nodeId;\n-        private final String key;\n-        private final Value newValue;\n-        private final Value oldValue;\n-\n-        NodePropertyEntryView( long nodeId, String key, Value newValue, Value oldValue )\n-        {\n-            this.nodeId = nodeId;\n-            this.key = key;\n-            this.newValue = newValue;\n-            this.oldValue = oldValue;\n-        }\n-\n-        @Override\n-        public Node entity()\n-        {\n-            return new NodeProxy( proxySpi, nodeId );\n-        }\n-\n-        @Override\n-        public String key()\n-        {\n-            return key;\n-        }\n-\n-        @Override\n-        public Object previouslyCommitedValue()\n-        {\n-            return oldValue.asObjectCopy();\n-        }\n-\n-        @Override\n-        public Object value()\n-        {\n-            if ( newValue == null || newValue == Values.NO_VALUE )\n-            {\n-                throw new IllegalStateException( \"This property has been removed, it has no value anymore.\" );\n-            }\n-            return newValue.asObjectCopy();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"NodePropertyEntryView{\" +\n-                    \"nodeId=\" + nodeId +\n-                    \", key='\" + key + '\\'' +\n-                    \", newValue=\" + newValue +\n-                    \", oldValue=\" + oldValue +\n-                    '}';\n-        }\n-    }\n-\n-    private static class RelationshipPropertyEntryView implements PropertyEntry<Relationship>\n+    @Override\n+    public Node node()\n     {\n-        private final Relationship relationship;\n-        private final String key;\n-        private final Value newValue;\n-        private final Value oldValue;\n-\n-        RelationshipPropertyEntryView( Relationship relationship, String key, Value newValue, Value oldValue )\n-        {\n-            this.relationship = relationship;\n-            this.key = key;\n-            this.newValue = newValue;\n-            this.oldValue = oldValue;\n-        }\n-\n-        @Override\n-        public Relationship entity()\n-        {\n-            return relationship;\n-        }\n-\n-        @Override\n-        public String key()\n-        {\n-            return key;\n-        }\n-\n-        @Override\n-        public Object previouslyCommitedValue()\n-        {\n-            return oldValue.asObjectCopy();\n-        }\n-\n-        @Override\n-        public Object value()\n-        {\n-            if ( newValue == null || newValue == Values.NO_VALUE )\n-            {\n-                throw new IllegalStateException( \"This property has been removed, it has no value anymore.\" );\n-            }\n-            return newValue.asObjectCopy();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"RelationshipPropertyEntryView{\" +\n-                    \"relId=\" + relationship.getId() +\n-                    \", key='\" + key + '\\'' +\n-                    \", newValue=\" + newValue +\n-                    \", oldValue=\" + oldValue +\n-                    '}';\n-        }\n+      return new NodeProxy(proxySpi, nodeId);\n     }\n \n-    private class LabelEntryView implements LabelEntry\n+    @Override\n+    public String toString()\n     {\n-        private final long nodeId;\n-        private final Label label;\n-\n-        LabelEntryView( long nodeId, String labelName )\n-        {\n-            this.nodeId = nodeId;\n-            this.label = Label.label( labelName );\n-        }\n-\n-        @Override\n-        public Label label()\n-        {\n-            return label;\n-        }\n-\n-        @Override\n-        public Node node()\n-        {\n-            return new NodeProxy( proxySpi, nodeId );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"LabelEntryView{\" +\n-                    \"nodeId=\" + nodeId +\n-                    \", label=\" + label +\n-                    '}';\n-        }\n+      return \"LabelEntryView{\" +\n+          \"nodeId=\" + nodeId +\n+          \", label=\" + label +\n+          '}';\n     }\n+  }\n }\n",
            "diff_size": 731
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "393",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "503",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4034/TxStateTransactionDataSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4034/TxStateTransactionDataSnapshot.java\nindex efd9b79e6c0..89da4288d52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4034/TxStateTransactionDataSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4034/TxStateTransactionDataSnapshot.java\n@@ -79,8 +79,7 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n     private final Collection<LabelEntry> removedLabels = new ArrayList<>();\n     private final PrimitiveLongObjectMap<RelationshipProxy> relationshipsReadFromStore = Primitive.longObjectMap( 16 );\n \n-    public TxStateTransactionDataSnapshot(\n-            ReadableTransactionState state, EmbeddedProxySPI proxySpi,\n+    public TxStateTransactionDataSnapshot( ReadableTransactionState state, EmbeddedProxySPI proxySpi,\n             StoreReadLayer storeReadLayer, StorageStatement storageStatement, KernelTransaction transaction )\n     {\n         this.state = state;\n@@ -208,15 +207,14 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n                     if ( node.next() )\n                     {\n                         Lock lock = node.get().lock();\n-                        try ( Cursor<PropertyItem> properties = storeStatement\n-                                .acquirePropertyCursor( node.get().nextPropertyId(), lock, ALWAYS_OPEN ) )\n+                        try ( Cursor<PropertyItem> properties = storeStatement.acquirePropertyCursor( node.get().nextPropertyId(), lock, ALWAYS_OPEN ) )\n                         {\n                             while ( properties.next() )\n                             {\n                                 removedNodeProperties.add( new NodePropertyEntryView( nodeId,\n                                         store.propertyKeyGetName( properties.get().propertyKeyId() ), null,\n                                         properties.get().value() ) );\n-                            }\n+    }\n                         }\n \n                         node.get().labels().visitKeys( labelId ->\n@@ -235,18 +233,16 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n                     if ( relationship.next() )\n                     {\n                         Lock lock = relationship.get().lock();\n-                        try ( Cursor<PropertyItem> properties = storeStatement\n-                                .acquirePropertyCursor( relationship.get().nextPropertyId(), lock, ALWAYS_OPEN ) )\n+                        try ( Cursor<PropertyItem> properties = storeStatement.acquirePropertyCursor( relationship.get().nextPropertyId(), lock, ALWAYS_OPEN ) )\n                         {\n                             while ( properties.next() )\n                             {\n                                 removedRelationshipProperties.add( new RelationshipPropertyEntryView( relationshipProxy,\n                                         store.propertyKeyGetName( properties.get().propertyKeyId() ), null,\n                                         properties.get().value() ) );\n-                            }\n+    }\n                         }\n-\n-                    }\n+    }\n                 }\n             }\n             for ( NodeState nodeState : state.modifiedNodes() )\n@@ -255,16 +251,14 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n                 while ( added.hasNext() )\n                 {\n                     StorageProperty property = added.next();\n-                    assignedNodeProperties.add( new NodePropertyEntryView( nodeState.getId(),\n-                            store.propertyKeyGetName( property.propertyKeyId() ), property.value(),\n+                    assignedNodeProperties.add( new NodePropertyEntryView( nodeState.getId(), store.propertyKeyGetName( property.propertyKeyId() ), property.value(),\n                             committedValue( nodeState, property.propertyKeyId() ) ) );\n                 }\n                 Iterator<Integer> removed = nodeState.removedProperties();\n                 while ( removed.hasNext() )\n                 {\n                     Integer property = removed.next();\n-                    removedNodeProperties.add( new NodePropertyEntryView( nodeState.getId(),\n-                            store.propertyKeyGetName( property ), null,\n+                    removedNodeProperties.add( new NodePropertyEntryView( nodeState.getId(), store.propertyKeyGetName( property ), null,\n                             committedValue( nodeState, property ) ) );\n                 }\n                 ReadableDiffSets<Integer> labels = nodeState.labelDiffSets();\n@@ -295,7 +289,7 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n                     removedRelationshipProperties.add( new RelationshipPropertyEntryView( relationship,\n                             store.propertyKeyGetName( property ), null,\n                             committedValue( relState, property ) ) );\n-                }\n+    }\n             }\n         }\n         catch ( PropertyKeyIdNotFoundKernelException | LabelNotFoundKernelException e )\n@@ -308,7 +302,8 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n     {\n         RelationshipProxy relationship = proxySpi.newRelationshipProxy( relId );\n         if ( !state.relationshipVisit( relId, relationship ) )\n-        {   // This relationship has been created or changed in this transaction\n+        {\n+    // This relationship has been created or changed in this transaction\n             RelationshipProxy cached = relationshipsReadFromStore.get( relId );\n             if ( cached != null )\n             {\n@@ -316,15 +311,15 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n             }\n \n             try\n-            {   // Get this relationship data from the store\n+            {\n+    // Get this relationship data from the store\n                 store.relationshipVisit( relId, relationship );\n                 relationshipsReadFromStore.put( relId, relationship );\n             }\n             catch ( EntityNotFoundException e )\n             {\n-                throw new IllegalStateException(\n-                        \"Getting deleted relationship data should have been covered by the tx state\" );\n-            }\n+                throw new IllegalStateException( \"Getting deleted relationship data should have been covered by the tx state\" );\n+    }\n         }\n         return relationship;\n     }\n@@ -368,9 +363,8 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n             }\n \n             Lock lock = node.get().lock();\n-            try ( Cursor<PropertyItem> properties = storeStatement\n-                    .acquireSinglePropertyCursor( node.get().nextPropertyId(), property, lock, ALWAYS_OPEN ) )\n-            {\n+            try ( Cursor<PropertyItem> properties = storeStatement.acquireSinglePropertyCursor( node.get().nextPropertyId(), property, lock, ALWAYS_OPEN ) )\n+{\n                 if ( properties.next() )\n                 {\n                     return properties.get().value();\n@@ -388,18 +382,16 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n             return Values.NO_VALUE;\n         }\n \n-        try ( Cursor<RelationshipItem> relationship = storeStatement.acquireSingleRelationshipCursor(\n-                relState.getId() ) )\n-        {\n+        try ( Cursor<RelationshipItem> relationship = storeStatement.acquireSingleRelationshipCursor( relState.getId() ) )\n+{\n             if ( !relationship.next() )\n             {\n                 return Values.NO_VALUE;\n             }\n \n             Lock lock = relationship.get().lock();\n-            try ( Cursor<PropertyItem> properties = storeStatement\n-                    .acquireSinglePropertyCursor( relationship.get().nextPropertyId(), property, lock, ALWAYS_OPEN ) )\n-            {\n+            try ( Cursor<PropertyItem> properties = storeStatement.acquireSinglePropertyCursor( relationship.get().nextPropertyId(), property, lock, ALWAYS_OPEN ) )\n+{\n                 if ( properties.next() )\n                 {\n                     return properties.get().value();\n@@ -450,19 +442,15 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n             {\n                 throw new IllegalStateException( \"This property has been removed, it has no value anymore.\" );\n             }\n-            return newValue.asObjectCopy();\n+\n+return newValue.asObjectCopy();\n         }\n \n         @Override\n         public String toString()\n         {\n-            return \"NodePropertyEntryView{\" +\n-                    \"nodeId=\" + nodeId +\n-                    \", key='\" + key + '\\'' +\n-                    \", newValue=\" + newValue +\n-                    \", oldValue=\" + oldValue +\n-                    '}';\n-        }\n+            return \"NodePropertyEntryView{\" + \"nodeId=\" + nodeId + \", key='\" + key + '\\'' + \", newValue=\" + newValue + \", oldValue=\" + oldValue + '}';\n+    }\n     }\n \n     private static class RelationshipPropertyEntryView implements PropertyEntry<Relationship>\n@@ -505,19 +493,15 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n             {\n                 throw new IllegalStateException( \"This property has been removed, it has no value anymore.\" );\n             }\n-            return newValue.asObjectCopy();\n+\n+return newValue.asObjectCopy();\n         }\n \n         @Override\n         public String toString()\n         {\n-            return \"RelationshipPropertyEntryView{\" +\n-                    \"relId=\" + relationship.getId() +\n-                    \", key='\" + key + '\\'' +\n-                    \", newValue=\" + newValue +\n-                    \", oldValue=\" + oldValue +\n-                    '}';\n-        }\n+            return \"RelationshipPropertyEntryView{\" + \"relId=\" + relationship.getId() + \", key='\" + key + '\\'' + \", newValue=\" + newValue + \", oldValue=\" + oldValue + '}';\n+    }\n     }\n \n     private class LabelEntryView implements LabelEntry\n@@ -546,10 +530,7 @@ public class TxStateTransactionDataSnapshot implements TransactionData\n         @Override\n         public String toString()\n         {\n-            return \"LabelEntryView{\" +\n-                    \"nodeId=\" + nodeId +\n-                    \", label=\" + label +\n-                    '}';\n-        }\n+            return \"LabelEntryView{\" + \"nodeId=\" + nodeId + \", label=\" + label + '}';\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 55
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
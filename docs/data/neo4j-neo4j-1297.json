{
    "project_name": "neo4j-neo4j",
    "error_id": "1297",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "257",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1297/DbStructureCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1297/DbStructureCollector.java\nindex bfb38b66dc3..25eb5193c65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1297/DbStructureCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1297/DbStructureCollector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.dbstructure;\n \n import org.eclipse.collections.api.map.primitive.MutableIntLongMap;\n@@ -43,11 +44,11 @@ import static java.lang.String.format;\n \n public class DbStructureCollector implements DbStructureVisitor\n {\n-    private final TokenMap labels = new TokenMap( \"label\" );\n-    private final TokenMap propertyKeys = new TokenMap( \"property key\" );\n-    private final TokenMap relationshipTypes = new TokenMap( \"relationship types\" );\n-    private final IndexDescriptorMap regularIndices = new IndexDescriptorMap( \"regular\" );\n-    private final IndexDescriptorMap uniqueIndices = new IndexDescriptorMap( \"unique\" );\n+    private final TokenMap labels = new TokenMap(\"label\");\n+    private final TokenMap propertyKeys = new TokenMap(\"property key\");\n+    private final TokenMap relationshipTypes = new TokenMap(\"relationship types\");\n+    private final IndexDescriptorMap regularIndices = new IndexDescriptorMap(\"regular\");\n+    private final IndexDescriptorMap uniqueIndices = new IndexDescriptorMap(\"unique\");\n     private final Set<UniquenessConstraintDescriptor> uniquenessConstraints = new HashSet<>();\n     private final Set<NodeExistenceConstraintDescriptor> nodePropertyExistenceConstraints = new HashSet<>();\n     private final Set<RelExistenceConstraintDescriptor> relPropertyExistenceConstraints = new HashSet<>();\n@@ -79,33 +80,33 @@ public class DbStructureCollector implements DbStructureVisitor\n             }\n \n             @Override\n-            public Iterator<Pair<String[],String[]>> knownIndices()\n+            public Iterator<Pair<String[], String[]>> knownIndices()\n             {\n                 return regularIndices.iterator();\n             }\n \n             @Override\n-            public Iterator<Pair<String[],String[]>> knownUniqueIndices()\n+            public Iterator<Pair<String[], String[]>> knownUniqueIndices()\n             {\n                 return uniqueIndices.iterator();\n             }\n \n             @Override\n-            public Iterator<Pair<String,String[]>> knownUniqueConstraints()\n+            public Iterator<Pair<String, String[]>> knownUniqueConstraints()\n             {\n-                return idsToNames( uniquenessConstraints );\n+                return idsToNames(uniquenessConstraints);\n             }\n \n             @Override\n-            public Iterator<Pair<String,String[]>> knownNodePropertyExistenceConstraints()\n+            public Iterator<Pair<String, String[]>> knownNodePropertyExistenceConstraints()\n             {\n-                return idsToNames( nodePropertyExistenceConstraints );\n+                return idsToNames(nodePropertyExistenceConstraints);\n             }\n \n             @Override\n-            public Iterator<Pair<String,String[]>> knownNodeKeyConstraints()\n+            public Iterator<Pair<String, String[]>> knownNodeKeyConstraints()\n             {\n-                return idsToNames( nodeKeyConstraints );\n+                return idsToNames(nodeKeyConstraints);\n             }\n \n             @Override\n@@ -115,171 +116,170 @@ public class DbStructureCollector implements DbStructureVisitor\n             }\n \n             @Override\n-            public Iterator<Pair<String,String[]>> knownRelationshipPropertyExistenceConstraints()\n+            public Iterator<Pair<String, String[]>> knownRelationshipPropertyExistenceConstraints()\n             {\n-                return Iterators.map( relConstraint ->\n+                return Iterators.map(relConstraint ->\n                 {\n-                    String label = labels.byIdOrFail( relConstraint.schema().getRelTypeId() );\n+                    String label = labels.byIdOrFail(relConstraint.schema().getRelTypeId());\n                     String[] propertyKeyNames = propertyKeys\n-                            .byIdOrFail( relConstraint.schema().getPropertyIds() );\n-                    return Pair.of( label, propertyKeyNames );\n-                }, relPropertyExistenceConstraints.iterator() );\n+                      .byIdOrFail(relConstraint.schema().getPropertyIds());\n+                    return Pair.of(label, propertyKeyNames);\n+                }, relPropertyExistenceConstraints.iterator());\n             }\n \n             @Override\n-            public long nodesWithLabelCardinality( int labelId )\n+            public long nodesWithLabelCardinality(int labelId)\n             {\n-                return nodeCounts.getIfAbsent( labelId, 0L );\n+                return nodeCounts.getIfAbsent(labelId, 0L);\n             }\n \n             @Override\n-            public long cardinalityByLabelsAndRelationshipType( int fromLabelId, int relTypeId, int toLabelId )\n+            public long cardinalityByLabelsAndRelationshipType(int fromLabelId, int relTypeId, int toLabelId)\n             {\n-                RelSpecifier specifier = new RelSpecifier( fromLabelId, relTypeId, toLabelId );\n-                Long result = relCounts.get( specifier );\n+                RelSpecifier specifier = new RelSpecifier(fromLabelId, relTypeId, toLabelId);\n+                Long result = relCounts.get(specifier);\n                 return result == null ? 0L : result;\n             }\n \n             @Override\n-            public double indexUniqueValueSelectivity( int labelId, int... propertyKeyIds )\n+            public double indexUniqueValueSelectivity(int labelId, int... propertyKeyIds)\n             {\n-                SchemaDescriptor descriptor = SchemaDescriptor.forLabel( labelId, propertyKeyIds );\n-                IndexStatistics result1 = regularIndices.getIndex( descriptor );\n-                IndexStatistics result2 = result1 == null ? uniqueIndices.getIndex( descriptor ) : result1;\n+                SchemaDescriptor descriptor = SchemaDescriptor.forLabel(labelId, propertyKeyIds);\n+                IndexStatistics result1 = regularIndices.getIndex(descriptor);\n+                IndexStatistics result2 = result1 == null ? uniqueIndices.getIndex(descriptor) : result1;\n                 return result2 == null ? Double.NaN : result2.uniqueValuesPercentage;\n             }\n \n             @Override\n-            public double indexPropertyExistsSelectivity( int labelId, int... propertyKeyIds )\n+            public double indexPropertyExistsSelectivity(int labelId, int... propertyKeyIds)\n             {\n-                SchemaDescriptor descriptor = SchemaDescriptor.forLabel( labelId, propertyKeyIds );\n-                IndexStatistics result1 = regularIndices.getIndex( descriptor );\n-                IndexStatistics result2 = result1 == null ? uniqueIndices.getIndex( descriptor ) : result1;\n+                SchemaDescriptor descriptor = SchemaDescriptor.forLabel(labelId, propertyKeyIds);\n+                IndexStatistics result1 = regularIndices.getIndex(descriptor);\n+                IndexStatistics result2 = result1 == null ? uniqueIndices.getIndex(descriptor) : result1;\n                 double indexSize = result2 == null ? Double.NaN : result2.size;\n-                return indexSize / nodesWithLabelCardinality( labelId );\n+                return indexSize / nodesWithLabelCardinality(labelId);\n             }\n \n-            private Iterator<Pair<String,String[]>> idsToNames( Iterable<? extends SchemaDescriptorSupplier> nodeConstraints )\n+            private Iterator<Pair<String, String[]>> idsToNames(Iterable<? extends SchemaDescriptorSupplier> nodeConstraints)\n             {\n-                return Iterators.map( nodeConstraint ->\n+                return Iterators.map(nodeConstraint ->\n                 {\n-                    String label = labels.byIdOrFail( nodeConstraint.schema().getLabelId() );\n+                    String label = labels.byIdOrFail(nodeConstraint.schema().getLabelId());\n                     String[] propertyKeyNames = propertyKeys\n-                            .byIdOrFail( nodeConstraint.schema().getPropertyIds() );\n-                    return Pair.of( label, propertyKeyNames );\n-                }, nodeConstraints.iterator() );\n+                      .byIdOrFail(nodeConstraint.schema().getPropertyIds());\n+                    return Pair.of(label, propertyKeyNames);\n+                }, nodeConstraints.iterator());\n             }\n         };\n     }\n \n     @Override\n-    public void visitLabel( int labelId, String labelName )\n+    public void visitLabel(int labelId, String labelName)\n     {\n-        labels.putToken( labelId, labelName );\n+        labels.putToken(labelId, labelName);\n     }\n \n     @Override\n-    public void visitPropertyKey( int propertyKeyId, String propertyKeyName )\n+    public void visitPropertyKey(int propertyKeyId, String propertyKeyName)\n     {\n-        propertyKeys.putToken( propertyKeyId, propertyKeyName );\n+        propertyKeys.putToken(propertyKeyId, propertyKeyName);\n     }\n \n     @Override\n-    public void visitRelationshipType( int relTypeId, String relTypeName )\n+    public void visitRelationshipType(int relTypeId, String relTypeName)\n     {\n-        relationshipTypes.putToken( relTypeId, relTypeName );\n+        relationshipTypes.putToken(relTypeId, relTypeName);\n     }\n \n     @Override\n-    public void visitIndex( IndexDescriptor descriptor, String userDescription,\n-                            double uniqueValuesPercentage, long size )\n+    public void visitIndex(IndexDescriptor descriptor, String userDescription,\n+                           double uniqueValuesPercentage, long size)\n     {\n         IndexDescriptorMap indices = descriptor.isUnique() ? uniqueIndices : regularIndices;\n-        indices.putIndex( descriptor.schema(), userDescription, uniqueValuesPercentage, size );\n+        indices.putIndex(descriptor.schema(), userDescription, uniqueValuesPercentage, size);\n     }\n \n     @Override\n-    public void visitUniqueConstraint( UniquenessConstraintDescriptor constraint, String userDescription )\n+    public void visitUniqueConstraint(UniquenessConstraintDescriptor constraint, String userDescription)\n     {\n-        if ( !uniquenessConstraints.add( constraint ) )\n+        if (!uniquenessConstraints.add(constraint))\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Duplicated unique constraint %s for %s\", constraint, userDescription )\n+              format(\"Duplicated unique constraint %s for %s\", constraint, userDescription)\n             );\n         }\n     }\n \n     @Override\n-    public void visitNodePropertyExistenceConstraint( NodeExistenceConstraintDescriptor constraint,\n-            String userDescription )\n+    public void visitNodePropertyExistenceConstraint(NodeExistenceConstraintDescriptor constraint,\n+                                                     String userDescription)\n     {\n-        if ( !nodePropertyExistenceConstraints.add( constraint ) )\n+        if (!nodePropertyExistenceConstraints.add(constraint))\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Duplicated node property existence constraint %s for %s\", constraint, userDescription )\n+              format(\"Duplicated node property existence constraint %s for %s\", constraint, userDescription)\n             );\n         }\n     }\n \n     @Override\n-    public void visitRelationshipPropertyExistenceConstraint( RelExistenceConstraintDescriptor constraint,\n-            String userDescription )\n+    public void visitRelationshipPropertyExistenceConstraint(RelExistenceConstraintDescriptor constraint,\n+                                                             String userDescription)\n     {\n-        if ( !relPropertyExistenceConstraints.add( constraint ) )\n+        if (!relPropertyExistenceConstraints.add(constraint))\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Duplicated relationship property existence constraint %s for %s\",\n-                            constraint, userDescription )\n+              format(\"Duplicated relationship property existence constraint %s for %s\",\n+                constraint, userDescription)\n             );\n         }\n     }\n \n     @Override\n-    public void visitNodeKeyConstraint( NodeKeyConstraintDescriptor constraint, String userDescription )\n+    public void visitNodeKeyConstraint(NodeKeyConstraintDescriptor constraint, String userDescription)\n     {\n-        if ( !nodeKeyConstraints.add( constraint ) )\n+        if (!nodeKeyConstraints.add(constraint))\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Duplicated node key constraint %s for %s\", constraint, userDescription )\n+              format(\"Duplicated node key constraint %s for %s\", constraint, userDescription)\n             );\n         }\n     }\n \n     @Override\n-    public void visitAllNodesCount( long nodeCount )\n+    public void visitAllNodesCount(long nodeCount)\n     {\n-        if ( allNodesCount < 0 )\n+        if (allNodesCount < 0)\n         {\n             allNodesCount = nodeCount;\n-        }\n-        else\n+        } else\n         {\n-            throw new IllegalStateException( \"Already received node count\" );\n+            throw new IllegalStateException(\"Already received node count\");\n         }\n     }\n \n     @Override\n-    public void visitNodeCount( int labelId, String labelName, long nodeCount )\n+    public void visitNodeCount(int labelId, String labelName, long nodeCount)\n     {\n-        if ( nodeCounts.containsKey( labelId ) )\n+        if (nodeCounts.containsKey(labelId))\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Duplicate node count %s for label with id %s\", nodeCount, labelName )\n+              format(\"Duplicate node count %s for label with id %s\", nodeCount, labelName)\n             );\n         }\n-        nodeCounts.put( labelId, nodeCount );\n+        nodeCounts.put(labelId, nodeCount);\n     }\n \n     @Override\n-    public void visitRelCount( int startLabelId, int relTypeId, int endLabelId, String relCountQuery, long relCount )\n+    public void visitRelCount(int startLabelId, int relTypeId, int endLabelId, String relCountQuery, long relCount)\n     {\n-        RelSpecifier specifier = new RelSpecifier( startLabelId, relTypeId, endLabelId );\n+        RelSpecifier specifier = new RelSpecifier(startLabelId, relTypeId, endLabelId);\n \n-        if ( relCounts.put( specifier, relCount ) != null )\n+        if (relCounts.put(specifier, relCount) != null)\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Duplicate rel count %s for relationship specifier %s (corresponding query: %s)\", relCount,\n-                            specifier, relCountQuery )\n+              format(\"Duplicate rel count %s for relationship specifier %s (corresponding query: %s)\", relCount,\n+                specifier, relCountQuery)\n             );\n         }\n     }\n@@ -290,7 +290,7 @@ public class DbStructureCollector implements DbStructureVisitor\n         public final int relTypeId;\n         public final int toLabelId;\n \n-        RelSpecifier( int fromLabelId, int relTypeId, int toLabelId )\n+        RelSpecifier(int fromLabelId, int relTypeId, int toLabelId)\n         {\n             this.fromLabelId = fromLabelId;\n             this.relTypeId = relTypeId;\n@@ -301,18 +301,18 @@ public class DbStructureCollector implements DbStructureVisitor\n         public String toString()\n         {\n             return format(\n-                \"RelSpecifier{fromLabelId=%d, relTypeId=%d, toLabelId=%d}\", fromLabelId, relTypeId, toLabelId\n+              \"RelSpecifier{fromLabelId=%d, relTypeId=%d, toLabelId=%d}\", fromLabelId, relTypeId, toLabelId\n             );\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n@@ -336,43 +336,43 @@ public class DbStructureCollector implements DbStructureVisitor\n         private final double uniqueValuesPercentage;\n         private final long size;\n \n-        private IndexStatistics( double uniqueValuesPercentage, long size )\n+        private IndexStatistics(double uniqueValuesPercentage, long size)\n         {\n             this.uniqueValuesPercentage = uniqueValuesPercentage;\n             this.size = size;\n         }\n     }\n \n-    private class IndexDescriptorMap implements Iterable<Pair<String[],String[]>>\n+    private class IndexDescriptorMap implements Iterable<Pair<String[], String[]>>\n     {\n         private final String indexType;\n         private final Map<SchemaDescriptor, IndexStatistics> indexMap = new HashMap<>();\n \n-        IndexDescriptorMap( String indexType )\n+        IndexDescriptorMap(String indexType)\n         {\n             this.indexType = indexType;\n         }\n \n-        public void putIndex( SchemaDescriptor descriptor, String userDescription, double uniqueValuesPercentage, long size )\n+        public void putIndex(SchemaDescriptor descriptor, String userDescription, double uniqueValuesPercentage, long size)\n         {\n-            if ( indexMap.containsKey( descriptor ) )\n+            if (indexMap.containsKey(descriptor))\n             {\n                 throw new IllegalArgumentException(\n-                        format( \"Duplicate index descriptor %s for %s index %s\", descriptor, indexType,\n-                                userDescription )\n+                  format(\"Duplicate index descriptor %s for %s index %s\", descriptor, indexType,\n+                    userDescription)\n                 );\n             }\n \n-            indexMap.put( descriptor, new IndexStatistics( uniqueValuesPercentage, size ) );\n+            indexMap.put(descriptor, new IndexStatistics(uniqueValuesPercentage, size));\n         }\n \n-        public IndexStatistics getIndex( SchemaDescriptor descriptor )\n+        public IndexStatistics getIndex(SchemaDescriptor descriptor)\n         {\n-            return indexMap.get( descriptor );\n+            return indexMap.get(descriptor);\n         }\n \n         @Override\n-        public Iterator<Pair<String[],String[]>> iterator()\n+        public Iterator<Pair<String[], String[]>> iterator()\n         {\n             final Iterator<SchemaDescriptor> iterator = indexMap.keySet().iterator();\n             return new Iterator<>()\n@@ -384,24 +384,24 @@ public class DbStructureCollector implements DbStructureVisitor\n                 }\n \n                 @Override\n-                public Pair<String[],String[]> next()\n+                public Pair<String[], String[]> next()\n                 {\n                     SchemaDescriptor next = iterator.next();\n                     EntityType type = next.entityType();\n                     String[] entityTokens;\n-                    switch ( type )\n+                    switch (type)\n                     {\n-                    case NODE:\n-                        entityTokens = labels.byIdOrFail( next.getEntityTokenIds() );\n-                        break;\n-                    case RELATIONSHIP:\n-                        entityTokens = relationshipTypes.byIdOrFail( next.getEntityTokenIds() );\n-                        break;\n-                    default:\n-                        throw new IllegalStateException( \"Indexing is not supported for EntityType: \" + type );\n+                        case NODE:\n+                            entityTokens = labels.byIdOrFail(next.getEntityTokenIds());\n+                            break;\n+                        case RELATIONSHIP:\n+                            entityTokens = relationshipTypes.byIdOrFail(next.getEntityTokenIds());\n+                            break;\n+                        default:\n+                            throw new IllegalStateException(\"Indexing is not supported for EntityType: \" + type);\n                     }\n-                    String[] propertyKeyNames = propertyKeys.byIdOrFail( next.getPropertyIds() );\n-                    return Pair.of( entityTokens, propertyKeyNames );\n+                    String[] propertyKeyNames = propertyKeys.byIdOrFail(next.getPropertyIds());\n+                    return Pair.of(entityTokens, propertyKeyNames);\n                 }\n \n                 @Override\n@@ -419,49 +419,49 @@ public class DbStructureCollector implements DbStructureVisitor\n         private final Map<Integer, String> forward = new HashMap<>();\n         private final Map<String, Integer> backward = new HashMap<>();\n \n-        TokenMap( String tokenType )\n+        TokenMap(String tokenType)\n         {\n             this.tokenType = tokenType;\n         }\n \n-        public String byIdOrFail( int token )\n+        public String byIdOrFail(int token)\n         {\n-            String result = forward.get( token );\n-            if ( result == null )\n+            String result = forward.get(token);\n+            if (result == null)\n             {\n-                throw new IllegalArgumentException( format( \"Didn't find %s token with id %s\", tokenType, token ) );\n+                throw new IllegalArgumentException(format(\"Didn't find %s token with id %s\", tokenType, token));\n             }\n             return result;\n         }\n \n-        public String[] byIdOrFail( int[] tokens )\n+        public String[] byIdOrFail(int[] tokens)\n         {\n             String[] results = new String[tokens.length];\n-            for ( int i = 0; i < tokens.length; i++ )\n+            for (int i = 0; i < tokens.length; i++)\n             {\n-                results[i] = byIdOrFail( tokens[i] );\n+                results[i] = byIdOrFail(tokens[i]);\n             }\n             return results;\n         }\n \n-        public void putToken( int token, String name )\n+        public void putToken(int token, String name)\n         {\n-            if ( forward.containsKey( token ) )\n+            if (forward.containsKey(token))\n             {\n                 throw new IllegalArgumentException(\n-                        format( \"Duplicate id %s for name %s in %s token map\", token, name, tokenType )\n+                  format(\"Duplicate id %s for name %s in %s token map\", token, name, tokenType)\n                 );\n             }\n \n-            if ( backward.containsKey( name ) )\n+            if (backward.containsKey(name))\n             {\n                 throw new IllegalArgumentException(\n-                        format( \"Duplicate name %s for id %s in %s token map\", name, token, tokenType )\n+                  format(\"Duplicate name %s for id %s in %s token map\", name, token, tokenType)\n                 );\n             }\n \n-            forward.put( token, name );\n-            backward.put( name, token );\n+            forward.put(token, name);\n+            backward.put(name, token);\n         }\n \n         @Override\n@@ -477,10 +477,10 @@ public class DbStructureCollector implements DbStructureVisitor\n                 }\n \n                 @Override\n-                public Pair<Integer,String> next()\n+                public Pair<Integer, String> next()\n                 {\n-                    Map.Entry<Integer,String> next = iterator.next();\n-                    return Pair.of( next.getKey(), next.getValue() );\n+                    Map.Entry<Integer, String> next = iterator.next();\n+                    return Pair.of(next.getKey(), next.getValue());\n                 }\n \n                 @Override\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
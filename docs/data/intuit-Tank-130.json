{
    "project_name": "intuit-Tank",
    "error_id": "130",
    "information": {
        "errors": [
            {
                "line": "50",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 160).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            ServletException {\n        if (identity != null && identity.getAccount() != null) {\n            ThreadLocalUsernameProvider.getUsernameProvider().setUserName(identityManager.lookupById(User.class, identity.getAccount().getId()).getLoginName());\n        } else {\n            ThreadLocalUsernameProvider.getUsernameProvider().setUserName(null);\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/130/UserNameFilter.java\nindex 7f5385d02d3..9cb23033670 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/130/UserNameFilter.java\n@@ -31,32 +31,33 @@ import com.intuit.tank.vm.common.ThreadLocalUsernameProvider;\n \n public class UserNameFilter implements Filter {\n \n-    @Inject\n-    private Identity identity;\n-    \n-    @Inject\n-    private IdentityManager identityManager;\n-\n-\n-    @Override\n-    public void init(FilterConfig filterConfig) throws ServletException {\n-        // TODO Auto-generated method stub\n+  @Inject\n+  private Identity identity;\n+\n+  @Inject\n+  private IdentityManager identityManager;\n+\n+\n+  @Override\n+  public void init(FilterConfig filterConfig) throws ServletException {\n+    // TODO Auto-generated method stub\n+  }\n+\n+  @Override\n+  public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,\n+    ServletException {\n+    if (identity != null && identity.getAccount() != null) {\n+      ThreadLocalUsernameProvider.getUsernameProvider()\n+        .setUserName(identityManager.lookupById(User.class, identity.getAccount().getId()).getLoginName());\n+    } else {\n+      ThreadLocalUsernameProvider.getUsernameProvider().setUserName(null);\n     }\n+    chain.doFilter(request, response);\n+  }\n \n-    @Override\n-    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,\n-            ServletException {\n-        if (identity != null && identity.getAccount() != null) {\n-            ThreadLocalUsernameProvider.getUsernameProvider().setUserName(identityManager.lookupById(User.class, identity.getAccount().getId()).getLoginName());\n-        } else {\n-            ThreadLocalUsernameProvider.getUsernameProvider().setUserName(null);\n-        }\n-        chain.doFilter(request, response);\n-    }\n-\n-    @Override\n-    public void destroy() {\n-        // TODO Auto-generated method stub\n-    }\n+  @Override\n+  public void destroy() {\n+    // TODO Auto-generated method stub\n+  }\n \n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/130/UserNameFilter.java\nindex 7f5385d02d3..a3f4fc4171d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/130/UserNameFilter.java\n@@ -35,10 +35,9 @@ public class UserNameFilter implements Filter {\n     private Identity identity;\n     \n     @Inject\n-    private IdentityManager identityManager;\n+private IdentityManager identityManager;\n \n-\n-    @Override\n+@Override\n     public void init(FilterConfig filterConfig) throws ServletException {\n         // TODO Auto-generated method stub\n     }\n@@ -59,4 +58,4 @@ public class UserNameFilter implements Filter {\n         // TODO Auto-generated method stub\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/130/UserNameFilter.java\nindex 7f5385d02d3..118b74022e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/130/UserNameFilter.java\n@@ -13,8 +13,9 @@ package com.intuit.tank.util;\n  * #L%\n  */\n \n-import java.io.IOException;\n \n+\n+import java.io.IOException;\n import javax.inject.Inject;\n import javax.servlet.Filter;\n import javax.servlet.FilterChain;\n@@ -22,30 +23,27 @@ import javax.servlet.FilterConfig;\n import javax.servlet.ServletException;\n import javax.servlet.ServletRequest;\n import javax.servlet.ServletResponse;\n-\n import org.picketlink.Identity;\n import org.picketlink.idm.IdentityManager;\n import org.picketlink.idm.model.basic.User;\n-\n import com.intuit.tank.vm.common.ThreadLocalUsernameProvider;\n \n-public class UserNameFilter implements Filter {\n \n+public class UserNameFilter implements Filter {\n     @Inject\n     private Identity identity;\n-    \n+\n     @Inject\n     private IdentityManager identityManager;\n \n-\n     @Override\n     public void init(FilterConfig filterConfig) throws ServletException {\n         // TODO Auto-generated method stub\n+\n     }\n \n     @Override\n-    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,\n-            ServletException {\n+    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n         if (identity != null && identity.getAccount() != null) {\n             ThreadLocalUsernameProvider.getUsernameProvider().setUserName(identityManager.lookupById(User.class, identity.getAccount().getId()).getLoginName());\n         } else {\n@@ -57,6 +55,7 @@ public class UserNameFilter implements Filter {\n     @Override\n     public void destroy() {\n         // TODO Auto-generated method stub\n+\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "column": "20",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/130/UserNameFilter.java\nindex 7f5385d02d3..a13d054d719 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/130/UserNameFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/130/UserNameFilter.java\n@@ -47,7 +47,8 @@ public class UserNameFilter implements Filter {\n     public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,\n             ServletException {\n         if (identity != null && identity.getAccount() != null) {\n-            ThreadLocalUsernameProvider.getUsernameProvider().setUserName(identityManager.lookupById(User.class, identity.getAccount().getId()).getLoginName());\n+            ThreadLocalUsernameProvider.getUsernameProvider().setUserName(identityManager.\n+        lookupById (User.class, identity.getAccount().getId()).getLoginName());\n         } else {\n             ThreadLocalUsernameProvider.getUsernameProvider().setUserName(null);\n         }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
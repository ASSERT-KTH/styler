{
    "project_name": "bakdata-conquery",
    "error_id": "674",
    "information": {
        "errors": [
            {
                "line": "44",
                "column": "105",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "@ToString\n@EqualsAndHashCode(callSuper = false)\npublic class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n\n\t@NotEmpty\n\tprivate String formType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/674/FormConfig.java\nindex bcfeed4625c..c96e2a0fefb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/674/FormConfig.java\n@@ -41,7 +41,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n @NoArgsConstructor\n @ToString\n @EqualsAndHashCode(callSuper = false)\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n \n \t@NotEmpty\n \tprivate String formType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/674/FormConfig.java\nindex bcfeed4625c..281b7391e3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/674/FormConfig.java\n@@ -41,120 +41,120 @@ import org.hibernate.validator.constraints.NotEmpty;\n @NoArgsConstructor\n @ToString\n @EqualsAndHashCode(callSuper = false)\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n-\n-\t@NotEmpty\n-\tprivate String formType;\n-\t@VariableDefaultValue @NonNull\n-\tprivate UUID formId = UUID.randomUUID();\n-\tprivate String label;\n-\t@NotNull\n-\tprivate String[] tags = ArrayUtils.EMPTY_STRING_ARRAY;\n-\tprivate boolean shared = false;\n-\t@NotNull\n-\tprivate JsonNode values;\n-\tprivate UserId owner;\n-\t@VariableDefaultValue\n-\tprivate LocalDateTime creationTime = LocalDateTime.now();\n-\t\n-\t\n-\tpublic FormConfig(String formType, JsonNode values) {\n-\t\tthis.formType = formType;\n-\t\tthis.values = values;\n-\t}\n-\n-\t@Override\n-\tpublic FormConfigId createId() {\n-\t\treturn new FormConfigId(formType, formId);\n-\t}\n-\n-\t/**\n-\t * Provides an overview (meta data) of this form configuration without the\n-\t * actual form field values.\n-\t */\n-\tpublic FormConfigOverviewRepresentation overview(MasterMetaStorage storage, User user) {\n-\t\tString ownerName = Optional.ofNullable(storage.getUser(owner)).map(User::getLabel).orElse(null);\n-\n-\t\treturn FormConfigOverviewRepresentation.builder()\n-\t\t\t.id(getId())\n-\t\t\t.formType(formType)\n-\t\t\t.label(label)\n-\t\t\t.tags(tags)\n-\t\t\t.ownerName(ownerName)\n-\t\t\t.own(owner.equals(user.getId()))\n-\t\t\t.createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n-\t\t\t.shared(shared)\n-\t\t\t// system?\n-\t\t\t.build();\n-\t}\n-\n-\t/**\n-\t * Tries to convert the given raw form to the provided dataset. It does not\n-\t * check whether the {@link NamespacedId} that are converted in this processes\n-\t * are actually resolvable. Also, it tries to map the values to a subclass of\n-\t * {@link Form}, for conversion. If that is not possible the untranslated values\n-\t * are output.\n-\t */\n-\tpublic FormConfigFullRepresentation tryTranslateToDataset(MasterMetaStorage storage, DatasetId target, ObjectMapper mapper, User user) {\n-\t\tJsonNode finalRep = values;\n-\t\ttry {\n-\t\t\tForm intemediateRep = mapper.readerFor(Form.class).readValue(values.traverse());\n-\t\t\tForm translatedRep = QueryTranslator.replaceDataset(storage.getNamespaces(), intemediateRep, target);\n-\t\t\tfinalRep = mapper.valueToTree(translatedRep);\n-\t\t}\n-\t\tcatch (IOException e) {\n-\t\t\tlog.warn(\"Unable to translate form configuration {} to dataset {}. Sending untranslated version.\", getId(), target);\n-\t\t}\n-\n-\t\t@NonNull\n-\t\tString ownerName = Optional.ofNullable(storage.getUser(owner)).map(User::getLabel).orElse(null);\n-\n-\t\treturn FormConfigFullRepresentation.builder()\n-\t\t\t.id(getId()).formType(formType)\n-\t\t\t.label(label)\n-\t\t\t.tags(tags)\n-\t\t\t.ownerName(ownerName)\n-\t\t\t.own(user.getId().equals(owner))\n-\t\t\t.createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n-\t\t\t.shared(shared)\n-\t\t\t// system?\n-\t\t\t.values(finalRep).build();\n-\t}\n-\n-\t/**\n-\t * API representation for the overview of all {@link FormConfig}s which does not\n-\t * include the form fields an their values.\n-\t */\n-\t@Getter\n-\t@SuperBuilder\n-\t@ToString\n-\t@EqualsAndHashCode(callSuper = false)\n-\tpublic static class FormConfigOverviewRepresentation {\n-\n-\t\tprivate FormConfigId id;\n-\t\tprivate String formType;\n-\t\tprivate String label;\n-\t\tprivate String[] tags;\n-\n-\t\tprivate String ownerName;\n-\t\tprivate ZonedDateTime createdAt;\n-\t\tprivate boolean own;\n-\t\tprivate boolean shared;\n-\t\tprivate boolean system;\n-\n-\t}\n-\n-\t/**\n-\t * API representation for a single {@link FormConfig} which includes the form\n-\t * fields an their values.\n-\t */\n-\t@Getter\n-\t@SuperBuilder\n-\t@ToString(callSuper = true)\n-\t@EqualsAndHashCode(callSuper = true)\n-\tpublic static class FormConfigFullRepresentation extends FormConfigOverviewRepresentation {\n-\n-\t\tprivate JsonNode values;\n-\t}\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n+\n+    @NotEmpty\n+    private String formType;\n+    @VariableDefaultValue\n+    @NonNull\n+    private UUID formId = UUID.randomUUID();\n+    private String label;\n+    @NotNull\n+    private String[] tags = ArrayUtils.EMPTY_STRING_ARRAY;\n+    private boolean shared = false;\n+    @NotNull\n+    private JsonNode values;\n+    private UserId owner;\n+    @VariableDefaultValue\n+    private LocalDateTime creationTime = LocalDateTime.now();\n+\n+\n+    public FormConfig(String formType, JsonNode values) {\n+        this.formType = formType;\n+        this.values = values;\n+    }\n+\n+    @Override\n+    public FormConfigId createId() {\n+        return new FormConfigId(formType, formId);\n+    }\n+\n+    /**\n+     * Provides an overview (meta data) of this form configuration without the\n+     * actual form field values.\n+     */\n+    public FormConfigOverviewRepresentation overview(MasterMetaStorage storage, User user) {\n+        String ownerName = Optional.ofNullable(storage.getUser(owner)).map(User::getLabel).orElse(null);\n+\n+        return FormConfigOverviewRepresentation.builder()\n+            .id(getId())\n+            .formType(formType)\n+            .label(label)\n+            .tags(tags)\n+            .ownerName(ownerName)\n+            .own(owner.equals(user.getId()))\n+            .createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n+            .shared(shared)\n+            // system?\n+            .build();\n+    }\n+\n+    /**\n+     * Tries to convert the given raw form to the provided dataset. It does not\n+     * check whether the {@link NamespacedId} that are converted in this processes\n+     * are actually resolvable. Also, it tries to map the values to a subclass of\n+     * {@link Form}, for conversion. If that is not possible the untranslated values\n+     * are output.\n+     */\n+    public FormConfigFullRepresentation tryTranslateToDataset(MasterMetaStorage storage, DatasetId target, ObjectMapper mapper, User user) {\n+        JsonNode finalRep = values;\n+        try {\n+            Form intemediateRep = mapper.readerFor(Form.class).readValue(values.traverse());\n+            Form translatedRep = QueryTranslator.replaceDataset(storage.getNamespaces(), intemediateRep, target);\n+            finalRep = mapper.valueToTree(translatedRep);\n+        } catch (IOException e) {\n+            log.warn(\"Unable to translate form configuration {} to dataset {}. Sending untranslated version.\", getId(), target);\n+        }\n+\n+        @NonNull\n+        String ownerName = Optional.ofNullable(storage.getUser(owner)).map(User::getLabel).orElse(null);\n+\n+        return FormConfigFullRepresentation.builder()\n+            .id(getId()).formType(formType)\n+            .label(label)\n+            .tags(tags)\n+            .ownerName(ownerName)\n+            .own(user.getId().equals(owner))\n+            .createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n+            .shared(shared)\n+            // system?\n+            .values(finalRep).build();\n+    }\n+\n+    /**\n+     * API representation for the overview of all {@link FormConfig}s which does not\n+     * include the form fields an their values.\n+     */\n+    @Getter\n+    @SuperBuilder\n+    @ToString\n+    @EqualsAndHashCode(callSuper = false)\n+    public static class FormConfigOverviewRepresentation {\n+\n+        private FormConfigId id;\n+        private String formType;\n+        private String label;\n+        private String[] tags;\n+\n+        private String ownerName;\n+        private ZonedDateTime createdAt;\n+        private boolean own;\n+        private boolean shared;\n+        private boolean system;\n+\n+    }\n+\n+    /**\n+     * API representation for a single {@link FormConfig} which includes the form\n+     * fields an their values.\n+     */\n+    @Getter\n+    @SuperBuilder\n+    @ToString(callSuper = true)\n+    @EqualsAndHashCode(callSuper = true)\n+    public static class FormConfigFullRepresentation extends FormConfigOverviewRepresentation {\n+\n+        private JsonNode values;\n+    }\n \n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/674/FormConfig.java\nindex bcfeed4625c..c3620199e0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/674/FormConfig.java\n@@ -41,7 +41,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n @NoArgsConstructor\n @ToString\n @EqualsAndHashCode(callSuper = false)\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n \n \t@NotEmpty\n \tprivate String formType;\n@@ -157,4 +157,4 @@ public class FormConfig extends IdentifiableImpl<FormConfigId> implements Sharea\n \t\tprivate JsonNode values;\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/674/FormConfig.java\nindex bcfeed4625c..c96e2a0fefb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/674/FormConfig.java\n@@ -41,7 +41,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n @NoArgsConstructor\n @ToString\n @EqualsAndHashCode(callSuper = false)\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n \n \t@NotEmpty\n \tprivate String formType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "'{' at column 1 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/674/FormConfig.java\nindex bcfeed4625c..19b8ff18c14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/674/FormConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/674/FormConfig.java\n@@ -41,7 +41,8 @@ import org.hibernate.validator.constraints.NotEmpty;\n @NoArgsConstructor\n @ToString\n @EqualsAndHashCode(callSuper = false)\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable\n+{\n \n \t@NotEmpty\n \tprivate String formType;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff",
        "styler_three_grams"
    ]
}
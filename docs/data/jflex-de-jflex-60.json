{
    "project_name": "jflex-de-jflex",
    "error_id": "60",
    "information": {
        "errors": [
            {
                "line": "9",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " *                                                                         *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\npackage jflex.maven.plugin.jflex;\n\nimport com.google.common.base.Strings;\nimport java.io.File;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler/60/ClassInfo.java\nindex 72db2ffb125..a85973395e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler/60/ClassInfo.java\n@@ -6,6 +6,7 @@\n  * License: BSD                                                            *\n  *                                                                         *\n  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n+\n package jflex.maven.plugin.jflex;\n \n import com.google.common.base.Strings;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/intellij/60/ClassInfo.java\nindex 72db2ffb125..12842a3cc4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/intellij/60/ClassInfo.java\n@@ -6,6 +6,7 @@\n  * License: BSD                                                            *\n  *                                                                         *\n  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n+\n package jflex.maven.plugin.jflex;\n \n import com.google.common.base.Strings;\n@@ -20,7 +21,9 @@ class ClassInfo {\n \n   final String className;\n \n-  /** dot-separated package name. Empty string for the default package. */\n+  /**\n+   * dot-separated package name. Empty string for the default package.\n+   */\n   final String packageName;\n \n   final Set<File> includedFiles;\n@@ -35,7 +38,9 @@ class ClassInfo {\n     this.includedFiles = new HashSet<>(includedFiles);\n   }\n \n-  /** Compares the className and packageName of instances, ignoring includedFiles. */\n+  /**\n+   * Compares the className and packageName of instances, ignoring includedFiles.\n+   */\n   @Override\n   public boolean equals(Object obj) {\n     if (this == obj) {\n@@ -49,7 +54,9 @@ class ClassInfo {\n         && Objects.equals(packageName, other.packageName);\n   }\n \n-  /** Computes a hash code from the className and packageName, ignoring includedFiles. */\n+  /**\n+   * Computes a hash code from the className and packageName, ignoring includedFiles.\n+   */\n   @Override\n   public int hashCode() {\n     return Objects.hash(className, packageName);\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/naturalize/60/ClassInfo.java\nindex 72db2ffb125..6fc6c318f06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/naturalize/60/ClassInfo.java\n@@ -6,6 +6,7 @@\n  * License: BSD                                                            *\n  *                                                                         *\n  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n+\n package jflex.maven.plugin.jflex;\n \n import com.google.common.base.Strings;\n@@ -70,4 +71,4 @@ class ClassInfo {\n     }\n     return packageDir + className + \".java\";\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/codebuff/60/ClassInfo.java\nindex 72db2ffb125..9cba5b24d5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/codebuff/60/ClassInfo.java\n@@ -16,11 +16,12 @@ import java.util.Objects;\n import java.util.Set;\n import javax.annotation.Nullable;\n \n-class ClassInfo {\n \n+class ClassInfo {\n   final String className;\n \n   /** dot-separated package name. Empty string for the default package. */\n+\n   final String packageName;\n \n   final Set<File> includedFiles;\n@@ -36,20 +37,22 @@ class ClassInfo {\n   }\n \n   /** Compares the className and packageName of instances, ignoring includedFiles. */\n+\n   @Override\n   public boolean equals(Object obj) {\n     if (this == obj) {\n       return true;\n     }\n+\n     if (!(obj instanceof ClassInfo)) {\n       return false;\n     }\n     ClassInfo other = (ClassInfo) obj;\n-    return Objects.equals(className, other.className)\n-        && Objects.equals(packageName, other.packageName);\n+    return Objects.equals(className, other.className) && Objects.equals(packageName, other.packageName);\n   }\n \n   /** Computes a hash code from the className and packageName, ignoring includedFiles. */\n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(className, packageName);\n@@ -62,6 +65,8 @@ class ClassInfo {\n    *\n    * @return Name of the java file.\n    */\n+\n+\n   String getOutputFilename() {\n     // TODO(regisd) Use PackageUtil\n     String packageDir = packageName.replace('.', File.separatorChar);\n@@ -70,4 +75,4 @@ class ClassInfo {\n     }\n     return packageDir + className + \".java\";\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_random/60/ClassInfo.java\nindex 72db2ffb125..a85973395e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_random/60/ClassInfo.java\n@@ -6,6 +6,7 @@\n  * License: BSD                                                            *\n  *                                                                         *\n  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n+\n package jflex.maven.plugin.jflex;\n \n import com.google.common.base.Strings;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_three_grams/60/ClassInfo.java\nindex 72db2ffb125..a85973395e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/60/ClassInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_three_grams/60/ClassInfo.java\n@@ -6,6 +6,7 @@\n  * License: BSD                                                            *\n  *                                                                         *\n  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n+\n package jflex.maven.plugin.jflex;\n \n import com.google.common.base.Strings;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
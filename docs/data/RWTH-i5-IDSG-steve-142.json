{
    "project_name": "RWTH-i5-IDSG-steve",
    "error_id": "142",
    "information": {
        "errors": [
            {
                "line": "154",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n            } else if (record.getInTransaction()) {\n                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n                                                             .withParentIdTag(record.getParentIdTag())\n                                                             .withExpiryDate(expiryDate);\n            } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/142/OcppTagServiceImpl.java\nindex ec3f7a2c2a0..89730eeff79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/142/OcppTagServiceImpl.java\n@@ -151,7 +151,8 @@ public class OcppTagServiceImpl implements OcppTagService {\n                                                              .withParentIdTag(record.getParentIdTag());\n \n             } else if (record.getInTransaction()) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n+                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015\n+              ._10.AuthorizationStatus.CONCURRENT_TX)\n                                                              .withParentIdTag(record.getParentIdTag())\n                                                              .withExpiryDate(expiryDate);\n             } else {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/142/OcppTagServiceImpl.java\nindex ec3f7a2c2a0..fca2408e662 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/142/OcppTagServiceImpl.java\n@@ -27,141 +27,144 @@ import java.util.List;\n @Service\n public class OcppTagServiceImpl implements OcppTagService {\n \n-    @Autowired private SettingsRepository settingsRepository;\n-    @Autowired private OcppTagRepository ocppTagRepository;\n-    @Autowired private TransactionRepository transactionRepository;\n-\n-    private final UnidentifiedIncomingObjectService invalidOcppTagService = new UnidentifiedIncomingObjectService(1000);\n-\n-    @Override\n-    public List<AuthorizationData> getAuthDataOfAllTags() {\n-        return ocppTagRepository.getRecords()\n-                                .map(new AuthorisationDataMapper());\n+  @Autowired\n+  private SettingsRepository settingsRepository;\n+  @Autowired\n+  private OcppTagRepository ocppTagRepository;\n+  @Autowired\n+  private TransactionRepository transactionRepository;\n+\n+  private final UnidentifiedIncomingObjectService invalidOcppTagService = new UnidentifiedIncomingObjectService(1000);\n+\n+  @Override\n+  public List<AuthorizationData> getAuthDataOfAllTags() {\n+    return ocppTagRepository.getRecords()\n+      .map(new AuthorisationDataMapper());\n+  }\n+\n+  @Override\n+  public List<AuthorizationData> getAuthData(List<String> idTagList) {\n+    return ocppTagRepository.getRecords(idTagList)\n+      .map(new AuthorisationDataMapper());\n+  }\n+\n+  @Override\n+  public List<UnidentifiedIncomingObject> getUnknownOcppTags() {\n+    return invalidOcppTagService.getObjects();\n+  }\n+\n+  @Override\n+  public IdTagInfo getIdTagInfo(String idTag, String askingChargeBoxId) {\n+    OcppTagRecord record = ocppTagRepository.getRecord(idTag);\n+    AuthorizationStatus status = decideStatus(record, askingChargeBoxId);\n+\n+    switch (status) {\n+      case INVALID:\n+        log.error(\"The user with idTag '{}' is INVALID (not present in DB).\", idTag);\n+        invalidOcppTagService.processNewUnidentified(idTag);\n+        return new IdTagInfo().withStatus(status);\n+\n+      case BLOCKED:\n+        log.error(\"The user with idTag '{}' is BLOCKED.\", idTag);\n+        return new IdTagInfo().withStatus(status)\n+          .withParentIdTag(record.getParentIdTag());\n+\n+      case EXPIRED:\n+        log.error(\"The user with idTag '{}' is EXPIRED.\", idTag);\n+        return new IdTagInfo().withStatus(status)\n+          .withParentIdTag(record.getParentIdTag());\n+\n+      case CONCURRENT_TX:\n+        log.warn(\"The user with idTag '{}' is ALREADY in another transaction.\", idTag);\n+        return new IdTagInfo().withStatus(status)\n+          .withParentIdTag(record.getParentIdTag())\n+          .withExpiryDate(getExpiryDateOrDefault(record));\n+\n+      case ACCEPTED:\n+        log.debug(\"The user with idTag '{}' is ACCEPTED.\", record.getIdTag());\n+        return new IdTagInfo().withStatus(status)\n+          .withParentIdTag(record.getParentIdTag())\n+          .withExpiryDate(getExpiryDateOrDefault(record));\n+      default:\n+        throw new SteveException(\"Unexpected AuthorizationStatus\");\n     }\n+  }\n \n-    @Override\n-    public List<AuthorizationData> getAuthData(List<String> idTagList) {\n-        return ocppTagRepository.getRecords(idTagList)\n-                                .map(new AuthorisationDataMapper());\n-    }\n+  // -------------------------------------------------------------------------\n+  // Private helpers\n+  // -------------------------------------------------------------------------\n \n-    @Override\n-    public List<UnidentifiedIncomingObject> getUnknownOcppTags() {\n-        return invalidOcppTagService.getObjects();\n+  private AuthorizationStatus decideStatus(OcppTagRecord record, String askingChargeBoxId) {\n+    if (record == null) {\n+      return AuthorizationStatus.INVALID;\n     }\n \n-    @Override\n-    public IdTagInfo getIdTagInfo(String idTag, String askingChargeBoxId) {\n-        OcppTagRecord record = ocppTagRepository.getRecord(idTag);\n-        AuthorizationStatus status = decideStatus(record, askingChargeBoxId);\n-\n-        switch (status) {\n-            case INVALID:\n-                log.error(\"The user with idTag '{}' is INVALID (not present in DB).\", idTag);\n-                invalidOcppTagService.processNewUnidentified(idTag);\n-                return new IdTagInfo().withStatus(status);\n-\n-            case BLOCKED:\n-                log.error(\"The user with idTag '{}' is BLOCKED.\", idTag);\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag());\n-\n-            case EXPIRED:\n-                log.error(\"The user with idTag '{}' is EXPIRED.\", idTag);\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag());\n-\n-            case CONCURRENT_TX:\n-                log.warn(\"The user with idTag '{}' is ALREADY in another transaction.\", idTag);\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag())\n-                                      .withExpiryDate(getExpiryDateOrDefault(record));\n-\n-            case ACCEPTED:\n-                log.debug(\"The user with idTag '{}' is ACCEPTED.\", record.getIdTag());\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag())\n-                                      .withExpiryDate(getExpiryDateOrDefault(record));\n-            default:\n-                throw new SteveException(\"Unexpected AuthorizationStatus\");\n-        }\n+    if (record.getBlocked()) {\n+      return AuthorizationStatus.BLOCKED;\n     }\n \n-    // -------------------------------------------------------------------------\n-    // Private helpers\n-    // -------------------------------------------------------------------------\n-\n-    private AuthorizationStatus decideStatus(OcppTagRecord record, String askingChargeBoxId) {\n-        if (record == null) {\n-            return AuthorizationStatus.INVALID;\n-        }\n-\n-        if (record.getBlocked()) {\n-            return AuthorizationStatus.BLOCKED;\n-        }\n-\n-        if (isExpired(record)) {\n-            return AuthorizationStatus.EXPIRED;\n-        }\n-\n-        // https://github.com/RWTH-i5-IDSG/steve/issues/73\n-        if (record.getInTransaction()) {\n-            List<String> txChargeBoxIds = transactionRepository.getChargeBoxIdsOfActiveTransactions(record.getIdTag());\n-            if (!txChargeBoxIds.contains(askingChargeBoxId)) {\n-                return AuthorizationStatus.CONCURRENT_TX;\n-            }\n-        }\n-\n-        return AuthorizationStatus.ACCEPTED;\n+    if (isExpired(record)) {\n+      return AuthorizationStatus.EXPIRED;\n     }\n \n-    /**\n-     * If the database contains an actual expiry, use it. Otherwise, calculate an expiry for cached info\n-     */\n-    private DateTime getExpiryDateOrDefault(OcppTagRecord record) {\n-        if (record.getExpiryDate() != null) {\n-            return record.getExpiryDate();\n-        } else {\n-            return DateTime.now().plusHours(settingsRepository.getHoursToExpire());\n-        }\n+    // https://github.com/RWTH-i5-IDSG/steve/issues/73\n+    if (record.getInTransaction()) {\n+      List<String> txChargeBoxIds = transactionRepository.getChargeBoxIdsOfActiveTransactions(record.getIdTag());\n+      if (!txChargeBoxIds.contains(askingChargeBoxId)) {\n+        return AuthorizationStatus.CONCURRENT_TX;\n+      }\n     }\n \n-    private static boolean isExpired(OcppTagRecord record) {\n-        DateTime expiry = record.getExpiryDate();\n-        return expiry != null && DateTime.now().isAfter(expiry);\n+    return AuthorizationStatus.ACCEPTED;\n+  }\n+\n+  /**\n+   * If the database contains an actual expiry, use it. Otherwise, calculate an expiry for cached info\n+   */\n+  private DateTime getExpiryDateOrDefault(OcppTagRecord record) {\n+    if (record.getExpiryDate() != null) {\n+      return record.getExpiryDate();\n+    } else {\n+      return DateTime.now().plusHours(settingsRepository.getHoursToExpire());\n     }\n+  }\n \n-    @RequiredArgsConstructor(access = AccessLevel.PRIVATE)\n-    private static class AuthorisationDataMapper implements RecordMapper<OcppTagRecord, AuthorizationData> {\n-\n-        private final DateTime nowDt = DateTime.now();\n+  private static boolean isExpired(OcppTagRecord record) {\n+    DateTime expiry = record.getExpiryDate();\n+    return expiry != null && DateTime.now().isAfter(expiry);\n+  }\n \n-        @Override\n-        public AuthorizationData map(OcppTagRecord record) {\n-            DateTime expiryDate = record.getExpiryDate();\n+  @RequiredArgsConstructor(access = AccessLevel.PRIVATE)\n+  private static class AuthorisationDataMapper implements RecordMapper<OcppTagRecord, AuthorizationData> {\n \n-            ocpp.cp._2015._10.IdTagInfo idTagInfo;\n+    private final DateTime nowDt = DateTime.now();\n \n-            if (record.getBlocked()) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.BLOCKED)\n-                                                             .withParentIdTag(record.getParentIdTag());\n-\n-            } else if (expiryDate != null && nowDt.isAfter(expiryDate)) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.EXPIRED)\n-                                                             .withParentIdTag(record.getParentIdTag());\n-\n-            } else if (record.getInTransaction()) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n-                                                             .withParentIdTag(record.getParentIdTag())\n-                                                             .withExpiryDate(expiryDate);\n-            } else {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.ACCEPTED)\n-                                                             .withParentIdTag(record.getParentIdTag())\n-                                                             .withExpiryDate(expiryDate);\n-            }\n-\n-            return new AuthorizationData().withIdTag(record.getIdTag()).withIdTagInfo(idTagInfo);\n-        }\n+    @Override\n+    public AuthorizationData map(OcppTagRecord record) {\n+      DateTime expiryDate = record.getExpiryDate();\n+\n+      ocpp.cp._2015._10.IdTagInfo idTagInfo;\n+\n+      if (record.getBlocked()) {\n+        idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.BLOCKED)\n+          .withParentIdTag(record.getParentIdTag());\n+\n+      } else if (expiryDate != null && nowDt.isAfter(expiryDate)) {\n+        idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.EXPIRED)\n+          .withParentIdTag(record.getParentIdTag());\n+\n+      } else if (record.getInTransaction()) {\n+        idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n+          .withParentIdTag(record.getParentIdTag())\n+          .withExpiryDate(expiryDate);\n+      } else {\n+        idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.ACCEPTED)\n+          .withParentIdTag(record.getParentIdTag())\n+          .withExpiryDate(expiryDate);\n+      }\n+\n+      return new AuthorizationData().withIdTag(record.getIdTag()).withIdTagInfo(idTagInfo);\n     }\n+  }\n \n }\n",
            "diff_size": 185
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/142/OcppTagServiceImpl.java\nindex ec3f7a2c2a0..a57436a3d7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/142/OcppTagServiceImpl.java\n@@ -35,14 +35,13 @@ public class OcppTagServiceImpl implements OcppTagService {\n \n     @Override\n     public List<AuthorizationData> getAuthDataOfAllTags() {\n-        return ocppTagRepository.getRecords()\n-                                .map(new AuthorisationDataMapper());\n+        return ocppTagRepository.getRecords().map(new AuthorisationDataMapper());\n     }\n \n     @Override\n     public List<AuthorizationData> getAuthData(List<String> idTagList) {\n         return ocppTagRepository.getRecords(idTagList)\n-                                .map(new AuthorisationDataMapper());\n+.map(new AuthorisationDataMapper());\n     }\n \n     @Override\n@@ -54,8 +53,7 @@ public class OcppTagServiceImpl implements OcppTagService {\n     public IdTagInfo getIdTagInfo(String idTag, String askingChargeBoxId) {\n         OcppTagRecord record = ocppTagRepository.getRecord(idTag);\n         AuthorizationStatus status = decideStatus(record, askingChargeBoxId);\n-\n-        switch (status) {\n+switch (status) {\n             case INVALID:\n                 log.error(\"The user with idTag '{}' is INVALID (not present in DB).\", idTag);\n                 invalidOcppTagService.processNewUnidentified(idTag);\n@@ -64,25 +62,26 @@ public class OcppTagServiceImpl implements OcppTagService {\n             case BLOCKED:\n                 log.error(\"The user with idTag '{}' is BLOCKED.\", idTag);\n                 return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag());\n+.withParentIdTag(record.getParentIdTag());\n \n-            case EXPIRED:\n+    case EXPIRED:\n                 log.error(\"The user with idTag '{}' is EXPIRED.\", idTag);\n                 return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag());\n+.withParentIdTag(record.getParentIdTag());\n \n-            case CONCURRENT_TX:\n+    case CONCURRENT_TX:\n                 log.warn(\"The user with idTag '{}' is ALREADY in another transaction.\", idTag);\n                 return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag())\n+.withParentIdTag(record.getParentIdTag())\n                                       .withExpiryDate(getExpiryDateOrDefault(record));\n \n-            case ACCEPTED:\n+    case ACCEPTED:\n                 log.debug(\"The user with idTag '{}' is ACCEPTED.\", record.getIdTag());\n                 return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag())\n+.withParentIdTag(record.getParentIdTag())\n                                       .withExpiryDate(getExpiryDateOrDefault(record));\n-            default:\n+\n+    default:\n                 throw new SteveException(\"Unexpected AuthorizationStatus\");\n         }\n     }\n@@ -144,24 +143,22 @@ public class OcppTagServiceImpl implements OcppTagService {\n \n             if (record.getBlocked()) {\n                 idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.BLOCKED)\n-                                                             .withParentIdTag(record.getParentIdTag());\n-\n-            } else if (expiryDate != null && nowDt.isAfter(expiryDate)) {\n+.withParentIdTag(record.getParentIdTag());\n+    } else if (expiryDate != null && nowDt.isAfter(expiryDate)) {\n                 idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.EXPIRED)\n-                                                             .withParentIdTag(record.getParentIdTag());\n-\n-            } else if (record.getInTransaction()) {\n+.withParentIdTag(record.getParentIdTag());\n+    } else if (record.getInTransaction()) {\n                 idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n-                                                             .withParentIdTag(record.getParentIdTag())\n+.withParentIdTag(record.getParentIdTag())\n                                                              .withExpiryDate(expiryDate);\n-            } else {\n+    } else {\n                 idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.ACCEPTED)\n-                                                             .withParentIdTag(record.getParentIdTag())\n+.withParentIdTag(record.getParentIdTag())\n                                                              .withExpiryDate(expiryDate);\n-            }\n+    }\n \n             return new AuthorizationData().withIdTag(record.getIdTag()).withIdTagInfo(idTagInfo);\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/142/OcppTagServiceImpl.java\nindex ec3f7a2c2a0..cc8f58d7ce7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/142/OcppTagServiceImpl.java\n@@ -16,13 +16,14 @@ import org.joda.time.DateTime;\n import org.jooq.RecordMapper;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n-\n import java.util.List;\n \n /**\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 03.01.2015\n  */\n+\n+\n @Slf4j\n @Service\n public class OcppTagServiceImpl implements OcppTagService {\n@@ -30,19 +31,17 @@ public class OcppTagServiceImpl implements OcppTagService {\n     @Autowired private SettingsRepository settingsRepository;\n     @Autowired private OcppTagRepository ocppTagRepository;\n     @Autowired private TransactionRepository transactionRepository;\n-\n     private final UnidentifiedIncomingObjectService invalidOcppTagService = new UnidentifiedIncomingObjectService(1000);\n-\n     @Override\n     public List<AuthorizationData> getAuthDataOfAllTags() {\n         return ocppTagRepository.getRecords()\n-                                .map(new AuthorisationDataMapper());\n+            .map(new AuthorisationDataMapper());\n     }\n \n     @Override\n     public List<AuthorizationData> getAuthData(List<String> idTagList) {\n         return ocppTagRepository.getRecords(idTagList)\n-                                .map(new AuthorisationDataMapper());\n+            .map(new AuthorisationDataMapper());\n     }\n \n     @Override\n@@ -54,34 +53,39 @@ public class OcppTagServiceImpl implements OcppTagService {\n     public IdTagInfo getIdTagInfo(String idTag, String askingChargeBoxId) {\n         OcppTagRecord record = ocppTagRepository.getRecord(idTag);\n         AuthorizationStatus status = decideStatus(record, askingChargeBoxId);\n-\n         switch (status) {\n             case INVALID:\n                 log.error(\"The user with idTag '{}' is INVALID (not present in DB).\", idTag);\n                 invalidOcppTagService.processNewUnidentified(idTag);\n-                return new IdTagInfo().withStatus(status);\n+                return new IdTagInfo()\n+                   .withStatus(status);\n \n             case BLOCKED:\n                 log.error(\"The user with idTag '{}' is BLOCKED.\", idTag);\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag());\n+                return new IdTagInfo()\n+                   .withStatus(status)\n+                   .withParentIdTag(record.getParentIdTag());\n \n             case EXPIRED:\n                 log.error(\"The user with idTag '{}' is EXPIRED.\", idTag);\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag());\n+                return new IdTagInfo()\n+                   .withStatus(status)\n+                   .withParentIdTag(record.getParentIdTag());\n \n             case CONCURRENT_TX:\n                 log.warn(\"The user with idTag '{}' is ALREADY in another transaction.\", idTag);\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag())\n-                                      .withExpiryDate(getExpiryDateOrDefault(record));\n+                return new IdTagInfo()\n+                   .withStatus(status)\n+                   .withParentIdTag(record.getParentIdTag())\n+                   .withExpiryDate(getExpiryDateOrDefault(record));\n \n             case ACCEPTED:\n                 log.debug(\"The user with idTag '{}' is ACCEPTED.\", record.getIdTag());\n-                return new IdTagInfo().withStatus(status)\n-                                      .withParentIdTag(record.getParentIdTag())\n-                                      .withExpiryDate(getExpiryDateOrDefault(record));\n+                return new IdTagInfo()\n+                   .withStatus(status)\n+                   .withParentIdTag(record.getParentIdTag())\n+                   .withExpiryDate(getExpiryDateOrDefault(record));\n+\n             default:\n                 throw new SteveException(\"Unexpected AuthorizationStatus\");\n         }\n@@ -105,63 +109,65 @@ public class OcppTagServiceImpl implements OcppTagService {\n         }\n \n         // https://github.com/RWTH-i5-IDSG/steve/issues/73\n+\n         if (record.getInTransaction()) {\n             List<String> txChargeBoxIds = transactionRepository.getChargeBoxIdsOfActiveTransactions(record.getIdTag());\n             if (!txChargeBoxIds.contains(askingChargeBoxId)) {\n                 return AuthorizationStatus.CONCURRENT_TX;\n             }\n         }\n-\n         return AuthorizationStatus.ACCEPTED;\n     }\n \n     /**\n      * If the database contains an actual expiry, use it. Otherwise, calculate an expiry for cached info\n      */\n+\n     private DateTime getExpiryDateOrDefault(OcppTagRecord record) {\n         if (record.getExpiryDate() != null) {\n             return record.getExpiryDate();\n         } else {\n-            return DateTime.now().plusHours(settingsRepository.getHoursToExpire());\n+            return DateTime.now()\n+                .plusHours(settingsRepository.getHoursToExpire());\n         }\n     }\n \n     private static boolean isExpired(OcppTagRecord record) {\n         DateTime expiry = record.getExpiryDate();\n-        return expiry != null && DateTime.now().isAfter(expiry);\n+\n+        return expiry != null && DateTime.now()\n+            .isAfter(expiry);\n     }\n \n     @RequiredArgsConstructor(access = AccessLevel.PRIVATE)\n     private static class AuthorisationDataMapper implements RecordMapper<OcppTagRecord, AuthorizationData> {\n-\n         private final DateTime nowDt = DateTime.now();\n-\n         @Override\n         public AuthorizationData map(OcppTagRecord record) {\n             DateTime expiryDate = record.getExpiryDate();\n-\n             ocpp.cp._2015._10.IdTagInfo idTagInfo;\n-\n             if (record.getBlocked()) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.BLOCKED)\n-                                                             .withParentIdTag(record.getParentIdTag());\n-\n+                idTagInfo = new ocpp.cp._2015._10.IdTagInfo()\n+                    .withStatus(ocpp.cp._2015._10.AuthorizationStatus.BLOCKED)\n+                    .withParentIdTag(record.getParentIdTag());\n             } else if (expiryDate != null && nowDt.isAfter(expiryDate)) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.EXPIRED)\n-                                                             .withParentIdTag(record.getParentIdTag());\n-\n+                idTagInfo = new ocpp.cp._2015._10.IdTagInfo()\n+                    .withStatus(ocpp.cp._2015._10.AuthorizationStatus.EXPIRED)\n+                    .withParentIdTag(record.getParentIdTag());\n             } else if (record.getInTransaction()) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n-                                                             .withParentIdTag(record.getParentIdTag())\n-                                                             .withExpiryDate(expiryDate);\n-            } else {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.ACCEPTED)\n-                                                             .withParentIdTag(record.getParentIdTag())\n-                                                             .withExpiryDate(expiryDate);\n+                       idTagInfo = new ocpp.cp._2015._10.IdTagInfo()\n+                           .withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n+                           .withParentIdTag(record.getParentIdTag())\n+                           .withExpiryDate(expiryDate);\n+                   } else {\n+                       idTagInfo = new ocpp.cp._2015._10.IdTagInfo()\n+                           .withStatus(ocpp.cp._2015._10.AuthorizationStatus.ACCEPTED)\n+                           .withParentIdTag(record.getParentIdTag())\n+                           .withExpiryDate(expiryDate);\n             }\n-\n-            return new AuthorizationData().withIdTag(record.getIdTag()).withIdTagInfo(idTagInfo);\n+            return new AuthorizationData()\n+            .withIdTag(record.getIdTag())\n+            .withIdTagInfo(idTagInfo);\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 57
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_random/142/OcppTagServiceImpl.java\nindex ec3f7a2c2a0..5cffb5161ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_random/142/OcppTagServiceImpl.java\n@@ -151,8 +151,7 @@ public class OcppTagServiceImpl implements OcppTagService {\n                                                              .withParentIdTag(record.getParentIdTag());\n \n             } else if (record.getInTransaction()) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n-                                                             .withParentIdTag(record.getParentIdTag())\n+                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX).withParentIdTag(record.getParentIdTag())\n                                                              .withExpiryDate(expiryDate);\n             } else {\n                 idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.ACCEPTED)\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/142/OcppTagServiceImpl.java\nindex ec3f7a2c2a0..89730eeff79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/142/OcppTagServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/142/OcppTagServiceImpl.java\n@@ -151,7 +151,8 @@ public class OcppTagServiceImpl implements OcppTagService {\n                                                              .withParentIdTag(record.getParentIdTag());\n \n             } else if (record.getInTransaction()) {\n-                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015._10.AuthorizationStatus.CONCURRENT_TX)\n+                idTagInfo = new ocpp.cp._2015._10.IdTagInfo().withStatus(ocpp.cp._2015\n+              ._10.AuthorizationStatus.CONCURRENT_TX)\n                                                              .withParentIdTag(record.getParentIdTag())\n                                                              .withExpiryDate(expiryDate);\n             } else {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_random"
    ]
}
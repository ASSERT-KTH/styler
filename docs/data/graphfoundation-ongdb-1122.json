{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1122",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1122/FileMoveProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1122/FileMoveProvider.java\nindex 3bd2486fd35..7376d0573ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1122/FileMoveProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1122/FileMoveProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import java.io.File;\n@@ -35,145 +36,145 @@ import static java.util.stream.Stream.empty;\n \n public class FileMoveProvider\n {\n-    private final FileMoveActionInformer fileMoveActionInformer;\n-    private final PageCache pageCache;\n-    private final FileSystemAbstraction fs;\n+  private final FileMoveActionInformer fileMoveActionInformer;\n+  private final PageCache pageCache;\n+  private final FileSystemAbstraction fs;\n \n-    public FileMoveProvider( PageCache pageCache, FileSystemAbstraction fs )\n-    {\n-        this( pageCache, StoreType::canBeManagedByPageCache, fs );\n-    }\n+  public FileMoveProvider(PageCache pageCache, FileSystemAbstraction fs)\n+  {\n+    this(pageCache, StoreType::canBeManagedByPageCache, fs);\n+  }\n \n-    public FileMoveProvider( PageCache pageCache, FileMoveActionInformer fileMoveActionInformer,\n-                             FileSystemAbstraction fs )\n-    {\n-        this.pageCache = pageCache;\n-        this.fileMoveActionInformer = fileMoveActionInformer;\n-        this.fs = fs;\n-    }\n+  public FileMoveProvider(PageCache pageCache, FileMoveActionInformer fileMoveActionInformer,\n+                          FileSystemAbstraction fs)\n+  {\n+    this.pageCache = pageCache;\n+    this.fileMoveActionInformer = fileMoveActionInformer;\n+    this.fs = fs;\n+  }\n \n-    /**\n-     * Construct a stream of files that are to be moved\n-     *\n-     * @param dir the source location of the move action\n-     * @return a stream of the entire contents of the source location that can be applied to a target location to\n-     * perform a move\n-     */\n-    public Stream<FileMoveAction> traverseForMoving( File dir )\n-    {\n-        return traverseForMoving( dir, dir );\n-    }\n+  /**\n+   * Construct a stream of files that are to be moved\n+   *\n+   * @param dir the source location of the move action\n+   * @return a stream of the entire contents of the source location that can be applied to a target location to\n+   * perform a move\n+   */\n+  public Stream<FileMoveAction> traverseForMoving(File dir)\n+  {\n+    return traverseForMoving(dir, dir);\n+  }\n \n-    /**\n-     * Copies <b>the contents</b> from the directory to the base target path.\n-     * <p>\n-     * This is confusing, so here is an example\n-     * <p>\n-     * <p>\n-     * <code>\n-     * +Parent<br>\n-     * |+--directoryA<br>\n-     * |...+--fileA<br>\n-     * |...+--fileB<br>\n-     * </code>\n-     * <p>\n-     * Suppose we want to move to move <b>Parent/directoryA</b> to <b>Parent/directoryB</b>.<br>\n-     * <p>\n-     * <code>\n-     * File directoryA = new File(\"Parent/directoryA\");<br>\n-     * Stream<FileMoveAction> fileMoveActions = new FileMoveProvider(pageCache).traverseGenerateMoveActions\n-     * (directoryA, directoryA);<br>\n-     * </code>\n-     * </p>\n-     * In the above we clearly generate actions for moving all the files contained in directoryA. directoryA is\n-     * mentioned twice due to a implementation detail,\n-     * hence the public method with only one parameter. We then actually perform the moves by applying the base\n-     * target directory that we want to move to.\n-     * <p>\n-     * <code>\n-     * File directoryB = new File(\"Parent/directoryB\");<br>\n-     * fileMoveActions.forEach( action -> action.move( directoryB ) );\n-     * </code>\n-     * </p>\n-     *\n-     * @param dir this directory and all the child paths under it are subject to move\n-     * @param basePath this is the parent of your intended target directory.\n-     * @return a stream of individual move actions which can be iterated and applied whenever\n-     */\n-    private Stream<FileMoveAction> traverseForMoving( File dir, File basePath )\n-    {\n-        // Note that flatMap is an *intermediate operation* and therefor always lazy.\n-        // It is very important that the stream we return only *lazily* calls out to expandTraverseFiles!\n-        return Stream.of( dir ).flatMap( d -> expandTraverseFiles( d, basePath ) );\n-    }\n+  /**\n+   * Copies <b>the contents</b> from the directory to the base target path.\n+   * <p>\n+   * This is confusing, so here is an example\n+   * <p>\n+   * <p>\n+   * <code>\n+   * +Parent<br>\n+   * |+--directoryA<br>\n+   * |...+--fileA<br>\n+   * |...+--fileB<br>\n+   * </code>\n+   * <p>\n+   * Suppose we want to move to move <b>Parent/directoryA</b> to <b>Parent/directoryB</b>.<br>\n+   * <p>\n+   * <code>\n+   * File directoryA = new File(\"Parent/directoryA\");<br>\n+   * Stream<FileMoveAction> fileMoveActions = new FileMoveProvider(pageCache).traverseGenerateMoveActions\n+   * (directoryA, directoryA);<br>\n+   * </code>\n+   * </p>\n+   * In the above we clearly generate actions for moving all the files contained in directoryA. directoryA is\n+   * mentioned twice due to a implementation detail,\n+   * hence the public method with only one parameter. We then actually perform the moves by applying the base\n+   * target directory that we want to move to.\n+   * <p>\n+   * <code>\n+   * File directoryB = new File(\"Parent/directoryB\");<br>\n+   * fileMoveActions.forEach( action -> action.move( directoryB ) );\n+   * </code>\n+   * </p>\n+   *\n+   * @param dir      this directory and all the child paths under it are subject to move\n+   * @param basePath this is the parent of your intended target directory.\n+   * @return a stream of individual move actions which can be iterated and applied whenever\n+   */\n+  private Stream<FileMoveAction> traverseForMoving(File dir, File basePath)\n+  {\n+    // Note that flatMap is an *intermediate operation* and therefor always lazy.\n+    // It is very important that the stream we return only *lazily* calls out to expandTraverseFiles!\n+    return Stream.of(dir).flatMap(d -> expandTraverseFiles(d, basePath));\n+  }\n \n-    private Stream<FileMoveAction> expandTraverseFiles( File dir, File basePath )\n+  private Stream<FileMoveAction> expandTraverseFiles(File dir, File basePath)\n+  {\n+    List<File> listing = listFiles(dir);\n+    if (listing == null)\n     {\n-        List<File> listing = listFiles( dir );\n-        if ( listing == null )\n-        {\n-            // This happens if what we were given as 'dir' is not actually a directory, but a single specific file.\n-            // In that case, we will produce a stream of a single FileMoveAction for that file.\n-            listing = Collections.singletonList( dir );\n-            // This also means that the base path is currently the same as the file itself, which is wrong.\n-            // We change the base path to be the parent directory of the file, so that we can relativise the filename\n-            // correctly later.\n-            basePath = dir.getParentFile();\n-        }\n-        File base = basePath; // Capture effectively-final base path snapshot.\n-        Stream<File> files = listing.stream().filter( this::isFile );\n-        Stream<File> dirs = listing.stream().filter( this::isDirectory );\n-        Stream<FileMoveAction> moveFiles = files.map( f -> copyFileCorrectly( f, base ) );\n-        Stream<FileMoveAction> traverseDirectories = dirs.flatMap( d -> traverseForMoving( d, base ) );\n-        return Stream.concat( moveFiles, traverseDirectories );\n+      // This happens if what we were given as 'dir' is not actually a directory, but a single specific file.\n+      // In that case, we will produce a stream of a single FileMoveAction for that file.\n+      listing = Collections.singletonList(dir);\n+      // This also means that the base path is currently the same as the file itself, which is wrong.\n+      // We change the base path to be the parent directory of the file, so that we can relativise the filename\n+      // correctly later.\n+      basePath = dir.getParentFile();\n     }\n+    File base = basePath; // Capture effectively-final base path snapshot.\n+    Stream<File> files = listing.stream().filter(this::isFile);\n+    Stream<File> dirs = listing.stream().filter(this::isDirectory);\n+    Stream<FileMoveAction> moveFiles = files.map(f -> copyFileCorrectly(f, base));\n+    Stream<FileMoveAction> traverseDirectories = dirs.flatMap(d -> traverseForMoving(d, base));\n+    return Stream.concat(moveFiles, traverseDirectories);\n+  }\n \n-    private boolean isFile( File file )\n+  private boolean isFile(File file)\n+  {\n+    if (fileMoveActionInformer.shouldBeManagedByPageCache(file.getName()))\n     {\n-        if ( fileMoveActionInformer.shouldBeManagedByPageCache( file.getName() ) )\n-        {\n-            return !pageCache.getCachedFileSystem().isDirectory( file );\n-        }\n-        return !fs.isDirectory( file );\n+      return !pageCache.getCachedFileSystem().isDirectory(file);\n     }\n+    return !fs.isDirectory(file);\n+  }\n \n-    private boolean isDirectory( File file )\n+  private boolean isDirectory(File file)\n+  {\n+    if (fileMoveActionInformer.shouldBeManagedByPageCache(file.getName()))\n     {\n-        if ( fileMoveActionInformer.shouldBeManagedByPageCache( file.getName() ) )\n-        {\n-            return pageCache.getCachedFileSystem().isDirectory( file );\n-        }\n-        return fs.isDirectory( file );\n+      return pageCache.getCachedFileSystem().isDirectory(file);\n     }\n+    return fs.isDirectory(file);\n+  }\n \n-    private List<File> listFiles( File dir )\n+  private List<File> listFiles(File dir)\n+  {\n+    File[] cachedFiles = pageCache.getCachedFileSystem().listFiles(dir);\n+    File[] fsaFiles = fs.listFiles(dir);\n+    if (cachedFiles == null && fsaFiles == null)\n     {\n-        File[] cachedFiles = pageCache.getCachedFileSystem().listFiles( dir );\n-        File[] fsaFiles = fs.listFiles( dir );\n-        if ( cachedFiles == null && fsaFiles == null )\n-        {\n-            // This probably means 'dir' is actually a file, or it does not exist.\n-            return null;\n-        }\n-\n-        Stream<File> files = Stream.concat(\n-                ofNullable( cachedFiles ).map( Arrays::stream ).orElse( empty() ),\n-                ofNullable( fsaFiles ).map( Arrays::stream ).orElse( empty() ) );\n-\n-        return files.distinct().collect( toList() );\n+      // This probably means 'dir' is actually a file, or it does not exist.\n+      return null;\n     }\n \n-    /**\n-     * Some files are handled via page cache for CAPI flash, others are only used on the default file system. This\n-     * contains the logic for handling files between\n-     * the 2 systems\n-     */\n-    private FileMoveAction copyFileCorrectly( File fileToMove, File basePath )\n+    Stream<File> files = Stream.concat(\n+        ofNullable(cachedFiles).map(Arrays::stream).orElse(empty()),\n+        ofNullable(fsaFiles).map(Arrays::stream).orElse(empty()));\n+\n+    return files.distinct().collect(toList());\n+  }\n+\n+  /**\n+   * Some files are handled via page cache for CAPI flash, others are only used on the default file system. This\n+   * contains the logic for handling files between\n+   * the 2 systems\n+   */\n+  private FileMoveAction copyFileCorrectly(File fileToMove, File basePath)\n+  {\n+    if (fileMoveActionInformer.shouldBeManagedByPageCache(fileToMove.getName()))\n     {\n-        if ( fileMoveActionInformer.shouldBeManagedByPageCache( fileToMove.getName() ) )\n-        {\n-            return FileMoveAction.copyViaPageCache( fileToMove, pageCache );\n-        }\n-        return FileMoveAction.copyViaFileSystem( fileToMove, basePath );\n+      return FileMoveAction.copyViaPageCache(fileToMove, pageCache);\n     }\n+    return FileMoveAction.copyViaFileSystem(fileToMove, basePath);\n+  }\n }\n",
            "diff_size": 156
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1122/FileMoveProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1122/FileMoveProvider.java\nindex 3bd2486fd35..8508e049624 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1122/FileMoveProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1122/FileMoveProvider.java\n@@ -44,9 +44,8 @@ public class FileMoveProvider\n         this( pageCache, StoreType::canBeManagedByPageCache, fs );\n     }\n \n-    public FileMoveProvider( PageCache pageCache, FileMoveActionInformer fileMoveActionInformer,\n-                             FileSystemAbstraction fs )\n-    {\n+    public FileMoveProvider( PageCache pageCache, FileMoveActionInformer fileMoveActionInformer, FileSystemAbstraction fs )\n+{\n         this.pageCache = pageCache;\n         this.fileMoveActionInformer = fileMoveActionInformer;\n         this.fs = fs;\n@@ -120,7 +119,8 @@ public class FileMoveProvider\n             // correctly later.\n             basePath = dir.getParentFile();\n         }\n-        File base = basePath; // Capture effectively-final base path snapshot.\n+\n+File base = basePath; // Capture effectively-final base path snapshot.\n         Stream<File> files = listing.stream().filter( this::isFile );\n         Stream<File> dirs = listing.stream().filter( this::isDirectory );\n         Stream<FileMoveAction> moveFiles = files.map( f -> copyFileCorrectly( f, base ) );\n@@ -143,7 +143,8 @@ public class FileMoveProvider\n         {\n             return pageCache.getCachedFileSystem().isDirectory( file );\n         }\n-        return fs.isDirectory( file );\n+\n+return fs.isDirectory( file );\n     }\n \n     private List<File> listFiles( File dir )\n@@ -156,11 +157,8 @@ public class FileMoveProvider\n             return null;\n         }\n \n-        Stream<File> files = Stream.concat(\n-                ofNullable( cachedFiles ).map( Arrays::stream ).orElse( empty() ),\n-                ofNullable( fsaFiles ).map( Arrays::stream ).orElse( empty() ) );\n-\n-        return files.distinct().collect( toList() );\n+        Stream<File> files = Stream.concat( ofNullable( cachedFiles ).map( Arrays::stream ).orElse( empty() ), ofNullable( fsaFiles ).map( Arrays::stream ).orElse( empty() ) );\n+return files.distinct().collect( toList() );\n     }\n \n     /**\n@@ -174,6 +172,7 @@ public class FileMoveProvider\n         {\n             return FileMoveAction.copyViaPageCache( fileToMove, pageCache );\n         }\n-        return FileMoveAction.copyViaFileSystem( fileToMove, basePath );\n+\n+return FileMoveAction.copyViaFileSystem( fileToMove, basePath );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
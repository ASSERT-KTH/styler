{
    "project_name": "spark-root-laurelin",
    "error_id": "10",
    "information": {
        "errors": [
            {
                "line": "95",
                "column": "1",
                "severity": "warning",
                "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 100.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
            }
        ]
    },
    "source_code": "\n//        List<TKey> allKeys = new ArrayList<TKey>();\n//        for (long off = fSeekKeys; off < fSeekKeys + fNbytesKeys)\n\n        /*\n         * And then the Streamers can be found at fSeekInfo",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 100.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 100.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/intellij/10/TFile.java\nindex 97a864e4ec7..75f03f716f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/intellij/10/TFile.java\n@@ -101,11 +101,11 @@ public class TFile implements AutoCloseable {\n         streamerKey.getFromFile(fh, fSeekInfo);\n         Cursor fhCursor = fh.getCursor(0);\n         Cursor streamerCursor =\n-                fhCursor.getPossiblyCompressedSubcursor(\n-                        fSeekInfo + streamerKey.KeyLen,\n-                        streamerKey.Nbytes - streamerKey.KeyLen,\n-                        streamerKey.ObjLen,\n-                        streamerKey.KeyLen);\n+            fhCursor.getPossiblyCompressedSubcursor(\n+                fSeekInfo + streamerKey.KeyLen,\n+                streamerKey.Nbytes - streamerKey.KeyLen,\n+                streamerKey.ObjLen,\n+                streamerKey.KeyLen);\n         streamerInfo = new Streamer();\n         streamerInfo.getFromCursor(streamerCursor, 0);\n     }\n@@ -120,7 +120,8 @@ public class TFile implements AutoCloseable {\n         String head_str = new String(instr, \"US-ASCII\");\n \n         if (!head_str.equals(magic)) {\n-            throw new IOException(\"Not a ROOT file (\" + head_str + \") not (\" + magic + \")\");\n+            throw new IOException(\n+                \"Not a ROOT file (\" + head_str + \") not (\" + magic + \")\");\n         }\n \n         // ROOT has a different file format if the file is > 2GB.\n@@ -158,9 +159,9 @@ public class TFile implements AutoCloseable {\n         }\n         Cursor keyCursor = fh.getCursor(key.fSeekKey);\n         Cursor valCursor = keyCursor.getPossiblyCompressedSubcursor(key.KeyLen,\n-                key.Nbytes - key.KeyLen,\n-                key.ObjLen,\n-                key.KeyLen);\n+            key.Nbytes - key.KeyLen,\n+            key.ObjLen,\n+            key.KeyLen);\n         return streamerInfo.deserializeWithStreamer(key, valCursor);\n     }\n \n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 98.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "107",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/naturalize/10/TFile.java\nindex 97a864e4ec7..1ef150530c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/naturalize/10/TFile.java\n@@ -90,11 +90,9 @@ public class TFile implements AutoCloseable {\n          * https://github.com/scikit-hep/uproot/blob/662d1f859f8ba7a5d908a249b3cae5b743e56a19/uproot/rootio.py#L193\n          */\n         directory.getFromFile(fh, fBEGIN + fNbytesName);\n+// \n \n-//        List<TKey> allKeys = new ArrayList<TKey>();\n-//        for (long off = fSeekKeys; off < fSeekKeys + fNbytesKeys)\n-\n-        /*\n+/*\n          * And then the Streamers can be found at fSeekInfo\n          */\n         streamerKey = new TKey();\n@@ -106,7 +104,7 @@ public class TFile implements AutoCloseable {\n                         streamerKey.Nbytes - streamerKey.KeyLen,\n                         streamerKey.ObjLen,\n                         streamerKey.KeyLen);\n-        streamerInfo = new Streamer();\n+streamerInfo = new Streamer();\n         streamerInfo.getFromCursor(streamerCursor, 0);\n     }\n \n@@ -176,4 +174,4 @@ public class TFile implements AutoCloseable {\n     public void close() throws Exception {\n         fh.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "column": "5",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "94",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "103",
                    "column": "1",
                    "severity": "warning",
                    "message": "'streamerKey' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "column": "1",
                    "severity": "warning",
                    "message": "'streamerKey' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "column": "1",
                    "severity": "warning",
                    "message": "'streamerKey' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/codebuff/10/TFile.java\nindex 97a864e4ec7..20b928a3c14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/codebuff/10/TFile.java\n@@ -10,7 +10,6 @@ import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.NoSuchElementException;\n-\n import edu.vanderbilt.accre.laurelin.root_proxy.io.Cursor;\n import edu.vanderbilt.accre.laurelin.root_proxy.io.ROOTFile;\n import edu.vanderbilt.accre.laurelin.root_proxy.serialization.Proxy;\n@@ -21,8 +20,10 @@ public class TFile implements AutoCloseable {\n     private String fileName;\n \n     // Fields in the file header\n+\n     public long fBEGIN;\n     private int fCompress;\n+\n     public long fEND;\n     private int fNBytesInfo;\n     private int fNbytesFree;\n@@ -36,7 +37,6 @@ public class TFile implements AutoCloseable {\n     private int fUnits;\n     private int fVersion;\n     private int nfree;\n-\n     TKey streamerKey;\n     Streamer streamerInfo;\n     // Toplevel TDirectory\n@@ -44,7 +44,6 @@ public class TFile implements AutoCloseable {\n \n     // Lists of subobjects\n     List<TKey> keys;\n-\n     private TFile() {\n         keys = new ArrayList<TKey>();\n         directory = new TDirectory();\n@@ -100,25 +99,21 @@ public class TFile implements AutoCloseable {\n         streamerKey = new TKey();\n         streamerKey.getFromFile(fh, fSeekInfo);\n         Cursor fhCursor = fh.getCursor(0);\n-        Cursor streamerCursor =\n-                fhCursor.getPossiblyCompressedSubcursor(\n-                        fSeekInfo + streamerKey.KeyLen,\n-                        streamerKey.Nbytes - streamerKey.KeyLen,\n-                        streamerKey.ObjLen,\n-                        streamerKey.KeyLen);\n+        Cursor streamerCursor = fhCursor.getPossiblyCompressedSubcursor(fSeekInfo + streamerKey.KeyLen,\n+streamerKey.Nbytes - streamerKey.KeyLen,\n+streamerKey.ObjLen,\n+streamerKey.KeyLen);\n         streamerInfo = new Streamer();\n         streamerInfo.getFromCursor(streamerCursor, 0);\n     }\n \n     private void parseHeaderImpl(boolean largeFile) throws IOException {\n         Cursor buffer = fh.getCursor(0);\n-\n         String magic = \"root\";\n         ByteBuffer file_magic = buffer.readBuffer(4);\n         byte[] instr = new byte[4];\n         file_magic.get(instr, 0, 4);\n         String head_str = new String(instr, \"US-ASCII\");\n-\n         if (!head_str.equals(magic)) {\n             throw new IOException(\"Not a ROOT file (\" + head_str + \") not (\" + magic + \")\");\n         }\n@@ -157,10 +152,7 @@ public class TFile implements AutoCloseable {\n             throw new NoSuchElementException(\"Could not load \\\"\" + name + \"\\\"\");\n         }\n         Cursor keyCursor = fh.getCursor(key.fSeekKey);\n-        Cursor valCursor = keyCursor.getPossiblyCompressedSubcursor(key.KeyLen,\n-                key.Nbytes - key.KeyLen,\n-                key.ObjLen,\n-                key.KeyLen);\n+        Cursor valCursor = keyCursor.getPossiblyCompressedSubcursor(key.KeyLen, key.Nbytes - key.KeyLen, key.ObjLen, key.KeyLen);\n         return streamerInfo.deserializeWithStreamer(key, valCursor);\n     }\n \n@@ -176,4 +168,4 @@ public class TFile implements AutoCloseable {\n     public void close() throws Exception {\n         fh.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 100.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "96",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_three_grams/10/TFile.java\nindex 97a864e4ec7..9700d4db07a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/10/TFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_three_grams/10/TFile.java\n@@ -93,8 +93,7 @@ public class TFile implements AutoCloseable {\n \n //        List<TKey> allKeys = new ArrayList<TKey>();\n //        for (long off = fSeekKeys; off < fSeekKeys + fNbytesKeys)\n-\n-        /*\n+/*\n          * And then the Streamers can be found at fSeekInfo\n          */\n         streamerKey = new TKey();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
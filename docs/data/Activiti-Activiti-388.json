{
    "project_name": "Activiti-Activiti",
    "error_id": "388",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.process.model.payloads;\n\nimport java.util.UUID;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/388/ResumeProcessPayload.java\nindex 82ae1473f15..3155add25c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/388/ResumeProcessPayload.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.payloads;\n \n import java.util.UUID;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/388/ResumeProcessPayload.java\nindex 82ae1473f15..3155add25c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/388/ResumeProcessPayload.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.payloads;\n \n import java.util.UUID;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/388/ResumeProcessPayload.java\nindex 82ae1473f15..a7a3ff95b81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/388/ResumeProcessPayload.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.payloads;\n \n import java.util.UUID;\n@@ -44,4 +45,4 @@ public class ResumeProcessPayload implements Payload {\n     public void setProcessInstanceId(String processInstanceId) {\n         this.processInstanceId = processInstanceId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/388/ResumeProcessPayload.java\nindex 82ae1473f15..feefcc015bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/388/ResumeProcessPayload.java\n@@ -16,32 +16,34 @@\n package org.activiti.api.process.model.payloads;\n \n import java.util.UUID;\n-\n import org.activiti.api.model.shared.Payload;\n \n+\n public class ResumeProcessPayload implements Payload {\n \n-    private String id;\n-    private String processInstanceId;\n+  private String id;\n+\n+  private String processInstanceId;\n+\n+  public ResumeProcessPayload() {\n+    this.id = UUID.randomUUID().toString();\n+  }\n \n-    public ResumeProcessPayload() {\n-        this.id = UUID.randomUUID().toString();\n-    }\n+  @Override\n+  public String getId() {\n+    return id;\n+  }\n \n-    @Override\n-    public String getId() {\n-        return id;\n-    }\n+  public ResumeProcessPayload(String processInstanceId) {\n+    this.processInstanceId = processInstanceId;\n+  }\n \n-    public ResumeProcessPayload(String processInstanceId) {\n-        this.processInstanceId = processInstanceId;\n-    }\n+  public String getProcessInstanceId() {\n+    return processInstanceId;\n+  }\n \n-    public String getProcessInstanceId() {\n-        return processInstanceId;\n-    }\n+  public void setProcessInstanceId(String processInstanceId) {\n+    this.processInstanceId = processInstanceId;\n+  }\n \n-    public void setProcessInstanceId(String processInstanceId) {\n-        this.processInstanceId = processInstanceId;\n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/388/ResumeProcessPayload.java\nindex 82ae1473f15..3155add25c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/388/ResumeProcessPayload.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.payloads;\n \n import java.util.UUID;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/388/ResumeProcessPayload.java\nindex 82ae1473f15..3155add25c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/388/ResumeProcessPayload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/388/ResumeProcessPayload.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.payloads;\n \n import java.util.UUID;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1055",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1055/ClassicCoreSPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1055/ClassicCoreSPI.java\nindex b514f29897c..7f5d78fc47d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1055/ClassicCoreSPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1055/ClassicCoreSPI.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.factory;\n \n import java.io.File;\n@@ -46,161 +47,158 @@ import org.neo4j.values.virtual.MapValue;\n  * This implements the backend for the \"classic\" Core API - meaning the surface-layer-of-the-database, thread bound API.\n  * It's a thin veneer to wire the various components the kernel and related utilities expose in a way that\n  * {@link GraphDatabaseFacade} likes.\n+ *\n  * @see org.neo4j.kernel.impl.factory.GraphDatabaseFacade.SPI\n  */\n class ClassicCoreSPI implements GraphDatabaseFacade.SPI\n {\n-    private final PlatformModule platform;\n-    private final DataSourceModule dataSource;\n-    private final Logger msgLog;\n-    private final CoreAPIAvailabilityGuard availability;\n-\n-    ClassicCoreSPI( PlatformModule platform, DataSourceModule dataSource, Logger msgLog,\n-            CoreAPIAvailabilityGuard availability )\n-    {\n-        this.platform = platform;\n-        this.dataSource = dataSource;\n-        this.msgLog = msgLog;\n-        this.availability = availability;\n-    }\n-\n-    @Override\n-    public boolean databaseIsAvailable( long timeout )\n-    {\n-        return platform.availabilityGuard.isAvailable( timeout );\n-    }\n-\n-    @Override\n-    public Result executeQuery( String query, MapValue parameters, TransactionalContext transactionalContext )\n-    {\n-        try\n-        {\n-            availability.assertDatabaseAvailable();\n-            return dataSource.queryExecutor.get().executeQuery( query, parameters, transactionalContext );\n-        }\n-        catch ( QueryExecutionKernelException e )\n-        {\n-            throw e.asUserException();\n-        }\n-    }\n-\n-    @Override\n-    public Result executeQuery( String query, Map<String, Object> parameters, TransactionalContext transactionalContext )\n-    {\n-        try\n-        {\n-            availability.assertDatabaseAvailable();\n-            return dataSource.queryExecutor.get().executeQuery( query, parameters, transactionalContext );\n-        }\n-        catch ( QueryExecutionKernelException e )\n-        {\n-            throw e.asUserException();\n-        }\n-    }\n-\n-    @Override\n-    public AutoIndexing autoIndexing()\n-    {\n-        return dataSource.autoIndexing;\n-    }\n-\n-    @Override\n-    public DependencyResolver resolver()\n-    {\n-        return platform.dependencies;\n-    }\n-\n-    @Override\n-    public void registerKernelEventHandler( KernelEventHandler handler )\n-    {\n-        dataSource.kernelEventHandlers.registerKernelEventHandler( handler );\n-    }\n-\n-    @Override\n-    public void unregisterKernelEventHandler( KernelEventHandler handler )\n-    {\n-        dataSource.kernelEventHandlers.unregisterKernelEventHandler( handler );\n-    }\n-\n-    @Override\n-    public <T> void registerTransactionEventHandler( TransactionEventHandler<T> handler )\n-    {\n-        dataSource.transactionEventHandlers.registerTransactionEventHandler( handler );\n-    }\n-\n-    @Override\n-    public <T> void unregisterTransactionEventHandler( TransactionEventHandler<T> handler )\n-    {\n-        dataSource.transactionEventHandlers.unregisterTransactionEventHandler( handler );\n-    }\n-\n-    @Override\n-    public StoreId storeId()\n-    {\n-        return dataSource.storeId.get();\n-    }\n-\n-    @Override\n-    public File storeDir()\n-    {\n-        return platform.storeDir;\n-    }\n-\n-    @Override\n-    public URL validateURLAccess( URL url ) throws URLAccessValidationError\n-    {\n-        return platform.urlAccessRule.validate( platform.config, url );\n-    }\n-\n-    @Override\n-    public GraphDatabaseQueryService queryService()\n-    {\n-        return platform.dependencies.resolveDependency( GraphDatabaseQueryService.class );\n-    }\n-\n-    @Override\n-    public Kernel kernel()\n-    {\n-        return resolver().resolveDependency( Kernel.class );\n-    }\n-\n-    @Override\n-    public String name()\n-    {\n-        return platform.databaseInfo.toString();\n-    }\n-\n-    @Override\n-    public void shutdown()\n-    {\n-        try\n-        {\n-            msgLog.log( \"Shutdown started\" );\n-            platform.availabilityGuard.shutdown();\n-            platform.life.shutdown();\n-        }\n-        catch ( LifecycleException throwable )\n-        {\n-            msgLog.log( \"Shutdown failed\", throwable );\n-            throw throwable;\n-        }\n-    }\n-\n-    @Override\n-    public KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout )\n-    {\n-        try\n-        {\n-            availability.assertDatabaseAvailable();\n-            KernelTransaction kernelTx = dataSource.kernelAPI.get().newTransaction( type, loginContext, timeout );\n-            kernelTx.registerCloseListener(\n-                    txId -> dataSource.threadToTransactionBridge.unbindTransactionFromCurrentThread() );\n-            dataSource.threadToTransactionBridge.bindTransactionToCurrentThread( kernelTx );\n-            return kernelTx;\n-        }\n-        catch ( TransactionFailureException e )\n-        {\n-            throw new org.neo4j.graphdb.TransactionFailureException( e.getMessage(), e );\n-        }\n-    }\n+  private final PlatformModule platform;\n+  private final DataSourceModule dataSource;\n+  private final Logger msgLog;\n+  private final CoreAPIAvailabilityGuard availability;\n+\n+  ClassicCoreSPI(PlatformModule platform, DataSourceModule dataSource, Logger msgLog,\n+                 CoreAPIAvailabilityGuard availability)\n+  {\n+    this.platform = platform;\n+    this.dataSource = dataSource;\n+    this.msgLog = msgLog;\n+    this.availability = availability;\n+  }\n+\n+  @Override\n+  public boolean databaseIsAvailable(long timeout)\n+  {\n+    return platform.availabilityGuard.isAvailable(timeout);\n+  }\n+\n+  @Override\n+  public Result executeQuery(String query, MapValue parameters, TransactionalContext transactionalContext)\n+  {\n+    try\n+    {\n+      availability.assertDatabaseAvailable();\n+      return dataSource.queryExecutor.get().executeQuery(query, parameters, transactionalContext);\n+    } catch (QueryExecutionKernelException e)\n+    {\n+      throw e.asUserException();\n+    }\n+  }\n+\n+  @Override\n+  public Result executeQuery(String query, Map<String, Object> parameters, TransactionalContext transactionalContext)\n+  {\n+    try\n+    {\n+      availability.assertDatabaseAvailable();\n+      return dataSource.queryExecutor.get().executeQuery(query, parameters, transactionalContext);\n+    } catch (QueryExecutionKernelException e)\n+    {\n+      throw e.asUserException();\n+    }\n+  }\n+\n+  @Override\n+  public AutoIndexing autoIndexing()\n+  {\n+    return dataSource.autoIndexing;\n+  }\n+\n+  @Override\n+  public DependencyResolver resolver()\n+  {\n+    return platform.dependencies;\n+  }\n+\n+  @Override\n+  public void registerKernelEventHandler(KernelEventHandler handler)\n+  {\n+    dataSource.kernelEventHandlers.registerKernelEventHandler(handler);\n+  }\n+\n+  @Override\n+  public void unregisterKernelEventHandler(KernelEventHandler handler)\n+  {\n+    dataSource.kernelEventHandlers.unregisterKernelEventHandler(handler);\n+  }\n+\n+  @Override\n+  public <T> void registerTransactionEventHandler(TransactionEventHandler<T> handler)\n+  {\n+    dataSource.transactionEventHandlers.registerTransactionEventHandler(handler);\n+  }\n+\n+  @Override\n+  public <T> void unregisterTransactionEventHandler(TransactionEventHandler<T> handler)\n+  {\n+    dataSource.transactionEventHandlers.unregisterTransactionEventHandler(handler);\n+  }\n+\n+  @Override\n+  public StoreId storeId()\n+  {\n+    return dataSource.storeId.get();\n+  }\n+\n+  @Override\n+  public File storeDir()\n+  {\n+    return platform.storeDir;\n+  }\n+\n+  @Override\n+  public URL validateURLAccess(URL url) throws URLAccessValidationError\n+  {\n+    return platform.urlAccessRule.validate(platform.config, url);\n+  }\n+\n+  @Override\n+  public GraphDatabaseQueryService queryService()\n+  {\n+    return platform.dependencies.resolveDependency(GraphDatabaseQueryService.class);\n+  }\n+\n+  @Override\n+  public Kernel kernel()\n+  {\n+    return resolver().resolveDependency(Kernel.class);\n+  }\n+\n+  @Override\n+  public String name()\n+  {\n+    return platform.databaseInfo.toString();\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    try\n+    {\n+      msgLog.log(\"Shutdown started\");\n+      platform.availabilityGuard.shutdown();\n+      platform.life.shutdown();\n+    } catch (LifecycleException throwable)\n+    {\n+      msgLog.log(\"Shutdown failed\", throwable);\n+      throw throwable;\n+    }\n+  }\n+\n+  @Override\n+  public KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, long timeout)\n+  {\n+    try\n+    {\n+      availability.assertDatabaseAvailable();\n+      KernelTransaction kernelTx = dataSource.kernelAPI.get().newTransaction(type, loginContext, timeout);\n+      kernelTx.registerCloseListener(\n+          txId -> dataSource.threadToTransactionBridge.unbindTransactionFromCurrentThread());\n+      dataSource.threadToTransactionBridge.bindTransactionToCurrentThread(kernelTx);\n+      return kernelTx;\n+    } catch (TransactionFailureException e)\n+    {\n+      throw new org.neo4j.graphdb.TransactionFailureException(e.getMessage(), e);\n+    }\n+  }\n }\n",
            "diff_size": 155
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1055/ClassicCoreSPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1055/ClassicCoreSPI.java\nindex b514f29897c..c14be657b26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1055/ClassicCoreSPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1055/ClassicCoreSPI.java\n@@ -85,7 +85,7 @@ class ClassicCoreSPI implements GraphDatabaseFacade.SPI\n     }\n \n     @Override\n-    public Result executeQuery( String query, Map<String, Object> parameters, TransactionalContext transactionalContext )\n+    public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext transactionalContext )\n     {\n         try\n         {\n@@ -193,9 +193,8 @@ class ClassicCoreSPI implements GraphDatabaseFacade.SPI\n         {\n             availability.assertDatabaseAvailable();\n             KernelTransaction kernelTx = dataSource.kernelAPI.get().newTransaction( type, loginContext, timeout );\n-            kernelTx.registerCloseListener(\n-                    txId -> dataSource.threadToTransactionBridge.unbindTransactionFromCurrentThread() );\n-            dataSource.threadToTransactionBridge.bindTransactionToCurrentThread( kernelTx );\n+            kernelTx.registerCloseListener( txId -> dataSource.threadToTransactionBridge.unbindTransactionFromCurrentThread() );\n+dataSource.threadToTransactionBridge.bindTransactionToCurrentThread( kernelTx );\n             return kernelTx;\n         }\n         catch ( TransactionFailureException e )\n@@ -203,4 +202,4 @@ class ClassicCoreSPI implements GraphDatabaseFacade.SPI\n             throw new org.neo4j.graphdb.TransactionFailureException( e.getMessage(), e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
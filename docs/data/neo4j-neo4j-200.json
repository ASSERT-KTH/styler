{
    "project_name": "neo4j-neo4j",
    "error_id": "200",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/200/DefaultFileSystemWatcherService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/200/DefaultFileSystemWatcherService.java\nindex 014718e784d..74773df2897 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/200/DefaultFileSystemWatcherService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/200/DefaultFileSystemWatcherService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.watcher;\n \n import java.util.concurrent.ThreadFactory;\n@@ -38,7 +39,7 @@ public class DefaultFileSystemWatcherService implements FileSystemWatcherService\n     private ThreadFactory fileWatchers;\n     private Thread watcher;\n \n-    public DefaultFileSystemWatcherService( JobScheduler jobScheduler, FileWatcher fileWatcher )\n+    public DefaultFileSystemWatcherService(JobScheduler jobScheduler, FileWatcher fileWatcher)\n     {\n         this.jobScheduler = jobScheduler;\n         this.fileWatcher = fileWatcher;\n@@ -48,14 +49,14 @@ public class DefaultFileSystemWatcherService implements FileSystemWatcherService\n     @Override\n     public void init()\n     {\n-        fileWatchers = jobScheduler.threadFactory( Group.FILE_WATCHER );\n+        fileWatchers = jobScheduler.threadFactory(Group.FILE_WATCHER);\n     }\n \n     @Override\n     public synchronized void start()\n     {\n         assert watcher == null;\n-        watcher = fileWatchers.newThread( eventWatcher );\n+        watcher = fileWatchers.newThread(eventWatcher);\n         watcher.start();\n     }\n \n@@ -63,7 +64,7 @@ public class DefaultFileSystemWatcherService implements FileSystemWatcherService\n     public synchronized void stop() throws Exception\n     {\n         eventWatcher.stopWatching();\n-        if ( watcher != null )\n+        if (watcher != null)\n         {\n             watcher.interrupt();\n             watcher.join();\n@@ -91,8 +92,7 @@ public class DefaultFileSystemWatcherService implements FileSystemWatcherService\n             try\n             {\n                 fileWatcher.startWatching();\n-            }\n-            catch ( InterruptedException ignored )\n+            } catch (InterruptedException ignored)\n             {\n             }\n         }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "325",
    "information": {
        "errors": [
            {
                "line": "342",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 134).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        {\n          QName qName = binding.getQName();\n          niceSetAttributeURIValue(theElement, WSDLConstants.BINDING_ATTRIBUTE, qName.getNamespaceURI() + \"#\" + qName.getLocalPart());\n        }\n      }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/325/PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/325/PortImpl.java\nindex 015eb62ae42..e718305924f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/325/PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/325/PortImpl.java\n@@ -339,9 +339,10 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n         if (binding != null)\n         {\n           QName qName = binding.getQName();\n-          niceSetAttributeURIValue(theElement, WSDLConstants.BINDING_ATTRIBUTE, qName.getNamespaceURI() + \"#\" + qName.getLocalPart());\n-        }\n-      }\n+          niceSetAttributeURIValue(theElement, WSDLConstants.BINDING_ATTRIBUTE, qName.getNamespaceURI() +\n+                  \"#\" + qName.getLocalPart());\n+         }\n+       }\n     }\n   }\n \n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/325/PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/325/PortImpl.java\nindex 015eb62ae42..50238524fc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/325/PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/325/PortImpl.java\n@@ -8,6 +8,7 @@\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n+\n package org.eclipse.wst.wsdl.internal.impl;\n \n \n@@ -47,8 +48,7 @@ import org.w3c.dom.Element;\n  *\n  * @generated\n  */\n-public class PortImpl extends ExtensibleElementImpl implements Port\n-{\n+public class PortImpl extends ExtensibleElementImpl implements Port {\n   /**\n    * This class is not intended to be serialized.\n    * serialVersionUID is assigned with 1L to avoid\n@@ -60,9 +60,10 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n    * The default value of the '{@link #getName() <em>Name</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getName()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getName()\n    */\n   protected static final String NAME_EDEFAULT = null;\n \n@@ -70,9 +71,10 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n    * The cached value of the '{@link #getName() <em>Name</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getName()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getName()\n    */\n   protected String name = NAME_EDEFAULT;\n \n@@ -80,70 +82,71 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n    * The cached value of the '{@link #getEBinding() <em>EBinding</em>}' reference.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getEBinding()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getEBinding()\n    */\n   protected Binding eBinding;\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  protected PortImpl()\n-  {\n+  protected PortImpl() {\n     super();\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  protected EClass eStaticClass()\n-  {\n+  protected EClass eStaticClass() {\n     return WSDLPackage.Literals.PORT;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public String getName()\n-  {\n+  public String getName() {\n     return name;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void setName(String newName)\n-  {\n+  public void setName(String newName) {\n     String oldName = name;\n     name = newName;\n-    if (eNotificationRequired())\n+    if (eNotificationRequired()) {\n       eNotify(new ENotificationImpl(this, Notification.SET, WSDLPackage.PORT__NAME, oldName, name));\n+    }\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public Binding getEBinding()\n-  {\n-    if (eBinding != null && eBinding.eIsProxy())\n-    {\n-      InternalEObject oldEBinding = (InternalEObject)eBinding;\n-      eBinding = (Binding)eResolveProxy(oldEBinding);\n-      if (eBinding != oldEBinding)\n-      {\n-        if (eNotificationRequired())\n+  public Binding getEBinding() {\n+    if (eBinding != null && eBinding.eIsProxy()) {\n+      InternalEObject oldEBinding = (InternalEObject) eBinding;\n+      eBinding = (Binding) eResolveProxy(oldEBinding);\n+      if (eBinding != oldEBinding) {\n+        if (eNotificationRequired()) {\n           eNotify(new ENotificationImpl(this, Notification.RESOLVE, WSDLPackage.PORT__EBINDING, oldEBinding, eBinding));\n+        }\n       }\n     }\n     return eBinding;\n@@ -152,60 +155,61 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public Binding basicGetEBinding()\n-  {\n+  public Binding basicGetEBinding() {\n     return eBinding;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void setEBinding(Binding newEBinding)\n-  {\n+  public void setEBinding(Binding newEBinding) {\n     Binding oldEBinding = eBinding;\n     eBinding = newEBinding;\n-    if (eNotificationRequired())\n+    if (eNotificationRequired()) {\n       eNotify(new ENotificationImpl(this, Notification.SET, WSDLPackage.PORT__EBINDING, oldEBinding, eBinding));\n+    }\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated NOT\n    */\n-  public javax.wsdl.Binding getBinding()\n-  {\n+  public javax.wsdl.Binding getBinding() {\n     return getEBinding();\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated NOT\n    */\n-  public void setBinding(javax.wsdl.Binding binding)\n-  {\n-    setEBinding((Binding)binding);\n+  public void setBinding(javax.wsdl.Binding binding) {\n+    setEBinding((Binding) binding);\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public Object eGet(int featureID, boolean resolve, boolean coreType)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.PORT__NAME:\n+  public Object eGet(int featureID, boolean resolve, boolean coreType) {\n+    switch (featureID) {\n+    case WSDLPackage.PORT__NAME:\n       return getName();\n-      case WSDLPackage.PORT__EBINDING:\n-      if (resolve)\n+    case WSDLPackage.PORT__EBINDING:\n+      if (resolve) {\n         return getEBinding();\n+      }\n       return basicGetEBinding();\n     }\n     return super.eGet(featureID, resolve, coreType);\n@@ -214,17 +218,16 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void eSet(int featureID, Object newValue)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.PORT__NAME:\n-      setName((String)newValue);\n+  public void eSet(int featureID, Object newValue) {\n+    switch (featureID) {\n+    case WSDLPackage.PORT__NAME:\n+      setName((String) newValue);\n       return;\n-      case WSDLPackage.PORT__EBINDING:\n-      setEBinding((Binding)newValue);\n+    case WSDLPackage.PORT__EBINDING:\n+      setEBinding((Binding) newValue);\n       return;\n     }\n     super.eSet(featureID, newValue);\n@@ -233,17 +236,16 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void eUnset(int featureID)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.PORT__NAME:\n+  public void eUnset(int featureID) {\n+    switch (featureID) {\n+    case WSDLPackage.PORT__NAME:\n       setName(NAME_EDEFAULT);\n       return;\n-      case WSDLPackage.PORT__EBINDING:\n-      setEBinding((Binding)null);\n+    case WSDLPackage.PORT__EBINDING:\n+      setEBinding((Binding) null);\n       return;\n     }\n     super.eUnset(featureID);\n@@ -252,15 +254,14 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public boolean eIsSet(int featureID)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.PORT__NAME:\n+  public boolean eIsSet(int featureID) {\n+    switch (featureID) {\n+    case WSDLPackage.PORT__NAME:\n       return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);\n-      case WSDLPackage.PORT__EBINDING:\n+    case WSDLPackage.PORT__EBINDING:\n       return eBinding != null;\n     }\n     return super.eIsSet(featureID);\n@@ -269,12 +270,13 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public String toString()\n-  {\n-    if (eIsProxy())\n+  public String toString() {\n+    if (eIsProxy()) {\n       return super.toString();\n+    }\n \n     StringBuffer result = new StringBuffer(super.toString());\n     result.append(\" (name: \"); //$NON-NLS-1$\n@@ -287,20 +289,17 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n   // Reconcile methods\n   //\n \n-  public void reconcileAttributes(Element changedElement)\n-  {\n+  public void reconcileAttributes(Element changedElement) {\n     setName(changedElement.getAttribute(\"name\"));\n     reconcileReferences(false);\n   }\n \n-  public void handleUnreconciledElement(Element child, Collection remainingModelObjects)\n-  {\n+  public void handleUnreconciledElement(Element child, Collection remainingModelObjects) {\n     super.handleUnreconciledElement(child, remainingModelObjects);\n   }\n \n-  public Collection getModelObjects(Object component)\n-  {\n-    Port port = (Port)component;\n+  public Collection getModelObjects(Object component) {\n+    Port port = (Port) component;\n     List list = new ArrayList();\n     list.addAll(port.getEExtensibilityElements());\n     return list;\n@@ -310,65 +309,58 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n   // For reconciliation: Model -> DOM\n   //\n \n-  protected void changeAttribute(EAttribute eAttribute)\n-  {\n-    if (isReconciling)\n+  protected void changeAttribute(EAttribute eAttribute) {\n+    if (isReconciling) {\n       return;\n+    }\n \n     super.changeAttribute(eAttribute);\n     Element theElement = getElement();\n-    if (theElement != null)\n-    {\n-      if (eAttribute == null || eAttribute == WSDLPackage.Literals.PORT__NAME)\n+    if (theElement != null) {\n+      if (eAttribute == null || eAttribute == WSDLPackage.Literals.PORT__NAME) {\n         niceSetAttribute(theElement, WSDLConstants.NAME_ATTRIBUTE, getName());\n+      }\n     }\n   }\n \n-  protected void changeReference(EReference eReference)\n-  {\n-    if (isReconciling)\n+  protected void changeReference(EReference eReference) {\n+    if (isReconciling) {\n       return;\n+    }\n \n     super.changeReference(eReference);\n     Element theElement = getElement();\n-    if (theElement != null)\n-    {\n-      if (eReference == null || eReference == WSDLPackage.Literals.PORT__EBINDING)\n-      {\n+    if (theElement != null) {\n+      if (eReference == null || eReference == WSDLPackage.Literals.PORT__EBINDING) {\n         Binding binding = getEBinding();\n-        if (binding != null)\n-        {\n+        if (binding != null) {\n           QName qName = binding.getQName();\n-          niceSetAttributeURIValue(theElement, WSDLConstants.BINDING_ATTRIBUTE, qName.getNamespaceURI() + \"#\" + qName.getLocalPart());\n+          niceSetAttributeURIValue(theElement, WSDLConstants.BINDING_ATTRIBUTE,\n+            qName.getNamespaceURI() + \"#\" + qName.getLocalPart());\n         }\n       }\n     }\n   }\n \n-  protected Element createElement()\n-  {\n+  protected Element createElement() {\n     Element newElement = createElement(WSDLConstants.PORT);\n     setElement(newElement);\n \n     Iterator iterator = getExtensibilityElements().iterator();\n-    while (iterator.hasNext())\n-    {\n-      ExtensibilityElement extensibilityElement = (ExtensibilityElement)iterator.next();\n-      Element child = ((ExtensibilityElementImpl)extensibilityElement).createElement();\n+    while (iterator.hasNext()) {\n+      ExtensibilityElement extensibilityElement = (ExtensibilityElement) iterator.next();\n+      Element child = ((ExtensibilityElementImpl) extensibilityElement).createElement();\n       newElement.appendChild(child);\n     }\n     return newElement;\n   }\n \n-  public void reconcileReferences(boolean deep)\n-  {\n-    if (element != null)\n-    {\n+  public void reconcileReferences(boolean deep) {\n+    if (element != null) {\n       Definition definition = getEnclosingDefinition();\n       QName bindingQName = createQName(definition, element.getAttribute(WSDLConstants.BINDING_ATTRIBUTE), element);\n-      Binding newBinding = (bindingQName != null) ? (Binding)definition.getBinding(bindingQName) : null;\n-      if (newBinding != getEBinding())\n-      {\n+      Binding newBinding = (bindingQName != null) ? (Binding) definition.getBinding(bindingQName) : null;\n+      if (newBinding != getEBinding()) {\n         setEBinding(newBinding);\n       }\n     }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "342",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/325/PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/325/PortImpl.java\nindex 015eb62ae42..e718305924f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/325/PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/325/PortImpl.java\n@@ -339,9 +339,10 @@ public class PortImpl extends ExtensibleElementImpl implements Port\n         if (binding != null)\n         {\n           QName qName = binding.getQName();\n-          niceSetAttributeURIValue(theElement, WSDLConstants.BINDING_ATTRIBUTE, qName.getNamespaceURI() + \"#\" + qName.getLocalPart());\n-        }\n-      }\n+          niceSetAttributeURIValue(theElement, WSDLConstants.BINDING_ATTRIBUTE, qName.getNamespaceURI() +\n+                  \"#\" + qName.getLocalPart());\n+         }\n+       }\n     }\n   }\n \n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
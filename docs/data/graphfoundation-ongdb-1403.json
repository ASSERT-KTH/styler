{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1403",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "206",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "253",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "276",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "330",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "362",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "382",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "504",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "534",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "558",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "589",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "589",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "621",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "643",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "669",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "669",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "669",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "698",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "698",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "723",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "739",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "739",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1403/InternalFlatFileRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1403/InternalFlatFileRealm.java\nindex 798289863bb..d8ef65d0415 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1403/InternalFlatFileRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1403/InternalFlatFileRealm.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import org.apache.shiro.authc.AuthenticationException;\n@@ -67,697 +68,681 @@ import static java.util.Collections.emptySet;\n  * Shiro realm wrapping FileUserRepository and FileRoleRepository\n  */\n public class InternalFlatFileRealm extends AuthorizingRealm implements RealmLifecycle, EnterpriseUserManager,\n-        ShiroAuthorizationInfoProvider\n+    ShiroAuthorizationInfoProvider\n {\n-    /**\n-     * This flag is used in the same way as User.PASSWORD_CHANGE_REQUIRED, but it's\n-     * placed here because of user suspension not being a part of community edition\n-     */\n-    static final String IS_SUSPENDED = \"is_suspended\";\n-\n-    private static int MAX_READ_ATTEMPTS = 10;\n-\n-    private final UserRepository userRepository;\n-    private final RoleRepository roleRepository;\n-    private final UserRepository initialUserRepository;\n-    private final UserRepository defaultAdminRepository;\n-    private final PasswordPolicy passwordPolicy;\n-    private final AuthenticationStrategy authenticationStrategy;\n-    private final boolean authenticationEnabled;\n-    private final boolean authorizationEnabled;\n-    private final JobScheduler jobScheduler;\n-    private volatile JobScheduler.JobHandle reloadJobHandle;\n-\n-    public InternalFlatFileRealm( UserRepository userRepository, RoleRepository roleRepository,\n-            PasswordPolicy passwordPolicy, AuthenticationStrategy authenticationStrategy,\n-            JobScheduler jobScheduler, UserRepository initialUserRepository,\n-            UserRepository defaultAdminRepository )\n-    {\n-        this( userRepository,roleRepository, passwordPolicy, authenticationStrategy, true, true,\n-                jobScheduler, initialUserRepository, defaultAdminRepository );\n-    }\n-\n-    InternalFlatFileRealm( UserRepository userRepository, RoleRepository roleRepository,\n-            PasswordPolicy passwordPolicy, AuthenticationStrategy authenticationStrategy,\n-            boolean authenticationEnabled, boolean authorizationEnabled, JobScheduler jobScheduler,\n-            UserRepository initialUserRepository, UserRepository defaultAdminRepository )\n-    {\n-        super();\n-\n-        setName( SecuritySettings.NATIVE_REALM_NAME );\n-        this.userRepository = userRepository;\n-        this.roleRepository = roleRepository;\n-        this.initialUserRepository = initialUserRepository;\n-        this.defaultAdminRepository = defaultAdminRepository;\n-        this.passwordPolicy = passwordPolicy;\n-        this.authenticationStrategy = authenticationStrategy;\n-        this.authenticationEnabled = authenticationEnabled;\n-        this.authorizationEnabled = authorizationEnabled;\n-        this.jobScheduler = jobScheduler;\n-        setAuthenticationCachingEnabled( false ); // NOTE: If this is ever changed to true it is not secure to use\n-                                                  // AllowAllCredentialsMatcher anymore\n-        setAuthorizationCachingEnabled( false );\n-        setCredentialsMatcher( new AllowAllCredentialsMatcher() ); // Since we do not cache authentication info we can\n-                                                                   // disable the credentials matcher\n-        setRolePermissionResolver( PredefinedRolesBuilder.rolePermissionResolver );\n-    }\n-\n-    @Override\n-    public void initialize() throws Throwable\n-    {\n-        initialUserRepository.init();\n-        defaultAdminRepository.init();\n-        userRepository.init();\n-        roleRepository.init();\n-    }\n-\n-    @Override\n-    public void start() throws Throwable\n-    {\n-        initialUserRepository.start();\n-        defaultAdminRepository.start();\n-        userRepository.start();\n-        roleRepository.start();\n-\n-        Set<String> addedDefaultUsers = ensureDefaultUsers();\n-        ensureDefaultRoles( addedDefaultUsers );\n-\n-        scheduleNextFileReload();\n-    }\n-\n-    protected void scheduleNextFileReload()\n-    {\n-        reloadJobHandle = jobScheduler.schedule(\n-                JobScheduler.Groups.nativeSecurity,\n-                this::readFilesFromDisk,\n-                10, TimeUnit.SECONDS );\n-    }\n-\n-    private void readFilesFromDisk()\n-    {\n-        try\n-        {\n-            readFilesFromDisk( MAX_READ_ATTEMPTS, new LinkedList<>() );\n-        }\n-        finally\n-        {\n-            scheduleNextFileReload();\n-        }\n-    }\n+  /**\n+   * This flag is used in the same way as User.PASSWORD_CHANGE_REQUIRED, but it's\n+   * placed here because of user suspension not being a part of community edition\n+   */\n+  static final String IS_SUSPENDED = \"is_suspended\";\n+\n+  private static int MAX_READ_ATTEMPTS = 10;\n+\n+  private final UserRepository userRepository;\n+  private final RoleRepository roleRepository;\n+  private final UserRepository initialUserRepository;\n+  private final UserRepository defaultAdminRepository;\n+  private final PasswordPolicy passwordPolicy;\n+  private final AuthenticationStrategy authenticationStrategy;\n+  private final boolean authenticationEnabled;\n+  private final boolean authorizationEnabled;\n+  private final JobScheduler jobScheduler;\n+  private volatile JobScheduler.JobHandle reloadJobHandle;\n+\n+  public InternalFlatFileRealm(UserRepository userRepository, RoleRepository roleRepository,\n+                               PasswordPolicy passwordPolicy, AuthenticationStrategy authenticationStrategy,\n+                               JobScheduler jobScheduler, UserRepository initialUserRepository,\n+                               UserRepository defaultAdminRepository)\n+  {\n+    this(userRepository, roleRepository, passwordPolicy, authenticationStrategy, true, true,\n+        jobScheduler, initialUserRepository, defaultAdminRepository);\n+  }\n+\n+  InternalFlatFileRealm(UserRepository userRepository, RoleRepository roleRepository,\n+                        PasswordPolicy passwordPolicy, AuthenticationStrategy authenticationStrategy,\n+                        boolean authenticationEnabled, boolean authorizationEnabled, JobScheduler jobScheduler,\n+                        UserRepository initialUserRepository, UserRepository defaultAdminRepository)\n+  {\n+    super();\n+\n+    setName(SecuritySettings.NATIVE_REALM_NAME);\n+    this.userRepository = userRepository;\n+    this.roleRepository = roleRepository;\n+    this.initialUserRepository = initialUserRepository;\n+    this.defaultAdminRepository = defaultAdminRepository;\n+    this.passwordPolicy = passwordPolicy;\n+    this.authenticationStrategy = authenticationStrategy;\n+    this.authenticationEnabled = authenticationEnabled;\n+    this.authorizationEnabled = authorizationEnabled;\n+    this.jobScheduler = jobScheduler;\n+    setAuthenticationCachingEnabled(false); // NOTE: If this is ever changed to true it is not secure to use\n+    // AllowAllCredentialsMatcher anymore\n+    setAuthorizationCachingEnabled(false);\n+    setCredentialsMatcher(new AllowAllCredentialsMatcher()); // Since we do not cache authentication info we can\n+    // disable the credentials matcher\n+    setRolePermissionResolver(PredefinedRolesBuilder.rolePermissionResolver);\n+  }\n+\n+  @Override\n+  public void initialize() throws Throwable\n+  {\n+    initialUserRepository.init();\n+    defaultAdminRepository.init();\n+    userRepository.init();\n+    roleRepository.init();\n+  }\n+\n+  @Override\n+  public void start() throws Throwable\n+  {\n+    initialUserRepository.start();\n+    defaultAdminRepository.start();\n+    userRepository.start();\n+    roleRepository.start();\n+\n+    Set<String> addedDefaultUsers = ensureDefaultUsers();\n+    ensureDefaultRoles(addedDefaultUsers);\n+\n+    scheduleNextFileReload();\n+  }\n+\n+  protected void scheduleNextFileReload()\n+  {\n+    reloadJobHandle = jobScheduler.schedule(\n+        JobScheduler.Groups.nativeSecurity,\n+        this::readFilesFromDisk,\n+        10, TimeUnit.SECONDS);\n+  }\n+\n+  private void readFilesFromDisk()\n+  {\n+    try\n+    {\n+      readFilesFromDisk(MAX_READ_ATTEMPTS, new LinkedList<>());\n+    } finally\n+    {\n+      scheduleNextFileReload();\n+    }\n+  }\n+\n+  private void readFilesFromDisk(int attemptLeft, java.util.List<String> failures)\n+  {\n+    if (attemptLeft < 0)\n+    {\n+      throw new RuntimeException(\"Unable to load valid flat file repositories! Attempts failed with:\\n\\t\" +\n+          String.join(\"\\n\\t\", failures));\n+    }\n+\n+    try\n+    {\n+      final boolean valid;\n+      final boolean needsUpdate;\n+      synchronized (this)\n+      {\n+        ListSnapshot<User> users = userRepository.getPersistedSnapshot();\n+        ListSnapshot<RoleRecord> roles = roleRepository.getPersistedSnapshot();\n+\n+        needsUpdate = users.fromPersisted() || roles.fromPersisted();\n+        valid = needsUpdate && RoleRepository.validate(users.values(), roles.values());\n+\n+        if (valid)\n+        {\n+          if (users.fromPersisted())\n+          {\n+            userRepository.setUsers(users);\n+          }\n+          if (roles.fromPersisted())\n+          {\n+            roleRepository.setRoles(roles);\n+          }\n+        }\n+      }\n+      if (needsUpdate && !valid)\n+      {\n+        failures.add(\"Role-auth file combination not valid.\");\n+        Thread.sleep(10);\n+        readFilesFromDisk(attemptLeft - 1, failures);\n+      }\n+    } catch (IOException | IllegalStateException | InterruptedException | InvalidArgumentsException e)\n+    {\n+      failures.add(e.getMessage());\n+      readFilesFromDisk(attemptLeft - 1, failures);\n+    }\n+  }\n+\n+  /* Adds neo4j user if no users exist */\n+  private Set<String> ensureDefaultUsers() throws Throwable\n+  {\n+    if (authenticationEnabled || authorizationEnabled)\n+    {\n+      if (userRepository.numberOfUsers() == 0)\n+      {\n+        User neo4j = newUser(INITIAL_USER_NAME, \"neo4j\", true);\n+        if (initialUserRepository.numberOfUsers() > 0)\n+        {\n+          User initUser = initialUserRepository.getUserByName(INITIAL_USER_NAME);\n+          if (initUser != null)\n+          {\n+            userRepository.update(neo4j, initUser);\n+          }\n+        }\n+        return Collections.singleton(INITIAL_USER_NAME);\n+      }\n+    }\n+    return Collections.emptySet();\n+  }\n \n-    private void readFilesFromDisk( int attemptLeft, java.util.List<String> failures )\n+  /* Builds all predefined roles if no roles exist. Adds 'neo4j' to admin role if no admin is assigned */\n+  private void ensureDefaultRoles(Set<String> addedDefaultUsers) throws IOException, InvalidArgumentsException\n+  {\n+    if (authenticationEnabled || authorizationEnabled)\n     {\n-        if ( attemptLeft < 0 )\n-        {\n-            throw new RuntimeException( \"Unable to load valid flat file repositories! Attempts failed with:\\n\\t\" +\n-                    String.join( \"\\n\\t\", failures ) );\n-        }\n+      List<String> newAdmins = new LinkedList<>(addedDefaultUsers);\n \n-        try\n+      if (numberOfRoles() == 0)\n+      {\n+        if (newAdmins.isEmpty())\n         {\n-            final boolean valid;\n-            final boolean needsUpdate;\n-            synchronized ( this )\n-            {\n-                ListSnapshot<User> users = userRepository.getPersistedSnapshot();\n-                ListSnapshot<RoleRecord> roles = roleRepository.getPersistedSnapshot();\n-\n-                needsUpdate = users.fromPersisted() || roles.fromPersisted();\n-                valid = needsUpdate && RoleRepository.validate( users.values(), roles.values() );\n-\n-                if ( valid )\n-                {\n-                    if ( users.fromPersisted() )\n-                    {\n-                        userRepository.setUsers( users );\n-                    }\n-                    if ( roles.fromPersisted() )\n-                    {\n-                        roleRepository.setRoles( roles );\n-                    }\n-                }\n-            }\n-            if ( needsUpdate && !valid )\n+          Set<String> usernames = userRepository.getAllUsernames();\n+          if (defaultAdminRepository.numberOfUsers() > 1)\n+          {\n+            throw new InvalidArgumentsException(\n+                \"No roles defined, and multiple users defined as default admin user.\" +\n+                    \" Please use `neo4j-admin \" + SetDefaultAdminCommand.COMMAND_NAME +\n+                    \"` to select a valid admin.\");\n+          } else if (defaultAdminRepository.numberOfUsers() == 1)\n+          {\n+            // We currently support only one default admin\n+            String newAdminUsername = defaultAdminRepository.getAllUsernames().iterator().next();\n+            if (userRepository.getUserByName(newAdminUsername) == null)\n             {\n-                failures.add( \"Role-auth file combination not valid.\" );\n-                Thread.sleep( 10 );\n-                readFilesFromDisk( attemptLeft - 1, failures );\n+              throw new InvalidArgumentsException(\n+                  \"No roles defined, and default admin user '\" + newAdminUsername +\n+                      \"' does not exist. Please use `neo4j-admin \" +\n+                      SetDefaultAdminCommand.COMMAND_NAME + \"` to select a valid admin.\");\n             }\n+            newAdmins.add(newAdminUsername);\n+          } else if (usernames.size() == 1)\n+          {\n+            newAdmins.add(usernames.iterator().next());\n+          } else if (usernames.contains(INITIAL_USER_NAME))\n+          {\n+            newAdmins.add(INITIAL_USER_NAME);\n+          } else\n+          {\n+            throw new InvalidArgumentsException(\n+                \"No roles defined, and cannot determine which user should be admin. \" +\n+                    \"Please use `neo4j-admin \" + SetDefaultAdminCommand.COMMAND_NAME +\n+                    \"` to select an \" + \"admin.\");\n+          }\n         }\n-        catch ( IOException | IllegalStateException | InterruptedException | InvalidArgumentsException e )\n-        {\n-            failures.add( e.getMessage() );\n-            readFilesFromDisk( attemptLeft - 1, failures );\n-        }\n-    }\n \n-    /* Adds neo4j user if no users exist */\n-    private Set<String> ensureDefaultUsers() throws Throwable\n-    {\n-        if ( authenticationEnabled || authorizationEnabled )\n+        for (String role : PredefinedRolesBuilder.roles.keySet())\n         {\n-            if ( userRepository.numberOfUsers() == 0 )\n-            {\n-                User neo4j = newUser( INITIAL_USER_NAME, \"neo4j\", true );\n-                if ( initialUserRepository.numberOfUsers() > 0 )\n-                {\n-                    User initUser = initialUserRepository.getUserByName( INITIAL_USER_NAME );\n-                    if ( initUser != null )\n-                    {\n-                        userRepository.update( neo4j, initUser );\n-                    }\n-                }\n-                return Collections.singleton( INITIAL_USER_NAME );\n-            }\n+          newRole(role);\n         }\n-        return Collections.emptySet();\n-    }\n-\n-    /* Builds all predefined roles if no roles exist. Adds 'neo4j' to admin role if no admin is assigned */\n-    private void ensureDefaultRoles( Set<String> addedDefaultUsers ) throws IOException, InvalidArgumentsException\n-    {\n-        if ( authenticationEnabled || authorizationEnabled )\n-        {\n-            List<String> newAdmins = new LinkedList<>( addedDefaultUsers );\n+      }\n \n-            if ( numberOfRoles() == 0 )\n-            {\n-                if ( newAdmins.isEmpty() )\n-                {\n-                    Set<String> usernames = userRepository.getAllUsernames();\n-                    if ( defaultAdminRepository.numberOfUsers() > 1 )\n-                    {\n-                        throw new InvalidArgumentsException(\n-                                \"No roles defined, and multiple users defined as default admin user.\" +\n-                                        \" Please use `neo4j-admin \" + SetDefaultAdminCommand.COMMAND_NAME +\n-                                        \"` to select a valid admin.\" );\n-                    }\n-                    else if ( defaultAdminRepository.numberOfUsers() == 1 )\n-                    {\n-                        // We currently support only one default admin\n-                        String newAdminUsername = defaultAdminRepository.getAllUsernames().iterator().next();\n-                        if ( userRepository.getUserByName( newAdminUsername ) == null )\n-                        {\n-                            throw new InvalidArgumentsException(\n-                                    \"No roles defined, and default admin user '\" + newAdminUsername +\n-                                            \"' does not exist. Please use `neo4j-admin \" +\n-                                            SetDefaultAdminCommand.COMMAND_NAME + \"` to select a valid admin.\" );\n-                        }\n-                        newAdmins.add( newAdminUsername );\n-                    }\n-                    else if ( usernames.size() == 1 )\n-                    {\n-                        newAdmins.add( usernames.iterator().next() );\n-                    }\n-                    else if ( usernames.contains( INITIAL_USER_NAME ) )\n-                    {\n-                        newAdmins.add( INITIAL_USER_NAME );\n-                    }\n-                    else\n-                    {\n-                        throw new InvalidArgumentsException(\n-                                \"No roles defined, and cannot determine which user should be admin. \" +\n-                                        \"Please use `neo4j-admin \" + SetDefaultAdminCommand.COMMAND_NAME +\n-                                        \"` to select an \" + \"admin.\" );\n-                    }\n-                }\n-\n-                for ( String role : PredefinedRolesBuilder.roles.keySet() )\n-                {\n-                    newRole( role );\n-                }\n-            }\n-\n-            for ( String username : newAdmins )\n-            {\n-                addRoleToUser( PredefinedRoles.ADMIN, username );\n-            }\n-        }\n+      for (String username : newAdmins)\n+      {\n+        addRoleToUser(PredefinedRoles.ADMIN, username);\n+      }\n     }\n+  }\n \n-    @Override\n-    public void stop() throws Throwable\n-    {\n-        initialUserRepository.stop();\n-        defaultAdminRepository.stop();\n-        userRepository.stop();\n-        roleRepository.stop();\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    initialUserRepository.stop();\n+    defaultAdminRepository.stop();\n+    userRepository.stop();\n+    roleRepository.stop();\n \n-        if ( reloadJobHandle != null )\n-        {\n-            reloadJobHandle.cancel( true );\n-            reloadJobHandle = null;\n-        }\n-    }\n-\n-    @Override\n-    public void shutdown() throws Throwable\n+    if (reloadJobHandle != null)\n     {\n-        initialUserRepository.shutdown();\n-        defaultAdminRepository.shutdown();\n-        userRepository.shutdown();\n-        roleRepository.shutdown();\n-        setCacheManager( null );\n+      reloadJobHandle.cancel(true);\n+      reloadJobHandle = null;\n     }\n+  }\n \n-    @Override\n-    public boolean supports( AuthenticationToken token )\n-    {\n-        try\n-        {\n-            if ( token instanceof ShiroAuthToken )\n-            {\n-                ShiroAuthToken shiroAuthToken = (ShiroAuthToken) token;\n-                return shiroAuthToken.getScheme().equals( AuthToken.BASIC_SCHEME ) &&\n-                       (shiroAuthToken.supportsRealm( AuthToken.NATIVE_REALM ));\n-            }\n-            return false;\n-        }\n-        catch ( InvalidAuthTokenException e )\n-        {\n-            return false;\n-        }\n-    }\n+  @Override\n+  public void shutdown() throws Throwable\n+  {\n+    initialUserRepository.shutdown();\n+    defaultAdminRepository.shutdown();\n+    userRepository.shutdown();\n+    roleRepository.shutdown();\n+    setCacheManager(null);\n+  }\n \n-    @Override\n-    protected AuthorizationInfo doGetAuthorizationInfo( PrincipalCollection principals ) throws AuthenticationException\n+  @Override\n+  public boolean supports(AuthenticationToken token)\n+  {\n+    try\n     {\n-        if ( !authorizationEnabled )\n-        {\n-            return null;\n-        }\n-\n-        String username = (String) getAvailablePrincipal( principals );\n-        if ( username == null )\n-        {\n-            return null;\n-        }\n-\n-        User user = userRepository.getUserByName( username );\n-        if ( user == null )\n-        {\n-            return null;\n-        }\n-\n-        if ( user.passwordChangeRequired() || user.hasFlag( IS_SUSPENDED ) )\n-        {\n-            return new SimpleAuthorizationInfo();\n-        }\n-        else\n-        {\n-            Set<String> roles = roleRepository.getRoleNamesByUsername( user.name() );\n-            return new SimpleAuthorizationInfo( roles );\n-        }\n-    }\n-\n-    @Override\n-    protected AuthenticationInfo doGetAuthenticationInfo( AuthenticationToken token ) throws AuthenticationException\n-    {\n-        if ( !authenticationEnabled )\n-        {\n-            return null;\n-        }\n-\n+      if (token instanceof ShiroAuthToken)\n+      {\n         ShiroAuthToken shiroAuthToken = (ShiroAuthToken) token;\n-\n-        String username;\n-        String password;\n-        try\n-        {\n-            username = AuthToken.safeCast( AuthToken.PRINCIPAL, shiroAuthToken.getAuthTokenMap() );\n-            password = AuthToken.safeCast( AuthToken.CREDENTIALS, shiroAuthToken.getAuthTokenMap() );\n-        }\n-        catch ( InvalidAuthTokenException e )\n-        {\n-            throw new UnsupportedTokenException( e );\n-        }\n-\n-        User user = userRepository.getUserByName( username );\n-        if ( user == null )\n-        {\n-            throw new UnknownAccountException();\n-        }\n-\n-        AuthenticationResult result = authenticationStrategy.authenticate( user, password );\n-\n-        switch ( result )\n-        {\n-        case FAILURE:\n-            throw new IncorrectCredentialsException();\n-        case TOO_MANY_ATTEMPTS:\n-            throw new ExcessiveAttemptsException();\n-        default:\n-            break;\n-        }\n-\n-        if ( user.hasFlag( InternalFlatFileRealm.IS_SUSPENDED ) )\n-        {\n-            throw new DisabledAccountException( \"User '\" + user.name() + \"' is suspended.\" );\n-        }\n-\n-        if ( user.passwordChangeRequired() )\n-        {\n-            result = AuthenticationResult.PASSWORD_CHANGE_REQUIRED;\n-        }\n-\n-        // NOTE: We do not cache the authentication info using the Shiro cache manager,\n-        // so all authentication request will go through this method.\n-        // Hence the credentials matcher is set to AllowAllCredentialsMatcher,\n-        // and we do not need to store hashed credentials in the AuthenticationInfo.\n-        return new ShiroAuthenticationInfo( user.name(), getName(), result );\n-    }\n-\n-    @Override\n-    public AuthorizationInfo getAuthorizationInfoSnapshot( PrincipalCollection principalCollection )\n+        return shiroAuthToken.getScheme().equals(AuthToken.BASIC_SCHEME) &&\n+            (shiroAuthToken.supportsRealm(AuthToken.NATIVE_REALM));\n+      }\n+      return false;\n+    } catch (InvalidAuthTokenException e)\n     {\n-        return getAuthorizationInfo( principalCollection );\n+      return false;\n     }\n+  }\n \n-    private int numberOfUsers()\n+  @Override\n+  protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) throws AuthenticationException\n+  {\n+    if (!authorizationEnabled)\n     {\n-        return userRepository.numberOfUsers();\n+      return null;\n     }\n \n-    private int numberOfRoles()\n+    String username = (String) getAvailablePrincipal(principals);\n+    if (username == null)\n     {\n-        return roleRepository.numberOfRoles();\n+      return null;\n     }\n \n-    @Override\n-    public User newUser( String username, String initialPassword, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n+    User user = userRepository.getUserByName(username);\n+    if (user == null)\n     {\n-        userRepository.assertValidUsername( username );\n-        passwordPolicy.validatePassword( initialPassword );\n-\n-        User user = new User.Builder()\n-                .withName( username )\n-                .withCredentials( Credential.forPassword( initialPassword ) )\n-                .withRequiredPasswordChange( requirePasswordChange )\n-                .build();\n-        synchronized ( this )\n-        {\n-            userRepository.create( user );\n-        }\n-\n-        return user;\n+      return null;\n     }\n \n-    @Override\n-    public RoleRecord newRole( String roleName, String... usernames ) throws IOException, InvalidArgumentsException\n+    if (user.passwordChangeRequired() || user.hasFlag(IS_SUSPENDED))\n     {\n-        roleRepository.assertValidRoleName( roleName );\n-        for ( String username : usernames )\n-        {\n-            userRepository.assertValidUsername( username );\n-        }\n-\n-        SortedSet<String> userSet = new TreeSet<>( Arrays.asList( usernames ) );\n-        RoleRecord role = new RoleRecord.Builder().withName( roleName ).withUsers( userSet ).build();\n-\n-        synchronized ( this )\n-        {\n-            for ( String username : usernames )\n-            {\n-                getUser( username ); // assert that user exists\n-            }\n-            roleRepository.create( role );\n-        }\n-\n-        return role;\n-    }\n-\n-    @Override\n-    public boolean deleteRole( String roleName ) throws IOException, InvalidArgumentsException\n+      return new SimpleAuthorizationInfo();\n+    } else\n     {\n-        assertNotPredefinedRoleName( roleName );\n-\n-        boolean result = false;\n-        synchronized ( this )\n-        {\n-            RoleRecord role = getRole( roleName );  // asserts role name exists\n-            if ( roleRepository.delete( role ) )\n-            {\n-                result = true;\n-            }\n-            else\n-            {\n-                // We should not get here, but if we do the assert will fail and give a nice error msg\n-                getRole( roleName );\n-            }\n-        }\n-        return result;\n+      Set<String> roles = roleRepository.getRoleNamesByUsername(user.name());\n+      return new SimpleAuthorizationInfo(roles);\n     }\n+  }\n \n-    @Override\n-    public RoleRecord getRole( String roleName ) throws InvalidArgumentsException\n+  @Override\n+  protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException\n+  {\n+    if (!authenticationEnabled)\n     {\n-        RoleRecord role = roleRepository.getRoleByName( roleName );\n-        if ( role == null )\n-        {\n-            throw new InvalidArgumentsException( \"Role '\" + roleName + \"' does not exist.\" );\n-        }\n-        return role;\n+      return null;\n     }\n \n-    @Override\n-    public RoleRecord silentlyGetRole( String roleName )\n-    {\n-        return roleRepository.getRoleByName( roleName );\n-    }\n+    ShiroAuthToken shiroAuthToken = (ShiroAuthToken) token;\n \n-    @Override\n-    public void addRoleToUser( String roleName, String username ) throws IOException, InvalidArgumentsException\n+    String username;\n+    String password;\n+    try\n     {\n-        roleRepository.assertValidRoleName( roleName );\n-        userRepository.assertValidUsername( username );\n-\n-        synchronized ( this )\n-        {\n-            getUser( username );\n-            RoleRecord role = getRole( roleName );\n-            RoleRecord newRole = role.augment().withUser( username ).build();\n-            try\n-            {\n-                roleRepository.update( role, newRole );\n-            }\n-            catch ( ConcurrentModificationException e )\n-            {\n-                // Try again\n-                addRoleToUser( roleName, username );\n-            }\n-        }\n-        clearCachedAuthorizationInfoForUser( username );\n-    }\n-\n-    @Override\n-    public void removeRoleFromUser( String roleName, String username ) throws IOException, InvalidArgumentsException\n+      username = AuthToken.safeCast(AuthToken.PRINCIPAL, shiroAuthToken.getAuthTokenMap());\n+      password = AuthToken.safeCast(AuthToken.CREDENTIALS, shiroAuthToken.getAuthTokenMap());\n+    } catch (InvalidAuthTokenException e)\n     {\n-        roleRepository.assertValidRoleName( roleName );\n-        userRepository.assertValidUsername( username );\n-\n-        synchronized ( this )\n-        {\n-            getUser( username );\n-            RoleRecord role = getRole( roleName );\n-\n-            RoleRecord newRole = role.augment().withoutUser( username ).build();\n-            try\n-            {\n-                roleRepository.update( role, newRole );\n-            }\n-            catch ( ConcurrentModificationException e )\n-            {\n-                // Try again\n-                removeRoleFromUser( roleName, username );\n-            }\n-        }\n-\n-        clearCachedAuthorizationInfoForUser( username );\n+      throw new UnsupportedTokenException(e);\n     }\n \n-    @Override\n-    public boolean deleteUser( String username ) throws IOException, InvalidArgumentsException\n+    User user = userRepository.getUserByName(username);\n+    if (user == null)\n     {\n-        synchronized ( this )\n-        {\n-            User user = getUser( username );    // throws if user does not exists\n-            removeUserFromAllRoles( username ); // performed first to always maintain auth-roles repo consistency\n-            userRepository.delete( user );      // this will not fail as we know the user exists in this lock\n-                                                // assuming no one messes with the user and role repositories\n-                                                // outside this instance\n-        }\n-        clearCacheForUser( username );\n-        return true;\n+      throw new UnknownAccountException();\n     }\n \n-    @Override\n-    public User getUser( String username ) throws InvalidArgumentsException\n+    AuthenticationResult result = authenticationStrategy.authenticate(user, password);\n+\n+    switch (result)\n     {\n-        User u = userRepository.getUserByName( username );\n-        if ( u == null )\n-        {\n-            throw new InvalidArgumentsException( \"User '\" + username + \"' does not exist.\" );\n-        }\n-        return u;\n+      case FAILURE:\n+        throw new IncorrectCredentialsException();\n+      case TOO_MANY_ATTEMPTS:\n+        throw new ExcessiveAttemptsException();\n+      default:\n+        break;\n     }\n \n-    @Override\n-    public User silentlyGetUser( String username )\n+    if (user.hasFlag(InternalFlatFileRealm.IS_SUSPENDED))\n     {\n-        return userRepository.getUserByName( username );\n+      throw new DisabledAccountException(\"User '\" + user.name() + \"' is suspended.\");\n     }\n \n-    @Override\n-    public void setUserPassword( String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n+    if (user.passwordChangeRequired())\n     {\n-        User existingUser = getUser( username );\n-        passwordPolicy.validatePassword( password );\n-        if ( existingUser.credentials().matchesPassword( password ) )\n-        {\n-            throw new InvalidArgumentsException( \"Old password and new password cannot be the same.\" );\n-        }\n+      result = AuthenticationResult.PASSWORD_CHANGE_REQUIRED;\n+    }\n \n-        try\n-        {\n-            User updatedUser = existingUser.augment()\n-                    .withCredentials( Credential.forPassword( password ) )\n-                    .withRequiredPasswordChange( requirePasswordChange )\n-                    .build();\n-            synchronized ( this )\n-            {\n-                userRepository.update( existingUser, updatedUser );\n-            }\n-        }\n-        catch ( ConcurrentModificationException e )\n-        {\n-            // try again\n-            setUserPassword( username, password, requirePasswordChange );\n-        }\n+    // NOTE: We do not cache the authentication info using the Shiro cache manager,\n+    // so all authentication request will go through this method.\n+    // Hence the credentials matcher is set to AllowAllCredentialsMatcher,\n+    // and we do not need to store hashed credentials in the AuthenticationInfo.\n+    return new ShiroAuthenticationInfo(user.name(), getName(), result);\n+  }\n \n-        clearCacheForUser( username );\n-    }\n+  @Override\n+  public AuthorizationInfo getAuthorizationInfoSnapshot(PrincipalCollection principalCollection)\n+  {\n+    return getAuthorizationInfo(principalCollection);\n+  }\n \n-    @Override\n-    public void suspendUser( String username ) throws IOException, InvalidArgumentsException\n-    {\n-        User user = getUser( username );\n-        if ( !user.hasFlag( IS_SUSPENDED ) )\n-        {\n-            User suspendedUser = user.augment().withFlag( IS_SUSPENDED ).build();\n-            try\n-            {\n-                synchronized ( this )\n-                {\n-                    userRepository.update( user, suspendedUser );\n-                }\n-            }\n-            catch ( ConcurrentModificationException e )\n-            {\n-                // Try again\n-                suspendUser( username );\n-            }\n-        }\n-        clearCacheForUser( username );\n-    }\n+  private int numberOfUsers()\n+  {\n+    return userRepository.numberOfUsers();\n+  }\n \n-    @Override\n-    public void activateUser( String username, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n-    {\n-        User user = getUser( username );\n-        if ( user.hasFlag( IS_SUSPENDED ) )\n-        {\n-            User activatedUser = user.augment()\n-                    .withoutFlag( IS_SUSPENDED )\n-                    .withRequiredPasswordChange( requirePasswordChange )\n-                    .build();\n-            try\n-            {\n-                synchronized ( this )\n-                {\n-                    userRepository.update( user, activatedUser );\n-                }\n-            }\n-            catch ( ConcurrentModificationException e )\n-            {\n-                // Try again\n-                activateUser( username, requirePasswordChange );\n-            }\n-        }\n-        clearCacheForUser( username );\n-    }\n+  private int numberOfRoles()\n+  {\n+    return roleRepository.numberOfRoles();\n+  }\n \n-    @Override\n-    public Set<String> getAllRoleNames()\n-    {\n-        return roleRepository.getAllRoleNames();\n-    }\n+  @Override\n+  public User newUser(String username, String initialPassword, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException\n+  {\n+    userRepository.assertValidUsername(username);\n+    passwordPolicy.validatePassword(initialPassword);\n \n-    @Override\n-    public Set<String> getRoleNamesForUser( String username ) throws InvalidArgumentsException\n+    User user = new User.Builder()\n+        .withName(username)\n+        .withCredentials(Credential.forPassword(initialPassword))\n+        .withRequiredPasswordChange(requirePasswordChange)\n+        .build();\n+    synchronized (this)\n     {\n-        getUser( username );\n-        return roleRepository.getRoleNamesByUsername( username );\n+      userRepository.create(user);\n     }\n \n-    @Override\n-    public Set<String> silentlyGetRoleNamesForUser( String username )\n-    {\n-        return roleRepository.getRoleNamesByUsername( username );\n-    }\n+    return user;\n+  }\n \n-    @Override\n-    public Set<String> getUsernamesForRole( String roleName ) throws InvalidArgumentsException\n+  @Override\n+  public RoleRecord newRole(String roleName, String... usernames) throws IOException, InvalidArgumentsException\n+  {\n+    roleRepository.assertValidRoleName(roleName);\n+    for (String username : usernames)\n     {\n-        RoleRecord role = getRole( roleName );\n-        return role.users();\n+      userRepository.assertValidUsername(username);\n     }\n \n-    @Override\n-    public Set<String> silentlyGetUsernamesForRole( String roleName )\n-    {\n-        RoleRecord role = silentlyGetRole( roleName );\n-        return role == null ? emptySet() : role.users();\n-    }\n+    SortedSet<String> userSet = new TreeSet<>(Arrays.asList(usernames));\n+    RoleRecord role = new RoleRecord.Builder().withName(roleName).withUsers(userSet).build();\n \n-    @Override\n-    public Set<String> getAllUsernames()\n+    synchronized (this)\n     {\n-        return userRepository.getAllUsernames();\n+      for (String username : usernames)\n+      {\n+        getUser(username); // assert that user exists\n+      }\n+      roleRepository.create(role);\n     }\n \n-    // this is only used from already synchronized code blocks\n-    private void removeUserFromAllRoles( String username ) throws IOException\n-    {\n-        try\n-        {\n-            roleRepository.removeUserFromAllRoles( username );\n-        }\n-        catch ( ConcurrentModificationException e )\n-        {\n-            // Try again\n-            removeUserFromAllRoles( username );\n-        }\n-    }\n+    return role;\n+  }\n \n-    private void assertNotPredefinedRoleName( String roleName ) throws InvalidArgumentsException\n-    {\n-        if ( roleName != null && PredefinedRolesBuilder.roles.keySet().contains( roleName ) )\n-        {\n-            throw new InvalidArgumentsException(\n-                    format( \"'%s' is a predefined role and can not be deleted.\", roleName ) );\n-        }\n-    }\n+  @Override\n+  public boolean deleteRole(String roleName) throws IOException, InvalidArgumentsException\n+  {\n+    assertNotPredefinedRoleName(roleName);\n \n-    private void clearCachedAuthorizationInfoForUser( String username )\n+    boolean result = false;\n+    synchronized (this)\n     {\n-        clearCachedAuthorizationInfo( new SimplePrincipalCollection( username, this.getName() ) );\n+      RoleRecord role = getRole(roleName);  // asserts role name exists\n+      if (roleRepository.delete(role))\n+      {\n+        result = true;\n+      } else\n+      {\n+        // We should not get here, but if we do the assert will fail and give a nice error msg\n+        getRole(roleName);\n+      }\n     }\n+    return result;\n+  }\n \n-    private void clearCacheForUser( String username )\n-    {\n-        clearCache( new SimplePrincipalCollection( username, this.getName() ) );\n-    }\n+  @Override\n+  public RoleRecord getRole(String roleName) throws InvalidArgumentsException\n+  {\n+    RoleRecord role = roleRepository.getRoleByName(roleName);\n+    if (role == null)\n+    {\n+      throw new InvalidArgumentsException(\"Role '\" + roleName + \"' does not exist.\");\n+    }\n+    return role;\n+  }\n+\n+  @Override\n+  public RoleRecord silentlyGetRole(String roleName)\n+  {\n+    return roleRepository.getRoleByName(roleName);\n+  }\n+\n+  @Override\n+  public void addRoleToUser(String roleName, String username) throws IOException, InvalidArgumentsException\n+  {\n+    roleRepository.assertValidRoleName(roleName);\n+    userRepository.assertValidUsername(username);\n+\n+    synchronized (this)\n+    {\n+      getUser(username);\n+      RoleRecord role = getRole(roleName);\n+      RoleRecord newRole = role.augment().withUser(username).build();\n+      try\n+      {\n+        roleRepository.update(role, newRole);\n+      } catch (ConcurrentModificationException e)\n+      {\n+        // Try again\n+        addRoleToUser(roleName, username);\n+      }\n+    }\n+    clearCachedAuthorizationInfoForUser(username);\n+  }\n+\n+  @Override\n+  public void removeRoleFromUser(String roleName, String username) throws IOException, InvalidArgumentsException\n+  {\n+    roleRepository.assertValidRoleName(roleName);\n+    userRepository.assertValidUsername(username);\n+\n+    synchronized (this)\n+    {\n+      getUser(username);\n+      RoleRecord role = getRole(roleName);\n+\n+      RoleRecord newRole = role.augment().withoutUser(username).build();\n+      try\n+      {\n+        roleRepository.update(role, newRole);\n+      } catch (ConcurrentModificationException e)\n+      {\n+        // Try again\n+        removeRoleFromUser(roleName, username);\n+      }\n+    }\n+\n+    clearCachedAuthorizationInfoForUser(username);\n+  }\n+\n+  @Override\n+  public boolean deleteUser(String username) throws IOException, InvalidArgumentsException\n+  {\n+    synchronized (this)\n+    {\n+      User user = getUser(username);    // throws if user does not exists\n+      removeUserFromAllRoles(username); // performed first to always maintain auth-roles repo consistency\n+      userRepository.delete(user);      // this will not fail as we know the user exists in this lock\n+      // assuming no one messes with the user and role repositories\n+      // outside this instance\n+    }\n+    clearCacheForUser(username);\n+    return true;\n+  }\n+\n+  @Override\n+  public User getUser(String username) throws InvalidArgumentsException\n+  {\n+    User u = userRepository.getUserByName(username);\n+    if (u == null)\n+    {\n+      throw new InvalidArgumentsException(\"User '\" + username + \"' does not exist.\");\n+    }\n+    return u;\n+  }\n+\n+  @Override\n+  public User silentlyGetUser(String username)\n+  {\n+    return userRepository.getUserByName(username);\n+  }\n+\n+  @Override\n+  public void setUserPassword(String username, String password, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException\n+  {\n+    User existingUser = getUser(username);\n+    passwordPolicy.validatePassword(password);\n+    if (existingUser.credentials().matchesPassword(password))\n+    {\n+      throw new InvalidArgumentsException(\"Old password and new password cannot be the same.\");\n+    }\n+\n+    try\n+    {\n+      User updatedUser = existingUser.augment()\n+          .withCredentials(Credential.forPassword(password))\n+          .withRequiredPasswordChange(requirePasswordChange)\n+          .build();\n+      synchronized (this)\n+      {\n+        userRepository.update(existingUser, updatedUser);\n+      }\n+    } catch (ConcurrentModificationException e)\n+    {\n+      // try again\n+      setUserPassword(username, password, requirePasswordChange);\n+    }\n+\n+    clearCacheForUser(username);\n+  }\n+\n+  @Override\n+  public void suspendUser(String username) throws IOException, InvalidArgumentsException\n+  {\n+    User user = getUser(username);\n+    if (!user.hasFlag(IS_SUSPENDED))\n+    {\n+      User suspendedUser = user.augment().withFlag(IS_SUSPENDED).build();\n+      try\n+      {\n+        synchronized (this)\n+        {\n+          userRepository.update(user, suspendedUser);\n+        }\n+      } catch (ConcurrentModificationException e)\n+      {\n+        // Try again\n+        suspendUser(username);\n+      }\n+    }\n+    clearCacheForUser(username);\n+  }\n+\n+  @Override\n+  public void activateUser(String username, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException\n+  {\n+    User user = getUser(username);\n+    if (user.hasFlag(IS_SUSPENDED))\n+    {\n+      User activatedUser = user.augment()\n+          .withoutFlag(IS_SUSPENDED)\n+          .withRequiredPasswordChange(requirePasswordChange)\n+          .build();\n+      try\n+      {\n+        synchronized (this)\n+        {\n+          userRepository.update(user, activatedUser);\n+        }\n+      } catch (ConcurrentModificationException e)\n+      {\n+        // Try again\n+        activateUser(username, requirePasswordChange);\n+      }\n+    }\n+    clearCacheForUser(username);\n+  }\n+\n+  @Override\n+  public Set<String> getAllRoleNames()\n+  {\n+    return roleRepository.getAllRoleNames();\n+  }\n+\n+  @Override\n+  public Set<String> getRoleNamesForUser(String username) throws InvalidArgumentsException\n+  {\n+    getUser(username);\n+    return roleRepository.getRoleNamesByUsername(username);\n+  }\n+\n+  @Override\n+  public Set<String> silentlyGetRoleNamesForUser(String username)\n+  {\n+    return roleRepository.getRoleNamesByUsername(username);\n+  }\n+\n+  @Override\n+  public Set<String> getUsernamesForRole(String roleName) throws InvalidArgumentsException\n+  {\n+    RoleRecord role = getRole(roleName);\n+    return role.users();\n+  }\n+\n+  @Override\n+  public Set<String> silentlyGetUsernamesForRole(String roleName)\n+  {\n+    RoleRecord role = silentlyGetRole(roleName);\n+    return role == null ? emptySet() : role.users();\n+  }\n+\n+  @Override\n+  public Set<String> getAllUsernames()\n+  {\n+    return userRepository.getAllUsernames();\n+  }\n+\n+  // this is only used from already synchronized code blocks\n+  private void removeUserFromAllRoles(String username) throws IOException\n+  {\n+    try\n+    {\n+      roleRepository.removeUserFromAllRoles(username);\n+    } catch (ConcurrentModificationException e)\n+    {\n+      // Try again\n+      removeUserFromAllRoles(username);\n+    }\n+  }\n+\n+  private void assertNotPredefinedRoleName(String roleName) throws InvalidArgumentsException\n+  {\n+    if (roleName != null && PredefinedRolesBuilder.roles.keySet().contains(roleName))\n+    {\n+      throw new InvalidArgumentsException(\n+          format(\"'%s' is a predefined role and can not be deleted.\", roleName));\n+    }\n+  }\n+\n+  private void clearCachedAuthorizationInfoForUser(String username)\n+  {\n+    clearCachedAuthorizationInfo(new SimplePrincipalCollection(username, this.getName()));\n+  }\n+\n+  private void clearCacheForUser(String username)\n+  {\n+    clearCache(new SimplePrincipalCollection(username, this.getName()));\n+  }\n }\n",
            "diff_size": 984
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
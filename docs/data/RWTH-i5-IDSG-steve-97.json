{
    "project_name": "RWTH-i5-IDSG-steve",
    "error_id": "97",
    "information": {
        "errors": [
            {
                "line": "105",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 133).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma separated list\", R, newHashSet(V_16)),\n     ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n     ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n     MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/97/ConfigurationKeyEnum.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/97/ConfigurationKeyEnum.java\nindex ae0fecafd84..4a23cf038d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/97/ConfigurationKeyEnum.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/97/ConfigurationKeyEnum.java\n@@ -16,6 +16,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  */\n+\n package de.rwth.idsg.steve.web.dto.ocpp;\n \n import de.rwth.idsg.steve.ocpp.OcppVersion;\n@@ -38,116 +39,117 @@ import static de.rwth.idsg.steve.web.dto.ocpp.ConfigurationKeyReadWriteEnum.RW;\n  */\n public enum ConfigurationKeyEnum {\n \n-    // -------------------------------------------------------------------------\n-    // From OCPP 1.2\n-    // -------------------------------------------------------------------------\n-\n-    HeartBeatInterval(\"HeartBeatInterval\", \"in seconds\", RW, newHashSet(V_12, V_15)),\n-    ConnectionTimeOut(\"ConnectionTimeOut\", \"in seconds\", RW, newHashSet(V_12, V_15, V_16)),\n-    ProximityContactRetries(\"ProximityContactRetries\", \"in times\", RW, newHashSet(V_12, V_15)),\n-    ProximityLockRetries(\"ProximityLockRetries\", \"in times\", RW, newHashSet(V_12, V_15)),\n-    ResetRetries(\"ResetRetries\", \"in times\", RW, newHashSet(V_12, V_15, V_16)),\n-    BlinkRepeat(\"BlinkRepeat\", \"in times\", RW, newHashSet(V_12, V_15, V_16)),\n-    LightIntensity(\"LightIntensity\", \"in %\", RW, newHashSet(V_12, V_15, V_16)),\n-    ChargePointId(\"ChargePointId\", \"string\", RW, newHashSet(V_12, V_15)),\n-    MeterValueSampleInterval(\"MeterValueSampleInterval\", \"in seconds\", RW, newHashSet(V_12, V_15, V_16)),\n-\n-    // -------------------------------------------------------------------------\n-    // New in OCPP 1.5\n-    // -------------------------------------------------------------------------\n-\n-    ClockAlignedDataInterval(\"ClockAlignedDataInterval\", \"in seconds\", RW, newHashSet(V_15, V_16)),\n-    MeterValuesSampledData(\"MeterValuesSampledData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n-    MeterValuesAlignedData(\"MeterValuesAlignedData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n-    StopTxnSampledData(\"StopTxnSampledData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n-    StopTxnAlignedData(\"StopTxnAlignedData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n-\n-    // -------------------------------------------------------------------------\n-    // New in OCPP 1.6\n-    // -------------------------------------------------------------------------\n-\n-    HeartbeatInterval(\"HeartbeatInterval\", \"in seconds\", RW, newHashSet(V_16)),\n-    AllowOfflineTxForUnknownId(\"AllowOfflineTxForUnknownId\", \"boolean\", RW, newHashSet(V_16)),\n-    AuthorizationCacheEnabled(\"AuthorizationCacheEnabled\", \"boolean\", RW, newHashSet(V_16)),\n-    // AuthorizeRemoteTxRequests Read or Read-Write is up to Charge Point implementation so set to RW for now\n-    AuthorizeRemoteTxRequests(\"AuthorizeRemoteTxRequests\", \"boolean\", RW, newHashSet(V_16)),\n-    ConnectorPhaseRotation(\"ConnectorPhaseRotation\", \"comma separated list\", RW, newHashSet(V_16)),\n-    ConnectorPhaseRotationMaxLength(\"ConnectorPhaseRotationMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    GetConfigurationMaxKeys(\"GetConfigurationMaxKeys\", \"integer\", R, newHashSet(V_16)),\n-    LocalAuthorizeOffline(\"LocalAuthorizeOffline\", \"boolean\", RW, newHashSet(V_16)),\n-    LocalPreAuthorize(\"LocalPreAuthorize\", \"boolean\", RW, newHashSet(V_16)),\n-    MaxEnergyOnInvalidId(\"MaxEnergyOnInvalidId\", \"in Wh\", RW, newHashSet(V_16)),\n-    MeterValuesAlignedDataMaxLength(\"MeterValuesAlignedDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    MeterValuesSampledDataMaxLength(\"MeterValuesSampledDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    MinimumStatusDuration(\"MinimumStatusDuration\", \"in seconds\", RW, newHashSet(V_16)),\n-    NumberOfConnectors(\"NumberOfConnectors\", \"integer\", R, newHashSet(V_16)),\n-    StopTransactionOnEVSideDisconnect(\"StopTransactionOnEVSideDisconnect\", \"boolean\", RW, newHashSet(V_16)),\n-    StopTransactionOnInvalidId(\"StopTransactionOnInvalidId\", \"boolean\", RW, newHashSet(V_16)),\n-    StopTxnAlignedDataMaxLength(\"StopTxnAlignedDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    StopTxnSampledDataMaxLength(\"StopTxnSampledDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    SupportedFeatureProfiles(\"SupportedFeatureProfiles\", \"comma separated list\", R, newHashSet(V_16)),\n-    SupportedFeatureProfilesMaxLength(\"SupportedFeatureProfilesMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    TransactionMessageAttempts(\"TransactionMessageAttempts\", \"in times\", RW, newHashSet(V_16)),\n-    TransactionMessageRetryInterval(\"TransactionMessageRetryInterval\", \"in seconds\", RW, newHashSet(V_16)),\n-    UnlockConnectorOnEVSideDisconnect(\"UnlockConnectorOnEVSideDisconnect\", \"boolean\", RW, newHashSet(V_16)),\n-    WebSocketPingInterval(\"WebSocketPingInterval\", \"in seconds\", RW, newHashSet(V_16)),\n-    LocalAuthListEnabled(\"LocalAuthListEnabled\", \"boolean\", RW, newHashSet(V_16)),\n-    LocalAuthListMaxLength(\"LocalAuthListMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    SendLocalListMaxLength(\"SendLocalListMaxLength\", \"integer\", R, newHashSet(V_16)),\n-    ReserveConnectorZeroSupported(\"ReserveConnectorZeroSupported\", \"boolean\", R, newHashSet(V_16)),\n-    SupportedFileTransferProtocols(\"SupportedFileTransferProtocols\", \"comma separated list\", R, newHashSet(V_16)),\n-\n-    // -------------------------------------------------------------------------\n-    // New in OCPP 1.6 for Smart Charging profile\n-    // -------------------------------------------------------------------------\n-\n-     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma separated list\", R, newHashSet(V_16)),\n-     ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n-     ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n-     MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n-\n-    private final String value;\n-    private final String text;\n-    private final ConfigurationKeyReadWriteEnum rw;\n-    private final Set<OcppVersion> versions;\n-\n-    public static final Map<String, String> OCPP_12_MAP = asMap(OcppVersion.V_12, RW);\n-    public static final Map<String, String> OCPP_15_MAP = asMap(OcppVersion.V_15, RW);\n-\n-    // In OCPP 1.6 some Configuration Keys are Read-Only\n-    public static final Map<String, String> OCPP_16_MAP_R = asMap(OcppVersion.V_16, R);\n-    public static final Map<String, String> OCPP_16_MAP_RW = asMap(OcppVersion.V_16, RW);\n-\n-    ConfigurationKeyEnum(String value, String comment, ConfigurationKeyReadWriteEnum rw, Set<OcppVersion> versions) {\n-        this.value = value;\n-        this.text = String.format(\"%s (%s)\", value, comment);\n-        this.rw = rw;\n-        this.versions = versions;\n-    }\n-\n-    public String value() {\n-        return value;\n+  // -------------------------------------------------------------------------\n+  // From OCPP 1.2\n+  // -------------------------------------------------------------------------\n+\n+  HeartBeatInterval(\"HeartBeatInterval\", \"in seconds\", RW, newHashSet(V_12, V_15)),\n+  ConnectionTimeOut(\"ConnectionTimeOut\", \"in seconds\", RW, newHashSet(V_12, V_15, V_16)),\n+  ProximityContactRetries(\"ProximityContactRetries\", \"in times\", RW, newHashSet(V_12, V_15)),\n+  ProximityLockRetries(\"ProximityLockRetries\", \"in times\", RW, newHashSet(V_12, V_15)),\n+  ResetRetries(\"ResetRetries\", \"in times\", RW, newHashSet(V_12, V_15, V_16)),\n+  BlinkRepeat(\"BlinkRepeat\", \"in times\", RW, newHashSet(V_12, V_15, V_16)),\n+  LightIntensity(\"LightIntensity\", \"in %\", RW, newHashSet(V_12, V_15, V_16)),\n+  ChargePointId(\"ChargePointId\", \"string\", RW, newHashSet(V_12, V_15)),\n+  MeterValueSampleInterval(\"MeterValueSampleInterval\", \"in seconds\", RW, newHashSet(V_12, V_15, V_16)),\n+\n+  // -------------------------------------------------------------------------\n+  // New in OCPP 1.5\n+  // -------------------------------------------------------------------------\n+\n+  ClockAlignedDataInterval(\"ClockAlignedDataInterval\", \"in seconds\", RW, newHashSet(V_15, V_16)),\n+  MeterValuesSampledData(\"MeterValuesSampledData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n+  MeterValuesAlignedData(\"MeterValuesAlignedData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n+  StopTxnSampledData(\"StopTxnSampledData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n+  StopTxnAlignedData(\"StopTxnAlignedData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n+\n+  // -------------------------------------------------------------------------\n+  // New in OCPP 1.6\n+  // -------------------------------------------------------------------------\n+\n+  HeartbeatInterval(\"HeartbeatInterval\", \"in seconds\", RW, newHashSet(V_16)),\n+  AllowOfflineTxForUnknownId(\"AllowOfflineTxForUnknownId\", \"boolean\", RW, newHashSet(V_16)),\n+  AuthorizationCacheEnabled(\"AuthorizationCacheEnabled\", \"boolean\", RW, newHashSet(V_16)),\n+  // AuthorizeRemoteTxRequests Read or Read-Write is up to Charge Point implementation so set to RW for now\n+  AuthorizeRemoteTxRequests(\"AuthorizeRemoteTxRequests\", \"boolean\", RW, newHashSet(V_16)),\n+  ConnectorPhaseRotation(\"ConnectorPhaseRotation\", \"comma separated list\", RW, newHashSet(V_16)),\n+  ConnectorPhaseRotationMaxLength(\"ConnectorPhaseRotationMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  GetConfigurationMaxKeys(\"GetConfigurationMaxKeys\", \"integer\", R, newHashSet(V_16)),\n+  LocalAuthorizeOffline(\"LocalAuthorizeOffline\", \"boolean\", RW, newHashSet(V_16)),\n+  LocalPreAuthorize(\"LocalPreAuthorize\", \"boolean\", RW, newHashSet(V_16)),\n+  MaxEnergyOnInvalidId(\"MaxEnergyOnInvalidId\", \"in Wh\", RW, newHashSet(V_16)),\n+  MeterValuesAlignedDataMaxLength(\"MeterValuesAlignedDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  MeterValuesSampledDataMaxLength(\"MeterValuesSampledDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  MinimumStatusDuration(\"MinimumStatusDuration\", \"in seconds\", RW, newHashSet(V_16)),\n+  NumberOfConnectors(\"NumberOfConnectors\", \"integer\", R, newHashSet(V_16)),\n+  StopTransactionOnEVSideDisconnect(\"StopTransactionOnEVSideDisconnect\", \"boolean\", RW, newHashSet(V_16)),\n+  StopTransactionOnInvalidId(\"StopTransactionOnInvalidId\", \"boolean\", RW, newHashSet(V_16)),\n+  StopTxnAlignedDataMaxLength(\"StopTxnAlignedDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  StopTxnSampledDataMaxLength(\"StopTxnSampledDataMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  SupportedFeatureProfiles(\"SupportedFeatureProfiles\", \"comma separated list\", R, newHashSet(V_16)),\n+  SupportedFeatureProfilesMaxLength(\"SupportedFeatureProfilesMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  TransactionMessageAttempts(\"TransactionMessageAttempts\", \"in times\", RW, newHashSet(V_16)),\n+  TransactionMessageRetryInterval(\"TransactionMessageRetryInterval\", \"in seconds\", RW, newHashSet(V_16)),\n+  UnlockConnectorOnEVSideDisconnect(\"UnlockConnectorOnEVSideDisconnect\", \"boolean\", RW, newHashSet(V_16)),\n+  WebSocketPingInterval(\"WebSocketPingInterval\", \"in seconds\", RW, newHashSet(V_16)),\n+  LocalAuthListEnabled(\"LocalAuthListEnabled\", \"boolean\", RW, newHashSet(V_16)),\n+  LocalAuthListMaxLength(\"LocalAuthListMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  SendLocalListMaxLength(\"SendLocalListMaxLength\", \"integer\", R, newHashSet(V_16)),\n+  ReserveConnectorZeroSupported(\"ReserveConnectorZeroSupported\", \"boolean\", R, newHashSet(V_16)),\n+  SupportedFileTransferProtocols(\"SupportedFileTransferProtocols\", \"comma separated list\", R, newHashSet(V_16)),\n+\n+  // -------------------------------------------------------------------------\n+  // New in OCPP 1.6 for Smart Charging profile\n+  // -------------------------------------------------------------------------\n+\n+  ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n+  ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma separated list\", R,\n+    newHashSet(V_16)),\n+  ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n+  ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n+  MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n+\n+  private final String value;\n+  private final String text;\n+  private final ConfigurationKeyReadWriteEnum rw;\n+  private final Set<OcppVersion> versions;\n+\n+  public static final Map<String, String> OCPP_12_MAP = asMap(OcppVersion.V_12, RW);\n+  public static final Map<String, String> OCPP_15_MAP = asMap(OcppVersion.V_15, RW);\n+\n+  // In OCPP 1.6 some Configuration Keys are Read-Only\n+  public static final Map<String, String> OCPP_16_MAP_R = asMap(OcppVersion.V_16, R);\n+  public static final Map<String, String> OCPP_16_MAP_RW = asMap(OcppVersion.V_16, RW);\n+\n+  ConfigurationKeyEnum(String value, String comment, ConfigurationKeyReadWriteEnum rw, Set<OcppVersion> versions) {\n+    this.value = value;\n+    this.text = String.format(\"%s (%s)\", value, comment);\n+    this.rw = rw;\n+    this.versions = versions;\n+  }\n+\n+  public String value() {\n+    return value;\n+  }\n+\n+  public static ConfigurationKeyEnum fromValue(String v) {\n+    for (ConfigurationKeyEnum c : ConfigurationKeyEnum.values()) {\n+      if (c.value.equals(v)) {\n+        return c;\n+      }\n     }\n-\n-    public static ConfigurationKeyEnum fromValue(String v) {\n-        for (ConfigurationKeyEnum c : ConfigurationKeyEnum.values()) {\n-            if (c.value.equals(v)) {\n-                return c;\n-            }\n-        }\n-        throw new IllegalArgumentException(v);\n-    }\n-\n-    private static Map<String, String> asMap(OcppVersion version, ConfigurationKeyReadWriteEnum rw) {\n-        Map<String, String> map = new LinkedHashMap<>();\n-        for (ConfigurationKeyEnum c : ConfigurationKeyEnum.values()) {\n-            if (c.versions.contains(version) && c.rw == rw) {\n-                map.put(c.value, c.text);\n-            } else if (c.versions.contains(version) && rw == ConfigurationKeyReadWriteEnum.R) {\n-                map.put(c.value, c.text);\n-            }\n-        }\n-        return map;\n+    throw new IllegalArgumentException(v);\n+  }\n+\n+  private static Map<String, String> asMap(OcppVersion version, ConfigurationKeyReadWriteEnum rw) {\n+    Map<String, String> map = new LinkedHashMap<>();\n+    for (ConfigurationKeyEnum c : ConfigurationKeyEnum.values()) {\n+      if (c.versions.contains(version) && c.rw == rw) {\n+        map.put(c.value, c.text);\n+      } else if (c.versions.contains(version) && rw == ConfigurationKeyReadWriteEnum.R) {\n+        map.put(c.value, c.text);\n+      }\n     }\n+    return map;\n+  }\n }\n",
            "diff_size": 121
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/97/ConfigurationKeyEnum.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/97/ConfigurationKeyEnum.java\nindex ae0fecafd84..22eb6ebbe29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/97/ConfigurationKeyEnum.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/97/ConfigurationKeyEnum.java\n@@ -19,7 +19,6 @@\n package de.rwth.idsg.steve.web.dto.ocpp;\n \n import de.rwth.idsg.steve.ocpp.OcppVersion;\n-\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Set;\n@@ -36,12 +35,13 @@ import static de.rwth.idsg.steve.web.dto.ocpp.ConfigurationKeyReadWriteEnum.RW;\n  * @author David Rerimassie <david@rerimassie.nl>\n  * @since 02.01.2015\n  */\n+\n+\n public enum ConfigurationKeyEnum {\n \n     // -------------------------------------------------------------------------\n     // From OCPP 1.2\n     // -------------------------------------------------------------------------\n-\n     HeartBeatInterval(\"HeartBeatInterval\", \"in seconds\", RW, newHashSet(V_12, V_15)),\n     ConnectionTimeOut(\"ConnectionTimeOut\", \"in seconds\", RW, newHashSet(V_12, V_15, V_16)),\n     ProximityContactRetries(\"ProximityContactRetries\", \"in times\", RW, newHashSet(V_12, V_15)),\n@@ -55,7 +55,6 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n     // New in OCPP 1.5\n     // -------------------------------------------------------------------------\n-\n     ClockAlignedDataInterval(\"ClockAlignedDataInterval\", \"in seconds\", RW, newHashSet(V_15, V_16)),\n     MeterValuesSampledData(\"MeterValuesSampledData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n     MeterValuesAlignedData(\"MeterValuesAlignedData\", \"comma separated list\", RW, newHashSet(V_15, V_16)),\n@@ -65,7 +64,6 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n     // New in OCPP 1.6\n     // -------------------------------------------------------------------------\n-\n     HeartbeatInterval(\"HeartbeatInterval\", \"in seconds\", RW, newHashSet(V_16)),\n     AllowOfflineTxForUnknownId(\"AllowOfflineTxForUnknownId\", \"boolean\", RW, newHashSet(V_16)),\n     AuthorizationCacheEnabled(\"AuthorizationCacheEnabled\", \"boolean\", RW, newHashSet(V_16)),\n@@ -100,12 +98,11 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n     // New in OCPP 1.6 for Smart Charging profile\n     // -------------------------------------------------------------------------\n-\n-     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma separated list\", R, newHashSet(V_16)),\n-     ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n-     ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n-     MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n+    ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n+    ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma separated list\", R, newHashSet(V_16)),\n+    ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n+    ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n+    MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n \n     private final String value;\n     private final String text;\n@@ -113,10 +110,13 @@ public enum ConfigurationKeyEnum {\n     private final Set<OcppVersion> versions;\n \n     public static final Map<String, String> OCPP_12_MAP = asMap(OcppVersion.V_12, RW);\n+\n     public static final Map<String, String> OCPP_15_MAP = asMap(OcppVersion.V_15, RW);\n \n     // In OCPP 1.6 some Configuration Keys are Read-Only\n+\n     public static final Map<String, String> OCPP_16_MAP_R = asMap(OcppVersion.V_16, R);\n+\n     public static final Map<String, String> OCPP_16_MAP_RW = asMap(OcppVersion.V_16, RW);\n \n     ConfigurationKeyEnum(String value, String comment, ConfigurationKeyReadWriteEnum rw, Set<OcppVersion> versions) {\n@@ -141,13 +141,14 @@ public enum ConfigurationKeyEnum {\n \n     private static Map<String, String> asMap(OcppVersion version, ConfigurationKeyReadWriteEnum rw) {\n         Map<String, String> map = new LinkedHashMap<>();\n+\n         for (ConfigurationKeyEnum c : ConfigurationKeyEnum.values()) {\n             if (c.versions.contains(version) && c.rw == rw) {\n                 map.put(c.value, c.text);\n             } else if (c.versions.contains(version) && rw == ConfigurationKeyReadWriteEnum.R) {\n-                map.put(c.value, c.text);\n-            }\n+                       map.put(c.value, c.text);\n+                   }\n         }\n         return map;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "105",
                    "column": "111",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "106",
                    "column": "6",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "106",
                    "column": "6",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "106",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/97/ConfigurationKeyEnum.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/97/ConfigurationKeyEnum.java\nindex ae0fecafd84..0ac32516418 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/97/ConfigurationKeyEnum.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/97/ConfigurationKeyEnum.java\n@@ -102,7 +102,8 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n \n      ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma separated list\", R, newHashSet(V_16)),\n+     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma separated list\",R\n+     ,newHashSet(V_16 )),\n      ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n      ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n      MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
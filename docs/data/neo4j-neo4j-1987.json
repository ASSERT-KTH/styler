{
    "project_name": "neo4j-neo4j",
    "error_id": "1987",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1987/DynamicRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1987/DynamicRecordFormat.java\nindex 297e90709c7..414d1e5b23a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1987/DynamicRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1987/DynamicRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.standard;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -35,23 +36,23 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n \n     public DynamicRecordFormat()\n     {\n-        this( false );\n+        this(false);\n     }\n \n-    public DynamicRecordFormat( boolean pageAligned )\n+    public DynamicRecordFormat(boolean pageAligned)\n     {\n-        super( INT_STORE_HEADER_READER, RECORD_HEADER_SIZE, 0x10/*the inUse bit is the lsb in the second nibble*/,\n-                StandardFormatSettings.DYNAMIC_MAXIMUM_ID_BITS, pageAligned );\n+        super(INT_STORE_HEADER_READER, RECORD_HEADER_SIZE, 0x10/*the inUse bit is the lsb in the second nibble*/,\n+          StandardFormatSettings.DYNAMIC_MAXIMUM_ID_BITS, pageAligned);\n     }\n \n     @Override\n     public DynamicRecord newRecord()\n     {\n-        return new DynamicRecord( -1 );\n+        return new DynamicRecord(-1);\n     }\n \n     @Override\n-    public void read( DynamicRecord record, PageCursor cursor, RecordLoad mode, int recordSize, int recordsPerPage )\n+    public void read(DynamicRecord record, PageCursor cursor, RecordLoad mode, int recordSize, int recordsPerPage)\n     {\n         /*\n          * First 4b\n@@ -64,15 +65,15 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n         long firstInteger = cursor.getInt() & 0xFFFFFFFFL;\n         boolean isStartRecord = (firstInteger & 0x80000000) == 0;\n         boolean inUse = (firstInteger & 0x10000000) != 0;\n-        if ( mode.shouldLoad( inUse ) )\n+        if (mode.shouldLoad(inUse))\n         {\n             int dataSize = recordSize - getRecordHeaderSize();\n             int nrOfBytes = (int) (firstInteger & 0xFFFFFF);\n-            if ( nrOfBytes > dataSize )\n+            if (nrOfBytes > dataSize)\n             {\n                 // We must have performed an inconsistent read,\n                 // because this many bytes cannot possibly fit in a record!\n-                cursor.setCursorException( payloadTooBigErrorMessage( record, recordSize, nrOfBytes ) );\n+                cursor.setCursorException(payloadTooBigErrorMessage(record, recordSize, nrOfBytes));\n                 return;\n             }\n \n@@ -82,53 +83,52 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n             long nextBlock = cursor.getInt() & 0xFFFFFFFFL;\n             long nextModifier = (firstInteger & 0xF000000L) << 8;\n \n-            long longNextBlock = BaseRecordFormat.longFromIntAndMod( nextBlock, nextModifier );\n-            record.initialize( inUse, isStartRecord, longNextBlock, -1 );\n-            readData( record, cursor, nrOfBytes );\n-            if ( longNextBlock != Record.NO_NEXT_BLOCK.intValue() && nrOfBytes != dataSize )\n+            long longNextBlock = BaseRecordFormat.longFromIntAndMod(nextBlock, nextModifier);\n+            record.initialize(inUse, isStartRecord, longNextBlock, -1);\n+            readData(record, cursor, nrOfBytes);\n+            if (longNextBlock != Record.NO_NEXT_BLOCK.intValue() && nrOfBytes != dataSize)\n             {\n                 // If we have a next block, but don't use the whole current block\n-                cursor.setCursorException( illegalBlockSizeMessage( record, dataSize ) );\n+                cursor.setCursorException(illegalBlockSizeMessage(record, dataSize));\n             }\n-        }\n-        else\n+        } else\n         {\n-            record.setInUse( inUse );\n+            record.setInUse(inUse);\n         }\n     }\n \n-    public static String payloadTooBigErrorMessage( DynamicRecord record, int recordSize, int nrOfBytes )\n+    public static String payloadTooBigErrorMessage(DynamicRecord record, int recordSize, int nrOfBytes)\n     {\n-        return format( \"DynamicRecord[%s] claims to have a payload of %s bytes, \" +\n-                       \"which is larger than the record size of %s bytes.\",\n-                record.getId(), nrOfBytes, recordSize );\n+        return format(\"DynamicRecord[%s] claims to have a payload of %s bytes, \" +\n+            \"which is larger than the record size of %s bytes.\",\n+          record.getId(), nrOfBytes, recordSize);\n     }\n \n-    private String illegalBlockSizeMessage( DynamicRecord record, int dataSize )\n+    private String illegalBlockSizeMessage(DynamicRecord record, int dataSize)\n     {\n-        return format( \"Next block set[%d] current block illegal size[%d/%d]\",\n-                record.getNextBlock(), record.getLength(), dataSize );\n+        return format(\"Next block set[%d] current block illegal size[%d/%d]\",\n+          record.getNextBlock(), record.getLength(), dataSize);\n     }\n \n-    public static void readData( DynamicRecord record, PageCursor cursor, int len )\n+    public static void readData(DynamicRecord record, PageCursor cursor, int len)\n     {\n         byte[] data = record.getData();\n-        if ( data == null || data.length != len )\n+        if (data == null || data.length != len)\n         {\n             data = new byte[len];\n         }\n-        cursor.getBytes( data );\n-        record.setData( data );\n+        cursor.getBytes(data);\n+        record.setData(data);\n     }\n \n     @Override\n-    public void write( DynamicRecord record, PageCursor cursor, int recordSize, int recordsPerPage )\n+    public void write(DynamicRecord record, PageCursor cursor, int recordSize, int recordsPerPage)\n     {\n-        if ( record.inUse() )\n+        if (record.inUse())\n         {\n             long nextBlock = record.getNextBlock();\n             int highByteInFirstInteger = nextBlock == Record.NO_NEXT_BLOCK.intValue() ? 0\n-                    : (int) ((nextBlock & 0xF00000000L) >> 8);\n+              : (int) ((nextBlock & 0xF00000000L) >> 8);\n             highByteInFirstInteger |= Record.IN_USE.byteValue() << 28;\n             highByteInFirstInteger |= (record.isStartRecord() ? 0 : 1) << 31;\n \n@@ -145,18 +145,17 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n \n             firstInteger |= highByteInFirstInteger;\n \n-            cursor.putInt( firstInteger );\n-            cursor.putInt( (int) nextBlock );\n-            cursor.putBytes( record.getData() );\n-        }\n-        else\n+            cursor.putInt(firstInteger);\n+            cursor.putInt((int) nextBlock);\n+            cursor.putBytes(record.getData());\n+        } else\n         {\n-            cursor.putByte( Record.NOT_IN_USE.byteValue() );\n+            cursor.putByte(Record.NOT_IN_USE.byteValue());\n         }\n     }\n \n     @Override\n-    public long getNextRecordReference( DynamicRecord record )\n+    public long getNextRecordReference(DynamicRecord record)\n     {\n         return record.getNextBlock();\n     }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1987/DynamicRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1987/DynamicRecordFormat.java\nindex 297e90709c7..61b225164c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1987/DynamicRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1987/DynamicRecordFormat.java\n@@ -160,4 +160,4 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n     {\n         return record.getNextBlock();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
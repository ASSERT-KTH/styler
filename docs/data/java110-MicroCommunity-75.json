{
    "project_name": "java110-MicroCommunity",
    "error_id": "75",
    "information": {
        "errors": [
            {
                "line": "91",
                "column": "84",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        businesses.add(feeBMOImpl.modifyTempCarInout(paramObj, dataFlowContext));\n\n        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS,Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n        ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n            dataFlowContext.setResponseEntity(responseEntity);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/75/PayFeePreTempCarInoutListener.java\nindex 4896590c586..47f832a3626 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/75/PayFeePreTempCarInoutListener.java\n@@ -88,7 +88,7 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n         businesses.add(feeBMOImpl.modifyTempFee(paramObj, dataFlowContext));\n         businesses.add(feeBMOImpl.modifyTempCarInout(paramObj, dataFlowContext));\n \n-        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS,Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n+        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS, Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n         ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             dataFlowContext.setResponseEntity(responseEntity);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/75/PayFeePreTempCarInoutListener.java\nindex 4896590c586..63a0169f6f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/75/PayFeePreTempCarInoutListener.java\n@@ -88,7 +88,7 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n         businesses.add(feeBMOImpl.modifyTempFee(paramObj, dataFlowContext));\n         businesses.add(feeBMOImpl.modifyTempCarInout(paramObj, dataFlowContext));\n \n-        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS,Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n+        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS, Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n         ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             dataFlowContext.setResponseEntity(responseEntity);\n@@ -103,7 +103,6 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n     }\n \n \n-\n     /**\n      * \u5237\u5165order\u4fe1\u606f\n      *\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/75/PayFeePreTempCarInoutListener.java\nindex 4896590c586..c11645742a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/75/PayFeePreTempCarInoutListener.java\n@@ -88,7 +88,7 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n         businesses.add(feeBMOImpl.modifyTempFee(paramObj, dataFlowContext));\n         businesses.add(feeBMOImpl.modifyTempCarInout(paramObj, dataFlowContext));\n \n-        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS,Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n+        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS, Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n         ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             dataFlowContext.setResponseEntity(responseEntity);\n@@ -103,8 +103,7 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n     }\n \n \n-\n-    /**\n+/**\n      * \u5237\u5165order\u4fe1\u606f\n      *\n      * @param orders  \u8ba2\u5355\u4fe1\u606f\n@@ -165,4 +164,4 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n     public void setRoomInnerServiceSMOImpl(IRoomInnerServiceSMO roomInnerServiceSMOImpl) {\n         this.roomInnerServiceSMOImpl = roomInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/75/PayFeePreTempCarInoutListener.java\nindex 4896590c586..5e2675bfc79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/75/PayFeePreTempCarInoutListener.java\n@@ -23,7 +23,6 @@ import org.springframework.http.HttpHeaders;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.Map;\n \n /**\n@@ -34,6 +33,8 @@ import java.util.Map;\n  * @Version 1.0\n  * add by wuxw 2019/6/3\n  **/\n+\n+\n @Java110Listener(\"payFeePreTempCarInoutListener\")\n public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowListener {\n \n@@ -54,7 +55,6 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n     @Autowired\n     private IFeeConfigInnerServiceSMO feeConfigInnerServiceSMOImpl;\n \n-\n     @Override\n     public String getServiceCode() {\n         return ServiceCodeConstant.SERVICE_CODE_PAY_FEE_PRE_TEMP_CAR_INOUT;\n@@ -67,18 +67,14 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n \n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n-\n         logger.debug(\"ServiceDataFlowEvent : {}\", event);\n-\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         AppService service = event.getAppService();\n-\n         String paramIn = dataFlowContext.getReqData();\n \n         //\u6821\u9a8c\u6570\u636e\n         validate(paramIn);\n         JSONObject paramObj = JSONObject.parseObject(paramIn);\n-\n         HttpHeaders header = new HttpHeaders();\n         dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.HTTP_ORDER_TYPE_CD, \"D\");\n         JSONArray businesses = new JSONArray();\n@@ -87,8 +83,7 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n         businesses.add(feeBMOImpl.addFeeTempDetail(paramObj, dataFlowContext));\n         businesses.add(feeBMOImpl.modifyTempFee(paramObj, dataFlowContext));\n         businesses.add(feeBMOImpl.modifyTempCarInout(paramObj, dataFlowContext));\n-\n-        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS,Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n+        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS, Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n         ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             dataFlowContext.setResponseEntity(responseEntity);\n@@ -97,7 +92,6 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n \n         JSONObject paramOut = JSONObject.parseObject(responseEntity.getBody());\n         paramOut.put(\"receivableAmount\", paramObj.getString(\"receivableAmount\"));\n-\n         responseEntity = new ResponseEntity<>(paramOut.toJSONString(), HttpStatus.OK);\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n@@ -110,10 +104,12 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n      * @param orders  \u8ba2\u5355\u4fe1\u606f\n      * @param headers \u5934\u90e8\u4fe1\u606f\n      */\n+\n+\n+\n     protected void freshOrderProtocol(JSONObject orders, Map<String, String> headers) {\n         feeBMOImpl.freshOrderProtocol(orders, headers);\n         orders.put(\"orderProcess\", Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n-\n     }\n \n \n@@ -124,16 +120,16 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n      *                \"memberId\": \"3456789\",\n      *                \"memberTypeCd\": \"390001200001\"\n      */\n+\n+\n     private void validate(String paramIn) {\n         Assert.jsonObjectHaveKey(paramIn, \"communityId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bcommunityId\u8282\u70b9\");\n         Assert.jsonObjectHaveKey(paramIn, \"receivedAmount\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542breceivedAmount\u8282\u70b9\");\n         Assert.jsonObjectHaveKey(paramIn, \"feeId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bfeeId\u8282\u70b9\");\n-\n         JSONObject paramInObj = JSONObject.parseObject(paramIn);\n         Assert.hasLength(paramInObj.getString(\"communityId\"), \"\u5c0f\u533aID\u4e0d\u80fd\u4e3a\u7a7a\");\n         Assert.hasLength(paramInObj.getString(\"receivedAmount\"), \"\u5b9e\u6536\u91d1\u989d\u4e0d\u80fd\u4e3a\u7a7a\");\n         Assert.hasLength(paramInObj.getString(\"feeId\"), \"\u8d39\u7528ID\u4e0d\u80fd\u4e3a\u7a7a\");\n-\n     }\n \n     @Override\n@@ -141,7 +137,6 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n         return DEFAULT_ORDER;\n     }\n \n-\n     public IFeeInnerServiceSMO getFeeInnerServiceSMOImpl() {\n         return feeInnerServiceSMOImpl;\n     }\n@@ -165,4 +160,4 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n     public void setRoomInnerServiceSMOImpl(IRoomInnerServiceSMO roomInnerServiceSMOImpl) {\n         this.roomInnerServiceSMOImpl = roomInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/75/PayFeePreTempCarInoutListener.java\nindex 4896590c586..47f832a3626 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/75/PayFeePreTempCarInoutListener.java\n@@ -88,7 +88,7 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n         businesses.add(feeBMOImpl.modifyTempFee(paramObj, dataFlowContext));\n         businesses.add(feeBMOImpl.modifyTempCarInout(paramObj, dataFlowContext));\n \n-        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS,Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n+        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS, Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n         ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             dataFlowContext.setResponseEntity(responseEntity);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/75/PayFeePreTempCarInoutListener.java\nindex 4896590c586..47f832a3626 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/75/PayFeePreTempCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/75/PayFeePreTempCarInoutListener.java\n@@ -88,7 +88,7 @@ public class PayFeePreTempCarInoutListener extends AbstractServiceApiDataFlowLis\n         businesses.add(feeBMOImpl.modifyTempFee(paramObj, dataFlowContext));\n         businesses.add(feeBMOImpl.modifyTempCarInout(paramObj, dataFlowContext));\n \n-        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS,Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n+        dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS, Orders.ORDER_PROCESS_ORDER_PRE_SUBMIT);\n         ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             dataFlowContext.setResponseEntity(responseEntity);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
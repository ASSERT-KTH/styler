{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2023",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2023/WhiteListJavaWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2023/WhiteListJavaWrapper.java\nindex be1f66a11df..c455b2f5e3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2023/WhiteListJavaWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2023/WhiteListJavaWrapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.scripting.javascript;\n \n import org.mozilla.javascript.ClassShutter;\n@@ -31,130 +32,124 @@ import java.lang.reflect.Modifier;\n public class WhiteListJavaWrapper extends WrapFactory\n {\n \n-    private final ClassShutter classShutter;\n+  private final ClassShutter classShutter;\n \n-    public WhiteListJavaWrapper( ClassShutter classShutter )\n-    {\n-        this.classShutter = classShutter;\n-    }\n+  public WhiteListJavaWrapper(ClassShutter classShutter)\n+  {\n+    this.classShutter = classShutter;\n+  }\n \n-    /*\n-     * Majority of code below from Rhino source, written by A. Sundararajan.\n-     */\n-    @Override\n-    public Scriptable wrapAsJavaObject( Context cx, Scriptable scope, Object javaObject, Class staticType )\n-    {\n+  /*\n+   * Majority of code below from Rhino source, written by A. Sundararajan.\n+   */\n+  @Override\n+  public Scriptable wrapAsJavaObject(Context cx, Scriptable scope, Object javaObject, Class staticType)\n+  {\n \n-        if ( javaObject instanceof ClassLoader )\n-        {\n+    if (javaObject instanceof ClassLoader)\n+    {\n \n-            throw new SecurityException( \"Class loaders cannot be accessed in this environment.\" );\n+      throw new SecurityException(\"Class loaders cannot be accessed in this environment.\");\n \n+    } else\n+    {\n+      String name = null;\n+      if (javaObject instanceof Class)\n+      {\n+        name = ((Class) javaObject).getName();\n+      } else if (javaObject instanceof Member)\n+      {\n+        Member member = (Member) javaObject;\n+        // Check member access. Don't allow reflective access to\n+        // non-public members. Note that we can't call checkMemberAccess\n+        // because that expects exact stack depth!\n+        if (!Modifier.isPublic(member.getModifiers()))\n+        {\n+          return null;\n         }\n-        else\n+        name = member.getDeclaringClass().getName();\n+      }\n+\n+      // Now, make sure that no ClassShutter prevented Class or Member\n+      // of it is accessed reflectively. Note that ClassShutter may\n+      // prevent access to a class, even though SecurityManager permit.\n+      if (name != null)\n+      {\n+        if (!classShutter.visibleToScripts(name))\n         {\n-            String name = null;\n-            if ( javaObject instanceof Class )\n-            {\n-                name = ((Class) javaObject).getName();\n-            }\n-            else if ( javaObject instanceof Member )\n-            {\n-                Member member = (Member) javaObject;\n-                // Check member access. Don't allow reflective access to\n-                // non-public members. Note that we can't call checkMemberAccess\n-                // because that expects exact stack depth!\n-                if ( !Modifier.isPublic( member.getModifiers() ) )\n-                {\n-                    return null;\n-                }\n-                name = member.getDeclaringClass().getName();\n-            }\n-\n-            // Now, make sure that no ClassShutter prevented Class or Member\n-            // of it is accessed reflectively. Note that ClassShutter may\n-            // prevent access to a class, even though SecurityManager permit.\n-            if ( name != null )\n-            {\n-                if ( !classShutter.visibleToScripts( name ) )\n-                {\n-                    throw new SecurityException( \"'\" + name + \"' cannot be accessed in this environment.\" );\n-                }\n-                else\n-                {\n-                    return new NativeJavaObject( scope, javaObject, staticType );\n-                }\n-            }\n+          throw new SecurityException(\"'\" + name + \"' cannot be accessed in this environment.\");\n+        } else\n+        {\n+          return new NativeJavaObject(scope, javaObject, staticType);\n         }\n+      }\n+    }\n \n-        // we have got some non-reflective object.\n-        Class dynamicType = javaObject.getClass();\n-        String name = dynamicType.getName();\n-        if ( !classShutter.visibleToScripts( name ) )\n+    // we have got some non-reflective object.\n+    Class dynamicType = javaObject.getClass();\n+    String name = dynamicType.getName();\n+    if (!classShutter.visibleToScripts(name))\n+    {\n+      // Object of some sensitive class (such as sun.net.www.*\n+      // objects returned from public method of java.net.URL class.\n+      // We expose this object as though it is an object of some\n+      // super class that is safe for access.\n+\n+      Class type = null;\n+\n+      // Whenever a Java Object is wrapped, we are passed with a\n+      // staticType which is the type found from environment. For\n+      // example, method return type known from signature. The dynamic\n+      // type would be the actual Class of the actual returned object.\n+      // If the staticType is an interface, we just use that type.\n+      if (staticType != null && staticType.isInterface())\n+      {\n+        type = staticType;\n+      } else\n+      {\n+        // dynamicType is always a class type and never an interface.\n+        // find an accessible super class of the dynamic type.\n+        while (true)\n         {\n-            // Object of some sensitive class (such as sun.net.www.*\n-            // objects returned from public method of java.net.URL class.\n-            // We expose this object as though it is an object of some\n-            // super class that is safe for access.\n-\n-            Class type = null;\n-\n-            // Whenever a Java Object is wrapped, we are passed with a\n-            // staticType which is the type found from environment. For\n-            // example, method return type known from signature. The dynamic\n-            // type would be the actual Class of the actual returned object.\n-            // If the staticType is an interface, we just use that type.\n-            if ( staticType != null && staticType.isInterface() )\n-            {\n-                type = staticType;\n-            }\n-            else\n+          dynamicType = dynamicType.getSuperclass();\n+\n+          if (dynamicType != null)\n+          {\n+            name = dynamicType.getName();\n+            if (classShutter.visibleToScripts(name))\n             {\n-                // dynamicType is always a class type and never an interface.\n-                // find an accessible super class of the dynamic type.\n-                while ( true )\n-                {\n-                    dynamicType = dynamicType.getSuperclass();\n-\n-                    if ( dynamicType != null )\n-                    {\n-                        name = dynamicType.getName();\n-                        if ( classShutter.visibleToScripts( name ) )\n-                        {\n-                            type = dynamicType;\n-                            break;\n-                        }\n-                    }\n-                    else\n-                    {\n-                        break;\n-                    }\n-                }\n-                // atleast java.lang.Object has to be accessible. So, when\n-                // we reach here, type variable should not be null.\n-                assert type != null : \"even java.lang.Object is not accessible?\";\n+              type = dynamicType;\n+              break;\n             }\n-            // create custom wrapper with the 'safe' type.\n-            return new JavascriptJavaObject( scope, javaObject, type );\n-        }\n-        else\n-        {\n-            return new NativeJavaObject( scope, javaObject, staticType );\n+          } else\n+          {\n+            break;\n+          }\n         }\n+        // atleast java.lang.Object has to be accessible. So, when\n+        // we reach here, type variable should not be null.\n+        assert type != null : \"even java.lang.Object is not accessible?\";\n+      }\n+      // create custom wrapper with the 'safe' type.\n+      return new JavascriptJavaObject(scope, javaObject, type);\n+    } else\n+    {\n+      return new NativeJavaObject(scope, javaObject, staticType);\n     }\n+  }\n \n-    public static class JavascriptJavaObject extends NativeJavaObject\n+  public static class JavascriptJavaObject extends NativeJavaObject\n+  {\n+    public JavascriptJavaObject(Scriptable scope, Object javaObject, Class type)\n     {\n-        public JavascriptJavaObject( Scriptable scope, Object javaObject, Class type )\n-        {\n-            // we pass 'null' to object. NativeJavaObject uses\n-            // passed 'type' to reflect fields and methods when\n-            // object is null.\n-            super( scope, null, type );\n-\n-            // Now, we set actual object. 'javaObject' is protected\n-            // field of NativeJavaObject.\n-            this.javaObject = javaObject;\n-        }\n+      // we pass 'null' to object. NativeJavaObject uses\n+      // passed 'type' to reflect fields and methods when\n+      // object is null.\n+      super(scope, null, type);\n+\n+      // Now, we set actual object. 'javaObject' is protected\n+      // field of NativeJavaObject.\n+      this.javaObject = javaObject;\n     }\n+  }\n }\n",
            "diff_size": 169
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
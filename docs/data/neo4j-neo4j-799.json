{
    "project_name": "neo4j-neo4j",
    "error_id": "799",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/799/TraversalShortestPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/799/TraversalShortestPath.java\nindex 27a58f3b3e5..341145371ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/799/TraversalShortestPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/799/TraversalShortestPath.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.path;\n \n import org.neo4j.graphalgo.EvaluationContext;\n@@ -32,7 +33,7 @@ import static org.neo4j.graphdb.traversal.Uniqueness.NODE_PATH;\n /**\n  * Implements shortest path algorithm, see {@link ShortestPath}, but using\n  * the traversal framework straight off with the bidirectional traversal feature.\n- *\n+ * <p>\n  * It's still experimental and slightly slower than the highly optimized\n  * {@link ShortestPath} implementation.\n  */\n@@ -43,12 +44,12 @@ public class TraversalShortestPath extends TraversalPathFinder\n     private final int maxDepth;\n     private final Integer maxResultCount;\n \n-    public TraversalShortestPath( EvaluationContext context, PathExpander expander, int maxDepth )\n+    public TraversalShortestPath(EvaluationContext context, PathExpander expander, int maxDepth)\n     {\n-        this( context, expander, maxDepth, null );\n+        this(context, expander, maxDepth, null);\n     }\n \n-    public TraversalShortestPath( EvaluationContext context, PathExpander expander, int maxDepth, Integer maxResultCount )\n+    public TraversalShortestPath(EvaluationContext context, PathExpander expander, int maxDepth, Integer maxResultCount)\n     {\n         this.context = context;\n         this.expander = expander;\n@@ -57,14 +58,14 @@ public class TraversalShortestPath extends TraversalPathFinder\n     }\n \n     @Override\n-    protected Traverser instantiateTraverser( Node start, Node end )\n+    protected Traverser instantiateTraverser(Node start, Node end)\n     {\n         var transaction = context.transaction();\n-        TraversalDescription sideBase = transaction.traversalDescription().breadthFirst().uniqueness( NODE_PATH );\n-        return transaction.bidirectionalTraversalDescription().mirroredSides( sideBase.expand( expander ) )\n-            .sideSelector( LEVEL_STOP_DESCENT_ON_RESULT, maxDepth )\n-            .collisionEvaluator( toDepth( maxDepth ) )\n-            .traverse( start, end );\n+        TraversalDescription sideBase = transaction.traversalDescription().breadthFirst().uniqueness(NODE_PATH);\n+        return transaction.bidirectionalTraversalDescription().mirroredSides(sideBase.expand(expander))\n+          .sideSelector(LEVEL_STOP_DESCENT_ON_RESULT, maxDepth)\n+          .collisionEvaluator(toDepth(maxDepth))\n+          .traverse(start, end);\n     }\n \n     @Override\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/799/TraversalShortestPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/799/TraversalShortestPath.java\nindex 27a58f3b3e5..1a7a104f91b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/799/TraversalShortestPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/799/TraversalShortestPath.java\n@@ -72,4 +72,4 @@ public class TraversalShortestPath extends TraversalPathFinder\n     {\n         return maxResultCount;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
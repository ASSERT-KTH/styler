{
    "project_name": "findbugsproject-findbugs",
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "43",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "     * Creates new form AnalysisErrorDialog\n     */\n\tpublic AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n        super(parent, modal);\n        this.reporter = reporter;\n        initComponents();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "47",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/42/AnalysisErrorDialog.java\nindex 7c44b6584ce..340533cbb3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/42/AnalysisErrorDialog.java\n@@ -40,7 +40,7 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     /**\n      * Creates new form AnalysisErrorDialog\n      */\n-\tpublic AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n+public AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n         super(parent, modal);\n         this.reporter = reporter;\n         initComponents();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/42/AnalysisErrorDialog.java\nindex 7c44b6584ce..61f0903a4e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/42/AnalysisErrorDialog.java\n@@ -40,11 +40,11 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     /**\n      * Creates new form AnalysisErrorDialog\n      */\n-\tpublic AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n+    public AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n         super(parent, modal);\n         this.reporter = reporter;\n         initComponents();\n-\t}\n+    }\n \n     public void generateContents() {\n         reporter.reportQueuedErrors();\n@@ -53,20 +53,20 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     /**\n      * This method is called from within the constructor to\n      * initialize the form.\n-\t * WARNING: Do NOT modify this code. The content of this method is\n+     * WARNING: Do NOT modify this code. The content of this method is\n      * always regenerated by the Form Editor.\n      */\n     private void initComponents() {//GEN-BEGIN:initComponents\n-\t\tjava.awt.GridBagConstraints gridBagConstraints;\n+        java.awt.GridBagConstraints gridBagConstraints;\n \n         errorLabel = new javax.swing.JLabel();\n         errorMessageScrollPane = new javax.swing.JScrollPane();\n         errorMessageTextArea = new javax.swing.JTextPane();\n-\t\tjSeparator1 = new javax.swing.JSeparator();\n+        jSeparator1 = new javax.swing.JSeparator();\n         leftSpacer = new javax.swing.JLabel();\n         rightSpacer = new javax.swing.JLabel();\n         okButton = new javax.swing.JButton();\n-\t\tanalysisMenuBar = new javax.swing.JMenuBar();\n+        analysisMenuBar = new javax.swing.JMenuBar();\n         editMenu = new javax.swing.JMenu();\n         selectAllMenuItem = new javax.swing.JMenuItem();\n         copyMenuItem = new javax.swing.JMenuItem();\n@@ -76,20 +76,20 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n         setTitle(\"Analysis Errors\");\n         setTitle(L10N.getLocalString(\"dlg.analysiserrors_ttl\", \"Analysis Errors\"));\n         addWindowListener(new java.awt.event.WindowAdapter() {\n-\t\t\t@Override\n+            @Override\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n                 closeDialog(evt);\n             }\n-\t\t});\n+        });\n \n         errorLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         errorLabel.setText(\"Errors occured during the analysis:\");\n         errorLabel.setText(L10N.getLocalString(\"dlg.analysiserror_lbl\", \"Errors occurred during analysis:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 0;\n         gridBagConstraints.gridwidth = 3;\n-\t\tgridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(6, 6, 3, 0);\n         getContentPane().add(errorLabel, gridBagConstraints);\n \n@@ -100,65 +100,65 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 1;\n-\t\tgridBagConstraints.gridwidth = 3;\n+        gridBagConstraints.gridwidth = 3;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.weightx = 1.0;\n         gridBagConstraints.weighty = 1.0;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(4, 6, 4, 6);\n+        gridBagConstraints.insets = new java.awt.Insets(4, 6, 4, 6);\n         getContentPane().add(errorMessageScrollPane, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 2;\n-\t\tgridBagConstraints.gridwidth = 3;\n+        gridBagConstraints.gridwidth = 3;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(jSeparator1, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.weightx = 0.5;\n+        gridBagConstraints.weightx = 0.5;\n         getContentPane().add(leftSpacer, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 2;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.weightx = 0.5;\n+        gridBagConstraints.weightx = 0.5;\n         getContentPane().add(rightSpacer, gridBagConstraints);\n \n         okButton.setMnemonic('O');\n         okButton.setText(\"OK\");\n         okButton.setText(L10N.getLocalString(\"dlg.ok_btn\", \"OK\"));\n-\t\tokButton.addActionListener(new java.awt.event.ActionListener() {\n+        okButton.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 okButtonActionPerformed(evt);\n             }\n-\t\t});\n+        });\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n         getContentPane().add(okButton, gridBagConstraints);\n \n         analysisMenuBar.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         editMenu.setText(\"Edit\");\n         editMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n-\t\tAnnotatedString.localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n+        AnnotatedString.localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n         editMenu.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 editMenuActionPerformed(evt);\n-\t\t\t}\n+            }\n         });\n \n         selectAllMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));\n         selectAllMenuItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         selectAllMenuItem.setText(\"Select All\");\n-\t\tAnnotatedString.localiseButton(selectAllMenuItem, \"menu.selectall_item\", \"Select &All\", true);\n+        AnnotatedString.localiseButton(selectAllMenuItem, \"menu.selectall_item\", \"Select &All\", true);\n         selectAllMenuItem.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 selectAllItemActionListener(evt);\n-\t\t\t}\n+            }\n         });\n \n         editMenu.add(selectAllMenuItem);\n@@ -166,11 +166,11 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n         copyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));\n         copyMenuItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         copyMenuItem.setText(\"Copy\");\n-\t\tAnnotatedString.localiseButton(copyMenuItem, \"menu.copy_item\", \"Copy\", true);\n+        AnnotatedString.localiseButton(copyMenuItem, \"menu.copy_item\", \"Copy\", true);\n         copyMenuItem.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 copyMenuItemActionPerformed(evt);\n-\t\t\t}\n+            }\n         });\n \n         editMenu.add(copyMenuItem);\n@@ -201,7 +201,7 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     /**\n      * Closes the dialog\n      */\n-\tprivate void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n+    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n         setVisible(false);\n         dispose();\n     }//GEN-LAST:event_closeDialog\n@@ -211,15 +211,15 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     public void addLine(String line) {\n         //System.out.println(\"Appending: \" + line);\n         int start = 0;\n-\t\tint end = line.length() - 1;\n-        while(line.substring(start, end).length() - 100 > 50) {\n+        int end = line.length() - 1;\n+        while (line.substring(start, end).length() - 100 > 50) {\n             buf.append(line.substring(start, start + 99) + \"-\");\n             buf.append('\\n');\n-\t\t\tstart += 99;\n+            start += 99;\n         }\n         buf.append(line.substring(start, end));\n         buf.append('\\n');\n-\t}\n+    }\n \n     public void clear() {\n         errorMessageTextArea.setText(\"\");\n@@ -232,15 +232,15 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     // Variables declaration - do not modify//GEN-BEGIN:variables\n     private javax.swing.JMenuBar analysisMenuBar;\n     private javax.swing.JMenuItem copyMenuItem;\n-\tprivate javax.swing.JMenu editMenu;\n+    private javax.swing.JMenu editMenu;\n     private javax.swing.JLabel errorLabel;\n     private javax.swing.JScrollPane errorMessageScrollPane;\n     private javax.swing.JTextPane errorMessageTextArea;\n-\tprivate javax.swing.JSeparator jSeparator1;\n+    private javax.swing.JSeparator jSeparator1;\n     private javax.swing.JLabel leftSpacer;\n     private javax.swing.JButton okButton;\n     private javax.swing.JLabel rightSpacer;\n-\tprivate javax.swing.JMenuItem selectAllMenuItem;\n+    private javax.swing.JMenuItem selectAllMenuItem;\n     // End of variables declaration//GEN-END:variables\n \n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/42/AnalysisErrorDialog.java\nindex 7c44b6584ce..9efcbe23bdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/42/AnalysisErrorDialog.java\n@@ -33,18 +33,22 @@ import edu.umd.cs.findbugs.L10N;\n  *\n  * @author David Hovemeyer\n  */\n-public class AnalysisErrorDialog extends javax.swing.JDialog {\n \n+public class AnalysisErrorDialog extends\n+    javax.swing.JDialog {\n     private BugReporter reporter;\n \n     /**\n      * Creates new form AnalysisErrorDialog\n      */\n-\tpublic AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n+\n+\n+    public AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n         super(parent, modal);\n         this.reporter = reporter;\n         initComponents();\n-\t}\n+    }\n+\n \n     public void generateContents() {\n         reporter.reportQueuedErrors();\n@@ -53,147 +57,134 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     /**\n      * This method is called from within the constructor to\n      * initialize the form.\n-\t * WARNING: Do NOT modify this code. The content of this method is\n+     * WARNING: Do NOT modify this code. The content of this method is\n      * always regenerated by the Form Editor.\n      */\n-    private void initComponents() {//GEN-BEGIN:initComponents\n-\t\tjava.awt.GridBagConstraints gridBagConstraints;\n \n+\n+    private void initComponents() {//GEN-BEGIN:initComponents\n+        java.awt.GridBagConstraints gridBagConstraints;\n         errorLabel = new javax.swing.JLabel();\n         errorMessageScrollPane = new javax.swing.JScrollPane();\n         errorMessageTextArea = new javax.swing.JTextPane();\n-\t\tjSeparator1 = new javax.swing.JSeparator();\n+        jSeparator1 = new javax.swing.JSeparator();\n         leftSpacer = new javax.swing.JLabel();\n         rightSpacer = new javax.swing.JLabel();\n         okButton = new javax.swing.JButton();\n-\t\tanalysisMenuBar = new javax.swing.JMenuBar();\n+        analysisMenuBar = new javax.swing.JMenuBar();\n         editMenu = new javax.swing.JMenu();\n         selectAllMenuItem = new javax.swing.JMenuItem();\n         copyMenuItem = new javax.swing.JMenuItem();\n-\n         getContentPane().setLayout(new java.awt.GridBagLayout());\n-\n         setTitle(\"Analysis Errors\");\n         setTitle(L10N.getLocalString(\"dlg.analysiserrors_ttl\", \"Analysis Errors\"));\n         addWindowListener(new java.awt.event.WindowAdapter() {\n-\t\t\t@Override\n+            @Override\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n                 closeDialog(evt);\n             }\n-\t\t});\n-\n+        });\n         errorLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         errorLabel.setText(\"Errors occured during the analysis:\");\n         errorLabel.setText(L10N.getLocalString(\"dlg.analysiserror_lbl\", \"Errors occurred during analysis:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 0;\n         gridBagConstraints.gridwidth = 3;\n-\t\tgridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(6, 6, 3, 0);\n         getContentPane().add(errorLabel, gridBagConstraints);\n-\n         errorMessageTextArea.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n         errorMessageTextArea.setEditable(false);\n         errorMessageScrollPane.setViewportView(errorMessageTextArea);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 1;\n-\t\tgridBagConstraints.gridwidth = 3;\n+        gridBagConstraints.gridwidth = 3;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.weightx = 1.0;\n         gridBagConstraints.weighty = 1.0;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(4, 6, 4, 6);\n+        gridBagConstraints.insets = new java.awt.Insets(4, 6, 4, 6);\n         getContentPane().add(errorMessageScrollPane, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 2;\n-\t\tgridBagConstraints.gridwidth = 3;\n+        gridBagConstraints.gridwidth = 3;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(jSeparator1, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.weightx = 0.5;\n+        gridBagConstraints.weightx = 0.5;\n         getContentPane().add(leftSpacer, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 2;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.weightx = 0.5;\n+        gridBagConstraints.weightx = 0.5;\n         getContentPane().add(rightSpacer, gridBagConstraints);\n-\n         okButton.setMnemonic('O');\n         okButton.setText(\"OK\");\n         okButton.setText(L10N.getLocalString(\"dlg.ok_btn\", \"OK\"));\n-\t\tokButton.addActionListener(new java.awt.event.ActionListener() {\n+        okButton.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 okButtonActionPerformed(evt);\n             }\n-\t\t});\n-\n+        });\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n         getContentPane().add(okButton, gridBagConstraints);\n-\n         analysisMenuBar.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         editMenu.setText(\"Edit\");\n         editMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n-\t\tAnnotatedString.localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n+        AnnotatedString.localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n         editMenu.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 editMenuActionPerformed(evt);\n-\t\t\t}\n+            }\n         });\n-\n         selectAllMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));\n         selectAllMenuItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         selectAllMenuItem.setText(\"Select All\");\n-\t\tAnnotatedString.localiseButton(selectAllMenuItem, \"menu.selectall_item\", \"Select &All\", true);\n+        AnnotatedString.localiseButton(selectAllMenuItem, \"menu.selectall_item\", \"Select &All\", true);\n         selectAllMenuItem.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 selectAllItemActionListener(evt);\n-\t\t\t}\n+            }\n         });\n-\n         editMenu.add(selectAllMenuItem);\n-\n         copyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));\n         copyMenuItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         copyMenuItem.setText(\"Copy\");\n-\t\tAnnotatedString.localiseButton(copyMenuItem, \"menu.copy_item\", \"Copy\", true);\n+        AnnotatedString.localiseButton(copyMenuItem, \"menu.copy_item\", \"Copy\", true);\n         copyMenuItem.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 copyMenuItemActionPerformed(evt);\n-\t\t\t}\n+            }\n         });\n-\n         editMenu.add(copyMenuItem);\n-\n         analysisMenuBar.add(editMenu);\n-\n         setJMenuBar(analysisMenuBar);\n-\n         pack();\n     }//GEN-END:initComponents\n \n+\n     private void copyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyMenuItemActionPerformed\n         errorMessageTextArea.copy();\n     }//GEN-LAST:event_copyMenuItemActionPerformed\n \n+\n     private void selectAllItemActionListener(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllItemActionListener\n         errorMessageTextArea.selectAll();\n     }//GEN-LAST:event_selectAllItemActionListener\n \n+\n     private void editMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuActionPerformed\n         // TODO add your handling code here:\n     }//GEN-LAST:event_editMenuActionPerformed\n \n+\n     private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed\n         closeDialog(null);\n     }//GEN-LAST:event_okButtonActionPerformed\n@@ -201,25 +192,28 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     /**\n      * Closes the dialog\n      */\n-\tprivate void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n+\n+\n+    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n         setVisible(false);\n         dispose();\n     }//GEN-LAST:event_closeDialog\n \n+\n     private StringBuilder buf = new StringBuilder();\n \n     public void addLine(String line) {\n         //System.out.println(\"Appending: \" + line);\n         int start = 0;\n-\t\tint end = line.length() - 1;\n-        while(line.substring(start, end).length() - 100 > 50) {\n+        int end = line.length() - 1;\n+        while (line.substring(start, end).length() - 100 > 50) {\n             buf.append(line.substring(start, start + 99) + \"-\");\n             buf.append('\\n');\n-\t\t\tstart += 99;\n+            start += 99;\n         }\n         buf.append(line.substring(start, end));\n         buf.append('\\n');\n-\t}\n+    }\n \n     public void clear() {\n         errorMessageTextArea.setText(\"\");\n@@ -230,17 +224,28 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     }\n \n     // Variables declaration - do not modify//GEN-BEGIN:variables\n+\n+\n     private javax.swing.JMenuBar analysisMenuBar;\n+\n     private javax.swing.JMenuItem copyMenuItem;\n-\tprivate javax.swing.JMenu editMenu;\n+\n+    private javax.swing.JMenu editMenu;\n+\n     private javax.swing.JLabel errorLabel;\n+\n     private javax.swing.JScrollPane errorMessageScrollPane;\n+\n     private javax.swing.JTextPane errorMessageTextArea;\n-\tprivate javax.swing.JSeparator jSeparator1;\n+\n+    private javax.swing.JSeparator jSeparator1;\n+\n     private javax.swing.JLabel leftSpacer;\n+\n     private javax.swing.JButton okButton;\n+\n     private javax.swing.JLabel rightSpacer;\n-\tprivate javax.swing.JMenuItem selectAllMenuItem;\n-    // End of variables declaration//GEN-END:variables\n \n-}\n+    private javax.swing.JMenuItem selectAllMenuItem;\n+    // End of variables declaration//GEN-END:variables\n+}\n\\ No newline at end of file\n",
            "diff_size": 82
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "47",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/42/AnalysisErrorDialog.java\nindex 7c44b6584ce..340533cbb3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/42/AnalysisErrorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/42/AnalysisErrorDialog.java\n@@ -40,7 +40,7 @@ public class AnalysisErrorDialog extends javax.swing.JDialog {\n     /**\n      * Creates new form AnalysisErrorDialog\n      */\n-\tpublic AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n+public AnalysisErrorDialog(java.awt.Frame parent, boolean modal, BugReporter reporter) {\n         super(parent, modal);\n         this.reporter = reporter;\n         initComponents();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
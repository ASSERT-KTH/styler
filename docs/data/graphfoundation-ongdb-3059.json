{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3059",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3059/LogEntrySanity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3059/LogEntrySanity.java\nindex 5592b6908c0..24dcf222565 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3059/LogEntrySanity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3059/LogEntrySanity.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.util.concurrent.TimeUnit;\n@@ -31,55 +32,54 @@ import static java.lang.System.currentTimeMillis;\n  */\n class LogEntrySanity\n {\n-    private static final long UNREASONABLY_LONG_TIME = TimeUnit.DAYS.toMillis( 30 * 365 /*years*/ );\n-    private static final int UNREASONABLY_HIGH_SERVER_ID = 10_000_000;\n+  private static final long UNREASONABLY_LONG_TIME = TimeUnit.DAYS.toMillis(30 * 365 /*years*/);\n+  private static final int UNREASONABLY_HIGH_SERVER_ID = 10_000_000;\n \n-    private LogEntrySanity()\n-    {\n-        throw new AssertionError();\n-    }\n+  private LogEntrySanity()\n+  {\n+    throw new AssertionError();\n+  }\n \n-    static boolean logEntryMakesSense( LogEntry entry )\n+  static boolean logEntryMakesSense(LogEntry entry)\n+  {\n+    if (entry == null)\n     {\n-        if ( entry == null )\n-        {\n-            return false;\n-        }\n-        if ( entry instanceof LogEntryStart )\n-        {\n-            return startEntryMakesSense( (LogEntryStart) entry );\n-        }\n-        else if ( entry instanceof LogEntryCommit )\n-        {\n-            return commitEntryMakesSense( (LogEntryCommit) entry );\n-        }\n-        return true;\n+      return false;\n     }\n-\n-    private static boolean commitEntryMakesSense( LogEntryCommit entry )\n+    if (entry instanceof LogEntryStart)\n     {\n-        return timeMakesSense( entry.getTimeWritten() ) && transactionIdMakesSense( entry );\n-    }\n-\n-    private static boolean transactionIdMakesSense( LogEntryCommit entry )\n+      return startEntryMakesSense((LogEntryStart) entry);\n+    } else if (entry instanceof LogEntryCommit)\n     {\n-        return entry.getTxId() > TransactionIdStore.BASE_TX_ID;\n+      return commitEntryMakesSense((LogEntryCommit) entry);\n     }\n+    return true;\n+  }\n \n-    private static boolean startEntryMakesSense( LogEntryStart entry )\n-    {\n-        return serverIdMakesSense( entry.getLocalId() ) &&\n-                serverIdMakesSense( entry.getMasterId() ) &&\n-                timeMakesSense( entry.getTimeWritten() );\n-    }\n+  private static boolean commitEntryMakesSense(LogEntryCommit entry)\n+  {\n+    return timeMakesSense(entry.getTimeWritten()) && transactionIdMakesSense(entry);\n+  }\n \n-    private static boolean serverIdMakesSense( int serverId )\n-    {\n-        return serverId >= 0 && serverId < UNREASONABLY_HIGH_SERVER_ID;\n-    }\n+  private static boolean transactionIdMakesSense(LogEntryCommit entry)\n+  {\n+    return entry.getTxId() > TransactionIdStore.BASE_TX_ID;\n+  }\n \n-    private static boolean timeMakesSense( long time )\n-    {\n-        return abs( currentTimeMillis() - time ) < UNREASONABLY_LONG_TIME;\n-    }\n+  private static boolean startEntryMakesSense(LogEntryStart entry)\n+  {\n+    return serverIdMakesSense(entry.getLocalId()) &&\n+        serverIdMakesSense(entry.getMasterId()) &&\n+        timeMakesSense(entry.getTimeWritten());\n+  }\n+\n+  private static boolean serverIdMakesSense(int serverId)\n+  {\n+    return serverId >= 0 && serverId < UNREASONABLY_HIGH_SERVER_ID;\n+  }\n+\n+  private static boolean timeMakesSense(long time)\n+  {\n+    return abs(currentTimeMillis() - time) < UNREASONABLY_LONG_TIME;\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3059/LogEntrySanity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3059/LogEntrySanity.java\nindex 5592b6908c0..bad315cb206 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3059/LogEntrySanity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3059/LogEntrySanity.java\n@@ -45,7 +45,8 @@ class LogEntrySanity\n         {\n             return false;\n         }\n-        if ( entry instanceof LogEntryStart )\n+\n+if ( entry instanceof LogEntryStart )\n         {\n             return startEntryMakesSense( (LogEntryStart) entry );\n         }\n@@ -68,8 +69,7 @@ class LogEntrySanity\n \n     private static boolean startEntryMakesSense( LogEntryStart entry )\n     {\n-        return serverIdMakesSense( entry.getLocalId() ) &&\n-                serverIdMakesSense( entry.getMasterId() ) &&\n+        return serverIdMakesSense( entry.getLocalId() ) && serverIdMakesSense( entry.getMasterId() ) &&\n                 timeMakesSense( entry.getTimeWritten() );\n     }\n \n@@ -82,4 +82,4 @@ class LogEntrySanity\n     {\n         return abs( currentTimeMillis() - time ) < UNREASONABLY_LONG_TIME;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "82",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "64",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "74",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "74",
                    "column": "100",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "29",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3059/LogEntrySanity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3059/LogEntrySanity.java\nindex 5592b6908c0..1512f54b303 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3059/LogEntrySanity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3059/LogEntrySanity.java\n@@ -20,18 +20,18 @@\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.util.concurrent.TimeUnit;\n-\n import org.neo4j.kernel.impl.transaction.log.TransactionIdStore;\n-\n import static java.lang.Math.abs;\n+\n import static java.lang.System.currentTimeMillis;\n \n /**\n  * Sanity checking for read {@link LogEntry log entries}.\n  */\n+\n class LogEntrySanity\n {\n-    private static final long UNREASONABLY_LONG_TIME = TimeUnit.DAYS.toMillis( 30 * 365 /*years*/ );\n+    private static final long UNREASONABLY_LONG_TIME = TimeUnit.DAYS.toMillis( 30* 365 /*years*/ );\n     private static final int UNREASONABLY_HIGH_SERVER_ID = 10_000_000;\n \n     private LogEntrySanity()\n@@ -45,20 +45,23 @@ class LogEntrySanity\n         {\n             return false;\n         }\n+\n         if ( entry instanceof LogEntryStart )\n         {\n             return startEntryMakesSense( (LogEntryStart) entry );\n         }\n-        else if ( entry instanceof LogEntryCommit )\n+        else\n+        if ( entry instanceof LogEntryCommit )\n         {\n             return commitEntryMakesSense( (LogEntryCommit) entry );\n         }\n+\n         return true;\n     }\n \n     private static boolean commitEntryMakesSense( LogEntryCommit entry )\n     {\n-        return timeMakesSense( entry.getTimeWritten() ) && transactionIdMakesSense( entry );\n+        return timeMakesSense( entry.getTimeWritten() )&& transactionIdMakesSense( entry );\n     }\n \n     private static boolean transactionIdMakesSense( LogEntryCommit entry )\n@@ -68,18 +71,16 @@ class LogEntrySanity\n \n     private static boolean startEntryMakesSense( LogEntryStart entry )\n     {\n-        return serverIdMakesSense( entry.getLocalId() ) &&\n-                serverIdMakesSense( entry.getMasterId() ) &&\n-                timeMakesSense( entry.getTimeWritten() );\n+        return serverIdMakesSense( entry.getLocalId() )&& serverIdMakesSense( entry.getMasterId() )&& timeMakesSense( entry.getTimeWritten() );\n     }\n \n     private static boolean serverIdMakesSense( int serverId )\n     {\n-        return serverId >= 0 && serverId < UNREASONABLY_HIGH_SERVER_ID;\n+        return serverId >= 0&& serverId < UNREASONABLY_HIGH_SERVER_ID;\n     }\n \n     private static boolean timeMakesSense( long time )\n     {\n         return abs( currentTimeMillis() - time ) < UNREASONABLY_LONG_TIME;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
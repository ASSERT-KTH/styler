{
    "project_name": "neo4j-neo4j",
    "error_id": "3323",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3323/SpaceFillingCurveSettingsFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3323/SpaceFillingCurveSettingsFactory.java\nindex 0b12b5391a0..7468b1da7a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3323/SpaceFillingCurveSettingsFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3323/SpaceFillingCurveSettingsFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.config;\n \n import org.neo4j.configuration.Config;\n@@ -41,10 +42,10 @@ public final class SpaceFillingCurveSettingsFactory\n      * Currently we only support a SingleSpaceFillingCurveSettings which is the best option for cartesian, but\n      * not necessarily the best for geographic coordinate systems.\n      */\n-    static SpaceFillingCurveSettings fromConfig( EnvelopeSettings envelopeSettings )\n+    static SpaceFillingCurveSettings fromConfig(EnvelopeSettings envelopeSettings)\n     {\n         // Currently we support only one type of index, but in future we could support different types for different CRS\n-        return new SpaceFillingCurveSettings( envelopeSettings.getCrs().getDimension(), envelopeSettings.asEnvelope() );\n+        return new SpaceFillingCurveSettings(envelopeSettings.getCrs().getDimension(), envelopeSettings.asEnvelope());\n     }\n \n     /**\n@@ -54,19 +55,18 @@ public final class SpaceFillingCurveSettingsFactory\n      * @param config {@link Config} containing space filling curve settings.\n      * @return {@link SpaceFillingCurveConfiguration} from the settings found in {@link Config}.\n      */\n-    public static SpaceFillingCurveConfiguration getConfiguredSpaceFillingCurveConfiguration( Config config )\n+    public static SpaceFillingCurveConfiguration getConfiguredSpaceFillingCurveConfiguration(Config config)\n     {\n-        int extraLevels = config.get( SpatialIndexSettings.space_filling_curve_extra_levels );\n-        double topThreshold = config.get( SpatialIndexSettings.space_filling_curve_top_threshold );\n-        double bottomThreshold = config.get( SpatialIndexSettings.space_filling_curve_bottom_threshold );\n+        int extraLevels = config.get(SpatialIndexSettings.space_filling_curve_extra_levels);\n+        double topThreshold = config.get(SpatialIndexSettings.space_filling_curve_top_threshold);\n+        double bottomThreshold = config.get(SpatialIndexSettings.space_filling_curve_bottom_threshold);\n \n-        if ( topThreshold == 0.0 || bottomThreshold == 0.0 )\n+        if (topThreshold == 0.0 || bottomThreshold == 0.0)\n         {\n-            return new StandardConfiguration( extraLevels );\n-        }\n-        else\n+            return new StandardConfiguration(extraLevels);\n+        } else\n         {\n-            return new PartialOverlapConfiguration( extraLevels, topThreshold, bottomThreshold );\n+            return new PartialOverlapConfiguration(extraLevels, topThreshold, bottomThreshold);\n         }\n     }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1150",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.adapterauthentication.proxy;\n\nimport gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationImpl;\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.AuthenticateUserRequestType;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1150/AdapterAuthenticationJavaProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1150/AdapterAuthenticationJavaProxy.java\nindex 7b5910ee2fc..b3172280316 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1150/AdapterAuthenticationJavaProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1150/AdapterAuthenticationJavaProxy.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapterauthentication.proxy;\n \n import gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationImpl;\n@@ -37,32 +38,32 @@ import org.slf4j.LoggerFactory;\n  */\n public class AdapterAuthenticationJavaProxy implements AdapterAuthenticationProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterAuthenticationJavaProxy.class);\n-\n-    /**\n-     * Given a request to authenticate a user, this service will determine if this is an identifiable user within\n-     * OpenSSO and if so will provide an identifying token.\n-     *\n-     * @param authenticateUserRequest The request to authenticate the user\n-     * @return The response which indicates if an authentication service is implemented and if so the resulting token\n-     *         identifier\n-     */\n-    @Override\n-    public AuthenticateUserResponseType authenticateUser(AuthenticateUserRequestType authenticateUserRequest) {\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterAuthenticationJavaProxy.class);\n \n-        AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n+  /**\n+   * Given a request to authenticate a user, this service will determine if this is an identifiable user within\n+   * OpenSSO and if so will provide an identifying token.\n+   *\n+   * @param authenticateUserRequest The request to authenticate the user\n+   * @return The response which indicates if an authentication service is implemented and if so the resulting token\n+   * identifier\n+   */\n+  @Override\n+  public AuthenticateUserResponseType authenticateUser(AuthenticateUserRequestType authenticateUserRequest) {\n \n-        AdapterAuthenticationImpl authImpl = new AdapterAuthenticationImpl();\n+    AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n \n-        try {\n-            authResp = authImpl.authenticateUser(authenticateUserRequest);\n-        } catch (Exception ex) {\n-            String message = \"Error occurred calling AdapterAuthenticationJavaProxy.authenticateUser.  Error: \"\n-                    + ex.getMessage();\n-            LOG.error(message, ex);\n-            throw new RuntimeException(message, ex);\n-        }\n+    AdapterAuthenticationImpl authImpl = new AdapterAuthenticationImpl();\n \n-        return authResp;\n+    try {\n+      authResp = authImpl.authenticateUser(authenticateUserRequest);\n+    } catch (Exception ex) {\n+      String message = \"Error occurred calling AdapterAuthenticationJavaProxy.authenticateUser.  Error: \"\n+          + ex.getMessage();\n+      LOG.error(message, ex);\n+      throw new RuntimeException(message, ex);\n     }\n+\n+    return authResp;\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1150/AdapterAuthenticationJavaProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1150/AdapterAuthenticationJavaProxy.java\nindex 7b5910ee2fc..893dc671bdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1150/AdapterAuthenticationJavaProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1150/AdapterAuthenticationJavaProxy.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapterauthentication.proxy;\n \n import gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationImpl;\n@@ -53,16 +54,15 @@ public class AdapterAuthenticationJavaProxy implements AdapterAuthenticationProx\n         AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n \n         AdapterAuthenticationImpl authImpl = new AdapterAuthenticationImpl();\n-\n-        try {\n+try {\n             authResp = authImpl.authenticateUser(authenticateUserRequest);\n         } catch (Exception ex) {\n-            String message = \"Error occurred calling AdapterAuthenticationJavaProxy.authenticateUser.  Error: \"\n-                    + ex.getMessage();\n-            LOG.error(message, ex);\n-            throw new RuntimeException(message, ex);\n+            String message = \"Error occurred calling AdapterAuthenticationJavaProxy.authenticateUser.  Error: \" + ex.getMessage();\n+LOG.error(message, ex);\n+\n+throw new RuntimeException(message, ex);\n         }\n \n         return authResp;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1150/AdapterAuthenticationJavaProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1150/AdapterAuthenticationJavaProxy.java\nindex 7b5910ee2fc..14b09b5e600 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1150/AdapterAuthenticationJavaProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1150/AdapterAuthenticationJavaProxy.java\n@@ -35,6 +35,8 @@ import org.slf4j.LoggerFactory;\n /**\n  * This is the concrete implementation for the Java based call to the AdapterAuthentication.\n  */\n+\n+\n public class AdapterAuthenticationJavaProxy implements AdapterAuthenticationProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterAuthenticationJavaProxy.class);\n@@ -47,22 +49,20 @@ public class AdapterAuthenticationJavaProxy implements AdapterAuthenticationProx\n      * @return The response which indicates if an authentication service is implemented and if so the resulting token\n      *         identifier\n      */\n+\n+\n     @Override\n     public AuthenticateUserResponseType authenticateUser(AuthenticateUserRequestType authenticateUserRequest) {\n-\n         AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n-\n         AdapterAuthenticationImpl authImpl = new AdapterAuthenticationImpl();\n-\n         try {\n             authResp = authImpl.authenticateUser(authenticateUserRequest);\n         } catch (Exception ex) {\n-            String message = \"Error occurred calling AdapterAuthenticationJavaProxy.authenticateUser.  Error: \"\n-                    + ex.getMessage();\n+            String message = \"Error occurred calling AdapterAuthenticationJavaProxy.authenticateUser.  Error: \" + ex.getMessage();\n             LOG.error(message, ex);\n             throw new RuntimeException(message, ex);\n         }\n-\n         return authResp;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
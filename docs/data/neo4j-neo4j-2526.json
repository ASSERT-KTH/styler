{
    "project_name": "neo4j-neo4j",
    "error_id": "2526",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "110",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2526/IdRangeMarker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2526/IdRangeMarker.java\nindex e4d87e7d143..a473066ffb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2526/IdRangeMarker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2526/IdRangeMarker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.id.indexed;\n \n import java.io.IOException;\n@@ -106,9 +107,9 @@ class IdRangeMarker implements Marker, IndexedIdGenerator.ReservedMarker\n      */\n     private final IndexedIdGenerator.Monitor monitor;\n \n-    IdRangeMarker( int idsPerEntry, Layout<IdRangeKey,IdRange> layout, Writer<IdRangeKey,IdRange> writer, Lock lock, ValueMerger<IdRangeKey,IdRange> merger,\n-            boolean started, AtomicBoolean freeIdsNotifier, long generation, AtomicLong highestWrittenId, boolean bridgeIdGaps,\n-            IndexedIdGenerator.Monitor monitor )\n+    IdRangeMarker(int idsPerEntry, Layout<IdRangeKey, IdRange> layout, Writer<IdRangeKey, IdRange> writer, Lock lock, ValueMerger<IdRangeKey, IdRange> merger,\n+                  boolean started, AtomicBoolean freeIdsNotifier, long generation, AtomicLong highestWrittenId, boolean bridgeIdGaps,\n+                  IndexedIdGenerator.Monitor monitor)\n     {\n         this.idsPerEntry = idsPerEntry;\n         this.writer = writer;\n@@ -130,12 +131,10 @@ class IdRangeMarker implements Marker, IndexedIdGenerator.ReservedMarker\n         try\n         {\n             writer.close();\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n-        }\n-        finally\n+            throw new UncheckedIOException(e);\n+        } finally\n         {\n             lock.unlock();\n             monitor.markSessionDone();\n@@ -143,80 +142,80 @@ class IdRangeMarker implements Marker, IndexedIdGenerator.ReservedMarker\n     }\n \n     @Override\n-    public void markUsed( long id )\n+    public void markUsed(long id)\n     {\n-        bridgeGapBetweenHighestWrittenIdAndThisId( id );\n-        if ( !isReservedId( id ) )\n+        bridgeGapBetweenHighestWrittenIdAndThisId(id);\n+        if (!isReservedId(id))\n         {\n-            prepareRange( id, false );\n-            value.setBitsForAllTypes( idOffset( id ) );\n-            writer.mergeIfExists( key, value, merger );\n-            monitor.markedAsUsed( id );\n+            prepareRange(id, false);\n+            value.setBitsForAllTypes(idOffset(id));\n+            writer.mergeIfExists(key, value, merger);\n+            monitor.markedAsUsed(id);\n         }\n     }\n \n     @Override\n-    public void markDeleted( long id )\n+    public void markDeleted(long id)\n     {\n-        if ( !isReservedId( id ) )\n+        if (!isReservedId(id))\n         {\n-            prepareRange( id, true );\n-            value.setBit( BITSET_COMMIT, idOffset( id ) );\n-            writer.merge( key, value, merger );\n-            monitor.markedAsDeleted( id );\n+            prepareRange(id, true);\n+            value.setBit(BITSET_COMMIT, idOffset(id));\n+            writer.merge(key, value, merger);\n+            monitor.markedAsDeleted(id);\n         }\n     }\n \n     @Override\n-    public void markReserved( long id )\n+    public void markReserved(long id)\n     {\n-        if ( !isReservedId( id ) )\n+        if (!isReservedId(id))\n         {\n-            prepareRange( id, true );\n-            value.setBit( BITSET_RESERVED, idOffset( id ) );\n-            writer.merge( key, value, merger );\n-            monitor.markedAsReserved( id );\n+            prepareRange(id, true);\n+            value.setBit(BITSET_RESERVED, idOffset(id));\n+            writer.merge(key, value, merger);\n+            monitor.markedAsReserved(id);\n         }\n     }\n \n     @Override\n-    public void markUnreserved( long id )\n+    public void markUnreserved(long id)\n     {\n-        if ( !isReservedId( id ) )\n+        if (!isReservedId(id))\n         {\n-            prepareRange( id, false );\n-            value.setBit( BITSET_RESERVED, idOffset( id ) );\n-            writer.merge( key, value, merger );\n-            monitor.markedAsUnreserved( id );\n+            prepareRange(id, false);\n+            value.setBit(BITSET_RESERVED, idOffset(id));\n+            writer.merge(key, value, merger);\n+            monitor.markedAsUnreserved(id);\n         }\n     }\n \n     @Override\n-    public void markFree( long id )\n+    public void markFree(long id)\n     {\n-        if ( !isReservedId( id ) )\n+        if (!isReservedId(id))\n         {\n-            prepareRange( id, true );\n-            value.setBit( BITSET_REUSE, idOffset( id ) );\n-            writer.merge( key, value, merger );\n-            monitor.markedAsFree( id );\n+            prepareRange(id, true);\n+            value.setBit(BITSET_REUSE, idOffset(id));\n+            writer.merge(key, value, merger);\n+            monitor.markedAsFree(id);\n         }\n \n-        freeIdsNotifier.set( true );\n+        freeIdsNotifier.set(true);\n     }\n \n-    private void prepareRange( long id, boolean addition )\n+    private void prepareRange(long id, boolean addition)\n     {\n-        key.setIdRangeIdx( idRangeIndex( id ) );\n-        value.clear( generation, addition );\n+        key.setIdRangeIdx(idRangeIndex(id));\n+        value.clear(generation, addition);\n     }\n \n-    private long idRangeIndex( long id )\n+    private long idRangeIndex(long id)\n     {\n         return id / idsPerEntry;\n     }\n \n-    private int idOffset( long id )\n+    private int idOffset(long id)\n     {\n         return (int) (id % idsPerEntry);\n     }\n@@ -225,53 +224,54 @@ class IdRangeMarker implements Marker, IndexedIdGenerator.ReservedMarker\n      * Fills the space between the previously highest ever written id and the id currently being updated. The ids between those two points\n      * will be marked as deleted, or in the recovery case (where {@link #started} is {@code false} marked as deleted AND free.\n      * This solves a problem of not losing track of ids that have been allocated off of high id, but either not committed or failed to be committed.\n+     *\n      * @param id the id being updated.\n      */\n-    private void bridgeGapBetweenHighestWrittenIdAndThisId( long id )\n+    private void bridgeGapBetweenHighestWrittenIdAndThisId(long id)\n     {\n         long highestWrittenId = this.highestWrittenId.get();\n-        if ( bridgeIdGaps && highestWrittenId < id )\n+        if (bridgeIdGaps && highestWrittenId < id)\n         {\n-            key.setIdRangeIdx( -1 );\n+            key.setIdRangeIdx(-1);\n             boolean dirty = false;\n-            while ( highestWrittenId < id - 1 )\n+            while (highestWrittenId < id - 1)\n             {\n                 long bridgeId = ++highestWrittenId;\n-                if ( !isReservedId( bridgeId ) )\n+                if (!isReservedId(bridgeId))\n                 {\n                     // Since we're potentially setting multiple bits in this loop we have to monitor when we cross the range boundary\n                     // to the next range. This check checks this and if so writes that range before moving over to the next range.\n-                    if ( idRangeIndex( bridgeId ) != key.getIdRangeIdx() )\n+                    if (idRangeIndex(bridgeId) != key.getIdRangeIdx())\n                     {\n-                        if ( key.getIdRangeIdx() != -1 )\n+                        if (key.getIdRangeIdx() != -1)\n                         {\n-                            writer.merge( key, value, merger );\n+                            writer.merge(key, value, merger);\n                         }\n-                        prepareRange( bridgeId, true );\n+                        prepareRange(bridgeId, true);\n                     }\n \n                     // Mark this id as deleted\n-                    value.setBit( BITSET_COMMIT, idOffset( bridgeId ) );\n-                    if ( !started ) // i.e. in recovery mode\n+                    value.setBit(BITSET_COMMIT, idOffset(bridgeId));\n+                    if (!started) // i.e. in recovery mode\n                     {\n                         // We're doing this bridging in recovery and we can therefore mark this id as free right away\n-                        value.setBit( BITSET_REUSE, idOffset( bridgeId ) );\n+                        value.setBit(BITSET_REUSE, idOffset(bridgeId));\n                     }\n \n                     // Set this flag so that the last range (if updated) will be written below, when exiting this loop\n                     dirty = true;\n-                    monitor.bridged( bridgeId );\n+                    monitor.bridged(bridgeId);\n                 }\n             }\n \n-            if ( dirty )\n+            if (dirty)\n             {\n-                writer.merge( key, value, merger );\n+                writer.merge(key, value, merger);\n             }\n \n             // Well, we bridged the gap up and including id - 1, but we know that right after this the actual id will be written\n             // so to try to isolate updates to highestWrittenId to this method we can might as well do that right here.\n-            this.highestWrittenId.set( id );\n+            this.highestWrittenId.set(id);\n         }\n     }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2526/IdRangeMarker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2526/IdRangeMarker.java\nindex e4d87e7d143..9cd35b8dfcd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2526/IdRangeMarker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2526/IdRangeMarker.java\n@@ -274,4 +274,4 @@ class IdRangeMarker implements Marker, IndexedIdGenerator.ReservedMarker\n             this.highestWrittenId.set( id );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "bakdata-conquery",
    "error_id": "241",
    "information": {
        "errors": [
            {
                "line": "78",
                "severity": "error",
                "message": "Indent must use tab characters",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t;\n\n    private final Class<?> valueType;\n\tprivate final Class<?> keyType;\n\n\t/**",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/241/StoreInfo.java\nindex 6af622007c3..87c6bf87c2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/241/StoreInfo.java\n@@ -74,8 +74,8 @@ public enum StoreInfo implements IStoreInfo {\n \tFORM_CONFIG(FormConfig.class, FormConfigId.class),\n \tWORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class)\n \t;\n+\tprivate final Class<?> valueType;\n \n-    private final Class<?> valueType;\n \tprivate final Class<?> keyType;\n \n \t/**\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/241/StoreInfo.java\nindex 6af622007c3..298884bd560 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/241/StoreInfo.java\n@@ -50,104 +50,103 @@ import lombok.RequiredArgsConstructor;\n \n /**\n  * Enums and helper methods to create stores of a certain kind.\n- *\n+ * <p>\n  * Boolean is used as a placeholder value/class for singleton stores.\n  */\n @RequiredArgsConstructor\n @Getter\n public enum StoreInfo implements IStoreInfo {\n-\tDATASET(Dataset.class, Boolean.class),\n-\tID_MAPPING(PersistentIdMap.class, Boolean.class),\n-\tNAMESPACES(DatasetRegistry.class, Boolean.class),\n-\tSLAVE(ShardNodeInformation.class, Boolean.class),\n-\tDICTIONARIES(Dictionary.class, DictionaryId.class),\n-\tIMPORTS(Import.class, ImportId.class),\n-\tCONCEPTS(Concept.class, ConceptId.class),\n-\tBUCKETS(Bucket.class, BucketId.class),\n-\tC_BLOCKS(CBlock.class, CBlockId.class),\n-\tWORKER(WorkerInformation.class, Boolean.class),\n-\tEXECUTIONS(ManagedExecution.class, ManagedExecutionId.class),\n-\tAUTH_ROLE(Role.class, RoleId.class),\n-\tAUTH_USER(User.class, UserId.class),\n-\tAUTH_GROUP(Group.class, GroupId.class),\n-\tSTRUCTURE(StructureNode[].class, Boolean.class),\n-\tFORM_CONFIG(FormConfig.class, FormConfigId.class),\n-\tWORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class)\n-\t;\n+    DATASET(Dataset.class, Boolean.class),\n+    ID_MAPPING(PersistentIdMap.class, Boolean.class),\n+    NAMESPACES(DatasetRegistry.class, Boolean.class),\n+    SLAVE(ShardNodeInformation.class, Boolean.class),\n+    DICTIONARIES(Dictionary.class, DictionaryId.class),\n+    IMPORTS(Import.class, ImportId.class),\n+    CONCEPTS(Concept.class, ConceptId.class),\n+    BUCKETS(Bucket.class, BucketId.class),\n+    C_BLOCKS(CBlock.class, CBlockId.class),\n+    WORKER(WorkerInformation.class, Boolean.class),\n+    EXECUTIONS(ManagedExecution.class, ManagedExecutionId.class),\n+    AUTH_ROLE(Role.class, RoleId.class),\n+    AUTH_USER(User.class, UserId.class),\n+    AUTH_GROUP(Group.class, GroupId.class),\n+    STRUCTURE(StructureNode[].class, Boolean.class),\n+    FORM_CONFIG(FormConfig.class, FormConfigId.class),\n+    WORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class);\n \n     private final Class<?> valueType;\n-\tprivate final Class<?> keyType;\n+    private final Class<?> keyType;\n \n-\t/**\n-\t * Store for identifiable values, with injectors. Store is also cached.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry, Injectable... injectables) {\n+    /**\n+     * Store for identifiable values, with injectors. Store is also cached.\n+     */\n+    public <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry, Injectable... injectables) {\n \n-\t\tfinal CachedStore<IId<T>, T> store = cached(config, environment, validator);\n+        final CachedStore<IId<T>, T> store = cached(config, environment, validator);\n \n-\t\tfor (Injectable injectable : injectables) {\n-\t\t\tstore.inject(injectable);\n-\t\t}\n+        for (Injectable injectable : injectables) {\n+            store.inject(injectable);\n+        }\n \n-\t\tstore.inject(centralRegistry);\n+        store.inject(centralRegistry);\n \n-\t\treturn new IdentifiableStore<>(centralRegistry, store);\n-\t}\n+        return new IdentifiableStore<>(centralRegistry, store);\n+    }\n \n-\t/**\n-\t * Store for identifiable values, without injectors. Store is also cached.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config,Environment environment, Validator validator, CentralRegistry centralRegistry) {\n-\t\treturn identifiable(config, environment, validator, centralRegistry, new SingletonNamespaceCollection(centralRegistry));\n-\t}\n+    /**\n+     * Store for identifiable values, without injectors. Store is also cached.\n+     */\n+    public <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n+        return identifiable(config, environment, validator, centralRegistry, new SingletonNamespaceCollection(centralRegistry));\n+    }\n \n-\t/**\n-\t * General Key-Value store with caching.\n-\t */\n-\tpublic <KEY, VALUE> CachedStore<KEY, VALUE> cached(StorageConfig config, Environment environment, Validator validator) {\n-\t\treturn new CachedStore<>(\n-\t\t\t\tnew SerializingStore<>(\n-\t\t\t\t\t\tconfig,\n-\t\t\t\t\t\tnew XodusStore(environment, this),\n-\t\t\t\t\t\tvalidator,\n-\t\t\t\t\t\tthis\n-\t\t\t\t)\n-\t\t);\n-\t}\n+    /**\n+     * General Key-Value store with caching.\n+     */\n+    public <KEY, VALUE> CachedStore<KEY, VALUE> cached(StorageConfig config, Environment environment, Validator validator) {\n+        return new CachedStore<>(\n+            new SerializingStore<>(\n+                config,\n+                new XodusStore(environment, this),\n+                validator,\n+                this\n+            )\n+        );\n+    }\n \n-\t/**\n-\t * Store holding a single value.\n-\t */\n-\tpublic <VALUE> SingletonStore<VALUE> singleton(StorageConfig config, Environment environment, Validator validator, Injectable... injectables) {\n-\t\treturn new SingletonStore<>(cached(config, environment, validator), injectables);\n-\t}\n+    /**\n+     * Store holding a single value.\n+     */\n+    public <VALUE> SingletonStore<VALUE> singleton(StorageConfig config, Environment environment, Validator validator, Injectable... injectables) {\n+        return new SingletonStore<>(cached(config, environment, validator), injectables);\n+    }\n \n-\t/**\n-\t * Identifiable store with split Data and Metadata.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableStore<T> big(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n-\t\treturn new IdentifiableStore<>(\n-\t\t\t\tcentralRegistry,\n-\t\t\t\tnew CachedStore<>(\n-\t\t\t\t\t\tnew BigStore<>(config, validator, environment, this)\n-\t\t\t\t)\n-\t\t);\n-\t}\n+    /**\n+     * Identifiable store with split Data and Metadata.\n+     */\n+    public <T extends Identifiable<?>> IdentifiableStore<T> big(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n+        return new IdentifiableStore<>(\n+            centralRegistry,\n+            new CachedStore<>(\n+                new BigStore<>(config, validator, environment, this)\n+            )\n+        );\n+    }\n \n-\t/**\n-\t * Big-Store with weakly held cache.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableCachedStore<T> weakBig(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n-\t\treturn new IdentifiableCachedStore<>(\n-\t\t\t\tcentralRegistry,\n-\t\t\t\tnew WeakCachedStore<>(\n-\t\t\t\t\t\tnew BigStore<>(config, validator, environment, this)\n-\t\t\t\t)\n-\t\t);\n-\t}\n+    /**\n+     * Big-Store with weakly held cache.\n+     */\n+    public <T extends Identifiable<?>> IdentifiableCachedStore<T> weakBig(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n+        return new IdentifiableCachedStore<>(\n+            centralRegistry,\n+            new WeakCachedStore<>(\n+                new BigStore<>(config, validator, environment, this)\n+            )\n+        );\n+    }\n \n-\t@Override\n-\tpublic String getXodusName() {\n-\t\treturn name();\n-\t}\n+    @Override\n+    public String getXodusName() {\n+        return name();\n+    }\n }\n",
            "diff_size": 82
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "78",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/241/StoreInfo.java\nindex 6af622007c3..7217feeaee2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/241/StoreInfo.java\n@@ -72,11 +72,10 @@ public enum StoreInfo implements IStoreInfo {\n \tAUTH_GROUP(Group.class, GroupId.class),\n \tSTRUCTURE(StructureNode[].class, Boolean.class),\n \tFORM_CONFIG(FormConfig.class, FormConfigId.class),\n-\tWORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class)\n-\t;\n+\tWORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class);\n \n-    private final Class<?> valueType;\n-\tprivate final Class<?> keyType;\n+\tprivate final Class<?> valueType;\n+private final Class<?> keyType;\n \n \t/**\n \t * Store for identifiable values, with injectors. Store is also cached.\n@@ -97,7 +96,7 @@ public enum StoreInfo implements IStoreInfo {\n \t/**\n \t * Store for identifiable values, without injectors. Store is also cached.\n \t */\n-\tpublic <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config,Environment environment, Validator validator, CentralRegistry centralRegistry) {\n+\tpublic <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n \t\treturn identifiable(config, environment, validator, centralRegistry, new SingletonNamespaceCollection(centralRegistry));\n \t}\n \n@@ -110,8 +109,7 @@ public enum StoreInfo implements IStoreInfo {\n \t\t\t\t\t\tconfig,\n \t\t\t\t\t\tnew XodusStore(environment, this),\n \t\t\t\t\t\tvalidator,\n-\t\t\t\t\t\tthis\n-\t\t\t\t)\n+\t\t\t\t\t\tthis)\n \t\t);\n \t}\n \n@@ -150,4 +148,4 @@ public enum StoreInfo implements IStoreInfo {\n \tpublic String getXodusName() {\n \t\treturn name();\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "column": "4",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 3, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "column": "4",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 3, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/241/StoreInfo.java\nindex 6af622007c3..5e7be03d800 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/241/StoreInfo.java\n@@ -1,7 +1,6 @@\n package com.bakdata.conquery.io.xodus;\n \n import javax.validation.Validator;\n-\n import com.bakdata.conquery.io.jackson.Injectable;\n import com.bakdata.conquery.io.xodus.stores.BigStore;\n import com.bakdata.conquery.io.xodus.stores.CachedStore;\n@@ -53,101 +52,95 @@ import lombok.RequiredArgsConstructor;\n  *\n  * Boolean is used as a placeholder value/class for singleton stores.\n  */\n-@RequiredArgsConstructor\n-@Getter\n+\n+@RequiredArgsConstructor @Getter\n public enum StoreInfo implements IStoreInfo {\n-\tDATASET(Dataset.class, Boolean.class),\n-\tID_MAPPING(PersistentIdMap.class, Boolean.class),\n-\tNAMESPACES(DatasetRegistry.class, Boolean.class),\n-\tSLAVE(ShardNodeInformation.class, Boolean.class),\n-\tDICTIONARIES(Dictionary.class, DictionaryId.class),\n-\tIMPORTS(Import.class, ImportId.class),\n-\tCONCEPTS(Concept.class, ConceptId.class),\n-\tBUCKETS(Bucket.class, BucketId.class),\n-\tC_BLOCKS(CBlock.class, CBlockId.class),\n-\tWORKER(WorkerInformation.class, Boolean.class),\n-\tEXECUTIONS(ManagedExecution.class, ManagedExecutionId.class),\n-\tAUTH_ROLE(Role.class, RoleId.class),\n-\tAUTH_USER(User.class, UserId.class),\n-\tAUTH_GROUP(Group.class, GroupId.class),\n-\tSTRUCTURE(StructureNode[].class, Boolean.class),\n-\tFORM_CONFIG(FormConfig.class, FormConfigId.class),\n-\tWORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class)\n-\t;\n-\n-    private final Class<?> valueType;\n-\tprivate final Class<?> keyType;\n-\n-\t/**\n-\t * Store for identifiable values, with injectors. Store is also cached.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry, Injectable... injectables) {\n-\n-\t\tfinal CachedStore<IId<T>, T> store = cached(config, environment, validator);\n-\n-\t\tfor (Injectable injectable : injectables) {\n-\t\t\tstore.inject(injectable);\n-\t\t}\n-\n-\t\tstore.inject(centralRegistry);\n-\n-\t\treturn new IdentifiableStore<>(centralRegistry, store);\n-\t}\n-\n-\t/**\n-\t * Store for identifiable values, without injectors. Store is also cached.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config,Environment environment, Validator validator, CentralRegistry centralRegistry) {\n-\t\treturn identifiable(config, environment, validator, centralRegistry, new SingletonNamespaceCollection(centralRegistry));\n-\t}\n-\n-\t/**\n-\t * General Key-Value store with caching.\n-\t */\n-\tpublic <KEY, VALUE> CachedStore<KEY, VALUE> cached(StorageConfig config, Environment environment, Validator validator) {\n-\t\treturn new CachedStore<>(\n-\t\t\t\tnew SerializingStore<>(\n-\t\t\t\t\t\tconfig,\n-\t\t\t\t\t\tnew XodusStore(environment, this),\n-\t\t\t\t\t\tvalidator,\n-\t\t\t\t\t\tthis\n-\t\t\t\t)\n-\t\t);\n-\t}\n-\n-\t/**\n-\t * Store holding a single value.\n-\t */\n-\tpublic <VALUE> SingletonStore<VALUE> singleton(StorageConfig config, Environment environment, Validator validator, Injectable... injectables) {\n-\t\treturn new SingletonStore<>(cached(config, environment, validator), injectables);\n-\t}\n-\n-\t/**\n-\t * Identifiable store with split Data and Metadata.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableStore<T> big(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n-\t\treturn new IdentifiableStore<>(\n-\t\t\t\tcentralRegistry,\n-\t\t\t\tnew CachedStore<>(\n-\t\t\t\t\t\tnew BigStore<>(config, validator, environment, this)\n-\t\t\t\t)\n-\t\t);\n-\t}\n-\n-\t/**\n-\t * Big-Store with weakly held cache.\n-\t */\n-\tpublic <T extends Identifiable<?>> IdentifiableCachedStore<T> weakBig(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n-\t\treturn new IdentifiableCachedStore<>(\n-\t\t\t\tcentralRegistry,\n-\t\t\t\tnew WeakCachedStore<>(\n-\t\t\t\t\t\tnew BigStore<>(config, validator, environment, this)\n-\t\t\t\t)\n-\t\t);\n-\t}\n-\n-\t@Override\n-\tpublic String getXodusName() {\n-\t\treturn name();\n-\t}\n-}\n+ DATASET  (Dataset.class, Boolean.class),\n+ ID_MAPPING  (PersistentIdMap.class, Boolean.class),\n+ NAMESPACES  (DatasetRegistry.class, Boolean.class),\n+ SLAVE  (ShardNodeInformation.class, Boolean.class),\n+ DICTIONARIES  (Dictionary.class, DictionaryId.class),\n+ IMPORTS  (Import.class, ImportId.class),\n+ CONCEPTS  (Concept.class, ConceptId.class),\n+ BUCKETS  (Bucket.class, BucketId.class),\n+ C_BLOCKS  (CBlock.class, CBlockId.class),\n+ WORKER  (WorkerInformation.class, Boolean.class),\n+ EXECUTIONS  (ManagedExecution.class, ManagedExecutionId.class),\n+ AUTH_ROLE  (Role.class, RoleId.class),\n+ AUTH_USER  (User.class, UserId.class),\n+ AUTH_GROUP  (Group.class, GroupId.class),\n+ STRUCTURE  (StructureNode[].class, Boolean.class),\n+ FORM_CONFIG  (FormConfig.class, FormConfigId.class),\n+ WORKER_TO_BUCKETS  (WorkerToBucketsMap.class, Boolean.class);\n+\n+ private final Class<?> valueType;\n+ private final Class<?> keyType;\n+\n+ /**\n+  * Store for identifiable values, with injectors. Store is also cached.\n+  */\n+\n+ public <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry, Injectable... injectables) {\n+  final CachedStore<IId<T>, T> store = cached(config, environment, validator);\n+  for(Injectable injectable :injectables) {\n+   store.inject(injectable);\n+  }\n+  store.inject(centralRegistry);\n+  return new IdentifiableStore<>(centralRegistry, store);\n+ }\n+\n+ /**\n+  * Store for identifiable values, without injectors. Store is also cached.\n+  */\n+\n+ public <T extends Identifiable<?>> IdentifiableStore<T> identifiable(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n+  return identifiable(config,\n+                      environment,\n+                      validator,\n+                      centralRegistry,\n+                      new SingletonNamespaceCollection(centralRegistry));\n+ }\n+\n+ /**\n+  * General Key-Value store with caching.\n+  */\n+\n+ public <KEY, VALUE> CachedStore<KEY, VALUE> cached(StorageConfig config, Environment environment, Validator validator) {\n+  return new CachedStore<>(new SerializingStore<>(config, new XodusStore(environment, this), validator, this));\n+ }\n+\n+ /**\n+  * Store holding a single value.\n+  */\n+\n+ public <VALUE> SingletonStore<VALUE> singleton(StorageConfig config, Environment environment, Validator validator, Injectable... injectables) {\n+  return new SingletonStore<>(cached(config, environment, validator), injectables);\n+ }\n+\n+ /**\n+  * Identifiable store with split Data and Metadata.\n+  */\n+\n+ public <T extends Identifiable<?>> IdentifiableStore<T> big(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n+  return new IdentifiableStore<>(\n+   centralRegistry,\n+   new CachedStore<>(new BigStore<>(config, validator, environment, this))\n+  );\n+ }\n+\n+ /**\n+  * Big-Store with weakly held cache.\n+  */\n+\n+ public <T extends Identifiable<?>> IdentifiableCachedStore<T> weakBig(StorageConfig config, Environment environment, Validator validator, CentralRegistry centralRegistry) {\n+  return new IdentifiableCachedStore<>(\n+   centralRegistry,\n+   new WeakCachedStore<>(new BigStore<>(config, validator, environment, this))\n+  );\n+ }\n+\n+ @Override\n+ public String getXodusName() {\n+  return name();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 98
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/241/StoreInfo.java\nindex 6af622007c3..87c6bf87c2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/241/StoreInfo.java\n@@ -74,8 +74,8 @@ public enum StoreInfo implements IStoreInfo {\n \tFORM_CONFIG(FormConfig.class, FormConfigId.class),\n \tWORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class)\n \t;\n+\tprivate final Class<?> valueType;\n \n-    private final Class<?> valueType;\n \tprivate final Class<?> keyType;\n \n \t/**\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/241/StoreInfo.java\nindex 6af622007c3..0b864eb4099 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/241/StoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/241/StoreInfo.java\n@@ -74,8 +74,7 @@ public enum StoreInfo implements IStoreInfo {\n \tFORM_CONFIG(FormConfig.class, FormConfigId.class),\n \tWORKER_TO_BUCKETS(WorkerToBucketsMap.class, Boolean.class)\n \t;\n-\n-    private final Class<?> valueType;\n+\tprivate final Class<?> valueType;\n \tprivate final Class<?> keyType;\n \n \t/**\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
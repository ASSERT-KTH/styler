{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1933",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1933/DijkstraPriorityQueueImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1933/DijkstraPriorityQueueImpl.java\nindex 2a01af8560c..9eeb3685edb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1933/DijkstraPriorityQueueImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1933/DijkstraPriorityQueueImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.shortestpath;\n \n import java.util.Comparator;\n@@ -27,137 +28,136 @@ import org.neo4j.graphdb.Node;\n /**\n  * Implementation of {@link DijkstraPriorityQueue} with just a normal java\n  * priority queue.\n- * @param <CostType>\n- *            The datatype the path weigths are represented by.\n+ *\n+ * @param <CostType> The datatype the path weigths are represented by.\n  */\n public class DijkstraPriorityQueueImpl<CostType> implements\n     DijkstraPriorityQueue<CostType>\n {\n-    /**\n-     * Data structure used for the internal priority queue\n-     */\n-    protected class pathObject\n-    {\n-        private Node node;\n-        private CostType cost;\n-\n-        public pathObject( Node node, CostType cost )\n-        {\n-            this.node = node;\n-            this.cost = cost;\n-        }\n-\n-        public CostType getCost()\n-        {\n-            return cost;\n-        }\n+  /**\n+   * Data structure used for the internal priority queue\n+   */\n+  protected class pathObject\n+  {\n+    private Node node;\n+    private CostType cost;\n \n-        public Node getNode()\n-        {\n-            return node;\n-        }\n-\n-        /*\n-         * Equals is only defined from the stored node, so we can use it to find\n-         * entries in the queue\n-         */\n-        @Override\n-        public boolean equals( Object obj )\n-        {\n-            if ( this == obj )\n-            {\n-                return true;\n-            }\n-            if ( obj == null )\n-            {\n-                return false;\n-            }\n-            if ( getClass() != obj.getClass() )\n-            {\n-                return false;\n-            }\n-            final pathObject other = (pathObject) obj;\n-            if ( node == null )\n-            {\n-                if ( other.node != null )\n-                {\n-                    return false;\n-                }\n-            }\n-            else if ( !node.equals( other.node ) )\n-            {\n-                return false;\n-            }\n-            return true;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            int result = node != null ? node.hashCode() : 0;\n-            result = 31 * result + (cost != null ? cost.hashCode() : 0);\n-            return result;\n-        }\n-    }\n-\n-    Comparator<CostType> costComparator;\n-    PriorityQueue<pathObject> queue;\n-\n-    public DijkstraPriorityQueueImpl( final Comparator<CostType> costComparator )\n+    public pathObject(Node node, CostType cost)\n     {\n-        super();\n-        this.costComparator = costComparator;\n-        queue = new PriorityQueue<>( 11, ( o1, o2 ) -> costComparator.compare( o1.getCost(), o2.getCost() ) );\n+      this.node = node;\n+      this.cost = cost;\n     }\n \n-    @Override\n-    public void insertValue( Node node, CostType value )\n+    public CostType getCost()\n     {\n-        queue.add( new pathObject( node, value ) );\n+      return cost;\n     }\n \n-    @Override\n-    public void decreaseValue( Node node, CostType newValue )\n+    public Node getNode()\n     {\n-        pathObject po = new pathObject( node, newValue );\n-        // Shake the queue\n-        // remove() will remove the old pathObject\n-        // BUT IT TAKES A LOT OF TIME FOR SOME REASON\n-        // queue.remove( po );\n-        queue.add( po );\n+      return node;\n     }\n \n-    /**\n-     * Retrieve and remove\n+    /*\n+     * Equals is only defined from the stored node, so we can use it to find\n+     * entries in the queue\n      */\n     @Override\n-    public Node extractMin()\n+    public boolean equals(Object obj)\n     {\n-        pathObject po = queue.poll();\n-        if ( po == null )\n+      if (this == obj)\n+      {\n+        return true;\n+      }\n+      if (obj == null)\n+      {\n+        return false;\n+      }\n+      if (getClass() != obj.getClass())\n+      {\n+        return false;\n+      }\n+      final pathObject other = (pathObject) obj;\n+      if (node == null)\n+      {\n+        if (other.node != null)\n         {\n-            return null;\n+          return false;\n         }\n-        return po.getNode();\n+      } else if (!node.equals(other.node))\n+      {\n+        return false;\n+      }\n+      return true;\n     }\n \n-    /**\n-     * Retrieve without removing\n-     */\n     @Override\n-    public Node peek()\n+    public int hashCode()\n     {\n-        pathObject po = queue.peek();\n-        if ( po == null )\n-        {\n-            return null;\n-        }\n-        return po.getNode();\n+      int result = node != null ? node.hashCode() : 0;\n+      result = 31 * result + (cost != null ? cost.hashCode() : 0);\n+      return result;\n     }\n+  }\n \n-    @Override\n-    public boolean isEmpty()\n+  Comparator<CostType> costComparator;\n+  PriorityQueue<pathObject> queue;\n+\n+  public DijkstraPriorityQueueImpl(final Comparator<CostType> costComparator)\n+  {\n+    super();\n+    this.costComparator = costComparator;\n+    queue = new PriorityQueue<>(11, (o1, o2) -> costComparator.compare(o1.getCost(), o2.getCost()));\n+  }\n+\n+  @Override\n+  public void insertValue(Node node, CostType value)\n+  {\n+    queue.add(new pathObject(node, value));\n+  }\n+\n+  @Override\n+  public void decreaseValue(Node node, CostType newValue)\n+  {\n+    pathObject po = new pathObject(node, newValue);\n+    // Shake the queue\n+    // remove() will remove the old pathObject\n+    // BUT IT TAKES A LOT OF TIME FOR SOME REASON\n+    // queue.remove( po );\n+    queue.add(po);\n+  }\n+\n+  /**\n+   * Retrieve and remove\n+   */\n+  @Override\n+  public Node extractMin()\n+  {\n+    pathObject po = queue.poll();\n+    if (po == null)\n     {\n-        return queue.isEmpty();\n+      return null;\n     }\n+    return po.getNode();\n+  }\n+\n+  /**\n+   * Retrieve without removing\n+   */\n+  @Override\n+  public Node peek()\n+  {\n+    pathObject po = queue.peek();\n+    if (po == null)\n+    {\n+      return null;\n+    }\n+    return po.getNode();\n+  }\n+\n+  @Override\n+  public boolean isEmpty()\n+  {\n+    return queue.isEmpty();\n+  }\n }\n",
            "diff_size": 182
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "37",
                    "severity": "error",
                    "message": "'{' at column 37 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1933/DijkstraPriorityQueueImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1933/DijkstraPriorityQueueImpl.java\nindex 2a01af8560c..a45791e554d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1933/DijkstraPriorityQueueImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1933/DijkstraPriorityQueueImpl.java\n@@ -31,8 +31,7 @@ import org.neo4j.graphdb.Node;\n  *            The datatype the path weigths are represented by.\n  */\n public class DijkstraPriorityQueueImpl<CostType> implements\n-    DijkstraPriorityQueue<CostType>\n-{\n+    DijkstraPriorityQueue<CostType> {\n     /**\n      * Data structure used for the internal priority queue\n      */\n@@ -68,11 +67,13 @@ public class DijkstraPriorityQueueImpl<CostType> implements\n             {\n                 return true;\n             }\n-            if ( obj == null )\n+\n+if ( obj == null )\n             {\n                 return false;\n             }\n-            if ( getClass() != obj.getClass() )\n+\n+if ( getClass() != obj.getClass() )\n             {\n                 return false;\n             }\n@@ -95,7 +96,7 @@ public class DijkstraPriorityQueueImpl<CostType> implements\n         public int hashCode()\n         {\n             int result = node != null ? node.hashCode() : 0;\n-            result = 31 * result + (cost != null ? cost.hashCode() : 0);\n+            result = 31 * result + (cost != null ? cost.hashCode() : 0 );\n             return result;\n         }\n     }\n@@ -138,7 +139,8 @@ public class DijkstraPriorityQueueImpl<CostType> implements\n         {\n             return null;\n         }\n-        return po.getNode();\n+\n+return po.getNode();\n     }\n \n     /**\n@@ -152,7 +154,8 @@ public class DijkstraPriorityQueueImpl<CostType> implements\n         {\n             return null;\n         }\n-        return po.getNode();\n+\n+return po.getNode();\n     }\n \n     @Override\n@@ -160,4 +163,4 @@ public class DijkstraPriorityQueueImpl<CostType> implements\n     {\n         return queue.isEmpty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
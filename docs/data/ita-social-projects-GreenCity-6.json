{
    "project_name": "ita-social-projects-GreenCity",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "191",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 129).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                    ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n        }\n        return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNewsByTags(tags, openedEcoNewsId));\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/6/EcoNewsController.java\nindex adcb2cf9203..1fda164e599 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/6/EcoNewsController.java\n@@ -49,9 +49,9 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get three last eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/newest\")\n     public ResponseEntity<List<EcoNewsDto>> getThreeLastEcoNews() {\n@@ -69,20 +69,20 @@ public class EcoNewsController {\n \n     @ApiOperation(value = \"Add new eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 201, message = HttpStatuses.CREATED,\n-                    response = AddEcoNewsDtoResponse.class),\n-            @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 201, message = HttpStatuses.CREATED,\n+            response = AddEcoNewsDtoResponse.class),\n+        @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @PostMapping(consumes = {MediaType.APPLICATION_JSON_UTF8_VALUE, MediaType.MULTIPART_FORM_DATA_VALUE})\n     public ResponseEntity<AddEcoNewsDtoResponse> save(\n-            @ApiParam(value = \"Add Eco News Request\", required = true)\n-            @RequestPart @ValidEcoNewsDtoRequest AddEcoNewsDtoRequest addEcoNewsDtoRequest,\n-            @ApiParam(value = \"Image of eco news\")\n-            @RequestPart(required = false) MultipartFile image,\n-            @ApiIgnore Principal principal) {\n+        @ApiParam(value = \"Add Eco News Request\", required = true)\n+        @RequestPart @ValidEcoNewsDtoRequest AddEcoNewsDtoRequest addEcoNewsDtoRequest,\n+        @ApiParam(value = \"Image of eco news\")\n+        @RequestPart(required = false) MultipartFile image,\n+        @ApiIgnore Principal principal) {\n         return ResponseEntity.status(HttpStatus.CREATED).body(\n-                ecoNewsService.save(addEcoNewsDtoRequest, image, principal.getName()));\n+            ecoNewsService.save(addEcoNewsDtoRequest, image, principal.getName()));\n     }\n \n     /**\n@@ -93,9 +93,9 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get eco news by id.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/{id}\")\n     public ResponseEntity<EcoNewsDto> getEcoNewsById(@PathVariable Long id) {\n@@ -110,9 +110,9 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Find all eco news by page.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"\")\n     @ApiPageable\n@@ -129,10 +129,10 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Delete eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN)\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN)\n     })\n     @DeleteMapping(\"/{econewsId}\")\n     public ResponseEntity<Object> delete(@PathVariable Long econewsId) {\n@@ -148,20 +148,20 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get eco news by tags\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/tags\")\n     @ApiPageable\n     public ResponseEntity<PageableDto<EcoNewsDto>> getEcoNews(\n-            @ApiIgnore Pageable page,\n-            @ApiParam(value = \"Tags to filter (if do not input tags get all)\")\n-            @RequestParam(required = false) List<String> tags\n+        @ApiIgnore Pageable page,\n+        @ApiParam(value = \"Tags to filter (if do not input tags get all)\")\n+        @RequestParam(required = false) List<String> tags\n     ) {\n         if (tags == null || tags.isEmpty()) {\n             return ResponseEntity.status(HttpStatus.OK).body(\n-                    ecoNewsService.findAll(page));\n+                ecoNewsService.findAll(page));\n         }\n         return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.find(page, tags));\n     }\n@@ -174,20 +174,21 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get three recommended eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/recommended\")\n     public ResponseEntity<List<EcoNewsDto>> getThreeRecommendedEcoNews(\n-            @ApiParam(value = \"Tags for priorities(if do not input tags get without priorities)\")\n-            @RequestParam(required = false) List<String> tags,\n-            @RequestParam(required = true) Long openedEcoNewsId\n+        @ApiParam(value = \"Tags for priorities(if do not input tags get without priorities)\")\n+        @RequestParam(required = false) List<String> tags,\n+        @RequestParam(required = true) Long openedEcoNewsId\n     ) {\n         if (tags == null || tags.isEmpty()) {\n             return ResponseEntity.status(HttpStatus.OK).body(\n-                    ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n+                ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n         }\n-        return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNewsByTags(tags, openedEcoNewsId));\n+        return ResponseEntity.status(HttpStatus.OK)\n+            .body(ecoNewsService.getThreeRecommendedEcoNewsByTags(tags, openedEcoNewsId));\n     }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 68.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/naturalize/6/EcoNewsController.java\nindex adcb2cf9203..03031787091 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/naturalize/6/EcoNewsController.java\n@@ -49,7 +49,7 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get three last eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n+    @ApiResponse(code = 200, message = HttpStatuses.OK),\n             @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n             @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n@@ -65,24 +65,20 @@ public class EcoNewsController {\n      * @return dto {@link AddEcoNewsDtoResponse} instance.\n      * @author Yuriy Olkhovskyi & Kovaliv Taras.\n      */\n-\n-\n-    @ApiOperation(value = \"Add new eco news.\")\n+@ApiOperation(value = \"Add new eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 201, message = HttpStatuses.CREATED,\n-                    response = AddEcoNewsDtoResponse.class),\n-            @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n+    @ApiResponse(code = 201, message = HttpStatuses.CREATED, response = AddEcoNewsDtoResponse.class),\n+@ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n             @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @PostMapping(consumes = {MediaType.APPLICATION_JSON_UTF8_VALUE, MediaType.MULTIPART_FORM_DATA_VALUE})\n     public ResponseEntity<AddEcoNewsDtoResponse> save(\n-            @ApiParam(value = \"Add Eco News Request\", required = true)\n+    @ApiParam(value = \"Add Eco News Request\", required = true)\n             @RequestPart @ValidEcoNewsDtoRequest AddEcoNewsDtoRequest addEcoNewsDtoRequest,\n             @ApiParam(value = \"Image of eco news\")\n             @RequestPart(required = false) MultipartFile image,\n             @ApiIgnore Principal principal) {\n-        return ResponseEntity.status(HttpStatus.CREATED).body(\n-                ecoNewsService.save(addEcoNewsDtoRequest, image, principal.getName()));\n+    return ResponseEntity.status(HttpStatus.CREATED).body(ecoNewsService.save(addEcoNewsDtoRequest, image, principal.getName()));\n     }\n \n     /**\n@@ -93,7 +89,7 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get eco news by id.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n+    @ApiResponse(code = 200, message = HttpStatuses.OK),\n             @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n             @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n@@ -110,7 +106,7 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Find all eco news by page.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n+    @ApiResponse(code = 200, message = HttpStatuses.OK),\n             @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n             @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n@@ -129,7 +125,7 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Delete eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n+    @ApiResponse(code = 200, message = HttpStatuses.OK),\n             @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n             @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n             @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN)\n@@ -148,21 +144,18 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get eco news by tags\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n+    @ApiResponse(code = 200, message = HttpStatuses.OK),\n             @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n             @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/tags\")\n     @ApiPageable\n-    public ResponseEntity<PageableDto<EcoNewsDto>> getEcoNews(\n-            @ApiIgnore Pageable page,\n+    public ResponseEntity<PageableDto<EcoNewsDto>> getEcoNews(@ApiIgnore Pageable page,\n             @ApiParam(value = \"Tags to filter (if do not input tags get all)\")\n-            @RequestParam(required = false) List<String> tags\n-    ) {\n+            @RequestParam(required = false) List<String> tags) {\n         if (tags == null || tags.isEmpty()) {\n-            return ResponseEntity.status(HttpStatus.OK).body(\n-                    ecoNewsService.findAll(page));\n-        }\n+            return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.findAll(page));\n+    }\n         return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.find(page, tags));\n     }\n \n@@ -174,20 +167,18 @@ public class EcoNewsController {\n      */\n     @ApiOperation(value = \"Get three recommended eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n+    @ApiResponse(code = 200, message = HttpStatuses.OK),\n             @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n             @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/recommended\")\n     public ResponseEntity<List<EcoNewsDto>> getThreeRecommendedEcoNews(\n-            @ApiParam(value = \"Tags for priorities(if do not input tags get without priorities)\")\n+    @ApiParam(value = \"Tags for priorities(if do not input tags get without priorities)\")\n             @RequestParam(required = false) List<String> tags,\n-            @RequestParam(required = true) Long openedEcoNewsId\n-    ) {\n+            @RequestParam(required = true) Long openedEcoNewsId) {\n         if (tags == null || tags.isEmpty()) {\n-            return ResponseEntity.status(HttpStatus.OK).body(\n-                    ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n-        }\n+            return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n+    }\n         return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNewsByTags(tags, openedEcoNewsId));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 283).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/6/EcoNewsController.java\nindex adcb2cf9203..0265fb534ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/6/EcoNewsController.java\n@@ -13,10 +13,8 @@ import io.swagger.annotations.ApiOperation;\n import io.swagger.annotations.ApiParam;\n import io.swagger.annotations.ApiResponse;\n import io.swagger.annotations.ApiResponses;\n-\n import java.security.Principal;\n import java.util.List;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.data.domain.Pageable;\n import org.springframework.http.HttpStatus;\n@@ -36,6 +34,8 @@ public class EcoNewsController {\n     /**\n      * Constructor with parameters.\n      */\n+\n+\n     @Autowired\n     public EcoNewsController(EcoNewsService ecoNewsService) {\n         this.ecoNewsService = ecoNewsService;\n@@ -47,11 +47,13 @@ public class EcoNewsController {\n      * @return list of {@link EcoNewsDto} instances.\n      * @author Yuriy Olkhovskyi.\n      */\n+\n+\n     @ApiOperation(value = \"Get three last eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/newest\")\n     public ResponseEntity<List<EcoNewsDto>> getThreeLastEcoNews() {\n@@ -69,20 +71,14 @@ public class EcoNewsController {\n \n     @ApiOperation(value = \"Add new eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 201, message = HttpStatuses.CREATED,\n-                    response = AddEcoNewsDtoResponse.class),\n-            @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 201, message = HttpStatuses.CREATED, response = AddEcoNewsDtoResponse.class),\n+        @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @PostMapping(consumes = {MediaType.APPLICATION_JSON_UTF8_VALUE, MediaType.MULTIPART_FORM_DATA_VALUE})\n-    public ResponseEntity<AddEcoNewsDtoResponse> save(\n-            @ApiParam(value = \"Add Eco News Request\", required = true)\n-            @RequestPart @ValidEcoNewsDtoRequest AddEcoNewsDtoRequest addEcoNewsDtoRequest,\n-            @ApiParam(value = \"Image of eco news\")\n-            @RequestPart(required = false) MultipartFile image,\n-            @ApiIgnore Principal principal) {\n-        return ResponseEntity.status(HttpStatus.CREATED).body(\n-                ecoNewsService.save(addEcoNewsDtoRequest, image, principal.getName()));\n+    public ResponseEntity<AddEcoNewsDtoResponse> save(@ApiParam(value = \"Add Eco News Request\", required = true) @RequestPart @ValidEcoNewsDtoRequest AddEcoNewsDtoRequest addEcoNewsDtoRequest, @ApiParam(value = \"Image of eco news\") @RequestPart(required = false) MultipartFile image,\n+                                                      @ApiIgnore Principal principal) {\n+        return ResponseEntity.status(HttpStatus.CREATED).body(ecoNewsService.save(addEcoNewsDtoRequest, image, principal.getName()));\n     }\n \n     /**\n@@ -91,11 +87,13 @@ public class EcoNewsController {\n      * @return {@link EcoNewsDto} instance.\n      * @author Kovaliv Taras\n      */\n+\n+\n     @ApiOperation(value = \"Get eco news by id.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/{id}\")\n     public ResponseEntity<EcoNewsDto> getEcoNewsById(@PathVariable Long id) {\n@@ -108,11 +106,13 @@ public class EcoNewsController {\n      * @return PageableDto of {@link EcoNewsDto} instances.\n      * @author Yuriy Olkhovskyi & Kovaliv Taras.\n      */\n+\n+\n     @ApiOperation(value = \"Find all eco news by page.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"\")\n     @ApiPageable\n@@ -127,12 +127,14 @@ public class EcoNewsController {\n      * @return id of deleted {@link EcoNews}.\n      * @author Yuriy Olkhovskyi.\n      */\n+\n+\n     @ApiOperation(value = \"Delete eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN)\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 303, message = HttpStatuses.SEE_OTHER),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN)\n     })\n     @DeleteMapping(\"/{econewsId}\")\n     public ResponseEntity<Object> delete(@PathVariable Long econewsId) {\n@@ -146,22 +148,21 @@ public class EcoNewsController {\n      * @return list of {@link EcoNewsDto} instances.\n      * @author Kovaliv Taras.\n      */\n+\n+\n     @ApiOperation(value = \"Get eco news by tags\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/tags\")\n     @ApiPageable\n     public ResponseEntity<PageableDto<EcoNewsDto>> getEcoNews(\n-            @ApiIgnore Pageable page,\n-            @ApiParam(value = \"Tags to filter (if do not input tags get all)\")\n-            @RequestParam(required = false) List<String> tags\n-    ) {\n+        @ApiIgnore Pageable page,\n+        @ApiParam(value = \"Tags to filter (if do not input tags get all)\") @RequestParam(required = false) List<String> tags) {\n         if (tags == null || tags.isEmpty()) {\n-            return ResponseEntity.status(HttpStatus.OK).body(\n-                    ecoNewsService.findAll(page));\n+            return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.findAll(page));\n         }\n         return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.find(page, tags));\n     }\n@@ -172,22 +173,21 @@ public class EcoNewsController {\n      * @return list of three recommended {@link EcoNewsDto} instances.\n      * @author Yurii Zhurakovskyi.\n      */\n+\n+\n     @ApiOperation(value = \"Get three recommended eco news.\")\n     @ApiResponses(value = {\n-            @ApiResponse(code = 200, message = HttpStatuses.OK),\n-            @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n-            @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n+        @ApiResponse(code = 200, message = HttpStatuses.OK),\n+        @ApiResponse(code = 400, message = HttpStatuses.BAD_REQUEST),\n+        @ApiResponse(code = 403, message = HttpStatuses.FORBIDDEN),\n     })\n     @GetMapping(\"/recommended\")\n     public ResponseEntity<List<EcoNewsDto>> getThreeRecommendedEcoNews(\n-            @ApiParam(value = \"Tags for priorities(if do not input tags get without priorities)\")\n-            @RequestParam(required = false) List<String> tags,\n-            @RequestParam(required = true) Long openedEcoNewsId\n-    ) {\n+        @ApiParam(value = \"Tags for priorities(if do not input tags get without priorities)\") @RequestParam(required = false) List<String> tags,\n+        @RequestParam(required = true) Long openedEcoNewsId) {\n         if (tags == null || tags.isEmpty()) {\n-            return ResponseEntity.status(HttpStatus.OK).body(\n-                    ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n+            return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n         }\n         return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNewsByTags(tags, openedEcoNewsId));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "column": "129",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/6/EcoNewsController.java\nindex adcb2cf9203..ffdaa404599 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/6/EcoNewsController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/6/EcoNewsController.java\n@@ -188,6 +188,4 @@ public class EcoNewsController {\n             return ResponseEntity.status(HttpStatus.OK).body(\n                     ecoNewsService.getThreeRecommendedEcoNews(openedEcoNewsId));\n         }\n-        return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNewsByTags(tags, openedEcoNewsId));\n-    }\n-}\n+        return ResponseEntity.status(HttpStatus.OK).body(ecoNewsService.getThreeRecommendedEcoNewsByTags(tags,openedEcoNewsId));} }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
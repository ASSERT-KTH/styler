{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2019",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "115",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2019/ArrayQueueOutOfOrderSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2019/ArrayQueueOutOfOrderSequence.java\nindex 7eefaadd337..0a134cde5ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2019/ArrayQueueOutOfOrderSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2019/ArrayQueueOutOfOrderSequence.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.concurrent.TimeoutException;\n@@ -28,121 +29,120 @@ import static java.lang.String.format;\n  */\n public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n {\n-    // odd means updating, even means no one is updating\n-    private volatile int version;\n-    private volatile long highestGapFreeNumber;\n-    private volatile long[] highestGapFreeMeta;\n-    private final SequenceArray outOfOrderQueue;\n-    private long[] metaArray;\n-    private volatile long highestEverSeen;\n-\n-    public ArrayQueueOutOfOrderSequence( long startingNumber, int initialArraySize, long[] initialMeta )\n-    {\n-        this.highestGapFreeNumber = startingNumber;\n-        this.highestEverSeen = startingNumber;\n-        this.highestGapFreeMeta = initialMeta.clone();\n-        this.metaArray = initialMeta.clone();\n-        this.outOfOrderQueue = new SequenceArray( initialMeta.length + 1, initialArraySize );\n-    }\n-\n-    @Override\n-    public synchronized boolean offer( long number, long[] meta )\n+  // odd means updating, even means no one is updating\n+  private volatile int version;\n+  private volatile long highestGapFreeNumber;\n+  private volatile long[] highestGapFreeMeta;\n+  private final SequenceArray outOfOrderQueue;\n+  private long[] metaArray;\n+  private volatile long highestEverSeen;\n+\n+  public ArrayQueueOutOfOrderSequence(long startingNumber, int initialArraySize, long[] initialMeta)\n+  {\n+    this.highestGapFreeNumber = startingNumber;\n+    this.highestEverSeen = startingNumber;\n+    this.highestGapFreeMeta = initialMeta.clone();\n+    this.metaArray = initialMeta.clone();\n+    this.outOfOrderQueue = new SequenceArray(initialMeta.length + 1, initialArraySize);\n+  }\n+\n+  @Override\n+  public synchronized boolean offer(long number, long[] meta)\n+  {\n+    highestEverSeen = Math.max(highestEverSeen, number);\n+    if (highestGapFreeNumber + 1 == number)\n     {\n-        highestEverSeen = Math.max( highestEverSeen, number );\n-        if ( highestGapFreeNumber + 1 == number )\n-        {\n-            version++;\n-            highestGapFreeNumber = outOfOrderQueue.pollHighestGapFree( number, metaArray );\n-            highestGapFreeMeta = highestGapFreeNumber == number ? meta : metaArray.clone();\n-            version++;\n-            notifyAll();\n-            return true;\n-        }\n-\n-        outOfOrderQueue.offer( highestGapFreeNumber, number, pack( meta ) );\n-        return false;\n+      version++;\n+      highestGapFreeNumber = outOfOrderQueue.pollHighestGapFree(number, metaArray);\n+      highestGapFreeMeta = highestGapFreeNumber == number ? meta : metaArray.clone();\n+      version++;\n+      notifyAll();\n+      return true;\n     }\n \n-    @Override\n-    public long highestEverSeen()\n+    outOfOrderQueue.offer(highestGapFreeNumber, number, pack(meta));\n+    return false;\n+  }\n+\n+  @Override\n+  public long highestEverSeen()\n+  {\n+    return this.highestEverSeen;\n+  }\n+\n+  private long[] pack(long[] meta)\n+  {\n+    metaArray = meta;\n+    return metaArray;\n+  }\n+\n+  @Override\n+  public long[] get()\n+  {\n+    long number;\n+    long[] meta;\n+    while (true)\n     {\n-        return this.highestEverSeen;\n+      int versionBefore = version;\n+      if ((versionBefore & 1) == 1)\n+      {   // Someone else is updating those values as we speak, go another round\n+        continue;\n+      }\n+\n+      number = highestGapFreeNumber;\n+      meta = highestGapFreeMeta;\n+      if (version == versionBefore)\n+      {   // We read a consistent version of these two values\n+        break;\n+      }\n     }\n \n-    private long[] pack( long[] meta )\n-    {\n-        metaArray = meta;\n-        return metaArray;\n-    }\n-\n-    @Override\n-    public long[] get()\n-    {\n-        long number;\n-        long[] meta;\n-        while ( true )\n-        {\n-            int versionBefore = version;\n-            if ( (versionBefore & 1) == 1 )\n-            {   // Someone else is updating those values as we speak, go another round\n-                continue;\n-            }\n-\n-            number = highestGapFreeNumber;\n-            meta = highestGapFreeMeta;\n-            if ( version == versionBefore )\n-            {   // We read a consistent version of these two values\n-                break;\n-            }\n-        }\n-\n-        return createResult( number, meta );\n-    }\n-\n-    @Override\n-    public synchronized void await( long awaitedNumber, long timeoutMillis ) throws TimeoutException, InterruptedException\n-    {\n-        long endTime = System.currentTimeMillis() + timeoutMillis;\n-        while ( awaitedNumber > highestGapFreeNumber )\n-        {\n-            long timeLeft = endTime - System.currentTimeMillis();\n-            if ( timeLeft > 0 )\n-            {\n-                wait( timeLeft );\n-            }\n-            else\n-            {\n-                throw new TimeoutException( \"Awaited number was not reached\" );\n-            }\n-        }\n-    }\n-\n-    private long[] createResult( long number, long[] meta )\n-    {\n-        long[] result = new long[meta.length + 1];\n-        result[0] = number;\n-        System.arraycopy( meta, 0, result, 1, meta.length );\n-        return result;\n-    }\n-\n-    @Override\n-    public long getHighestGapFreeNumber()\n-    {\n-        return highestGapFreeNumber;\n-    }\n-\n-    @Override\n-    public synchronized void set( long number, long[] meta )\n-    {\n-        highestEverSeen = number;\n-        highestGapFreeNumber = number;\n-        highestGapFreeMeta = meta;\n-        outOfOrderQueue.clear();\n-    }\n+    return createResult(number, meta);\n+  }\n \n-    @Override\n-    public synchronized String toString()\n+  @Override\n+  public synchronized void await(long awaitedNumber, long timeoutMillis) throws TimeoutException, InterruptedException\n+  {\n+    long endTime = System.currentTimeMillis() + timeoutMillis;\n+    while (awaitedNumber > highestGapFreeNumber)\n     {\n-        return format( \"out-of-order-sequence:%d %d [%s]\", highestEverSeen, highestGapFreeNumber, outOfOrderQueue );\n+      long timeLeft = endTime - System.currentTimeMillis();\n+      if (timeLeft > 0)\n+      {\n+        wait(timeLeft);\n+      } else\n+      {\n+        throw new TimeoutException(\"Awaited number was not reached\");\n+      }\n     }\n+  }\n+\n+  private long[] createResult(long number, long[] meta)\n+  {\n+    long[] result = new long[meta.length + 1];\n+    result[0] = number;\n+    System.arraycopy(meta, 0, result, 1, meta.length);\n+    return result;\n+  }\n+\n+  @Override\n+  public long getHighestGapFreeNumber()\n+  {\n+    return highestGapFreeNumber;\n+  }\n+\n+  @Override\n+  public synchronized void set(long number, long[] meta)\n+  {\n+    highestEverSeen = number;\n+    highestGapFreeNumber = number;\n+    highestGapFreeMeta = meta;\n+    outOfOrderQueue.clear();\n+  }\n+\n+  @Override\n+  public synchronized String toString()\n+  {\n+    return format(\"out-of-order-sequence:%d %d [%s]\", highestEverSeen, highestGapFreeNumber, outOfOrderQueue);\n+  }\n }\n",
            "diff_size": 183
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "108",
                    "column": "30",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2019/ArrayQueueOutOfOrderSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2019/ArrayQueueOutOfOrderSequence.java\nindex 7eefaadd337..eb0f0a15b3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2019/ArrayQueueOutOfOrderSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2019/ArrayQueueOutOfOrderSequence.java\n@@ -83,15 +83,17 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n         while ( true )\n         {\n             int versionBefore = version;\n-            if ( (versionBefore & 1) == 1 )\n-            {   // Someone else is updating those values as we speak, go another round\n+            if ( ( versionBefore & 1) == 1 )\n+            {\n+    // Someone else is updating those values as we speak, go another round\n                 continue;\n             }\n \n             number = highestGapFreeNumber;\n             meta = highestGapFreeMeta;\n             if ( version == versionBefore )\n-            {   // We read a consistent version of these two values\n+            {\n+    // We read a consistent version of these two values\n                 break;\n             }\n         }\n@@ -103,7 +105,7 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n     public synchronized void await( long awaitedNumber, long timeoutMillis ) throws TimeoutException, InterruptedException\n     {\n         long endTime = System.currentTimeMillis() + timeoutMillis;\n-        while ( awaitedNumber > highestGapFreeNumber )\n+        while ( awaitedNumber> highestGapFreeNumber )\n         {\n             long timeLeft = endTime - System.currentTimeMillis();\n             if ( timeLeft > 0 )\n@@ -145,4 +147,4 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n     {\n         return format( \"out-of-order-sequence:%d %d [%s]\", highestEverSeen, highestGapFreeNumber, outOfOrderQueue );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
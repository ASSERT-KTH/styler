{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4249",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "6",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4249/NodeRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4249/NodeRepresentation.java\nindex 645d4233e3d..9526e4a9086 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4249/NodeRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4249/NodeRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.util.Collection;\n@@ -30,174 +31,173 @@ import org.neo4j.server.rest.transactional.TransactionStateChecker;\n import static org.neo4j.helpers.collection.MapUtil.map;\n \n public final class NodeRepresentation extends ObjectRepresentation implements ExtensibleRepresentation,\n-        EntityRepresentation\n+    EntityRepresentation\n {\n-    private final Node node;\n-    private TransactionStateChecker checker;\n-\n-    public NodeRepresentation( Node node )\n-    {\n-        super( RepresentationType.NODE );\n-        this.node = node;\n-    }\n-\n-    public void setTransactionStateChecker( TransactionStateChecker checker )\n-    {\n-        this.checker = checker;\n-    }\n-\n-    @Override\n-    public String getIdentity()\n-    {\n-        return Long.toString( node.getId() );\n-    }\n-\n-    @Override\n-    @Mapping( \"self\" )\n-    public ValueRepresentation selfUri()\n-    {\n-        return ValueRepresentation.uri( path( \"\" ) );\n-    }\n-\n-    public long getId()\n-    {\n-        return node.getId();\n-    }\n-\n-    private String path( String path )\n-    {\n-        return \"node/\" + node.getId() + path;\n-    }\n-\n-    static String path( Node node )\n-    {\n-        return \"node/\" + node.getId();\n-    }\n-\n-    @Mapping( \"create_relationship\" )\n-    public ValueRepresentation relationshipCreationUri()\n-    {\n-        return ValueRepresentation.uri( path( \"/relationships\" ) );\n-    }\n-\n-    @Mapping( \"all_relationships\" )\n-    public ValueRepresentation allRelationshipsUri()\n-    {\n-        return ValueRepresentation.uri( path( \"/relationships/all\" ) );\n-    }\n-\n-    @Mapping( \"incoming_relationships\" )\n-    public ValueRepresentation incomingRelationshipsUri()\n-    {\n-        return ValueRepresentation.uri( path( \"/relationships/in\" ) );\n-    }\n-\n-    @Mapping( \"outgoing_relationships\" )\n-    public ValueRepresentation outgoingRelationshipsUri()\n-    {\n-        return ValueRepresentation.uri( path( \"/relationships/out\" ) );\n-    }\n-\n-    @Mapping( \"all_typed_relationships\" )\n-    public ValueRepresentation allTypedRelationshipsUriTemplate()\n-    {\n-        return ValueRepresentation.template( path( \"/relationships/all/{-list|&|types}\" ) );\n-    }\n-\n-    @Mapping( \"incoming_typed_relationships\" )\n-    public ValueRepresentation incomingTypedRelationshipsUriTemplate()\n-    {\n-        return ValueRepresentation.template( path( \"/relationships/in/{-list|&|types}\" ) );\n-    }\n-\n-    @Mapping( \"outgoing_typed_relationships\" )\n-    public ValueRepresentation outgoingTypedRelationshipsUriTemplate()\n-    {\n-        return ValueRepresentation.template( path( \"/relationships/out/{-list|&|types}\" ) );\n-    }\n-\n-    @Mapping( \"labels\" )\n-    public ValueRepresentation labelsUriTemplate()\n-    {\n-        return ValueRepresentation.template( path( \"/labels\" ) );\n-    }\n-\n-    @Mapping( \"properties\" )\n-    public ValueRepresentation propertiesUri()\n-    {\n-        return ValueRepresentation.uri( path( \"/properties\" ) );\n-    }\n-\n-    @Mapping( \"property\" )\n-    public ValueRepresentation propertyUriTemplate()\n-    {\n-        return ValueRepresentation.template( path( \"/properties/{key}\" ) );\n-    }\n-\n-    @Mapping( \"traverse\" )\n-    public ValueRepresentation traverseUriTemplate()\n-    {\n-        return ValueRepresentation.template( path( \"/traverse/{returnType}\" ) );\n-    }\n-\n-    @Mapping( \"paged_traverse\" )\n-    public ValueRepresentation pagedTraverseUriTemplate()\n-    {\n-        return ValueRepresentation.template( path( \"/paged/traverse/{returnType}{?pageSize,leaseTime}\" ) );\n-    }\n-\n-    @Mapping( \"metadata\" )\n-    public MapRepresentation metadata()\n-    {\n-        if ( isDeleted() )\n-        {\n-            return new MapRepresentation( map( \"id\", node.getId(), \"deleted\", Boolean.TRUE ) );\n-        }\n-        else\n-        {\n-            Collection<String> labels = Iterables.asCollection( new IterableWrapper<String,Label>( node.getLabels() )\n-            {\n-                @Override\n-                protected String underlyingObjectToObject( Label label )\n-                {\n-                    return label.name();\n-                }\n-            } );\n-            return new MapRepresentation( map( \"id\", node.getId(), \"labels\", labels ) );\n-        }\n-    }\n-\n-    private boolean isDeleted()\n-    {\n-        return checker != null && checker.isNodeDeletedInCurrentTx( node.getId() );\n-    }\n-\n-    @Override\n-    void extraData( MappingSerializer serializer )\n-    {\n-        if ( !isDeleted() )\n+  private final Node node;\n+  private TransactionStateChecker checker;\n+\n+  public NodeRepresentation(Node node)\n+  {\n+    super(RepresentationType.NODE);\n+    this.node = node;\n+  }\n+\n+  public void setTransactionStateChecker(TransactionStateChecker checker)\n+  {\n+    this.checker = checker;\n+  }\n+\n+  @Override\n+  public String getIdentity()\n+  {\n+    return Long.toString(node.getId());\n+  }\n+\n+  @Override\n+  @Mapping(\"self\")\n+  public ValueRepresentation selfUri()\n+  {\n+    return ValueRepresentation.uri(path(\"\"));\n+  }\n+\n+  public long getId()\n+  {\n+    return node.getId();\n+  }\n+\n+  private String path(String path)\n+  {\n+    return \"node/\" + node.getId() + path;\n+  }\n+\n+  static String path(Node node)\n+  {\n+    return \"node/\" + node.getId();\n+  }\n+\n+  @Mapping(\"create_relationship\")\n+  public ValueRepresentation relationshipCreationUri()\n+  {\n+    return ValueRepresentation.uri(path(\"/relationships\"));\n+  }\n+\n+  @Mapping(\"all_relationships\")\n+  public ValueRepresentation allRelationshipsUri()\n+  {\n+    return ValueRepresentation.uri(path(\"/relationships/all\"));\n+  }\n+\n+  @Mapping(\"incoming_relationships\")\n+  public ValueRepresentation incomingRelationshipsUri()\n+  {\n+    return ValueRepresentation.uri(path(\"/relationships/in\"));\n+  }\n+\n+  @Mapping(\"outgoing_relationships\")\n+  public ValueRepresentation outgoingRelationshipsUri()\n+  {\n+    return ValueRepresentation.uri(path(\"/relationships/out\"));\n+  }\n+\n+  @Mapping(\"all_typed_relationships\")\n+  public ValueRepresentation allTypedRelationshipsUriTemplate()\n+  {\n+    return ValueRepresentation.template(path(\"/relationships/all/{-list|&|types}\"));\n+  }\n+\n+  @Mapping(\"incoming_typed_relationships\")\n+  public ValueRepresentation incomingTypedRelationshipsUriTemplate()\n+  {\n+    return ValueRepresentation.template(path(\"/relationships/in/{-list|&|types}\"));\n+  }\n+\n+  @Mapping(\"outgoing_typed_relationships\")\n+  public ValueRepresentation outgoingTypedRelationshipsUriTemplate()\n+  {\n+    return ValueRepresentation.template(path(\"/relationships/out/{-list|&|types}\"));\n+  }\n+\n+  @Mapping(\"labels\")\n+  public ValueRepresentation labelsUriTemplate()\n+  {\n+    return ValueRepresentation.template(path(\"/labels\"));\n+  }\n+\n+  @Mapping(\"properties\")\n+  public ValueRepresentation propertiesUri()\n+  {\n+    return ValueRepresentation.uri(path(\"/properties\"));\n+  }\n+\n+  @Mapping(\"property\")\n+  public ValueRepresentation propertyUriTemplate()\n+  {\n+    return ValueRepresentation.template(path(\"/properties/{key}\"));\n+  }\n+\n+  @Mapping(\"traverse\")\n+  public ValueRepresentation traverseUriTemplate()\n+  {\n+    return ValueRepresentation.template(path(\"/traverse/{returnType}\"));\n+  }\n+\n+  @Mapping(\"paged_traverse\")\n+  public ValueRepresentation pagedTraverseUriTemplate()\n+  {\n+    return ValueRepresentation.template(path(\"/paged/traverse/{returnType}{?pageSize,leaseTime}\"));\n+  }\n+\n+  @Mapping(\"metadata\")\n+  public MapRepresentation metadata()\n+  {\n+    if (isDeleted())\n+    {\n+      return new MapRepresentation(map(\"id\", node.getId(), \"deleted\", Boolean.TRUE));\n+    } else\n+    {\n+      Collection<String> labels = Iterables.asCollection(new IterableWrapper<String, Label>(node.getLabels())\n+      {\n+        @Override\n+        protected String underlyingObjectToObject(Label label)\n         {\n-            MappingWriter writer = serializer.writer;\n-            MappingWriter properties = writer.newMapping( RepresentationType.PROPERTIES, \"data\" );\n-            new PropertiesRepresentation( node ).serialize( properties );\n-            if ( writer.isInteractive() )\n-            {\n-                serializer.putList( \"relationship_types\", ListRepresentation.relationshipTypes(\n-                        node.getGraphDatabase().getAllRelationshipTypes() ) );\n-            }\n-            properties.done();\n+          return label.name();\n         }\n-    }\n-\n-    public static ListRepresentation list( Iterable<Node> nodes )\n-    {\n-        return new ListRepresentation( RepresentationType.NODE, new IterableWrapper<Representation, Node>( nodes )\n-        {\n-            @Override\n-            protected Representation underlyingObjectToObject( Node node )\n-            {\n-                return new NodeRepresentation( node );\n-            }\n-        } );\n-    }\n+      });\n+      return new MapRepresentation(map(\"id\", node.getId(), \"labels\", labels));\n+    }\n+  }\n+\n+  private boolean isDeleted()\n+  {\n+    return checker != null && checker.isNodeDeletedInCurrentTx(node.getId());\n+  }\n+\n+  @Override\n+  void extraData(MappingSerializer serializer)\n+  {\n+    if (!isDeleted())\n+    {\n+      MappingWriter writer = serializer.writer;\n+      MappingWriter properties = writer.newMapping(RepresentationType.PROPERTIES, \"data\");\n+      new PropertiesRepresentation(node).serialize(properties);\n+      if (writer.isInteractive())\n+      {\n+        serializer.putList(\"relationship_types\", ListRepresentation.relationshipTypes(\n+            node.getGraphDatabase().getAllRelationshipTypes()));\n+      }\n+      properties.done();\n+    }\n+  }\n+\n+  public static ListRepresentation list(Iterable<Node> nodes)\n+  {\n+    return new ListRepresentation(RepresentationType.NODE, new IterableWrapper<Representation, Node>(nodes)\n+    {\n+      @Override\n+      protected Representation underlyingObjectToObject(Node node)\n+      {\n+        return new NodeRepresentation(node);\n+      }\n+    });\n+  }\n }\n",
            "diff_size": 193
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4249/NodeRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4249/NodeRepresentation.java\nindex 645d4233e3d..fa81c5fd862 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4249/NodeRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4249/NodeRepresentation.java\n@@ -182,8 +182,7 @@ public final class NodeRepresentation extends ObjectRepresentation implements Ex\n             new PropertiesRepresentation( node ).serialize( properties );\n             if ( writer.isInteractive() )\n             {\n-                serializer.putList( \"relationship_types\", ListRepresentation.relationshipTypes(\n-                        node.getGraphDatabase().getAllRelationshipTypes() ) );\n+                serializer.putList( \"relationship_types\", ListRepresentation.relationshipTypes( node.getGraphDatabase().getAllRelationshipTypes() ) );\n             }\n             properties.done();\n         }\n@@ -200,4 +199,4 @@ public final class NodeRepresentation extends ObjectRepresentation implements Ex\n             }\n         } );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
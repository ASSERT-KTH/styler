{
    "project_name": "neo4j-neo4j",
    "error_id": "2947",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2947/DatabaseMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2947/DatabaseMigrator.java\nindex 28d8337051b..c79ee681298 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2947/DatabaseMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2947/DatabaseMigrator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.IOException;\n@@ -61,9 +62,9 @@ public class DatabaseMigrator\n     private final DatabaseHealth databaseHealth;\n \n     public DatabaseMigrator(\n-            FileSystemAbstraction fs, Config config, LogService logService, DependencyResolver dependencyResolver, PageCache pageCache,\n-            JobScheduler jobScheduler, DatabaseLayout databaseLayout, StorageEngineFactory storageEngineFactory,\n-            PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker, DatabaseHealth databaseHealth )\n+      FileSystemAbstraction fs, Config config, LogService logService, DependencyResolver dependencyResolver, PageCache pageCache,\n+      JobScheduler jobScheduler, DatabaseLayout databaseLayout, StorageEngineFactory storageEngineFactory,\n+      PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker, DatabaseHealth databaseHealth)\n     {\n         this.fs = fs;\n         this.config = config;\n@@ -72,7 +73,7 @@ public class DatabaseMigrator\n         this.pageCache = pageCache;\n         this.jobScheduler = jobScheduler;\n         this.databaseLayout = databaseLayout;\n-        this.legacyLogsLocator = new LegacyTransactionLogsLocator( config, databaseLayout );\n+        this.legacyLogsLocator = new LegacyTransactionLogsLocator(config, databaseLayout);\n         this.storageEngineFactory = storageEngineFactory;\n         this.pageCacheTracer = pageCacheTracer;\n         this.memoryTracker = memoryTracker;\n@@ -85,41 +86,40 @@ public class DatabaseMigrator\n      *\n      * @param forceUpgrade Ignore the value of the {@link GraphDatabaseSettings#allow_upgrade} setting.\n      */\n-    public void migrate( boolean forceUpgrade ) throws IOException\n+    public void migrate(boolean forceUpgrade) throws IOException\n     {\n-        StoreVersionCheck versionCheck = storageEngineFactory.versionCheck( fs, databaseLayout, config, pageCache, logService, pageCacheTracer );\n+        StoreVersionCheck versionCheck = storageEngineFactory.versionCheck(fs, databaseLayout, config, pageCache, logService, pageCacheTracer);\n         LogsUpgrader logsUpgrader = new LogsUpgrader(\n-                fs, storageEngineFactory, databaseLayout, pageCache, legacyLogsLocator, config, dependencyResolver, pageCacheTracer, memoryTracker,\n-                databaseHealth, forceUpgrade );\n-        Log userLog = logService.getUserLog( DatabaseMigrator.class );\n-        VisibleMigrationProgressMonitor progress = new VisibleMigrationProgressMonitor( userLog );\n+          fs, storageEngineFactory, databaseLayout, pageCache, legacyLogsLocator, config, dependencyResolver, pageCacheTracer, memoryTracker,\n+          databaseHealth, forceUpgrade);\n+        Log userLog = logService.getUserLog(DatabaseMigrator.class);\n+        VisibleMigrationProgressMonitor progress = new VisibleMigrationProgressMonitor(userLog);\n         LogProvider logProvider = logService.getInternalLogProvider();\n-        StoreUpgrader storeUpgrader = new StoreUpgrader( versionCheck, progress, config, fs, logProvider, logsUpgrader, pageCacheTracer );\n+        StoreUpgrader storeUpgrader = new StoreUpgrader(versionCheck, progress, config, fs, logProvider, logsUpgrader, pageCacheTracer);\n \n         // Get all the participants from the storage engine and add them where they want to be\n         var storeParticipants = storageEngineFactory.migrationParticipants(\n-                fs, config, pageCache, jobScheduler, logService, pageCacheTracer, memoryTracker );\n-        storeParticipants.forEach( storeUpgrader::addParticipant );\n+          fs, config, pageCache, jobScheduler, logService, pageCacheTracer, memoryTracker);\n+        storeParticipants.forEach(storeUpgrader::addParticipant);\n \n-        IndexProviderMap indexProviderMap = dependencyResolver.resolveDependency( IndexProviderMap.class );\n-        IndexConfigMigrator indexConfigMigrator = new IndexConfigMigrator( fs, config, pageCache, logService, storageEngineFactory, indexProviderMap,\n-                logService.getUserLog( IndexConfigMigrator.class ), pageCacheTracer, memoryTracker );\n-        storeUpgrader.addParticipant( indexConfigMigrator );\n+        IndexProviderMap indexProviderMap = dependencyResolver.resolveDependency(IndexProviderMap.class);\n+        IndexConfigMigrator indexConfigMigrator = new IndexConfigMigrator(fs, config, pageCache, logService, storageEngineFactory, indexProviderMap,\n+          logService.getUserLog(IndexConfigMigrator.class), pageCacheTracer, memoryTracker);\n+        storeUpgrader.addParticipant(indexConfigMigrator);\n \n         IndexProviderMigrator indexProviderMigrator = new IndexProviderMigrator(\n-                fs, config, pageCache, logService, storageEngineFactory, pageCacheTracer, memoryTracker );\n-        storeUpgrader.addParticipant( indexProviderMigrator );\n+          fs, config, pageCache, logService, storageEngineFactory, pageCacheTracer, memoryTracker);\n+        storeUpgrader.addParticipant(indexProviderMigrator);\n \n         // Do individual index provider migration last because they may delete files that we need in earlier steps.\n-        indexProviderMap.accept( provider -> storeUpgrader.addParticipant( provider.storeMigrationParticipant( fs, pageCache, storageEngineFactory ) ) );\n+        indexProviderMap.accept(provider -> storeUpgrader.addParticipant(provider.storeMigrationParticipant(fs, pageCache, storageEngineFactory)));\n \n         try\n         {\n-            storeUpgrader.migrateIfNeeded( databaseLayout, forceUpgrade );\n-        }\n-        catch ( Exception e )\n+            storeUpgrader.migrateIfNeeded(databaseLayout, forceUpgrade);\n+        } catch (Exception e)\n         {\n-            userLog.error( \"Error upgrading database. Database left intact and will likely not be able to start: \" + e.toString() );\n+            userLog.error(\"Error upgrading database. Database left intact and will likely not be able to start: \" + e.toString());\n             throw e;\n         }\n     }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "223",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "388",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "395",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "400",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "495",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "677",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "677",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "694",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "694",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "740",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "740",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "747",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "747",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "754",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "754",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "754",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "754",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "757",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "757",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "770",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "800",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "808",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "808",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "816",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "822",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "822",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "828",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "828",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/223/StandardExpander.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/223/StandardExpander.java\nindex 062f3c0404f..b1361be340a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/223/StandardExpander.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/223/StandardExpander.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.impl;\n \n import java.lang.reflect.Array;\n@@ -62,44 +63,44 @@ public abstract class StandardExpander implements PathExpander\n         final Path path;\n         final BranchState state;\n \n-        StandardExpansion( StandardExpander expander, Path path, BranchState state )\n+        StandardExpansion(StandardExpander expander, Path path, BranchState state)\n         {\n             this.expander = expander;\n             this.path = path;\n             this.state = state;\n         }\n \n-        String stringRepresentation( String nodesORrelationships )\n+        String stringRepresentation(String nodesORrelationships)\n         {\n             return \"Expansion[\" + path + \".expand( \" + expander + \" ).\" + nodesORrelationships + \"()]\";\n         }\n \n-        abstract StandardExpansion<T> createNew( StandardExpander expander );\n+        abstract StandardExpansion<T> createNew(StandardExpander expander);\n \n-        public StandardExpansion<T> including( RelationshipType type )\n+        public StandardExpansion<T> including(RelationshipType type)\n         {\n-            return createNew( expander.add( type ) );\n+            return createNew(expander.add(type));\n         }\n \n-        public StandardExpansion<T> including( RelationshipType type, Direction direction )\n+        public StandardExpansion<T> including(RelationshipType type, Direction direction)\n         {\n-            return createNew( expander.add( type, direction ) );\n+            return createNew(expander.add(type, direction));\n         }\n \n-        public StandardExpansion<T> excluding( RelationshipType type )\n+        public StandardExpansion<T> excluding(RelationshipType type)\n         {\n-            return createNew( expander.remove( type ) );\n+            return createNew(expander.remove(type));\n         }\n \n         public T getSingle()\n         {\n             final Iterator<T> expanded = iterator();\n-            if ( expanded.hasNext() )\n+            if (expanded.hasNext())\n             {\n                 final T result = expanded.next();\n-                if ( expanded.hasNext() )\n+                if (expanded.hasNext())\n                 {\n-                    throw new NotFoundException( \"More than one relationship found for \" + this );\n+                    throw new NotFoundException(\"More than one relationship found for \" + this);\n                 }\n                 return result;\n             }\n@@ -108,38 +109,38 @@ public abstract class StandardExpander implements PathExpander\n \n         public boolean isEmpty()\n         {\n-            return !expander.doExpand( path, state ).hasNext();\n+            return !expander.doExpand(path, state).hasNext();\n         }\n \n         public StandardExpansion<Node> nodes()\n         {\n-            return new NodeExpansion( expander, path, state );\n+            return new NodeExpansion(expander, path, state);\n         }\n \n         public StandardExpansion<Relationship> relationships()\n         {\n-            return new RelationshipExpansion( expander, path, state );\n+            return new RelationshipExpansion(expander, path, state);\n         }\n     }\n \n     private static final class RelationshipExpansion extends\n-            StandardExpansion<Relationship>\n+      StandardExpansion<Relationship>\n     {\n-        RelationshipExpansion( StandardExpander expander, Path path, BranchState state )\n+        RelationshipExpansion(StandardExpander expander, Path path, BranchState state)\n         {\n-            super( expander, path, state );\n+            super(expander, path, state);\n         }\n \n         @Override\n         public String toString()\n         {\n-            return stringRepresentation( \"relationships\" );\n+            return stringRepresentation(\"relationships\");\n         }\n \n         @Override\n-        StandardExpansion<Relationship> createNew( StandardExpander expander )\n+        StandardExpansion<Relationship> createNew(StandardExpander expander)\n         {\n-            return new RelationshipExpansion( expander, path, state );\n+            return new RelationshipExpansion(expander, path, state);\n         }\n \n         @Override\n@@ -151,27 +152,27 @@ public abstract class StandardExpander implements PathExpander\n         @Override\n         public ResourceIterator<Relationship> iterator()\n         {\n-            return expander.doExpand( path, state );\n+            return expander.doExpand(path, state);\n         }\n     }\n \n     private static final class NodeExpansion extends StandardExpansion<Node>\n     {\n-        NodeExpansion( StandardExpander expander, Path path, BranchState state )\n+        NodeExpansion(StandardExpander expander, Path path, BranchState state)\n         {\n-            super( expander, path, state );\n+            super(expander, path, state);\n         }\n \n         @Override\n         public String toString()\n         {\n-            return stringRepresentation( \"nodes\" );\n+            return stringRepresentation(\"nodes\");\n         }\n \n         @Override\n-        StandardExpansion<Node> createNew( StandardExpander expander )\n+        StandardExpansion<Node> createNew(StandardExpander expander)\n         {\n-            return new NodeExpansion( expander, path, state );\n+            return new NodeExpansion(expander, path, state);\n         }\n \n         @Override\n@@ -185,12 +186,12 @@ public abstract class StandardExpander implements PathExpander\n         {\n             final Node node = path.endNode();\n \n-            return new MappingResourceIterator<>( expander.doExpand( path, state ) )\n+            return new MappingResourceIterator<>(expander.doExpand(path, state))\n             {\n                 @Override\n-                protected Node map( Relationship rel )\n+                protected Node map(Relationship rel)\n                 {\n-                    return rel.getOtherNode( node );\n+                    return rel.getOtherNode(node);\n                 }\n             };\n         }\n@@ -200,40 +201,40 @@ public abstract class StandardExpander implements PathExpander\n     {\n         private final Direction direction;\n \n-        AllExpander( Direction direction )\n+        AllExpander(Direction direction)\n         {\n             this.direction = direction;\n         }\n \n         @Override\n-        void buildString( StringBuilder result )\n+        void buildString(StringBuilder result)\n         {\n-            if ( direction != Direction.BOTH )\n+            if (direction != Direction.BOTH)\n             {\n-                result.append( direction );\n-                result.append( ':' );\n+                result.append(direction);\n+                result.append(':');\n             }\n-            result.append( '*' );\n+            result.append('*');\n         }\n \n         @Override\n-        ResourceIterator<Relationship> doExpand( Path path, BranchState state )\n+        ResourceIterator<Relationship> doExpand(Path path, BranchState state)\n         {\n-            return asResourceIterator( path.endNode().getRelationships( direction ).iterator() );\n+            return asResourceIterator(path.endNode().getRelationships(direction).iterator());\n         }\n \n         @Override\n-        public StandardExpander add( RelationshipType type, Direction dir )\n+        public StandardExpander add(RelationshipType type, Direction dir)\n         {\n             return this;\n         }\n \n         @Override\n-        public StandardExpander remove( RelationshipType type )\n+        public StandardExpander remove(RelationshipType type)\n         {\n             Map<String, Exclusion> exclude = new HashMap<>();\n-            exclude.put( type.name(), Exclusion.ALL );\n-            return new ExcludingExpander( Exclusion.include( direction ), exclude );\n+            exclude.put(type.name(), Exclusion.ALL);\n+            return new ExcludingExpander(Exclusion.include(direction), exclude);\n         }\n \n         @Override\n@@ -245,55 +246,55 @@ public abstract class StandardExpander implements PathExpander\n         @Override\n         public StandardExpander reverse()\n         {\n-            return new AllExpander( direction.reverse() );\n+            return new AllExpander(direction.reverse());\n         }\n     }\n \n     private enum Exclusion\n     {\n-        ALL( null, \"!\" )\n-        {\n-            @Override\n-            public boolean accept( Node start, Relationship rel )\n-            {\n-                return false;\n-            }\n-        },\n-        INCOMING( Direction.OUTGOING )\n-        {\n-            @Override\n-            Exclusion reversed()\n-            {\n-                return OUTGOING;\n-            }\n-        },\n-        OUTGOING( Direction.INCOMING )\n-        {\n-            @Override\n-            Exclusion reversed()\n-            {\n-                return INCOMING;\n-            }\n-        },\n-        NONE( Direction.BOTH, \"\" )\n-        {\n-            @Override\n-            boolean includes( Direction direction )\n-            {\n-                return true;\n-            }\n-        };\n+        ALL(null, \"!\")\n+          {\n+              @Override\n+              public boolean accept(Node start, Relationship rel)\n+              {\n+                  return false;\n+              }\n+          },\n+        INCOMING(Direction.OUTGOING)\n+          {\n+              @Override\n+              Exclusion reversed()\n+              {\n+                  return OUTGOING;\n+              }\n+          },\n+        OUTGOING(Direction.INCOMING)\n+          {\n+              @Override\n+              Exclusion reversed()\n+              {\n+                  return INCOMING;\n+              }\n+          },\n+        NONE(Direction.BOTH, \"\")\n+          {\n+              @Override\n+              boolean includes(Direction direction)\n+              {\n+                  return true;\n+              }\n+          };\n \n         private final String string;\n         private final Direction direction;\n \n-        Exclusion( Direction direction, String string )\n+        Exclusion(Direction direction, String string)\n         {\n             this.direction = direction;\n             this.string = string;\n         }\n \n-        Exclusion( Direction direction )\n+        Exclusion(Direction direction)\n         {\n             this.direction = direction;\n             this.string = \"!\" + name() + \":\";\n@@ -305,9 +306,9 @@ public abstract class StandardExpander implements PathExpander\n             return string;\n         }\n \n-        boolean accept( Node start, Relationship rel )\n+        boolean accept(Node start, Relationship rel)\n         {\n-            return matchDirection( direction, start, rel );\n+            return matchDirection(direction, start, rel);\n         }\n \n         Exclusion reversed()\n@@ -315,14 +316,14 @@ public abstract class StandardExpander implements PathExpander\n             return this;\n         }\n \n-        boolean includes( Direction dir )\n+        boolean includes(Direction dir)\n         {\n             return this.direction == dir;\n         }\n \n-        static Exclusion include( Direction direction )\n+        static Exclusion include(Direction direction)\n         {\n-            switch ( direction )\n+            switch (direction)\n             {\n                 case INCOMING:\n                     return OUTGOING;\n@@ -339,84 +340,81 @@ public abstract class StandardExpander implements PathExpander\n         private final Exclusion defaultExclusion;\n         private final Map<String, Exclusion> exclusion;\n \n-        ExcludingExpander( Exclusion defaultExclusion,\n-                           Map<String, Exclusion> exclusion )\n+        ExcludingExpander(Exclusion defaultExclusion,\n+                          Map<String, Exclusion> exclusion)\n         {\n             this.defaultExclusion = defaultExclusion;\n             this.exclusion = exclusion;\n         }\n \n         @Override\n-        void buildString( StringBuilder result )\n+        void buildString(StringBuilder result)\n         {\n             // FIXME: not really correct\n-            result.append( defaultExclusion );\n-            result.append( '*' );\n-            for ( Map.Entry<String, Exclusion> entry : exclusion.entrySet() )\n+            result.append(defaultExclusion);\n+            result.append('*');\n+            for (Map.Entry<String, Exclusion> entry : exclusion.entrySet())\n             {\n-                result.append( ',' );\n-                result.append( entry.getValue() );\n-                result.append( entry.getKey() );\n+                result.append(',');\n+                result.append(entry.getValue());\n+                result.append(entry.getKey());\n             }\n         }\n \n         @Override\n-        ResourceIterator<Relationship> doExpand( Path path, BranchState state )\n+        ResourceIterator<Relationship> doExpand(Path path, BranchState state)\n         {\n             final Node node = path.endNode();\n-            ResourceIterator<Relationship> resourceIterator = asResourceIterator( node.getRelationships().iterator() );\n-            return newResourceIterator( new FilteringIterator<>( resourceIterator, rel ->\n+            ResourceIterator<Relationship> resourceIterator = asResourceIterator(node.getRelationships().iterator());\n+            return newResourceIterator(new FilteringIterator<>(resourceIterator, rel ->\n             {\n-                Exclusion exclude = exclusion.get( rel.getType().name() );\n+                Exclusion exclude = exclusion.get(rel.getType().name());\n                 exclude = (exclude == null) ? defaultExclusion : exclude;\n-                return exclude.accept( node, rel );\n-            } ), resourceIterator );\n+                return exclude.accept(node, rel);\n+            }), resourceIterator);\n         }\n \n         @Override\n-        public StandardExpander add( RelationshipType type, Direction direction )\n+        public StandardExpander add(RelationshipType type, Direction direction)\n         {\n-            Exclusion excluded = exclusion.get( type.name() );\n+            Exclusion excluded = exclusion.get(type.name());\n             final Map<String, Exclusion> newExclusion;\n-            if ( (excluded == null ? defaultExclusion : excluded).includes( direction ) )\n+            if ((excluded == null ? defaultExclusion : excluded).includes(direction))\n             {\n                 return this;\n-            }\n-            else\n+            } else\n             {\n-                excluded = Exclusion.include( direction );\n-                if ( excluded == defaultExclusion )\n+                excluded = Exclusion.include(direction);\n+                if (excluded == defaultExclusion)\n                 {\n-                    if ( exclusion.size() == 1 )\n+                    if (exclusion.size() == 1)\n                     {\n-                        return new AllExpander( defaultExclusion.direction );\n-                    }\n-                    else\n+                        return new AllExpander(defaultExclusion.direction);\n+                    } else\n                     {\n-                        newExclusion = new HashMap<>( exclusion );\n-                        newExclusion.remove( type.name() );\n+                        newExclusion = new HashMap<>(exclusion);\n+                        newExclusion.remove(type.name());\n                     }\n-                }\n-                else\n+                } else\n                 {\n-                    newExclusion = new HashMap<>( exclusion );\n-                    newExclusion.put( type.name(), excluded );\n+                    newExclusion = new HashMap<>(exclusion);\n+                    newExclusion.put(type.name(), excluded);\n                 }\n             }\n-            return new ExcludingExpander( defaultExclusion, newExclusion );\n+            return new ExcludingExpander(defaultExclusion, newExclusion);\n         }\n \n         @Override\n-        public StandardExpander remove( RelationshipType type )\n+        public StandardExpander remove(RelationshipType type)\n         {\n-            Exclusion excluded = exclusion.get( type.name() );\n-            if ( excluded == Exclusion.ALL )\n+            Exclusion excluded = exclusion.get(type.name());\n+            if (excluded == Exclusion.ALL)\n             {\n                 return this;\n             }\n-            Map<String, Exclusion> newExclusion = new HashMap<>( exclusion );\n-            newExclusion.put( type.name(), Exclusion.ALL );\n-            return new ExcludingExpander( defaultExclusion, newExclusion );\n+            Map<String, Exclusion> newExclusion = new HashMap<>(exclusion);\n+            newExclusion.put(type.name(), Exclusion.ALL);\n+            return new ExcludingExpander(defaultExclusion, newExclusion);\n         }\n \n         @Override\n@@ -429,33 +427,33 @@ public abstract class StandardExpander implements PathExpander\n         public StandardExpander reverse()\n         {\n             Map<String, Exclusion> newExclusion = new HashMap<>();\n-            for ( Map.Entry<String, Exclusion> entry : exclusion.entrySet() )\n+            for (Map.Entry<String, Exclusion> entry : exclusion.entrySet())\n             {\n-                newExclusion.put( entry.getKey(), entry.getValue().reversed() );\n+                newExclusion.put(entry.getKey(), entry.getValue().reversed());\n             }\n-            return new ExcludingExpander( defaultExclusion.reversed(), newExclusion );\n+            return new ExcludingExpander(defaultExclusion.reversed(), newExclusion);\n         }\n     }\n \n     public static final StandardExpander DEFAULT = new AllExpander(\n-            Direction.BOTH )\n+      Direction.BOTH)\n     {\n         @Override\n-        public StandardExpander add( RelationshipType type, Direction direction )\n+        public StandardExpander add(RelationshipType type, Direction direction)\n         {\n-            return create( type, direction );\n+            return create(type, direction);\n         }\n     };\n \n     public static final StandardExpander EMPTY =\n-            new RegularExpander( Collections.emptyMap() );\n+      new RegularExpander(Collections.emptyMap());\n \n     private static class DirectionAndTypes\n     {\n         final Direction direction;\n         final RelationshipType[] types;\n \n-        DirectionAndTypes( Direction direction, RelationshipType[] types )\n+        DirectionAndTypes(Direction direction, RelationshipType[] types)\n         {\n             this.direction = direction;\n             this.types = types;\n@@ -467,71 +465,70 @@ public abstract class StandardExpander implements PathExpander\n         final Map<Direction, RelationshipType[]> typesMap;\n         final DirectionAndTypes[] directions;\n \n-        RegularExpander( Map<Direction, RelationshipType[]> types )\n+        RegularExpander(Map<Direction, RelationshipType[]> types)\n         {\n             this.typesMap = types;\n             this.directions = new DirectionAndTypes[types.size()];\n             int i = 0;\n-            for ( Map.Entry<Direction, RelationshipType[]> entry : types.entrySet() )\n+            for (Map.Entry<Direction, RelationshipType[]> entry : types.entrySet())\n             {\n-                this.directions[i++] = new DirectionAndTypes( entry.getKey(), entry.getValue() );\n+                this.directions[i++] = new DirectionAndTypes(entry.getKey(), entry.getValue());\n             }\n         }\n \n         @Override\n-        void buildString( StringBuilder result )\n+        void buildString(StringBuilder result)\n         {\n-            result.append( typesMap );\n+            result.append(typesMap);\n         }\n \n         @Override\n-        ResourceIterator<Relationship> doExpand( Path path, BranchState state )\n+        ResourceIterator<Relationship> doExpand(Path path, BranchState state)\n         {\n             final Node node = path.endNode();\n-            if ( directions.length == 1 )\n+            if (directions.length == 1)\n             {\n                 DirectionAndTypes direction = directions[0];\n-                return asResourceIterator( node.getRelationships( direction.direction, direction.types ) );\n-            }\n-            else\n+                return asResourceIterator(node.getRelationships(direction.direction, direction.types));\n+            } else\n             {\n-                return new NestingResourceIterator<>( new ArrayIterator<>( directions ) )\n+                return new NestingResourceIterator<>(new ArrayIterator<>(directions))\n                 {\n                     @Override\n-                    protected ResourceIterator<Relationship> createNestedIterator( DirectionAndTypes item )\n+                    protected ResourceIterator<Relationship> createNestedIterator(DirectionAndTypes item)\n                     {\n-                        return asResourceIterator( node.getRelationships( item.direction, item.types ) );\n+                        return asResourceIterator(node.getRelationships(item.direction, item.types));\n                     }\n                 };\n             }\n         }\n \n-        StandardExpander createNew( Map<Direction, RelationshipType[]> types )\n+        StandardExpander createNew(Map<Direction, RelationshipType[]> types)\n         {\n-            if ( types.isEmpty() )\n+            if (types.isEmpty())\n             {\n-                return new AllExpander( Direction.BOTH );\n+                return new AllExpander(Direction.BOTH);\n             }\n-            return new RegularExpander( types );\n+            return new RegularExpander(types);\n         }\n \n         @Override\n-        public StandardExpander add( RelationshipType type, Direction direction )\n+        public StandardExpander add(RelationshipType type, Direction direction)\n         {\n-            Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMapFrom( typesMap );\n-            tempMap.get( direction ).add( type );\n-            return createNew( toTypeMap( tempMap ) );\n+            Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMapFrom(typesMap);\n+            tempMap.get(direction).add(type);\n+            return createNew(toTypeMap(tempMap));\n         }\n \n         @Override\n-        public StandardExpander remove( RelationshipType type )\n+        public StandardExpander remove(RelationshipType type)\n         {\n-            Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMapFrom( typesMap );\n-            for ( Direction direction : Direction.values() )\n+            Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMapFrom(typesMap);\n+            for (Direction direction : Direction.values())\n             {\n-                tempMap.get( direction ).remove( type );\n+                tempMap.get(direction).remove(type);\n             }\n-            return createNew( toTypeMap( tempMap ) );\n+            return createNew(toTypeMap(tempMap));\n         }\n \n         @Override\n@@ -543,12 +540,12 @@ public abstract class StandardExpander implements PathExpander\n         @Override\n         public StandardExpander reverse()\n         {\n-            Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMapFrom( typesMap );\n-            Collection<RelationshipType> out = tempMap.get( Direction.OUTGOING );\n-            Collection<RelationshipType> in = tempMap.get( Direction.INCOMING );\n-            tempMap.put( Direction.OUTGOING, in );\n-            tempMap.put( Direction.INCOMING, out );\n-            return createNew( toTypeMap( tempMap ) );\n+            Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMapFrom(typesMap);\n+            Collection<RelationshipType> out = tempMap.get(Direction.OUTGOING);\n+            Collection<RelationshipType> in = tempMap.get(Direction.INCOMING);\n+            tempMap.put(Direction.OUTGOING, in);\n+            tempMap.put(Direction.INCOMING, out);\n+            return createNew(toTypeMap(tempMap));\n         }\n     }\n \n@@ -557,68 +554,68 @@ public abstract class StandardExpander implements PathExpander\n         private final StandardExpander expander;\n         private final Filter[] filters;\n \n-        FilteringExpander( StandardExpander expander, Filter... filters )\n+        FilteringExpander(StandardExpander expander, Filter... filters)\n         {\n             this.expander = expander;\n             this.filters = filters;\n         }\n \n         @Override\n-        void buildString( StringBuilder result )\n+        void buildString(StringBuilder result)\n         {\n-            expander.buildString( result );\n-            result.append( \"; filter:\" );\n-            for ( Filter filter : filters )\n+            expander.buildString(result);\n+            result.append(\"; filter:\");\n+            for (Filter filter : filters)\n             {\n-                result.append( ' ' );\n-                result.append( filter );\n+                result.append(' ');\n+                result.append(filter);\n             }\n         }\n \n         @Override\n-        ResourceIterator<Relationship> doExpand( final Path path, BranchState state )\n+        ResourceIterator<Relationship> doExpand(final Path path, BranchState state)\n         {\n-            ResourceIterator<Relationship> resourceIterator = expander.doExpand( path, state );\n-            return newResourceIterator( new FilteringIterator<>( resourceIterator, item ->\n+            ResourceIterator<Relationship> resourceIterator = expander.doExpand(path, state);\n+            return newResourceIterator(new FilteringIterator<>(resourceIterator, item ->\n             {\n-                Path extendedPath = ExtendedPath.extend( path, item );\n-                for ( Filter filter : filters )\n+                Path extendedPath = ExtendedPath.extend(path, item);\n+                for (Filter filter : filters)\n                 {\n-                    if ( filter.exclude( extendedPath ) )\n+                    if (filter.exclude(extendedPath))\n                     {\n                         return false;\n                     }\n                 }\n                 return true;\n-            } ), resourceIterator );\n+            }), resourceIterator);\n         }\n \n         @Override\n-        public StandardExpander addNodeFilter( Predicate<? super Node> filter )\n+        public StandardExpander addNodeFilter(Predicate<? super Node> filter)\n         {\n-            return new FilteringExpander( expander, append( filters,\n-                    new NodeFilter( filter ) ) );\n+            return new FilteringExpander(expander, append(filters,\n+              new NodeFilter(filter)));\n         }\n \n         @Override\n         public StandardExpander addRelationshipFilter(\n-                Predicate<? super Relationship> filter )\n+          Predicate<? super Relationship> filter)\n         {\n-            return new FilteringExpander( expander, append( filters,\n-                    new RelationshipFilter( filter ) ) );\n+            return new FilteringExpander(expander, append(filters,\n+              new RelationshipFilter(filter)));\n         }\n \n         @Override\n-        public StandardExpander add( RelationshipType type, Direction direction )\n+        public StandardExpander add(RelationshipType type, Direction direction)\n         {\n-            return new FilteringExpander( expander.add( type, direction ),\n-                    filters );\n+            return new FilteringExpander(expander.add(type, direction),\n+              filters);\n         }\n \n         @Override\n-        public StandardExpander remove( RelationshipType type )\n+        public StandardExpander remove(RelationshipType type)\n         {\n-            return new FilteringExpander( expander.remove( type ), filters );\n+            return new FilteringExpander(expander.remove(type), filters);\n         }\n \n         @Override\n@@ -630,20 +627,20 @@ public abstract class StandardExpander implements PathExpander\n         @Override\n         public StandardExpander reverse()\n         {\n-            return new FilteringExpander( expander.reversed(), filters );\n+            return new FilteringExpander(expander.reversed(), filters);\n         }\n     }\n \n     private abstract static class Filter\n     {\n-        abstract boolean exclude( Path path );\n+        abstract boolean exclude(Path path);\n     }\n \n     private static final class NodeFilter extends Filter\n     {\n         private final Predicate<? super Node> predicate;\n \n-        NodeFilter( Predicate<? super Node> predicate )\n+        NodeFilter(Predicate<? super Node> predicate)\n         {\n             this.predicate = predicate;\n         }\n@@ -655,9 +652,9 @@ public abstract class StandardExpander implements PathExpander\n         }\n \n         @Override\n-        boolean exclude( Path path )\n+        boolean exclude(Path path)\n         {\n-            return !predicate.test( path.endNode() );\n+            return !predicate.test(path.endNode());\n         }\n     }\n \n@@ -665,7 +662,7 @@ public abstract class StandardExpander implements PathExpander\n     {\n         private final Predicate<? super Relationship> predicate;\n \n-        RelationshipFilter( Predicate<? super Relationship> predicate )\n+        RelationshipFilter(Predicate<? super Relationship> predicate)\n         {\n             this.predicate = predicate;\n         }\n@@ -677,113 +674,113 @@ public abstract class StandardExpander implements PathExpander\n         }\n \n         @Override\n-        boolean exclude( Path path )\n+        boolean exclude(Path path)\n         {\n-            return !predicate.test( path.lastRelationship() );\n+            return !predicate.test(path.lastRelationship());\n         }\n     }\n \n-    public final StandardExpansion<Relationship> expand( Node node )\n+    public final StandardExpansion<Relationship> expand(Node node)\n     {\n-        return new RelationshipExpansion( this, singleNodePath( node ), BranchState.NO_STATE );\n+        return new RelationshipExpansion(this, singleNodePath(node), BranchState.NO_STATE);\n     }\n \n     @Override\n-    public final StandardExpansion<Relationship> expand( Path path, BranchState state )\n+    public final StandardExpansion<Relationship> expand(Path path, BranchState state)\n     {\n-        return new RelationshipExpansion( this, path, state );\n+        return new RelationshipExpansion(this, path, state);\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    static <T> T[] append( T[] array, T item )\n+    @SuppressWarnings(\"unchecked\")\n+    static <T> T[] append(T[] array, T item)\n     {\n         T[] result = (T[]) Array.newInstance(\n-                array.getClass().getComponentType(), array.length + 1 );\n-        System.arraycopy( array, 0, result, 0, array.length );\n+          array.getClass().getComponentType(), array.length + 1);\n+        System.arraycopy(array, 0, result, 0, array.length);\n         result[array.length] = item;\n         return result;\n     }\n \n-    private static boolean matchDirection( Direction dir, Node start, Relationship rel )\n+    private static boolean matchDirection(Direction dir, Node start, Relationship rel)\n     {\n-        switch ( dir )\n+        switch (dir)\n         {\n             case INCOMING:\n-                return rel.getEndNode().equals( start );\n+                return rel.getEndNode().equals(start);\n             case OUTGOING:\n-                return rel.getStartNode().equals( start );\n+                return rel.getStartNode().equals(start);\n             case BOTH:\n                 return true;\n             default:\n-                throw new IllegalArgumentException( \"Unknown direction: \" + dir );\n+                throw new IllegalArgumentException(\"Unknown direction: \" + dir);\n         }\n     }\n \n-    abstract ResourceIterator<Relationship> doExpand( Path path, BranchState state );\n+    abstract ResourceIterator<Relationship> doExpand(Path path, BranchState state);\n \n     @Override\n     public final String toString()\n     {\n-        StringBuilder result = new StringBuilder( \"Expander[\" );\n-        buildString( result );\n-        result.append( ']' );\n+        StringBuilder result = new StringBuilder(\"Expander[\");\n+        buildString(result);\n+        result.append(']');\n         return result.toString();\n     }\n \n-    abstract void buildString( StringBuilder result );\n+    abstract void buildString(StringBuilder result);\n \n-    public final StandardExpander add( RelationshipType type )\n+    public final StandardExpander add(RelationshipType type)\n     {\n-        return add( type, Direction.BOTH );\n+        return add(type, Direction.BOTH);\n     }\n \n-    public abstract StandardExpander add( RelationshipType type,\n-                                          Direction direction );\n+    public abstract StandardExpander add(RelationshipType type,\n+                                         Direction direction);\n \n-    public abstract StandardExpander remove( RelationshipType type );\n+    public abstract StandardExpander remove(RelationshipType type);\n \n     @Override\n     public abstract StandardExpander reverse();\n \n     public abstract StandardExpander reversed();\n \n-    public StandardExpander addNodeFilter( Predicate<? super Node> filter )\n+    public StandardExpander addNodeFilter(Predicate<? super Node> filter)\n     {\n-        return new FilteringExpander( this, new NodeFilter( filter ) );\n+        return new FilteringExpander(this, new NodeFilter(filter));\n     }\n \n-    public StandardExpander addRelationshipFilter( Predicate<? super Relationship> filter )\n+    public StandardExpander addRelationshipFilter(Predicate<? super Relationship> filter)\n     {\n-        return new FilteringExpander( this, new RelationshipFilter( filter ) );\n+        return new FilteringExpander(this, new RelationshipFilter(filter));\n     }\n \n-    public static StandardExpander create( Direction direction )\n+    public static StandardExpander create(Direction direction)\n     {\n-        return new AllExpander( direction );\n+        return new AllExpander(direction);\n     }\n \n-    public static StandardExpander create( RelationshipType type, Direction dir )\n+    public static StandardExpander create(RelationshipType type, Direction dir)\n     {\n-        Map<Direction, RelationshipType[]> types = new EnumMap<>( Direction.class );\n-        types.put( dir, new RelationshipType[]{type} );\n-        return new RegularExpander( types );\n+        Map<Direction, RelationshipType[]> types = new EnumMap<>(Direction.class);\n+        types.put(dir, new RelationshipType[] {type});\n+        return new RegularExpander(types);\n     }\n \n     private static Map<Direction, RelationshipType[]> toTypeMap(\n-            Map<Direction, Collection<RelationshipType>> tempMap )\n+      Map<Direction, Collection<RelationshipType>> tempMap)\n     {\n         // Remove OUT/IN where there is a BOTH\n-        Collection<RelationshipType> both = tempMap.get( Direction.BOTH );\n-        tempMap.get( Direction.OUTGOING ).removeAll( both );\n-        tempMap.get( Direction.INCOMING ).removeAll( both );\n+        Collection<RelationshipType> both = tempMap.get(Direction.BOTH);\n+        tempMap.get(Direction.OUTGOING).removeAll(both);\n+        tempMap.get(Direction.INCOMING).removeAll(both);\n \n         // Convert into a final map\n-        Map<Direction, RelationshipType[]> map = new EnumMap<>( Direction.class );\n-        for ( Map.Entry<Direction, Collection<RelationshipType>> entry : tempMap.entrySet() )\n+        Map<Direction, RelationshipType[]> map = new EnumMap<>(Direction.class);\n+        for (Map.Entry<Direction, Collection<RelationshipType>> entry : tempMap.entrySet())\n         {\n-            if ( !entry.getValue().isEmpty() )\n+            if (!entry.getValue().isEmpty())\n             {\n-                map.put( entry.getKey(), entry.getValue().toArray( new RelationshipType[0] ) );\n+                map.put(entry.getKey(), entry.getValue().toArray(new RelationshipType[0]));\n             }\n         }\n         return map;\n@@ -791,43 +788,43 @@ public abstract class StandardExpander implements PathExpander\n \n     private static Map<Direction, Collection<RelationshipType>> temporaryTypeMap()\n     {\n-        Map<Direction, Collection<RelationshipType>> map = new EnumMap<>( Direction.class );\n-        for ( Direction direction : Direction.values() )\n+        Map<Direction, Collection<RelationshipType>> map = new EnumMap<>(Direction.class);\n+        for (Direction direction : Direction.values())\n         {\n-            map.put( direction, new ArrayList<>() );\n+            map.put(direction, new ArrayList<>());\n         }\n         return map;\n     }\n \n-    private static Map<Direction, Collection<RelationshipType>> temporaryTypeMapFrom( Map<Direction,\n-            RelationshipType[]> typeMap )\n+    private static Map<Direction, Collection<RelationshipType>> temporaryTypeMapFrom(Map<Direction,\n+      RelationshipType[]> typeMap)\n     {\n-        Map<Direction, Collection<RelationshipType>> map = new EnumMap<>( Direction.class );\n-        for ( Direction direction : Direction.values() )\n+        Map<Direction, Collection<RelationshipType>> map = new EnumMap<>(Direction.class);\n+        for (Direction direction : Direction.values())\n         {\n             List<RelationshipType> types = new ArrayList<>();\n-            map.put( direction, types );\n-            RelationshipType[] existing = typeMap.get( direction );\n-            if ( existing != null )\n+            map.put(direction, types);\n+            RelationshipType[] existing = typeMap.get(direction);\n+            if (existing != null)\n             {\n-                types.addAll( asList( existing ) );\n+                types.addAll(asList(existing));\n             }\n         }\n         return map;\n     }\n \n-    public static StandardExpander create( RelationshipType type1, Direction dir1,\n-                                           RelationshipType type2, Direction dir2, Object... more )\n+    public static StandardExpander create(RelationshipType type1, Direction dir1,\n+                                          RelationshipType type2, Direction dir2, Object... more)\n     {\n         Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMap();\n-        tempMap.get( dir1 ).add( type1 );\n-        tempMap.get( dir2 ).add( type2 );\n-        for ( int i = 0; i < more.length; i++ )\n+        tempMap.get(dir1).add(type1);\n+        tempMap.get(dir2).add(type2);\n+        for (int i = 0; i < more.length; i++)\n         {\n             RelationshipType type = (RelationshipType) more[i++];\n             Direction direction = (Direction) more[i];\n-            tempMap.get( direction ).add( type );\n+            tempMap.get(direction).add(type);\n         }\n-        return new RegularExpander( toTypeMap( tempMap ) );\n+        return new RegularExpander(toTypeMap(tempMap));\n     }\n }\n",
            "diff_size": 254
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/223/StandardExpander.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/223/StandardExpander.java\nindex 062f3c0404f..fe456a25923 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/223/StandardExpander.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/223/StandardExpander.java\n@@ -737,10 +737,9 @@ public abstract class StandardExpander implements PathExpander\n         return add( type, Direction.BOTH );\n     }\n \n-    public abstract StandardExpander add( RelationshipType type,\n-                                          Direction direction );\n+    public abstract StandardExpander add( RelationshipType type, Direction direction );\n \n-    public abstract StandardExpander remove( RelationshipType type );\n+public abstract StandardExpander remove( RelationshipType type );\n \n     @Override\n     public abstract StandardExpander reverse();\n@@ -818,7 +817,7 @@ public abstract class StandardExpander implements PathExpander\n \n     public static StandardExpander create( RelationshipType type1, Direction dir1,\n                                            RelationshipType type2, Direction dir2, Object... more )\n-    {\n+{\n         Map<Direction, Collection<RelationshipType>> tempMap = temporaryTypeMap();\n         tempMap.get( dir1 ).add( type1 );\n         tempMap.get( dir2 ).add( type2 );\n@@ -830,4 +829,4 @@ public abstract class StandardExpander implements PathExpander\n         }\n         return new RegularExpander( toTypeMap( tempMap ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
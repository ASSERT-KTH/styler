{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1211",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1211/CompiledIndexUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1211/CompiledIndexUtils.java\nindex 37136ac35ca..df5035d61c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1211/CompiledIndexUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1211/CompiledIndexUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.codegen;\n \n import org.neo4j.internal.kernel.api.CapableIndexReference;\n@@ -36,37 +37,36 @@ import static org.neo4j.internal.kernel.api.IndexQuery.exact;\n  */\n public final class CompiledIndexUtils\n {\n-    /**\n-     * Do not instantiate this class\n-     */\n-    private CompiledIndexUtils()\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n+  /**\n+   * Do not instantiate this class\n+   */\n+  private CompiledIndexUtils()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n \n-    /**\n-     * Performs an index seek.\n-     *\n-     * @param read The Read instance to use for seeking\n-     * @param cursors Used for cursor allocation\n-     * @param index A reference to an index\n-     * @param value The value to seek for\n-     * @return A cursor positioned at the data found in index.\n-     */\n-    public static NodeValueIndexCursor indexSeek( Read read, CursorFactory cursors, CapableIndexReference index, Object value )\n-            throws KernelException\n+  /**\n+   * Performs an index seek.\n+   *\n+   * @param read    The Read instance to use for seeking\n+   * @param cursors Used for cursor allocation\n+   * @param index   A reference to an index\n+   * @param value   The value to seek for\n+   * @return A cursor positioned at the data found in index.\n+   */\n+  public static NodeValueIndexCursor indexSeek(Read read, CursorFactory cursors, CapableIndexReference index, Object value)\n+      throws KernelException\n+  {\n+    assert index.properties().length == 1;\n+    if (value == Values.NO_VALUE || value == null)\n+    {\n+      return NodeValueIndexCursor.EMPTY;\n+    } else\n     {\n-        assert index.properties().length == 1;\n-        if ( value == Values.NO_VALUE || value == null )\n-        {\n-            return NodeValueIndexCursor.EMPTY;\n-        }\n-        else\n-        {\n-            NodeValueIndexCursor cursor = cursors.allocateNodeValueIndexCursor();\n-            IndexQuery.ExactPredicate query = exact( index.properties()[0], makeValueNeoSafe( value ) );\n-            read.nodeIndexSeek( index, cursor, IndexOrder.NONE, query );\n-            return cursor;\n-        }\n+      NodeValueIndexCursor cursor = cursors.allocateNodeValueIndexCursor();\n+      IndexQuery.ExactPredicate query = exact(index.properties()[0], makeValueNeoSafe(value));\n+      read.nodeIndexSeek(index, cursor, IndexOrder.NONE, query);\n+      return cursor;\n     }\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1211/CompiledIndexUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1211/CompiledIndexUtils.java\nindex 37136ac35ca..32698cb6163 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1211/CompiledIndexUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1211/CompiledIndexUtils.java\n@@ -53,9 +53,8 @@ public final class CompiledIndexUtils\n      * @param value The value to seek for\n      * @return A cursor positioned at the data found in index.\n      */\n-    public static NodeValueIndexCursor indexSeek( Read read, CursorFactory cursors, CapableIndexReference index, Object value )\n-            throws KernelException\n-    {\n+    public static NodeValueIndexCursor indexSeek( Read read, CursorFactory cursors, CapableIndexReference index, Object value ) throws KernelException\n+{\n         assert index.properties().length == 1;\n         if ( value == Values.NO_VALUE || value == null )\n         {\n@@ -69,4 +68,4 @@ public final class CompiledIndexUtils\n             return cursor;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
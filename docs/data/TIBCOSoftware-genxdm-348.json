{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "348",
    "information": {
        "errors": [
            {
                "line": "22",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String>\n{\n\tSINGLETON;\n\n\tpublic boolean isSequence(final StringRegExPatternTerm expression)\n\t{",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/348/StringRegExBridge.java\nindex 66508dfcea7..422570a1218 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/348/StringRegExBridge.java\n@@ -19,7 +19,7 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExBridge;\n \n enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String>\n {\n-\tSINGLETON;\n+SINGLETON;\n \n \tpublic boolean isSequence(final StringRegExPatternTerm expression)\n \t{\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/348/StringRegExBridge.java\nindex 66508dfcea7..3da03fd481a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/348/StringRegExBridge.java\n@@ -1,68 +1,59 @@\n /**\n  * Copyright (c) 2009-2010 TIBCO Software Inc.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.processor.w3c.xs.regex.impl.string;\n \n import org.genxdm.processor.w3c.xs.regex.api.RegExBridge;\n \n-enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String>\n-{\n-\tSINGLETON;\n+enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String> {\n+    SINGLETON;\n \n-\tpublic boolean isSequence(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.isSequence();\n-\t}\n+    public boolean isSequence(final StringRegExPatternTerm expression) {\n+        return expression.isSequence();\n+    }\n \n-\tpublic boolean isChoice(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.isChoice();\n-\t}\n+    public boolean isChoice(final StringRegExPatternTerm expression) {\n+        return expression.isChoice();\n+    }\n \n-\tpublic boolean isInterleave(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.isInterleave();\n-\t}\n+    public boolean isInterleave(final StringRegExPatternTerm expression) {\n+        return expression.isInterleave();\n+    }\n \n-\tpublic Iterable<StringRegExPatternTerm> getSubTerms(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.getSubTerms();\n-\t}\n+    public Iterable<StringRegExPatternTerm> getSubTerms(final StringRegExPatternTerm expression) {\n+        return expression.getSubTerms();\n+    }\n \n-\tpublic boolean matches(final StringRegExPatternTerm expression, final String token)\n-\t{\n-\t\treturn expression.matches(token);\n-\t}\n+    public boolean matches(final StringRegExPatternTerm expression, final String token) {\n+        return expression.matches(token);\n+    }\n \n-\tpublic boolean intersects(final StringRegExPatternTerm e1, final StringRegExPatternTerm e2)\n-\t{\n-\t\treturn e1.intersects(e2);\n-\t}\n+    public boolean intersects(final StringRegExPatternTerm e1, final StringRegExPatternTerm e2) {\n+        return e1.intersects(e2);\n+    }\n \n-\tpublic int minOccurs(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.minOccurs();\n-\t}\n+    public int minOccurs(final StringRegExPatternTerm expression) {\n+        return expression.minOccurs();\n+    }\n \n-\tpublic int maxOccurs(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.maxOccurs();\n-\t}\n+    public int maxOccurs(final StringRegExPatternTerm expression) {\n+        return expression.maxOccurs();\n+    }\n \n-\tpublic StringRegExPatternTerm prime(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression;\n-\t}\n+    public StringRegExPatternTerm prime(final StringRegExPatternTerm expression) {\n+        return expression;\n+    }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/348/StringRegExBridge.java\nindex 66508dfcea7..0bc1782bfd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/348/StringRegExBridge.java\n@@ -19,50 +19,50 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExBridge;\n \n enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String>\n {\n-\tSINGLETON;\n+    SINGLETON;\n \n \tpublic boolean isSequence(final StringRegExPatternTerm expression)\n \t{\n-\t\treturn expression.isSequence();\n-\t}\n+    return expression.isSequence();\n+    }\n \n \tpublic boolean isChoice(final StringRegExPatternTerm expression)\n \t{\n-\t\treturn expression.isChoice();\n-\t}\n+    return expression.isChoice();\n+    }\n \n \tpublic boolean isInterleave(final StringRegExPatternTerm expression)\n \t{\n-\t\treturn expression.isInterleave();\n-\t}\n+    return expression.isInterleave();\n+    }\n \n \tpublic Iterable<StringRegExPatternTerm> getSubTerms(final StringRegExPatternTerm expression)\n \t{\n-\t\treturn expression.getSubTerms();\n-\t}\n+    return expression.getSubTerms();\n+    }\n \n \tpublic boolean matches(final StringRegExPatternTerm expression, final String token)\n \t{\n-\t\treturn expression.matches(token);\n-\t}\n+    return expression.matches(token);\n+    }\n \n \tpublic boolean intersects(final StringRegExPatternTerm e1, final StringRegExPatternTerm e2)\n \t{\n-\t\treturn e1.intersects(e2);\n-\t}\n+    return e1.intersects(e2);\n+    }\n \n \tpublic int minOccurs(final StringRegExPatternTerm expression)\n \t{\n-\t\treturn expression.minOccurs();\n-\t}\n+    return expression.minOccurs();\n+    }\n \n \tpublic int maxOccurs(final StringRegExPatternTerm expression)\n \t{\n-\t\treturn expression.maxOccurs();\n-\t}\n+    return expression.maxOccurs();\n+    }\n \n \tpublic StringRegExPatternTerm prime(final StringRegExPatternTerm expression)\n \t{\n-\t\treturn expression;\n-\t}\n-}\n+    return expression;\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/348/StringRegExBridge.java\nindex 66508dfcea7..873642cc952 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/348/StringRegExBridge.java\n@@ -19,50 +19,50 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExBridge;\n \n enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String>\n {\n-\tSINGLETON;\n+    SINGLETON;\n \n-\tpublic boolean isSequence(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.isSequence();\n-\t}\n+    public boolean isSequence(final StringRegExPatternTerm expression)\n+    {\n+        return expression.isSequence();\n+    }\n \n-\tpublic boolean isChoice(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.isChoice();\n-\t}\n+    public boolean isChoice(final StringRegExPatternTerm expression)\n+    {\n+        return expression.isChoice();\n+    }\n \n-\tpublic boolean isInterleave(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.isInterleave();\n-\t}\n+    public boolean isInterleave(final StringRegExPatternTerm expression)\n+    {\n+        return expression.isInterleave();\n+    }\n \n-\tpublic Iterable<StringRegExPatternTerm> getSubTerms(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.getSubTerms();\n-\t}\n+    public Iterable<StringRegExPatternTerm> getSubTerms(final StringRegExPatternTerm expression)\n+    {\n+        return expression.getSubTerms();\n+    }\n \n-\tpublic boolean matches(final StringRegExPatternTerm expression, final String token)\n-\t{\n-\t\treturn expression.matches(token);\n-\t}\n+    public boolean matches(final StringRegExPatternTerm expression, final String token)\n+    {\n+        return expression.matches(token);\n+    }\n \n-\tpublic boolean intersects(final StringRegExPatternTerm e1, final StringRegExPatternTerm e2)\n-\t{\n-\t\treturn e1.intersects(e2);\n-\t}\n+    public boolean intersects(final StringRegExPatternTerm e1, final StringRegExPatternTerm e2)\n+    {\n+        return e1.intersects(e2);\n+    }\n \n-\tpublic int minOccurs(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.minOccurs();\n-\t}\n+    public int minOccurs(final StringRegExPatternTerm expression)\n+    {\n+        return expression.minOccurs();\n+    }\n \n-\tpublic int maxOccurs(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression.maxOccurs();\n-\t}\n+    public int maxOccurs(final StringRegExPatternTerm expression)\n+    {\n+        return expression.maxOccurs();\n+    }\n \n-\tpublic StringRegExPatternTerm prime(final StringRegExPatternTerm expression)\n-\t{\n-\t\treturn expression;\n-\t}\n-}\n+    public StringRegExPatternTerm prime(final StringRegExPatternTerm expression)\n+    {\n+        return expression;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/348/StringRegExBridge.java\nindex 66508dfcea7..422570a1218 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/348/StringRegExBridge.java\n@@ -19,7 +19,7 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExBridge;\n \n enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String>\n {\n-\tSINGLETON;\n+SINGLETON;\n \n \tpublic boolean isSequence(final StringRegExPatternTerm expression)\n \t{\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/348/StringRegExBridge.java\nindex 66508dfcea7..85b7ac3661a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/348/StringRegExBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/348/StringRegExBridge.java\n@@ -19,7 +19,7 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExBridge;\n \n enum StringRegExBridge implements RegExBridge<StringRegExPatternTerm, String>\n {\n-\tSINGLETON;\n+    SINGLETON;\n \n \tpublic boolean isSequence(final StringRegExPatternTerm expression)\n \t{\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
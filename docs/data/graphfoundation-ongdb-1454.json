{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1454",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1454/Futures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1454/Futures.java\nindex 74d4253090a..37bf1111d79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1454/Futures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1454/Futures.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.concurrent;\n \n import java.util.ArrayList;\n@@ -33,97 +34,97 @@ import java.util.concurrent.TimeoutException;\n  */\n public class Futures\n {\n-    private Futures()\n-    {\n-    }\n+  private Futures()\n+  {\n+  }\n \n-    /**\n-     * Combine multiple @{link Future} instances into a single Future\n-     *\n-     * @param futures the @{link Future} instances to combine\n-     * @param <V>     The result type returned by this Future's get method\n-     * @return A new @{link Future} representing the combination\n-     */\n-    @SafeVarargs\n-    public static <V> Future<List<V>> combine( final Future<? extends V>... futures )\n-    {\n-        return combine( Arrays.asList( futures ) );\n-    }\n+  /**\n+   * Combine multiple @{link Future} instances into a single Future\n+   *\n+   * @param futures the @{link Future} instances to combine\n+   * @param <V>     The result type returned by this Future's get method\n+   * @return A new @{link Future} representing the combination\n+   */\n+  @SafeVarargs\n+  public static <V> Future<List<V>> combine(final Future<? extends V>... futures)\n+  {\n+    return combine(Arrays.asList(futures));\n+  }\n \n-    /**\n-     * Combine multiple @{link Future} instances into a single Future\n-     *\n-     * @param futures the @{link Future} instances to combine\n-     * @param <V>     The result type returned by this Future's get method\n-     * @return A new @{link Future} representing the combination\n-     */\n-    public static <V> Future<List<V>> combine( final Iterable<? extends Future<? extends V>> futures )\n+  /**\n+   * Combine multiple @{link Future} instances into a single Future\n+   *\n+   * @param futures the @{link Future} instances to combine\n+   * @param <V>     The result type returned by this Future's get method\n+   * @return A new @{link Future} representing the combination\n+   */\n+  public static <V> Future<List<V>> combine(final Iterable<? extends Future<? extends V>> futures)\n+  {\n+    return new Future<List<V>>()\n     {\n-        return new Future<List<V>>()\n+      @Override\n+      public boolean cancel(boolean mayInterruptIfRunning)\n+      {\n+        boolean result = false;\n+        for (Future<? extends V> future : futures)\n         {\n-            @Override\n-            public boolean cancel( boolean mayInterruptIfRunning )\n-            {\n-                boolean result = false;\n-                for ( Future<? extends V> future : futures )\n-                {\n-                    result |= future.cancel( mayInterruptIfRunning );\n-                }\n-                return result;\n-            }\n+          result |= future.cancel(mayInterruptIfRunning);\n+        }\n+        return result;\n+      }\n \n-            @Override\n-            public boolean isCancelled()\n-            {\n-                boolean result = false;\n-                for ( Future<? extends V> future : futures )\n-                {\n-                    result |= future.isCancelled();\n-                }\n-                return result;\n-            }\n+      @Override\n+      public boolean isCancelled()\n+      {\n+        boolean result = false;\n+        for (Future<? extends V> future : futures)\n+        {\n+          result |= future.isCancelled();\n+        }\n+        return result;\n+      }\n \n-            @Override\n-            public boolean isDone()\n-            {\n-                boolean result = false;\n-                for ( Future<? extends V> future : futures )\n-                {\n-                    result |= future.isDone();\n-                }\n-                return result;\n-            }\n+      @Override\n+      public boolean isDone()\n+      {\n+        boolean result = false;\n+        for (Future<? extends V> future : futures)\n+        {\n+          result |= future.isDone();\n+        }\n+        return result;\n+      }\n \n-            @Override\n-            public List<V> get() throws InterruptedException, ExecutionException\n-            {\n-                List<V> result = new ArrayList<>();\n-                for ( Future<? extends V> future : futures )\n-                {\n-                    result.add( future.get() );\n-                }\n-                return result;\n-            }\n+      @Override\n+      public List<V> get() throws InterruptedException, ExecutionException\n+      {\n+        List<V> result = new ArrayList<>();\n+        for (Future<? extends V> future : futures)\n+        {\n+          result.add(future.get());\n+        }\n+        return result;\n+      }\n \n-            @Override\n-            public List<V> get( long timeout, TimeUnit unit ) throws InterruptedException, ExecutionException, TimeoutException\n-            {\n-                List<V> result = new ArrayList<>();\n-                for ( Future<? extends V> future : futures )\n-                {\n-                    long before = System.nanoTime();\n-                    result.add( future.get( timeout, unit ) );\n-                    timeout -= unit.convert( System.nanoTime() - before, TimeUnit.NANOSECONDS );\n-                }\n-                return result;\n-            }\n-        };\n-    }\n+      @Override\n+      public List<V> get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException\n+      {\n+        List<V> result = new ArrayList<>();\n+        for (Future<? extends V> future : futures)\n+        {\n+          long before = System.nanoTime();\n+          result.add(future.get(timeout, unit));\n+          timeout -= unit.convert(System.nanoTime() - before, TimeUnit.NANOSECONDS);\n+        }\n+        return result;\n+      }\n+    };\n+  }\n \n-    public static <T> CompletableFuture<T> failedFuture( Throwable ex )\n-    {\n-        CompletableFuture<T> future = new CompletableFuture<>();\n-        future.completeExceptionally( ex );\n-        return future;\n-    }\n+  public static <T> CompletableFuture<T> failedFuture(Throwable ex)\n+  {\n+    CompletableFuture<T> future = new CompletableFuture<>();\n+    future.completeExceptionally(ex);\n+    return future;\n+  }\n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1454/Futures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1454/Futures.java\nindex 74d4253090a..9222845b26c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1454/Futures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1454/Futures.java\n@@ -69,7 +69,8 @@ public class Futures\n                 {\n                     result |= future.cancel( mayInterruptIfRunning );\n                 }\n-                return result;\n+\n+return result;\n             }\n \n             @Override\n@@ -80,7 +81,8 @@ public class Futures\n                 {\n                     result |= future.isCancelled();\n                 }\n-                return result;\n+\n+return result;\n             }\n \n             @Override\n@@ -91,7 +93,8 @@ public class Futures\n                 {\n                     result |= future.isDone();\n                 }\n-                return result;\n+\n+return result;\n             }\n \n             @Override\n@@ -102,7 +105,8 @@ public class Futures\n                 {\n                     result.add( future.get() );\n                 }\n-                return result;\n+\n+return result;\n             }\n \n             @Override\n@@ -115,7 +119,8 @@ public class Futures\n                     result.add( future.get( timeout, unit ) );\n                     timeout -= unit.convert( System.nanoTime() - before, TimeUnit.NANOSECONDS );\n                 }\n-                return result;\n+\n+return result;\n             }\n         };\n     }\n@@ -126,4 +131,4 @@ public class Futures\n         future.completeExceptionally( ex );\n         return future;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
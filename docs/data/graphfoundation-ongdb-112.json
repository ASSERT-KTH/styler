{
    "project_name": "graphfoundation-ongdb",
    "error_id": "112",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/112/TransactionId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/112/TransactionId.java\nindex d1d5914421a..f2a19604a0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/112/TransactionId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/112/TransactionId.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.neo4j.kernel.impl.transaction.log.TransactionIdStore;\n@@ -26,76 +27,76 @@ import org.neo4j.kernel.impl.transaction.log.TransactionIdStore;\n  */\n public class TransactionId\n {\n-    private final long transactionId;\n-    private final long checksum;\n-    private final long commitTimestamp;\n+  private final long transactionId;\n+  private final long checksum;\n+  private final long commitTimestamp;\n \n-    public TransactionId( long transactionId, long checksum, long commitTimestamp )\n-    {\n-        this.transactionId = transactionId;\n-        this.checksum = checksum;\n-        this.commitTimestamp = commitTimestamp;\n-    }\n+  public TransactionId(long transactionId, long checksum, long commitTimestamp)\n+  {\n+    this.transactionId = transactionId;\n+    this.checksum = checksum;\n+    this.commitTimestamp = commitTimestamp;\n+  }\n \n-    /**\n-     * Transaction id, generated by {@link TransactionIdStore#nextCommittingTransactionId()},\n-     * here accessible after that transaction being committed.\n-     */\n-    public long transactionId()\n-    {\n-        return transactionId;\n-    }\n+  /**\n+   * Transaction id, generated by {@link TransactionIdStore#nextCommittingTransactionId()},\n+   * here accessible after that transaction being committed.\n+   */\n+  public long transactionId()\n+  {\n+    return transactionId;\n+  }\n \n-    /**\n-     * Commit timestamp. Timestamp when transaction with transactionId was committed.\n-     */\n-    public long commitTimestamp()\n-    {\n-        return commitTimestamp;\n-    }\n+  /**\n+   * Commit timestamp. Timestamp when transaction with transactionId was committed.\n+   */\n+  public long commitTimestamp()\n+  {\n+    return commitTimestamp;\n+  }\n \n-    /**\n-     * Checksum of a transaction, generated from transaction meta data or its contents.\n-     */\n-    public long checksum()\n-    {\n-        return checksum;\n-    }\n+  /**\n+   * Checksum of a transaction, generated from transaction meta data or its contents.\n+   */\n+  public long checksum()\n+  {\n+    return checksum;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        TransactionId that = (TransactionId) o;\n-        return transactionId == that.transactionId &&\n-               checksum == that.checksum &&\n-               commitTimestamp == that.commitTimestamp;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        int result = (int) (transactionId ^ (transactionId >>> 32));\n-        result = 31 * result + (int) (checksum ^ (checksum >>> 32));\n-        result = 31 * result + (int) (commitTimestamp ^ (commitTimestamp >>> 32));\n-        return result;\n+      return false;\n     }\n \n-    @Override\n-    public String toString()\n-    {\n-        return getClass().getSimpleName() + \"{\" +\n-                \"transactionId=\" + transactionId +\n-                \", checksum=\" + checksum +\n-                \", commitTimestamp=\" + commitTimestamp +\n-                '}';\n-    }\n+    TransactionId that = (TransactionId) o;\n+    return transactionId == that.transactionId &&\n+        checksum == that.checksum &&\n+        commitTimestamp == that.commitTimestamp;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = (int) (transactionId ^ (transactionId >>> 32));\n+    result = 31 * result + (int) (checksum ^ (checksum >>> 32));\n+    result = 31 * result + (int) (commitTimestamp ^ (commitTimestamp >>> 32));\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return getClass().getSimpleName() + \"{\" +\n+        \"transactionId=\" + transactionId +\n+        \", checksum=\" + checksum +\n+        \", commitTimestamp=\" + commitTimestamp +\n+        '}';\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "86",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/112/TransactionId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/112/TransactionId.java\nindex d1d5914421a..20a346e2521 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/112/TransactionId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/112/TransactionId.java\n@@ -69,33 +69,29 @@ public class TransactionId\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         TransactionId that = (TransactionId) o;\n-        return transactionId == that.transactionId &&\n-               checksum == that.checksum &&\n+        return transactionId == that.transactionId && checksum == that.checksum &&\n                commitTimestamp == that.commitTimestamp;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        int result = (int) (transactionId ^ (transactionId >>> 32));\n-        result = 31 * result + (int) (checksum ^ (checksum >>> 32));\n-        result = 31 * result + (int) (commitTimestamp ^ (commitTimestamp >>> 32));\n+        int result = ( int) ( transactionId ^ ( transactionId >>> 32 ));\n+        result = 31 * result + ( int) ( checksum ^ ( checksum >>> 32 ));\n+        result = 31 * result + ( int) ( commitTimestamp ^ ( commitTimestamp >>> 32 ));\n         return result;\n     }\n \n     @Override\n     public String toString()\n     {\n-        return getClass().getSimpleName() + \"{\" +\n-                \"transactionId=\" + transactionId +\n-                \", checksum=\" + checksum +\n-                \", commitTimestamp=\" + commitTimestamp +\n-                '}';\n+        return getClass().getSimpleName() + \"{\" + \"transactionId=\" + transactionId + \", checksum=\" + checksum + \", commitTimestamp=\" + commitTimestamp + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
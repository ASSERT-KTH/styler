{
    "project_name": "GluuFederation-oxCore",
    "error_id": "73",
    "information": {
        "errors": [
            {
                "line": "134",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 161).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    }\n\n    private static CustomAttribute getUpdatedAttribute(CouchbaseEntryManager couchbaseEntryManager, String baseDn, String attributeName, String attributeValue) {\n        try {\n            Calendar calendar = Calendar.getInstance();\n            Date oxLastAccessTimeDate = new Date(); //TODO: Fix it StaticUtils.decodeGeneralizedTime(attributeValue);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/73/CouchbaseSampleBatchJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/73/CouchbaseSampleBatchJob.java\nindex 2472e92736a..a5cdabfa90f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/73/CouchbaseSampleBatchJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/73/CouchbaseSampleBatchJob.java\n@@ -33,7 +33,8 @@ public final class CouchbaseSampleBatchJob {\n         LOG = Logger.getLogger(CouchbaseSample.class);\n     }\n \n-    private CouchbaseSampleBatchJob() { }\n+    private CouchbaseSampleBatchJob() {\n+    }\n \n     public static void main(String[] args) {\n         // Prepare sample connection details\n@@ -50,7 +51,7 @@ public final class CouchbaseSampleBatchJob {\n                 for (SimpleTokenCouchbase simpleTokenCouchbase : objects) {\n                     try {\n                         CustomAttribute customAttribute = getUpdatedAttribute(couchbaseEntryManager, simpleTokenCouchbase.getDn(), \"oxAuthExpiration\",\n-                                simpleTokenCouchbase.getAttribute(\"oxAuthExpiration\"));\n+                            simpleTokenCouchbase.getAttribute(\"oxAuthExpiration\"));\n                         simpleTokenCouchbase.setCustomAttributes(Arrays.asList(new CustomAttribute[] {customAttribute}));\n                         couchbaseEntryManager.merge(simpleTokenCouchbase);\n                         processedCount++;\n@@ -65,7 +66,7 @@ public final class CouchbaseSampleBatchJob {\n \n         final Filter filter1 = Filter.createPresenceFilter(\"oxAuthExpiration\");\n         couchbaseEntryManager.findEntries(\"o=gluu\", SimpleTokenCouchbase.class, filter1, SearchScope.SUB, new String[] {\"oxAuthExpiration\"},\n-                tokenCouchbaseBatchOperation, 0, 0, 100);\n+            tokenCouchbaseBatchOperation, 0, 0, 100);\n \n         BatchOperation<SimpleSession> sessionBatchOperation = new ProcessBatchOperation<SimpleSession>() {\n             private int processedCount = 0;\n@@ -75,7 +76,7 @@ public final class CouchbaseSampleBatchJob {\n                 for (SimpleSession simpleSession : objects) {\n                     try {\n                         CustomAttribute customAttribute = getUpdatedAttribute(couchbaseEntryManager, simpleSession.getDn(), \"oxLastAccessTime\",\n-                                simpleSession.getAttribute(\"oxLastAccessTime\"));\n+                            simpleSession.getAttribute(\"oxLastAccessTime\"));\n                         simpleSession.setCustomAttributes(Arrays.asList(new CustomAttribute[] {customAttribute}));\n                         couchbaseEntryManager.merge(simpleSession);\n                         processedCount++;\n@@ -90,7 +91,7 @@ public final class CouchbaseSampleBatchJob {\n \n         final Filter filter2 = Filter.createPresenceFilter(\"oxLastAccessTime\");\n         couchbaseEntryManager.findEntries(\"o=gluu\", SimpleSession.class, filter2, SearchScope.SUB, new String[] {\"oxLastAccessTime\"},\n-                sessionBatchOperation, 0, 0, 100);\n+            sessionBatchOperation, 0, 0, 100);\n \n         BatchOperation<SimpleClient> clientBatchOperation = new ProcessBatchOperation<SimpleClient>() {\n             private int processedCount = 0;\n@@ -107,7 +108,7 @@ public final class CouchbaseSampleBatchJob {\n \n         final Filter filter3 = Filter.createPresenceFilter(\"oxAuthClientSecretExpiresAt\");\n         List<SimpleClient> result3 = couchbaseEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter3, SearchScope.SUB,\n-                new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation, 0, 0, 1000);\n+            new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation, 0, 0, 1000);\n \n         LOG.info(\"Result count (without collecting results): \" + result3.size());\n \n@@ -126,12 +127,13 @@ public final class CouchbaseSampleBatchJob {\n \n         final Filter filter4 = Filter.createPresenceFilter(\"oxAuthClientSecretExpiresAt\");\n         List<SimpleClient> result4 = couchbaseEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter4, SearchScope.SUB,\n-                new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation2, 0, 0, 1000);\n+            new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation2, 0, 0, 1000);\n \n         LOG.info(\"Result count (with collecting results): \" + result4.size());\n     }\n \n-    private static CustomAttribute getUpdatedAttribute(CouchbaseEntryManager couchbaseEntryManager, String baseDn, String attributeName, String attributeValue) {\n+    private static CustomAttribute getUpdatedAttribute(CouchbaseEntryManager couchbaseEntryManager, String baseDn, String attributeName,\n+                                                       String attributeValue) {\n         try {\n             Calendar calendar = Calendar.getInstance();\n             Date oxLastAccessTimeDate = new Date(); //TODO: Fix it StaticUtils.decodeGeneralizedTime(attributeValue);\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/73/CouchbaseSampleBatchJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/73/CouchbaseSampleBatchJob.java\nindex 2472e92736a..f85ffa3e0c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/73/CouchbaseSampleBatchJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/73/CouchbaseSampleBatchJob.java\n@@ -147,4 +147,4 @@ public final class CouchbaseSampleBatchJob {\n         }\n         return null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/73/CouchbaseSampleBatchJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/73/CouchbaseSampleBatchJob.java\nindex 2472e92736a..3d801b6454a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/73/CouchbaseSampleBatchJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/73/CouchbaseSampleBatchJob.java\n@@ -4,7 +4,6 @@ import java.util.Arrays;\n import java.util.Calendar;\n import java.util.Date;\n import java.util.List;\n-\n import org.apache.log4j.Logger;\n import org.apache.logging.log4j.Level;\n import org.apache.logging.log4j.status.StatusLogger;\n@@ -24,7 +23,10 @@ import org.gluu.search.filter.Filter;\n /**\n  * Created by eugeniuparvan on 1/12/17.\n  */\n+\n+\n public final class CouchbaseSampleBatchJob {\n+\n     private static final Logger LOG;\n \n     static {\n@@ -41,16 +43,15 @@ public final class CouchbaseSampleBatchJob {\n \n         // Create Couchbase entry manager\n         final CouchbaseEntryManager couchbaseEntryManager = couchbaseSampleEntryManager.createCouchbaseEntryManager();\n-\n         BatchOperation<SimpleTokenCouchbase> tokenCouchbaseBatchOperation = new ProcessBatchOperation<SimpleTokenCouchbase>() {\n+\n             private int processedCount = 0;\n \n             @Override\n             public void performAction(List<SimpleTokenCouchbase> objects) {\n                 for (SimpleTokenCouchbase simpleTokenCouchbase : objects) {\n                     try {\n-                        CustomAttribute customAttribute = getUpdatedAttribute(couchbaseEntryManager, simpleTokenCouchbase.getDn(), \"oxAuthExpiration\",\n-                                simpleTokenCouchbase.getAttribute(\"oxAuthExpiration\"));\n+                        CustomAttribute customAttribute = getUpdatedAttribute(couchbaseEntryManager, simpleTokenCouchbase.getDn(), \"oxAuthExpiration\", simpleTokenCouchbase.getAttribute(\"oxAuthExpiration\"));\n                         simpleTokenCouchbase.setCustomAttributes(Arrays.asList(new CustomAttribute[] {customAttribute}));\n                         couchbaseEntryManager.merge(simpleTokenCouchbase);\n                         processedCount++;\n@@ -62,20 +63,18 @@ public final class CouchbaseSampleBatchJob {\n                 LOG.info(\"Total processed: \" + processedCount);\n             }\n         };\n-\n         final Filter filter1 = Filter.createPresenceFilter(\"oxAuthExpiration\");\n-        couchbaseEntryManager.findEntries(\"o=gluu\", SimpleTokenCouchbase.class, filter1, SearchScope.SUB, new String[] {\"oxAuthExpiration\"},\n-                tokenCouchbaseBatchOperation, 0, 0, 100);\n+        couchbaseEntryManager.findEntries(\"o=gluu\", SimpleTokenCouchbase.class, filter1, SearchScope.SUB, new String[] {\"oxAuthExpiration\"}, tokenCouchbaseBatchOperation, 0, 0, 100);\n \n         BatchOperation<SimpleSession> sessionBatchOperation = new ProcessBatchOperation<SimpleSession>() {\n+\n             private int processedCount = 0;\n \n             @Override\n             public void performAction(List<SimpleSession> objects) {\n                 for (SimpleSession simpleSession : objects) {\n                     try {\n-                        CustomAttribute customAttribute = getUpdatedAttribute(couchbaseEntryManager, simpleSession.getDn(), \"oxLastAccessTime\",\n-                                simpleSession.getAttribute(\"oxLastAccessTime\"));\n+                        CustomAttribute customAttribute = getUpdatedAttribute(couchbaseEntryManager, simpleSession.getDn(), \"oxLastAccessTime\", simpleSession.getAttribute(\"oxLastAccessTime\"));\n                         simpleSession.setCustomAttributes(Arrays.asList(new CustomAttribute[] {customAttribute}));\n                         couchbaseEntryManager.merge(simpleSession);\n                         processedCount++;\n@@ -87,12 +86,11 @@ public final class CouchbaseSampleBatchJob {\n                 LOG.info(\"Total processed: \" + processedCount);\n             }\n         };\n-\n         final Filter filter2 = Filter.createPresenceFilter(\"oxLastAccessTime\");\n-        couchbaseEntryManager.findEntries(\"o=gluu\", SimpleSession.class, filter2, SearchScope.SUB, new String[] {\"oxLastAccessTime\"},\n-                sessionBatchOperation, 0, 0, 100);\n+        couchbaseEntryManager.findEntries(\"o=gluu\", SimpleSession.class, filter2, SearchScope.SUB, new String[] {\"oxLastAccessTime\"}, sessionBatchOperation, 0, 0, 100);\n \n         BatchOperation<SimpleClient> clientBatchOperation = new ProcessBatchOperation<SimpleClient>() {\n+\n             private int processedCount = 0;\n \n             @Override\n@@ -104,14 +102,12 @@ public final class CouchbaseSampleBatchJob {\n                 LOG.info(\"Total processed: \" + processedCount);\n             }\n         };\n-\n         final Filter filter3 = Filter.createPresenceFilter(\"oxAuthClientSecretExpiresAt\");\n-        List<SimpleClient> result3 = couchbaseEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter3, SearchScope.SUB,\n-                new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation, 0, 0, 1000);\n-\n+        List<SimpleClient> result3 = couchbaseEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter3, SearchScope.SUB, new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation, 0, 0, 1000);\n         LOG.info(\"Result count (without collecting results): \" + result3.size());\n \n         BatchOperation<SimpleClient> clientBatchOperation2 = new DefaultBatchOperation<SimpleClient>() {\n+\n             private int processedCount = 0;\n \n             @Override\n@@ -123,15 +119,14 @@ public final class CouchbaseSampleBatchJob {\n                 LOG.info(\"Total processed: \" + processedCount);\n             }\n         };\n-\n         final Filter filter4 = Filter.createPresenceFilter(\"oxAuthClientSecretExpiresAt\");\n-        List<SimpleClient> result4 = couchbaseEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter4, SearchScope.SUB,\n-                new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation2, 0, 0, 1000);\n-\n+        List<SimpleClient> result4 = couchbaseEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter4, SearchScope.SUB, new String[] {\"oxAuthClientSecretExpiresAt\"}, clientBatchOperation2, 0, 0, 1000);\n         LOG.info(\"Result count (with collecting results): \" + result4.size());\n     }\n \n-    private static CustomAttribute getUpdatedAttribute(CouchbaseEntryManager couchbaseEntryManager, String baseDn, String attributeName, String attributeValue) {\n+    private static CustomAttribute getUpdatedAttribute(CouchbaseEntryManager couchbaseEntryManager,\n+        String baseDn,\n+            String attributeName, String attributeValue) {\n         try {\n             Calendar calendar = Calendar.getInstance();\n             Date oxLastAccessTimeDate = new Date(); //TODO: Fix it StaticUtils.decodeGeneralizedTime(attributeValue);\n@@ -145,6 +140,8 @@ public final class CouchbaseSampleBatchJob {\n         } catch (Exception ex) {\n             LOG.error(\"Can't parse attribute\", ex);\n         }\n+\n         return null;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-metron",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  NUM_REDUCERS(\"numReducers\"),\n  START_TIME_MS(\"startTimeMs\"),",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/40/PcapOptions.java\nindex 09effd4a1c2..e18f0639fcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/40/PcapOptions.java\n@@ -26,8 +26,7 @@ public enum PcapOptions implements ConfigOption {\n   JOB_NAME(\"jobName\"),\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n   BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/40/PcapOptions.java\nindex 09effd4a1c2..7d6bbcdb20c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/40/PcapOptions.java\n@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -27,7 +27,8 @@ public enum PcapOptions implements ConfigOption {\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n   BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\",\n+      (s, o) -> o == null ? null : new Path(o.toString())),\n   FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/40/PcapOptions.java\nindex 09effd4a1c2..5f0259bce28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/40/PcapOptions.java\n@@ -40,9 +40,8 @@ public enum PcapOptions implements ConfigOption {\n   HADOOP_CONF(\"hadoopConf\"),\n   FILESYSTEM(\"fileSystem\");\n \n-  public static final BiFunction<String, Object, Path> STRING_TO_PATH =\n-      (s, o) -> o == null ? null : new Path(o.toString());\n-  private String key;\n+  public static final BiFunction<String, Object, Path> STRING_TO_PATH = (s, o) -> o == null ? null : new Path(o.toString());\n+private String key;\n   private BiFunction<String, Object, Object> transform = (s, o) -> o;\n \n   PcapOptions(String key) {\n@@ -63,4 +62,4 @@ public enum PcapOptions implements ConfigOption {\n   public BiFunction<String, Object, Object> transform() {\n     return transform;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/40/PcapOptions.java\nindex 09effd4a1c2..05df97c0674 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/40/PcapOptions.java\n@@ -23,12 +23,17 @@ import org.apache.hadoop.fs.Path;\n import org.apache.metron.common.configuration.ConfigOption;\n \n public enum PcapOptions implements ConfigOption {\n+\n   JOB_NAME(\"jobName\"),\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n-  BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  BASE_PATH(\"basePath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n+  INTERIM_RESULT_PATH(\"interimResultPath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n+  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n+  FINAL_OUTPUT_PATH(\"finalOutputPath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n   END_TIME_MS(\"endTimeMs\"),\n@@ -40,11 +45,11 @@ public enum PcapOptions implements ConfigOption {\n   HADOOP_CONF(\"hadoopConf\"),\n   FILESYSTEM(\"fileSystem\");\n \n-  public static final BiFunction<String, Object, Path> STRING_TO_PATH =\n-      (s, o) -> o == null ? null : new Path(o.toString());\n+  public static final BiFunction<String, Object, Path> STRING_TO_PATH = (s,o) ->\n+                                                         o == null ? null : new Path(o.toString());\n   private String key;\n-  private BiFunction<String, Object, Object> transform = (s, o) -> o;\n-\n+  private BiFunction<String, Object, Object> transform = (s,o) ->\n+                                               o;\n   PcapOptions(String key) {\n     this.key = key;\n   }\n@@ -63,4 +68,4 @@ public enum PcapOptions implements ConfigOption {\n   public BiFunction<String, Object, Object> transform() {\n     return transform;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/40/PcapOptions.java\nindex 09effd4a1c2..e18f0639fcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/40/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/40/PcapOptions.java\n@@ -26,8 +26,7 @@ public enum PcapOptions implements ConfigOption {\n   JOB_NAME(\"jobName\"),\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n   BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
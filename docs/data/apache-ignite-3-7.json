{
    "project_name": "apache-ignite-3",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "36",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n    private final String name;\n    private final OnEventException<T> onEventException;\n\n    public LogExceptionHandler(String name) {\n        this(name, null);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/7/LogExceptionHandler.java\nindex 1cb41b319e5..535b9b0d110 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/7/LogExceptionHandler.java\n@@ -33,6 +33,7 @@ public final class LogExceptionHandler<T> implements ExceptionHandler<T> {\n     }\n \n     private final String name;\n+\n     private final OnEventException<T> onEventException;\n \n     public LogExceptionHandler(String name) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/7/LogExceptionHandler.java\nindex 1cb41b319e5..66d4484451e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/7/LogExceptionHandler.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.ignite.raft.jraft.util;\n \n import com.lmax.disruptor.ExceptionHandler;\n@@ -25,41 +26,42 @@ import org.slf4j.LoggerFactory;\n  */\n public final class LogExceptionHandler<T> implements ExceptionHandler<T> {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(LogExceptionHandler.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(LogExceptionHandler.class);\n \n-    public interface OnEventException<T> {\n+  public interface OnEventException<T> {\n \n-        void onException(T event, Throwable ex);\n-    }\n+    void onException(T event, Throwable ex);\n+  }\n \n-    private final String name;\n-    private final OnEventException<T> onEventException;\n+  private final String name;\n \n-    public LogExceptionHandler(String name) {\n-        this(name, null);\n-    }\n+  private final OnEventException<T> onEventException;\n \n-    public LogExceptionHandler(String name, OnEventException<T> onEventException) {\n-        this.name = name;\n-        this.onEventException = onEventException;\n-    }\n+  public LogExceptionHandler(String name) {\n+    this(name, null);\n+  }\n \n-    @Override\n-    public void handleOnStartException(Throwable ex) {\n-        LOG.error(\"Fail to start {} disruptor\", this.name, ex);\n-    }\n+  public LogExceptionHandler(String name, OnEventException<T> onEventException) {\n+    this.name = name;\n+    this.onEventException = onEventException;\n+  }\n \n-    @Override\n-    public void handleOnShutdownException(Throwable ex) {\n-        LOG.error(\"Fail to shutdown {}r disruptor\", this.name, ex);\n+  @Override\n+  public void handleOnStartException(Throwable ex) {\n+    LOG.error(\"Fail to start {} disruptor\", this.name, ex);\n+  }\n \n-    }\n+  @Override\n+  public void handleOnShutdownException(Throwable ex) {\n+    LOG.error(\"Fail to shutdown {}r disruptor\", this.name, ex);\n+\n+  }\n \n-    @Override\n-    public void handleEventException(Throwable ex, long sequence, T event) {\n-        LOG.error(\"Handle {} disruptor event error, event is {}\", this.name, event, ex);\n-        if (this.onEventException != null) {\n-            this.onEventException.onException(event, ex);\n-        }\n+  @Override\n+  public void handleEventException(Throwable ex, long sequence, T event) {\n+    LOG.error(\"Handle {} disruptor event error, event is {}\", this.name, event, ex);\n+    if (this.onEventException != null) {\n+      this.onEventException.onException(event, ex);\n     }\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "column": "5",
                    "severity": "error",
                    "message": "'INTERFACE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "39",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "42",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "50",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/7/LogExceptionHandler.java\nindex 1cb41b319e5..f1bea431463 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/7/LogExceptionHandler.java\n@@ -23,41 +23,49 @@ import org.slf4j.LoggerFactory;\n /**\n  * Disruptor exception handler.\n  */\n+\n+\n public final class LogExceptionHandler<T> implements ExceptionHandler<T> {\n \n     private static final Logger LOG = LoggerFactory.getLogger(LogExceptionHandler.class);\n \n+\n     public interface OnEventException<T> {\n \n         void onException(T event, Throwable ex);\n     }\n \n+\n     private final String name;\n+\n+\n     private final OnEventException<T> onEventException;\n \n+\n     public LogExceptionHandler(String name) {\n         this(name, null);\n     }\n \n+\n     public LogExceptionHandler(String name, OnEventException<T> onEventException) {\n         this.name = name;\n         this.onEventException = onEventException;\n     }\n \n-    @Override\n-    public void handleOnStartException(Throwable ex) {\n+\n+    @Override public void handleOnStartException(Throwable ex) {\n         LOG.error(\"Fail to start {} disruptor\", this.name, ex);\n     }\n \n-    @Override\n-    public void handleOnShutdownException(Throwable ex) {\n-        LOG.error(\"Fail to shutdown {}r disruptor\", this.name, ex);\n \n+    @Override public void handleOnShutdownException(Throwable ex) {\n+        LOG.error(\"Fail to shutdown {}r disruptor\", this.name, ex);\n     }\n \n-    @Override\n-    public void handleEventException(Throwable ex, long sequence, T event) {\n+\n+    @Override public void handleEventException(Throwable ex, long sequence, T event) {\n         LOG.error(\"Handle {} disruptor event error, event is {}\", this.name, event, ex);\n+\n         if (this.onEventException != null) {\n             this.onEventException.onException(event, ex);\n         }\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/7/LogExceptionHandler.java\nindex 1cb41b319e5..535b9b0d110 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/7/LogExceptionHandler.java\n@@ -33,6 +33,7 @@ public final class LogExceptionHandler<T> implements ExceptionHandler<T> {\n     }\n \n     private final String name;\n+\n     private final OnEventException<T> onEventException;\n \n     public LogExceptionHandler(String name) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/7/LogExceptionHandler.java\nindex 1cb41b319e5..535b9b0d110 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/7/LogExceptionHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/7/LogExceptionHandler.java\n@@ -33,6 +33,7 @@ public final class LogExceptionHandler<T> implements ExceptionHandler<T> {\n     }\n \n     private final String name;\n+\n     private final OnEventException<T> onEventException;\n \n     public LogExceptionHandler(String name) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
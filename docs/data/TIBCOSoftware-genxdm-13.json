{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "37",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    extends ConvertibleNodeSetExprImpl\n{\n\tprivate final ConvertibleNodeSetExpr expr;\n\tprivate final BooleanExpr predicate;\n\n\tFilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "38",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/13/FilterExpr.java\nindex de8c1366c8c..06649ffea86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/13/FilterExpr.java\n@@ -34,7 +34,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n final class FilterExpr \r\n     extends ConvertibleNodeSetExprImpl\r\n {\r\n-\tprivate final ConvertibleNodeSetExpr expr;\r\n+private final ConvertibleNodeSetExpr expr;\r\n \tprivate final BooleanExpr predicate;\r\n \r\n \tFilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/13/FilterExpr.java\nindex de8c1366c8c..b1408876871 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/13/FilterExpr.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.expressions;\r\n \r\n import org.genxdm.Model;\r\n@@ -31,34 +32,34 @@ import org.genxdm.xpath.v10.ExprContextDynamic;\n import org.genxdm.xpath.v10.NodeIterator;\r\n import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\r\n \r\n-final class FilterExpr \r\n-    extends ConvertibleNodeSetExprImpl\r\n-{\r\n-\tprivate final ConvertibleNodeSetExpr expr;\r\n-\tprivate final BooleanExpr predicate;\r\n+final class FilterExpr\r\n+    extends ConvertibleNodeSetExprImpl {\r\n+    private final ConvertibleNodeSetExpr expr;\r\n+\r\n+    private final BooleanExpr predicate;\r\n \r\n-\tFilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)\r\n-\t{\r\n-\t\tsuper();\r\n-\t\tthis.expr = expr;\r\n-\t\tthis.predicate = predicate;\r\n-\t}\r\n+    FilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate) {\r\n+        super();\r\n+        this.expr = expr;\r\n+        this.predicate = predicate;\r\n+    }\r\n \r\n     @Override\r\n-\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\r\n-\t\treturn new FilterNodeIterator<N>(model, expr.nodeIterator(model, node, dynEnv), dynEnv, predicate);\r\n-\t}\r\n+    public <N> NodeIterator<N> nodeIterator(Model<N> model, final N node,\r\n+                                            final ExprContextDynamic<N> dynEnv) {\r\n+        return new FilterNodeIterator<N>(model, expr.nodeIterator(model, node, dynEnv), dynEnv,\r\n+            predicate);\r\n+    }\r\n \r\n     public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n         return new FilterTraverser(expr.traverseNodes(contextNode, dynEnv), dynEnv, predicate);\r\n     }\r\n \r\n     /*\r\n-\t * OPT: if the expr is of the form position()=n, then SINGLE_LEVEL must be true\r\n-\t */\r\n-\tpublic int getOptimizeFlags()\r\n-\t{\r\n-\t\treturn expr.getOptimizeFlags();\r\n-\t}\r\n+     * OPT: if the expr is of the form position()=n, then SINGLE_LEVEL must be true\r\n+     */\r\n+    public int getOptimizeFlags() {\r\n+        return expr.getOptimizeFlags();\r\n+    }\r\n \r\n }\r\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/13/FilterExpr.java\nindex de8c1366c8c..30c8d5e61e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/13/FilterExpr.java\n@@ -32,33 +32,32 @@ import org.genxdm.xpath.v10.NodeIterator;\n import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\r\n \r\n final class FilterExpr \r\n-    extends ConvertibleNodeSetExprImpl\r\n-{\r\n-\tprivate final ConvertibleNodeSetExpr expr;\r\n+    extends ConvertibleNodeSetExprImpl\n+{\n+    private final ConvertibleNodeSetExpr expr;\r\n \tprivate final BooleanExpr predicate;\r\n \r\n \tFilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)\r\n-\t{\r\n-\t\tsuper();\r\n+\t{\n+    super();\r\n \t\tthis.expr = expr;\r\n-\t\tthis.predicate = predicate;\r\n-\t}\r\n-\r\n-    @Override\r\n-\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\r\n-\t\treturn new FilterNodeIterator<N>(model, expr.nodeIterator(model, node, dynEnv), dynEnv, predicate);\r\n-\t}\r\n-\r\n-    public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n+\t\tthis.predicate = predicate;\n+    }\n+\n+@Override\n+public <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\n+return new FilterNodeIterator<N>(model, expr.nodeIterator(model, node, dynEnv), dynEnv, predicate);\n+    }\n+\n+public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n         return new FilterTraverser(expr.traverseNodes(contextNode, dynEnv), dynEnv, predicate);\r\n     }\r\n \r\n     /*\r\n \t * OPT: if the expr is of the form position()=n, then SINGLE_LEVEL must be true\r\n-\t */\r\n-\tpublic int getOptimizeFlags()\r\n-\t{\r\n-\t\treturn expr.getOptimizeFlags();\r\n-\t}\r\n-\r\n-}\r\n+\t */\n+public int getOptimizeFlags()\r\n+\t{\n+    return expr.getOptimizeFlags();\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/13/FilterExpr.java\nindex de8c1366c8c..54d8d6acf4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/13/FilterExpr.java\n@@ -18,47 +18,48 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.expressions;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.nodes.Traverser;\r\n-import org.genxdm.nodes.TraversingInformer;\r\n-import org.genxdm.processor.xpath.v10.iterators.FilterNodeIterator;\r\n-import org.genxdm.processor.xpath.v10.iterators.FilterTraverser;\r\n-import org.genxdm.xpath.v10.BooleanExpr;\r\n-import org.genxdm.xpath.v10.TraverserDynamicContext;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n-import org.genxdm.xpath.v10.NodeIterator;\r\n-import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\r\n-\r\n-final class FilterExpr \r\n-    extends ConvertibleNodeSetExprImpl\r\n-{\r\n-\tprivate final ConvertibleNodeSetExpr expr;\r\n-\tprivate final BooleanExpr predicate;\r\n-\r\n-\tFilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)\r\n-\t{\r\n-\t\tsuper();\r\n-\t\tthis.expr = expr;\r\n-\t\tthis.predicate = predicate;\r\n-\t}\r\n-\r\n-    @Override\r\n-\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\r\n-\t\treturn new FilterNodeIterator<N>(model, expr.nodeIterator(model, node, dynEnv), dynEnv, predicate);\r\n-\t}\r\n-\r\n-    public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n-        return new FilterTraverser(expr.traverseNodes(contextNode, dynEnv), dynEnv, predicate);\r\n+package org.genxdm.processor.xpath.v10.expressions;\n+\n+import org.genxdm.Model;\n+import org.genxdm.nodes.Traverser;\n+import org.genxdm.nodes.TraversingInformer;\n+import org.genxdm.processor.xpath.v10.iterators.FilterNodeIterator;\n+import org.genxdm.processor.xpath.v10.iterators.FilterTraverser;\n+import org.genxdm.xpath.v10.BooleanExpr;\n+import org.genxdm.xpath.v10.TraverserDynamicContext;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n+import org.genxdm.xpath.v10.NodeIterator;\n+import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n+\n+final class FilterExpr extends ConvertibleNodeSetExprImpl\n+{\n+    private final ConvertibleNodeSetExpr expr;\n+    private final BooleanExpr predicate;\n+\n+    FilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)\n+    {\n+        super();\n+        this.expr = expr;\n+        this.predicate = predicate;\n+    }\n+\n+    @Override\n+    public <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv)\n+    {\n+        return new FilterNodeIterator<N>(model, expr.nodeIterator(model, node, dynEnv), dynEnv, predicate);\n+    }\n+\n+    public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+    {\n+        return new FilterTraverser(expr.traverseNodes(contextNode, dynEnv), dynEnv, predicate);\n     }\r\n \r\n     /*\r\n-\t * OPT: if the expr is of the form position()=n, then SINGLE_LEVEL must be true\r\n-\t */\r\n-\tpublic int getOptimizeFlags()\r\n-\t{\r\n-\t\treturn expr.getOptimizeFlags();\r\n-\t}\r\n-\r\n-}\r\n+     * OPT: if the expr is of the form position()=n, then SINGLE_LEVEL must be true\r\n+     */\n+\n+    public int getOptimizeFlags()\n+    {\n+        return expr.getOptimizeFlags();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/13/FilterExpr.java\nindex de8c1366c8c..06649ffea86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/13/FilterExpr.java\n@@ -34,7 +34,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n final class FilterExpr \r\n     extends ConvertibleNodeSetExprImpl\r\n {\r\n-\tprivate final ConvertibleNodeSetExpr expr;\r\n+private final ConvertibleNodeSetExpr expr;\r\n \tprivate final BooleanExpr predicate;\r\n \r\n \tFilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "38",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/13/FilterExpr.java\nindex de8c1366c8c..4d9e4cbad0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/13/FilterExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/13/FilterExpr.java\n@@ -34,7 +34,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n final class FilterExpr \r\n     extends ConvertibleNodeSetExprImpl\r\n {\r\n-\tprivate final ConvertibleNodeSetExpr expr;\r\n+    private final ConvertibleNodeSetExpr expr;\r\n \tprivate final BooleanExpr predicate;\r\n \r\n \tFilterExpr(final ConvertibleNodeSetExpr expr, final BooleanExpr predicate)\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
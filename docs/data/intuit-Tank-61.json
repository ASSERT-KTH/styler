{
    "project_name": "intuit-Tank",
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "122",
                "column": "13",
                "severity": "warning",
                "message": "'}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "            if (obj != null) {\n                outputs.put(name, obj);\n            }\n            else {\n                outputs.remove(name);\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/61/ScriptIOBean.java\nindex 144c3db746e..f876e376657 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/61/ScriptIOBean.java\n@@ -119,8 +119,7 @@ public class ScriptIOBean {\n         if (name != null) {\n             if (obj != null) {\n                 outputs.put(name, obj);\n-            }\n-            else {\n+            } else {\n                 outputs.remove(name);\n             }\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/61/ScriptIOBean.java\nindex 144c3db746e..08d24826551 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/61/ScriptIOBean.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright Linspire, Inc. 2007\n  */\n+\n package com.intuit.tank.tools.script;\n \n /*\n@@ -22,108 +23,101 @@ import java.util.Map;\n \n /**\n  * ScriptIOBean\n- * \n+ *\n  * <br>\n  * Patterns:\n- * \n+ *\n  * <br>\n  * Revisions: denis.angleton: Nov 29, 2007: Initial revision.\n- * \n+ *\n  * @author denis.angleton\n  */\n public class ScriptIOBean {\n \n-    static final long serialVersionUID = 1;\n-    private HashMap<String, Object> inputs;\n-    private HashMap<String, Object> outputs;\n-    private OutputLogger output;\n-\n-    /**\n-     * \n-     * @param in\n-     *            this inputs\n-     */\n-    public ScriptIOBean(Map<String, Object> in, OutputLogger output) {\n-        this.inputs = in != null ? new HashMap<String, Object>(in) : new HashMap<String, Object>();\n-        this.outputs = new HashMap<String, Object>();\n-        this.output = output;\n+  static final long serialVersionUID = 1;\n+  private HashMap<String, Object> inputs;\n+  private HashMap<String, Object> outputs;\n+  private OutputLogger output;\n \n-    }\n+  /**\n+   * @param in this inputs\n+   */\n+  public ScriptIOBean(Map<String, Object> in, OutputLogger output) {\n+    this.inputs = in != null ? new HashMap<String, Object>(in) : new HashMap<String, Object>();\n+    this.outputs = new HashMap<String, Object>();\n+    this.output = output;\n \n-    public void println(String text) {\n-        print(text + '\\n');\n-    }\n+  }\n \n-    public void print(String text) {\n-        if (output != null) {\n-            output.log(text);\n-        }\n-    }\n+  public void println(String text) {\n+    print(text + '\\n');\n+  }\n \n-    public void debug(String text) {\n-        if (output != null) {\n-            output.debug(text);\n-        }\n+  public void print(String text) {\n+    if (output != null) {\n+      output.log(text);\n     }\n+  }\n \n-    public void error(String text) {\n-        if (output != null) {\n-            output.error(text);\n-        }\n+  public void debug(String text) {\n+    if (output != null) {\n+      output.debug(text);\n     }\n+  }\n \n-    /**\n-     * @return the outputs\n-     */\n-    public Map<String, Object> getOutputs() {\n-        return new HashMap<String, Object>(outputs);\n+  public void error(String text) {\n+    if (output != null) {\n+      output.error(text);\n     }\n-\n-    /**\n-     * gets the input parameter with the specified name.\n-     * \n-     * @param name\n-     *            the nam of the parameter\n-     * @return Object the value\n-     */\n-    public Object getInput(String name) {\n-        if (name != null) {\n-            return inputs.get(name);\n-        }\n-        return null;\n+  }\n+\n+  /**\n+   * @return the outputs\n+   */\n+  public Map<String, Object> getOutputs() {\n+    return new HashMap<String, Object>(outputs);\n+  }\n+\n+  /**\n+   * gets the input parameter with the specified name.\n+   *\n+   * @param name the nam of the parameter\n+   * @return Object the value\n+   */\n+  public Object getInput(String name) {\n+    if (name != null) {\n+      return inputs.get(name);\n     }\n-\n-    /**\n-     * gets the input parameter with the specified name.\n-     * \n-     * @param name\n-     *            the nam of the parameter\n-     * @return Object the value\n-     */\n-    public Object getOutput(String name) {\n-        if (name != null) {\n-            return outputs.get(name);\n-        }\n-        return null;\n+    return null;\n+  }\n+\n+  /**\n+   * gets the input parameter with the specified name.\n+   *\n+   * @param name the nam of the parameter\n+   * @return Object the value\n+   */\n+  public Object getOutput(String name) {\n+    if (name != null) {\n+      return outputs.get(name);\n     }\n-\n-    /**\n-     * sets the output parameter specified.\n-     * \n-     * @param name\n-     *            the name of the output parameter\n-     * @param obj\n-     *            value to set or null to remove the output parameter\n-     */\n-    public void setOutput(String name, Object obj) {\n-        if (name != null) {\n-            if (obj != null) {\n-                outputs.put(name, obj);\n-            }\n-            else {\n-                outputs.remove(name);\n-            }\n-        }\n+    return null;\n+  }\n+\n+  /**\n+   * sets the output parameter specified.\n+   *\n+   * @param name the name of the output parameter\n+   * @param obj  value to set or null to remove the output parameter\n+   */\n+  public void setOutput(String name, Object obj) {\n+    if (name != null) {\n+      if (obj != null) {\n+        outputs.put(name, obj);\n+      } else {\n+        outputs.remove(name);\n+      }\n     }\n+  }\n \n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/61/ScriptIOBean.java\nindex 144c3db746e..925753d04a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/61/ScriptIOBean.java\n@@ -119,11 +119,10 @@ public class ScriptIOBean {\n         if (name != null) {\n             if (obj != null) {\n                 outputs.put(name, obj);\n-            }\n-            else {\n+            } else {\n                 outputs.remove(name);\n             }\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/61/ScriptIOBean.java\nindex 144c3db746e..fbe6c814b0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/61/ScriptIOBean.java\n@@ -17,6 +17,7 @@ package com.intuit.tank.tools.script;\n  */\n \n \n+\n import java.util.HashMap;\n import java.util.Map;\n \n@@ -31,6 +32,8 @@ import java.util.Map;\n  * \n  * @author denis.angleton\n  */\n+\n+\n public class ScriptIOBean {\n \n     static final long serialVersionUID = 1;\n@@ -43,29 +46,33 @@ public class ScriptIOBean {\n      * @param in\n      *            this inputs\n      */\n+\n     public ScriptIOBean(Map<String, Object> in, OutputLogger output) {\n         this.inputs = in != null ? new HashMap<String, Object>(in) : new HashMap<String, Object>();\n         this.outputs = new HashMap<String, Object>();\n         this.output = output;\n-\n     }\n \n+\n     public void println(String text) {\n         print(text + '\\n');\n     }\n \n+\n     public void print(String text) {\n         if (output != null) {\n             output.log(text);\n         }\n     }\n \n+\n     public void debug(String text) {\n         if (output != null) {\n             output.debug(text);\n         }\n     }\n \n+\n     public void error(String text) {\n         if (output != null) {\n             output.error(text);\n@@ -75,6 +82,8 @@ public class ScriptIOBean {\n     /**\n      * @return the outputs\n      */\n+\n+\n     public Map<String, Object> getOutputs() {\n         return new HashMap<String, Object>(outputs);\n     }\n@@ -86,6 +95,8 @@ public class ScriptIOBean {\n      *            the nam of the parameter\n      * @return Object the value\n      */\n+\n+\n     public Object getInput(String name) {\n         if (name != null) {\n             return inputs.get(name);\n@@ -100,6 +111,8 @@ public class ScriptIOBean {\n      *            the nam of the parameter\n      * @return Object the value\n      */\n+\n+\n     public Object getOutput(String name) {\n         if (name != null) {\n             return outputs.get(name);\n@@ -115,15 +128,15 @@ public class ScriptIOBean {\n      * @param obj\n      *            value to set or null to remove the output parameter\n      */\n+\n+\n     public void setOutput(String name, Object obj) {\n         if (name != null) {\n             if (obj != null) {\n                 outputs.put(name, obj);\n-            }\n-            else {\n+            } else {\n                 outputs.remove(name);\n             }\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/61/ScriptIOBean.java\nindex 144c3db746e..f876e376657 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/61/ScriptIOBean.java\n@@ -119,8 +119,7 @@ public class ScriptIOBean {\n         if (name != null) {\n             if (obj != null) {\n                 outputs.put(name, obj);\n-            }\n-            else {\n+            } else {\n                 outputs.remove(name);\n             }\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/61/ScriptIOBean.java\nindex 144c3db746e..f876e376657 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/61/ScriptIOBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/61/ScriptIOBean.java\n@@ -119,8 +119,7 @@ public class ScriptIOBean {\n         if (name != null) {\n             if (obj != null) {\n                 outputs.put(name, obj);\n-            }\n-            else {\n+            } else {\n                 outputs.remove(name);\n             }\n         }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
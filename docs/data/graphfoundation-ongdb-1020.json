{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1020",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1020/DistributedOperation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1020/DistributedOperation.java\nindex 3d11265636c..d66b98efa6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1020/DistributedOperation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1020/DistributedOperation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.replication;\n \n import java.io.IOException;\n@@ -33,80 +34,80 @@ import org.neo4j.storageengine.api.WritableChannel;\n /**\n  * A uniquely identifiable operation.\n  */\n-public class  DistributedOperation implements ReplicatedContent\n+public class DistributedOperation implements ReplicatedContent\n {\n-    private final ReplicatedContent content;\n-    private final GlobalSession globalSession;\n-    private final LocalOperationId operationId;\n-\n-    public DistributedOperation( ReplicatedContent content, GlobalSession globalSession, LocalOperationId operationId )\n-    {\n-        this.content = content;\n-        this.globalSession = globalSession;\n-        this.operationId = operationId;\n-    }\n-\n-    public GlobalSession globalSession()\n-    {\n-        return globalSession;\n-    }\n-\n-    public LocalOperationId operationId()\n-    {\n-        return operationId;\n-    }\n-\n-    public ReplicatedContent content()\n-    {\n-        return content;\n-    }\n-\n-    @Override\n-    public boolean hasSize()\n-    {\n-        return content.hasSize();\n-    }\n-\n-    @Override\n-    public long size()\n-    {\n-        return content.size();\n-    }\n-\n-    public void serialize( WritableChannel channel ) throws IOException\n-    {\n-        channel.putLong( globalSession().sessionId().getMostSignificantBits() );\n-        channel.putLong( globalSession().sessionId().getLeastSignificantBits() );\n-        new MemberId.Marshal().marshal( globalSession().owner(), channel );\n-\n-        channel.putLong( operationId.localSessionId() );\n-        channel.putLong( operationId.sequenceNumber() );\n-\n-        new CoreReplicatedContentMarshal().marshal( content, channel );\n-    }\n-\n-    public static DistributedOperation deserialize( ReadableChannel channel ) throws IOException, EndOfStreamException\n-    {\n-        long mostSigBits = channel.getLong();\n-        long leastSigBits = channel.getLong();\n-        MemberId owner = new MemberId.Marshal().unmarshal( channel );\n-        GlobalSession globalSession = new GlobalSession( new UUID( mostSigBits, leastSigBits ), owner );\n-\n-        long localSessionId = channel.getLong();\n-        long sequenceNumber = channel.getLong();\n-        LocalOperationId localOperationId = new LocalOperationId( localSessionId, sequenceNumber );\n-\n-        ReplicatedContent content = new CoreReplicatedContentMarshal().unmarshal( channel );\n-        return new DistributedOperation( content, globalSession, localOperationId );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"DistributedOperation{\" +\n-               \"content=\" + content +\n-               \", globalSession=\" + globalSession +\n-               \", operationId=\" + operationId +\n-               '}';\n-    }\n+  private final ReplicatedContent content;\n+  private final GlobalSession globalSession;\n+  private final LocalOperationId operationId;\n+\n+  public DistributedOperation(ReplicatedContent content, GlobalSession globalSession, LocalOperationId operationId)\n+  {\n+    this.content = content;\n+    this.globalSession = globalSession;\n+    this.operationId = operationId;\n+  }\n+\n+  public GlobalSession globalSession()\n+  {\n+    return globalSession;\n+  }\n+\n+  public LocalOperationId operationId()\n+  {\n+    return operationId;\n+  }\n+\n+  public ReplicatedContent content()\n+  {\n+    return content;\n+  }\n+\n+  @Override\n+  public boolean hasSize()\n+  {\n+    return content.hasSize();\n+  }\n+\n+  @Override\n+  public long size()\n+  {\n+    return content.size();\n+  }\n+\n+  public void serialize(WritableChannel channel) throws IOException\n+  {\n+    channel.putLong(globalSession().sessionId().getMostSignificantBits());\n+    channel.putLong(globalSession().sessionId().getLeastSignificantBits());\n+    new MemberId.Marshal().marshal(globalSession().owner(), channel);\n+\n+    channel.putLong(operationId.localSessionId());\n+    channel.putLong(operationId.sequenceNumber());\n+\n+    new CoreReplicatedContentMarshal().marshal(content, channel);\n+  }\n+\n+  public static DistributedOperation deserialize(ReadableChannel channel) throws IOException, EndOfStreamException\n+  {\n+    long mostSigBits = channel.getLong();\n+    long leastSigBits = channel.getLong();\n+    MemberId owner = new MemberId.Marshal().unmarshal(channel);\n+    GlobalSession globalSession = new GlobalSession(new UUID(mostSigBits, leastSigBits), owner);\n+\n+    long localSessionId = channel.getLong();\n+    long sequenceNumber = channel.getLong();\n+    LocalOperationId localOperationId = new LocalOperationId(localSessionId, sequenceNumber);\n+\n+    ReplicatedContent content = new CoreReplicatedContentMarshal().unmarshal(channel);\n+    return new DistributedOperation(content, globalSession, localOperationId);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"DistributedOperation{\" +\n+        \"content=\" + content +\n+        \", globalSession=\" + globalSession +\n+        \", operationId=\" + operationId +\n+        '}';\n+  }\n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1020/DistributedOperation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1020/DistributedOperation.java\nindex 3d11265636c..97adeb8c420 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1020/DistributedOperation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1020/DistributedOperation.java\n@@ -33,7 +33,7 @@ import org.neo4j.storageengine.api.WritableChannel;\n /**\n  * A uniquely identifiable operation.\n  */\n-public class  DistributedOperation implements ReplicatedContent\n+public class DistributedOperation implements ReplicatedContent\n {\n     private final ReplicatedContent content;\n     private final GlobalSession globalSession;\n@@ -78,8 +78,7 @@ public class  DistributedOperation implements ReplicatedContent\n         channel.putLong( globalSession().sessionId().getMostSignificantBits() );\n         channel.putLong( globalSession().sessionId().getLeastSignificantBits() );\n         new MemberId.Marshal().marshal( globalSession().owner(), channel );\n-\n-        channel.putLong( operationId.localSessionId() );\n+channel.putLong( operationId.localSessionId() );\n         channel.putLong( operationId.sequenceNumber() );\n \n         new CoreReplicatedContentMarshal().marshal( content, channel );\n@@ -95,18 +94,13 @@ public class  DistributedOperation implements ReplicatedContent\n         long localSessionId = channel.getLong();\n         long sequenceNumber = channel.getLong();\n         LocalOperationId localOperationId = new LocalOperationId( localSessionId, sequenceNumber );\n-\n-        ReplicatedContent content = new CoreReplicatedContentMarshal().unmarshal( channel );\n+ReplicatedContent content = new CoreReplicatedContentMarshal().unmarshal( channel );\n         return new DistributedOperation( content, globalSession, localOperationId );\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"DistributedOperation{\" +\n-               \"content=\" + content +\n-               \", globalSession=\" + globalSession +\n-               \", operationId=\" + operationId +\n-               '}';\n+        return \"DistributedOperation{\" + \"content=\" + content + \", globalSession=\" + globalSession + \", operationId=\" + operationId + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1745",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1745/TimelineIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1745/TimelineIndex.java\nindex dafe1d64b63..1672cc44d7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1745/TimelineIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1745/TimelineIndex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.lucene;\n \n import org.neo4j.graphdb.Node;\n@@ -29,67 +30,67 @@ import org.neo4j.graphdb.index.IndexHits;\n  * to the timeline and then queried given a time period, w/ or w/o lower/upper\n  * bounds, for example \"Give me all entities before this given timestamp\" or\n  * \"Give me all nodes between these two timestamps\".\n- *\n+ * <p>\n  * Please note that the timestamps don't need to represent actual points in\n  * time, any <code>long</code> that identifies the indexed {@link Node} or\n  * {@link Relationship} and defines its global order is fine.\n  */\n public interface TimelineIndex<T extends PropertyContainer>\n {\n-    /**\n-     * @return the last entity in the timeline, that is the entity with the highest\n-     * timestamp or {@code null} if the timeline is empty.\n-     */\n-    T getLast();\n+  /**\n+   * @return the last entity in the timeline, that is the entity with the highest\n+   * timestamp or {@code null} if the timeline is empty.\n+   */\n+  T getLast();\n \n-    /**\n-     * @return the first entity in the timeline, that is the entity with the lowest\n-     * timestamp or {@code null} if the timeline is empty.\n-     */\n-    T getFirst();\n+  /**\n+   * @return the first entity in the timeline, that is the entity with the lowest\n+   * timestamp or {@code null} if the timeline is empty.\n+   */\n+  T getFirst();\n \n-    /**\n-     * Removes an entity from the timeline. The timestamp should be the same\n-     * as when it was added.\n-     *\n-     * @param entity the entity to remove from this timeline.\n-     * @param timestamp the timestamp this entity was added with.\n-     */\n-    void remove( T entity, long timestamp );\n+  /**\n+   * Removes an entity from the timeline. The timestamp should be the same\n+   * as when it was added.\n+   *\n+   * @param entity    the entity to remove from this timeline.\n+   * @param timestamp the timestamp this entity was added with.\n+   */\n+  void remove(T entity, long timestamp);\n \n-    /**\n-     * Adds an entity to this timeline with the given {@code timestamp}.\n-     *\n-     * @param entity the entity to add to this timeline.\n-     * @param timestamp the timestamp to use.\n-     */\n-    void add( T entity, long timestamp );\n+  /**\n+   * Adds an entity to this timeline with the given {@code timestamp}.\n+   *\n+   * @param entity    the entity to add to this timeline.\n+   * @param timestamp the timestamp to use.\n+   */\n+  void add(T entity, long timestamp);\n \n-    /**\n-     * Query the timeline with optional lower/upper bounds and get back\n-     * entities within that range, ordered by date. If {@code reversed} is\n-     * {@code true} the order of the result is reversed.\n-     *\n-     * @param startTimestampOrNull the start timestamp, entities with greater\n-     * timestamp value will be returned (exclusive). Will be ignored if {@code null}.\n-     * @param endTimestampOrNull the end timestamp, entities with lesser timestamp\n-     * @param reversed reverses the result order if {@code true}.\n-     * value will be returned (exclude). Will be ignored if {@code null}.\n-     * @return all entities within the given boundaries in this timeline, ordered\n-     * by timestamp.\n-     */\n-    IndexHits<T> getBetween( Long startTimestampOrNull, Long endTimestampOrNull, boolean reversed );\n+  /**\n+   * Query the timeline with optional lower/upper bounds and get back\n+   * entities within that range, ordered by date. If {@code reversed} is\n+   * {@code true} the order of the result is reversed.\n+   *\n+   * @param startTimestampOrNull the start timestamp, entities with greater\n+   *                             timestamp value will be returned (exclusive). Will be ignored if {@code null}.\n+   * @param endTimestampOrNull   the end timestamp, entities with lesser timestamp\n+   * @param reversed             reverses the result order if {@code true}.\n+   *                             value will be returned (exclude). Will be ignored if {@code null}.\n+   * @return all entities within the given boundaries in this timeline, ordered\n+   * by timestamp.\n+   */\n+  IndexHits<T> getBetween(Long startTimestampOrNull, Long endTimestampOrNull, boolean reversed);\n \n-    /**\n-     * Query the timeline with optional lower/upper bounds and get back\n-     * entities within that range, ordered by date with lowest first.\n-     *\n-     * @param startTimestampOrNull the start timestamp, entities with greater\n-     * timestamp value will be returned (exclusive). Will be ignored if {@code null}.\n-     * @param endTimestampOrNull the end timestamp, entities with lesser timestamp\n-     * value will be returned (exclude). Will be ignored if {@code null}.\n-     * @return all entities within the given boundaries in this timeline, ordered\n-     * by timestamp.\n-     */\n-    IndexHits<T> getBetween( Long startTimestampOrNull, Long endTimestampOrNull );\n+  /**\n+   * Query the timeline with optional lower/upper bounds and get back\n+   * entities within that range, ordered by date with lowest first.\n+   *\n+   * @param startTimestampOrNull the start timestamp, entities with greater\n+   *                             timestamp value will be returned (exclusive). Will be ignored if {@code null}.\n+   * @param endTimestampOrNull   the end timestamp, entities with lesser timestamp\n+   *                             value will be returned (exclude). Will be ignored if {@code null}.\n+   * @return all entities within the given boundaries in this timeline, ordered\n+   * by timestamp.\n+   */\n+  IndexHits<T> getBetween(Long startTimestampOrNull, Long endTimestampOrNull);\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1745/TimelineIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1745/TimelineIndex.java\nindex dafe1d64b63..47980f4cd9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1745/TimelineIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1745/TimelineIndex.java\n@@ -92,4 +92,4 @@ public interface TimelineIndex<T extends PropertyContainer>\n      * by timestamp.\n      */\n     IndexHits<T> getBetween( Long startTimestampOrNull, Long endTimestampOrNull );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2685",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2685/ThrowingFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2685/ThrowingFunction.java\nindex 913c07b3355..f8f269552f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2685/ThrowingFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2685/ThrowingFunction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.function;\n \n import java.util.Optional;\n@@ -31,61 +32,57 @@ import java.util.function.Function;\n  */\n public interface ThrowingFunction<T, R, E extends Exception>\n {\n-    /**\n-     * Apply a value to this function\n-     *\n-     * @param t the function argument\n-     * @return the function result\n-     * @throws E an exception if the function fails\n-     */\n-    R apply( T t ) throws E;\n+  /**\n+   * Apply a value to this function\n+   *\n+   * @param t the function argument\n+   * @return the function result\n+   * @throws E an exception if the function fails\n+   */\n+  R apply(T t) throws E;\n \n-    /**\n-     * Construct a regular function that calls a throwing function and catches all checked exceptions\n-     * declared and thrown by the throwing function and rethrows them as {@link UncaughtCheckedException}\n-     * for handling further up the stack.\n-     *\n-     * @see UncaughtCheckedException\n-     *\n-     * @param throwing the throwing function to wtap\n-     * @param <T> type of arguments\n-     * @param <R> type of results\n-     * @param <E> type of checked exceptions thrown by the throwing function\n-     * @return a new, non-throwing function\n-     * @throws IllegalStateException if an unexpected exception is caught (ie. neither of type E or a runtime exception)\n-     */\n-    static <T, R, E extends Exception> Function<T, R> catchThrown( Class<E> clazz, ThrowingFunction<T, R, E> throwing )\n+  /**\n+   * Construct a regular function that calls a throwing function and catches all checked exceptions\n+   * declared and thrown by the throwing function and rethrows them as {@link UncaughtCheckedException}\n+   * for handling further up the stack.\n+   *\n+   * @param throwing the throwing function to wtap\n+   * @param <T>      type of arguments\n+   * @param <R>      type of results\n+   * @param <E>      type of checked exceptions thrown by the throwing function\n+   * @return a new, non-throwing function\n+   * @throws IllegalStateException if an unexpected exception is caught (ie. neither of type E or a runtime exception)\n+   * @see UncaughtCheckedException\n+   */\n+  static <T, R, E extends Exception> Function<T, R> catchThrown(Class<E> clazz, ThrowingFunction<T, R, E> throwing)\n+  {\n+    return input ->\n     {\n-        return input ->\n+      try\n+      {\n+        return throwing.apply(input);\n+      } catch (Exception e)\n+      {\n+        if (clazz.isInstance(e))\n         {\n-            try\n-            {\n-                return throwing.apply( input );\n-            }\n-            catch ( Exception e )\n-            {\n-                if ( clazz.isInstance( e ) )\n-                {\n-                    throw new UncaughtCheckedException( throwing, clazz.cast( e ) );\n-                }\n-                else if ( e instanceof RuntimeException )\n-                {\n-                    throw (RuntimeException) e;\n-                }\n-                else\n-                {\n-                    throw new IllegalStateException( \"Unexpected exception\", e );\n-                }\n-            }\n-        };\n-    }\n-\n-    @SuppressWarnings( \"OptionalUsedAsFieldOrParameterType\" )\n-    static <E extends Exception> void throwIfPresent( Optional<E> exception ) throws E\n-    {\n-        if ( exception.isPresent() )\n+          throw new UncaughtCheckedException(throwing, clazz.cast(e));\n+        } else if (e instanceof RuntimeException)\n         {\n-            throw exception.get();\n+          throw (RuntimeException) e;\n+        } else\n+        {\n+          throw new IllegalStateException(\"Unexpected exception\", e);\n         }\n+      }\n+    };\n+  }\n+\n+  @SuppressWarnings(\"OptionalUsedAsFieldOrParameterType\")\n+  static <E extends Exception> void throwIfPresent(Optional<E> exception) throws E\n+  {\n+    if (exception.isPresent())\n+    {\n+      throw exception.get();\n     }\n+  }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2685/ThrowingFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2685/ThrowingFunction.java\nindex 913c07b3355..1300c6d90d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2685/ThrowingFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2685/ThrowingFunction.java\n@@ -54,7 +54,7 @@ public interface ThrowingFunction<T, R, E extends Exception>\n      * @return a new, non-throwing function\n      * @throws IllegalStateException if an unexpected exception is caught (ie. neither of type E or a runtime exception)\n      */\n-    static <T, R, E extends Exception> Function<T, R> catchThrown( Class<E> clazz, ThrowingFunction<T, R, E> throwing )\n+    static <T, R, E extends Exception> Function<T,R> catchThrown( Class<E> clazz, ThrowingFunction<T, R, E> throwing )\n     {\n         return input ->\n         {\n@@ -88,4 +88,4 @@ public interface ThrowingFunction<T, R, E extends Exception>\n             throw exception.get();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
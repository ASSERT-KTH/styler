{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "89",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "78",
                "severity": "error",
                "message": "'}' at column 78 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public void initialize(\n      ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "78",
                    "severity": "error",
                    "message": "'}' at column 78 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\nindex e2ef4b614be..39f2fc56057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n@@ -28,7 +28,7 @@ public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n   public void initialize(\n       ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {}\n \n-  /*\n+      /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\nindex e2ef4b614be..50375093cd4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n@@ -13,9 +13,8 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n /**\n  * Validates the valid responses of a variable. It checks the values has a numeric string, if the\n  * variable has a numeric data type.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n     ConstraintValidator<ValidResponseValueMustBeAnIsoDateOnDateDataType, Variable> {\n@@ -26,11 +25,12 @@ public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n    */\n   @Override\n   public void initialize(\n-      ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {}\n+      ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'Variable' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\nindex e2ef4b614be..d37a6f07c81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n@@ -2,10 +2,8 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import java.time.LocalDate;\n import java.time.format.DateTimeParseException;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.DataTypes;\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.ValidResponse;\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n@@ -17,16 +15,20 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n-    ConstraintValidator<ValidResponseValueMustBeAnIsoDateOnDateDataType, Variable> {\n+\n+\n+public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements ConstraintValidator<ValidResponseValueMustBeAnIsoDateOnDateDataType,\n+Variable> {\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(\n-      ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {}\n+  public void initialize(ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -34,20 +36,20 @@ public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(Variable variable, ConstraintValidatorContext context) {\n \n-    if (variable == null || variable.getDataType() == null\n+\n+  @Override\n+  public boolean isValid(Variable variable,\n+    ConstraintValidatorContext context) {\n+    if (variable == null\n+        || variable.getDataType() == null\n         || variable.getDistribution() == null\n         || variable.getDistribution().getValidResponses() == null) {\n       return true;\n     }\n-\n-    if (variable.getDataType()\n-        .equals(DataTypes.DATE)) {\n+    if (variable.getDataType().equals(DataTypes.DATE)) {\n       for (ValidResponse validResponse : variable.getDistribution().getValidResponses()) {\n         // if one value is not iso standard ... send a false.\n-\n         try {\n           LocalDate.parse(validResponse.getValue());\n           return true;\n@@ -58,7 +60,7 @@ public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n     }\n \n     // no date, everything is okay.\n+\n     return true;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "78",
                    "severity": "error",
                    "message": "'}' at column 78 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\nindex e2ef4b614be..39f2fc56057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n@@ -28,7 +28,7 @@ public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n   public void initialize(\n       ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {}\n \n-  /*\n+      /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "78",
                    "severity": "error",
                    "message": "'}' at column 78 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\nindex e2ef4b614be..ef9c26b50d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/89/ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator.java\n@@ -27,8 +27,7 @@ public class ValidResponseValueMustBeAnIsoDateOnDateDataTypeValidator implements\n   @Override\n   public void initialize(\n       ValidResponseValueMustBeAnIsoDateOnDateDataType constraintAnnotation) {}\n-\n-  /*\n+      /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "819",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "51",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/819/BeanProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/819/BeanProxy.java\nindex 30f24666b65..e3d877de676 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/819/BeanProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/819/BeanProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.management.impl;\n \n import java.io.IOException;\n@@ -31,60 +32,56 @@ import org.neo4j.helpers.Exceptions;\n \n public class BeanProxy\n {\n-    private static final BeanProxy INSTANCE = new BeanProxy();\n+  private static final BeanProxy INSTANCE = new BeanProxy();\n \n-    public static <T> T load( MBeanServerConnection mbs, Class<T> beanInterface, ObjectName name )\n-    {\n-        return INSTANCE.makeProxy( mbs, beanInterface, name );\n-    }\n+  public static <T> T load(MBeanServerConnection mbs, Class<T> beanInterface, ObjectName name)\n+  {\n+    return INSTANCE.makeProxy(mbs, beanInterface, name);\n+  }\n \n-    static <T> Collection<T> loadAll( MBeanServerConnection mbs, Class<T> beanInterface, ObjectName query )\n+  static <T> Collection<T> loadAll(MBeanServerConnection mbs, Class<T> beanInterface, ObjectName query)\n+  {\n+    Collection<T> beans = new LinkedList<>();\n+    try\n+    {\n+      for (ObjectName name : mbs.queryNames(query, null))\n+      {\n+        beans.add(INSTANCE.makeProxy(mbs, beanInterface, name));\n+      }\n+    } catch (IOException e)\n     {\n-        Collection<T> beans = new LinkedList<>();\n-        try\n-        {\n-            for ( ObjectName name : mbs.queryNames( query, null ) )\n-            {\n-                beans.add( INSTANCE.makeProxy( mbs, beanInterface, name ) );\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            // fall through and return the empty collection...\n-        }\n-        return beans;\n+      // fall through and return the empty collection...\n     }\n+    return beans;\n+  }\n \n-    private final Method newMXBeanProxy;\n+  private final Method newMXBeanProxy;\n \n-    private BeanProxy()\n+  private BeanProxy()\n+  {\n+    try\n     {\n-        try\n-        {\n-            Class<?> jmx = Class.forName( \"javax.management.JMX\" );\n-            this.newMXBeanProxy = jmx.getMethod( \"newMXBeanProxy\", MBeanServerConnection.class, ObjectName.class, Class.class );\n-        }\n-        catch ( ClassNotFoundException | NoSuchMethodException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      Class<?> jmx = Class.forName(\"javax.management.JMX\");\n+      this.newMXBeanProxy = jmx.getMethod(\"newMXBeanProxy\", MBeanServerConnection.class, ObjectName.class, Class.class);\n+    } catch (ClassNotFoundException | NoSuchMethodException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private <T> T makeProxy( MBeanServerConnection mbs, Class<T> beanInterface, ObjectName name )\n+  private <T> T makeProxy(MBeanServerConnection mbs, Class<T> beanInterface, ObjectName name)\n+  {\n+    try\n+    {\n+      return beanInterface.cast(newMXBeanProxy.invoke(null, mbs, name, beanInterface));\n+    } catch (InvocationTargetException exception)\n+    {\n+      Exceptions.throwIfUnchecked(exception.getTargetException());\n+      throw new RuntimeException(exception.getTargetException());\n+    } catch (Exception exception)\n     {\n-        try\n-        {\n-            return beanInterface.cast( newMXBeanProxy.invoke( null, mbs, name, beanInterface ) );\n-        }\n-        catch ( InvocationTargetException exception )\n-        {\n-            Exceptions.throwIfUnchecked( exception.getTargetException() );\n-            throw new RuntimeException( exception.getTargetException() );\n-        }\n-        catch ( Exception exception )\n-        {\n-            throw new UnsupportedOperationException(\n-                    \"Creating Management Bean proxies requires Java 1.6\", exception );\n-        }\n+      throw new UnsupportedOperationException(\n+          \"Creating Management Bean proxies requires Java 1.6\", exception);\n     }\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/819/BeanProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/819/BeanProxy.java\nindex 30f24666b65..053f3a196ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/819/BeanProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/819/BeanProxy.java\n@@ -52,7 +52,8 @@ public class BeanProxy\n         {\n             // fall through and return the empty collection...\n         }\n-        return beans;\n+\n+return beans;\n     }\n \n     private final Method newMXBeanProxy;\n@@ -83,8 +84,7 @@ public class BeanProxy\n         }\n         catch ( Exception exception )\n         {\n-            throw new UnsupportedOperationException(\n-                    \"Creating Management Bean proxies requires Java 1.6\", exception );\n-        }\n+            throw new UnsupportedOperationException( \"Creating Management Bean proxies requires Java 1.6\", exception );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
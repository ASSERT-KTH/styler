{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "212",
    "information": {
        "errors": [
            {
                "line": "36",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "{\n\n\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\n\t{\n\t\tfinal StringExpr se = e.makeStringExpr(statEnv);\n\t\treturn new ConvertibleNumberExpr()",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/212/StringLengthFunction.java\nindex 34e92c022b7..4fca5cf1ff8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/212/StringLengthFunction.java\n@@ -33,7 +33,7 @@ public final class StringLengthFunction\n     extends FunctionOpt1\r\n {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n+ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n \t{\r\n \t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n \t\treturn new ConvertibleNumberExpr()\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/212/StringLengthFunction.java\nindex 34e92c022b7..ad6fa97c703 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/212/StringLengthFunction.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.functions;\r\n \r\n import org.genxdm.Model;\r\n@@ -29,38 +30,32 @@ import org.genxdm.xpath.v10.ExprException;\n import org.genxdm.xpath.v10.StringExpr;\r\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n-public final class StringLengthFunction \r\n-    extends FunctionOpt1\r\n-{\r\n+public final class StringLengthFunction\r\n+    extends FunctionOpt1 {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n-\t{\r\n-\t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n-\t\treturn new ConvertibleNumberExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn stringLength(se.stringFunction(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) {\r\n+        final StringExpr se = e.makeStringExpr(statEnv);\r\n+        return new ConvertibleNumberExpr() {\r\n+            public <N> double numberFunction(Model<N> model, final N contextNode,\r\n+                                             final ExprContextDynamic<N> dynEnv)\r\n+                throws ExprException {\r\n+                return stringLength(se.stringFunction(model, contextNode, dynEnv));\r\n+            }\r\n+        };\r\n+    }\r\n \r\n-\tprivate final static boolean isLowSurrogate(final char c)\r\n-\t{\r\n-\t\treturn (c & 0xFC00) == 0xD800;\r\n-\t}\r\n+    private final static boolean isLowSurrogate(final char c) {\r\n+        return (c & 0xFC00) == 0xD800;\r\n+    }\r\n \r\n-\tprivate final static int stringLength(final String s)\r\n-\t{\r\n-\t\tint n = s.length();\r\n-\t\tint len = n;\r\n-\t\tfor (int i = 0; i < n; i++)\r\n-\t\t{\r\n-\t\t\tif (isLowSurrogate(s.charAt(i)))\r\n-\t\t\t{\r\n-\t\t\t\t--len;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\treturn len;\r\n-\t}\r\n+    private final static int stringLength(final String s) {\r\n+        int n = s.length();\r\n+        int len = n;\r\n+        for (int i = 0; i < n; i++) {\r\n+            if (isLowSurrogate(s.charAt(i))) {\r\n+                --len;\r\n+            }\r\n+        }\r\n+        return len;\r\n+    }\r\n }\r\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/212/StringLengthFunction.java\nindex 34e92c022b7..940f4aa5c6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/212/StringLengthFunction.java\n@@ -30,37 +30,36 @@ import org.genxdm.xpath.v10.StringExpr;\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n public final class StringLengthFunction \r\n-    extends FunctionOpt1\r\n-{\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n-\t{\r\n-\t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n+    extends FunctionOpt1\n+{\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n+\t{\n+    final StringExpr se = e.makeStringExpr(statEnv);\r\n \t\treturn new ConvertibleNumberExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn stringLength(se.stringFunction(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n+\t\t{\n+    public <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n+\t\t\t{\n+    return stringLength(se.stringFunction(model, contextNode, dynEnv));\n+    }\n+    };\n+    }\r\n \r\n \tprivate final static boolean isLowSurrogate(final char c)\r\n-\t{\r\n-\t\treturn (c & 0xFC00) == 0xD800;\r\n-\t}\r\n+\t{\n+    return (c & 0xFC00) == 0xD800;\n+    }\r\n \r\n \tprivate final static int stringLength(final String s)\r\n-\t{\r\n-\t\tint n = s.length();\r\n+\t{\n+    int n = s.length();\r\n \t\tint len = n;\r\n \t\tfor (int i = 0; i < n; i++)\r\n-\t\t{\r\n-\t\t\tif (isLowSurrogate(s.charAt(i)))\r\n-\t\t\t{\r\n-\t\t\t\t--len;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\treturn len;\r\n-\t}\r\n-}\r\n+\t\t{\n+    if (isLowSurrogate(s.charAt(i)))\r\n+\t\t\t{\n+    --len;\n+    }\n+    }\r\n+\t\treturn len;\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/212/StringLengthFunction.java\nindex 34e92c022b7..9427c871d41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/212/StringLengthFunction.java\n@@ -18,49 +18,47 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.functions;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleNumberExpr;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n-import org.genxdm.xpath.v10.ExprContextStatic;\r\n-import org.genxdm.xpath.v10.ExprException;\r\n-import org.genxdm.xpath.v10.StringExpr;\r\n-import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n-\r\n-public final class StringLengthFunction \r\n-    extends FunctionOpt1\r\n-{\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n-\t{\r\n-\t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n-\t\treturn new ConvertibleNumberExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn stringLength(se.stringFunction(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n-\r\n-\tprivate final static boolean isLowSurrogate(final char c)\r\n-\t{\r\n-\t\treturn (c & 0xFC00) == 0xD800;\r\n-\t}\r\n-\r\n-\tprivate final static int stringLength(final String s)\r\n-\t{\r\n-\t\tint n = s.length();\r\n-\t\tint len = n;\r\n-\t\tfor (int i = 0; i < n; i++)\r\n-\t\t{\r\n-\t\t\tif (isLowSurrogate(s.charAt(i)))\r\n-\t\t\t{\r\n-\t\t\t\t--len;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\treturn len;\r\n-\t}\r\n-}\r\n+package org.genxdm.processor.xpath.v10.functions;\n+\n+import org.genxdm.Model;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleNumberExpr;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n+import org.genxdm.xpath.v10.ExprContextStatic;\n+import org.genxdm.xpath.v10.ExprException;\n+import org.genxdm.xpath.v10.StringExpr;\n+import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n+\n+public final class StringLengthFunction extends FunctionOpt1\n+{\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\n+    {\n+        final StringExpr se = e.makeStringExpr(statEnv);\n+        return new ConvertibleNumberExpr()\n+        {\n+            public <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\n+            {\n+                return stringLength(se.stringFunction(model, contextNode, dynEnv));\n+            }\n+        };\n+    }\n+\n+    private final static boolean isLowSurrogate(final char c)\n+    {\n+        return (c & 0xFC00) == 0xD800;\n+    }\n+\n+    private final static int stringLength(final String s)\n+    {\n+        int n = s.length();\n+        int len = n;\n+        for (int i = 0; i < n; i++)\n+        {\n+            if (isLowSurrogate(s.charAt(i)))\n+            {\n+                --len;\n+            }\n+        }\n+        return len;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/212/StringLengthFunction.java\nindex 34e92c022b7..4fca5cf1ff8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/212/StringLengthFunction.java\n@@ -33,7 +33,7 @@ public final class StringLengthFunction\n     extends FunctionOpt1\r\n {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n+ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n \t{\r\n \t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n \t\treturn new ConvertibleNumberExpr()\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/212/StringLengthFunction.java\nindex 34e92c022b7..8068d86d688 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/212/StringLengthFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/212/StringLengthFunction.java\n@@ -33,7 +33,7 @@ public final class StringLengthFunction\n     extends FunctionOpt1\r\n {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n \t{\r\n \t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n \t\treturn new ConvertibleNumberExpr()\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
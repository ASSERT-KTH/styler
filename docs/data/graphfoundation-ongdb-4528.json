{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4528",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "150",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "197",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "234",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "243",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "291",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "23",
                    "severity": "error",
                    "message": "'}' at column 23 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "340",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "356",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "399",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "422",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "448",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4528/ProposerState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4528/ProposerState.java\nindex deab3d22538..4c317a1d5d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4528/ProposerState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4528/ProposerState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos;\n \n import java.net.URI;\n@@ -33,462 +34,447 @@ import org.neo4j.cluster.statemachine.State;\n  * State machine for Paxos Proposer\n  */\n public enum ProposerState\n-        implements State<ProposerContext, ProposerMessage>\n+    implements State<ProposerContext, ProposerMessage>\n {\n-    start\n+  start\n+      {\n+        @Override\n+        public ProposerState handle(ProposerContext context,\n+                                    Message<ProposerMessage> message,\n+                                    MessageHolder outgoing\n+        )\n+        {\n+          if (message.getMessageType() == ProposerMessage.join)\n+          {\n+            return proposer;\n+          }\n+\n+          return this;\n+        }\n+      },\n+\n+  proposer\n+      {\n+        @Override\n+        public ProposerState handle(ProposerContext context,\n+                                    Message<ProposerMessage> message,\n+                                    MessageHolder outgoing\n+        )\n+        {\n+          switch (message.getMessageType())\n+          {\n+            case propose:\n             {\n-                @Override\n-                public ProposerState handle( ProposerContext context,\n-                                             Message<ProposerMessage> message,\n-                                             MessageHolder outgoing\n-                )\n+              propose(context, message, outgoing, determineAcceptorSet(message, context));\n+              break;\n+            }\n+\n+            case rejectPrepare:\n+            {\n+              // Denial of prepare\n+              ProposerMessage.RejectPrepare rejectPropose = message.getPayload();\n+              org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n+                  new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId(message);\n+              PaxosInstance instance = context.getPaxosInstance(instanceId);\n+              context.getLog(ProposerState.class).debug(\"Propose for instance \" + instance\n+                  + \" rejected from \" + message.getHeader(Message.HEADER_FROM) + \" with ballot \"\n+                  + rejectPropose.getBallot());\n+\n+              // Ignore multiple rejects on same prepare\n+              if (instance.isState(PaxosInstance.State.p1_pending) &&\n+                  instance.getBallot() < rejectPropose.getBallot())\n+              {\n+                long ballot = instance.ballot;\n+                while (ballot <= rejectPropose.getBallot())\n                 {\n-                    if ( message.getMessageType() == ProposerMessage.join )\n-                    {\n-                        return proposer;\n-                    }\n+                  ballot += 1000; // Make sure we win next time\n+                }\n \n-                    return this;\n+                instance.phase1Timeout(ballot);\n+                context.getLog(ProposerState.class).debug(\n+                    \"Reproposing instance \" + instance + \" at ballot \" + instance.ballot\n+                        + \" after rejectPrepare\");\n+                for (URI acceptor : instance.getAcceptors())\n+                {\n+                  outgoing.offer(message.copyHeadersTo(Message.to(AcceptorMessage.prepare,\n+                      acceptor, new AcceptorMessage.PrepareState(ballot)),\n+                      org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                }\n+\n+                assert instance.value_1 == null : \"value_1 should have been null at this point\";\n+                Object payload = context.getBookedInstance(instanceId).getPayload();\n+                assert payload != null : \"Should have a booked instance payload for \" + instanceId;\n+                // This will reset the phase1Timeout if existing\n+                context.setTimeout(instanceId, message.copyHeadersTo(Message.timeout(\n+                    ProposerMessage.phase1Timeout, message, payload), org.neo4j.cluster.protocol\n+                    .atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+              }\n+              break;\n+            }\n+\n+            case phase1Timeout:\n+            {\n+              org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n+                  new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId(message);\n+              PaxosInstance instance = context.getPaxosInstance(instanceId);\n+              if (instance.isState(PaxosInstance.State.p1_pending))\n+              {\n+                if (instance.ballot > 10000)\n+                {\n+                  context.getLog(ProposerState.class).warn(\"Propose failed due to phase 1 \" +\n+                      \"timeout\");\n+\n+                  // Fail this propose\n+                  Message originalMessage = context.getBookedInstance(instance.id);\n+                  // Also make sure that all headers are copied over\n+                  outgoing.offer(originalMessage.copyHeadersTo(\n+                      Message.internal(AtomicBroadcastMessage.failed,\n+                          originalMessage.getPayload())));\n+                  context.cancelTimeout(instanceId);\n+                } else\n+                {\n+                  long ballot = instance.ballot + 1000;\n+\n+                  instance.phase1Timeout(ballot);\n+\n+                  for (URI acceptor : instance.getAcceptors())\n+                  {\n+                    outgoing.offer(message.copyHeadersTo(Message.to(AcceptorMessage.prepare,\n+                        acceptor, new AcceptorMessage.PrepareState(ballot)),\n+                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                  }\n+                  context.setTimeout(instanceId, message.copyHeadersTo(Message.timeout(\n+                      ProposerMessage.phase1Timeout, message, message.getPayload()),\n+                      org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n                 }\n-            },\n+              } else if (instance.isState(PaxosInstance.State.closed) || instance.isState(\n+                  PaxosInstance.State.delivered))\n+              {\n+                // Retry\n+                Message oldMessage = context.unbookInstance(instance.id);\n+                context.getLog(getClass()).debug(\"Retrying instance \" + instance.id +\n+                    \" with message \" + message.getPayload() +\n+                    \". Previous instance was \" + oldMessage);\n+                outgoing.offer(Message.internal(ProposerMessage.propose, message.getPayload()));\n+              }\n+              break;\n+            }\n \n-    proposer\n+            case promise:\n             {\n-                @Override\n-                public ProposerState handle( ProposerContext context,\n-                                             Message<ProposerMessage> message,\n-                                             MessageHolder outgoing\n-                )\n+              // P\n+              ProposerMessage.PromiseState promiseState = message.getPayload();\n+              PaxosInstance instance = context.getPaxosInstance(\n+                  new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId(message));\n+\n+              if (instance.isState(PaxosInstance.State.p1_pending) && instance.ballot ==\n+                  promiseState.getBallot())\n+              {\n+                instance.promise(promiseState);\n+\n+                if (instance.isPromised(context.getMinimumQuorumSize(instance.getAcceptors())))\n                 {\n-                    switch ( message.getMessageType() )\n+                  context.cancelTimeout(instance.id);\n+\n+                  // No promises contained a value\n+                  Object readyValue = instance.value_2 == null ?\n+                      context.getBookedInstance(instance.id).getPayload() : instance\n+                      .value_2;\n+                  if (instance.value_1 == null)\n+                  {\n+                    // R0\n+                    instance.ready(readyValue, true);\n+                  } else\n+                  {\n+                    // R1\n+                    if (instance.value_2 == null)\n+                    {\n+                      // Another value was already associated with this instance. Push value\n+                      // back onto pending list\n+                      context.pendingValue(context.unbookInstance(instance.id));\n+\n+                      instance.ready(instance.value_1, false);\n+                    } else if (instance.value_1.equals(readyValue))\n+                    {\n+                      instance.ready(instance.value_2, instance.clientValue);\n+                    } else if (instance.clientValue)\n+                    {\n+                      // Another value was already associated with this instance. Push value\n+                      // back onto pending list\n+                      context.pendingValue(context.unbookInstance(instance.id));\n+\n+                      instance.ready(instance.value_1, false);\n+                    } else\n                     {\n-                        case propose:\n-                        {\n-                            propose( context, message, outgoing, determineAcceptorSet( message, context ) );\n-                            break;\n-                        }\n-\n-                        case rejectPrepare:\n-                        {\n-                            // Denial of prepare\n-                            ProposerMessage.RejectPrepare rejectPropose = message.getPayload();\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n-                            context.getLog( ProposerState.class ).debug( \"Propose for instance \" + instance\n-                                    + \" rejected from \" + message.getHeader( Message.HEADER_FROM ) + \" with ballot \"\n-                                    + rejectPropose.getBallot() );\n-\n-                            // Ignore multiple rejects on same prepare\n-                            if ( instance.isState( PaxosInstance.State.p1_pending ) &&\n-                                    instance.getBallot() < rejectPropose.getBallot() )\n-                            {\n-                                long ballot = instance.ballot;\n-                                while ( ballot <= rejectPropose.getBallot() )\n-                                {\n-                                    ballot += 1000; // Make sure we win next time\n-                                }\n-\n-                                instance.phase1Timeout( ballot );\n-                                context.getLog( ProposerState.class ).debug(\n-                                        \"Reproposing instance \" + instance + \" at ballot \" + instance.ballot\n-                                                + \" after rejectPrepare\" );\n-                                for ( URI acceptor : instance.getAcceptors() )\n-                                {\n-                                    outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.prepare,\n-                                            acceptor, new AcceptorMessage.PrepareState( ballot ) ),\n-                                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                }\n-\n-                                assert instance.value_1 == null : \"value_1 should have been null at this point\";\n-                                Object payload = context.getBookedInstance( instanceId ).getPayload();\n-                                assert payload != null : \"Should have a booked instance payload for \" + instanceId;\n-                                // This will reset the phase1Timeout if existing\n-                                context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout(\n-                                        ProposerMessage.phase1Timeout, message, payload ), org.neo4j.cluster.protocol\n-                                  .atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                            }\n-                            break;\n-                        }\n-\n-                        case phase1Timeout:\n-                        {\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n-                            if ( instance.isState( PaxosInstance.State.p1_pending ) )\n-                            {\n-                                if ( instance.ballot > 10000 )\n-                                {\n-                                    context.getLog( ProposerState.class ).warn( \"Propose failed due to phase 1 \" +\n-                                            \"timeout\" );\n-\n-                                    // Fail this propose\n-                                    Message originalMessage = context.getBookedInstance( instance.id );\n-                                    // Also make sure that all headers are copied over\n-                                    outgoing.offer( originalMessage.copyHeadersTo(\n-                                            Message.internal( AtomicBroadcastMessage.failed,\n-                                                    originalMessage.getPayload() ) ) );\n-                                    context.cancelTimeout( instanceId );\n-                                }\n-                                else\n-                                {\n-                                    long ballot = instance.ballot + 1000;\n-\n-                                    instance.phase1Timeout( ballot );\n-\n-                                    for ( URI acceptor : instance.getAcceptors() )\n-                                    {\n-                                        outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.prepare,\n-                                                acceptor, new AcceptorMessage.PrepareState( ballot ) ),\n-                                                org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                    }\n-                                    context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout(\n-                                            ProposerMessage.phase1Timeout, message, message.getPayload() ),\n-                                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                }\n-                            }\n-                            else if ( instance.isState( PaxosInstance.State.closed ) || instance.isState(\n-                                    PaxosInstance.State.delivered ) )\n-                            {\n-                                // Retry\n-                                Message oldMessage = context.unbookInstance( instance.id );\n-                                context.getLog( getClass() ).debug( \"Retrying instance \" + instance.id +\n-                                        \" with message \" + message.getPayload() +\n-                                        \". Previous instance was \" + oldMessage );\n-                                outgoing.offer( Message.internal( ProposerMessage.propose, message.getPayload() ) );\n-                            }\n-                            break;\n-                        }\n-\n-                        case promise:\n-                        {\n-                            // P\n-                            ProposerMessage.PromiseState promiseState = message.getPayload();\n-                            PaxosInstance instance = context.getPaxosInstance(\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message ) );\n-\n-                            if ( instance.isState( PaxosInstance.State.p1_pending ) && instance.ballot ==\n-                                    promiseState.getBallot() )\n-                            {\n-                                instance.promise( promiseState );\n-\n-                                if ( instance.isPromised( context.getMinimumQuorumSize( instance.getAcceptors() ) ) )\n-                                {\n-                                    context.cancelTimeout( instance.id );\n-\n-                                    // No promises contained a value\n-                                    Object readyValue = instance.value_2 == null ?\n-                                            context.getBookedInstance( instance.id ).getPayload() : instance\n-                                            .value_2;\n-                                    if ( instance.value_1 == null )\n-                                    {\n-                                        // R0\n-                                        instance.ready( readyValue, true );\n-                                    }\n-                                    else\n-                                    {\n-                                        // R1\n-                                        if ( instance.value_2 == null )\n-                                        {\n-                                            // Another value was already associated with this instance. Push value\n-                                            // back onto pending list\n-                                            context.pendingValue( context.unbookInstance( instance.id ) );\n-\n-                                            instance.ready( instance.value_1, false );\n-                                        }\n-                                        else if ( instance.value_1.equals( readyValue ) )\n-                                        {\n-                                            instance.ready( instance.value_2, instance.clientValue );\n-                                        }\n-                                        else if ( instance.clientValue )\n-                                        {\n-                                            // Another value was already associated with this instance. Push value\n-                                            // back onto pending list\n-                                            context.pendingValue( context.unbookInstance( instance.id ) );\n-\n-                                            instance.ready( instance.value_1, false );\n-                                        }\n-                                        else\n-                                        {\n-                                            // Another value was already associated with this instance. Push value\n-                                            // back onto pending list\n-                                            context.pendingValue( context.unbookInstance( instance.id ) );\n-                                            instance.ready( instance.value_1, false );\n-                                        }\n-                                    }\n-\n-                                    // E: Send to Acceptors\n-                                    instance.pending();\n-                                    for ( URI acceptor : instance.getAcceptors() )\n-                                    {\n-                                        outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.accept,\n-                                                acceptor,\n-                                                new AcceptorMessage.AcceptState( instance.ballot,\n-                                                        instance.value_2 ) ),\n-                                                org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                    }\n-\n-                                    context.setTimeout( instance.id,\n-                                            message.copyHeadersTo( Message.timeout( ProposerMessage.phase2Timeout,\n-                                                    message, readyValue ),\n-                                                    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                }\n-                                else\n-                                {\n-                                }\n-                            }\n-                            else\n-                            {\n-                            }\n-                            break;\n-                        }\n-\n-                        case rejectAccept:\n-                        {\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n-\n-                            if ( instance.isState( PaxosInstance.State.p2_pending ) )\n-                            {\n-                                ProposerMessage.RejectAcceptState state = message.getPayload();\n-                                instance.rejected( state );\n-\n-                                if ( !instance.isAccepted( context.getMinimumQuorumSize( instance.getAcceptors() ) ) )\n-                                {\n-                                    context.cancelTimeout( instanceId );\n-\n-                                    context.getLog( ProposerState.class ).warn( \"Accept rejected:\" +\n-                                            instance.state );\n-\n-                                    if ( instance.clientValue )\n-                                    {\n-                                        Message copyWithValue = Message.internal( ProposerMessage.propose,\n-                                                instance.value_2 );\n-                                        message.copyHeadersTo( copyWithValue );\n-                                        propose( context, copyWithValue, outgoing, instance.getAcceptors() );\n-                                    }\n-                                }\n-                            }\n-                            break;\n-                        }\n-\n-                        case phase2Timeout:\n-                        {\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n-\n-                            if ( instance.isState( PaxosInstance.State.p2_pending ) )\n-                            {\n-                                long ballot = instance.ballot + 1000;\n-                                instance.phase2Timeout( ballot );\n-\n-                                for ( URI acceptor : instance.getAcceptors() )\n-                                {\n-                                    outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.prepare,\n-                                            acceptor, new AcceptorMessage.PrepareState( ballot ) ),\n-                                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                }\n-\n-                                context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout(\n-                                        ProposerMessage.phase1Timeout, message, message.getPayload() ),\n-                                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                            }\n-                            else if ( instance.isState( PaxosInstance.State.closed )\n-                                    || instance.isState( PaxosInstance.State.delivered ) )\n-                            {\n-                                outgoing.offer( message.copyHeadersTo( Message.internal( ProposerMessage.propose,\n-                                        message.getPayload() ) ) );\n-                            }\n-                            break;\n-                        }\n-\n-                        case accepted:\n-                        {\n-                            PaxosInstance instance = context.getPaxosInstance(\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message ) );\n-\n-                            if ( instance.isState( PaxosInstance.State.p2_pending ) )\n-                            {\n-                                ProposerMessage.AcceptedState acceptedState = message.getPayload();\n-                                instance.accepted( acceptedState );\n-\n-                                // Value has been accepted! Now distribute to all learners\n-                                if ( instance.accepts.size() >= context.getMinimumQuorumSize( instance.getAcceptors()\n-                                ) )\n-                                {\n-                                    context.cancelTimeout( instance.id );\n-\n-                                    // Might have to extra-tell myself if not yet officially part of cluster\n-                                    if ( instance.value_2 instanceof ClusterMessage.ConfigurationChangeState )\n-                                    {\n-                                        context.patchBookedInstances( (ClusterMessage.ConfigurationChangeState) instance.value_2);\n-\n-                                        ClusterMessage.ConfigurationChangeState state = (ClusterMessage\n-                                                .ConfigurationChangeState) instance.value_2;\n-                                        // TODO getLearners might return wrong list if another join happens at the\n-                                        // same time\n-                                        // Proper fix is to wait with this learn until we have learned all previous\n-                                        // configuration changes\n-\n-                                        // TODO Fix this to use InstanceId instead of URI\n-                                        for ( URI learner : context.getMemberURIs() )\n-                                        {\n-                                            if ( learner.equals( context.boundAt() ) )\n-                                            {\n-                                                outgoing.offer( message.copyHeadersTo( Message.internal( LearnerMessage\n-                                                        .learn, new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                            }\n-                                            else\n-                                            {\n-                                                outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage\n-                                                        .learn, learner,\n-                                                        new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                            }\n-                                        }\n-\n-                                        // Tell joiner of this cluster configuration change\n-                                        if ( state.getJoin() != null )\n-                                        {\n-                                            outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage\n-                                                    .learn, state.getJoinUri(),\n-                                                    new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                        }\n-                                    }\n-                                    else\n-                                    {\n-                                        // Tell learners\n-                                        for ( URI learner : context.getMemberURIs() )\n-                                        {\n-                                            outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage\n-                                                    .learn, learner,\n-                                                    new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                        }\n-                                    }\n-\n-                                    context.unbookInstance( instance.id );\n-\n-                                    // Check if we have anything pending - try to start process for it\n-                                    if ( context.hasPendingValues() && context.canBookInstance() )\n-                                    {\n-                                        Message proposeMessage = context.popPendingValue();\n-                                        context.getLog( ProposerState.class ).debug( \"Restarting \"\n-                                                + proposeMessage + \" booked:\"\n-                                                + context.nrOfBookedInstances() );\n-                                        outgoing.offer( proposeMessage );\n-                                    }\n-                                }\n-                            }\n-                            else\n-                            {\n-                                context.getLog( ProposerState.class ).debug( \"Instance receiving an accepted is in \" +\n-                                        \"the wrong state:\" + instance );\n-                            }\n-                            break;\n-                        }\n-\n-                        case leave:\n-                        {\n-                            context.leave();\n-                            return start;\n-                        }\n-\n-                        default:\n-                            break;\n+                      // Another value was already associated with this instance. Push value\n+                      // back onto pending list\n+                      context.pendingValue(context.unbookInstance(instance.id));\n+                      instance.ready(instance.value_1, false);\n                     }\n+                  }\n+\n+                  // E: Send to Acceptors\n+                  instance.pending();\n+                  for (URI acceptor : instance.getAcceptors())\n+                  {\n+                    outgoing.offer(message.copyHeadersTo(Message.to(AcceptorMessage.accept,\n+                        acceptor,\n+                        new AcceptorMessage.AcceptState(instance.ballot,\n+                            instance.value_2)),\n+                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                  }\n+\n+                  context.setTimeout(instance.id,\n+                      message.copyHeadersTo(Message.timeout(ProposerMessage.phase2Timeout,\n+                          message, readyValue),\n+                          org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                } else\n+                {\n+                }\n+              } else\n+              {\n+              }\n+              break;\n+            }\n+\n+            case rejectAccept:\n+            {\n+              org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n+                  new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId(message);\n+              PaxosInstance instance = context.getPaxosInstance(instanceId);\n \n-                    return this;\n+              if (instance.isState(PaxosInstance.State.p2_pending))\n+              {\n+                ProposerMessage.RejectAcceptState state = message.getPayload();\n+                instance.rejected(state);\n+\n+                if (!instance.isAccepted(context.getMinimumQuorumSize(instance.getAcceptors())))\n+                {\n+                  context.cancelTimeout(instanceId);\n+\n+                  context.getLog(ProposerState.class).warn(\"Accept rejected:\" +\n+                      instance.state);\n+\n+                  if (instance.clientValue)\n+                  {\n+                    Message copyWithValue = Message.internal(ProposerMessage.propose,\n+                        instance.value_2);\n+                    message.copyHeadersTo(copyWithValue);\n+                    propose(context, copyWithValue, outgoing, instance.getAcceptors());\n+                  }\n                 }\n-    };\n+              }\n+              break;\n+            }\n \n-    private static void propose( ProposerContext context, Message message, MessageHolder outgoing,\n-                                 List<URI> acceptors )\n-    {\n-        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId;\n-        if ( message.hasHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) )\n-        {\n-            instanceId = new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-        }\n-        else\n-        {\n-            instanceId = context.newInstanceId();\n+            case phase2Timeout:\n+            {\n+              org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n+                  new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId(message);\n+              PaxosInstance instance = context.getPaxosInstance(instanceId);\n \n-            message.setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() );\n-            context.bookInstance( instanceId, message );\n-        }\n+              if (instance.isState(PaxosInstance.State.p2_pending))\n+              {\n+                long ballot = instance.ballot + 1000;\n+                instance.phase2Timeout(ballot);\n \n-        long ballot = 1000 + context.getMyId().toIntegerIndex(); // First server will have first ballot id be 1001\n+                for (URI acceptor : instance.getAcceptors())\n+                {\n+                  outgoing.offer(message.copyHeadersTo(Message.to(AcceptorMessage.prepare,\n+                      acceptor, new AcceptorMessage.PrepareState(ballot)),\n+                      org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                }\n \n-        PaxosInstance instance = context.getPaxosInstance( instanceId );\n+                context.setTimeout(instanceId, message.copyHeadersTo(Message.timeout(\n+                    ProposerMessage.phase1Timeout, message, message.getPayload()),\n+                    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+              } else if (instance.isState(PaxosInstance.State.closed)\n+                  || instance.isState(PaxosInstance.State.delivered))\n+              {\n+                outgoing.offer(message.copyHeadersTo(Message.internal(ProposerMessage.propose,\n+                    message.getPayload())));\n+              }\n+              break;\n+            }\n \n-        /*\n-         * If the instance already has an acceptor set, use that. This ensures that patched acceptor sets, for example,\n-         * are respected.\n-         */\n-        if ( instance.getAcceptors() != null )\n-        {\n-            acceptors = instance.getAcceptors();\n-        }\n+            case accepted:\n+            {\n+              PaxosInstance instance = context.getPaxosInstance(\n+                  new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId(message));\n \n-        if ( !(instance.isState( PaxosInstance.State.closed ) || instance.isState( PaxosInstance.State.delivered )) )\n-        {\n-            instance.propose( ballot, acceptors );\n+              if (instance.isState(PaxosInstance.State.p2_pending))\n+              {\n+                ProposerMessage.AcceptedState acceptedState = message.getPayload();\n+                instance.accepted(acceptedState);\n \n-            for ( URI acceptor : acceptors )\n+                // Value has been accepted! Now distribute to all learners\n+                if (instance.accepts.size() >= context.getMinimumQuorumSize(instance.getAcceptors()\n+                ))\n+                {\n+                  context.cancelTimeout(instance.id);\n+\n+                  // Might have to extra-tell myself if not yet officially part of cluster\n+                  if (instance.value_2 instanceof ClusterMessage.ConfigurationChangeState)\n+                  {\n+                    context.patchBookedInstances((ClusterMessage.ConfigurationChangeState) instance.value_2);\n+\n+                    ClusterMessage.ConfigurationChangeState state = (ClusterMessage\n+                        .ConfigurationChangeState) instance.value_2;\n+                    // TODO getLearners might return wrong list if another join happens at the\n+                    // same time\n+                    // Proper fix is to wait with this learn until we have learned all previous\n+                    // configuration changes\n+\n+                    // TODO Fix this to use InstanceId instead of URI\n+                    for (URI learner : context.getMemberURIs())\n+                    {\n+                      if (learner.equals(context.boundAt()))\n+                      {\n+                        outgoing.offer(message.copyHeadersTo(Message.internal(LearnerMessage\n+                                .learn, new LearnerMessage.LearnState(instance.value_2)),\n+                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                      } else\n+                      {\n+                        outgoing.offer(message.copyHeadersTo(Message.to(LearnerMessage\n+                                .learn, learner,\n+                            new LearnerMessage.LearnState(instance.value_2)),\n+                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                      }\n+                    }\n+\n+                    // Tell joiner of this cluster configuration change\n+                    if (state.getJoin() != null)\n+                    {\n+                      outgoing.offer(message.copyHeadersTo(Message.to(LearnerMessage\n+                              .learn, state.getJoinUri(),\n+                          new LearnerMessage.LearnState(instance.value_2)),\n+                          org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                    }\n+                  } else\n+                  {\n+                    // Tell learners\n+                    for (URI learner : context.getMemberURIs())\n+                    {\n+                      outgoing.offer(message.copyHeadersTo(Message.to(LearnerMessage\n+                              .learn, learner,\n+                          new LearnerMessage.LearnState(instance.value_2)),\n+                          org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE));\n+                    }\n+                  }\n+\n+                  context.unbookInstance(instance.id);\n+\n+                  // Check if we have anything pending - try to start process for it\n+                  if (context.hasPendingValues() && context.canBookInstance())\n+                  {\n+                    Message proposeMessage = context.popPendingValue();\n+                    context.getLog(ProposerState.class).debug(\"Restarting \"\n+                        + proposeMessage + \" booked:\"\n+                        + context.nrOfBookedInstances());\n+                    outgoing.offer(proposeMessage);\n+                  }\n+                }\n+              } else\n+              {\n+                context.getLog(ProposerState.class).debug(\"Instance receiving an accepted is in \" +\n+                    \"the wrong state:\" + instance);\n+              }\n+              break;\n+            }\n+\n+            case leave:\n             {\n-                outgoing.offer( Message.to( AcceptorMessage.prepare, acceptor, new AcceptorMessage.PrepareState(\n-                        ballot ) )\n-                        .setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() ) );\n+              context.leave();\n+              return start;\n             }\n \n-            context.setTimeout( instanceId, Message.timeout( ProposerMessage.phase1Timeout, message,\n-                    message.getPayload() )\n-                    .setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() ) );\n-        }\n-        else\n-        {\n-            // Wait with this value - we have our hands full right now\n-            context.pendingValue( message );\n+            default:\n+              break;\n+          }\n+\n+          return this;\n         }\n-    }\n+      };\n \n-    private static List<URI> determineAcceptorSet( Message<ProposerMessage> message, ProposerContext context )\n+  private static void propose(ProposerContext context, Message message, MessageHolder outgoing,\n+                              List<URI> acceptors)\n+  {\n+    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId;\n+    if (message.hasHeader(org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE))\n     {\n-        Object payload = message.getPayload();\n+      instanceId = new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId(message);\n+    } else\n+    {\n+      instanceId = context.newInstanceId();\n \n-        if ( payload instanceof ClusterMessage.ConfigurationChangeState )\n-        {\n-            ClusterMessage.ConfigurationChangeState state = message.getPayload();\n-            List<URI> acceptors = context.getAcceptors();\n+      message.setHeader(org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString());\n+      context.bookInstance(instanceId, message);\n+    }\n \n-            Map<org.neo4j.cluster.InstanceId, URI> currentMembers = context.getMembers();\n+    long ballot = 1000 + context.getMyId().toIntegerIndex(); // First server will have first ballot id be 1001\n \n-            // Never include node that is leaving\n-            if ( state.getLeave() != null )\n-            {\n-                acceptors = new ArrayList<>( acceptors );\n-                acceptors.remove( currentMembers.get(state.getLeave()) );\n-            }\n+    PaxosInstance instance = context.getPaxosInstance(instanceId);\n \n-            if ( state.getJoin() != null && currentMembers.containsKey( state.getJoin() ) )\n-            {\n-                acceptors.remove( currentMembers.get( state.getJoin() ) );\n-                if ( !acceptors.contains( state.getJoinUri() ) )\n-                {\n-                    acceptors.add( state.getJoinUri() );\n-                }\n-            }\n-            return acceptors;\n-        }\n-        else\n+    /*\n+     * If the instance already has an acceptor set, use that. This ensures that patched acceptor sets, for example,\n+     * are respected.\n+     */\n+    if (instance.getAcceptors() != null)\n+    {\n+      acceptors = instance.getAcceptors();\n+    }\n+\n+    if (!(instance.isState(PaxosInstance.State.closed) || instance.isState(PaxosInstance.State.delivered)))\n+    {\n+      instance.propose(ballot, acceptors);\n+\n+      for (URI acceptor : acceptors)\n+      {\n+        outgoing.offer(Message.to(AcceptorMessage.prepare, acceptor, new AcceptorMessage.PrepareState(\n+            ballot))\n+            .setHeader(org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString()));\n+      }\n+\n+      context.setTimeout(instanceId, Message.timeout(ProposerMessage.phase1Timeout, message,\n+          message.getPayload())\n+          .setHeader(org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString()));\n+    } else\n+    {\n+      // Wait with this value - we have our hands full right now\n+      context.pendingValue(message);\n+    }\n+  }\n+\n+  private static List<URI> determineAcceptorSet(Message<ProposerMessage> message, ProposerContext context)\n+  {\n+    Object payload = message.getPayload();\n+\n+    if (payload instanceof ClusterMessage.ConfigurationChangeState)\n+    {\n+      ClusterMessage.ConfigurationChangeState state = message.getPayload();\n+      List<URI> acceptors = context.getAcceptors();\n+\n+      Map<org.neo4j.cluster.InstanceId, URI> currentMembers = context.getMembers();\n+\n+      // Never include node that is leaving\n+      if (state.getLeave() != null)\n+      {\n+        acceptors = new ArrayList<>(acceptors);\n+        acceptors.remove(currentMembers.get(state.getLeave()));\n+      }\n+\n+      if (state.getJoin() != null && currentMembers.containsKey(state.getJoin()))\n+      {\n+        acceptors.remove(currentMembers.get(state.getJoin()));\n+        if (!acceptors.contains(state.getJoinUri()))\n         {\n-            return context.getAcceptors();\n+          acceptors.add(state.getJoinUri());\n         }\n+      }\n+      return acceptors;\n+    } else\n+    {\n+      return context.getAcceptors();\n     }\n+  }\n }\n",
            "diff_size": 769
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 219).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "column": "85",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "column": "53",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 250).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "column": "76",
                    "severity": "error",
                    "message": "'==' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 246).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "243",
                    "column": "85",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 261).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "289",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 268).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 257).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "307",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "363",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4528/ProposerState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4528/ProposerState.java\nindex deab3d22538..e06ea3629b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4528/ProposerState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4528/ProposerState.java\n@@ -32,16 +32,13 @@ import org.neo4j.cluster.statemachine.State;\n /**\n  * State machine for Paxos Proposer\n  */\n-public enum ProposerState\n-        implements State<ProposerContext, ProposerMessage>\n+public enum ProposerState implements State<ProposerContext, ProposerMessage>\n {\n     start\n-            {\n+{\n                 @Override\n-                public ProposerState handle( ProposerContext context,\n-                                             Message<ProposerMessage> message,\n-                                             MessageHolder outgoing\n-                )\n+                public ProposerState handle( ProposerContext context, Message<ProposerMessage> message,\n+                                             MessageHolder outgoing )\n                 {\n                     if ( message.getMessageType() == ProposerMessage.join )\n                     {\n@@ -50,38 +47,28 @@ public enum ProposerState\n \n                     return this;\n                 }\n-            },\n-\n-    proposer\n-            {\n+            }, proposer\n+{\n                 @Override\n-                public ProposerState handle( ProposerContext context,\n-                                             Message<ProposerMessage> message,\n-                                             MessageHolder outgoing\n-                )\n+                public ProposerState handle( ProposerContext context, Message<ProposerMessage> message,\n+                                             MessageHolder outgoing )\n                 {\n                     switch ( message.getMessageType() )\n                     {\n-                        case propose:\n+case propose:\n                         {\n                             propose( context, message, outgoing, determineAcceptorSet( message, context ) );\n                             break;\n                         }\n-\n-                        case rejectPrepare:\n+    case rejectPrepare:\n                         {\n                             // Denial of prepare\n                             ProposerMessage.RejectPrepare rejectPropose = message.getPayload();\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n-                            context.getLog( ProposerState.class ).debug( \"Propose for instance \" + instance\n-                                    + \" rejected from \" + message.getHeader( Message.HEADER_FROM ) + \" with ballot \"\n-                                    + rejectPropose.getBallot() );\n-\n-                            // Ignore multiple rejects on same prepare\n-                            if ( instance.isState( PaxosInstance.State.p1_pending ) &&\n-                                    instance.getBallot() < rejectPropose.getBallot() )\n+                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId = new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n+PaxosInstance instance = context.getPaxosInstance( instanceId );\n+                            context.getLog( ProposerState.class ).debug( \"Propose for instance \" + instance + \" rejected from \" + message.getHeader( Message.HEADER_FROM ) + \" with ballot \" + rejectPropose.getBallot() );\n+    // Ignore multiple rejects on same prepare\n+                            if ( instance.isState( PaxosInstance.State.p1_pending ) &&instance.getBallot() < rejectPropose.getBallot() )\n                             {\n                                 long ballot = instance.ballot;\n                                 while ( ballot <= rejectPropose.getBallot() )\n@@ -90,98 +77,74 @@ public enum ProposerState\n                                 }\n \n                                 instance.phase1Timeout( ballot );\n-                                context.getLog( ProposerState.class ).debug(\n-                                        \"Reproposing instance \" + instance + \" at ballot \" + instance.ballot\n-                                                + \" after rejectPrepare\" );\n-                                for ( URI acceptor : instance.getAcceptors() )\n+                                context.getLog( ProposerState.class ).debug( \"Reproposing instance \" + instance + \" at ballot \" + instance.ballot + \" after rejectPrepare\" );\n+for ( URI acceptor : instance.getAcceptors() )\n                                 {\n                                     outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.prepare,\n-                                            acceptor, new AcceptorMessage.PrepareState( ballot ) ),\n-                                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+                                            acceptor, new AcceptorMessage.PrepareState( ballot ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n                                 }\n \n                                 assert instance.value_1 == null : \"value_1 should have been null at this point\";\n                                 Object payload = context.getBookedInstance( instanceId ).getPayload();\n                                 assert payload != null : \"Should have a booked instance payload for \" + instanceId;\n                                 // This will reset the phase1Timeout if existing\n-                                context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout(\n-                                        ProposerMessage.phase1Timeout, message, payload ), org.neo4j.cluster.protocol\n-                                  .atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                            }\n+                                context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout( ProposerMessage.phase1Timeout, message, payload ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+    }\n                             break;\n                         }\n-\n-                        case phase1Timeout:\n+    case phase1Timeout:\n                         {\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n+                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId = new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n+PaxosInstance instance = context.getPaxosInstance( instanceId );\n                             if ( instance.isState( PaxosInstance.State.p1_pending ) )\n                             {\n-                                if ( instance.ballot > 10000 )\n+                                if ( instance.ballot> 10000 )\n                                 {\n-                                    context.getLog( ProposerState.class ).warn( \"Propose failed due to phase 1 \" +\n-                                            \"timeout\" );\n-\n-                                    // Fail this propose\n+                                    context.getLog( ProposerState.class ).warn( \"Propose failed due to phase 1 \" + \"timeout\" );\n+    // Fail this propose\n                                     Message originalMessage = context.getBookedInstance( instance.id );\n                                     // Also make sure that all headers are copied over\n-                                    outgoing.offer( originalMessage.copyHeadersTo(\n-                                            Message.internal( AtomicBroadcastMessage.failed,\n+                                    outgoing.offer( originalMessage.copyHeadersTo( Message.internal( AtomicBroadcastMessage.failed,\n                                                     originalMessage.getPayload() ) ) );\n-                                    context.cancelTimeout( instanceId );\n+context.cancelTimeout( instanceId );\n                                 }\n                                 else\n                                 {\n                                     long ballot = instance.ballot + 1000;\n \n                                     instance.phase1Timeout( ballot );\n-\n-                                    for ( URI acceptor : instance.getAcceptors() )\n+for ( URI acceptor : instance.getAcceptors() )\n                                     {\n                                         outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.prepare,\n-                                                acceptor, new AcceptorMessage.PrepareState( ballot ) ),\n-                                                org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+                                                acceptor, new AcceptorMessage.PrepareState( ballot ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n                                     }\n-                                    context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout(\n-                                            ProposerMessage.phase1Timeout, message, message.getPayload() ),\n-                                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                }\n+                                    context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout( ProposerMessage.phase1Timeout, message, message.getPayload() ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+    }\n                             }\n-                            else if ( instance.isState( PaxosInstance.State.closed ) || instance.isState(\n-                                    PaxosInstance.State.delivered ) )\n+                            else if ( instance.isState( PaxosInstance.State.closed ) || instance.isState( PaxosInstance.State.delivered ) )\n                             {\n                                 // Retry\n                                 Message oldMessage = context.unbookInstance( instance.id );\n-                                context.getLog( getClass() ).debug( \"Retrying instance \" + instance.id +\n-                                        \" with message \" + message.getPayload() +\n-                                        \". Previous instance was \" + oldMessage );\n-                                outgoing.offer( Message.internal( ProposerMessage.propose, message.getPayload() ) );\n+                                context.getLog( getClass() ).debug( \"Retrying instance \" + instance.id + \" with message \" + message.getPayload() + \". Previous instance was \" + oldMessage );\n+outgoing.offer( Message.internal( ProposerMessage.propose, message.getPayload() ) );\n                             }\n                             break;\n                         }\n-\n-                        case promise:\n+    case promise:\n                         {\n                             // P\n                             ProposerMessage.PromiseState promiseState = message.getPayload();\n-                            PaxosInstance instance = context.getPaxosInstance(\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message ) );\n-\n-                            if ( instance.isState( PaxosInstance.State.p1_pending ) && instance.ballot ==\n-                                    promiseState.getBallot() )\n+                            PaxosInstance instance = context.getPaxosInstance( new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message ) );\n+if ( instance.isState( PaxosInstance.State.p1_pending ) && instance.ballot ==promiseState.getBallot() )\n                             {\n                                 instance.promise( promiseState );\n-\n-                                if ( instance.isPromised( context.getMinimumQuorumSize( instance.getAcceptors() ) ) )\n+if ( instance.isPromised( context.getMinimumQuorumSize( instance.getAcceptors() ) ) )\n                                 {\n                                     context.cancelTimeout( instance.id );\n \n                                     // No promises contained a value\n-                                    Object readyValue = instance.value_2 == null ?\n-                                            context.getBookedInstance( instance.id ).getPayload() : instance\n-                                            .value_2;\n-                                    if ( instance.value_1 == null )\n+                                    Object readyValue = instance.value_2 == null ? context.getBookedInstance( instance.id ).getPayload() : instance.value_2;\n+if ( instance.value_1 == null )\n                                     {\n                                         // R0\n                                         instance.ready( readyValue, true );\n@@ -194,8 +157,7 @@ public enum ProposerState\n                                             // Another value was already associated with this instance. Push value\n                                             // back onto pending list\n                                             context.pendingValue( context.unbookInstance( instance.id ) );\n-\n-                                            instance.ready( instance.value_1, false );\n+instance.ready( instance.value_1, false );\n                                         }\n                                         else if ( instance.value_1.equals( readyValue ) )\n                                         {\n@@ -206,8 +168,7 @@ public enum ProposerState\n                                             // Another value was already associated with this instance. Push value\n                                             // back onto pending list\n                                             context.pendingValue( context.unbookInstance( instance.id ) );\n-\n-                                            instance.ready( instance.value_1, false );\n+instance.ready( instance.value_1, false );\n                                         }\n                                         else\n                                         {\n@@ -223,17 +184,14 @@ public enum ProposerState\n                                     for ( URI acceptor : instance.getAcceptors() )\n                                     {\n                                         outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.accept,\n-                                                acceptor,\n-                                                new AcceptorMessage.AcceptState( instance.ballot,\n-                                                        instance.value_2 ) ),\n-                                                org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+                                                acceptor, new AcceptorMessage.AcceptState( instance.ballot,\n+                                                        instance.value_2 ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n                                     }\n \n                                     context.setTimeout( instance.id,\n                                             message.copyHeadersTo( Message.timeout( ProposerMessage.phase2Timeout,\n-                                                    message, readyValue ),\n-                                                    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                }\n+                                                    message, readyValue ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+    }\n                                 else\n                                 {\n                                 }\n@@ -243,81 +201,62 @@ public enum ProposerState\n                             }\n                             break;\n                         }\n-\n-                        case rejectAccept:\n+    case rejectAccept:\n                         {\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n-\n-                            if ( instance.isState( PaxosInstance.State.p2_pending ) )\n+                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId = new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n+PaxosInstance instance = context.getPaxosInstance( instanceId );\n+if ( instance.isState( PaxosInstance.State.p2_pending ) )\n                             {\n                                 ProposerMessage.RejectAcceptState state = message.getPayload();\n                                 instance.rejected( state );\n-\n-                                if ( !instance.isAccepted( context.getMinimumQuorumSize( instance.getAcceptors() ) ) )\n+if ( !instance.isAccepted( context.getMinimumQuorumSize( instance.getAcceptors() ) ) )\n                                 {\n                                     context.cancelTimeout( instanceId );\n-\n-                                    context.getLog( ProposerState.class ).warn( \"Accept rejected:\" +\n-                                            instance.state );\n-\n-                                    if ( instance.clientValue )\n+context.getLog( ProposerState.class ).warn( \"Accept rejected:\" + instance.state );\n+if ( instance.clientValue )\n                                     {\n                                         Message copyWithValue = Message.internal( ProposerMessage.propose,\n                                                 instance.value_2 );\n-                                        message.copyHeadersTo( copyWithValue );\n+message.copyHeadersTo( copyWithValue );\n                                         propose( context, copyWithValue, outgoing, instance.getAcceptors() );\n                                     }\n                                 }\n                             }\n                             break;\n                         }\n-\n-                        case phase2Timeout:\n+    case phase2Timeout:\n                         {\n-                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId =\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n-                            PaxosInstance instance = context.getPaxosInstance( instanceId );\n-\n-                            if ( instance.isState( PaxosInstance.State.p2_pending ) )\n+                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId = new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message );\n+PaxosInstance instance = context.getPaxosInstance( instanceId );\n+if ( instance.isState( PaxosInstance.State.p2_pending ) )\n                             {\n                                 long ballot = instance.ballot + 1000;\n                                 instance.phase2Timeout( ballot );\n-\n-                                for ( URI acceptor : instance.getAcceptors() )\n+for ( URI acceptor : instance.getAcceptors() )\n                                 {\n                                     outgoing.offer( message.copyHeadersTo( Message.to( AcceptorMessage.prepare,\n-                                            acceptor, new AcceptorMessage.PrepareState( ballot ) ),\n-                                            org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+                                            acceptor, new AcceptorMessage.PrepareState( ballot ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n                                 }\n \n-                                context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout(\n-                                        ProposerMessage.phase1Timeout, message, message.getPayload() ),\n-                                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+                                context.setTimeout( instanceId, message.copyHeadersTo( Message.timeout( ProposerMessage.phase1Timeout, message, message.getPayload() ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n                             }\n-                            else if ( instance.isState( PaxosInstance.State.closed )\n-                                    || instance.isState( PaxosInstance.State.delivered ) )\n+                            else if ( instance.isState( PaxosInstance.State.closed )|| instance.isState( PaxosInstance.State.delivered ) )\n                             {\n                                 outgoing.offer( message.copyHeadersTo( Message.internal( ProposerMessage.propose,\n                                         message.getPayload() ) ) );\n                             }\n                             break;\n                         }\n-\n-                        case accepted:\n+    case accepted:\n                         {\n-                            PaxosInstance instance = context.getPaxosInstance(\n-                                    new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message ) );\n-\n-                            if ( instance.isState( PaxosInstance.State.p2_pending ) )\n+                            PaxosInstance instance = context.getPaxosInstance( new org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId( message ) );\n+if ( instance.isState( PaxosInstance.State.p2_pending ) )\n                             {\n                                 ProposerMessage.AcceptedState acceptedState = message.getPayload();\n                                 instance.accepted( acceptedState );\n \n                                 // Value has been accepted! Now distribute to all learners\n-                                if ( instance.accepts.size() >= context.getMinimumQuorumSize( instance.getAcceptors()\n-                                ) )\n+                                if ( instance.accepts.size() >= context.getMinimumQuorumSize( instance.getAcceptors() ) )\n                                 {\n                                     context.cancelTimeout( instance.id );\n \n@@ -325,10 +264,8 @@ public enum ProposerState\n                                     if ( instance.value_2 instanceof ClusterMessage.ConfigurationChangeState )\n                                     {\n                                         context.patchBookedInstances( (ClusterMessage.ConfigurationChangeState) instance.value_2);\n-\n-                                        ClusterMessage.ConfigurationChangeState state = (ClusterMessage\n-                                                .ConfigurationChangeState) instance.value_2;\n-                                        // TODO getLearners might return wrong list if another join happens at the\n+ClusterMessage.ConfigurationChangeState state = (ClusterMessage.ConfigurationChangeState) instance.value_2;\n+// TODO getLearners might return wrong list if another join happens at the\n                                         // same time\n                                         // Proper fix is to wait with this learn until we have learned all previous\n                                         // configuration changes\n@@ -338,38 +275,27 @@ public enum ProposerState\n                                         {\n                                             if ( learner.equals( context.boundAt() ) )\n                                             {\n-                                                outgoing.offer( message.copyHeadersTo( Message.internal( LearnerMessage\n-                                                        .learn, new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+                                                outgoing.offer( message.copyHeadersTo( Message.internal( LearnerMessage.learn, new LearnerMessage.LearnState( instance.value_2 ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n                                             }\n                                             else\n                                             {\n-                                                outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage\n-                                                        .learn, learner,\n-                                                        new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                        org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                            }\n+                                                outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage.learn, learner, new LearnerMessage.LearnState( instance.value_2 ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+    }\n                                         }\n \n                                         // Tell joiner of this cluster configuration change\n                                         if ( state.getJoin() != null )\n                                         {\n-                                            outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage\n-                                                    .learn, state.getJoinUri(),\n-                                                    new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                        }\n+                                            outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage.learn, state.getJoinUri(), new LearnerMessage.LearnState( instance.value_2 ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+    }\n                                     }\n                                     else\n                                     {\n                                         // Tell learners\n                                         for ( URI learner : context.getMemberURIs() )\n                                         {\n-                                            outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage\n-                                                    .learn, learner,\n-                                                    new LearnerMessage.LearnState( instance.value_2 ) ),\n-                                                    org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n-                                        }\n+                                            outgoing.offer( message.copyHeadersTo( Message.to( LearnerMessage.learn, learner, new LearnerMessage.LearnState( instance.value_2 ) ), org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) );\n+    }\n                                     }\n \n                                     context.unbookInstance( instance.id );\n@@ -378,38 +304,32 @@ public enum ProposerState\n                                     if ( context.hasPendingValues() && context.canBookInstance() )\n                                     {\n                                         Message proposeMessage = context.popPendingValue();\n-                                        context.getLog( ProposerState.class ).debug( \"Restarting \"\n-                                                + proposeMessage + \" booked:\"\n-                                                + context.nrOfBookedInstances() );\n-                                        outgoing.offer( proposeMessage );\n+                                        context.getLog( ProposerState.class ).debug( \"Restarting \" + proposeMessage + \" booked:\" + context.nrOfBookedInstances() );\n+outgoing.offer( proposeMessage );\n                                     }\n                                 }\n                             }\n                             else\n                             {\n-                                context.getLog( ProposerState.class ).debug( \"Instance receiving an accepted is in \" +\n-                                        \"the wrong state:\" + instance );\n+                                context.getLog( ProposerState.class ).debug( \"Instance receiving an accepted is in \" + \"the wrong state:\" + instance );\n                             }\n                             break;\n                         }\n-\n-                        case leave:\n+    case leave:\n                         {\n                             context.leave();\n                             return start;\n                         }\n-\n-                        default:\n+    default:\n                             break;\n-                    }\n+    }\n \n                     return this;\n                 }\n     };\n \n-    private static void propose( ProposerContext context, Message message, MessageHolder outgoing,\n-                                 List<URI> acceptors )\n-    {\n+    private static void propose( ProposerContext context, Message message, MessageHolder outgoing, List<URI> acceptors )\n+{\n         org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId instanceId;\n         if ( message.hasHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE ) )\n         {\n@@ -418,8 +338,7 @@ public enum ProposerState\n         else\n         {\n             instanceId = context.newInstanceId();\n-\n-            message.setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() );\n+message.setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() );\n             context.bookInstance( instanceId, message );\n         }\n \n@@ -439,17 +358,13 @@ public enum ProposerState\n         if ( !(instance.isState( PaxosInstance.State.closed ) || instance.isState( PaxosInstance.State.delivered )) )\n         {\n             instance.propose( ballot, acceptors );\n-\n-            for ( URI acceptor : acceptors )\n+for ( URI acceptor : acceptors )\n             {\n-                outgoing.offer( Message.to( AcceptorMessage.prepare, acceptor, new AcceptorMessage.PrepareState(\n-                        ballot ) )\n-                        .setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() ) );\n+                outgoing.offer( Message.to( AcceptorMessage.prepare, acceptor, new AcceptorMessage.PrepareState( ballot ) ).setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() ) );\n             }\n \n             context.setTimeout( instanceId, Message.timeout( ProposerMessage.phase1Timeout, message,\n-                    message.getPayload() )\n-                    .setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() ) );\n+                    message.getPayload() ).setHeader( org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId.INSTANCE, instanceId.toString() ) );\n         }\n         else\n         {\n@@ -461,13 +376,12 @@ public enum ProposerState\n     private static List<URI> determineAcceptorSet( Message<ProposerMessage> message, ProposerContext context )\n     {\n         Object payload = message.getPayload();\n-\n-        if ( payload instanceof ClusterMessage.ConfigurationChangeState )\n+if ( payload instanceof ClusterMessage.ConfigurationChangeState )\n         {\n             ClusterMessage.ConfigurationChangeState state = message.getPayload();\n             List<URI> acceptors = context.getAcceptors();\n \n-            Map<org.neo4j.cluster.InstanceId, URI> currentMembers = context.getMembers();\n+            Map<org.neo4j.cluster.InstanceId,URI> currentMembers = context.getMembers();\n \n             // Never include node that is leaving\n             if ( state.getLeave() != null )\n@@ -491,4 +405,4 @@ public enum ProposerState\n             return context.getAcceptors();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 177
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2943",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2943/LogVersionSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2943/LogVersionSelector.java\nindex 013509fca3b..cae9fd98213 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2943/LogVersionSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2943/LogVersionSelector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import org.eclipse.collections.impl.map.mutable.primitive.ByteObjectHashMap;\n@@ -28,44 +29,44 @@ public abstract class LogVersionSelector\n     private final ByteObjectHashMap<LogEntryParserSet> sets;\n     private final byte latestVersion;\n \n-    protected LogVersionSelector( byte latestVersion )\n+    protected LogVersionSelector(byte latestVersion)\n     {\n         this.latestVersion = latestVersion;\n         sets = new ByteObjectHashMap<>();\n     }\n \n-    protected void register( LogEntryParserSet set )\n+    protected void register(LogEntryParserSet set)\n     {\n         byte version = set.versionByte();\n-        Preconditions.checkState( !sets.containsKey( version ), \"Conflicting version %d\", version );\n-        sets.put( version, set );\n+        Preconditions.checkState(!sets.containsKey(version), \"Conflicting version %d\", version);\n+        sets.put(version, set);\n     }\n \n-    public LogEntryParserSet select( byte version )\n+    public LogEntryParserSet select(byte version)\n     {\n-        LogEntryParserSet set = sets.get( version );\n-        if ( set != null )\n+        LogEntryParserSet set = sets.get(version);\n+        if (set != null)\n         {\n             return set;\n         }\n \n-        if ( version > latestVersion )\n+        if (version > latestVersion)\n         {\n-            throw new UnsupportedLogVersionException( String.format(\n-                    \"Log file contains entries with prefix %d, and the highest supported prefix is %d. This \" +\n-                            \"indicates that the log files originates from a newer version of neo4j.\",\n-                    version, latestVersion ) );\n+            throw new UnsupportedLogVersionException(String.format(\n+              \"Log file contains entries with prefix %d, and the highest supported prefix is %d. This \" +\n+                \"indicates that the log files originates from a newer version of neo4j.\",\n+              version, latestVersion));\n         }\n-        throw new UnsupportedLogVersionException( String.format(\n-                \"Log file contains entries with prefix %d, and the lowest supported prefix is %d. This \" +\n-                        \"indicates that the log files originates from an older version of neo4j, which we don't support \" +\n-                        \"migrations from.\",\n-                version, sets.keySet().min() ) );\n+        throw new UnsupportedLogVersionException(String.format(\n+          \"Log file contains entries with prefix %d, and the lowest supported prefix is %d. This \" +\n+            \"indicates that the log files originates from an older version of neo4j, which we don't support \" +\n+            \"migrations from.\",\n+          version, sets.keySet().min()));\n     }\n \n-    public LogEntryParserSet select( LogEntryParserSetVersion parserSetVersion )\n+    public LogEntryParserSet select(LogEntryParserSetVersion parserSetVersion)\n     {\n-        return select( parserSetVersion.getVersionByte() );\n+        return select(parserSetVersion.getVersionByte());\n     }\n \n     /**\n@@ -74,7 +75,7 @@ public abstract class LogVersionSelector\n      * @param version to compare against latest version\n      * @return {@code true} if a more recent log entry version exists\n      */\n-    public boolean moreRecentVersionExists( byte version )\n+    public boolean moreRecentVersionExists(byte version)\n     {\n         return version < latestVersion;\n     }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
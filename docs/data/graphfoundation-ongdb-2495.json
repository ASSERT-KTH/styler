{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2495",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2495/HaBackupStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2495/HaBackupStrategy.java\nindex 749026c1500..5d4f0df3001 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2495/HaBackupStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2495/HaBackupStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.nio.file.Path;\n@@ -32,61 +33,58 @@ import org.neo4j.logging.LogProvider;\n \n class HaBackupStrategy extends LifecycleAdapter implements BackupStrategy\n {\n-    private final BackupProtocolService backupProtocolService;\n-    private final AddressResolver addressResolver;\n-    private final long timeout;\n-    private final Log log;\n+  private final BackupProtocolService backupProtocolService;\n+  private final AddressResolver addressResolver;\n+  private final long timeout;\n+  private final Log log;\n \n-    HaBackupStrategy( BackupProtocolService backupProtocolService, AddressResolver addressResolver, LogProvider logProvider, long timeout )\n-    {\n-        this.backupProtocolService = backupProtocolService;\n-        this.addressResolver = addressResolver;\n-        this.timeout = timeout;\n-        this.log = logProvider.getLog( HaBackupStrategy.class );\n-    }\n+  HaBackupStrategy(BackupProtocolService backupProtocolService, AddressResolver addressResolver, LogProvider logProvider, long timeout)\n+  {\n+    this.backupProtocolService = backupProtocolService;\n+    this.addressResolver = addressResolver;\n+    this.timeout = timeout;\n+    this.log = logProvider.getLog(HaBackupStrategy.class);\n+  }\n \n-    @Override\n-    public Fallible<BackupStageOutcome> performIncrementalBackup( Path backupDestination, Config config, OptionalHostnamePort fromAddress )\n+  @Override\n+  public Fallible<BackupStageOutcome> performIncrementalBackup(Path backupDestination, Config config, OptionalHostnamePort fromAddress)\n+  {\n+    HostnamePort resolvedAddress = addressResolver.resolveCorrectHAAddress(config, fromAddress);\n+    log.info(\"Resolved address for backup protocol is \" + resolvedAddress);\n+    try\n     {\n-        HostnamePort resolvedAddress = addressResolver.resolveCorrectHAAddress( config, fromAddress );\n-        log.info( \"Resolved address for backup protocol is \" + resolvedAddress );\n-        try\n-        {\n-            String host = resolvedAddress.getHost();\n-            int port = resolvedAddress.getPort();\n-            backupProtocolService.doIncrementalBackup(\n-                    host, port, backupDestination, ConsistencyCheck.NONE, timeout, config );\n-            return new Fallible<>( BackupStageOutcome.SUCCESS, null );\n-        }\n-        catch ( MismatchingStoreIdException e )\n-        {\n-            return new Fallible<>( BackupStageOutcome.UNRECOVERABLE_FAILURE, e );\n-        }\n-        catch ( RuntimeException e )\n-        {\n-            return new Fallible<>( BackupStageOutcome.FAILURE, e );\n-        }\n+      String host = resolvedAddress.getHost();\n+      int port = resolvedAddress.getPort();\n+      backupProtocolService.doIncrementalBackup(\n+          host, port, backupDestination, ConsistencyCheck.NONE, timeout, config);\n+      return new Fallible<>(BackupStageOutcome.SUCCESS, null);\n+    } catch (MismatchingStoreIdException e)\n+    {\n+      return new Fallible<>(BackupStageOutcome.UNRECOVERABLE_FAILURE, e);\n+    } catch (RuntimeException e)\n+    {\n+      return new Fallible<>(BackupStageOutcome.FAILURE, e);\n     }\n+  }\n \n-    @Override\n-    public Fallible<BackupStageOutcome> performFullBackup( Path desiredBackupLocation, Config config,\n-                                                           OptionalHostnamePort userProvidedAddress )\n+  @Override\n+  public Fallible<BackupStageOutcome> performFullBackup(Path desiredBackupLocation, Config config,\n+                                                        OptionalHostnamePort userProvidedAddress)\n+  {\n+    HostnamePort fromAddress = addressResolver.resolveCorrectHAAddress(config, userProvidedAddress);\n+    log.info(\"Resolved address for backup protocol is \" + fromAddress);\n+    ConsistencyCheck consistencyCheck = ConsistencyCheck.NONE;\n+    boolean forensics = false;\n+    try\n+    {\n+      String host = fromAddress.getHost();\n+      int port = fromAddress.getPort();\n+      backupProtocolService.doFullBackup(\n+          host, port, desiredBackupLocation, consistencyCheck, config, timeout, forensics);\n+      return new Fallible<>(BackupStageOutcome.SUCCESS, null);\n+    } catch (ComException e)\n     {\n-        HostnamePort fromAddress = addressResolver.resolveCorrectHAAddress( config, userProvidedAddress );\n-        log.info( \"Resolved address for backup protocol is \" + fromAddress );\n-        ConsistencyCheck consistencyCheck = ConsistencyCheck.NONE;\n-        boolean forensics = false;\n-        try\n-        {\n-            String host = fromAddress.getHost();\n-            int port = fromAddress.getPort();\n-            backupProtocolService.doFullBackup(\n-                    host, port, desiredBackupLocation, consistencyCheck, config, timeout, forensics );\n-            return new Fallible<>( BackupStageOutcome.SUCCESS, null );\n-        }\n-        catch ( ComException e )\n-        {\n-            return new Fallible<>( BackupStageOutcome.WRONG_PROTOCOL, e );\n-        }\n+      return new Fallible<>(BackupStageOutcome.WRONG_PROTOCOL, e);\n     }\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2495/HaBackupStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2495/HaBackupStrategy.java\nindex 749026c1500..9996b2cc624 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2495/HaBackupStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2495/HaBackupStrategy.java\n@@ -54,9 +54,8 @@ class HaBackupStrategy extends LifecycleAdapter implements BackupStrategy\n         {\n             String host = resolvedAddress.getHost();\n             int port = resolvedAddress.getPort();\n-            backupProtocolService.doIncrementalBackup(\n-                    host, port, backupDestination, ConsistencyCheck.NONE, timeout, config );\n-            return new Fallible<>( BackupStageOutcome.SUCCESS, null );\n+            backupProtocolService.doIncrementalBackup( host, port, backupDestination, ConsistencyCheck.NONE, timeout, config );\n+return new Fallible<>( BackupStageOutcome.SUCCESS, null );\n         }\n         catch ( MismatchingStoreIdException e )\n         {\n@@ -69,9 +68,8 @@ class HaBackupStrategy extends LifecycleAdapter implements BackupStrategy\n     }\n \n     @Override\n-    public Fallible<BackupStageOutcome> performFullBackup( Path desiredBackupLocation, Config config,\n-                                                           OptionalHostnamePort userProvidedAddress )\n-    {\n+    public Fallible<BackupStageOutcome> performFullBackup( Path desiredBackupLocation, Config config, OptionalHostnamePort userProvidedAddress )\n+{\n         HostnamePort fromAddress = addressResolver.resolveCorrectHAAddress( config, userProvidedAddress );\n         log.info( \"Resolved address for backup protocol is \" + fromAddress );\n         ConsistencyCheck consistencyCheck = ConsistencyCheck.NONE;\n@@ -80,13 +78,12 @@ class HaBackupStrategy extends LifecycleAdapter implements BackupStrategy\n         {\n             String host = fromAddress.getHost();\n             int port = fromAddress.getPort();\n-            backupProtocolService.doFullBackup(\n-                    host, port, desiredBackupLocation, consistencyCheck, config, timeout, forensics );\n-            return new Fallible<>( BackupStageOutcome.SUCCESS, null );\n+            backupProtocolService.doFullBackup( host, port, desiredBackupLocation, consistencyCheck, config, timeout, forensics );\n+return new Fallible<>( BackupStageOutcome.SUCCESS, null );\n         }\n         catch ( ComException e )\n         {\n             return new Fallible<>( BackupStageOutcome.WRONG_PROTOCOL, e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
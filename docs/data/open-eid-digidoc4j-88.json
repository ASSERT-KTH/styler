{
    "project_name": "open-eid-digidoc4j",
    "error_id": "88",
    "information": {
        "errors": [
            {
                "line": "109",
                "column": "15",
                "severity": "error",
                "message": "'(' should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "    if (in == null) {\n      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format\n              (\"Keystore not found by location <%s>\", keystoreLocation)));\n    }\n    return in;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/88/TslLoader.java\nindex 09536c3fb67..4388e1747a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/88/TslLoader.java\n@@ -105,8 +105,8 @@ public class TslLoader implements Serializable {\n     }\n     InputStream in = getClass().getClassLoader().getResourceAsStream(keystoreLocation);\n     if (in == null) {\n-      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format\n-              (\"Keystore not found by location <%s>\", keystoreLocation)));\n+      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format(\n+      \"Keystore not found by location <%s>\", keystoreLocation)));\n     }\n     return in;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "109",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/88/TslLoader.java\nindex 09536c3fb67..1b8033a1c46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/88/TslLoader.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic.tsl;\n \n@@ -106,7 +106,7 @@ public class TslLoader implements Serializable {\n     InputStream in = getClass().getClassLoader().getResourceAsStream(keystoreLocation);\n     if (in == null) {\n       throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format\n-              (\"Keystore not found by location <%s>\", keystoreLocation)));\n+          (\"Keystore not found by location <%s>\", keystoreLocation)));\n     }\n     return in;\n   }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/88/TslLoader.java\nindex 09536c3fb67..4b2f96a5fff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/88/TslLoader.java\n@@ -93,7 +93,7 @@ public class TslLoader implements Serializable {\n     try (InputStream tslKeyStoreInputStream = openTslKeyStoreInputStream()) {\n       return new KeyStoreCertificateSource(tslKeyStoreInputStream, DEFAULT_KEYSTORE_TYPE,\n           this.configuration.getTslKeyStorePassword());\n-    } catch (IOException e) {\n+  } catch (IOException e) {\n       throw new TslKeyStoreNotFoundException(\"Unable to retrieve keystore\", e);\n     }\n   }\n@@ -105,9 +105,8 @@ public class TslLoader implements Serializable {\n     }\n     InputStream in = getClass().getClassLoader().getResourceAsStream(keystoreLocation);\n     if (in == null) {\n-      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format\n-              (\"Keystore not found by location <%s>\", keystoreLocation)));\n-    }\n+      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format(\"Keystore not found by location <%s>\", keystoreLocation)));\n+  }\n     return in;\n   }\n \n@@ -131,4 +130,4 @@ public class TslLoader implements Serializable {\n     return tslRepository;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/88/TslLoader.java\nindex 09536c3fb67..fad711dec89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/88/TslLoader.java\n@@ -15,7 +15,6 @@ import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.Serializable;\n-\n import org.apache.commons.io.FileUtils;\n import org.digidoc4j.Configuration;\n import org.digidoc4j.exceptions.DigiDoc4JException;\n@@ -24,7 +23,6 @@ import org.digidoc4j.exceptions.TslKeyStoreNotFoundException;\n import org.digidoc4j.utils.ResourceUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import eu.europa.esig.dss.model.DSSException;\n import eu.europa.esig.dss.tsl.service.TSLRepository;\n import eu.europa.esig.dss.tsl.service.TSLValidationJob;\n@@ -33,6 +31,8 @@ import eu.europa.esig.dss.spi.x509.KeyStoreCertificateSource;\n /**\n  * TSL loader\n  */\n+\n+\n public class TslLoader implements Serializable {\n \n   public static final File fileCacheDirectory = new File(System.getProperty(\"java.io.tmpdir\") + \"/digidoc4jTSLCache\");\n@@ -47,10 +47,12 @@ public class TslLoader implements Serializable {\n   /**\n    * @param configuration configuration context\n    */\n+\n   public TslLoader(Configuration configuration) {\n     this.configuration = configuration;\n   }\n \n+\n   public static void invalidateCache() {\n     logger.info(\"Cleaning TSL cache directory at {}\", TslLoader.fileCacheDirectory.getPath());\n     try {\n@@ -91,7 +93,8 @@ public class TslLoader implements Serializable {\n \n   private KeyStoreCertificateSource getKeyStore() {\n     try (InputStream tslKeyStoreInputStream = openTslKeyStoreInputStream()) {\n-      return new KeyStoreCertificateSource(tslKeyStoreInputStream, DEFAULT_KEYSTORE_TYPE,\n+      return new KeyStoreCertificateSource(tslKeyStoreInputStream,\n+        DEFAULT_KEYSTORE_TYPE,\n           this.configuration.getTslKeyStorePassword());\n     } catch (IOException e) {\n       throw new TslKeyStoreNotFoundException(\"Unable to retrieve keystore\", e);\n@@ -105,8 +108,7 @@ public class TslLoader implements Serializable {\n     }\n     InputStream in = getClass().getClassLoader().getResourceAsStream(keystoreLocation);\n     if (in == null) {\n-      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format\n-              (\"Keystore not found by location <%s>\", keystoreLocation)));\n+      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format(\"Keystore not found by location <%s>\", keystoreLocation)));\n     }\n     return in;\n   }\n@@ -130,5 +132,4 @@ public class TslLoader implements Serializable {\n   public TSLRepository getTslRepository() {\n     return tslRepository;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/88/TslLoader.java\nindex 09536c3fb67..4388e1747a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/88/TslLoader.java\n@@ -105,8 +105,8 @@ public class TslLoader implements Serializable {\n     }\n     InputStream in = getClass().getClassLoader().getResourceAsStream(keystoreLocation);\n     if (in == null) {\n-      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format\n-              (\"Keystore not found by location <%s>\", keystoreLocation)));\n+      throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format(\n+      \"Keystore not found by location <%s>\", keystoreLocation)));\n     }\n     return in;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "109",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/88/TslLoader.java\nindex 09536c3fb67..e89c4cbb678 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/88/TslLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/88/TslLoader.java\n@@ -106,7 +106,7 @@ public class TslLoader implements Serializable {\n     InputStream in = getClass().getClassLoader().getResourceAsStream(keystoreLocation);\n     if (in == null) {\n       throw new TslKeyStoreNotFoundException(\"Unable to retrieve TSL keystore\", new RuntimeException(String.format\n-              (\"Keystore not found by location <%s>\", keystoreLocation)));\n+          (\"Keystore not found by location <%s>\", keystoreLocation)));\n     }\n     return in;\n   }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
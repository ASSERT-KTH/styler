{
    "project_name": "graphfoundation-ongdb",
    "error_id": "640",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/640/LogEntryParsersV2_3.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/640/LogEntryParsersV2_3.java\nindex b3fd17c974c..f4dd11c4fb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/640/LogEntryParsersV2_3.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/640/LogEntryParsersV2_3.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.io.IOException;\n@@ -29,106 +30,106 @@ import org.neo4j.storageengine.api.StorageCommand;\n \n public enum LogEntryParsersV2_3 implements LogEntryParser<LogEntry>\n {\n-    TX_START\n-            {\n-                @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n-                    LogPosition position = marker.newPosition();\n-                    int masterId = channel.getInt();\n-                    int authorId = channel.getInt();\n-                    long timeWritten = channel.getLong();\n-                    long latestCommittedTxWhenStarted = channel.getLong();\n-                    int additionalHeaderLength = channel.getInt();\n-                    byte[] additionalHeader = new byte[additionalHeaderLength];\n-                    channel.get( additionalHeader, additionalHeaderLength );\n-                    return new LogEntryStart( version, masterId, authorId, timeWritten,\n-                            latestCommittedTxWhenStarted,\n-                            additionalHeader, position );\n-                }\n+  TX_START\n+      {\n+        @Override\n+        public LogEntry parse(LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n+                              CommandReaderFactory commandReader) throws IOException\n+        {\n+          LogPosition position = marker.newPosition();\n+          int masterId = channel.getInt();\n+          int authorId = channel.getInt();\n+          long timeWritten = channel.getLong();\n+          long latestCommittedTxWhenStarted = channel.getLong();\n+          int additionalHeaderLength = channel.getInt();\n+          byte[] additionalHeader = new byte[additionalHeaderLength];\n+          channel.get(additionalHeader, additionalHeaderLength);\n+          return new LogEntryStart(version, masterId, authorId, timeWritten,\n+              latestCommittedTxWhenStarted,\n+              additionalHeader, position);\n+        }\n \n-                @Override\n-                public byte byteCode()\n-                {\n-                    return LogEntryByteCodes.TX_START;\n-                }\n+        @Override\n+        public byte byteCode()\n+        {\n+          return LogEntryByteCodes.TX_START;\n+        }\n \n-                @Override\n-                public boolean skip()\n-                {\n-                    return false;\n-                }\n-            },\n+        @Override\n+        public boolean skip()\n+        {\n+          return false;\n+        }\n+      },\n \n-    COMMAND\n-            {\n-                @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n-                    StorageCommand command = commandReader.byVersion( version.byteCode() ).read( channel );\n-                    return command == null ? null : new LogEntryCommand( version, command );\n-                }\n+  COMMAND\n+      {\n+        @Override\n+        public LogEntry parse(LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n+                              CommandReaderFactory commandReader) throws IOException\n+        {\n+          StorageCommand command = commandReader.byVersion(version.byteCode()).read(channel);\n+          return command == null ? null : new LogEntryCommand(version, command);\n+        }\n \n-                @Override\n-                public byte byteCode()\n-                {\n-                    return LogEntryByteCodes.COMMAND;\n-                }\n+        @Override\n+        public byte byteCode()\n+        {\n+          return LogEntryByteCodes.COMMAND;\n+        }\n \n-                @Override\n-                public boolean skip()\n-                {\n-                    return false;\n-                }\n-            },\n+        @Override\n+        public boolean skip()\n+        {\n+          return false;\n+        }\n+      },\n \n-    TX_COMMIT\n-            {\n-                @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n-                    long txId = channel.getLong();\n-                    long timeWritten = channel.getLong();\n-                    return new LogEntryCommit( version, txId, timeWritten );\n-                }\n+  TX_COMMIT\n+      {\n+        @Override\n+        public LogEntry parse(LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n+                              CommandReaderFactory commandReader) throws IOException\n+        {\n+          long txId = channel.getLong();\n+          long timeWritten = channel.getLong();\n+          return new LogEntryCommit(version, txId, timeWritten);\n+        }\n \n-                @Override\n-                public byte byteCode()\n-                {\n-                    return LogEntryByteCodes.TX_COMMIT;\n-                }\n+        @Override\n+        public byte byteCode()\n+        {\n+          return LogEntryByteCodes.TX_COMMIT;\n+        }\n \n-                @Override\n-                public boolean skip()\n-                {\n-                    return false;\n-                }\n-            },\n+        @Override\n+        public boolean skip()\n+        {\n+          return false;\n+        }\n+      },\n \n-    CHECK_POINT\n-            {\n-                @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n-                    long logVersion = channel.getLong();\n-                    long byteOffset = channel.getLong();\n-                    return new CheckPoint( version, new LogPosition( logVersion, byteOffset ) );\n-                }\n+  CHECK_POINT\n+      {\n+        @Override\n+        public LogEntry parse(LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n+                              CommandReaderFactory commandReader) throws IOException\n+        {\n+          long logVersion = channel.getLong();\n+          long byteOffset = channel.getLong();\n+          return new CheckPoint(version, new LogPosition(logVersion, byteOffset));\n+        }\n \n-                @Override\n-                public byte byteCode()\n-                {\n-                    return LogEntryByteCodes.CHECK_POINT;\n-                }\n+        @Override\n+        public byte byteCode()\n+        {\n+          return LogEntryByteCodes.CHECK_POINT;\n+        }\n \n-                @Override\n-                public boolean skip()\n-                {\n-                    return false;\n-                }\n-            }\n+        @Override\n+        public boolean skip()\n+        {\n+          return false;\n+        }\n+      }\n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/640/LogEntryParsersV2_3.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/640/LogEntryParsersV2_3.java\nindex b3fd17c974c..7247eae9445 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/640/LogEntryParsersV2_3.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/640/LogEntryParsersV2_3.java\n@@ -30,11 +30,10 @@ import org.neo4j.storageengine.api.StorageCommand;\n public enum LogEntryParsersV2_3 implements LogEntryParser<LogEntry>\n {\n     TX_START\n-            {\n+{\n                 @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n+                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker, CommandReaderFactory commandReader ) throws IOException\n+{\n                     LogPosition position = marker.newPosition();\n                     int masterId = channel.getInt();\n                     int authorId = channel.getInt();\n@@ -44,8 +43,7 @@ public enum LogEntryParsersV2_3 implements LogEntryParser<LogEntry>\n                     byte[] additionalHeader = new byte[additionalHeaderLength];\n                     channel.get( additionalHeader, additionalHeaderLength );\n                     return new LogEntryStart( version, masterId, authorId, timeWritten,\n-                            latestCommittedTxWhenStarted,\n-                            additionalHeader, position );\n+                            latestCommittedTxWhenStarted, additionalHeader, position );\n                 }\n \n                 @Override\n@@ -59,14 +57,11 @@ public enum LogEntryParsersV2_3 implements LogEntryParser<LogEntry>\n                 {\n                     return false;\n                 }\n-            },\n-\n-    COMMAND\n-            {\n+            }, COMMAND\n+{\n                 @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n+                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker, CommandReaderFactory commandReader ) throws IOException\n+{\n                     StorageCommand command = commandReader.byVersion( version.byteCode() ).read( channel );\n                     return command == null ? null : new LogEntryCommand( version, command );\n                 }\n@@ -82,14 +77,11 @@ public enum LogEntryParsersV2_3 implements LogEntryParser<LogEntry>\n                 {\n                     return false;\n                 }\n-            },\n-\n-    TX_COMMIT\n-            {\n+            }, TX_COMMIT\n+{\n                 @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n+                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker, CommandReaderFactory commandReader ) throws IOException\n+{\n                     long txId = channel.getLong();\n                     long timeWritten = channel.getLong();\n                     return new LogEntryCommit( version, txId, timeWritten );\n@@ -106,14 +98,11 @@ public enum LogEntryParsersV2_3 implements LogEntryParser<LogEntry>\n                 {\n                     return false;\n                 }\n-            },\n-\n-    CHECK_POINT\n-            {\n+            }, CHECK_POINT\n+{\n                 @Override\n-                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker,\n-                                       CommandReaderFactory commandReader ) throws IOException\n-                {\n+                public LogEntry parse( LogEntryVersion version, ReadableClosableChannel channel, LogPositionMarker marker, CommandReaderFactory commandReader ) throws IOException\n+{\n                     long logVersion = channel.getLong();\n                     long byteOffset = channel.getLong();\n                     return new CheckPoint( version, new LogPosition( logVersion, byteOffset ) );\n@@ -131,4 +120,4 @@ public enum LogEntryParsersV2_3 implements LogEntryParser<LogEntry>\n                     return false;\n                 }\n             }\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
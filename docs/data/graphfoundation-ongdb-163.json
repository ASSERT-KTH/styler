{
    "project_name": "graphfoundation-ongdb",
    "error_id": "163",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/163/NativeSchemaIndexHeaderReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/163/NativeSchemaIndexHeaderReader.java\nindex 591c5c1f44d..307b8b9a05d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/163/NativeSchemaIndexHeaderReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/163/NativeSchemaIndexHeaderReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.nio.ByteBuffer;\n@@ -28,28 +29,28 @@ import static org.neo4j.kernel.impl.index.schema.NativeSchemaIndexPopulator.BYTE\n \n class NativeSchemaIndexHeaderReader implements Header.Reader\n {\n-    byte state;\n-    String failureMessage;\n+  byte state;\n+  String failureMessage;\n \n-    @Override\n-    public void read( ByteBuffer headerData )\n+  @Override\n+  public void read(ByteBuffer headerData)\n+  {\n+    state = headerData.get();\n+    if (state == BYTE_FAILED)\n     {\n-        state = headerData.get();\n-        if ( state == BYTE_FAILED )\n-        {\n-            failureMessage = readFailureMessage( headerData );\n-        }\n+      failureMessage = readFailureMessage(headerData);\n     }\n+  }\n \n-    /**\n-     * Alternative header readers should react to FAILED indexes by using this, because their specific headers will have been\n-     * overwritten by the FailedHeaderWriter.\n-     */\n-    public static String readFailureMessage( ByteBuffer headerData )\n-    {\n-        short messageLength = headerData.getShort();\n-        byte[] failureMessageBytes = new byte[messageLength];\n-        headerData.get( failureMessageBytes );\n-        return new String( failureMessageBytes, StandardCharsets.UTF_8 );\n-    }\n+  /**\n+   * Alternative header readers should react to FAILED indexes by using this, because their specific headers will have been\n+   * overwritten by the FailedHeaderWriter.\n+   */\n+  public static String readFailureMessage(ByteBuffer headerData)\n+  {\n+    short messageLength = headerData.getShort();\n+    byte[] failureMessageBytes = new byte[messageLength];\n+    headerData.get(failureMessageBytes);\n+    return new String(failureMessageBytes, StandardCharsets.UTF_8);\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/163/NativeSchemaIndexHeaderReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/163/NativeSchemaIndexHeaderReader.java\nindex 591c5c1f44d..7ae25d487cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/163/NativeSchemaIndexHeaderReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/163/NativeSchemaIndexHeaderReader.java\n@@ -52,4 +52,4 @@ class NativeSchemaIndexHeaderReader implements Header.Reader\n         headerData.get( failureMessageBytes );\n         return new String( failureMessageBytes, StandardCharsets.UTF_8 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "751",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/751/ServerPartitionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/751/ServerPartitionFactory.java\nindex 72d0ee48207..7b6002a8768 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/751/ServerPartitionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/751/ServerPartitionFactory.java\n@@ -34,18 +34,19 @@ public class ServerPartitionFactory {\n   /**\n    * Create a new server partition\n    *\n-   * @param partKey partition key\n-   * @param partClass partition class\n+   * @param partKey      partition key\n+   * @param partClass    partition class\n    * @param storageClass storage class\n-   * @param rowType row type\n-   * @param valueClass value class\n-   * @param estSparsity estimate sparsity\n+   * @param rowType      row type\n+   * @param valueClass   value class\n+   * @param estSparsity  estimate sparsity\n    * @return server partition\n    */\n   public static ServerPartition getPartition(PartitionKey partKey,\n-      Class<? extends IServerPartition> partClass,\n-      Class<? extends IServerPartitionStorage> storageClass,\n-      RowType rowType, Class<? extends IElement> valueClass, double estSparsity) {\n+                                             Class<? extends IServerPartition> partClass,\n+                                             Class<? extends IServerPartitionStorage> storageClass,\n+                                             RowType rowType, Class<? extends IElement> valueClass,\n+                                             double estSparsity) {\n     // Row base partition\n     if (partClass == RowBasedPartition.class) {\n       // If storage class is not set, use default DenseServerRowsStorage\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/751/ServerPartitionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/751/ServerPartitionFactory.java\nindex 72d0ee48207..9055a4790f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/751/ServerPartitionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/751/ServerPartitionFactory.java\n@@ -54,15 +54,13 @@ public class ServerPartitionFactory {\n       }\n \n       try {\n-        ServerRowsStorage storage = ServerPartitionStorageFactory\n-            .getRowBasedStorage(storageClass, partKey, rowType);\n+        ServerRowsStorage storage = ServerPartitionStorageFactory.getRowBasedStorage(storageClass, partKey, rowType);\n         return new RowBasedPartition(partKey, estSparsity, storage, rowType, valueClass);\n       } catch (Throwable e) {\n         throw new RuntimeException(e);\n       }\n     } else if (partClass == CSRPartition.class) {\n-      CSRStorage storage = ServerPartitionStorageFactory\n-          .getCSRStorage(storageClass, partKey, rowType);\n+      CSRStorage storage = ServerPartitionStorageFactory.getCSRStorage(storageClass, partKey, rowType);\n       return new CSRPartition(partKey, estSparsity, storage, rowType);\n     } else {\n       throw new UnsupportedOperationException(\"not support partition class \" + partClass + \" now \");\n@@ -81,8 +79,7 @@ public class ServerPartitionFactory {\n     } else if (CSRPartition.class.getName().equals(partClassName)) {\n       return new CSRPartition();\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"not support partition class \" + partClassName + \" now \");\n+      throw new UnsupportedOperationException(\"not support partition class \" + partClassName + \" now \");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/751/ServerPartitionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/751/ServerPartitionFactory.java\nindex 72d0ee48207..ea00d31ab13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/751/ServerPartitionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/751/ServerPartitionFactory.java\n@@ -29,6 +29,7 @@ import com.tencent.angel.ps.storage.vector.element.IElement;\n /**\n  * Server Partition factory\n  */\n+\n public class ServerPartitionFactory {\n \n   /**\n@@ -42,28 +43,24 @@ public class ServerPartitionFactory {\n    * @param estSparsity estimate sparsity\n    * @return server partition\n    */\n-  public static ServerPartition getPartition(PartitionKey partKey,\n-      Class<? extends IServerPartition> partClass,\n-      Class<? extends IServerPartitionStorage> storageClass,\n-      RowType rowType, Class<? extends IElement> valueClass, double estSparsity) {\n+\n+  public static ServerPartition getPartition(\n+    PartitionKey partKey, Class<? extends IServerPartition> partClass, Class<? extends IServerPartitionStorage> storageClass, RowType rowType, Class<? extends IElement> valueClass, double estSparsity) {\n     // Row base partition\n     if (partClass == RowBasedPartition.class) {\n       // If storage class is not set, use default DenseServerRowsStorage\n       if (storageClass == null) {\n         storageClass = DenseServerRowsStorage.class;\n       }\n-\n       try {\n-        ServerRowsStorage storage = ServerPartitionStorageFactory\n-            .getRowBasedStorage(storageClass, partKey, rowType);\n+        ServerRowsStorage storage = ServerPartitionStorageFactory.getRowBasedStorage(storageClass, partKey, rowType);\n         return new RowBasedPartition(partKey, estSparsity, storage, rowType, valueClass);\n       } catch (Throwable e) {\n         throw new RuntimeException(e);\n       }\n     } else if (partClass == CSRPartition.class) {\n-      CSRStorage storage = ServerPartitionStorageFactory\n-          .getCSRStorage(storageClass, partKey, rowType);\n-      return new CSRPartition(partKey, estSparsity, storage, rowType);\n+             CSRStorage storage = ServerPartitionStorageFactory.getCSRStorage(storageClass, partKey, rowType);\n+             return new CSRPartition(partKey, estSparsity, storage, rowType);\n     } else {\n       throw new UnsupportedOperationException(\"not support partition class \" + partClass + \" now \");\n     }\n@@ -75,14 +72,14 @@ public class ServerPartitionFactory {\n    * @param partClassName partition class\n    * @return server partition\n    */\n+\n   public static ServerPartition getPartition(String partClassName) {\n     if (RowBasedPartition.class.getName().equals(partClassName)) {\n       return new RowBasedPartition();\n     } else if (CSRPartition.class.getName().equals(partClassName)) {\n-      return new CSRPartition();\n+             return new CSRPartition();\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"not support partition class \" + partClassName + \" now \");\n+      throw new UnsupportedOperationException(\"not support partition class \" + partClassName + \" now \");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2146",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2146/EntryCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2146/EntryCursor.java\nindex 6f2c23c188d..cc226db9f6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2146/EntryCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2146/EntryCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.io.IOException;\n@@ -34,89 +35,88 @@ import org.neo4j.cursor.IOCursor;\n  */\n class EntryCursor implements IOCursor<EntryRecord>\n {\n-    private final Segments segments;\n-    private IOCursor<EntryRecord> cursor;\n-    private ValueRange<Long,SegmentFile> segmentRange;\n-    private long currentIndex;\n-\n-    private long limit = Long.MAX_VALUE;\n-    private CursorValue<EntryRecord> currentRecord = new CursorValue<>();\n+  private final Segments segments;\n+  private IOCursor<EntryRecord> cursor;\n+  private ValueRange<Long, SegmentFile> segmentRange;\n+  private long currentIndex;\n+\n+  private long limit = Long.MAX_VALUE;\n+  private CursorValue<EntryRecord> currentRecord = new CursorValue<>();\n+\n+  EntryCursor(Segments segments, long logIndex)\n+  {\n+    this.segments = segments;\n+    this.currentIndex = logIndex - 1;\n+  }\n+\n+  @Override\n+  public boolean next() throws IOException\n+  {\n+    currentIndex++;\n+    if (segmentRange == null || currentIndex >= limit)\n+    {\n+      if (!nextSegment())\n+      {\n+        return false;\n+      }\n+    }\n \n-    EntryCursor( Segments segments, long logIndex )\n+    if (cursor.next())\n     {\n-        this.segments = segments;\n-        this.currentIndex = logIndex - 1;\n+      currentRecord.set(cursor.get());\n+      return true;\n     }\n \n-    @Override\n-    public boolean next() throws IOException\n+    currentRecord.invalidate();\n+    return false;\n+  }\n+\n+  private boolean nextSegment() throws IOException\n+  {\n+    segmentRange = segments.getForIndex(currentIndex);\n+    Optional<SegmentFile> optionalFile = segmentRange.value();\n+\n+    if (!optionalFile.isPresent())\n     {\n-        currentIndex++;\n-        if ( segmentRange == null || currentIndex >= limit )\n-        {\n-            if ( !nextSegment() )\n-            {\n-                return false;\n-            }\n-        }\n-\n-        if ( cursor.next() )\n-        {\n-            currentRecord.set( cursor.get() );\n-            return true;\n-        }\n-\n-        currentRecord.invalidate();\n-        return false;\n+      currentRecord.invalidate();\n+      return false;\n     }\n \n-    private boolean nextSegment() throws IOException\n+    SegmentFile file = optionalFile.get();\n+\n+    /* Open new reader before closing old, so that pruner cannot overtake us. */\n+    IOCursor<EntryRecord> oldCursor = cursor;\n+    try\n+    {\n+      cursor = file.getCursor(currentIndex);\n+    } catch (DisposedException e)\n     {\n-        segmentRange = segments.getForIndex( currentIndex );\n-        Optional<SegmentFile> optionalFile = segmentRange.value();\n-\n-        if ( !optionalFile.isPresent() )\n-        {\n-            currentRecord.invalidate();\n-            return false;\n-        }\n-\n-        SegmentFile file = optionalFile.get();\n-\n-        /* Open new reader before closing old, so that pruner cannot overtake us. */\n-        IOCursor<EntryRecord> oldCursor = cursor;\n-        try\n-        {\n-            cursor = file.getCursor( currentIndex );\n-        }\n-        catch ( DisposedException e )\n-        {\n-            currentRecord.invalidate();\n-            return false;\n-        }\n-\n-        if ( oldCursor != null )\n-        {\n-            oldCursor.close();\n-        }\n-\n-        limit = segmentRange.limit().orElse( Long.MAX_VALUE );\n-\n-        return true;\n+      currentRecord.invalidate();\n+      return false;\n     }\n \n-    @Override\n-    public void close() throws IOException\n+    if (oldCursor != null)\n     {\n-        if ( cursor != null )\n-        {\n-            cursor.close();\n-        }\n+      oldCursor.close();\n     }\n \n-    @Override\n-    public EntryRecord get()\n+    limit = segmentRange.limit().orElse(Long.MAX_VALUE);\n+\n+    return true;\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    if (cursor != null)\n     {\n-        return currentRecord.get();\n+      cursor.close();\n     }\n+  }\n+\n+  @Override\n+  public EntryRecord get()\n+  {\n+    return currentRecord.get();\n+  }\n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2146/EntryCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2146/EntryCursor.java\nindex 6f2c23c188d..8f7d4265030 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2146/EntryCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2146/EntryCursor.java\n@@ -74,8 +74,7 @@ class EntryCursor implements IOCursor<EntryRecord>\n     {\n         segmentRange = segments.getForIndex( currentIndex );\n         Optional<SegmentFile> optionalFile = segmentRange.value();\n-\n-        if ( !optionalFile.isPresent() )\n+if ( !optionalFile.isPresent() )\n         {\n             currentRecord.invalidate();\n             return false;\n@@ -101,8 +100,7 @@ class EntryCursor implements IOCursor<EntryRecord>\n         }\n \n         limit = segmentRange.limit().orElse( Long.MAX_VALUE );\n-\n-        return true;\n+return true;\n     }\n \n     @Override\n@@ -119,4 +117,4 @@ class EntryCursor implements IOCursor<EntryRecord>\n     {\n         return currentRecord.get();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
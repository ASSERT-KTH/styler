{
    "project_name": "graphfoundation-ongdb",
    "error_id": "259",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/259/DumpCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/259/DumpCommand.java\nindex ef10105fce8..098139d3b0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/259/DumpCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/259/DumpCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.io.Closeable;\n@@ -49,120 +50,113 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.logical_logs_locat\n public class DumpCommand implements AdminCommand\n {\n \n-    private static final Arguments arguments = new Arguments()\n-            .withDatabase()\n-            .withTo( \"Destination (file or folder) of database dump.\" );\n+  private static final Arguments arguments = new Arguments()\n+      .withDatabase()\n+      .withTo(\"Destination (file or folder) of database dump.\");\n \n-    private final Path homeDir;\n-    private final Path configDir;\n-    private final Dumper dumper;\n+  private final Path homeDir;\n+  private final Path configDir;\n+  private final Dumper dumper;\n \n-    public DumpCommand( Path homeDir, Path configDir, Dumper dumper )\n-    {\n-        this.homeDir = homeDir;\n-        this.configDir = configDir;\n-        this.dumper = dumper;\n-    }\n+  public DumpCommand(Path homeDir, Path configDir, Dumper dumper)\n+  {\n+    this.homeDir = homeDir;\n+    this.configDir = configDir;\n+    this.dumper = dumper;\n+  }\n \n-    @Override\n-    public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n-    {\n-        String database = arguments.parse( args ).get( ARG_DATABASE );\n-        Path archive = calculateArchive( database, arguments.getMandatoryPath( \"to\" ) );\n-\n-        Config config = buildConfig( database );\n-        Path databaseDirectory = canonicalPath( getDatabaseDirectory( config ) );\n-        Path transactionLogsDirectory = canonicalPath( getTransactionalLogsDirectory( config ) );\n-\n-        try\n-        {\n-            Validators.CONTAINS_EXISTING_DATABASE.validate( databaseDirectory.toFile() );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            throw new CommandFailed( \"database does not exist: \" + database, e );\n-        }\n-\n-        try ( Closeable ignored = StoreLockChecker.check( databaseDirectory ) )\n-        {\n-            dump( database, databaseDirectory, transactionLogsDirectory, archive );\n-        }\n-        catch ( StoreLockException e )\n-        {\n-            throw new CommandFailed( \"the database is in use -- stop Neo4j and try again\", e );\n-        }\n-        catch ( IOException e )\n-        {\n-            wrapIOException( e );\n-        }\n-        catch ( CannotWriteException e )\n-        {\n-            throw new CommandFailed( \"you do not have permission to dump the database -- is Neo4j running as a different user?\", e );\n-        }\n-    }\n+  @Override\n+  public void execute(String[] args) throws IncorrectUsage, CommandFailed\n+  {\n+    String database = arguments.parse(args).get(ARG_DATABASE);\n+    Path archive = calculateArchive(database, arguments.getMandatoryPath(\"to\"));\n \n-    private Path getDatabaseDirectory( Config config )\n-    {\n-        return config.get( database_path ).toPath();\n-    }\n+    Config config = buildConfig(database);\n+    Path databaseDirectory = canonicalPath(getDatabaseDirectory(config));\n+    Path transactionLogsDirectory = canonicalPath(getTransactionalLogsDirectory(config));\n \n-    private Path getTransactionalLogsDirectory( Config config )\n+    try\n     {\n-        return config.get( logical_logs_location ).toPath();\n-    }\n-\n-    private Config buildConfig( String databaseName )\n+      Validators.CONTAINS_EXISTING_DATABASE.validate(databaseDirectory.toFile());\n+    } catch (IllegalArgumentException e)\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .withHome( homeDir )\n-                .withConnectorsDisabled()\n-                .withSetting( GraphDatabaseSettings.active_database, databaseName )\n-                .build();\n+      throw new CommandFailed(\"database does not exist: \" + database, e);\n     }\n \n-    private Path calculateArchive( String database, Path to )\n+    try (Closeable ignored = StoreLockChecker.check(databaseDirectory))\n     {\n-        return Files.isDirectory( to ) ? to.resolve( database + \".dump\" ) : to;\n-    }\n-\n-    private void dump( String database, Path databaseDirectory, Path transactionalLogsDirectory, Path archive )\n-            throws CommandFailed\n+      dump(database, databaseDirectory, transactionLogsDirectory, archive);\n+    } catch (StoreLockException e)\n     {\n-        try\n-        {\n-            dumper.dump( databaseDirectory, transactionalLogsDirectory, archive, this::isStoreLock );\n-        }\n-        catch ( FileAlreadyExistsException e )\n-        {\n-            throw new CommandFailed( \"archive already exists: \" + e.getMessage(), e );\n-        }\n-        catch ( NoSuchFileException e )\n-        {\n-            if ( Paths.get( e.getMessage() ).toAbsolutePath().equals( databaseDirectory.toAbsolutePath() ) )\n-            {\n-                throw new CommandFailed( \"database does not exist: \" + database, e );\n-            }\n-            wrapIOException( e );\n-        }\n-        catch ( IOException e )\n-        {\n-            wrapIOException( e );\n-        }\n-    }\n-\n-    private boolean isStoreLock( Path path )\n+      throw new CommandFailed(\"the database is in use -- stop Neo4j and try again\", e);\n+    } catch (IOException e)\n     {\n-        return Objects.equals( path.getFileName().toString(), StoreLocker.STORE_LOCK_FILENAME );\n-    }\n-\n-    private void wrapIOException( IOException e ) throws CommandFailed\n+      wrapIOException(e);\n+    } catch (CannotWriteException e)\n     {\n-        throw new CommandFailed(\n-                format( \"unable to dump database: %s: %s\", e.getClass().getSimpleName(), e.getMessage() ), e );\n+      throw new CommandFailed(\"you do not have permission to dump the database -- is Neo4j running as a different user?\", e);\n     }\n-\n-    public static Arguments arguments()\n+  }\n+\n+  private Path getDatabaseDirectory(Config config)\n+  {\n+    return config.get(database_path).toPath();\n+  }\n+\n+  private Path getTransactionalLogsDirectory(Config config)\n+  {\n+    return config.get(logical_logs_location).toPath();\n+  }\n+\n+  private Config buildConfig(String databaseName)\n+  {\n+    return Config.fromFile(configDir.resolve(Config.DEFAULT_CONFIG_FILE_NAME))\n+        .withHome(homeDir)\n+        .withConnectorsDisabled()\n+        .withSetting(GraphDatabaseSettings.active_database, databaseName)\n+        .build();\n+  }\n+\n+  private Path calculateArchive(String database, Path to)\n+  {\n+    return Files.isDirectory(to) ? to.resolve(database + \".dump\") : to;\n+  }\n+\n+  private void dump(String database, Path databaseDirectory, Path transactionalLogsDirectory, Path archive)\n+      throws CommandFailed\n+  {\n+    try\n+    {\n+      dumper.dump(databaseDirectory, transactionalLogsDirectory, archive, this::isStoreLock);\n+    } catch (FileAlreadyExistsException e)\n+    {\n+      throw new CommandFailed(\"archive already exists: \" + e.getMessage(), e);\n+    } catch (NoSuchFileException e)\n+    {\n+      if (Paths.get(e.getMessage()).toAbsolutePath().equals(databaseDirectory.toAbsolutePath()))\n+      {\n+        throw new CommandFailed(\"database does not exist: \" + database, e);\n+      }\n+      wrapIOException(e);\n+    } catch (IOException e)\n     {\n-        return arguments;\n+      wrapIOException(e);\n     }\n+  }\n+\n+  private boolean isStoreLock(Path path)\n+  {\n+    return Objects.equals(path.getFileName().toString(), StoreLocker.STORE_LOCK_FILENAME);\n+  }\n+\n+  private void wrapIOException(IOException e) throws CommandFailed\n+  {\n+    throw new CommandFailed(\n+        format(\"unable to dump database: %s: %s\", e.getClass().getSimpleName(), e.getMessage()), e);\n+  }\n+\n+  public static Arguments arguments()\n+  {\n+    return arguments;\n+  }\n }\n",
            "diff_size": 159
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/259/DumpCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/259/DumpCommand.java\nindex ef10105fce8..51493724e3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/259/DumpCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/259/DumpCommand.java\n@@ -48,12 +48,8 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.logical_logs_locat\n \n public class DumpCommand implements AdminCommand\n {\n-\n-    private static final Arguments arguments = new Arguments()\n-            .withDatabase()\n-            .withTo( \"Destination (file or folder) of database dump.\" );\n-\n-    private final Path homeDir;\n+    private static final Arguments arguments = new Arguments().withDatabase().withTo( \"Destination (file or folder) of database dump.\" );\n+private final Path homeDir;\n     private final Path configDir;\n     private final Dumper dumper;\n \n@@ -69,8 +65,7 @@ public class DumpCommand implements AdminCommand\n     {\n         String database = arguments.parse( args ).get( ARG_DATABASE );\n         Path archive = calculateArchive( database, arguments.getMandatoryPath( \"to\" ) );\n-\n-        Config config = buildConfig( database );\n+Config config = buildConfig( database );\n         Path databaseDirectory = canonicalPath( getDatabaseDirectory( config ) );\n         Path transactionLogsDirectory = canonicalPath( getTransactionalLogsDirectory( config ) );\n \n@@ -113,10 +108,8 @@ public class DumpCommand implements AdminCommand\n \n     private Config buildConfig( String databaseName )\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .withHome( homeDir )\n-                .withConnectorsDisabled()\n-                .withSetting( GraphDatabaseSettings.active_database, databaseName )\n+        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) ).withHome( homeDir )\n+                .withConnectorsDisabled().withSetting( GraphDatabaseSettings.active_database, databaseName )\n                 .build();\n     }\n \n@@ -125,9 +118,8 @@ public class DumpCommand implements AdminCommand\n         return Files.isDirectory( to ) ? to.resolve( database + \".dump\" ) : to;\n     }\n \n-    private void dump( String database, Path databaseDirectory, Path transactionalLogsDirectory, Path archive )\n-            throws CommandFailed\n-    {\n+    private void dump( String database, Path databaseDirectory, Path transactionalLogsDirectory, Path archive ) throws CommandFailed\n+{\n         try\n         {\n             dumper.dump( databaseDirectory, transactionalLogsDirectory, archive, this::isStoreLock );\n@@ -142,7 +134,8 @@ public class DumpCommand implements AdminCommand\n             {\n                 throw new CommandFailed( \"database does not exist: \" + database, e );\n             }\n-            wrapIOException( e );\n+\n+wrapIOException( e );\n         }\n         catch ( IOException e )\n         {\n@@ -157,12 +150,11 @@ public class DumpCommand implements AdminCommand\n \n     private void wrapIOException( IOException e ) throws CommandFailed\n     {\n-        throw new CommandFailed(\n-                format( \"unable to dump database: %s: %s\", e.getClass().getSimpleName(), e.getMessage() ), e );\n+        throw new CommandFailed( format( \"unable to dump database: %s: %s\", e.getClass().getSimpleName(), e.getMessage() ), e );\n     }\n \n     public static Arguments arguments()\n     {\n         return arguments;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
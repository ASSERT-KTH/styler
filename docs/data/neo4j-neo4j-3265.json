{
    "project_name": "neo4j-neo4j",
    "error_id": "3265",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3265/GraphDatabaseService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3265/GraphDatabaseService.java\nindex 9dcfc6522ab..778472c8f2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3265/GraphDatabaseService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3265/GraphDatabaseService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n import java.time.Duration;\n@@ -37,10 +38,10 @@ public interface GraphDatabaseService\n      * Use this method to check if the database is currently in a usable state.\n      *\n      * @param timeout timeout (in milliseconds) to wait for the database to become available.\n-     *   If the database has been shut down {@code false} is returned immediately.\n+     *                If the database has been shut down {@code false} is returned immediately.\n      * @return the state of the database: {@code true} if it is available, otherwise {@code false}\n      */\n-    boolean isAvailable( long timeout );\n+    boolean isAvailable(long timeout);\n \n     /**\n      * Starts a new {@link Transaction transaction} and associates it with the current thread.\n@@ -70,10 +71,10 @@ public interface GraphDatabaseService\n      * inside your transaction to avoid potential blocking of write operations.\n      *\n      * @param timeout transaction timeout\n-     * @param unit time unit of timeout argument\n+     * @param unit    time unit of timeout argument\n      * @return a new transaction instance\n      */\n-    Transaction beginTx( long timeout, TimeUnit unit );\n+    Transaction beginTx(long timeout, TimeUnit unit);\n \n     /**\n      * Executes query in a separate transaction.\n@@ -82,46 +83,47 @@ public interface GraphDatabaseService\n      * @param query The query to execute\n      * @throws QueryExecutionException If the Query contains errors\n      */\n-    void executeTransactionally( String query ) throws QueryExecutionException;\n+    void executeTransactionally(String query) throws QueryExecutionException;\n \n     /**\n      * Executes query in a separate transaction.\n      * Capable to execute periodic commit queries.\n      *\n-     * @param query The query to execute\n+     * @param query      The query to execute\n      * @param parameters Parameters for the query\n      * @throws QueryExecutionException If the Query contains errors\n      */\n-    void executeTransactionally( String query, Map<String,Object> parameters ) throws QueryExecutionException;\n+    void executeTransactionally(String query, Map<String, Object> parameters) throws QueryExecutionException;\n \n     /**\n      * Executes query in a separate transaction and allow to query result to be consumed by provided {@link ResultTransformer}.\n      * Capable to execute periodic commit queries.\n      *\n-     * @param query The query to execute\n-     * @param parameters Parameters for the query\n+     * @param query             The query to execute\n+     * @param parameters        Parameters for the query\n      * @param resultTransformer Query results consumer\n      * @throws QueryExecutionException If the query contains errors\n      */\n-    <T> T executeTransactionally( String query, Map<String,Object> parameters, ResultTransformer<T> resultTransformer ) throws QueryExecutionException;\n+    <T> T executeTransactionally(String query, Map<String, Object> parameters, ResultTransformer<T> resultTransformer) throws QueryExecutionException;\n \n     /**\n      * Executes query in a separate transaction and allows query result to be consumed by provided {@link ResultTransformer}.\n      * If query will not gonna be able to complete within provided timeout time interval it will be terminated.\n-     *\n+     * <p>\n      * Capable to execute periodic commit queries.\n      *\n-     * @param query The query to execute\n-     * @param parameters Parameters for the query\n+     * @param query             The query to execute\n+     * @param parameters        Parameters for the query\n      * @param resultTransformer Query results consumer\n-     * @param timeout Maximum duration of underlying transaction\n+     * @param timeout           Maximum duration of underlying transaction\n      * @throws QueryExecutionException If the query contains errors\n      */\n-    <T> T executeTransactionally( String query, Map<String,Object> parameters, ResultTransformer<T> resultTransformer,\n-            Duration timeout ) throws QueryExecutionException;\n+    <T> T executeTransactionally(String query, Map<String, Object> parameters, ResultTransformer<T> resultTransformer,\n+                                 Duration timeout) throws QueryExecutionException;\n \n     /**\n      * Return name of underlying database\n+     *\n      * @return database name\n      */\n     String databaseName();\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
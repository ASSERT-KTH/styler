{
    "project_name": "neo4j-neo4j",
    "error_id": "1220",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "233",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "279",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "290",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "301",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1220/IndexChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1220/IndexChecker.java\nindex 768510d5099..414f15cdab1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1220/IndexChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1220/IndexChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import org.eclipse.collections.impl.map.mutable.primitive.IntObjectHashMap;\n@@ -60,7 +61,7 @@ public class IndexChecker implements Checker\n     static final int NUM_INDEXES_IN_CACHE = 5;\n \n     private static final int CHECKSUM_MASK = 0b0111_1111_1111_1111;\n-    private static final int IN_USE_MASK =   0b1000_0000_0000_0000;\n+    private static final int IN_USE_MASK = 0b1000_0000_0000_0000;\n     private static final int CHECKSUM_SIZE = 15;\n     private static final int IN_USE_BIT = 1;\n     private static final int TOTAL_SIZE = CHECKSUM_SIZE + IN_USE_BIT;\n@@ -74,43 +75,43 @@ public class IndexChecker implements Checker\n     private final ProgressListener scanProgress;\n     private final List<IndexDescriptor> indexes;\n \n-    IndexChecker( CheckerContext context, EntityType entityType )\n+    IndexChecker(CheckerContext context, EntityType entityType)\n     {\n         indexAccessors = context.indexAccessors;\n         this.context = context;\n         this.entityType = entityType;\n         this.reporter = context.reporter;\n         this.cacheAccess = context.cacheAccess;\n-        this.indexes = context.indexSizes.largeIndexes( entityType );\n-        long totalSize = indexes.stream().mapToLong( context.indexSizes::getEstimatedIndexSize ).sum();\n+        this.indexes = context.indexSizes.largeIndexes(entityType);\n+        long totalSize = indexes.stream().mapToLong(context.indexSizes::getEstimatedIndexSize).sum();\n         int rounds = (indexes.size() - 1) / NUM_INDEXES_IN_CACHE + 1;\n-        this.scanProgress = context.progressReporter( this, \"Node index checking\", rounds * context.neoStores.getNodeStore().getHighId() );\n+        this.scanProgress = context.progressReporter(this, \"Node index checking\", rounds * context.neoStores.getNodeStore().getHighId());\n         // The caching of indexes is generally so much quicker than other things and is based on estimates so dividing by 10\n         // makes the progress more even and any estimation flaws less visible.\n-        this.cacheProgress = context.progressReporter( this, \"Node index caching\", totalSize / 3 );\n+        this.cacheProgress = context.progressReporter(this, \"Node index caching\", totalSize / 3);\n     }\n \n     @Override\n-    public void check( LongRange nodeIdRange, boolean firstRange, boolean lastRange ) throws Exception\n+    public void check(LongRange nodeIdRange, boolean firstRange, boolean lastRange) throws Exception\n     {\n         // While more indexes\n         //   Scan through one or more indexes (as sequentially as possible) and cache the node ids + hash of the indexed value in one bit-set for each index\n         //   Then scan through node store, its labels and relevant properties and hash that value too --> match with the bit-set + hash.\n \n-        cacheAccess.setCacheSlotSizesAndClear( TOTAL_SIZE, TOTAL_SIZE, TOTAL_SIZE, TOTAL_SIZE, TOTAL_SIZE ); //can hold up to 5 indexes\n+        cacheAccess.setCacheSlotSizesAndClear(TOTAL_SIZE, TOTAL_SIZE, TOTAL_SIZE, TOTAL_SIZE, TOTAL_SIZE); //can hold up to 5 indexes\n         List<IndexContext> indexesToCheck = new ArrayList<>();\n-        try ( var indexChecker = context.pageCacheTracer.createPageCursorTracer( INDEX_CHECKER_TAG ) )\n+        try (var indexChecker = context.pageCacheTracer.createPageCursorTracer(INDEX_CHECKER_TAG))\n         {\n-            for ( int i = 0; i < indexes.size() && !context.isCancelled(); i++ )\n+            for (int i = 0; i < indexes.size() && !context.isCancelled(); i++)\n             {\n-                IndexContext index = new IndexContext( indexes.get( i ), i % NUM_INDEXES_IN_CACHE );\n-                indexesToCheck.add( index );\n-                cacheIndex( index, nodeIdRange, firstRange, indexChecker );\n+                IndexContext index = new IndexContext(indexes.get(i), i % NUM_INDEXES_IN_CACHE);\n+                indexesToCheck.add(index);\n+                cacheIndex(index, nodeIdRange, firstRange, indexChecker);\n                 boolean isLastIndex = i == indexes.size() - 1;\n                 boolean canFitMoreAndIsNotLast = !isLastIndex && index.cacheSlotOffset != NUM_INDEXES_IN_CACHE - 1;\n-                if ( !canFitMoreAndIsNotLast  && !context.isCancelled() )\n+                if (!canFitMoreAndIsNotLast && !context.isCancelled())\n                 {\n-                    checkVsEntities( indexesToCheck, nodeIdRange );\n+                    checkVsEntities(indexesToCheck, nodeIdRange);\n                     indexesToCheck = new ArrayList<>();\n                     cacheAccess.clearCache();\n                 }\n@@ -119,15 +120,15 @@ public class IndexChecker implements Checker\n     }\n \n     @Override\n-    public boolean shouldBeChecked( ConsistencyFlags flags )\n+    public boolean shouldBeChecked(ConsistencyFlags flags)\n     {\n         return flags.isCheckIndexes();\n     }\n \n-    private void cacheIndex( IndexContext index, LongRange nodeIdRange, boolean firstRange, PageCursorTracer cursorTracer ) throws Exception\n+    private void cacheIndex(IndexContext index, LongRange nodeIdRange, boolean firstRange, PageCursorTracer cursorTracer) throws Exception\n     {\n-        IndexAccessor accessor = indexAccessors.accessorFor( index.descriptor );\n-        IndexEntriesReader[] partitions = accessor.newAllIndexEntriesReader( context.execution.getNumberOfThreads(), cursorTracer );\n+        IndexAccessor accessor = indexAccessors.accessorFor(index.descriptor);\n+        IndexEntriesReader[] partitions = accessor.newAllIndexEntriesReader(context.execution.getNumberOfThreads(), cursorTracer);\n         try\n         {\n             Value[][] firstValues = new Value[partitions.length][];\n@@ -135,7 +136,7 @@ public class IndexChecker implements Checker\n             long[] firstEntityIds = new long[partitions.length];\n             long[] lastEntityIds = new long[partitions.length];\n             ThrowingRunnable[] workers = new ThrowingRunnable[partitions.length];\n-            for ( int i = 0; i < partitions.length; i++ )\n+            for (int i = 0; i < partitions.length; i++)\n             {\n                 IndexEntriesReader partition = partitions[i];\n                 int slot = i;\n@@ -145,45 +146,45 @@ public class IndexChecker implements Checker\n                     int progressPart = 0;\n                     ProgressListener localCacheProgress = cacheProgress.threadLocalReporter();\n                     var client = cacheAccess.client();\n-                    try ( var tracer = context.pageCacheTracer.createPageCursorTracer( CONSISTENCY_INDEX_CACHER_TAG ) )\n+                    try (var tracer = context.pageCacheTracer.createPageCursorTracer(CONSISTENCY_INDEX_CACHER_TAG))\n                     {\n-                        while ( partition.hasNext() && !context.isCancelled() )\n+                        while (partition.hasNext() && !context.isCancelled())\n                         {\n                             long entityId = partition.next();\n-                            if ( !nodeIdRange.isWithinRangeExclusiveTo( entityId ) )\n+                            if (!nodeIdRange.isWithinRangeExclusiveTo(entityId))\n                             {\n-                                if ( firstRange && entityId >= context.highNodeId )\n+                                if (firstRange && entityId >= context.highNodeId)\n                                 {\n-                                    reporter.forIndexEntry( new IndexEntry( index.descriptor, context.tokenNameLookup, entityId ) )\n-                                            .nodeNotInUse( context.recordLoader.node( entityId, tracer ) );\n+                                    reporter.forIndexEntry(new IndexEntry(index.descriptor, context.tokenNameLookup, entityId))\n+                                      .nodeNotInUse(context.recordLoader.node(entityId, tracer));\n                                 }\n                                 continue;\n                             }\n \n                             int data = IN_USE_MASK;\n-                            if ( index.hasValues )\n+                            if (index.hasValues)\n                             {\n                                 Value[] indexedValues = partition.values();\n-                                int checksum = checksum( indexedValues );\n+                                int checksum = checksum(indexedValues);\n                                 assert checksum <= CHECKSUM_MASK;\n                                 data |= checksum;\n \n                                 // Also take the opportunity to verify uniqueness, if the index is a uniqueness index\n-                                if ( index.descriptor.isUnique() )\n+                                if (index.descriptor.isUnique())\n                                 {\n-                                    if ( firstValues[slot] == null )\n+                                    if (firstValues[slot] == null)\n                                     {\n                                         firstValues[slot] = indexedValues;\n                                         firstEntityIds[slot] = entityId;\n                                     }\n-                                    if ( lastValues[slot] != null )\n+                                    if (lastValues[slot] != null)\n                                     {\n-                                        if ( lastChecksum == checksum )\n+                                        if (lastChecksum == checksum)\n                                         {\n-                                            if ( Arrays.equals( lastValues[slot], indexedValues ) )\n+                                            if (Arrays.equals(lastValues[slot], indexedValues))\n                                             {\n-                                                reporter.forNode( context.recordLoader.node( entityId, tracer ) )\n-                                                        .uniqueIndexNotUnique( index.descriptor, indexedValues, lastEntityIds[slot] );\n+                                                reporter.forNode(context.recordLoader.node(entityId, tracer))\n+                                                  .uniqueIndexNotUnique(index.descriptor, indexedValues, lastEntityIds[slot]);\n                                             }\n                                         }\n                                     }\n@@ -192,10 +193,10 @@ public class IndexChecker implements Checker\n                                     lastEntityIds[slot] = entityId;\n                                 }\n                             }\n-                            client.putToCacheSingle( entityId, index.cacheSlotOffset, data );\n-                            if ( ++progressPart == INDEX_CACHING_PROGRESS_FACTOR )\n+                            client.putToCacheSingle(entityId, index.cacheSlotOffset, data);\n+                            if (++progressPart == INDEX_CACHING_PROGRESS_FACTOR)\n                             {\n-                                localCacheProgress.add( 1 );\n+                                localCacheProgress.add(1);\n                                 progressPart = 0;\n                             }\n                         }\n@@ -205,113 +206,109 @@ public class IndexChecker implements Checker\n             }\n \n             // Run the workers that cache the index contents and that do partition-local uniqueness checking, if index is unique\n-            context.execution.run( \"Cache index\", workers );\n+            context.execution.run(\"Cache index\", workers);\n \n             // Then, also if the index is unique then do uniqueness checking of the seams between the partitions\n-            if ( index.descriptor.isUnique() && !context.isCancelled() )\n+            if (index.descriptor.isUnique() && !context.isCancelled())\n             {\n-                for ( int i = 0; i < partitions.length - 1; i++ )\n+                for (int i = 0; i < partitions.length - 1; i++)\n                 {\n                     Value[] left = lastValues[i];\n                     Value[] right = firstValues[i + 1];\n-                    if ( Arrays.equals( left, right ) )\n+                    if (Arrays.equals(left, right))\n                     {\n                         long leftEntityId = lastEntityIds[i];\n                         long rightEntityId = firstEntityIds[i + 1];\n-                        reporter.forNode( context.recordLoader.node( leftEntityId, cursorTracer ) ).uniqueIndexNotUnique( index.descriptor, left,\n-                                rightEntityId );\n+                        reporter.forNode(context.recordLoader.node(leftEntityId, cursorTracer)).uniqueIndexNotUnique(index.descriptor, left,\n+                          rightEntityId);\n                     }\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n-            IOUtils.closeAll( partitions );\n+            IOUtils.closeAll(partitions);\n         }\n     }\n \n-    private void checkVsEntities( List<IndexContext> indexes, LongRange nodeIdRange ) throws Exception\n+    private void checkVsEntities(List<IndexContext> indexes, LongRange nodeIdRange) throws Exception\n     {\n         ParallelExecution execution = context.execution;\n-        execution.run( getClass().getSimpleName() + \"-checkVsEntities\",\n-                execution.partition( nodeIdRange, ( from, to, last ) -> () -> checkVsEntities( indexes, from, to ) ) );\n+        execution.run(getClass().getSimpleName() + \"-checkVsEntities\",\n+          execution.partition(nodeIdRange, (from, to, last) -> () -> checkVsEntities(indexes, from, to)));\n     }\n \n-    private void checkVsEntities( List<IndexContext> indexes, long fromEntityId, long toEntityId )\n+    private void checkVsEntities(List<IndexContext> indexes, long fromEntityId, long toEntityId)\n     {\n         // This is one thread\n         CheckerContext noReportingContext = context.withoutReporting();\n-        try ( RecordStorageReader reader = new RecordStorageReader( context.neoStores );\n-              var cursorTracer = context.pageCacheTracer.createPageCursorTracer( CONSISTENCY_INDEX_ENTITY_CHECK_TAG );\n-              RecordNodeCursor nodeCursor = reader.allocateNodeCursor( cursorTracer );\n-              RecordReader<DynamicRecord> labelReader = new RecordReader<>( context.neoStores.getNodeStore().getDynamicLabelStore(), cursorTracer );\n-              SafePropertyChainReader propertyReader = new SafePropertyChainReader( noReportingContext, cursorTracer ) )\n+        try (RecordStorageReader reader = new RecordStorageReader(context.neoStores);\n+             var cursorTracer = context.pageCacheTracer.createPageCursorTracer(CONSISTENCY_INDEX_ENTITY_CHECK_TAG);\n+             RecordNodeCursor nodeCursor = reader.allocateNodeCursor(cursorTracer);\n+             RecordReader<DynamicRecord> labelReader = new RecordReader<>(context.neoStores.getNodeStore().getDynamicLabelStore(), cursorTracer);\n+             SafePropertyChainReader propertyReader = new SafePropertyChainReader(noReportingContext, cursorTracer))\n         {\n             ProgressListener localScanProgress = scanProgress.threadLocalReporter();\n             IntObjectHashMap<Value> allValues = new IntObjectHashMap<>();\n             var client = cacheAccess.client();\n             int numberOfIndexes = indexes.size();\n-            for ( long entityId = fromEntityId; entityId < toEntityId && !context.isCancelled(); entityId++ )\n+            for (long entityId = fromEntityId; entityId < toEntityId && !context.isCancelled(); entityId++)\n             {\n-                nodeCursor.single( entityId );\n-                if ( nodeCursor.next() )\n+                nodeCursor.single(entityId);\n+                if (nodeCursor.next())\n                 {\n-                    long[] entityTokens = safeGetNodeLabels( noReportingContext, nodeCursor.getId(), nodeCursor.getLabelField(), labelReader, cursorTracer );\n-                    lightClear( allValues );\n+                    long[] entityTokens = safeGetNodeLabels(noReportingContext, nodeCursor.getId(), nodeCursor.getLabelField(), labelReader, cursorTracer);\n+                    lightClear(allValues);\n                     boolean propertyChainRead =\n-                            entityTokens != null && propertyReader.read( allValues, nodeCursor, noReportingContext.reporter::forNode, cursorTracer );\n-                    if ( propertyChainRead )\n+                      entityTokens != null && propertyReader.read(allValues, nodeCursor, noReportingContext.reporter::forNode, cursorTracer);\n+                    if (propertyChainRead)\n                     {\n-                        for ( int i = 0; i < numberOfIndexes; i++ )\n+                        for (int i = 0; i < numberOfIndexes; i++)\n                         {\n-                            IndexContext index = indexes.get( i );\n+                            IndexContext index = indexes.get(i);\n                             IndexDescriptor descriptor = index.descriptor;\n-                            Value[] values = RecordLoading.entityIntersectionWithSchema( entityTokens, allValues, descriptor.schema() );\n-                            long cachedValue = client.getFromCache( entityId, i );\n-                            boolean nodeIsInIndex = (cachedValue & IN_USE_MASK ) != 0;\n-                            if ( values != null )\n+                            Value[] values = RecordLoading.entityIntersectionWithSchema(entityTokens, allValues, descriptor.schema());\n+                            long cachedValue = client.getFromCache(entityId, i);\n+                            boolean nodeIsInIndex = (cachedValue & IN_USE_MASK) != 0;\n+                            if (values != null)\n                             {\n                                 // This node should really be in the index, is it?\n-                                if ( !nodeIsInIndex )\n+                                if (!nodeIsInIndex)\n                                 {\n                                     // It wasn't, report it\n-                                    getReporter( nodeCursor ).notIndexed( descriptor, Values.asObjects( values ) );\n-                                }\n-                                else if ( index.hasValues )\n+                                    getReporter(nodeCursor).notIndexed(descriptor, Values.asObjects(values));\n+                                } else if (index.hasValues)\n                                 {\n                                     int cachedChecksum = (int) cachedValue & CHECKSUM_MASK;\n-                                    int actualChecksum = checksum( values );\n-                                    if ( cachedChecksum != actualChecksum )\n+                                    int actualChecksum = checksum(values);\n+                                    if (cachedChecksum != actualChecksum)\n                                     {\n-                                        getReporter( nodeCursor ).notIndexed( descriptor, Values.asObjects( values ) );\n+                                        getReporter(nodeCursor).notIndexed(descriptor, Values.asObjects(values));\n                                     }\n                                 }\n-                            }\n-                            else\n+                            } else\n                             {\n-                                if ( nodeIsInIndex )\n+                                if (nodeIsInIndex)\n                                 {\n-                                    reporter.forIndexEntry( new IndexEntry( descriptor, context.tokenNameLookup, entityId ) ).nodeNotInUse(\n-                                            context.recordLoader.node( entityId, cursorTracer ) );\n+                                    reporter.forIndexEntry(new IndexEntry(descriptor, context.tokenNameLookup, entityId)).nodeNotInUse(\n+                                      context.recordLoader.node(entityId, cursorTracer));\n                                 }\n                             }\n                         }\n                     } // else this would be reported elsewhere\n-                }\n-                else\n+                } else\n                 {\n                     // This node shouldn't be in any index\n-                    for ( int i = 0; i < numberOfIndexes; i++ )\n+                    for (int i = 0; i < numberOfIndexes; i++)\n                     {\n-                        boolean isInIndex = (client.getFromCache( entityId, i ) & IN_USE_MASK) != 0;\n-                        if ( isInIndex )\n+                        boolean isInIndex = (client.getFromCache(entityId, i) & IN_USE_MASK) != 0;\n+                        if (isInIndex)\n                         {\n-                            reporter.forIndexEntry( new IndexEntry( indexes.get( i ).descriptor, context.tokenNameLookup, entityId ) ).nodeNotInUse(\n-                                    context.recordLoader.node( entityId, cursorTracer ) );\n+                            reporter.forIndexEntry(new IndexEntry(indexes.get(i).descriptor, context.tokenNameLookup, entityId)).nodeNotInUse(\n+                              context.recordLoader.node(entityId, cursorTracer));\n                         }\n                     }\n                 }\n-                localScanProgress.add( 1 );\n+                localScanProgress.add(1);\n             }\n             localScanProgress.done();\n         }\n@@ -320,18 +317,18 @@ public class IndexChecker implements Checker\n     @Override\n     public String toString()\n     {\n-        return String.format( \"%s[entityType:%s,indexesToCheck:%d]\", getClass().getSimpleName(), entityType, indexes.size() );\n+        return String.format(\"%s[entityType:%s,indexesToCheck:%d]\", getClass().getSimpleName(), entityType, indexes.size());\n     }\n \n     /**\n      * @return a 15-bit checksum of the values.\n      */\n-    private static int checksum( Value[] values )\n+    private static int checksum(Value[] values)\n     {\n         int checksum = 0;\n-        if ( values != null )\n+        if (values != null)\n         {\n-            for ( Value value : values )\n+            for (Value value : values)\n             {\n                 checksum ^= value.hashCode();\n             }\n@@ -340,13 +337,13 @@ public class IndexChecker implements Checker\n         return twoByteChecksum & CHECKSUM_MASK;\n     }\n \n-    private ConsistencyReport.PrimitiveConsistencyReport getReporter( PrimitiveRecord cursor )\n+    private ConsistencyReport.PrimitiveConsistencyReport getReporter(PrimitiveRecord cursor)\n     {\n-        if ( EntityType.NODE.equals( entityType ) )\n+        if (EntityType.NODE.equals(entityType))\n         {\n-            return reporter.forNode( (NodeRecord) cursor );\n+            return reporter.forNode((NodeRecord) cursor);\n         }\n-        return reporter.forRelationship( (RelationshipRecord) cursor );\n+        return reporter.forRelationship((RelationshipRecord) cursor);\n     }\n \n     private static class IndexContext\n@@ -355,11 +352,11 @@ public class IndexChecker implements Checker\n         final int cacheSlotOffset;\n         final boolean hasValues;\n \n-        IndexContext( IndexDescriptor descriptor, int cacheSlotOffset )\n+        IndexContext(IndexDescriptor descriptor, int cacheSlotOffset)\n         {\n             this.descriptor = descriptor;\n             this.cacheSlotOffset = cacheSlotOffset;\n-            this.hasValues = IndexSizes.hasValues( descriptor );\n+            this.hasValues = IndexSizes.hasValues(descriptor);\n         }\n     }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
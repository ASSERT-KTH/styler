{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1858",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1858/BoltConnectorValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1858/BoltConnectorValidator.java\nindex 1114f37ea3b..f06db994111 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1858/BoltConnectorValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1858/BoltConnectorValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration;\n \n import java.util.Map;\n@@ -40,82 +41,82 @@ import static org.neo4j.kernel.configuration.Settings.setting;\n \n public class BoltConnectorValidator extends ConnectorValidator\n {\n-    public BoltConnectorValidator()\n-    {\n-        super( BOLT );\n-    }\n+  public BoltConnectorValidator()\n+  {\n+    super(BOLT);\n+  }\n \n-    @Override\n-    @Nonnull\n-    protected Optional<Setting<Object>> getSettingFor( @Nonnull String settingName, @Nonnull Map<String,String> params )\n-    {\n-        // owns has already verified that 'type' is correct and that this split is possible\n-        String[] parts = settingName.split( \"\\\\.\" );\n-        final String name = parts[2];\n-        final String subsetting = parts[3];\n+  @Override\n+  @Nonnull\n+  protected Optional<Setting<Object>> getSettingFor(@Nonnull String settingName, @Nonnull Map<String, String> params)\n+  {\n+    // owns has already verified that 'type' is correct and that this split is possible\n+    String[] parts = settingName.split(\"\\\\.\");\n+    final String name = parts[2];\n+    final String subsetting = parts[3];\n \n-        BaseSetting setting;\n+    BaseSetting setting;\n \n-        switch ( subsetting )\n-        {\n-        case \"enabled\":\n-            setting = (BaseSetting) setting( settingName, BOOLEAN, \"false\" );\n-            setting.setDescription( \"Enable this connector.\" );\n-            break;\n-        case \"type\":\n-            setting =\n-                    (BaseSetting) setting( settingName, options( Connector.ConnectorType.class ), NO_DEFAULT );\n-            setting.setDeprecated( true );\n-            setting.setDescription( \"Connector type. This setting is deprecated and its value will instead be \" +\n-                    \"inferred from the name of the connector.\" );\n-            break;\n-        case \"tls_level\":\n-            setting = (BaseSetting) setting( settingName, options( BoltConnector.EncryptionLevel.class ),\n-                    OPTIONAL.name() );\n-            setting.setDescription( \"Encryption level to require this connector to use.\" );\n-            break;\n-        case \"address\":\n-            setting = listenAddress( settingName, 7687 );\n-            setting.setDeprecated( true );\n-            setting.setReplacement( \"dbms.connector.\" + name + \".listen_address\" );\n-            setting.setDescription( \"Address the connector should bind to. Deprecated and replaced by \"\n-                    + setting.replacement().get() + \".\" );\n-            break;\n-        case \"listen_address\":\n-            setting = listenAddress( settingName, 7687 );\n-            setting.setDescription( \"Address the connector should bind to.\" );\n-            break;\n-        case \"advertised_address\":\n-            setting = advertisedAddress( settingName,\n-                    listenAddress( settingName, 7687 ) );\n-            setting.setDescription( \"Advertised address for this connector.\" );\n-            break;\n-        case \"thread_pool_min_size\":\n-            setting = (BaseSetting) setting( settingName, INTEGER, NO_DEFAULT );\n-            setting.setDescription( \"The number of threads to keep in the thread pool bound to this connector, even if they are idle.\" );\n-            break;\n-        case \"thread_pool_max_size\":\n-            setting = (BaseSetting) setting( settingName, INTEGER, NO_DEFAULT );\n-            setting.setDescription( \"The maximum number of threads allowed in the thread pool bound to this connector.\" );\n-            break;\n-        case \"thread_pool_keep_alive\":\n-            setting = (BaseSetting) setting( settingName, DURATION, NO_DEFAULT );\n-            setting.setDescription( \"The maximum time an idle thread in the thread pool bound to this connector will wait for new tasks.\" );\n-            break;\n-        case \"unsupported_thread_pool_queue_size\":\n-            setting = (BaseSetting) setting( settingName, INTEGER, NO_DEFAULT );\n-            setting.setDescription( \"The queue size of the thread pool bound to this connector (-1 for unbounded, 0 for direct handoff, > 0 for bounded)\" );\n-            break;\n-        default:\n-            return Optional.empty();\n-        }\n+    switch (subsetting)\n+    {\n+      case \"enabled\":\n+        setting = (BaseSetting) setting(settingName, BOOLEAN, \"false\");\n+        setting.setDescription(\"Enable this connector.\");\n+        break;\n+      case \"type\":\n+        setting =\n+            (BaseSetting) setting(settingName, options(Connector.ConnectorType.class), NO_DEFAULT);\n+        setting.setDeprecated(true);\n+        setting.setDescription(\"Connector type. This setting is deprecated and its value will instead be \" +\n+            \"inferred from the name of the connector.\");\n+        break;\n+      case \"tls_level\":\n+        setting = (BaseSetting) setting(settingName, options(BoltConnector.EncryptionLevel.class),\n+            OPTIONAL.name());\n+        setting.setDescription(\"Encryption level to require this connector to use.\");\n+        break;\n+      case \"address\":\n+        setting = listenAddress(settingName, 7687);\n+        setting.setDeprecated(true);\n+        setting.setReplacement(\"dbms.connector.\" + name + \".listen_address\");\n+        setting.setDescription(\"Address the connector should bind to. Deprecated and replaced by \"\n+            + setting.replacement().get() + \".\");\n+        break;\n+      case \"listen_address\":\n+        setting = listenAddress(settingName, 7687);\n+        setting.setDescription(\"Address the connector should bind to.\");\n+        break;\n+      case \"advertised_address\":\n+        setting = advertisedAddress(settingName,\n+            listenAddress(settingName, 7687));\n+        setting.setDescription(\"Advertised address for this connector.\");\n+        break;\n+      case \"thread_pool_min_size\":\n+        setting = (BaseSetting) setting(settingName, INTEGER, NO_DEFAULT);\n+        setting.setDescription(\"The number of threads to keep in the thread pool bound to this connector, even if they are idle.\");\n+        break;\n+      case \"thread_pool_max_size\":\n+        setting = (BaseSetting) setting(settingName, INTEGER, NO_DEFAULT);\n+        setting.setDescription(\"The maximum number of threads allowed in the thread pool bound to this connector.\");\n+        break;\n+      case \"thread_pool_keep_alive\":\n+        setting = (BaseSetting) setting(settingName, DURATION, NO_DEFAULT);\n+        setting.setDescription(\"The maximum time an idle thread in the thread pool bound to this connector will wait for new tasks.\");\n+        break;\n+      case \"unsupported_thread_pool_queue_size\":\n+        setting = (BaseSetting) setting(settingName, INTEGER, NO_DEFAULT);\n+        setting.setDescription(\"The queue size of the thread pool bound to this connector (-1 for unbounded, 0 for direct handoff, > 0 for bounded)\");\n+        break;\n+      default:\n+        return Optional.empty();\n+    }\n \n-        // If not deprecated for other reasons\n-        if ( isDeprecatedConnectorName( name ) && !setting.deprecated() )\n-        {\n-            setting.setDeprecated( true );\n-            setting.setReplacement( format( \"%s.%s.%s.%s\", parts[0], parts[1], \"bolt\", subsetting ) );\n-        }\n-        return Optional.of( setting );\n+    // If not deprecated for other reasons\n+    if (isDeprecatedConnectorName(name) && !setting.deprecated())\n+    {\n+      setting.setDeprecated(true);\n+      setting.setReplacement(format(\"%s.%s.%s.%s\", parts[0], parts[1], \"bolt\", subsetting));\n     }\n+    return Optional.of(setting);\n+  }\n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1858/BoltConnectorValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1858/BoltConnectorValidator.java\nindex 1114f37ea3b..5ec773e7d47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1858/BoltConnectorValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1858/BoltConnectorValidator.java\n@@ -55,32 +55,27 @@ public class BoltConnectorValidator extends ConnectorValidator\n         final String subsetting = parts[3];\n \n         BaseSetting setting;\n-\n-        switch ( subsetting )\n+switch ( subsetting )\n         {\n         case \"enabled\":\n             setting = (BaseSetting) setting( settingName, BOOLEAN, \"false\" );\n             setting.setDescription( \"Enable this connector.\" );\n             break;\n         case \"type\":\n-            setting =\n-                    (BaseSetting) setting( settingName, options( Connector.ConnectorType.class ), NO_DEFAULT );\n-            setting.setDeprecated( true );\n-            setting.setDescription( \"Connector type. This setting is deprecated and its value will instead be \" +\n-                    \"inferred from the name of the connector.\" );\n-            break;\n+            setting = (BaseSetting) setting( settingName, options( Connector.ConnectorType.class ), NO_DEFAULT );\n+setting.setDeprecated( true );\n+            setting.setDescription( \"Connector type. This setting is deprecated and its value will instead be \" + \"inferred from the name of the connector.\" );\n+break;\n         case \"tls_level\":\n-            setting = (BaseSetting) setting( settingName, options( BoltConnector.EncryptionLevel.class ),\n-                    OPTIONAL.name() );\n-            setting.setDescription( \"Encryption level to require this connector to use.\" );\n+            setting = (BaseSetting) setting( settingName, options( BoltConnector.EncryptionLevel.class ), OPTIONAL.name() );\n+setting.setDescription( \"Encryption level to require this connector to use.\" );\n             break;\n         case \"address\":\n             setting = listenAddress( settingName, 7687 );\n             setting.setDeprecated( true );\n             setting.setReplacement( \"dbms.connector.\" + name + \".listen_address\" );\n-            setting.setDescription( \"Address the connector should bind to. Deprecated and replaced by \"\n-                    + setting.replacement().get() + \".\" );\n-            break;\n+            setting.setDescription( \"Address the connector should bind to. Deprecated and replaced by \" + setting.replacement().get() + \".\" );\n+break;\n         case \"listen_address\":\n             setting = listenAddress( settingName, 7687 );\n             setting.setDescription( \"Address the connector should bind to.\" );\n@@ -88,7 +83,7 @@ public class BoltConnectorValidator extends ConnectorValidator\n         case \"advertised_address\":\n             setting = advertisedAddress( settingName,\n                     listenAddress( settingName, 7687 ) );\n-            setting.setDescription( \"Advertised address for this connector.\" );\n+setting.setDescription( \"Advertised address for this connector.\" );\n             break;\n         case \"thread_pool_min_size\":\n             setting = (BaseSetting) setting( settingName, INTEGER, NO_DEFAULT );\n@@ -116,6 +111,7 @@ public class BoltConnectorValidator extends ConnectorValidator\n             setting.setDeprecated( true );\n             setting.setReplacement( format( \"%s.%s.%s.%s\", parts[0], parts[1], \"bolt\", subsetting ) );\n         }\n-        return Optional.of( setting );\n+\n+return Optional.of( setting );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
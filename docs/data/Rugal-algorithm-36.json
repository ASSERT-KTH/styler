{
    "project_name": "Rugal-algorithm",
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage ga.rugal.leetcode.wordsearch;\n\n/**\n * https://leetcode.com/problems/word-search/",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/36/Solution.java\nindex 8ec6fbe0ef3..9c09b2dcfc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/36/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.wordsearch;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/36/Solution.java\nindex 8ec6fbe0ef3..6decf9c3662 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/36/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.wordsearch;\r\n \r\n /**\r\n@@ -26,9 +27,9 @@ public class Solution {\n \r\n   private String word;\r\n \r\n-  private static final int[] X = new int[]{0, 1, 0, -1};\r\n+  private static final int[] X = new int[] {0, 1, 0, -1};\r\n \r\n-  private static final int[] Y = new int[]{1, 0, -1, 0};\r\n+  private static final int[] Y = new int[] {1, 0, -1, 0};\r\n \r\n   public boolean exist(final char[][] board, final String word) {\r\n     this.board = board;\r\n@@ -45,8 +46,8 @@ public class Solution {\n \r\n   private boolean isValid(final int row, final int column, final boolean[][] visit) {\r\n     return row >= 0 && row < this.board.length\r\n-           && column >= 0 && column < this.board[0].length\r\n-           && !visit[row][column];\r\n+      && column >= 0 && column < this.board[0].length\r\n+      && !visit[row][column];\r\n   }\r\n \r\n   private boolean dfs(final int row, final int column, final int index, final boolean[][] visited) {\r\n@@ -59,7 +60,7 @@ public class Solution {\n     visited[row][column] = true;\r\n     for (int i = 0; i < X.length; ++i) {\r\n       if (this.isValid(row + X[i], column + Y[i], visited)\r\n-          && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\r\n+        && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\r\n         return true;\r\n       }\r\n     }\r\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/36/Solution.java\nindex 8ec6fbe0ef3..3b822bd3fca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/36/Solution.java\n@@ -12,8 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n- */\r\n-package ga.rugal.leetcode.wordsearch;\r\n+ */package ga.rugal.leetcode.wordsearch;\r\n \r\n /**\r\n  * https://leetcode.com/problems/word-search/\r\n@@ -58,13 +57,12 @@ public class Solution {\n     }\r\n     visited[row][column] = true;\r\n     for (int i = 0; i < X.length; ++i) {\r\n-      if (this.isValid(row + X[i], column + Y[i], visited)\r\n-          && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\r\n-        return true;\r\n+      if (this.isValid(row + X[i], column + Y[i], visited) && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n+  return true;\r\n       }\r\n     }\r\n     visited[row][column] = false;\r\n \r\n     return false;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/36/Solution.java\nindex 8ec6fbe0ef3..760eba633e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/36/Solution.java\n@@ -19,52 +19,51 @@ package ga.rugal.leetcode.wordsearch;\n  * https://leetcode.com/problems/word-search/\r\n  *\r\n  * @author rugal\r\n- */\r\n-public class Solution {\r\n-\r\n-  private char[][] board;\r\n-\r\n-  private String word;\r\n-\r\n-  private static final int[] X = new int[]{0, 1, 0, -1};\r\n-\r\n-  private static final int[] Y = new int[]{1, 0, -1, 0};\r\n-\r\n-  public boolean exist(final char[][] board, final String word) {\r\n-    this.board = board;\r\n-    this.word = word;\r\n-    for (int i = 0; i < this.board.length; ++i) {\r\n-      for (int j = 0; j < this.board[0].length; ++j) {\r\n-        if (this.dfs(i, j, 0, new boolean[this.board.length][this.board[0].length])) {\r\n-          return true;\r\n-        }\r\n-      }\r\n-    }\r\n-    return false;\r\n-  }\r\n-\r\n-  private boolean isValid(final int row, final int column, final boolean[][] visit) {\r\n-    return row >= 0 && row < this.board.length\r\n-           && column >= 0 && column < this.board[0].length\r\n-           && !visit[row][column];\r\n-  }\r\n-\r\n-  private boolean dfs(final int row, final int column, final int index, final boolean[][] visited) {\r\n-    if (this.word.charAt(index) != this.board[row][column]) {\r\n-      return false;\r\n-    }\r\n-    if (index == this.word.length() - 1) {\r\n-      return true;\r\n-    }\r\n-    visited[row][column] = true;\r\n-    for (int i = 0; i < X.length; ++i) {\r\n-      if (this.isValid(row + X[i], column + Y[i], visited)\r\n-          && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\r\n-        return true;\r\n-      }\r\n-    }\r\n-    visited[row][column] = false;\r\n-\r\n-    return false;\r\n-  }\r\n-}\r\n+ */\n+\n+\n+public class Solution {\n+\n+  private char[][] board;\n+\n+  private String word;\n+\n+  private static final int[] X = new int[]{0, 1, 0, -1};\n+\n+  private static final int[] Y = new int[]{1, 0, -1, 0};\n+\n+  public boolean exist(final char[][] board, final String word) {\n+    this.board = board;\n+    this.word = word;\n+    for (int i = 0; i < this.board.length; ++i) {\n+      for (int j = 0; j < this.board[0].length; ++j) {\n+        if (this.dfs(i, j, 0, new boolean[this.board.length][this.board[0].length])) {\n+          return true;\n+        }\n+      }\n+    }\n+    return false;\n+  }\n+\n+  private boolean isValid(final int row, final int column, final boolean[][] visit) {\n+    return row >= 0 && row < this.board.length\n+           && column >= 0 && column < this.board[0].length && !visit[row][column];\n+  }\n+\n+  private boolean dfs(final int row, final int column, final int index, final boolean[][] visited) {\n+    if (this.word.charAt(index) != this.board[row][column]) {\n+      return false;\n+    }\n+    if (index == this.word.length() - 1) {\n+      return true;\n+    }\n+    visited[row][column] = true;\n+    for (int i = 0; i < X.length; ++i) {\n+      if (this.isValid(row + X[i], column + Y[i], visited) && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n+        return true;\n+      }\n+    }\n+    visited[row][column] = false;\n+    return false;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/36/Solution.java\nindex 8ec6fbe0ef3..9c09b2dcfc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/36/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.wordsearch;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/36/Solution.java\nindex 8ec6fbe0ef3..9c09b2dcfc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/36/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/36/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.wordsearch;\r\n \r\n /**\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
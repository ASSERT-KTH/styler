{
    "project_name": "graphfoundation-ongdb",
    "error_id": "404",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/404/TypicallyConnectToRandomReadReplicaStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/404/TypicallyConnectToRandomReadReplicaStrategy.java\nindex ec5c9493bba..a2b43bdb579 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/404/TypicallyConnectToRandomReadReplicaStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/404/TypicallyConnectToRandomReadReplicaStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.upstream.strategies;\n \n import java.util.Optional;\n@@ -25,65 +26,64 @@ import org.neo4j.causalclustering.identity.MemberId;\n import org.neo4j.causalclustering.upstream.UpstreamDatabaseSelectionStrategy;\n import org.neo4j.helpers.Service;\n \n-@Service.Implementation( UpstreamDatabaseSelectionStrategy.class )\n+@Service.Implementation(UpstreamDatabaseSelectionStrategy.class)\n public class TypicallyConnectToRandomReadReplicaStrategy extends UpstreamDatabaseSelectionStrategy\n {\n-    public static final String IDENTITY = \"typically-connect-to-random-read-replica\";\n-    private final ModuloCounter counter;\n+  public static final String IDENTITY = \"typically-connect-to-random-read-replica\";\n+  private final ModuloCounter counter;\n \n-    public TypicallyConnectToRandomReadReplicaStrategy()\n-    {\n-        this( 10 );\n-    }\n+  public TypicallyConnectToRandomReadReplicaStrategy()\n+  {\n+    this(10);\n+  }\n \n-    public TypicallyConnectToRandomReadReplicaStrategy( int connectToCoreInterval )\n-    {\n-        super( IDENTITY );\n-        this.counter = new ModuloCounter( connectToCoreInterval );\n-    }\n+  public TypicallyConnectToRandomReadReplicaStrategy(int connectToCoreInterval)\n+  {\n+    super(IDENTITY);\n+    this.counter = new ModuloCounter(connectToCoreInterval);\n+  }\n \n-    @Override\n-    public Optional<MemberId> upstreamDatabase()\n+  @Override\n+  public Optional<MemberId> upstreamDatabase()\n+  {\n+    if (counter.shouldReturnCoreMemberId())\n     {\n-        if ( counter.shouldReturnCoreMemberId() )\n-        {\n-            return getCoreMemberId();\n-        }\n-        else\n-        {\n-            Optional<MemberId> memberId = getReadReplicaMemberId();\n-            if ( !memberId.isPresent() )\n-            {\n-                memberId = getCoreMemberId();\n-            }\n-            return memberId;\n-        }\n-    }\n-\n-    private Optional<MemberId> getReadReplicaMemberId()\n+      return getCoreMemberId();\n+    } else\n     {\n-        return topologyService.localReadReplicas().randomReadReplicaMemberId();\n+      Optional<MemberId> memberId = getReadReplicaMemberId();\n+      if (!memberId.isPresent())\n+      {\n+        memberId = getCoreMemberId();\n+      }\n+      return memberId;\n     }\n+  }\n+\n+  private Optional<MemberId> getReadReplicaMemberId()\n+  {\n+    return topologyService.localReadReplicas().randomReadReplicaMemberId();\n+  }\n+\n+  private Optional<MemberId> getCoreMemberId()\n+  {\n+    return topologyService.localCoreServers().randomCoreMemberId();\n+  }\n \n-    private Optional<MemberId> getCoreMemberId()\n+  private static class ModuloCounter\n+  {\n+    private final int modulo;\n+    private int counter;\n+\n+    ModuloCounter(int modulo)\n     {\n-        return topologyService.localCoreServers().randomCoreMemberId();\n+      this.modulo = modulo;\n     }\n \n-    private static class ModuloCounter\n+    boolean shouldReturnCoreMemberId()\n     {\n-        private final int modulo;\n-        private int counter;\n-\n-        ModuloCounter( int modulo )\n-        {\n-            this.modulo = modulo;\n-        }\n-\n-        boolean shouldReturnCoreMemberId()\n-        {\n-            counter = (counter + 1) % modulo;\n-            return counter == 0;\n-        }\n+      counter = (counter + 1) % modulo;\n+      return counter == 0;\n     }\n+  }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/404/TypicallyConnectToRandomReadReplicaStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/404/TypicallyConnectToRandomReadReplicaStrategy.java\nindex ec5c9493bba..cae1750cead 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/404/TypicallyConnectToRandomReadReplicaStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/404/TypicallyConnectToRandomReadReplicaStrategy.java\n@@ -56,7 +56,8 @@ public class TypicallyConnectToRandomReadReplicaStrategy extends UpstreamDatabas\n             {\n                 memberId = getCoreMemberId();\n             }\n-            return memberId;\n+\n+return memberId;\n         }\n     }\n \n@@ -82,8 +83,8 @@ public class TypicallyConnectToRandomReadReplicaStrategy extends UpstreamDatabas\n \n         boolean shouldReturnCoreMemberId()\n         {\n-            counter = (counter + 1) % modulo;\n+            counter = (counter + 1 ) % modulo;\n             return counter == 0;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
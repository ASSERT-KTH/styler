{
    "project_name": "Internet2-grouper",
    "error_id": "67",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * style license a copy of which has been included with this distribution in\n * the LICENSE.txt file.\n * \n * Created on 24. Julyl 2004 by Joe Walnes\n */\npackage edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.extended;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/67/LocaleConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/67/LocaleConverter.java\nindex 92ad8256685..a4e4c776373 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/67/LocaleConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/67/LocaleConverter.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -21,9 +21,10 @@\n  * The software in this package is published under the terms of the BSD\r\n  * style license a copy of which has been included with this distribution in\r\n  * the LICENSE.txt file.\r\n- * \r\n+ *\r\n  * Created on 24. Julyl 2004 by Joe Walnes\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.extended;\r\n \r\n import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;\r\n@@ -38,36 +39,36 @@ import java.util.Locale;\n  */\r\n public class LocaleConverter extends AbstractSingleValueConverter {\r\n \r\n-    public boolean canConvert(Class type) {\r\n-        return type.equals(Locale.class);\r\n-    }\r\n+  public boolean canConvert(Class type) {\r\n+    return type.equals(Locale.class);\r\n+  }\r\n \r\n-    public Object fromString(String str) {\r\n-        int[] underscorePositions = underscorePositions(str);\r\n-        String language, country, variant;\r\n-        if (underscorePositions[0] == -1) { // \"language\"\r\n-            language = str;\r\n-            country = \"\";\r\n-            variant = \"\";\r\n-        } else if (underscorePositions[1] == -1) { // \"language_country\"\r\n-            language = str.substring(0, underscorePositions[0]);\r\n-            country = str.substring(underscorePositions[0] + 1);\r\n-            variant = \"\";\r\n-        } else { // \"language_country_variant\"\r\n-            language = str.substring(0, underscorePositions[0]);\r\n-            country = str.substring(underscorePositions[0] + 1, underscorePositions[1]);\r\n-            variant = str.substring(underscorePositions[1] + 1);\r\n-        }\r\n-        return new Locale(language, country, variant);\r\n+  public Object fromString(String str) {\r\n+    int[] underscorePositions = underscorePositions(str);\r\n+    String language, country, variant;\r\n+    if (underscorePositions[0] == -1) { // \"language\"\r\n+      language = str;\r\n+      country = \"\";\r\n+      variant = \"\";\r\n+    } else if (underscorePositions[1] == -1) { // \"language_country\"\r\n+      language = str.substring(0, underscorePositions[0]);\r\n+      country = str.substring(underscorePositions[0] + 1);\r\n+      variant = \"\";\r\n+    } else { // \"language_country_variant\"\r\n+      language = str.substring(0, underscorePositions[0]);\r\n+      country = str.substring(underscorePositions[0] + 1, underscorePositions[1]);\r\n+      variant = str.substring(underscorePositions[1] + 1);\r\n     }\r\n+    return new Locale(language, country, variant);\r\n+  }\r\n \r\n-    private int[] underscorePositions(String in) {\r\n-        int[] result = new int[2];\r\n-        for (int i = 0; i < result.length; i++) {\r\n-            int last = i == 0 ? 0 : result[i - 1];\r\n-            result[i] = in.indexOf('_', last + 1);\r\n-        }\r\n-        return result;\r\n+  private int[] underscorePositions(String in) {\r\n+    int[] result = new int[2];\r\n+    for (int i = 0; i < result.length; i++) {\r\n+      int last = i == 0 ? 0 : result[i - 1];\r\n+      result[i] = in.indexOf('_', last + 1);\r\n     }\r\n+    return result;\r\n+  }\r\n \r\n }\r\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/67/LocaleConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/67/LocaleConverter.java\nindex 92ad8256685..9bafc648dbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/67/LocaleConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/67/LocaleConverter.java\n@@ -36,9 +36,8 @@ import java.util.Locale;\n  * @author Jose A. Illescas\r\n  * @author Joe Walnes\r\n  */\r\n-public class LocaleConverter extends AbstractSingleValueConverter {\r\n-\r\n-    public boolean canConvert(Class type) {\r\n+public class LocaleConverter extends AbstractSingleValueConverter {\n+  public boolean canConvert(Class type) {\r\n         return type.equals(Locale.class);\r\n     }\r\n \r\n@@ -70,4 +69,4 @@ public class LocaleConverter extends AbstractSingleValueConverter {\n         return result;\r\n     }\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/67/LocaleConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/67/LocaleConverter.java\nindex 92ad8256685..651b1f92adc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/67/LocaleConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/67/LocaleConverter.java\n@@ -24,10 +24,9 @@\n  * \r\n  * Created on 24. Julyl 2004 by Joe Walnes\r\n  */\r\n-package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.extended;\r\n-\r\n-import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;\r\n-\r\n+package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.extended;\n+\n+import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;\n import java.util.Locale;\r\n \r\n /**\r\n@@ -35,39 +34,44 @@ import java.util.Locale;\n  *\r\n  * @author Jose A. Illescas\r\n  * @author Joe Walnes\r\n- */\r\n-public class LocaleConverter extends AbstractSingleValueConverter {\r\n-\r\n-    public boolean canConvert(Class type) {\r\n-        return type.equals(Locale.class);\r\n-    }\r\n-\r\n-    public Object fromString(String str) {\r\n-        int[] underscorePositions = underscorePositions(str);\r\n-        String language, country, variant;\r\n-        if (underscorePositions[0] == -1) { // \"language\"\r\n-            language = str;\r\n-            country = \"\";\r\n-            variant = \"\";\r\n-        } else if (underscorePositions[1] == -1) { // \"language_country\"\r\n-            language = str.substring(0, underscorePositions[0]);\r\n-            country = str.substring(underscorePositions[0] + 1);\r\n-            variant = \"\";\r\n-        } else { // \"language_country_variant\"\r\n-            language = str.substring(0, underscorePositions[0]);\r\n-            country = str.substring(underscorePositions[0] + 1, underscorePositions[1]);\r\n-            variant = str.substring(underscorePositions[1] + 1);\r\n-        }\r\n-        return new Locale(language, country, variant);\r\n-    }\r\n-\r\n-    private int[] underscorePositions(String in) {\r\n-        int[] result = new int[2];\r\n-        for (int i = 0; i < result.length; i++) {\r\n-            int last = i == 0 ? 0 : result[i - 1];\r\n-            result[i] = in.indexOf('_', last + 1);\r\n-        }\r\n-        return result;\r\n-    }\r\n-\r\n-}\r\n+ */\n+\n+\n+public class LocaleConverter extends AbstractSingleValueConverter {\n+    public boolean canConvert(Class type) {\n+        return type.equals(Locale.class);\n+    }\n+\n+\n+    public Object fromString(String str) {\n+        int[] underscorePositions = underscorePositions(str);\n+        String language, country, variant;\n+\n+        if (underscorePositions[0] == -1) { // \"language\"\n+            language = str;\n+            country = \"\";\n+            variant = \"\";\n+        } else if (underscorePositions[1] == -1) { // \"language_country\"\n+                   language = str.substring(0, underscorePositions[0]);\n+                   country = str.substring(underscorePositions[0] + 1);\n+                   variant = \"\";\n+        } else { // \"language_country_variant\"\n+                   language = str.substring(0, underscorePositions[0]);\n+                   country = str.substring(underscorePositions[0] + 1,\n+                                           underscorePositions[1]);\n+                   variant = str.substring(underscorePositions[1] + 1);\n+        }\n+        return new Locale(language, country, variant);\n+    }\n+\n+\n+    private int[] underscorePositions(String in) {\n+        int[] result = new int[2];\n+\n+        for (int i = 0; i < result.length; i++) {\n+            int last = i == 0 ? 0 : result[i - 1];\n+            result[i] = in.indexOf('_', last + 1);\n+        }\n+        return result;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
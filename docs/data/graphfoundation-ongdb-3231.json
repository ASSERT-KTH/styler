{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3231",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3231/SpatialIndexPopulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3231/SpatialIndexPopulator.java\nindex 99d00781ca6..c53816afe42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3231/SpatialIndexPopulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3231/SpatialIndexPopulator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -51,196 +52,196 @@ import static org.neo4j.kernel.impl.index.schema.fusion.FusionIndexSampler.combi\n \n class SpatialIndexPopulator extends SpatialIndexCache<SpatialIndexPopulator.PartPopulator> implements IndexPopulator\n {\n-    SpatialIndexPopulator( long indexId,\n-            SchemaIndexDescriptor descriptor,\n-            IndexSamplingConfig samplingConfig,\n-            SpatialIndexFiles spatialIndexFiles,\n-            PageCache pageCache,\n-            FileSystemAbstraction fs,\n-            IndexProvider.Monitor monitor,\n-            SpaceFillingCurveConfiguration configuration )\n+  SpatialIndexPopulator(long indexId,\n+                        SchemaIndexDescriptor descriptor,\n+                        IndexSamplingConfig samplingConfig,\n+                        SpatialIndexFiles spatialIndexFiles,\n+                        PageCache pageCache,\n+                        FileSystemAbstraction fs,\n+                        IndexProvider.Monitor monitor,\n+                        SpaceFillingCurveConfiguration configuration)\n+  {\n+    super(new PartFactory(pageCache, fs, spatialIndexFiles, indexId, descriptor, monitor, samplingConfig, configuration));\n+  }\n+\n+  @Override\n+  public synchronized void create() throws IOException\n+  {\n+    forAll(NativeSchemaIndexPopulator::clear, this);\n+\n+    // We must make sure to have at least one subindex:\n+    // to be able to persist failure and to have the right state in the beginning\n+    if (!this.iterator().hasNext())\n+    {\n+      select(CoordinateReferenceSystem.WGS84);\n+    }\n+  }\n+\n+  @Override\n+  public synchronized void drop() throws IOException\n+  {\n+    forAll(NativeSchemaIndexPopulator::drop, this);\n+  }\n+\n+  @Override\n+  public void add(Collection<? extends IndexEntryUpdate<?>> updates) throws IOException, IndexEntryConflictException\n+  {\n+    Map<CoordinateReferenceSystem, List<IndexEntryUpdate<?>>> batchMap = new HashMap<>();\n+    for (IndexEntryUpdate<?> update : updates)\n     {\n-        super( new PartFactory( pageCache, fs, spatialIndexFiles, indexId, descriptor, monitor, samplingConfig, configuration ) );\n+      PointValue point = (PointValue) update.values()[0];\n+      List<IndexEntryUpdate<?>> batch = batchMap.computeIfAbsent(point.getCoordinateReferenceSystem(), k -> new ArrayList<>());\n+      batch.add(update);\n     }\n+    for (Map.Entry<CoordinateReferenceSystem, List<IndexEntryUpdate<?>>> entry : batchMap.entrySet())\n+    {\n+      PartPopulator partPopulator = select(entry.getKey());\n+      partPopulator.add(entry.getValue());\n+    }\n+  }\n \n-    @Override\n-    public synchronized void create() throws IOException\n+  @Override\n+  public void verifyDeferredConstraints(PropertyAccessor propertyAccessor) throws IndexEntryConflictException, IOException\n+  {\n+    for (IndexPopulator part : this)\n+    {\n+      part.verifyDeferredConstraints(propertyAccessor);\n+    }\n+  }\n+\n+  @Override\n+  public IndexUpdater newPopulatingUpdater(PropertyAccessor accessor)\n+  {\n+    return new SpatialIndexPopulatingUpdater(this, accessor);\n+  }\n+\n+  @Override\n+  public synchronized void close(boolean populationCompletedSuccessfully) throws IOException\n+  {\n+    closeInstantiateCloseLock();\n+    for (NativeSchemaIndexPopulator part : this)\n     {\n-        forAll( NativeSchemaIndexPopulator::clear, this );\n+      part.close(populationCompletedSuccessfully);\n+    }\n+  }\n \n-        // We must make sure to have at least one subindex:\n-        // to be able to persist failure and to have the right state in the beginning\n-        if ( !this.iterator().hasNext() )\n-        {\n-            select( CoordinateReferenceSystem.WGS84 );\n-        }\n+  @Override\n+  public synchronized void markAsFailed(String failure)\n+  {\n+    for (NativeSchemaIndexPopulator part : this)\n+    {\n+      part.markAsFailed(failure);\n+    }\n+  }\n+\n+  @Override\n+  public void includeSample(IndexEntryUpdate<?> update)\n+  {\n+    Value[] values = update.values();\n+    assert values.length == 1;\n+    uncheckedSelect(((PointValue) values[0]).getCoordinateReferenceSystem()).includeSample(update);\n+  }\n+\n+  @Override\n+  public IndexSample sampleResult()\n+  {\n+    IndexSample[] indexSamples = StreamSupport.stream(this.spliterator(), false)\n+        .map(PartPopulator::sampleResult)\n+        .toArray(IndexSample[]::new);\n+    return combineSamples(indexSamples);\n+  }\n+\n+  static class PartPopulator extends NativeSchemaIndexPopulator<SpatialSchemaKey, NativeSchemaValue>\n+  {\n+    private final SpaceFillingCurveConfiguration configuration;\n+    private final SpaceFillingCurveSettings settings;\n+\n+    PartPopulator(PageCache pageCache, FileSystemAbstraction fs, SpatialIndexFiles.SpatialFileLayout fileLayout,\n+                  IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig,\n+                  SpaceFillingCurveConfiguration configuration)\n+    {\n+      super(pageCache, fs, fileLayout.getIndexFile(), fileLayout.layout, monitor, descriptor, indexId, samplingConfig);\n+      this.configuration = configuration;\n+      this.settings = fileLayout.settings;\n     }\n \n     @Override\n-    public synchronized void drop() throws IOException\n+    public void verifyDeferredConstraints(PropertyAccessor nodePropertyAccessor) throws IndexEntryConflictException\n     {\n-        forAll( NativeSchemaIndexPopulator::drop, this );\n+      SpatialVerifyDeferredConstraint.verify(nodePropertyAccessor, layout, tree, descriptor);\n+      super.verifyDeferredConstraints(nodePropertyAccessor);\n     }\n \n     @Override\n-    public void add( Collection<? extends IndexEntryUpdate<?>> updates ) throws IOException, IndexEntryConflictException\n-    {\n-        Map<CoordinateReferenceSystem,List<IndexEntryUpdate<?>>> batchMap = new HashMap<>();\n-        for ( IndexEntryUpdate<?> update : updates )\n-        {\n-            PointValue point = (PointValue) update.values()[0];\n-            List<IndexEntryUpdate<?>> batch = batchMap.computeIfAbsent( point.getCoordinateReferenceSystem(), k -> new ArrayList<>() );\n-            batch.add( update );\n-        }\n-        for ( Map.Entry<CoordinateReferenceSystem,List<IndexEntryUpdate<?>>> entry : batchMap.entrySet() )\n-        {\n-            PartPopulator partPopulator = select( entry.getKey() );\n-            partPopulator.add( entry.getValue() );\n-        }\n+    boolean canCheckConflictsWithoutStoreAccess()\n+    {\n+      return false;\n     }\n \n     @Override\n-    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor ) throws IndexEntryConflictException, IOException\n+    ConflictDetectingValueMerger<SpatialSchemaKey, NativeSchemaValue> getMainConflictDetector()\n     {\n-        for ( IndexPopulator part : this )\n-        {\n-            part.verifyDeferredConstraints( propertyAccessor );\n-        }\n+      // Because of lossy point representation in index we need to always compare on node id,\n+      // even for unique indexes. If we don't we risk throwing constraint violation exception\n+      // for points that are in fact unique.\n+      return new ConflictDetectingValueMerger<>(true);\n     }\n \n     @Override\n-    public IndexUpdater newPopulatingUpdater( PropertyAccessor accessor )\n+    IndexReader newReader()\n     {\n-        return new SpatialIndexPopulatingUpdater( this, accessor );\n+      return new SpatialIndexPartReader<>(tree, layout, samplingConfig, descriptor, configuration);\n     }\n \n     @Override\n-    public synchronized void close( boolean populationCompletedSuccessfully ) throws IOException\n+    public synchronized void create() throws IOException\n     {\n-        closeInstantiateCloseLock();\n-        for ( NativeSchemaIndexPopulator part : this )\n-        {\n-            part.close( populationCompletedSuccessfully );\n-        }\n+      create(settings.headerWriter(BYTE_POPULATING));\n     }\n \n     @Override\n-    public synchronized void markAsFailed( String failure )\n+    void markTreeAsOnline() throws IOException\n+    {\n+      tree.checkpoint(IOLimiter.unlimited(), settings.headerWriter(BYTE_ONLINE));\n+    }\n+  }\n+\n+  static class PartFactory implements Factory<PartPopulator>\n+  {\n+    private final PageCache pageCache;\n+    private final FileSystemAbstraction fs;\n+    private final SpatialIndexFiles spatialIndexFiles;\n+    private final long indexId;\n+    private final SchemaIndexDescriptor descriptor;\n+    private final IndexProvider.Monitor monitor;\n+    private final IndexSamplingConfig samplingConfig;\n+    private final SpaceFillingCurveConfiguration configuration;\n+\n+    PartFactory(PageCache pageCache, FileSystemAbstraction fs, SpatialIndexFiles spatialIndexFiles, long indexId,\n+                SchemaIndexDescriptor descriptor, IndexProvider.Monitor monitor, IndexSamplingConfig samplingConfig,\n+                SpaceFillingCurveConfiguration configuration)\n     {\n-        for ( NativeSchemaIndexPopulator part : this )\n-        {\n-            part.markAsFailed( failure );\n-        }\n+      this.pageCache = pageCache;\n+      this.fs = fs;\n+      this.spatialIndexFiles = spatialIndexFiles;\n+      this.indexId = indexId;\n+      this.descriptor = descriptor;\n+      this.monitor = monitor;\n+      this.samplingConfig = samplingConfig;\n+      this.configuration = configuration;\n     }\n \n     @Override\n-    public void includeSample( IndexEntryUpdate<?> update )\n+    public PartPopulator newSpatial(CoordinateReferenceSystem crs) throws IOException\n     {\n-        Value[] values = update.values();\n-        assert values.length == 1;\n-        uncheckedSelect( ((PointValue) values[0]).getCoordinateReferenceSystem() ).includeSample( update );\n+      return create(spatialIndexFiles.forCrs(crs).getLayoutForNewIndex());\n     }\n \n-    @Override\n-    public IndexSample sampleResult()\n-    {\n-        IndexSample[] indexSamples = StreamSupport.stream( this.spliterator(), false )\n-                .map( PartPopulator::sampleResult )\n-                .toArray( IndexSample[]::new );\n-        return combineSamples( indexSamples );\n-    }\n-\n-    static class PartPopulator extends NativeSchemaIndexPopulator<SpatialSchemaKey, NativeSchemaValue>\n-    {\n-        private final SpaceFillingCurveConfiguration configuration;\n-        private final SpaceFillingCurveSettings settings;\n-\n-        PartPopulator( PageCache pageCache, FileSystemAbstraction fs, SpatialIndexFiles.SpatialFileLayout fileLayout,\n-                IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig,\n-                SpaceFillingCurveConfiguration configuration )\n-        {\n-            super( pageCache, fs, fileLayout.getIndexFile(), fileLayout.layout, monitor, descriptor, indexId, samplingConfig );\n-            this.configuration = configuration;\n-            this.settings = fileLayout.settings;\n-        }\n-\n-        @Override\n-        public void verifyDeferredConstraints( PropertyAccessor nodePropertyAccessor ) throws IndexEntryConflictException\n-        {\n-            SpatialVerifyDeferredConstraint.verify( nodePropertyAccessor, layout, tree, descriptor );\n-            super.verifyDeferredConstraints( nodePropertyAccessor );\n-        }\n-\n-        @Override\n-        boolean canCheckConflictsWithoutStoreAccess()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        ConflictDetectingValueMerger<SpatialSchemaKey,NativeSchemaValue> getMainConflictDetector()\n-        {\n-            // Because of lossy point representation in index we need to always compare on node id,\n-            // even for unique indexes. If we don't we risk throwing constraint violation exception\n-            // for points that are in fact unique.\n-            return new ConflictDetectingValueMerger<>( true );\n-        }\n-\n-        @Override\n-        IndexReader newReader()\n-        {\n-            return new SpatialIndexPartReader<>( tree, layout, samplingConfig, descriptor, configuration );\n-        }\n-\n-        @Override\n-        public synchronized void create() throws IOException\n-        {\n-            create( settings.headerWriter( BYTE_POPULATING ) );\n-        }\n-\n-        @Override\n-        void markTreeAsOnline() throws IOException\n-        {\n-            tree.checkpoint( IOLimiter.unlimited(), settings.headerWriter( BYTE_ONLINE ) );\n-        }\n-    }\n-\n-    static class PartFactory implements Factory<PartPopulator>\n-    {\n-        private final PageCache pageCache;\n-        private final FileSystemAbstraction fs;\n-        private final SpatialIndexFiles spatialIndexFiles;\n-        private final long indexId;\n-        private final SchemaIndexDescriptor descriptor;\n-        private final IndexProvider.Monitor monitor;\n-        private final IndexSamplingConfig samplingConfig;\n-        private final SpaceFillingCurveConfiguration configuration;\n-\n-        PartFactory( PageCache pageCache, FileSystemAbstraction fs, SpatialIndexFiles spatialIndexFiles, long indexId,\n-                SchemaIndexDescriptor descriptor, IndexProvider.Monitor monitor, IndexSamplingConfig samplingConfig,\n-                SpaceFillingCurveConfiguration configuration )\n-        {\n-            this.pageCache = pageCache;\n-            this.fs = fs;\n-            this.spatialIndexFiles = spatialIndexFiles;\n-            this.indexId = indexId;\n-            this.descriptor = descriptor;\n-            this.monitor = monitor;\n-            this.samplingConfig = samplingConfig;\n-            this.configuration = configuration;\n-        }\n-\n-        @Override\n-        public PartPopulator newSpatial( CoordinateReferenceSystem crs ) throws IOException\n-        {\n-            return create( spatialIndexFiles.forCrs( crs ).getLayoutForNewIndex() );\n-        }\n-\n-        private PartPopulator create( SpatialIndexFiles.SpatialFileLayout fileLayout ) throws IOException\n-        {\n-            PartPopulator populator = new PartPopulator( pageCache, fs, fileLayout, monitor, descriptor, indexId, samplingConfig, configuration );\n-            populator.create();\n-            return populator;\n-        }\n+    private PartPopulator create(SpatialIndexFiles.SpatialFileLayout fileLayout) throws IOException\n+    {\n+      PartPopulator populator = new PartPopulator(pageCache, fs, fileLayout, monitor, descriptor, indexId, samplingConfig, configuration);\n+      populator.create();\n+      return populator;\n     }\n+  }\n }\n",
            "diff_size": 271
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
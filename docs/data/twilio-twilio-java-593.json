{
    "project_name": "twilio-twilio-java",
    "error_id": "593",
    "information": {
        "errors": [
            {
                "line": "176",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/593/RoomReader.java\nindex a4a4719fc01..44d663387fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/593/RoomReader.java\n@@ -173,7 +173,7 @@ public class RoomReader extends Reader<Room> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/593/RoomReader.java\nindex a4a4719fc01..cd47728a356 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/593/RoomReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.video.v1;\n@@ -173,7 +173,7 @@ public class RoomReader extends Reader<Room> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/593/RoomReader.java\nindex a4a4719fc01..08fe7a85070 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/593/RoomReader.java\n@@ -34,6 +34,7 @@ public class RoomReader extends Reader<Room> {\n      * @param status Read only the rooms with this status\n      * @return this\n      */\n+\n     public RoomReader setStatus(final Room.RoomStatus status) {\n         this.status = status;\n         return this;\n@@ -45,6 +46,8 @@ public class RoomReader extends Reader<Room> {\n      * @param uniqueName Read only rooms with this unique_name\n      * @return this\n      */\n+\n+\n     public RoomReader setUniqueName(final String uniqueName) {\n         this.uniqueName = uniqueName;\n         return this;\n@@ -57,6 +60,8 @@ public class RoomReader extends Reader<Room> {\n      *                         given as YYYY-MM-DD\n      * @return this\n      */\n+\n+\n     public RoomReader setDateCreatedAfter(final DateTime dateCreatedAfter) {\n         this.dateCreatedAfter = dateCreatedAfter;\n         return this;\n@@ -69,6 +74,8 @@ public class RoomReader extends Reader<Room> {\n      *                          given as YYYY-MM-DD\n      * @return this\n      */\n+\n+\n     public RoomReader setDateCreatedBefore(final DateTime dateCreatedBefore) {\n         this.dateCreatedBefore = dateCreatedBefore;\n         return this;\n@@ -80,6 +87,7 @@ public class RoomReader extends Reader<Room> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Room ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Room> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -91,14 +99,11 @@ public class RoomReader extends Reader<Room> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Room ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Room> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.VIDEO.toString(),\n-            \"/v1/Rooms\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.VIDEO.toString(), \"/v1/Rooms\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -111,14 +116,12 @@ public class RoomReader extends Reader<Room> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Room ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Room> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Room> getPage(final String targetUrl,\n+                              final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -129,13 +132,11 @@ public class RoomReader extends Reader<Room> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Room> nextPage(final Page<Room> page,\n                                final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -146,13 +147,11 @@ public class RoomReader extends Reader<Room> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Room> previousPage(final Page<Room> page,\n                                    final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -163,9 +162,11 @@ public class RoomReader extends Reader<Room> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Room> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Room> pageForRequest(final TwilioRestClient client,\n+                                      final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Room read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -173,15 +174,11 @@ public class RoomReader extends Reader<Room> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"rooms\",\n-            response.getContent(),\n-            Room.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"rooms\", response.getContent(), Room.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -189,6 +186,8 @@ public class RoomReader extends Reader<Room> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (status != null) {\n             request.addQueryParam(\"Status\", status.toString());\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/593/RoomReader.java\nindex a4a4719fc01..44d663387fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/593/RoomReader.java\n@@ -173,7 +173,7 @@ public class RoomReader extends Reader<Room> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/593/RoomReader.java\nindex a4a4719fc01..49ba1fe6d0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/593/RoomReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/593/RoomReader.java\n@@ -173,7 +173,8 @@ public class RoomReader extends Reader<Room> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
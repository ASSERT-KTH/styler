{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3403",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3403/DefaultRelationshipExplicitIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3403/DefaultRelationshipExplicitIndexCursor.java\nindex a25d780b5cb..23d46b6a45f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3403/DefaultRelationshipExplicitIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3403/DefaultRelationshipExplicitIndexCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.neo4j.internal.kernel.api.NodeCursor;\n@@ -27,141 +28,140 @@ import org.neo4j.storageengine.api.schema.IndexProgressor.ExplicitClient;\n import static org.neo4j.kernel.impl.store.record.AbstractBaseRecord.NO_ID;\n \n class DefaultRelationshipExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor>\n-        implements RelationshipExplicitIndexCursor, ExplicitClient\n+    implements RelationshipExplicitIndexCursor, ExplicitClient\n {\n-    private Read read;\n-    private int expectedSize;\n-    private long relationship;\n-    private float score;\n-    private final DefaultRelationshipScanCursor scanCursor;\n-\n-    private final DefaultCursors pool;\n-\n-    DefaultRelationshipExplicitIndexCursor( DefaultRelationshipScanCursor scanCursor,\n-            DefaultCursors pool )\n-    {\n-        this.scanCursor = scanCursor;\n-        this.pool = pool;\n-    }\n-\n-    @Override\n-    public void initialize( ExplicitIndexProgressor progressor, int expectedSize )\n-    {\n-        super.initialize( progressor );\n-        this.expectedSize = expectedSize;\n-    }\n-\n-    @Override\n-    public boolean acceptEntity( long reference, float score )\n-    {\n-        this.relationship = reference;\n-        read.singleRelationship( reference, scanCursor );\n-        this.score = score;\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean next()\n-    {\n-        return innerNext();\n-    }\n-\n-    public void setRead( Read read )\n-    {\n-        this.read = read;\n-    }\n-\n-    @Override\n-    public int expectedTotalNumberOfResults()\n-    {\n-        return expectedSize;\n-    }\n-\n-    @Override\n-    public float score()\n-    {\n-        return score;\n-    }\n-\n-    @Override\n-    public void relationship( RelationshipScanCursor cursor )\n-    {\n-        read.singleRelationship( relationship, cursor );\n-    }\n-\n-    @Override\n-    public void sourceNode( NodeCursor cursor )\n-    {\n-        read.singleNode( sourceNodeReference(), cursor );\n-    }\n-\n-    @Override\n-    public void targetNode( NodeCursor cursor )\n-    {\n-        read.singleNode( targetNodeReference(), cursor );\n-    }\n-\n-    @Override\n-    public int type()\n-    {\n-        return scanCursor.type();\n-    }\n-\n-    @Override\n-    public long sourceNodeReference()\n-    {\n-        return scanCursor.sourceNodeReference();\n-    }\n-\n-    @Override\n-    public long targetNodeReference()\n-    {\n-        return scanCursor.targetNodeReference();\n-    }\n-\n-    @Override\n-    public long relationshipReference()\n-    {\n-        return relationship;\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        if ( !isClosed() )\n-        {\n-            super.close();\n-            relationship = NO_ID;\n-            score = 0;\n-            expectedSize = 0;\n-            read = null;\n-\n-            pool.accept( this );\n-        }\n-    }\n-\n-    @Override\n-    public boolean isClosed()\n-    {\n-        return super.isClosed();\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        if ( isClosed() )\n-        {\n-            return \"RelationshipExplicitIndexCursor[closed state]\";\n-        }\n-        else\n-        {\n-            return \"RelationshipExplicitIndexCursor[relationship=\" + relationship + \", expectedSize=\" + expectedSize + \", score=\" + score +\n-                    \" ,underlying record=\" + super.toString() + \" ]\";\n-        }\n-    }\n-\n-    public void release()\n-    {\n-        scanCursor.release();\n-    }\n+  private Read read;\n+  private int expectedSize;\n+  private long relationship;\n+  private float score;\n+  private final DefaultRelationshipScanCursor scanCursor;\n+\n+  private final DefaultCursors pool;\n+\n+  DefaultRelationshipExplicitIndexCursor(DefaultRelationshipScanCursor scanCursor,\n+                                         DefaultCursors pool)\n+  {\n+    this.scanCursor = scanCursor;\n+    this.pool = pool;\n+  }\n+\n+  @Override\n+  public void initialize(ExplicitIndexProgressor progressor, int expectedSize)\n+  {\n+    super.initialize(progressor);\n+    this.expectedSize = expectedSize;\n+  }\n+\n+  @Override\n+  public boolean acceptEntity(long reference, float score)\n+  {\n+    this.relationship = reference;\n+    read.singleRelationship(reference, scanCursor);\n+    this.score = score;\n+    return true;\n+  }\n+\n+  @Override\n+  public boolean next()\n+  {\n+    return innerNext();\n+  }\n+\n+  public void setRead(Read read)\n+  {\n+    this.read = read;\n+  }\n+\n+  @Override\n+  public int expectedTotalNumberOfResults()\n+  {\n+    return expectedSize;\n+  }\n+\n+  @Override\n+  public float score()\n+  {\n+    return score;\n+  }\n+\n+  @Override\n+  public void relationship(RelationshipScanCursor cursor)\n+  {\n+    read.singleRelationship(relationship, cursor);\n+  }\n+\n+  @Override\n+  public void sourceNode(NodeCursor cursor)\n+  {\n+    read.singleNode(sourceNodeReference(), cursor);\n+  }\n+\n+  @Override\n+  public void targetNode(NodeCursor cursor)\n+  {\n+    read.singleNode(targetNodeReference(), cursor);\n+  }\n+\n+  @Override\n+  public int type()\n+  {\n+    return scanCursor.type();\n+  }\n+\n+  @Override\n+  public long sourceNodeReference()\n+  {\n+    return scanCursor.sourceNodeReference();\n+  }\n+\n+  @Override\n+  public long targetNodeReference()\n+  {\n+    return scanCursor.targetNodeReference();\n+  }\n+\n+  @Override\n+  public long relationshipReference()\n+  {\n+    return relationship;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    if (!isClosed())\n+    {\n+      super.close();\n+      relationship = NO_ID;\n+      score = 0;\n+      expectedSize = 0;\n+      read = null;\n+\n+      pool.accept(this);\n+    }\n+  }\n+\n+  @Override\n+  public boolean isClosed()\n+  {\n+    return super.isClosed();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    if (isClosed())\n+    {\n+      return \"RelationshipExplicitIndexCursor[closed state]\";\n+    } else\n+    {\n+      return \"RelationshipExplicitIndexCursor[relationship=\" + relationship + \", expectedSize=\" + expectedSize + \", score=\" + score +\n+          \" ,underlying record=\" + super.toString() + \" ]\";\n+    }\n+  }\n+\n+  public void release()\n+  {\n+    scanCursor.release();\n+  }\n }\n",
            "diff_size": 137
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3403/DefaultRelationshipExplicitIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3403/DefaultRelationshipExplicitIndexCursor.java\nindex a25d780b5cb..a9b529c38aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3403/DefaultRelationshipExplicitIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3403/DefaultRelationshipExplicitIndexCursor.java\n@@ -26,8 +26,7 @@ import org.neo4j.storageengine.api.schema.IndexProgressor.ExplicitClient;\n \n import static org.neo4j.kernel.impl.store.record.AbstractBaseRecord.NO_ID;\n \n-class DefaultRelationshipExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor>\n-        implements RelationshipExplicitIndexCursor, ExplicitClient\n+class DefaultRelationshipExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor> implements RelationshipExplicitIndexCursor, ExplicitClient\n {\n     private Read read;\n     private int expectedSize;\n@@ -155,13 +154,12 @@ class DefaultRelationshipExplicitIndexCursor extends IndexCursor<ExplicitIndexPr\n         }\n         else\n         {\n-            return \"RelationshipExplicitIndexCursor[relationship=\" + relationship + \", expectedSize=\" + expectedSize + \", score=\" + score +\n-                    \" ,underlying record=\" + super.toString() + \" ]\";\n-        }\n+            return \"RelationshipExplicitIndexCursor[relationship=\" + relationship + \", expectedSize=\" + expectedSize + \", score=\" + score + \" ,underlying record=\" + super.toString() + \" ]\";\n+    }\n     }\n \n     public void release()\n     {\n         scanCursor.release();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
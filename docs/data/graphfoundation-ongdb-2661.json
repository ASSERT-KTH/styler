{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2661",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "6",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "151",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2661/ReplicatedTransactionStateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2661/ReplicatedTransactionStateMachine.java\nindex edc52b18de0..4e98198dea8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2661/ReplicatedTransactionStateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2661/ReplicatedTransactionStateMachine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.tx;\n \n import java.util.function.Consumer;\n@@ -44,122 +45,119 @@ import static org.neo4j.kernel.api.exceptions.Status.Transaction.LockSessionExpi\n \n public class ReplicatedTransactionStateMachine implements StateMachine<ReplicatedTransaction>\n {\n-    private final CommandIndexTracker commandIndexTracker;\n-    private final ReplicatedLockTokenStateMachine lockTokenStateMachine;\n-    private final int maxBatchSize;\n-    private final Log log;\n-    private final PageCursorTracerSupplier pageCursorTracerSupplier;\n-    private final VersionContextSupplier versionContextSupplier;\n-\n-    private TransactionQueue queue;\n-    private long lastCommittedIndex = -1;\n-\n-    public ReplicatedTransactionStateMachine( CommandIndexTracker commandIndexTracker,\n-                                              ReplicatedLockTokenStateMachine lockStateMachine, int maxBatchSize,\n-                                              LogProvider logProvider,\n-                                              PageCursorTracerSupplier pageCursorTracerSupplier,\n-                                              VersionContextSupplier versionContextSupplier )\n+  private final CommandIndexTracker commandIndexTracker;\n+  private final ReplicatedLockTokenStateMachine lockTokenStateMachine;\n+  private final int maxBatchSize;\n+  private final Log log;\n+  private final PageCursorTracerSupplier pageCursorTracerSupplier;\n+  private final VersionContextSupplier versionContextSupplier;\n+\n+  private TransactionQueue queue;\n+  private long lastCommittedIndex = -1;\n+\n+  public ReplicatedTransactionStateMachine(CommandIndexTracker commandIndexTracker,\n+                                           ReplicatedLockTokenStateMachine lockStateMachine, int maxBatchSize,\n+                                           LogProvider logProvider,\n+                                           PageCursorTracerSupplier pageCursorTracerSupplier,\n+                                           VersionContextSupplier versionContextSupplier)\n+  {\n+    this.commandIndexTracker = commandIndexTracker;\n+    this.lockTokenStateMachine = lockStateMachine;\n+    this.maxBatchSize = maxBatchSize;\n+    this.log = logProvider.getLog(getClass());\n+    this.pageCursorTracerSupplier = pageCursorTracerSupplier;\n+    this.versionContextSupplier = versionContextSupplier;\n+  }\n+\n+  public synchronized void installCommitProcess(TransactionCommitProcess commitProcess, long lastCommittedIndex)\n+  {\n+    this.lastCommittedIndex = lastCommittedIndex;\n+    log.info(format(\"Updated lastCommittedIndex to %d\", lastCommittedIndex));\n+    this.queue = new TransactionQueue(maxBatchSize, (first, last) ->\n     {\n-        this.commandIndexTracker = commandIndexTracker;\n-        this.lockTokenStateMachine = lockStateMachine;\n-        this.maxBatchSize = maxBatchSize;\n-        this.log = logProvider.getLog( getClass() );\n-        this.pageCursorTracerSupplier = pageCursorTracerSupplier;\n-        this.versionContextSupplier = versionContextSupplier;\n-    }\n-\n-    public synchronized void installCommitProcess( TransactionCommitProcess commitProcess, long lastCommittedIndex )\n+      commitProcess.commit(first, CommitEvent.NULL, TransactionApplicationMode.EXTERNAL);\n+      pageCursorTracerSupplier.get().reportEvents(); // Report paging metrics for the commit\n+    });\n+  }\n+\n+  @Override\n+  public synchronized void applyCommand(ReplicatedTransaction replicatedTx, long commandIndex, Consumer<Result> callback)\n+  {\n+    if (commandIndex <= lastCommittedIndex)\n     {\n-        this.lastCommittedIndex = lastCommittedIndex;\n-        log.info( format(\"Updated lastCommittedIndex to %d\", lastCommittedIndex) );\n-        this.queue = new TransactionQueue( maxBatchSize, ( first, last ) ->\n-        {\n-            commitProcess.commit( first, CommitEvent.NULL, TransactionApplicationMode.EXTERNAL );\n-            pageCursorTracerSupplier.get().reportEvents(); // Report paging metrics for the commit\n-        } );\n+      log.debug(\"Ignoring transaction at log index %d since already committed up to %d\", commandIndex, lastCommittedIndex);\n+      return;\n     }\n \n-    @Override\n-    public synchronized void applyCommand( ReplicatedTransaction replicatedTx, long commandIndex, Consumer<Result> callback )\n-    {\n-        if ( commandIndex <= lastCommittedIndex )\n-        {\n-            log.debug( \"Ignoring transaction at log index %d since already committed up to %d\", commandIndex, lastCommittedIndex );\n-            return;\n-        }\n-\n-        TransactionRepresentation tx;\n+    TransactionRepresentation tx;\n \n-        byte[] extraHeader = encodeLogIndexAsTxHeader( commandIndex );\n-        tx = ReplicatedTransactionFactory.extractTransactionRepresentation( replicatedTx, extraHeader );\n+    byte[] extraHeader = encodeLogIndexAsTxHeader(commandIndex);\n+    tx = ReplicatedTransactionFactory.extractTransactionRepresentation(replicatedTx, extraHeader);\n \n-        int currentTokenId = lockTokenStateMachine.currentToken().id();\n-        int txLockSessionId = tx.getLockSessionId();\n+    int currentTokenId = lockTokenStateMachine.currentToken().id();\n+    int txLockSessionId = tx.getLockSessionId();\n \n-        if ( currentTokenId != txLockSessionId && txLockSessionId != Locks.Client.NO_LOCK_SESSION_ID )\n-        {\n-            callback.accept( Result.of( new TransactionFailureException( LockSessionExpired,\n-                    \"The lock session in the cluster has changed: [current lock session id:%d, tx lock session id:%d]\",\n-                    currentTokenId, txLockSessionId ) ) );\n-        }\n-        else\n-        {\n-            try\n-            {\n-                TransactionToApply transaction = new TransactionToApply( tx, versionContextSupplier.getVersionContext() );\n-                transaction.onClose( txId ->\n-                {\n-                    if ( tx.getLatestCommittedTxWhenStarted() >= txId )\n-                    {\n-                        throw new IllegalStateException(\n-                                format( \"Out of order transaction. Expected that %d < %d\", tx.getLatestCommittedTxWhenStarted(), txId ) );\n-                    }\n-\n-                    callback.accept( Result.of( txId ) );\n-                    commandIndexTracker.setAppliedCommandIndex( commandIndex );\n-                } );\n-                queue.queue( transaction );\n-            }\n-            catch ( Exception e )\n-            {\n-                throw panicException( e );\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void flush()\n+    if (currentTokenId != txLockSessionId && txLockSessionId != Locks.Client.NO_LOCK_SESSION_ID)\n     {\n-        // implicitly flushed\n-    }\n-\n-    @Override\n-    public long lastAppliedIndex()\n+      callback.accept(Result.of(new TransactionFailureException(LockSessionExpired,\n+          \"The lock session in the cluster has changed: [current lock session id:%d, tx lock session id:%d]\",\n+          currentTokenId, txLockSessionId)));\n+    } else\n     {\n-        if ( queue == null )\n+      try\n+      {\n+        TransactionToApply transaction = new TransactionToApply(tx, versionContextSupplier.getVersionContext());\n+        transaction.onClose(txId ->\n         {\n-            /** See {@link #installCommitProcess}. */\n-            throw new IllegalStateException( \"Value has not been installed\" );\n-        }\n-        return lastCommittedIndex;\n+          if (tx.getLatestCommittedTxWhenStarted() >= txId)\n+          {\n+            throw new IllegalStateException(\n+                format(\"Out of order transaction. Expected that %d < %d\", tx.getLatestCommittedTxWhenStarted(), txId));\n+          }\n+\n+          callback.accept(Result.of(txId));\n+          commandIndexTracker.setAppliedCommandIndex(commandIndex);\n+        });\n+        queue.queue(transaction);\n+      } catch (Exception e)\n+      {\n+        throw panicException(e);\n+      }\n     }\n-\n-    public synchronized void ensuredApplied()\n+  }\n+\n+  @Override\n+  public void flush()\n+  {\n+    // implicitly flushed\n+  }\n+\n+  @Override\n+  public long lastAppliedIndex()\n+  {\n+    if (queue == null)\n     {\n-        try\n-        {\n-            queue.empty();\n-        }\n-        catch ( Exception e )\n-        {\n-            throw panicException( e );\n-        }\n+      /** See {@link #installCommitProcess}. */\n+      throw new IllegalStateException(\"Value has not been installed\");\n     }\n+    return lastCommittedIndex;\n+  }\n \n-    private IllegalStateException panicException( Exception e )\n+  public synchronized void ensuredApplied()\n+  {\n+    try\n+    {\n+      queue.empty();\n+    } catch (Exception e)\n     {\n-        return new IllegalStateException( \"Failed to locally commit a transaction that has already been \" +\n-                \"committed to the RAFT log. This server cannot process later transactions and needs to be \" +\n-                \"restarted once the underlying cause has been addressed.\", e );\n+      throw panicException(e);\n     }\n+  }\n+\n+  private IllegalStateException panicException(Exception e)\n+  {\n+    return new IllegalStateException(\"Failed to locally commit a transaction that has already been \" +\n+        \"committed to the RAFT log. This server cannot process later transactions and needs to be \" +\n+        \"restarted once the underlying cause has been addressed.\", e);\n+  }\n }\n",
            "diff_size": 155
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 231).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 265).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2661/ReplicatedTransactionStateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2661/ReplicatedTransactionStateMachine.java\nindex edc52b18de0..50cddefd492 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2661/ReplicatedTransactionStateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2661/ReplicatedTransactionStateMachine.java\n@@ -54,12 +54,11 @@ public class ReplicatedTransactionStateMachine implements StateMachine<Replicate\n     private TransactionQueue queue;\n     private long lastCommittedIndex = -1;\n \n-    public ReplicatedTransactionStateMachine( CommandIndexTracker commandIndexTracker,\n-                                              ReplicatedLockTokenStateMachine lockStateMachine, int maxBatchSize,\n+    public ReplicatedTransactionStateMachine( CommandIndexTracker commandIndexTracker, ReplicatedLockTokenStateMachine lockStateMachine, int maxBatchSize,\n                                               LogProvider logProvider,\n                                               PageCursorTracerSupplier pageCursorTracerSupplier,\n                                               VersionContextSupplier versionContextSupplier )\n-    {\n+{\n         this.commandIndexTracker = commandIndexTracker;\n         this.lockTokenStateMachine = lockStateMachine;\n         this.maxBatchSize = maxBatchSize;\n@@ -71,7 +70,7 @@ public class ReplicatedTransactionStateMachine implements StateMachine<Replicate\n     public synchronized void installCommitProcess( TransactionCommitProcess commitProcess, long lastCommittedIndex )\n     {\n         this.lastCommittedIndex = lastCommittedIndex;\n-        log.info( format(\"Updated lastCommittedIndex to %d\", lastCommittedIndex) );\n+        log.info( format( \"Updated lastCommittedIndex to %d\", lastCommittedIndex) );\n         this.queue = new TransactionQueue( maxBatchSize, ( first, last ) ->\n         {\n             commitProcess.commit( first, CommitEvent.NULL, TransactionApplicationMode.EXTERNAL );\n@@ -95,12 +94,9 @@ public class ReplicatedTransactionStateMachine implements StateMachine<Replicate\n \n         int currentTokenId = lockTokenStateMachine.currentToken().id();\n         int txLockSessionId = tx.getLockSessionId();\n-\n-        if ( currentTokenId != txLockSessionId && txLockSessionId != Locks.Client.NO_LOCK_SESSION_ID )\n+if ( currentTokenId != txLockSessionId && txLockSessionId != Locks.Client.NO_LOCK_SESSION_ID )\n         {\n-            callback.accept( Result.of( new TransactionFailureException( LockSessionExpired,\n-                    \"The lock session in the cluster has changed: [current lock session id:%d, tx lock session id:%d]\",\n-                    currentTokenId, txLockSessionId ) ) );\n+            callback.accept( Result.of( new TransactionFailureException( LockSessionExpired, \"The lock session in the cluster has changed: [current lock session id:%d, tx lock session id:%d]\", currentTokenId, txLockSessionId ) ) );\n         }\n         else\n         {\n@@ -111,8 +107,7 @@ public class ReplicatedTransactionStateMachine implements StateMachine<Replicate\n                 {\n                     if ( tx.getLatestCommittedTxWhenStarted() >= txId )\n                     {\n-                        throw new IllegalStateException(\n-                                format( \"Out of order transaction. Expected that %d < %d\", tx.getLatestCommittedTxWhenStarted(), txId ) );\n+                        throw new IllegalStateException( format( \"Out of order transaction. Expected that %d < %d\", tx.getLatestCommittedTxWhenStarted(), txId ) );\n                     }\n \n                     callback.accept( Result.of( txId ) );\n@@ -141,7 +136,8 @@ public class ReplicatedTransactionStateMachine implements StateMachine<Replicate\n             /** See {@link #installCommitProcess}. */\n             throw new IllegalStateException( \"Value has not been installed\" );\n         }\n-        return lastCommittedIndex;\n+\n+return lastCommittedIndex;\n     }\n \n     public synchronized void ensuredApplied()\n@@ -158,8 +154,6 @@ public class ReplicatedTransactionStateMachine implements StateMachine<Replicate\n \n     private IllegalStateException panicException( Exception e )\n     {\n-        return new IllegalStateException( \"Failed to locally commit a transaction that has already been \" +\n-                \"committed to the RAFT log. This server cannot process later transactions and needs to be \" +\n-                \"restarted once the underlying cause has been addressed.\", e );\n+        return new IllegalStateException( \"Failed to locally commit a transaction that has already been \" + \"committed to the RAFT log. This server cannot process later transactions and needs to be \" + \"restarted once the underlying cause has been addressed.\", e );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
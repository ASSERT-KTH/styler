{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4517",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4517/NodePropertySchemaInfoResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4517/NodePropertySchemaInfoResult.java\nindex 4a2a31eef14..43b1a06b225 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4517/NodePropertySchemaInfoResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4517/NodePropertySchemaInfoResult.java\n@@ -17,42 +17,43 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.builtinprocs;\n \n import java.util.List;\n \n public class NodePropertySchemaInfoResult\n {\n-    /**\n-     * A combination of escaped label names interleaved by \":\"\n-     */\n-    public final String nodeType;\n+  /**\n+   * A combination of escaped label names interleaved by \":\"\n+   */\n+  public final String nodeType;\n \n-    /**\n-     * A list of label names\n-     */\n-    public final List<String> nodeLabels;\n-    /**\n-     * A property name that occurs on the given label combination or null\n-     */\n-    public final String propertyName;\n+  /**\n+   * A list of label names\n+   */\n+  public final List<String> nodeLabels;\n+  /**\n+   * A property name that occurs on the given label combination or null\n+   */\n+  public final String propertyName;\n \n-    /**\n-     * A List containing all types of the given property on the given label combination or null\n-     */\n-    public final List<String> propertyTypes;\n+  /**\n+   * A List containing all types of the given property on the given label combination or null\n+   */\n+  public final List<String> propertyTypes;\n \n-    /**\n-     * Indicates whether the property is present on all similar nodes (= true) or not (= false)\n-     */\n-    public final boolean mandatory;\n+  /**\n+   * Indicates whether the property is present on all similar nodes (= true) or not (= false)\n+   */\n+  public final boolean mandatory;\n \n-    public NodePropertySchemaInfoResult( String nodeType, List<String> nodeLabelsList, String propertyName, List<String> cypherTypes, boolean mandatory )\n-    {\n-        this.nodeType = nodeType;\n-        this.nodeLabels = nodeLabelsList;\n-        this.propertyName = propertyName;\n-        this.propertyTypes = cypherTypes;\n-        this.mandatory  = mandatory;\n-    }\n+  public NodePropertySchemaInfoResult(String nodeType, List<String> nodeLabelsList, String propertyName, List<String> cypherTypes, boolean mandatory)\n+  {\n+    this.nodeType = nodeType;\n+    this.nodeLabels = nodeLabelsList;\n+    this.propertyName = propertyName;\n+    this.propertyTypes = cypherTypes;\n+    this.mandatory = mandatory;\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4517/NodePropertySchemaInfoResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4517/NodePropertySchemaInfoResult.java\nindex 4a2a31eef14..d23953c960c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4517/NodePropertySchemaInfoResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4517/NodePropertySchemaInfoResult.java\n@@ -32,7 +32,8 @@ public class NodePropertySchemaInfoResult\n      * A list of label names\n      */\n     public final List<String> nodeLabels;\n-    /**\n+\n+/**\n      * A property name that occurs on the given label combination or null\n      */\n     public final String propertyName;\n@@ -53,6 +54,6 @@ public class NodePropertySchemaInfoResult\n         this.nodeLabels = nodeLabelsList;\n         this.propertyName = propertyName;\n         this.propertyTypes = cypherTypes;\n-        this.mandatory  = mandatory;\n+        this.mandatory = mandatory;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
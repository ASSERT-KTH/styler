{
    "project_name": "apache-iotdb",
    "error_id": "371",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.cluster.utils.nodetool;\n\nimport org.apache.iotdb.cluster.ClusterMain;\nimport org.apache.iotdb.cluster.partition.PartitionGroup;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/371/ClusterMonitor.java\nindex e72a33aaa71..305dea5093b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/371/ClusterMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.utils.nodetool;\n \n import org.apache.iotdb.cluster.ClusterMain;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/371/ClusterMonitor.java\nindex e72a33aaa71..305dea5093b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/371/ClusterMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.utils.nodetool;\n \n import org.apache.iotdb.cluster.ClusterMain;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/371/ClusterMonitor.java\nindex e72a33aaa71..fa930552132 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/371/ClusterMonitor.java\n@@ -33,11 +33,9 @@ import org.apache.iotdb.db.metadata.PartialPath;\n import org.apache.iotdb.db.service.IService;\n import org.apache.iotdb.db.service.JMXService;\n import org.apache.iotdb.db.service.ServiceType;\n-\n import org.apache.commons.collections4.map.MultiKeyMap;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -45,20 +43,15 @@ import java.util.Map;\n public class ClusterMonitor implements ClusterMonitorMBean, IService {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(ClusterMonitor.class);\n-\n   public static final ClusterMonitor INSTANCE = new ClusterMonitor();\n-\n-  private final String mbeanName =\n-      String.format(\n-          \"%s:%s=%s\", IoTDBConstant.IOTDB_PACKAGE, IoTDBConstant.JMX_TYPE, getID().getJmxName());\n+  private final String mbeanName = String.format(\"%s:%s=%s\", IoTDBConstant.IOTDB_PACKAGE, IoTDBConstant.JMX_TYPE, getID().getJmxName());\n \n   @Override\n   public void start() throws StartupException {\n     try {\n       JMXService.registerMBean(INSTANCE, mbeanName);\n     } catch (Exception e) {\n-      String errorMessage =\n-          String.format(\"Failed to start %s because of %s\", this.getID().getName(), e.getMessage());\n+      String errorMessage = String.format(\"Failed to start %s because of %s\", this.getID().getName(), e.getMessage());\n       throw new StartupException(errorMessage);\n     }\n   }\n@@ -71,13 +64,14 @@ public class ClusterMonitor implements ClusterMonitorMBean, IService {\n \n   @Override\n   public MultiKeyMap<Long, PartitionGroup> getDataPartition(\n-      String path, long startTime, long endTime) {\n+    String path, long startTime, long endTime) {\n     PartitionTable partitionTable = getPartitionTable();\n     if (partitionTable == null) {\n       return null;\n     }\n     try {\n-      return partitionTable.partitionByPathRangeTime(new PartialPath(path), startTime, endTime);\n+      return partitionTable.partitionByPathRangeTime(\n+        new PartialPath(path), startTime, endTime);\n     } catch (MetadataException e) {\n       LOGGER.error(\"The storage group of path {} doesn't exist.\", path, e);\n       return new MultiKeyMap<>();\n@@ -91,7 +85,8 @@ public class ClusterMonitor implements ClusterMonitorMBean, IService {\n       return null;\n     }\n     try {\n-      return partitionTable.partitionByPathTime(new PartialPath(path), 0);\n+      return partitionTable.partitionByPathTime(\n+        new PartialPath(path), 0);\n     } catch (MetadataException e) {\n       LOGGER.error(\"The storage group of path {} doesn't exist.\", path, e);\n       return new PartitionGroup();\n@@ -123,8 +118,7 @@ public class ClusterMonitor implements ClusterMonitorMBean, IService {\n     Map<Node, List<Integer>> nodeSlotMap = ((SlotPartitionTable) partitionTable).getAllNodeSlots();\n     Map<PartitionGroup, Integer> raftGroupMapSlotNum = new HashMap<>();\n     for (Node header : allNodes) {\n-      raftGroupMapSlotNum.put(\n-          partitionTable.getHeaderGroup(header), nodeSlotMap.get(header).size());\n+      raftGroupMapSlotNum.put(partitionTable.getHeaderGroup(header), nodeSlotMap.get(header).size());\n     }\n     return raftGroupMapSlotNum;\n   }\n@@ -177,4 +171,4 @@ public class ClusterMonitor implements ClusterMonitorMBean, IService {\n   public void resetInstrumenting() {\n     Timer.Statistic.resetAll();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/371/ClusterMonitor.java\nindex e72a33aaa71..305dea5093b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/371/ClusterMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.utils.nodetool;\n \n import org.apache.iotdb.cluster.ClusterMain;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/371/ClusterMonitor.java\nindex e72a33aaa71..305dea5093b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/371/ClusterMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/371/ClusterMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.utils.nodetool;\n \n import org.apache.iotdb.cluster.ClusterMain;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
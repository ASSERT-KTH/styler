{
    "project_name": "neo4j-neo4j",
    "error_id": "1435",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1435/Layout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1435/Layout.java\nindex 92c91233d65..b336e9c1a85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1435/Layout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1435/Layout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.Comparator;\n@@ -33,7 +34,7 @@ import static java.lang.String.format;\n  * <p>\n  * Rather extend {@link Adapter} as to get standard implementation of e.g. {@link Adapter#toString()}.\n  *\n- * @param <KEY> type of key\n+ * @param <KEY>   type of key\n  * @param <VALUE> type of value\n  */\n public interface Layout<KEY, VALUE> extends Comparator<KEY>\n@@ -49,11 +50,11 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n     /**\n      * Copies contents of {@code key} to {@code into}.\n      *\n-     * @param key key (left unchanged as part of this call) to copy contents from.\n+     * @param key  key (left unchanged as part of this call) to copy contents from.\n      * @param into key (changed as part of this call) to copy contents into.\n      * @return the provided {@code into} instance for convenience.\n      */\n-    KEY copyKey( KEY key, KEY into );\n+    KEY copyKey(KEY key, KEY into);\n \n     /**\n      * @return new value instance.\n@@ -64,48 +65,51 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      * @param key for which to give size.\n      * @return size, in bytes, of given key.\n      */\n-    int keySize( KEY key );\n+    int keySize(KEY key);\n \n     /**\n      * @param value for which to give size.\n      * @return size, in bytes, of given value.\n      */\n-    int valueSize( VALUE value );\n+    int valueSize(VALUE value);\n \n     /**\n      * Writes contents of {@code key} into {@code cursor} at its current offset.\n      *\n      * @param cursor {@link PageCursor} to write into, at current offset.\n-     * @param key key containing data to write.\n+     * @param key    key containing data to write.\n      */\n-    void writeKey( PageCursor cursor, KEY key );\n+    void writeKey(PageCursor cursor, KEY key);\n \n     /**\n      * Writes contents of {@code value} into {@code cursor} at its current offset.\n      *\n      * @param cursor {@link PageCursor} to write into, at current offset.\n-     * @param value value containing data to write.\n+     * @param value  value containing data to write.\n      */\n-    void writeValue( PageCursor cursor, VALUE value );\n+    void writeValue(PageCursor cursor, VALUE value);\n \n     /**\n      * Reads key contents at {@code cursor} at its current offset into {@code key}.\n-     * @param cursor {@link PageCursor} to read from, at current offset.\n-     * @param into key instances to read into.\n+     *\n+     * @param cursor  {@link PageCursor} to read from, at current offset.\n+     * @param into    key instances to read into.\n      * @param keySize size of key to read or {@link #FIXED_SIZE_KEY} if key is fixed size.\n      */\n-    void readKey( PageCursor cursor, KEY into, int keySize );\n+    void readKey(PageCursor cursor, KEY into, int keySize);\n \n     /**\n      * Reads value contents at {@code cursor} at its current offset into {@code value}.\n-     * @param cursor {@link PageCursor} to read from, at current offset.\n-     * @param into value instances to read into.\n+     *\n+     * @param cursor    {@link PageCursor} to read from, at current offset.\n+     * @param into      value instances to read into.\n      * @param valueSize size of key to read or {@link #FIXED_SIZE_VALUE} if value is fixed size.\n      */\n-    void readValue( PageCursor cursor, VALUE into, int valueSize );\n+    void readValue(PageCursor cursor, VALUE into, int valueSize);\n \n     /**\n      * Indicate if keys and values are fixed or dynamix size.\n+     *\n      * @return true if keys and values are fixed size, otherwise true.\n      */\n     boolean fixedSize();\n@@ -113,13 +117,14 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n     /**\n      * Find shortest key (best effort) that separate left from right in sort order\n      * and initialize into with result.\n-     * @param left key that is less than right\n+     *\n+     * @param left  key that is less than right\n      * @param right key that is greater than left.\n-     * @param into will be initialized with result.\n+     * @param into  will be initialized with result.\n      */\n-    default void minimalSplitter( KEY left, KEY right, KEY into )\n+    default void minimalSplitter(KEY left, KEY right, KEY into)\n     {\n-        copyKey( right, into );\n+        copyKey(right, into);\n     }\n \n     /**\n@@ -145,7 +150,7 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      *\n      * @param cursor {@link PageCursor} to write into, at its current offset.\n      */\n-    default void writeMetaData( PageCursor cursor )\n+    default void writeMetaData(PageCursor cursor)\n     {   // no meta-data by default\n     }\n \n@@ -158,7 +163,7 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      *\n      * @param cursor {@link PageCursor} to read from, at its current offset.\n      */\n-    default void readMetaData( PageCursor cursor )\n+    default void readMetaData(PageCursor cursor)\n     {   // no meta-data by default\n     }\n \n@@ -166,19 +171,19 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      * Utility method for generating an {@link #identifier()}. Generates an 8-byte identifier from a short name\n      * plus a 4-byte identifier.\n      *\n-     * @param name name to be part of this identifier, must at most be 4 characters.\n+     * @param name       name to be part of this identifier, must at most be 4 characters.\n      * @param identifier to include into the returned named identifier.\n      * @return a long which is a combination of {@code name} and {@code identifier}.\n      */\n-    static long namedIdentifier( String name, int identifier )\n+    static long namedIdentifier(String name, int identifier)\n     {\n         char[] chars = name.toCharArray();\n-        if ( chars.length > 4 )\n+        if (chars.length > 4)\n         {\n-            throw new IllegalArgumentException( \"Maximum 4 character name, was '\" + name + \"'\" );\n+            throw new IllegalArgumentException(\"Maximum 4 character name, was '\" + name + \"'\");\n         }\n         long upperInt = 0;\n-        for ( char aChar : chars )\n+        for (char aChar : chars)\n         {\n             byte byteValue = (byte) (((byte) aChar) ^ ((byte) (aChar >> 8)));\n             upperInt <<= 8;\n@@ -200,38 +205,40 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      * important because it decides how to read and write entries in the tree.\n      *\n      * @param layoutIdentifier the stored layout identifier we want to check compatibility against.\n-     * @param majorVersion the stored major version we want to check compatibility against.\n-     * @param minorVersion the stored minor version we want to check compatibility against.\n+     * @param majorVersion     the stored major version we want to check compatibility against.\n+     * @param minorVersion     the stored minor version we want to check compatibility against.\n      * @return true if this layout is compatible with combination of identifier, major and minor version, false otherwise.\n      */\n-    boolean compatibleWith( long layoutIdentifier, int majorVersion, int minorVersion );\n+    boolean compatibleWith(long layoutIdentifier, int majorVersion, int minorVersion);\n \n     /**\n      * Initializes the given key to a state where it's lower than any possible key in the tree.\n+     *\n      * @param key key to initialize.\n      */\n-    void initializeAsLowest( KEY key );\n+    void initializeAsLowest(KEY key);\n \n     /**\n      * Initializes the given key to a state where it's higher than any possible key in the tree.\n+     *\n      * @param key key to initialize.\n      */\n-    void initializeAsHighest( KEY key );\n+    void initializeAsHighest(KEY key);\n \n     /**\n      * Adapter for {@link Layout}, which contains convenient standard implementations of some methods.\n      *\n-     * @param <KEY> type of key\n+     * @param <KEY>   type of key\n      * @param <VALUE> type of value\n      */\n-    abstract class Adapter<KEY, VALUE> implements Layout<KEY,VALUE>\n+    abstract class Adapter<KEY, VALUE> implements Layout<KEY, VALUE>\n     {\n         private final boolean fixedSize;\n         private final long identifier;\n         private final int majorVersion;\n         private final int minorVersion;\n \n-        protected Adapter( boolean fixedSize, long identifier, int majorVersion, int minorVersion )\n+        protected Adapter(boolean fixedSize, long identifier, int majorVersion, int minorVersion)\n         {\n             this.fixedSize = fixedSize;\n             this.identifier = identifier;\n@@ -266,12 +273,12 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n         @Override\n         public String toString()\n         {\n-            return format( \"%s[version:%d.%d, identifier:%d, fixedSize:%b]\",\n-                    getClass().getSimpleName(), majorVersion(), minorVersion(), identifier(), fixedSize() );\n+            return format(\"%s[version:%d.%d, identifier:%d, fixedSize:%b]\",\n+              getClass().getSimpleName(), majorVersion(), minorVersion(), identifier(), fixedSize());\n         }\n \n         @Override\n-        public boolean compatibleWith( long layoutIdentifier, int majorVersion, int minorVersion )\n+        public boolean compatibleWith(long layoutIdentifier, int majorVersion, int minorVersion)\n         {\n             return layoutIdentifier == identifier() && majorVersion == majorVersion() && minorVersion == minorVersion();\n         }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
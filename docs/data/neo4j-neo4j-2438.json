{
    "project_name": "neo4j-neo4j",
    "error_id": "2438",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "154",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "177",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "197",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "207",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "214",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "253",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "275",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "306",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2438/CommunityLockClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2438/CommunityLockClient.java\nindex b56d5b698ce..06d5a5eb989 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2438/CommunityLockClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2438/CommunityLockClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking.community;\n \n import org.eclipse.collections.api.block.procedure.Procedure;\n@@ -71,239 +72,222 @@ public class CommunityLockClient implements Locks.Client\n     // closed and eventually will block other clients.\n     private final LockClientStateHolder stateHolder = new LockClientStateHolder();\n \n-    public CommunityLockClient( LockManagerImpl manager )\n+    public CommunityLockClient(LockManagerImpl manager)\n     {\n         this.manager = manager;\n \n-        readReleaser = ( key, lockResource ) -> manager.releaseReadLock( lockResource, lockTransaction );\n-        writeReleaser = ( key, lockResource ) -> manager.releaseWriteLock( lockResource, lockTransaction );\n-        typeReadReleaser = value -> value.forEachKeyValue( readReleaser );\n-        typeWriteReleaser = value -> value.forEachKeyValue( writeReleaser );\n+        readReleaser = (key, lockResource) -> manager.releaseReadLock(lockResource, lockTransaction);\n+        writeReleaser = (key, lockResource) -> manager.releaseWriteLock(lockResource, lockTransaction);\n+        typeReadReleaser = value -> value.forEachKeyValue(readReleaser);\n+        typeWriteReleaser = value -> value.forEachKeyValue(writeReleaser);\n     }\n \n     @Override\n-    public void initialize( LeaseClient leaseClient, long transactionId )\n+    public void initialize(LeaseClient leaseClient, long transactionId)\n     {\n-        this.lockTransaction.setTransactionId( transactionId );\n+        this.lockTransaction.setTransactionId(transactionId);\n     }\n \n     @Override\n-    public void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceIds )\n+    public void acquireShared(LockTracer tracer, ResourceType resourceType, long... resourceIds)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            MutableLongObjectMap<LockResource> localLocks = localShared( resourceType );\n-            for ( long resourceId : resourceIds )\n+            MutableLongObjectMap<LockResource> localLocks = localShared(resourceType);\n+            for (long resourceId : resourceIds)\n             {\n-                LockResource resource = localLocks.get( resourceId );\n-                if ( resource != null )\n+                LockResource resource = localLocks.get(resourceId);\n+                if (resource != null)\n                 {\n                     resource.acquireReference();\n-                }\n-                else\n+                } else\n                 {\n-                    resource = new LockResource( resourceType, resourceId );\n-                    if ( manager.getReadLock( tracer, resource, lockTransaction ) )\n+                    resource = new LockResource(resourceType, resourceId);\n+                    if (manager.getReadLock(tracer, resource, lockTransaction))\n                     {\n-                        localLocks.put( resourceId, resource );\n-                    }\n-                    else\n+                        localLocks.put(resourceId, resource);\n+                    } else\n                     {\n-                        throw new LockClientStoppedException( this );\n+                        throw new LockClientStoppedException(this);\n                     }\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n     }\n \n     @Override\n-    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds )\n+    public void acquireExclusive(LockTracer tracer, ResourceType resourceType, long... resourceIds)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            MutableLongObjectMap<LockResource> localLocks = localExclusive( resourceType );\n-            for ( long resourceId : resourceIds )\n+            MutableLongObjectMap<LockResource> localLocks = localExclusive(resourceType);\n+            for (long resourceId : resourceIds)\n             {\n-                LockResource resource = localLocks.get( resourceId );\n-                if ( resource != null )\n+                LockResource resource = localLocks.get(resourceId);\n+                if (resource != null)\n                 {\n                     resource.acquireReference();\n-                }\n-                else\n+                } else\n                 {\n-                    resource = new LockResource( resourceType, resourceId );\n-                    if ( manager.getWriteLock( tracer, resource, lockTransaction ) )\n+                    resource = new LockResource(resourceType, resourceId);\n+                    if (manager.getWriteLock(tracer, resource, lockTransaction))\n                     {\n-                        localLocks.put( resourceId, resource );\n-                    }\n-                    else\n+                        localLocks.put(resourceId, resource);\n+                    } else\n                     {\n-                        throw new LockClientStoppedException( this );\n+                        throw new LockClientStoppedException(this);\n                     }\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n     }\n \n     @Override\n-    public boolean tryExclusiveLock( ResourceType resourceType, long resourceId )\n+    public boolean tryExclusiveLock(ResourceType resourceType, long resourceId)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            final MutableLongObjectMap<LockResource> localLocks = localExclusive( resourceType );\n-            LockResource resource = localLocks.get( resourceId );\n-            if ( resource != null )\n+            final MutableLongObjectMap<LockResource> localLocks = localExclusive(resourceType);\n+            LockResource resource = localLocks.get(resourceId);\n+            if (resource != null)\n             {\n                 resource.acquireReference();\n                 return true;\n-            }\n-            else\n+            } else\n             {\n-                resource = new LockResource( resourceType, resourceId );\n-                if ( manager.tryWriteLock( resource, lockTransaction ) )\n+                resource = new LockResource(resourceType, resourceId);\n+                if (manager.tryWriteLock(resource, lockTransaction))\n                 {\n-                    localLocks.put( resourceId, resource );\n+                    localLocks.put(resourceId, resource);\n                     return true;\n-                }\n-                else\n+                } else\n                 {\n                     return false;\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n     }\n \n     @Override\n-    public boolean trySharedLock( ResourceType resourceType, long resourceId )\n+    public boolean trySharedLock(ResourceType resourceType, long resourceId)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            final MutableLongObjectMap<LockResource> localLocks = localShared( resourceType );\n-            LockResource resource = localLocks.get( resourceId );\n-            if ( resource != null )\n+            final MutableLongObjectMap<LockResource> localLocks = localShared(resourceType);\n+            LockResource resource = localLocks.get(resourceId);\n+            if (resource != null)\n             {\n                 resource.acquireReference();\n                 return true;\n-            }\n-            else\n+            } else\n             {\n-                resource = new LockResource( resourceType, resourceId );\n-                if ( manager.tryReadLock( resource, lockTransaction ) )\n+                resource = new LockResource(resourceType, resourceId);\n+                if (manager.tryReadLock(resource, lockTransaction))\n                 {\n-                    localLocks.put( resourceId, resource );\n+                    localLocks.put(resourceId, resource);\n                     return true;\n-                }\n-                else\n+                } else\n                 {\n                     return false;\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n     }\n \n     @Override\n-    public boolean reEnterShared( ResourceType resourceType, long resourceId )\n+    public boolean reEnterShared(ResourceType resourceType, long resourceId)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            return reEnter( localShared( resourceType ), resourceId );\n-        }\n-        finally\n+            return reEnter(localShared(resourceType), resourceId);\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n     }\n \n     @Override\n-    public boolean reEnterExclusive( ResourceType resourceType, long resourceId )\n+    public boolean reEnterExclusive(ResourceType resourceType, long resourceId)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            return reEnter( localExclusive( resourceType ), resourceId );\n-        }\n-        finally\n+            return reEnter(localExclusive(resourceType), resourceId);\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n     }\n \n-    private static boolean reEnter( LongObjectMap<LockResource> localLocks, long resourceId )\n+    private static boolean reEnter(LongObjectMap<LockResource> localLocks, long resourceId)\n     {\n-        LockResource resource = localLocks.get( resourceId );\n-        if ( resource != null )\n+        LockResource resource = localLocks.get(resourceId);\n+        if (resource != null)\n         {\n             resource.acquireReference();\n             return true;\n-        }\n-        else\n+        } else\n         {\n             return false;\n         }\n     }\n \n     @Override\n-    public void releaseShared( ResourceType resourceType, long... resourceIds )\n+    public void releaseShared(ResourceType resourceType, long... resourceIds)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            final MutableLongObjectMap<LockResource> localLocks = localShared( resourceType );\n-            for ( long resourceId : resourceIds )\n+            final MutableLongObjectMap<LockResource> localLocks = localShared(resourceType);\n+            for (long resourceId : resourceIds)\n             {\n-                LockResource resource = localLocks.get( resourceId );\n-                if ( resource.releaseReference() == 0 )\n+                LockResource resource = localLocks.get(resourceId);\n+                if (resource.releaseReference() == 0)\n                 {\n-                    localLocks.remove( resourceId );\n-                    manager.releaseReadLock( new LockResource( resourceType, resourceId ), lockTransaction );\n+                    localLocks.remove(resourceId);\n+                    manager.releaseReadLock(new LockResource(resourceType, resourceId), lockTransaction);\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n     }\n \n     @Override\n-    public void releaseExclusive( ResourceType resourceType, long... resourceIds )\n+    public void releaseExclusive(ResourceType resourceType, long... resourceIds)\n     {\n-        stateHolder.incrementActiveClients( this );\n+        stateHolder.incrementActiveClients(this);\n         try\n         {\n-            final MutableLongObjectMap<LockResource> localLocks = localExclusive( resourceType );\n-            for ( long resourceId : resourceIds )\n+            final MutableLongObjectMap<LockResource> localLocks = localExclusive(resourceType);\n+            for (long resourceId : resourceIds)\n             {\n-                LockResource resource = localLocks.get( resourceId );\n-                if ( resource.releaseReference() == 0 )\n+                LockResource resource = localLocks.get(resourceId);\n+                if (resource.releaseReference() == 0)\n                 {\n-                    localLocks.remove( resourceId );\n-                    manager.releaseWriteLock( new LockResource( resourceType, resourceId ), lockTransaction );\n+                    localLocks.remove(resourceId);\n+                    manager.releaseWriteLock(new LockResource(resourceType, resourceId), lockTransaction);\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             stateHolder.decrementActiveClients();\n         }\n@@ -312,14 +296,14 @@ public class CommunityLockClient implements Locks.Client\n     @Override\n     public void prepare()\n     {\n-        stateHolder.prepare( this );\n+        stateHolder.prepare(this);\n     }\n \n     @Override\n     public void stop()\n     {\n         // closing client to prevent any new client to come\n-        if ( stateHolder.stopClient() )\n+        if (stateHolder.stopClient())\n         {\n             // wake up and terminate waiters\n             terminateAllWaitersAndWaitForClientsToLeave();\n@@ -331,10 +315,10 @@ public class CommunityLockClient implements Locks.Client\n     {\n         terminateAllWaiters();\n         // wait for all active clients to go and terminate latecomers\n-        while ( stateHolder.hasActiveClients() )\n+        while (stateHolder.hasActiveClients())\n         {\n             terminateAllWaiters();\n-            LockSupport.parkNanos( TimeUnit.MILLISECONDS.toNanos( 20 ) );\n+            LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(20));\n         }\n     }\n \n@@ -344,13 +328,13 @@ public class CommunityLockClient implements Locks.Client\n         stateHolder.closeClient();\n         terminateAllWaitersAndWaitForClientsToLeave();\n         releaseLocks();\n-        lockTransaction.setTransactionId( INVALID_TRANSACTION_ID );\n+        lockTransaction.setTransactionId(INVALID_TRANSACTION_ID);\n     }\n \n     private synchronized void releaseLocks()\n     {\n-        exclusiveLocks.forEachValue( typeWriteReleaser );\n-        sharedLocks.forEachValue( typeReadReleaser );\n+        exclusiveLocks.forEachValue(typeWriteReleaser);\n+        sharedLocks.forEachValue(typeReadReleaser);\n         exclusiveLocks.clear();\n         sharedLocks.clear();\n     }\n@@ -358,11 +342,11 @@ public class CommunityLockClient implements Locks.Client\n     // waking up and terminate all waiters that were waiting for any lock for current client\n     private void terminateAllWaiters()\n     {\n-        manager.accept( lock ->\n+        manager.accept(lock ->\n         {\n-            lock.terminateLockRequestsForLockTransaction( lockTransaction );\n+            lock.terminateLockRequestsForLockTransaction(lockTransaction);\n             return false;\n-        } );\n+        });\n     }\n \n     @Override\n@@ -375,8 +359,8 @@ public class CommunityLockClient implements Locks.Client\n     public Stream<ActiveLock> activeLocks()\n     {\n         List<ActiveLock> locks = new ArrayList<>();\n-        exclusiveLocks.forEachKeyValue( collectActiveLocks( locks, EXCLUSIVE, lockTransaction.getTransactionId() ) );\n-        sharedLocks.forEachKeyValue( collectActiveLocks( locks, SHARED, lockTransaction.getTransactionId() ) );\n+        exclusiveLocks.forEachKeyValue(collectActiveLocks(locks, EXCLUSIVE, lockTransaction.getTransactionId()));\n+        sharedLocks.forEachKeyValue(collectActiveLocks(locks, SHARED, lockTransaction.getTransactionId()));\n         return locks.stream();\n     }\n \n@@ -384,8 +368,8 @@ public class CommunityLockClient implements Locks.Client\n     public long activeLockCount()\n     {\n         LockCounter counter = new LockCounter();\n-        exclusiveLocks.forEachKeyValue( counter );\n-        sharedLocks.forEachKeyValue( counter );\n+        exclusiveLocks.forEachKeyValue(counter);\n+        sharedLocks.forEachKeyValue(counter);\n         return counter.locks;\n     }\n \n@@ -394,34 +378,34 @@ public class CommunityLockClient implements Locks.Client\n         long locks;\n \n         @Override\n-        public void value( int key, LongObjectMap<LockResource> value )\n+        public void value(int key, LongObjectMap<LockResource> value)\n         {\n             locks += value.size();\n         }\n     }\n \n-    private static IntObjectProcedure<LongObjectMap<LockResource>> collectActiveLocks( List<ActiveLock> locks, LockType lockType, long userTransactionId )\n+    private static IntObjectProcedure<LongObjectMap<LockResource>> collectActiveLocks(List<ActiveLock> locks, LockType lockType, long userTransactionId)\n     {\n-        return ( typeId, exclusive ) ->\n+        return (typeId, exclusive) ->\n         {\n-            ResourceType resourceType = ResourceTypes.fromId( typeId );\n-            exclusive.forEachKeyValue( ( resourceId, lock ) -> locks.add( new ActiveLock( resourceType, lockType, userTransactionId, resourceId ) ) );\n+            ResourceType resourceType = ResourceTypes.fromId(typeId);\n+            exclusive.forEachKeyValue((resourceId, lock) -> locks.add(new ActiveLock(resourceType, lockType, userTransactionId, resourceId)));\n         };\n     }\n \n-    private MutableLongObjectMap<LockResource> localShared( ResourceType resourceType )\n+    private MutableLongObjectMap<LockResource> localShared(ResourceType resourceType)\n     {\n-        return sharedLocks.getIfAbsentPut( resourceType.typeId(), LongObjectHashMap::new );\n+        return sharedLocks.getIfAbsentPut(resourceType.typeId(), LongObjectHashMap::new);\n     }\n \n-    private MutableLongObjectMap<LockResource> localExclusive( ResourceType resourceType )\n+    private MutableLongObjectMap<LockResource> localExclusive(ResourceType resourceType)\n     {\n-        return exclusiveLocks.getIfAbsentPut( resourceType.typeId(), LongObjectHashMap::new );\n+        return exclusiveLocks.getIfAbsentPut(resourceType.typeId(), LongObjectHashMap::new);\n     }\n \n     @Override\n     public String toString()\n     {\n-        return format( \"%s[%d]\", getClass().getSimpleName(), getLockSessionId() );\n+        return format(\"%s[%d]\", getClass().getSimpleName(), getLockSessionId());\n     }\n }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
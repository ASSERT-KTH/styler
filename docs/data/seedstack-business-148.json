{
    "project_name": "seedstack-business",
    "error_id": "148",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport com.google.common.collect.HashMultimap;\nimport com.google.common.collect.Multimap;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/148/DomainModule.java\nindex 4929c9fbcf3..0ac6ed6c8f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/148/DomainModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.HashMultimap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/148/DomainModule.java\nindex 4929c9fbcf3..43dca7f7400 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/148/DomainModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.HashMultimap;\n@@ -50,9 +51,9 @@ class DomainModule extends AbstractModule {\n     private final Collection<Class<? extends DomainEventInterceptor>> eventInterceptors;\n \n     DomainModule(Map<Key<?>, Class<?>> bindings, Collection<BindingStrategy> bindingStrategies,\n-            Collection<Class<? extends IdentityGenerator>> identityGeneratorClasses,\n-            Collection<Class<? extends DomainEventInterceptor>> eventInterceptors,\n-            Collection<Class<? extends DomainEventHandler>> eventHandlerClasses) {\n+                 Collection<Class<? extends IdentityGenerator>> identityGeneratorClasses,\n+                 Collection<Class<? extends DomainEventInterceptor>> eventInterceptors,\n+                 Collection<Class<? extends DomainEventHandler>> eventHandlerClasses) {\n         this.bindings = bindings;\n         this.bindingStrategies = bindingStrategies;\n         this.identityGeneratorClasses = identityGeneratorClasses;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 310).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "column": "5",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "column": "121",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "column": "69",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/148/DomainModule.java\nindex 4929c9fbcf3..f641ee2c066 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/148/DomainModule.java\n@@ -49,11 +49,8 @@ class DomainModule extends AbstractModule {\n     private final Collection<Class<? extends DomainEventHandler>> eventHandlerClasses;\n     private final Collection<Class<? extends DomainEventInterceptor>> eventInterceptors;\n \n-    DomainModule(Map<Key<?>, Class<?>> bindings, Collection<BindingStrategy> bindingStrategies,\n-            Collection<Class<? extends IdentityGenerator>> identityGeneratorClasses,\n-            Collection<Class<? extends DomainEventInterceptor>> eventInterceptors,\n-            Collection<Class<? extends DomainEventHandler>> eventHandlerClasses) {\n-        this.bindings = bindings;\n+    DomainModule(Map<Key<?>, Class<?>> bindings, Collection<BindingStrategy> bindingStrategies, Collection<Class<? extends IdentityGenerator>> identityGeneratorClasses, Collection<Class<? extends DomainEventInterceptor>> eventInterceptors, Collection<Class<? extends DomainEventHandler>> eventHandlerClasses) {\n+    this.bindings = bindings;\n         this.bindingStrategies = bindingStrategies;\n         this.identityGeneratorClasses = identityGeneratorClasses;\n         this.eventInterceptors = eventInterceptors;\n@@ -83,15 +80,14 @@ class DomainModule extends AbstractModule {\n                     .ifPresent(qualifier -> bind(findIdentityGeneratorInterface(identityGeneratorClass))\n                             .annotatedWith(qualifier)\n                             .to(identityGeneratorClass));\n-        }\n+    }\n         bind(IdentityService.class).to(IdentityServiceImpl.class);\n         IdentityInterceptor identityInterceptor = new IdentityInterceptor();\n         requestInjection(identityInterceptor);\n         bindInterceptor(Matchers.subclassesOf(Factory.class), factoryMethods(), identityInterceptor);\n \n         // Domain events\n-        Multimap<Class<? extends DomainEvent>, Class<? extends DomainEventHandler>> eventHandlersByEvent =\n-                HashMultimap.create();\n+        Multimap<Class<? extends DomainEvent>, Class<? extends DomainEventHandler>> eventHandlersByEvent = HashMultimap.create();\n         for (Class<? extends DomainEventHandler> eventHandlerClass : eventHandlerClasses) {\n             eventHandlersByEvent.put(getEventClass(eventHandlerClass), eventHandlerClass);\n             bind(eventHandlerClass);\n@@ -99,8 +95,7 @@ class DomainModule extends AbstractModule {\n         // Domain Event Intercepter\n         for (Class<? extends DomainEventInterceptor> eventInterceptorClass : eventInterceptors) {\n             bind(eventInterceptorClass);\n-\n-        }\n+    }\n \n         bind(new EventHandlersByEventTypeLiteral()).toInstance(eventHandlersByEvent);\n         bind(DomainEventPublisher.class).to(DomainEventPublisherImpl.class)\n@@ -113,27 +108,23 @@ class DomainModule extends AbstractModule {\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private Class<IdentityGenerator> findIdentityGeneratorInterface(\n-            Class<? extends IdentityGenerator> identityGeneratorClass) {\n-        return (Class<IdentityGenerator>) Classes.from(identityGeneratorClass)\n+    private Class<IdentityGenerator> findIdentityGeneratorInterface(Class<? extends IdentityGenerator> identityGeneratorClass) {\n+    return (Class<IdentityGenerator>) Classes.from(identityGeneratorClass)\n                 .traversingInterfaces()\n                 .traversingSuperclasses()\n                 .classes()\n                 .filter(ClassPredicates.classIsInterface()\n-                        .and(ClassPredicates.classIsAssignableFrom(IdentityGenerator.class)))\n-                .findFirst().<BaseException>orElseThrow(\n-                        () -> BusinessException.createNew(BusinessErrorCode.ILLEGAL_IDENTITY_GENERATOR)\n+                        .and(ClassPredicates.classIsAssignableFrom(IdentityGenerator.class))).findFirst().<BaseException> orElseThrow(() -> BusinessException.createNew(BusinessErrorCode.ILLEGAL_IDENTITY_GENERATOR)\n                                 .put(\"class\", identityGeneratorClass));\n     }\n \n     private Matcher<Method> factoryMethods() {\n-        return new MethodMatcherBuilder(ExecutablePredicates.<Method>executableBelongsToClassAssignableTo(Factory.class)\n+        return new MethodMatcherBuilder(ExecutablePredicates.<Method> executableBelongsToClassAssignableTo(Factory.class)\n                 .and(m -> !m.getName().equals(GET_PRODUCED_CLASS))\n-                .and(CreateResolver.INSTANCE)\n-        ).build();\n+                .and(CreateResolver.INSTANCE)).build();\n     }\n \n     private static class EventHandlersByEventTypeLiteral extends TypeLiteral<Multimap<Class<? extends DomainEvent>,\n             Class<? extends DomainEventHandler>>> {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 310).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "column": "71",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 70, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "75",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 74, expected level should be 78.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "column": "71",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 70, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "column": "67",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 66, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "74",
                    "column": "69",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 68, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "column": "65",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 64, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "102",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 101, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 234).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "102",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 101, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "column": "172",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "column": "106",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 105, expected level should be 109.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "column": "106",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 105, expected level should be 109.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "column": "98",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 97, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "column": "93",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 92, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "column": "93",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 92, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "89",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 88, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "column": "99",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 98, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "column": "95",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 94, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "column": "43",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "19",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/148/DomainModule.java\nindex 4929c9fbcf3..b760ca37014 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/148/DomainModule.java\n@@ -39,8 +39,9 @@ import org.seedstack.shed.reflect.ExecutablePredicates;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-@SuppressWarnings(\"rawtypes\")\n-class DomainModule extends AbstractModule {\n+\n+@SuppressWarnings(\"rawtypes\")class DomainModule extends AbstractModule {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(DomainModule.class);\n     private static final String GET_PRODUCED_CLASS = \"getProducedClass\";\n     private final Map<Key<?>, Class<?>> bindings;\n@@ -49,10 +50,7 @@ class DomainModule extends AbstractModule {\n     private final Collection<Class<? extends DomainEventHandler>> eventHandlerClasses;\n     private final Collection<Class<? extends DomainEventInterceptor>> eventInterceptors;\n \n-    DomainModule(Map<Key<?>, Class<?>> bindings, Collection<BindingStrategy> bindingStrategies,\n-            Collection<Class<? extends IdentityGenerator>> identityGeneratorClasses,\n-            Collection<Class<? extends DomainEventInterceptor>> eventInterceptors,\n-            Collection<Class<? extends DomainEventHandler>> eventHandlerClasses) {\n+    DomainModule(Map<Key<?>, Class<?>> bindings, Collection<BindingStrategy> bindingStrategies, Collection<Class<? extends IdentityGenerator>> identityGeneratorClasses, Collection<Class<? extends DomainEventInterceptor>> eventInterceptors, Collection<Class<? extends DomainEventHandler>> eventHandlerClasses) {\n         this.bindings = bindings;\n         this.bindingStrategies = bindingStrategies;\n         this.identityGeneratorClasses = identityGeneratorClasses;\n@@ -65,46 +63,42 @@ class DomainModule extends AbstractModule {\n         bind(DomainRegistry.class).to(DomainRegistryImpl.class);\n \n         // Simple bindings\n-        for (Entry<Key<?>, Class<?>> binding : bindings.entrySet()) {\n-            LOGGER.trace(\"Binding {} to {}\", binding.getKey(), binding.getValue()\n-                    .getSimpleName());\n-            bind(binding.getKey()).to(Classes.cast(binding.getValue()));\n-        }\n+        for(Entry<Key<?>, Class<?>> binding :bindings.entrySet()) {\n+                                                                      LOGGER.trace(\"Binding {} to {}\", binding.getKey(), binding.getValue()\n+                                                                          .getSimpleName());\n+                                                                      bind(binding.getKey()).to(Classes.cast(binding.getValue()));\n+                                                                  }\n \n         // Binding strategies\n-        for (BindingStrategy bindingStrategy : bindingStrategies) {\n-            bindingStrategy.resolve(binder());\n-        }\n+        for(BindingStrategy bindingStrategy :bindingStrategies) {\n+                                                                    bindingStrategy.resolve(binder());\n+                                                                }\n \n         // Identity generation\n-        for (Class<? extends IdentityGenerator> identityGeneratorClass : identityGeneratorClasses) {\n-            bind(identityGeneratorClass);\n-            BusinessUtils.getQualifier(identityGeneratorClass)\n-                    .ifPresent(qualifier -> bind(findIdentityGeneratorInterface(identityGeneratorClass))\n-                            .annotatedWith(qualifier)\n-                            .to(identityGeneratorClass));\n-        }\n+        for(Class<? extends IdentityGenerator> identityGeneratorClass :identityGeneratorClasses) {\n+                                                                                                     bind(identityGeneratorClass);\n+                                                                                                     BusinessUtils.getQualifier(identityGeneratorClass).ifPresent(qualifier-> bind(findIdentityGeneratorInterface(identityGeneratorClass))\n+                                                                                                         .annotatedWith(qualifier)\n+                                                                                                         .to(identityGeneratorClass));\n+                                                                                                 }\n         bind(IdentityService.class).to(IdentityServiceImpl.class);\n         IdentityInterceptor identityInterceptor = new IdentityInterceptor();\n         requestInjection(identityInterceptor);\n         bindInterceptor(Matchers.subclassesOf(Factory.class), factoryMethods(), identityInterceptor);\n \n         // Domain events\n-        Multimap<Class<? extends DomainEvent>, Class<? extends DomainEventHandler>> eventHandlersByEvent =\n-                HashMultimap.create();\n-        for (Class<? extends DomainEventHandler> eventHandlerClass : eventHandlerClasses) {\n-            eventHandlersByEvent.put(getEventClass(eventHandlerClass), eventHandlerClass);\n-            bind(eventHandlerClass);\n-        }\n+        Multimap<Class<? extends DomainEvent>, Class<? extends DomainEventHandler>> eventHandlersByEvent = HashMultimap.create();\n+        for(Class<? extends DomainEventHandler> eventHandlerClass :eventHandlerClasses) {\n+                                                                                            eventHandlersByEvent.put(getEventClass(eventHandlerClass), eventHandlerClass);\n+                                                                                            bind(eventHandlerClass);\n+                                                                                        }\n         // Domain Event Intercepter\n-        for (Class<? extends DomainEventInterceptor> eventInterceptorClass : eventInterceptors) {\n-            bind(eventInterceptorClass);\n-\n-        }\n-\n+        for(Class<? extends DomainEventInterceptor> eventInterceptorClass :eventInterceptors) {\n+                                                                                                  bind(eventInterceptorClass);\n+                                                                                              }\n         bind(new EventHandlersByEventTypeLiteral()).toInstance(eventHandlersByEvent);\n-        bind(DomainEventPublisher.class).to(DomainEventPublisherImpl.class)\n-                .in(Scopes.SINGLETON);\n+        bind(DomainEventPublisher.class)\n+            .to(DomainEventPublisherImpl.class).in(Scopes.SINGLETON);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -113,27 +107,25 @@ class DomainModule extends AbstractModule {\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private Class<IdentityGenerator> findIdentityGeneratorInterface(\n-            Class<? extends IdentityGenerator> identityGeneratorClass) {\n+    private Class<IdentityGenerator> findIdentityGeneratorInterface(Class<? extends IdentityGenerator> identityGeneratorClass) {\n         return (Class<IdentityGenerator>) Classes.from(identityGeneratorClass)\n-                .traversingInterfaces()\n-                .traversingSuperclasses()\n-                .classes()\n-                .filter(ClassPredicates.classIsInterface()\n-                        .and(ClassPredicates.classIsAssignableFrom(IdentityGenerator.class)))\n-                .findFirst().<BaseException>orElseThrow(\n-                        () -> BusinessException.createNew(BusinessErrorCode.ILLEGAL_IDENTITY_GENERATOR)\n-                                .put(\"class\", identityGeneratorClass));\n+            .traversingInterfaces()\n+            .traversingSuperclasses()\n+            .classes()\n+            .filter(ClassPredicates.classIsInterface()\n+                .and(ClassPredicates.classIsAssignableFrom(IdentityGenerator.class)))\n+            .findFirst()\n+            .<BaseException>orElseThrow(()-> BusinessException.createNew(BusinessErrorCode.ILLEGAL_IDENTITY_GENERATOR)\n+                .put(\"class\", identityGeneratorClass));\n     }\n \n     private Matcher<Method> factoryMethods() {\n         return new MethodMatcherBuilder(ExecutablePredicates.<Method>executableBelongsToClassAssignableTo(Factory.class)\n-                .and(m -> !m.getName().equals(GET_PRODUCED_CLASS))\n-                .and(CreateResolver.INSTANCE)\n-        ).build();\n+            .and(m-> ! m.getName()\n+                .equals(GET_PRODUCED_CLASS))\n+            .and(CreateResolver.INSTANCE))\n+                .build();\n     }\n \n-    private static class EventHandlersByEventTypeLiteral extends TypeLiteral<Multimap<Class<? extends DomainEvent>,\n-            Class<? extends DomainEventHandler>>> {\n-    }\n-}\n+    private static class EventHandlersByEventTypeLiteral extends TypeLiteral<Multimap<Class<? extends DomainEvent>, Class<? extends DomainEventHandler>>> {}\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/148/DomainModule.java\nindex 4929c9fbcf3..0ac6ed6c8f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/148/DomainModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.HashMultimap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/148/DomainModule.java\nindex 4929c9fbcf3..0ac6ed6c8f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/148/DomainModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/148/DomainModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.HashMultimap;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
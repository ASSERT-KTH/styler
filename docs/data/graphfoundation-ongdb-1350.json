{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1350",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1350/MasterServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1350/MasterServer.java\nindex 51192202fc2..fca4f699b83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1350/MasterServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1350/MasterServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.com.master;\n \n import org.neo4j.com.Protocol;\n@@ -41,30 +42,30 @@ import static org.neo4j.kernel.ha.com.slave.MasterClient.CURRENT;\n  */\n public class MasterServer extends Server<Master, Void>\n {\n-    public static final int FRAME_LENGTH = Protocol.DEFAULT_FRAME_LENGTH;\n-    private final ConversationManager conversationManager;\n-    private final HaRequestType210 requestTypes;\n+  public static final int FRAME_LENGTH = Protocol.DEFAULT_FRAME_LENGTH;\n+  private final ConversationManager conversationManager;\n+  private final HaRequestType210 requestTypes;\n \n-    public MasterServer( Master requestTarget, LogProvider logProvider, Configuration config,\n-                         TxChecksumVerifier txVerifier, ByteCounterMonitor byteCounterMonitor,\n-                         RequestMonitor requestMonitor, ConversationManager conversationManager,\n-                         LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n-    {\n-        super( requestTarget, config, logProvider, FRAME_LENGTH, CURRENT, txVerifier,\n-                Clocks.systemClock(), byteCounterMonitor, requestMonitor );\n-        this.conversationManager = conversationManager;\n-        this.requestTypes = new HaRequestType210( entryReader, MasterClient320.LOCK_RESULT_OBJECT_SERIALIZER );\n-    }\n+  public MasterServer(Master requestTarget, LogProvider logProvider, Configuration config,\n+                      TxChecksumVerifier txVerifier, ByteCounterMonitor byteCounterMonitor,\n+                      RequestMonitor requestMonitor, ConversationManager conversationManager,\n+                      LogEntryReader<ReadableClosablePositionAwareChannel> entryReader)\n+  {\n+    super(requestTarget, config, logProvider, FRAME_LENGTH, CURRENT, txVerifier,\n+        Clocks.systemClock(), byteCounterMonitor, requestMonitor);\n+    this.conversationManager = conversationManager;\n+    this.requestTypes = new HaRequestType210(entryReader, MasterClient320.LOCK_RESULT_OBJECT_SERIALIZER);\n+  }\n \n-    @Override\n-    protected RequestType getRequestContext( byte id )\n-    {\n-        return requestTypes.type( id );\n-    }\n+  @Override\n+  protected RequestType getRequestContext(byte id)\n+  {\n+    return requestTypes.type(id);\n+  }\n \n-    @Override\n-    protected void stopConversation( RequestContext context )\n-    {\n-        conversationManager.stop( context );\n-    }\n+  @Override\n+  protected void stopConversation(RequestContext context)\n+  {\n+    conversationManager.stop(context);\n+  }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1350/MasterServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1350/MasterServer.java\nindex 51192202fc2..38067f8adf9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1350/MasterServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1350/MasterServer.java\n@@ -45,14 +45,12 @@ public class MasterServer extends Server<Master, Void>\n     private final ConversationManager conversationManager;\n     private final HaRequestType210 requestTypes;\n \n-    public MasterServer( Master requestTarget, LogProvider logProvider, Configuration config,\n-                         TxChecksumVerifier txVerifier, ByteCounterMonitor byteCounterMonitor,\n-                         RequestMonitor requestMonitor, ConversationManager conversationManager,\n-                         LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n-    {\n+    public MasterServer( Master requestTarget, LogProvider logProvider, Configuration config, TxChecksumVerifier txVerifier, ByteCounterMonitor byteCounterMonitor,\n+                         RequestMonitor requestMonitor, ConversationManager conversationManager, LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n+{\n         super( requestTarget, config, logProvider, FRAME_LENGTH, CURRENT, txVerifier,\n                 Clocks.systemClock(), byteCounterMonitor, requestMonitor );\n-        this.conversationManager = conversationManager;\n+this.conversationManager = conversationManager;\n         this.requestTypes = new HaRequestType210( entryReader, MasterClient320.LOCK_RESULT_OBJECT_SERIALIZER );\n     }\n \n@@ -67,4 +65,4 @@ public class MasterServer extends Server<Master, Void>\n     {\n         conversationManager.stop( context );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
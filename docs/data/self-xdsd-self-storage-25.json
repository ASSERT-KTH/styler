{
    "project_name": "self-xdsd-self-storage",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "94",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            failReason\n        ).execute();\n        if(inserted != 1) {\n            throw new IllegalStateException(\n                \"Something went wrong while trying to register \"\n                + \"a Payment for Invoice \" + invoice.invoiceId() + \". \"",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/25/SelfPayments.java\nindex 5323fef01b2..417ed0c9cf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/25/SelfPayments.java\n@@ -91,7 +91,7 @@ public final class SelfPayments implements Payments {\n             status,\n             failReason\n         ).execute();\n-        if(inserted != 1) {\n+        if (inserted != 1) {\n             throw new IllegalStateException(\n                 \"Something went wrong while trying to register \"\n                 + \"a Payment for Invoice \" + invoice.invoiceId() + \". \"\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/25/SelfPayments.java\nindex 5323fef01b2..104f6781931 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/25/SelfPayments.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.Invoice;\n@@ -37,6 +38,7 @@ import static com.selfxdsd.storage.generated.jooq.Tables.SLF_PAYMENTS_XDSD;\n \n /**\n  * All the Payments in Self XDSD.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.67\n@@ -55,7 +57,8 @@ public final class SelfPayments implements Payments {\n \n     /**\n      * Ctor.\n-     * @param storage Parent Storage.\n+     *\n+     * @param storage  Parent Storage.\n      * @param database Database.\n      */\n     public SelfPayments(\n@@ -91,10 +94,10 @@ public final class SelfPayments implements Payments {\n             status,\n             failReason\n         ).execute();\n-        if(inserted != 1) {\n+        if (inserted != 1) {\n             throw new IllegalStateException(\n                 \"Something went wrong while trying to register \"\n-                + \"a Payment for Invoice \" + invoice.invoiceId() + \". \"\n+                    + \"a Payment for Invoice \" + invoice.invoiceId() + \". \"\n             );\n         } else {\n             return new StoredPayment(\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 20, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/25/SelfPayments.java\nindex 5323fef01b2..22f877d7bc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/25/SelfPayments.java\n@@ -58,23 +58,19 @@ public final class SelfPayments implements Payments {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfPayments(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+    public SelfPayments(final Storage storage,\n+        final Database database) {\n         this.storage = storage;\n         this.database = database;\n     }\n \n     @Override\n-    public Payment register(\n-        final Invoice invoice,\n+    public Payment register(final Invoice invoice,\n         final String transactionId,\n         final LocalDateTime timestamp,\n         final BigDecimal value,\n         final String status,\n-        final String failReason\n-    ) {\n+        final String failReason) {\n         final int inserted = this.database.jooq().insertInto(\n             SLF_PAYMENTS_XDSD,\n             SLF_PAYMENTS_XDSD.INVOICEID,\n@@ -103,8 +99,7 @@ public final class SelfPayments implements Payments {\n                 timestamp,\n                 value,\n                 status,\n-                failReason,\n-                this.storage\n+                failReason, this.storage\n             );\n         }\n     }\n@@ -113,12 +108,7 @@ public final class SelfPayments implements Payments {\n     public Payments ofInvoice(final Invoice invoice) {\n         return new InvoicePayments(\n             invoice,\n-            () -> SelfPayments.this.database.jooq()\n-                .select()\n-                .from(SLF_PAYMENTS_XDSD)\n-                .where(SLF_PAYMENTS_XDSD.INVOICEID.eq(invoice.invoiceId()))\n-                .stream()\n-                .map(\n+            () -> SelfPayments.this.database.jooq().select().from(SLF_PAYMENTS_XDSD).where(SLF_PAYMENTS_XDSD.INVOICEID.eq(invoice.invoiceId())).stream().map(\n                     rec -> new StoredPayment(\n                         invoice.invoiceId(),\n                         rec.getValue(SLF_PAYMENTS_XDSD.TRANSACTIONID),\n@@ -127,11 +117,9 @@ public final class SelfPayments implements Payments {\n                             rec.getValue(SLF_PAYMENTS_XDSD.VALUE).longValue()\n                         ),\n                         rec.getValue(SLF_PAYMENTS_XDSD.STATUS),\n-                        rec.get(SLF_PAYMENTS_XDSD.FAILREASON),\n-                        this.storage\n+                        rec.get(SLF_PAYMENTS_XDSD.FAILREASON), this.storage\n                     )\n-                ),\n-            this.storage\n+                ), this.storage\n         );\n     }\n \n@@ -141,5 +129,4 @@ public final class SelfPayments implements Payments {\n             \"You cannot iterate over all the Payments in Self!\"\n         );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 72, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 30, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 26, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "'}' at column 27 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "103",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "135",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "155",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "175",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 232).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "column": "199",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "column": "199",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "column": "205",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "219",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "257",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "column": "199",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 224).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "column": "194",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "column": "183",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "138",
                    "column": "22",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/25/SelfPayments.java\nindex 5323fef01b2..0752847493d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/25/SelfPayments.java\n@@ -28,11 +28,11 @@ import com.selfxdsd.api.Payments;\n import com.selfxdsd.api.storage.Storage;\n import com.selfxdsd.core.contracts.invoices.InvoicePayments;\n import com.selfxdsd.core.contracts.invoices.StoredPayment;\n-\n import java.math.BigDecimal;\n import java.time.LocalDateTime;\n import java.util.Iterator;\n \n+\n import static com.selfxdsd.storage.generated.jooq.Tables.SLF_PAYMENTS_XDSD;\n \n /**\n@@ -41,16 +41,21 @@ import static com.selfxdsd.storage.generated.jooq.Tables.SLF_PAYMENTS_XDSD;\n  * @version $Id$\n  * @since 0.0.67\n  */\n+\n+\n public final class SelfPayments implements Payments {\n \n     /**\n      * Parent Storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Database.\n      */\n+\n     private final Database database;\n \n     /**\n@@ -58,88 +63,81 @@ public final class SelfPayments implements Payments {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfPayments(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+\n+\n+    public SelfPayments(final Storage storage, final Database database) {\n         this.storage = storage;\n-        this.database = database;\n+\n+\n+                                                                        this.database = database;\n     }\n \n     @Override\n     public Payment register(\n         final Invoice invoice,\n-        final String transactionId,\n-        final LocalDateTime timestamp,\n-        final BigDecimal value,\n-        final String status,\n-        final String failReason\n-    ) {\n-        final int inserted = this.database.jooq().insertInto(\n-            SLF_PAYMENTS_XDSD,\n-            SLF_PAYMENTS_XDSD.INVOICEID,\n-            SLF_PAYMENTS_XDSD.TRANSACTIONID,\n-            SLF_PAYMENTS_XDSD.PAYMENT_TIMESTAMP,\n-            SLF_PAYMENTS_XDSD.VALUE,\n-            SLF_PAYMENTS_XDSD.STATUS,\n-            SLF_PAYMENTS_XDSD.FAILREASON\n-        ).values(\n-            invoice.invoiceId(),\n-            transactionId,\n-            timestamp,\n-            value.toBigIntegerExact(),\n-            status,\n-            failReason\n-        ).execute();\n-        if(inserted != 1) {\n-            throw new IllegalStateException(\n-                \"Something went wrong while trying to register \"\n-                + \"a Payment for Invoice \" + invoice.invoiceId() + \". \"\n-            );\n-        } else {\n-            return new StoredPayment(\n-                invoice.invoiceId(),\n-                transactionId,\n-                timestamp,\n-                value,\n-                status,\n-                failReason,\n-                this.storage\n-            );\n-        }\n+final String transactionId,\n+final LocalDateTime timestamp,\n+final BigDecimal value,\n+final String status, final String failReason) {\n+        final int inserted=\n+            this.database.jooq() .insertInto(\n+                                     SLF_PAYMENTS_XDSD,\n+                                     SLF_PAYMENTS_XDSD.INVOICEID,\n+                                     SLF_PAYMENTS_XDSD.TRANSACTIONID,\n+                                     SLF_PAYMENTS_XDSD.PAYMENT_TIMESTAMP,\n+                                     SLF_PAYMENTS_XDSD.VALUE,\n+                                     SLF_PAYMENTS_XDSD.STATUS,\n+                                     SLF_PAYMENTS_XDSD.FAILREASON\n+                                 ) .values(\n+                                       invoice.invoiceId(),\n+                                       transactionId,\n+                                       timestamp,\n+                                       value.toBigIntegerExact(),\n+                                       status,\n+                                       failReason\n+                                   ) .execute();\n+\n+\n+        if( inserted!= 1) {\n+                              throw new IllegalStateException(\n+                                        \"Something went wrong while trying to register \" + \"a Payment for Invoice \"+ invoice.invoiceId()+ \". \"\n+                              );\n+                          }\n+\n+else {\n+         return new StoredPayment(\n+                    invoice.invoiceId(),\n+                    transactionId,\n+                    timestamp,\n+                    value,\n+                    status,\n+                    failReason,\n+                    this.storage\n+                );\n+     }\n     }\n \n     @Override\n     public Payments ofInvoice(final Invoice invoice) {\n         return new InvoicePayments(\n-            invoice,\n-            () -> SelfPayments.this.database.jooq()\n-                .select()\n-                .from(SLF_PAYMENTS_XDSD)\n-                .where(SLF_PAYMENTS_XDSD.INVOICEID.eq(invoice.invoiceId()))\n-                .stream()\n-                .map(\n-                    rec -> new StoredPayment(\n-                        invoice.invoiceId(),\n-                        rec.getValue(SLF_PAYMENTS_XDSD.TRANSACTIONID),\n-                        rec.getValue(SLF_PAYMENTS_XDSD.PAYMENT_TIMESTAMP),\n-                        BigDecimal.valueOf(\n-                            rec.getValue(SLF_PAYMENTS_XDSD.VALUE).longValue()\n-                        ),\n-                        rec.getValue(SLF_PAYMENTS_XDSD.STATUS),\n-                        rec.get(SLF_PAYMENTS_XDSD.FAILREASON),\n-                        this.storage\n-                    )\n-                ),\n-            this.storage\n-        );\n+                   invoice,\n+                   ( )-> SelfPayments.this.database.jooq() .select() .from( SLF_PAYMENTS_XDSD) .where( SLF_PAYMENTS_XDSD.INVOICEID.eq( invoice.invoiceId() ) ) .stream() .map( rec-> new StoredPayment(\n+                                                                                                                                                                                         invoice.invoiceId(),\n+                                                                                                                                                                                         rec.getValue( SLF_PAYMENTS_XDSD.TRANSACTIONID),\n+                                                                                                                                                                                         rec.getValue( SLF_PAYMENTS_XDSD.PAYMENT_TIMESTAMP),\n+                                                                                                                                                                                         BigDecimal.valueOf( rec.getValue( SLF_PAYMENTS_XDSD.VALUE) .longValue() ),\n+                                                                                                                                                                                         rec.getValue( SLF_PAYMENTS_XDSD.STATUS),\n+                                                                                                                                                                                         rec.get( SLF_PAYMENTS_XDSD.FAILREASON),\n+                                                                                                                                                                                         this.storage\n+                                                                                                                                                                                     ) ),\n+                   this.storage\n+               );\n     }\n \n     @Override\n-    public Iterator<Payment> iterator() {\n+    public Iterator < Payment> iterator() {\n         throw new UnsupportedOperationException(\n-            \"You cannot iterate over all the Payments in Self!\"\n+                  \"You cannot iterate over all the Payments in Self!\"\n         );\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 79
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/25/SelfPayments.java\nindex 5323fef01b2..417ed0c9cf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/25/SelfPayments.java\n@@ -91,7 +91,7 @@ public final class SelfPayments implements Payments {\n             status,\n             failReason\n         ).execute();\n-        if(inserted != 1) {\n+        if (inserted != 1) {\n             throw new IllegalStateException(\n                 \"Something went wrong while trying to register \"\n                 + \"a Payment for Invoice \" + invoice.invoiceId() + \". \"\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "94",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/25/SelfPayments.java\nindex 5323fef01b2..200e38bc8f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/25/SelfPayments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/25/SelfPayments.java\n@@ -91,7 +91,7 @@ public final class SelfPayments implements Payments {\n             status,\n             failReason\n         ).execute();\n-        if(inserted != 1) {\n+        if( inserted != 1) {\n             throw new IllegalStateException(\n                 \"Something went wrong while trying to register \"\n                 + \"a Payment for Invoice \" + invoice.invoiceId() + \". \"\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "154",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 137).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * @throws ThrottleException - Throws for if the throttle type is unknown\n     */\n    public static ThrottleContext createThrottleContext(int throttletype, ThrottleConfiguration configuration) throws ThrottleException {\n        if (ThrottleConstants.IP_BASE == throttletype) {\n            return new IPBaseThrottleContext(configuration);\n        } else if (ThrottleConstants.DOMAIN_BASE == throttletype) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/154/ThrottleContextFactory.java\nindex d2178d91193..099c72f3174 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/154/ThrottleContextFactory.java\n@@ -38,8 +38,9 @@ public class ThrottleContextFactory {\n      * @return ThrottleContext - The corresponding ThrottleContext for the given throttle type\r\n      * @throws ThrottleException - Throws for if the throttle type is unknown\r\n      */\r\n-    public static ThrottleContext createThrottleContext(int throttletype, ThrottleConfiguration configuration) throws ThrottleException {\r\n-        if (ThrottleConstants.IP_BASE == throttletype) {\r\n+    public static ThrottleContext createThrottleContext(int throttletype, ThrottleConfiguration configuration)\r\n+            throws ThrottleException {\r\n+         if (ThrottleConstants.IP_BASE == throttletype) {\r\n             return new IPBaseThrottleContext(configuration);\r\n         } else if (ThrottleConstants.DOMAIN_BASE == throttletype) {\r\n             return new DomainBaseThrottleContext(configuration);\r\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/154/ThrottleContextFactory.java\nindex d2178d91193..b388e790bb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/154/ThrottleContextFactory.java\n@@ -1,18 +1,19 @@\n /*\r\n-* Copyright 2004,2005 The Apache Software Foundation.\r\n-*\r\n-* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-* you may not use this file except in compliance with the License.\r\n-* You may obtain a copy of the License at\r\n-*\r\n-*      http://www.apache.org/licenses/LICENSE-2.0\r\n-*\r\n-* Unless required by applicable law or agreed to in writing, software\r\n-* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-* See the License for the specific language governing permissions and\r\n-* limitations under the License.\r\n-*/\r\n+ * Copyright 2004,2005 The Apache Software Foundation.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+\r\n package org.wso2.throttle.factory;\r\n \r\n import org.wso2.throttle.ThrottleConfiguration;\r\n@@ -29,24 +30,25 @@ import org.wso2.throttle.impl.rolebase.RoleBaseThrottleContext;\n \r\n public class ThrottleContextFactory {\r\n \r\n-    /**\r\n-     * To create a ThrottleContext for the given throttle type\r\n-     * Needs to provide a throttle configuration\r\n-     *\r\n-     * @param throttletype  - The type of the throttle\r\n-     * @param configuration - The throttle configuration\r\n-     * @return ThrottleContext - The corresponding ThrottleContext for the given throttle type\r\n-     * @throws ThrottleException - Throws for if the throttle type is unknown\r\n-     */\r\n-    public static ThrottleContext createThrottleContext(int throttletype, ThrottleConfiguration configuration) throws ThrottleException {\r\n-        if (ThrottleConstants.IP_BASE == throttletype) {\r\n-            return new IPBaseThrottleContext(configuration);\r\n-        } else if (ThrottleConstants.DOMAIN_BASE == throttletype) {\r\n-            return new DomainBaseThrottleContext(configuration);\r\n-        } else if (ThrottleConstants.ROLE_BASE == throttletype) {\r\n-            return new RoleBaseThrottleContext(configuration);\r\n-        } else {\r\n-            throw new ThrottleException(\"Unknown throttle type\");\r\n-        }\r\n+  /**\r\n+   * To create a ThrottleContext for the given throttle type\r\n+   * Needs to provide a throttle configuration\r\n+   *\r\n+   * @param throttletype  - The type of the throttle\r\n+   * @param configuration - The throttle configuration\r\n+   * @return ThrottleContext - The corresponding ThrottleContext for the given throttle type\r\n+   * @throws ThrottleException - Throws for if the throttle type is unknown\r\n+   */\r\n+  public static ThrottleContext createThrottleContext(int throttletype, ThrottleConfiguration configuration)\r\n+    throws ThrottleException {\r\n+    if (ThrottleConstants.IP_BASE == throttletype) {\r\n+      return new IPBaseThrottleContext(configuration);\r\n+    } else if (ThrottleConstants.DOMAIN_BASE == throttletype) {\r\n+      return new DomainBaseThrottleContext(configuration);\r\n+    } else if (ThrottleConstants.ROLE_BASE == throttletype) {\r\n+      return new RoleBaseThrottleContext(configuration);\r\n+    } else {\r\n+      throw new ThrottleException(\"Unknown throttle type\");\r\n     }\r\n+  }\r\n }\r\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/154/ThrottleContextFactory.java\nindex d2178d91193..daed926fca6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/154/ThrottleContextFactory.java\n@@ -49,4 +49,4 @@ public class ThrottleContextFactory {\n             throw new ThrottleException(\"Unknown throttle type\");\r\n         }\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/154/ThrottleContextFactory.java\nindex d2178d91193..099c72f3174 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/154/ThrottleContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/154/ThrottleContextFactory.java\n@@ -38,8 +38,9 @@ public class ThrottleContextFactory {\n      * @return ThrottleContext - The corresponding ThrottleContext for the given throttle type\r\n      * @throws ThrottleException - Throws for if the throttle type is unknown\r\n      */\r\n-    public static ThrottleContext createThrottleContext(int throttletype, ThrottleConfiguration configuration) throws ThrottleException {\r\n-        if (ThrottleConstants.IP_BASE == throttletype) {\r\n+    public static ThrottleContext createThrottleContext(int throttletype, ThrottleConfiguration configuration)\r\n+            throws ThrottleException {\r\n+         if (ThrottleConstants.IP_BASE == throttletype) {\r\n             return new IPBaseThrottleContext(configuration);\r\n         } else if (ThrottleConstants.DOMAIN_BASE == throttletype) {\r\n             return new DomainBaseThrottleContext(configuration);\r\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
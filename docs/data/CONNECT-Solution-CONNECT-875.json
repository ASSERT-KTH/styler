{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "875",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admingui.services.impl;\n\nimport gov.hhs.fha.nhinc.admingui.event.model.Audit;\nimport gov.hhs.fha.nhinc.admingui.services.AuditService;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/875/AuditServiceImpl.java\nindex 3f8cfa092ca..add965bb44e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/875/AuditServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.event.model.Audit;\n@@ -36,43 +37,42 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author achidamb\n  */\n public class AuditServiceImpl implements AuditService {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AuditServiceImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AuditServiceImpl.class);\n \n-    @Override\n-    public ArrayList<Audit> createMockAuditRecord() {\n-        Audit audit1 = new Audit();\n-        audit1.setEventOutcomeIndicator(\"Success\");\n-        audit1.setEventType(\"QueryForDocuments\");\n-        audit1.setMessageId(\"MessageId-1\");\n-        audit1.setRemoteHcid(\"2.2\");\n-        audit1.setUserId(\"Thomas\");\n+  @Override\n+  public ArrayList<Audit> createMockAuditRecord() {\n+    Audit audit1 = new Audit();\n+    audit1.setEventOutcomeIndicator(\"Success\");\n+    audit1.setEventType(\"QueryForDocuments\");\n+    audit1.setMessageId(\"MessageId-1\");\n+    audit1.setRemoteHcid(\"2.2\");\n+    audit1.setUserId(\"Thomas\");\n \n-        Audit audit2 = new Audit();\n-        audit2.setEventOutcomeIndicator(\"Success\");\n-        audit2.setEventType(\"RetrieveDocuments\");\n-        audit2.setMessageId(\"MessageId-2\");\n-        audit2.setRemoteHcid(\"3.3\");\n-        audit2.setUserId(\"Joe\");\n-        try {\n-            audit1.setEventTimestamp(getTimeStamp());\n-            audit2.setEventTimestamp(getTimeStamp());\n-        } catch (ParseException ex) {\n-            LOG.error(\"Timestamp  formatting Exception: \" + ex.getLocalizedMessage(), ex);\n-        }\n-        ArrayList<Audit> auditRecord = new ArrayList<>();\n-        auditRecord.add(audit1);\n-        auditRecord.add(audit2);\n-        return auditRecord;\n+    Audit audit2 = new Audit();\n+    audit2.setEventOutcomeIndicator(\"Success\");\n+    audit2.setEventType(\"RetrieveDocuments\");\n+    audit2.setMessageId(\"MessageId-2\");\n+    audit2.setRemoteHcid(\"3.3\");\n+    audit2.setUserId(\"Joe\");\n+    try {\n+      audit1.setEventTimestamp(getTimeStamp());\n+      audit2.setEventTimestamp(getTimeStamp());\n+    } catch (ParseException ex) {\n+      LOG.error(\"Timestamp  formatting Exception: \" + ex.getLocalizedMessage(), ex);\n     }\n+    ArrayList<Audit> auditRecord = new ArrayList<>();\n+    auditRecord.add(audit1);\n+    auditRecord.add(audit2);\n+    return auditRecord;\n+  }\n \n-    private Timestamp getTimeStamp() throws ParseException {\n-        Date date = new Date();\n-        return new Timestamp(date.getTime());\n-    }\n+  private Timestamp getTimeStamp() throws ParseException {\n+    Date date = new Date();\n+    return new Timestamp(date.getTime());\n+  }\n \n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/875/AuditServiceImpl.java\nindex 3f8cfa092ca..63143ca9d57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/875/AuditServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.event.model.Audit;\n@@ -67,12 +68,14 @@ public class AuditServiceImpl implements AuditService {\n         ArrayList<Audit> auditRecord = new ArrayList<>();\n         auditRecord.add(audit1);\n         auditRecord.add(audit2);\n-        return auditRecord;\n+\n+return auditRecord;\n     }\n \n     private Timestamp getTimeStamp() throws ParseException {\n         Date date = new Date();\n-        return new Timestamp(date.getTime());\n+\n+return new Timestamp(date.getTime());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/875/AuditServiceImpl.java\nindex 3f8cfa092ca..d8d90db219f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/875/AuditServiceImpl.java\n@@ -39,10 +39,13 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author achidamb\n  */\n+\n+\n public class AuditServiceImpl implements AuditService {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AuditServiceImpl.class);\n \n+\n     @Override\n     public ArrayList<Audit> createMockAuditRecord() {\n         Audit audit1 = new Audit();\n@@ -51,7 +54,6 @@ public class AuditServiceImpl implements AuditService {\n         audit1.setMessageId(\"MessageId-1\");\n         audit1.setRemoteHcid(\"2.2\");\n         audit1.setUserId(\"Thomas\");\n-\n         Audit audit2 = new Audit();\n         audit2.setEventOutcomeIndicator(\"Success\");\n         audit2.setEventType(\"RetrieveDocuments\");\n@@ -75,4 +77,4 @@ public class AuditServiceImpl implements AuditService {\n         return new Timestamp(date.getTime());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/875/AuditServiceImpl.java\nindex 3f8cfa092ca..52ead2d2a43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/875/AuditServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/875/AuditServiceImpl.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.admingui.services.impl;\n+\n+package gov.hhs.fha.nhinc.admingui.\n+\n+services .impl;\n \n import gov.hhs.fha.nhinc.admingui.event.model.Audit;\n import gov.hhs.fha.nhinc.admingui.services.AuditService;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
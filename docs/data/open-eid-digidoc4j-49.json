{
    "project_name": "open-eid-digidoc4j",
    "error_id": "49",
    "information": {
        "errors": [
            {
                "line": "78",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    try {\n      this.log.debug(\"Creating a new validation report\");\n      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n      XadesValidationReportProcessor.process(validationReports);\n      return validationReports;\n    } catch (DSSException e) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/49/XadesValidationReportGenerator.java\nindex b16609f5c2c..4caa1536c34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/49/XadesValidationReportGenerator.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic.xades;\n \n@@ -42,9 +42,9 @@ public class XadesValidationReportGenerator implements Serializable {\n   private Configuration configuration;\n \n   /**\n-   * @param document signature document\n+   * @param document         signature document\n    * @param detachedContents detached content\n-   * @param configuration configuration context\n+   * @param configuration    configuration context\n    */\n   public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents,\n                                         Configuration configuration) {\n@@ -75,7 +75,8 @@ public class XadesValidationReportGenerator implements Serializable {\n   private Reports generateReports() {\n     try {\n       this.log.debug(\"Creating a new validation report\");\n-      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n+      Reports validationReports =\n+          this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n       XadesValidationReportProcessor.process(validationReports);\n       return validationReports;\n     } catch (DSSException e) {\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/49/XadesValidationReportGenerator.java\nindex b16609f5c2c..5410dce3d3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/49/XadesValidationReportGenerator.java\n@@ -46,9 +46,8 @@ public class XadesValidationReportGenerator implements Serializable {\n    * @param detachedContents detached content\n    * @param configuration configuration context\n    */\n-  public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents,\n-                                        Configuration configuration) {\n-    this.document = document;\n+  public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents, Configuration configuration) {\n+  this.document = document;\n     this.detachedContents = detachedContents;\n     this.configuration = configuration;\n   }\n@@ -128,4 +127,4 @@ public class XadesValidationReportGenerator implements Serializable {\n       this.log.trace(this.reports.getXmlSimpleReport());\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/49/XadesValidationReportGenerator.java\nindex b16609f5c2c..6d8caeb79d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/49/XadesValidationReportGenerator.java\n@@ -22,7 +22,6 @@ import org.digidoc4j.exceptions.DigiDoc4JException;\n import org.digidoc4j.exceptions.SignatureNotFoundException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n import java.io.InputStream;\n@@ -31,6 +30,7 @@ import java.nio.file.Files;\n import java.nio.file.Paths;\n import java.util.List;\n \n+\n public class XadesValidationReportGenerator implements Serializable {\n \n   private static final Logger log = LoggerFactory.getLogger(XadesValidationReportGenerator.class);\n@@ -46,13 +46,14 @@ public class XadesValidationReportGenerator implements Serializable {\n    * @param detachedContents detached content\n    * @param configuration configuration context\n    */\n-  public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents,\n-                                        Configuration configuration) {\n+\n+  public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents, Configuration configuration) {\n     this.document = document;\n     this.detachedContents = detachedContents;\n     this.configuration = configuration;\n   }\n \n+\n   public Reports openValidationReport() {\n     if (this.reports == null) {\n       this.reports = this.generateReports();\n@@ -116,8 +117,7 @@ public class XadesValidationReportGenerator implements Serializable {\n \n   private SignedDocumentValidator createValidator() {\n     this.log.debug(\"Creating a new XAdES validator\");\n-    return new XadesValidationDssFacade(this.detachedContents, this.configuration).openXadesValidator(\n-        this.document);\n+    return new XadesValidationDssFacade(this.detachedContents, this.configuration).openXadesValidator(this.document);\n   }\n \n   private void print() {\n@@ -128,4 +128,4 @@ public class XadesValidationReportGenerator implements Serializable {\n       this.log.trace(this.reports.getXmlSimpleReport());\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "79",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "79",
                    "column": "43",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/49/XadesValidationReportGenerator.java\nindex b16609f5c2c..110b2b23822 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/49/XadesValidationReportGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/49/XadesValidationReportGenerator.java\n@@ -75,8 +75,8 @@ public class XadesValidationReportGenerator implements Serializable {\n   private Reports generateReports() {\n     try {\n       this.log.debug(\"Creating a new validation report\");\n-      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n-      XadesValidationReportProcessor.process(validationReports);\n+      Reports validationReports = this .getSignedDocumentValidator().validateDocument\n+      (this.getValidationPolicyAsStream());XadesValidationReportProcessor.process(validationReports);\n       return validationReports;\n     } catch (DSSException e) {\n       throw new DigiDoc4JException(e);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
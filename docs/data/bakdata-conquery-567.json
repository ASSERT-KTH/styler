{
    "project_name": "bakdata-conquery",
    "error_id": "567",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "43",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n@EqualsAndHashCode\npublic class CDateSet implements ICDateSet{\n\n\tprivate static final Pattern PARSE_PATTERN = Pattern.compile(\"(\\\\{|,\\\\s*)((\\\\d{4}-\\\\d{2}-\\\\d{2})?/(\\\\d{4}-\\\\d{2}-\\\\d{2})?)\");\n\tprivate final NavigableMap<Integer, CDateRange> rangesByLowerBound;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/567/CDateSet.java\nindex 2d80eaf317e..623f8ca1c1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/567/CDateSet.java\n@@ -23,7 +23,7 @@ import com.google.common.math.IntMath;\n import lombok.EqualsAndHashCode;\n \n @EqualsAndHashCode\n-public class CDateSet implements ICDateSet{\n+public class CDateSet implements ICDateSet {\n \n \tprivate static final Pattern PARSE_PATTERN = Pattern.compile(\"(\\\\{|,\\\\s*)((\\\\d{4}-\\\\d{2}-\\\\d{2})?/(\\\\d{4}-\\\\d{2}-\\\\d{2})?)\");\n \tprivate final NavigableMap<Integer, CDateRange> rangesByLowerBound;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "224",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "226",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "228",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "245",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "253",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "255",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "256",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "257",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "258",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "262",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "263",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "264",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "265",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "267",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "268",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "269",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "270",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "271",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "273",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "274",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "275",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "277",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "286",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "287",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "288",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "289",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "290",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "291",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "296",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "298",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "301",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "302",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "303",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "306",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "307",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "308",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "309",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "310",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "311",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "312",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "314",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "316",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "317",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "319",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "321",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "322",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "323",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "324",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "326",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "327",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "328",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "329",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "330",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "332",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "333",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "334",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "335",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "337",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "338",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "339",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "340",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "342",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "343",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "344",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "345",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "346",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "348",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "349",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "350",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "351",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "352",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "354",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "355",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "356",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "357",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "358",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "359",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "360",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "361",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "362",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "363",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "364",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "365",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "366",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "368",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "369",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "370",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "372",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "373",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "374",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "376",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "377",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "378",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "379",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "380",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "381",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "382",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "383",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "383",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "384",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "385",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "386",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "387",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "388",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "389",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/567/CDateSet.java\nindex 2d80eaf317e..e045891e1e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/567/CDateSet.java\n@@ -23,368 +23,368 @@ import com.google.common.math.IntMath;\n import lombok.EqualsAndHashCode;\n \n @EqualsAndHashCode\n-public class CDateSet implements ICDateSet{\n-\n-\tprivate static final Pattern PARSE_PATTERN = Pattern.compile(\"(\\\\{|,\\\\s*)((\\\\d{4}-\\\\d{2}-\\\\d{2})?/(\\\\d{4}-\\\\d{2}-\\\\d{2})?)\");\n-\tprivate final NavigableMap<Integer, CDateRange> rangesByLowerBound;\n-\tprivate transient Set<CDateRange> asRanges;\n-\tprivate transient Set<CDateRange> asDescendingSetOfRanges;\n-\n-\tpublic static CDateSet create() {\n-\t\treturn new CDateSet(new TreeMap<>());\n-\t}\n-\t\n-\tpublic static CDateSet createFull() {\n-\t\tCDateSet set = new CDateSet(new TreeMap<>());\n-\t\tset.add(CDateRange.all());\n-\t\treturn set;\n-\t}\n-\n-\tpublic static CDateSet create(ICDateSet rangeSet) {\n-\t\treturn create(rangeSet.asRanges());\n-\t}\n-\n-\tpublic static CDateSet create(CDateSet rangeSet) {\n-\t\tCDateSet result = create();\n-\t\tresult.addAll(rangeSet);\n-\t\treturn result;\n-\t}\n-\t\n-\tpublic static CDateSet create(CDateRange range) {\n-\t\tCDateSet result = create();\n-\t\tresult.add(range);\n-\t\treturn result;\n-\t}\n-\n-\tpublic static CDateSet create(Iterable<CDateRange> ranges) {\n-\t\tCDateSet result = create();\n-\t\tresult.addAll(ranges);\n-\t\treturn result;\n-\t}\n-\n-\tprivate CDateSet(NavigableMap<Integer, CDateRange> rangesByLowerCut) {\n-\t\tthis.rangesByLowerBound = rangesByLowerCut;\n-\t}\n-\n-\tpublic Collection<CDateRange> asRanges() {\n-\t\tSet<CDateRange> result = asRanges;\n-\t\treturn (result == null) ? asRanges = new AsRanges(rangesByLowerBound.values()) : result;\n-\t}\n-\n-\tpublic Set<CDateRange> asDescendingSetOfRanges() {\n-\t\tSet<CDateRange> result = asDescendingSetOfRanges;\n-\t\treturn (result == null) ? asDescendingSetOfRanges = new AsRanges(rangesByLowerBound.descendingMap().values()) : result;\n-\t}\n-\n-\tfinal class AsRanges extends ForwardingCollection<CDateRange> implements Set<CDateRange> {\n-\n-\t\tfinal Collection<CDateRange> delegate;\n-\n-\t\tAsRanges(Collection<CDateRange> delegate) {\n-\t\t\tthis.delegate = delegate;\n-\t\t}\n-\n-\t\t@Override\n-\t\tprotected Collection<CDateRange> delegate() {\n-\t\t\treturn delegate;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic int hashCode() {\n-\t\t\tint hashCode = 0;\n-\t\t\tfor (Object o : this) {\n-\t\t\t\thashCode += o != null ? o.hashCode() : 0;\n-\n-\t\t\t\thashCode = ~~hashCode;\n-\t\t\t}\n-\t\t\treturn hashCode;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean equals(Object object) {\n-\t\t\tif (this == object) {\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t\tif (object instanceof Set) {\n-\t\t\t\tSet<?> o = (Set<?>) object;\n-\n-\t\t\t\ttry {\n-\t\t\t\t\treturn this.size() == o.size() && this.containsAll(o);\n-\t\t\t\t}\n-\t\t\t\tcatch (NullPointerException | ClassCastException ignored) {\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\treturn false;\n-\t\t}\n-\t}\n-\n-\tpublic CDateRange rangeContaining(int value) {\n-\t\tcheckNotNull(value);\n-\t\tEntry<Integer, CDateRange> floorEntry = rangesByLowerBound.floorEntry(value);\n-\t\tif (floorEntry != null && floorEntry.getValue().contains(value)) {\n-\t\t\treturn floorEntry.getValue();\n-\t\t}\n-\t\telse {\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Tests if the supplied {@link LocalDate} is contained by this Set.\n-\t * @param value the Date to check\n-\t * @return true iff any Set contains the value\n-\t */\n-\tpublic boolean contains(LocalDate value) {\n-\t\treturn contains(CDate.ofLocalDate(value));\n-\t}\n-\n-\t/**\n-\t * Tests if the supplied {@link CDate} is contained by this Set.\n-\t * @param value the Date to check\n-\t * @return true iff any Set contains the value\n-\t */\n-\tpublic boolean contains(int value) {\n-\t\treturn rangeContaining(value) != null;\n-\t}\n-\t\n-\tpublic boolean isEmpty() {\n-\t\treturn asRanges().isEmpty();\n-\t}\n-\t\n-\tpublic void clear() {\n-\t\trangesByLowerBound.clear();\n-\t}\n-\t\n-\tpublic boolean enclosesAll(CDateSet other) {\n-\t\treturn enclosesAll(other.asRanges());\n-\t}\n-\t\n-\tpublic void addAll(ICDateSet other) {\n-\t\taddAll(other.asRanges());\n-\t}\n-\t\n-\tpublic void removeAll(CDateSet other) {\n-\t\tremoveAll(other.asRanges());\n-\t}\n-\n-\tpublic boolean enclosesAll(Iterable<CDateRange> other) {\n-\t\tfor (CDateRange range : other) {\n-\t\t\tif (!encloses(range)) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t}\n-\t\treturn true;\n-\t}\n-\n-\tpublic void addAll(Iterable<CDateRange> ranges) {\n-\t\tfor (CDateRange range : ranges) {\n-\t\t\tadd(range);\n-\t\t}\n-\t}\n-\n-\tpublic void removeAll(Iterable<CDateRange> ranges) {\n-\t\tfor (CDateRange range : ranges) {\n-\t\t\tremove(range);\n-\t\t}\n-\t}\n-\t\n-\tpublic boolean intersects(CDateRange range) {\n-\t\tcheckNotNull(range);\n-\t\tEntry<Integer, CDateRange> ceilingEntry = rangesByLowerBound.ceilingEntry(range.getMinValue());\n-\t\tif (ceilingEntry != null && ceilingEntry.getValue().intersects(range)) {\n-\t\t\treturn true;\n-\t\t}\n-\t\tEntry<Integer, CDateRange> priorEntry = rangesByLowerBound.lowerEntry(range.getMinValue());\n-\t\treturn priorEntry != null && priorEntry.getValue().intersects(range);\n-\t}\n-\n-\tpublic boolean encloses(CDateRange range) {\n-\t\tcheckNotNull(range);\n-\t\tEntry<Integer, CDateRange> floorEntry = rangesByLowerBound.floorEntry(range.getMinValue());\n-\t\treturn floorEntry != null && floorEntry.getValue().encloses(range);\n-\t}\n-\n-\tpublic CDateRange span() {\n-\t\tEntry<Integer, CDateRange> firstEntry = rangesByLowerBound.firstEntry();\n-\t\tif (firstEntry == null) {\n-\t\t\tthrow new NoSuchElementException();\n-\t\t}\n-\t\treturn CDateRange.of(firstEntry.getValue().getMinValue(), rangesByLowerBound.lastEntry().getValue().getMaxValue());\n-\t}\n-\n-\tpublic void add(CDateRange rangeToAdd) {\n-\t\tcheckNotNull(rangeToAdd);\n-\t\t\n-\t\tint lbToAdd = rangeToAdd.getMinValue();\n-\t\tint ubToAdd = rangeToAdd.getMaxValue();\n-\n-\t\tEntry<Integer, CDateRange> entryBelowLB = rangesByLowerBound.lowerEntry(lbToAdd);\n-\t\tif (entryBelowLB != null) {\n-\t\t\tCDateRange rangeBelowLB = entryBelowLB.getValue();\n-\t\t\t//left neighbor would be connected\n-\t\t\tif (rangeBelowLB.getMaxValue() >= lbToAdd - 1) {\n-\t\t\t\tlbToAdd = rangeBelowLB.getMinValue();\n-\t\t\t\t//left neighbor encloses new range\n-\t\t\t\tif (rangeBelowLB.getMaxValue() > ubToAdd) {\n-\t\t\t\t\tubToAdd = rangeBelowLB.getMaxValue();\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t}\n-\t\t}\n-\n-\t\tEntry<Integer, CDateRange> entryBelowUB = rangesByLowerBound.floorEntry(ubToAdd + 1);\n-\t\tif (entryBelowUB != null) {\n-\t\t\tCDateRange rangeBelowUB = entryBelowUB.getValue();\n-\t\t\tif (rangeBelowUB.getMaxValue() >= ubToAdd) {\n-\t\t\t\tubToAdd = rangeBelowUB.getMaxValue();\n-\t\t\t}\n-\t\t}\n-\n-\t\t// Remove ranges which are strictly enclosed.\n-\t\trangesByLowerBound.subMap(lbToAdd, IntMath.saturatedAdd(ubToAdd, 1)).clear();\n-\n-\t\tputRange(CDateRange.of(lbToAdd, ubToAdd));\n-\t}\n-\t\n-\tpublic void remove(CDateRange rangeToRemove) {\n-\t\tcheckNotNull(rangeToRemove);\n-\n-\t\tEntry<Integer, CDateRange> entryBelowLB = rangesByLowerBound.lowerEntry(rangeToRemove.getMinValue());\n-\t\tif (entryBelowLB != null) {\n-\t\t\tCDateRange rangeBelowLB = entryBelowLB.getValue();\n-\t\t\t//left neighbor intersects removed range => shorten it to everything before removed range\n-\t\t\tif (rangeBelowLB.getMaxValue() >= rangeToRemove.getMinValue()) {\n-\t\t\t\tputRange(CDateRange.of(rangeBelowLB.getMinValue(), rangeToRemove.getMinValue() - 1));\n-\t\t\t\t\n-\t\t\t\t//left neighbor reaches beyond removed range => have to add cut of right part\n-\t\t\t\tif (rangeBelowLB.getMaxValue() > rangeToRemove.getMaxValue()) {\n-\t\t\t\t\tputRange(CDateRange.of(rangeToRemove.getMaxValue() + 1, rangeBelowLB.getMaxValue()));\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tEntry<Integer, CDateRange> entryBelowUB = rangesByLowerBound.floorEntry(rangeToRemove.getMaxValue());\n-\t\tif (entryBelowUB != null) {\n-\t\t\tCDateRange rangeBelowUB = entryBelowUB.getValue();\n-\t\t\t//if reaches beyond removed range => have to add cut of right part\n-\t\t\tif (rangeBelowUB.getMaxValue() > rangeToRemove.getMaxValue()) {\n-\t\t\t\t// { > }\n-\t\t\t\tputRange(CDateRange.of(rangeToRemove.getMaxValue() + 1, rangeBelowUB.getMaxValue()));\n-\t\t\t}\n-\t\t}\n-\n-\t\trangesByLowerBound.subMap(rangeToRemove.getMinValue(), IntMath.saturatedAdd(rangeToRemove.getMaxValue(),1)).clear();\n-\t}\n-\n-\tprivate void putRange(CDateRange range) {\n-\t\trangesByLowerBound.put(range.getMinValue(), range);\n-\t}\n-\t\n-\t@Override\n-\tpublic String toString() {\n-\t\tStringBuilder sb = new StringBuilder();\n-\t\tsb.append('{');\n-\t\tJoiner.on(\", \").appendTo(sb, this.asRanges());\n-\t\tsb.append('}');\n-\t\treturn sb.toString();\n-\t}\n-\t\n-\t@JsonIgnore\n-\tpublic boolean isAll() {\n-\t\tif(this.rangesByLowerBound.isEmpty()) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn this.rangesByLowerBound.values().iterator().next().isAll();\n-\t}\n-\n-\tpublic void retainAll(ICDateSet retained) {\n-\t\t// TODO: 18.08.2020 fk: implement this\n-\t}\n-\n-\tpublic void retainAll(CDateSet retained) {\n-\t\tif(retained.isEmpty()) {\n-\t\t\tthis.clear();\n-\t\t\treturn;\n-\t\t}\n-\t\tif(retained.isAll()) {\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tList<CDateRange> l = new ArrayList<>(retained.rangesByLowerBound.values());\n-\t\t\n-\t\t//remove all before the first range\n-\t\tif(!l.get(0).isAtMost()) {\n-\t\t\tthis.remove(CDateRange.of(Integer.MIN_VALUE, l.get(0).getMinValue() - 1));\n-\t\t}\n-\t\t\n-\t\t//remove all between ranges\n-\t\tfor(int i=0;i<l.size()-1;i++) {\n-\t\t\tthis.remove(CDateRange.of(l.get(i).getMaxValue() + 1, l.get(i+1).getMinValue() - 1));\n-\t\t}\n-\t\t\n-\t\t//remove all after the last Range\n-\t\tif(!l.get(l.size()-1).isAtLeast()) {\n-\t\t\tthis.remove(CDateRange.of(l.get(l.size()-1).getMaxValue() + 1, Integer.MAX_VALUE));\n-\t\t}\n-\t}\n-\t\n-\tpublic void retainAll(CDateRange retained) {\n-\t\tif(retained.isAll()) {\n-\t\t\treturn;\n-\t\t}\n-\n-\t\t//remove all before the range\n-\t\tif(!retained.isAtMost()) {\n-\t\t\tthis.remove(CDateRange.of(Integer.MIN_VALUE, retained.getMinValue() - 1));\n-\t\t}\n-\t\t\n-\t\t//remove all after the Range\n-\t\tif(!retained.isAtLeast()) {\n-\t\t\tthis.remove(CDateRange.of(retained.getMaxValue() + 1, Integer.MAX_VALUE));\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Counts the number of days represented by this CDateSet.\n-\t * @return the number of days or null if there are infinite days in the set\n-\t */\n-\tpublic Long countDays() {\n-\t\t//if we have no entries we return zero days\n-\t\tif(rangesByLowerBound.firstEntry() == null) {\n-\t\t\treturn 0L;\n-\t\t}\n-\t\tif(rangesByLowerBound.firstEntry().getValue().isOpen() || rangesByLowerBound.lastEntry().getValue().isOpen()) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tlong sum = 0;\n-\t\tfor(CDateRange r:this.asRanges()) {\n-\t\t\tsum+=r.getMaxValue() - r.getMinValue() + 1;\n-\t\t}\n-\t\treturn sum;\n-\t}\n-\n-\tpublic int getMinValue() {\n-\t\treturn rangesByLowerBound.firstEntry().getValue().getMinValue();\n-\t}\n-\n-\tpublic int getMaxValue() {\n-\t\treturn rangesByLowerBound.lastEntry().getValue().getMaxValue();\n-\t}\n-\t\n-\tpublic static CDateSet parse(String value) {\n-\t\tList<CDateRange> ranges = PARSE_PATTERN\n-\t\t\t.matcher(value)\n-\t\t\t.results()\n-\t\t\t.map(mr -> {\n-\t\t\t\ttry {\n-\t\t\t\t\treturn DateRangeParser.parseISORange(mr.group(2));\n-\t\t\t\t}\n-\t\t\t\tcatch(Exception e) {\n-\t\t\t\t\tthrow new RuntimeException(e);\n-\t\t\t\t}\n-\t\t\t})\n-\t\t\t.collect(Collectors.toList());\n-\t\treturn CDateSet.create(ranges);\n-\t}\n+public class CDateSet implements ICDateSet {\n+\n+    private static final Pattern PARSE_PATTERN = Pattern.compile(\"(\\\\{|,\\\\s*)((\\\\d{4}-\\\\d{2}-\\\\d{2})?/(\\\\d{4}-\\\\d{2}-\\\\d{2})?)\");\n+    private final NavigableMap<Integer, CDateRange> rangesByLowerBound;\n+    private transient Set<CDateRange> asRanges;\n+    private transient Set<CDateRange> asDescendingSetOfRanges;\n+\n+    public static CDateSet create() {\n+        return new CDateSet(new TreeMap<>());\n+    }\n+\n+    public static CDateSet createFull() {\n+        CDateSet set = new CDateSet(new TreeMap<>());\n+        set.add(CDateRange.all());\n+        return set;\n+    }\n+\n+    public static CDateSet create(ICDateSet rangeSet) {\n+        return create(rangeSet.asRanges());\n+    }\n+\n+    public static CDateSet create(CDateSet rangeSet) {\n+        CDateSet result = create();\n+        result.addAll(rangeSet);\n+        return result;\n+    }\n+\n+    public static CDateSet create(CDateRange range) {\n+        CDateSet result = create();\n+        result.add(range);\n+        return result;\n+    }\n+\n+    public static CDateSet create(Iterable<CDateRange> ranges) {\n+        CDateSet result = create();\n+        result.addAll(ranges);\n+        return result;\n+    }\n+\n+    private CDateSet(NavigableMap<Integer, CDateRange> rangesByLowerCut) {\n+        this.rangesByLowerBound = rangesByLowerCut;\n+    }\n+\n+    public Collection<CDateRange> asRanges() {\n+        Set<CDateRange> result = asRanges;\n+        return (result == null) ? asRanges = new AsRanges(rangesByLowerBound.values()) : result;\n+    }\n+\n+    public Set<CDateRange> asDescendingSetOfRanges() {\n+        Set<CDateRange> result = asDescendingSetOfRanges;\n+        return (result == null) ? asDescendingSetOfRanges = new AsRanges(rangesByLowerBound.descendingMap().values()) : result;\n+    }\n+\n+    final class AsRanges extends ForwardingCollection<CDateRange> implements Set<CDateRange> {\n+\n+        final Collection<CDateRange> delegate;\n+\n+        AsRanges(Collection<CDateRange> delegate) {\n+            this.delegate = delegate;\n+        }\n+\n+        @Override\n+        protected Collection<CDateRange> delegate() {\n+            return delegate;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            int hashCode = 0;\n+            for (Object o : this) {\n+                hashCode += o != null ? o.hashCode() : 0;\n+\n+                hashCode = ~~hashCode;\n+            }\n+            return hashCode;\n+        }\n+\n+        @Override\n+        public boolean equals(Object object) {\n+            if (this == object) {\n+                return true;\n+            }\n+            if (object instanceof Set) {\n+                Set<?> o = (Set<?>) object;\n+\n+                try {\n+                    return this.size() == o.size() && this.containsAll(o);\n+                } catch (NullPointerException | ClassCastException ignored) {\n+                    return false;\n+                }\n+            }\n+            return false;\n+        }\n+    }\n+\n+    public CDateRange rangeContaining(int value) {\n+        checkNotNull(value);\n+        Entry<Integer, CDateRange> floorEntry = rangesByLowerBound.floorEntry(value);\n+        if (floorEntry != null && floorEntry.getValue().contains(value)) {\n+            return floorEntry.getValue();\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    /**\n+     * Tests if the supplied {@link LocalDate} is contained by this Set.\n+     *\n+     * @param value the Date to check\n+     * @return true iff any Set contains the value\n+     */\n+    public boolean contains(LocalDate value) {\n+        return contains(CDate.ofLocalDate(value));\n+    }\n+\n+    /**\n+     * Tests if the supplied {@link CDate} is contained by this Set.\n+     *\n+     * @param value the Date to check\n+     * @return true iff any Set contains the value\n+     */\n+    public boolean contains(int value) {\n+        return rangeContaining(value) != null;\n+    }\n+\n+    public boolean isEmpty() {\n+        return asRanges().isEmpty();\n+    }\n+\n+    public void clear() {\n+        rangesByLowerBound.clear();\n+    }\n+\n+    public boolean enclosesAll(CDateSet other) {\n+        return enclosesAll(other.asRanges());\n+    }\n+\n+    public void addAll(ICDateSet other) {\n+        addAll(other.asRanges());\n+    }\n+\n+    public void removeAll(CDateSet other) {\n+        removeAll(other.asRanges());\n+    }\n+\n+    public boolean enclosesAll(Iterable<CDateRange> other) {\n+        for (CDateRange range : other) {\n+            if (!encloses(range)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public void addAll(Iterable<CDateRange> ranges) {\n+        for (CDateRange range : ranges) {\n+            add(range);\n+        }\n+    }\n+\n+    public void removeAll(Iterable<CDateRange> ranges) {\n+        for (CDateRange range : ranges) {\n+            remove(range);\n+        }\n+    }\n+\n+    public boolean intersects(CDateRange range) {\n+        checkNotNull(range);\n+        Entry<Integer, CDateRange> ceilingEntry = rangesByLowerBound.ceilingEntry(range.getMinValue());\n+        if (ceilingEntry != null && ceilingEntry.getValue().intersects(range)) {\n+            return true;\n+        }\n+        Entry<Integer, CDateRange> priorEntry = rangesByLowerBound.lowerEntry(range.getMinValue());\n+        return priorEntry != null && priorEntry.getValue().intersects(range);\n+    }\n+\n+    public boolean encloses(CDateRange range) {\n+        checkNotNull(range);\n+        Entry<Integer, CDateRange> floorEntry = rangesByLowerBound.floorEntry(range.getMinValue());\n+        return floorEntry != null && floorEntry.getValue().encloses(range);\n+    }\n+\n+    public CDateRange span() {\n+        Entry<Integer, CDateRange> firstEntry = rangesByLowerBound.firstEntry();\n+        if (firstEntry == null) {\n+            throw new NoSuchElementException();\n+        }\n+        return CDateRange.of(firstEntry.getValue().getMinValue(), rangesByLowerBound.lastEntry().getValue().getMaxValue());\n+    }\n+\n+    public void add(CDateRange rangeToAdd) {\n+        checkNotNull(rangeToAdd);\n+\n+        int lbToAdd = rangeToAdd.getMinValue();\n+        int ubToAdd = rangeToAdd.getMaxValue();\n+\n+        Entry<Integer, CDateRange> entryBelowLB = rangesByLowerBound.lowerEntry(lbToAdd);\n+        if (entryBelowLB != null) {\n+            CDateRange rangeBelowLB = entryBelowLB.getValue();\n+            //left neighbor would be connected\n+            if (rangeBelowLB.getMaxValue() >= lbToAdd - 1) {\n+                lbToAdd = rangeBelowLB.getMinValue();\n+                //left neighbor encloses new range\n+                if (rangeBelowLB.getMaxValue() > ubToAdd) {\n+                    ubToAdd = rangeBelowLB.getMaxValue();\n+                }\n+\n+            }\n+        }\n+\n+        Entry<Integer, CDateRange> entryBelowUB = rangesByLowerBound.floorEntry(ubToAdd + 1);\n+        if (entryBelowUB != null) {\n+            CDateRange rangeBelowUB = entryBelowUB.getValue();\n+            if (rangeBelowUB.getMaxValue() >= ubToAdd) {\n+                ubToAdd = rangeBelowUB.getMaxValue();\n+            }\n+        }\n+\n+        // Remove ranges which are strictly enclosed.\n+        rangesByLowerBound.subMap(lbToAdd, IntMath.saturatedAdd(ubToAdd, 1)).clear();\n+\n+        putRange(CDateRange.of(lbToAdd, ubToAdd));\n+    }\n+\n+    public void remove(CDateRange rangeToRemove) {\n+        checkNotNull(rangeToRemove);\n+\n+        Entry<Integer, CDateRange> entryBelowLB = rangesByLowerBound.lowerEntry(rangeToRemove.getMinValue());\n+        if (entryBelowLB != null) {\n+            CDateRange rangeBelowLB = entryBelowLB.getValue();\n+            //left neighbor intersects removed range => shorten it to everything before removed range\n+            if (rangeBelowLB.getMaxValue() >= rangeToRemove.getMinValue()) {\n+                putRange(CDateRange.of(rangeBelowLB.getMinValue(), rangeToRemove.getMinValue() - 1));\n+\n+                //left neighbor reaches beyond removed range => have to add cut of right part\n+                if (rangeBelowLB.getMaxValue() > rangeToRemove.getMaxValue()) {\n+                    putRange(CDateRange.of(rangeToRemove.getMaxValue() + 1, rangeBelowLB.getMaxValue()));\n+                }\n+            }\n+        }\n+\n+        Entry<Integer, CDateRange> entryBelowUB = rangesByLowerBound.floorEntry(rangeToRemove.getMaxValue());\n+        if (entryBelowUB != null) {\n+            CDateRange rangeBelowUB = entryBelowUB.getValue();\n+            //if reaches beyond removed range => have to add cut of right part\n+            if (rangeBelowUB.getMaxValue() > rangeToRemove.getMaxValue()) {\n+                // { > }\n+                putRange(CDateRange.of(rangeToRemove.getMaxValue() + 1, rangeBelowUB.getMaxValue()));\n+            }\n+        }\n+\n+        rangesByLowerBound.subMap(rangeToRemove.getMinValue(), IntMath.saturatedAdd(rangeToRemove.getMaxValue(), 1)).clear();\n+    }\n+\n+    private void putRange(CDateRange range) {\n+        rangesByLowerBound.put(range.getMinValue(), range);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        Joiner.on(\", \").appendTo(sb, this.asRanges());\n+        sb.append('}');\n+        return sb.toString();\n+    }\n+\n+    @JsonIgnore\n+    public boolean isAll() {\n+        if (this.rangesByLowerBound.isEmpty()) {\n+            return false;\n+        }\n+        return this.rangesByLowerBound.values().iterator().next().isAll();\n+    }\n+\n+    public void retainAll(ICDateSet retained) {\n+        // TODO: 18.08.2020 fk: implement this\n+    }\n+\n+    public void retainAll(CDateSet retained) {\n+        if (retained.isEmpty()) {\n+            this.clear();\n+            return;\n+        }\n+        if (retained.isAll()) {\n+            return;\n+        }\n+\n+        List<CDateRange> l = new ArrayList<>(retained.rangesByLowerBound.values());\n+\n+        //remove all before the first range\n+        if (!l.get(0).isAtMost()) {\n+            this.remove(CDateRange.of(Integer.MIN_VALUE, l.get(0).getMinValue() - 1));\n+        }\n+\n+        //remove all between ranges\n+        for (int i = 0; i < l.size() - 1; i++) {\n+            this.remove(CDateRange.of(l.get(i).getMaxValue() + 1, l.get(i + 1).getMinValue() - 1));\n+        }\n+\n+        //remove all after the last Range\n+        if (!l.get(l.size() - 1).isAtLeast()) {\n+            this.remove(CDateRange.of(l.get(l.size() - 1).getMaxValue() + 1, Integer.MAX_VALUE));\n+        }\n+    }\n+\n+    public void retainAll(CDateRange retained) {\n+        if (retained.isAll()) {\n+            return;\n+        }\n+\n+        //remove all before the range\n+        if (!retained.isAtMost()) {\n+            this.remove(CDateRange.of(Integer.MIN_VALUE, retained.getMinValue() - 1));\n+        }\n+\n+        //remove all after the Range\n+        if (!retained.isAtLeast()) {\n+            this.remove(CDateRange.of(retained.getMaxValue() + 1, Integer.MAX_VALUE));\n+        }\n+    }\n+\n+    /**\n+     * Counts the number of days represented by this CDateSet.\n+     *\n+     * @return the number of days or null if there are infinite days in the set\n+     */\n+    public Long countDays() {\n+        //if we have no entries we return zero days\n+        if (rangesByLowerBound.firstEntry() == null) {\n+            return 0L;\n+        }\n+        if (rangesByLowerBound.firstEntry().getValue().isOpen() || rangesByLowerBound.lastEntry().getValue().isOpen()) {\n+            return null;\n+        }\n+        long sum = 0;\n+        for (CDateRange r : this.asRanges()) {\n+            sum += r.getMaxValue() - r.getMinValue() + 1;\n+        }\n+        return sum;\n+    }\n+\n+    public int getMinValue() {\n+        return rangesByLowerBound.firstEntry().getValue().getMinValue();\n+    }\n+\n+    public int getMaxValue() {\n+        return rangesByLowerBound.lastEntry().getValue().getMaxValue();\n+    }\n+\n+    public static CDateSet parse(String value) {\n+        List<CDateRange> ranges = PARSE_PATTERN\n+            .matcher(value)\n+            .results()\n+            .map(mr -> {\n+                try {\n+                    return DateRangeParser.parseISORange(mr.group(2));\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                }\n+            })\n+            .collect(Collectors.toList());\n+        return CDateSet.create(ranges);\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 364
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/567/CDateSet.java\nindex 2d80eaf317e..623f8ca1c1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/567/CDateSet.java\n@@ -23,7 +23,7 @@ import com.google.common.math.IntMath;\n import lombok.EqualsAndHashCode;\n \n @EqualsAndHashCode\n-public class CDateSet implements ICDateSet{\n+public class CDateSet implements ICDateSet {\n \n \tprivate static final Pattern PARSE_PATTERN = Pattern.compile(\"(\\\\{|,\\\\s*)((\\\\d{4}-\\\\d{2}-\\\\d{2})?/(\\\\d{4}-\\\\d{2}-\\\\d{2})?)\");\n \tprivate final NavigableMap<Integer, CDateRange> rangesByLowerBound;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/567/CDateSet.java\nindex 2d80eaf317e..623f8ca1c1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/567/CDateSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/567/CDateSet.java\n@@ -23,7 +23,7 @@ import com.google.common.math.IntMath;\n import lombok.EqualsAndHashCode;\n \n @EqualsAndHashCode\n-public class CDateSet implements ICDateSet{\n+public class CDateSet implements ICDateSet {\n \n \tprivate static final Pattern PARSE_PATTERN = Pattern.compile(\"(\\\\{|,\\\\s*)((\\\\d{4}-\\\\d{2}-\\\\d{2})?/(\\\\d{4}-\\\\d{2}-\\\\d{2})?)\");\n \tprivate final NavigableMap<Integer, CDateRange> rangesByLowerBound;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
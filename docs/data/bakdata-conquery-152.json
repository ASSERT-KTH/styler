{
    "project_name": "bakdata-conquery",
    "error_id": "152",
    "information": {
        "errors": [
            {
                "line": "35",
                "column": "71",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "@ToString\n@Builder(builderClassName = \"ConceptManipulatorInternalBuilder\", builderMethodName = \"internalBuilder\")\npublic class FilteringConceptManipulator implements ConceptManipulator{\n\n\t@Builder.Default\n\tprivate List<ConceptSelectId> selectBlockList = Collections.emptyList();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/152/FilteringConceptManipulator.java\nindex 44b948aadeb..a87a4ee1b76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/152/FilteringConceptManipulator.java\n@@ -32,7 +32,7 @@ import lombok.ToString;\n @Setter\n @ToString\n @Builder(builderClassName = \"ConceptManipulatorInternalBuilder\", builderMethodName = \"internalBuilder\")\n-public class FilteringConceptManipulator implements ConceptManipulator{\n+public class FilteringConceptManipulator implements ConceptManipulator {\n \n \t@Builder.Default\n \tprivate List<ConceptSelectId> selectBlockList = Collections.emptyList();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/152/FilteringConceptManipulator.java\nindex 44b948aadeb..05d3b7d2348 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/152/FilteringConceptManipulator.java\n@@ -24,7 +24,7 @@ import lombok.ToString;\n  * allowlisting for {@link ConceptSelectId} and {@link CQTable}s. After this\n  * filtering, the defined default values are added if the corresponding list is\n  * empty.\n- *\n+ * <p>\n  * For allowlisted tables a {@link TableManipulator} can be defined, that\n  * applies the filtering on specific tables.\n  */\n@@ -32,118 +32,116 @@ import lombok.ToString;\n @Setter\n @ToString\n @Builder(builderClassName = \"ConceptManipulatorInternalBuilder\", builderMethodName = \"internalBuilder\")\n-public class FilteringConceptManipulator implements ConceptManipulator{\n-\n-\t@Builder.Default\n-\tprivate List<ConceptSelectId> selectBlockList = Collections.emptyList();\n-\t@Builder.Default\n-\tprivate List<ConceptSelectId> selectAllowList = Collections.emptyList();\n-\t@Builder.Default\n-\tprivate List<ConceptSelectId> selectDefault = Collections.emptyList();\n-\n-\t@Builder.Default\n-\tprivate List<ConnectorId> tableBlockList = Collections.emptyList();\n-\t@Builder.Default\n-\tprivate Map<ConnectorId, TableManipulator> tableAllowList = Collections.emptyMap();\n-\t@Builder.Default\n-\tprivate List<CQTable> tableDefault = Collections.emptyList();\n-\n-\tprivate void init() {\n-\n-\t\tif (!selectBlockList.isEmpty() && !selectAllowList.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\"Either select blocklist or allowlist needs to be empty.\");\n-\t\t}\n-\n-\t\tSet<ConceptSelectId> blockDefaultSelectIntersection = selectBlockList\n-\t\t\t.stream()\n-\t\t\t.distinct()\n-\t\t\t.filter(selectDefault::contains)\n-\t\t\t.collect(Collectors.toSet());\n-\t\tif (!blockDefaultSelectIntersection.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\n-\t\t\t\tString\n-\t\t\t\t\t.format(\n-\t\t\t\t\t\t\"The list of default selects intersects with the blocklist. Intersecting Elements:\\t\",\n-\t\t\t\t\t\tblockDefaultSelectIntersection.toString()));\n-\t\t}\n-\n-\t\t// Check tables\n-\t\tif (!tableBlockList.isEmpty() && !tableAllowList.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\"Either table blocklist or allowlist needs to be empty.\");\n-\t\t}\n-\n-\t\tSet<ConnectorId> blockDefaultTableIntersection = tableDefault\n-\t\t\t.stream()\n-\t\t\t.map(CQTable::getConnector)\n-\t\t\t.map(Connector::getId)\n-\t\t\t.distinct()\n-\t\t\t.filter(tableBlockList::contains)\n-\t\t\t.collect(Collectors.toSet());\n-\n-\t\tif (!blockDefaultTableIntersection.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\n-\t\t\t\tString\n-\t\t\t\t\t.format(\n-\t\t\t\t\t\t\"The list of default tables intersects with the blocklist. Intersecting Elements:\\t\",\n-\t\t\t\t\t\tblockDefaultTableIntersection.toString()));\n-\t\t}\n-\t}\n-\n-\tpublic void consume(CQConcept concept, DatasetRegistry namespaces) {\n-\n-\t\tList<Select> selects = concept.getSelects();\n-\t\tif (!selectBlockList.isEmpty()) {\n-\t\t\tselects.removeIf(s -> selectBlockList.contains(s.getId()));\n-\t\t}\n-\t\telse if (!selectAllowList.isEmpty()) {\n-\t\t\tselects.removeIf(s -> !selectAllowList.contains(s.getId()));\n-\t\t}\n-\n-\t\t// Add default selects if none is present anymore\n-\t\tif (selects.isEmpty()) {\n-\t\t\tconcept.setSelects(selectDefault.stream().map(namespaces::resolve).collect(Collectors.toList()));\n-\t\t}\n-\n-\t\t// Handle tables\n-\t\tList<CQTable> tables = concept.getTables();\n-\t\tIterator<CQTable> it = tables.iterator();\n-\t\twhile(it.hasNext()) {\n-\t\t\tCQTable table = it.next();\n-\t\t\tif (tableBlockList.contains(table.getConnector().getId())) {\n-\t\t\t\tit.remove();\n-\t\t\t}\n-\t\t\tif (!tableAllowList.containsKey(table.getConnector().getId())) {\n-\t\t\t\tit.remove();\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\t// If table is allowlisted apply a table manipulator if one exist\n-\t\t\t\tTableManipulator tableMan = tableAllowList.get(table.getConnector().getId());\n-\t\t\t\tif (tableMan != null) {\n-\t\t\t\t\ttableMan.consume(table, namespaces);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tif(tables.isEmpty()) {\n-\t\t\tthrow new IllegalStateException(String.format(\"After filtering the tables of concept %s, no table was left in the concept. ConceptManipulator: %s\", concept, this.toString()));\n-\t\t}\n-\t}\n-\n-\tpublic static ConceptManipulatorBuilder builder() {\n-\t\treturn new ConceptManipulatorBuilder();\n-\t}\n-\n-\tpublic static class ConceptManipulatorBuilder extends ConceptManipulatorInternalBuilder {\n-\n-\t\tpublic ConceptManipulatorBuilder() {\n-\t\t\tsuper();\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic FilteringConceptManipulator build() {\n-\t\t\tFilteringConceptManipulator foo = super.build();\n-\t\t\tfoo.init();\n-\t\t\treturn foo;\n-\t\t}\n-\t}\n+public class FilteringConceptManipulator implements ConceptManipulator {\n+\n+    @Builder.Default\n+    private List<ConceptSelectId> selectBlockList = Collections.emptyList();\n+    @Builder.Default\n+    private List<ConceptSelectId> selectAllowList = Collections.emptyList();\n+    @Builder.Default\n+    private List<ConceptSelectId> selectDefault = Collections.emptyList();\n+\n+    @Builder.Default\n+    private List<ConnectorId> tableBlockList = Collections.emptyList();\n+    @Builder.Default\n+    private Map<ConnectorId, TableManipulator> tableAllowList = Collections.emptyMap();\n+    @Builder.Default\n+    private List<CQTable> tableDefault = Collections.emptyList();\n+\n+    private void init() {\n+\n+        if (!selectBlockList.isEmpty() && !selectAllowList.isEmpty()) {\n+            throw new IllegalArgumentException(\"Either select blocklist or allowlist needs to be empty.\");\n+        }\n+\n+        Set<ConceptSelectId> blockDefaultSelectIntersection = selectBlockList\n+            .stream()\n+            .distinct()\n+            .filter(selectDefault::contains)\n+            .collect(Collectors.toSet());\n+        if (!blockDefaultSelectIntersection.isEmpty()) {\n+            throw new IllegalArgumentException(\n+                String\n+                    .format(\n+                        \"The list of default selects intersects with the blocklist. Intersecting Elements:\\t\",\n+                        blockDefaultSelectIntersection.toString()));\n+        }\n+\n+        // Check tables\n+        if (!tableBlockList.isEmpty() && !tableAllowList.isEmpty()) {\n+            throw new IllegalArgumentException(\"Either table blocklist or allowlist needs to be empty.\");\n+        }\n+\n+        Set<ConnectorId> blockDefaultTableIntersection = tableDefault\n+            .stream()\n+            .map(CQTable::getConnector)\n+            .map(Connector::getId)\n+            .distinct()\n+            .filter(tableBlockList::contains)\n+            .collect(Collectors.toSet());\n+\n+        if (!blockDefaultTableIntersection.isEmpty()) {\n+            throw new IllegalArgumentException(\n+                String\n+                    .format(\n+                        \"The list of default tables intersects with the blocklist. Intersecting Elements:\\t\",\n+                        blockDefaultTableIntersection.toString()));\n+        }\n+    }\n+\n+    public void consume(CQConcept concept, DatasetRegistry namespaces) {\n+\n+        List<Select> selects = concept.getSelects();\n+        if (!selectBlockList.isEmpty()) {\n+            selects.removeIf(s -> selectBlockList.contains(s.getId()));\n+        } else if (!selectAllowList.isEmpty()) {\n+            selects.removeIf(s -> !selectAllowList.contains(s.getId()));\n+        }\n+\n+        // Add default selects if none is present anymore\n+        if (selects.isEmpty()) {\n+            concept.setSelects(selectDefault.stream().map(namespaces::resolve).collect(Collectors.toList()));\n+        }\n+\n+        // Handle tables\n+        List<CQTable> tables = concept.getTables();\n+        Iterator<CQTable> it = tables.iterator();\n+        while (it.hasNext()) {\n+            CQTable table = it.next();\n+            if (tableBlockList.contains(table.getConnector().getId())) {\n+                it.remove();\n+            }\n+            if (!tableAllowList.containsKey(table.getConnector().getId())) {\n+                it.remove();\n+            } else {\n+                // If table is allowlisted apply a table manipulator if one exist\n+                TableManipulator tableMan = tableAllowList.get(table.getConnector().getId());\n+                if (tableMan != null) {\n+                    tableMan.consume(table, namespaces);\n+                }\n+            }\n+        }\n+        if (tables.isEmpty()) {\n+            throw new IllegalStateException(String.format(\"After filtering the tables of concept %s, no table was left in the concept. ConceptManipulator: %s\", concept, this.toString()));\n+        }\n+    }\n+\n+    public static ConceptManipulatorBuilder builder() {\n+        return new ConceptManipulatorBuilder();\n+    }\n+\n+    public static class ConceptManipulatorBuilder extends ConceptManipulatorInternalBuilder {\n+\n+        public ConceptManipulatorBuilder() {\n+            super();\n+        }\n+\n+        @Override\n+        public FilteringConceptManipulator build() {\n+            FilteringConceptManipulator foo = super.build();\n+            foo.init();\n+            return foo;\n+        }\n+    }\n \n }\n",
            "diff_size": 114
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "68",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "1",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/152/FilteringConceptManipulator.java\nindex 44b948aadeb..574f719ea95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/152/FilteringConceptManipulator.java\n@@ -32,7 +32,7 @@ import lombok.ToString;\n @Setter\n @ToString\n @Builder(builderClassName = \"ConceptManipulatorInternalBuilder\", builderMethodName = \"internalBuilder\")\n-public class FilteringConceptManipulator implements ConceptManipulator{\n+public class FilteringConceptManipulator implements ConceptManipulator {\n \n \t@Builder.Default\n \tprivate List<ConceptSelectId> selectBlockList = Collections.emptyList();\n@@ -65,7 +65,7 @@ public class FilteringConceptManipulator implements ConceptManipulator{\n \t\t\t\t\t.format(\n \t\t\t\t\t\t\"The list of default selects intersects with the blocklist. Intersecting Elements:\\t\",\n \t\t\t\t\t\tblockDefaultSelectIntersection.toString()));\n-\t\t}\n+\t}\n \n \t\t// Check tables\n \t\tif (!tableBlockList.isEmpty() && !tableAllowList.isEmpty()) {\n@@ -79,14 +79,13 @@ public class FilteringConceptManipulator implements ConceptManipulator{\n \t\t\t.distinct()\n \t\t\t.filter(tableBlockList::contains)\n \t\t\t.collect(Collectors.toSet());\n-\n-\t\tif (!blockDefaultTableIntersection.isEmpty()) {\n+if (!blockDefaultTableIntersection.isEmpty()) {\n \t\t\tthrow new IllegalArgumentException(\n \t\t\t\tString\n \t\t\t\t\t.format(\n \t\t\t\t\t\t\"The list of default tables intersects with the blocklist. Intersecting Elements:\\t\",\n \t\t\t\t\t\tblockDefaultTableIntersection.toString()));\n-\t\t}\n+\t}\n \t}\n \n \tpublic void consume(CQConcept concept, DatasetRegistry namespaces) {\n@@ -146,4 +145,4 @@ public class FilteringConceptManipulator implements ConceptManipulator{\n \t\t}\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 7, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "column": "3",
                    "severity": "warning",
                    "message": "'while' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "column": "4",
                    "severity": "warning",
                    "message": "'while' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "column": "3",
                    "severity": "warning",
                    "message": "'while rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/152/FilteringConceptManipulator.java\nindex 44b948aadeb..3027f193847 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/152/FilteringConceptManipulator.java\n@@ -6,7 +6,6 @@ import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n-\n import com.bakdata.conquery.models.concepts.Connector;\n import com.bakdata.conquery.models.concepts.select.Select;\n import com.bakdata.conquery.models.identifiable.ids.specific.ConceptSelectId;\n@@ -28,122 +27,102 @@ import lombok.ToString;\n  * For allowlisted tables a {@link TableManipulator} can be defined, that\n  * applies the filtering on specific tables.\n  */\n-@Getter\n-@Setter\n-@ToString\n-@Builder(builderClassName = \"ConceptManipulatorInternalBuilder\", builderMethodName = \"internalBuilder\")\n-public class FilteringConceptManipulator implements ConceptManipulator{\n-\n-\t@Builder.Default\n-\tprivate List<ConceptSelectId> selectBlockList = Collections.emptyList();\n-\t@Builder.Default\n-\tprivate List<ConceptSelectId> selectAllowList = Collections.emptyList();\n-\t@Builder.Default\n-\tprivate List<ConceptSelectId> selectDefault = Collections.emptyList();\n-\n-\t@Builder.Default\n-\tprivate List<ConnectorId> tableBlockList = Collections.emptyList();\n-\t@Builder.Default\n-\tprivate Map<ConnectorId, TableManipulator> tableAllowList = Collections.emptyMap();\n-\t@Builder.Default\n-\tprivate List<CQTable> tableDefault = Collections.emptyList();\n-\n-\tprivate void init() {\n-\n-\t\tif (!selectBlockList.isEmpty() && !selectAllowList.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\"Either select blocklist or allowlist needs to be empty.\");\n-\t\t}\n-\n-\t\tSet<ConceptSelectId> blockDefaultSelectIntersection = selectBlockList\n-\t\t\t.stream()\n-\t\t\t.distinct()\n-\t\t\t.filter(selectDefault::contains)\n-\t\t\t.collect(Collectors.toSet());\n-\t\tif (!blockDefaultSelectIntersection.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\n-\t\t\t\tString\n-\t\t\t\t\t.format(\n-\t\t\t\t\t\t\"The list of default selects intersects with the blocklist. Intersecting Elements:\\t\",\n-\t\t\t\t\t\tblockDefaultSelectIntersection.toString()));\n-\t\t}\n-\n-\t\t// Check tables\n-\t\tif (!tableBlockList.isEmpty() && !tableAllowList.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\"Either table blocklist or allowlist needs to be empty.\");\n-\t\t}\n-\n-\t\tSet<ConnectorId> blockDefaultTableIntersection = tableDefault\n-\t\t\t.stream()\n-\t\t\t.map(CQTable::getConnector)\n-\t\t\t.map(Connector::getId)\n-\t\t\t.distinct()\n-\t\t\t.filter(tableBlockList::contains)\n-\t\t\t.collect(Collectors.toSet());\n-\n-\t\tif (!blockDefaultTableIntersection.isEmpty()) {\n-\t\t\tthrow new IllegalArgumentException(\n-\t\t\t\tString\n-\t\t\t\t\t.format(\n-\t\t\t\t\t\t\"The list of default tables intersects with the blocklist. Intersecting Elements:\\t\",\n-\t\t\t\t\t\tblockDefaultTableIntersection.toString()));\n-\t\t}\n-\t}\n-\n-\tpublic void consume(CQConcept concept, DatasetRegistry namespaces) {\n-\n-\t\tList<Select> selects = concept.getSelects();\n-\t\tif (!selectBlockList.isEmpty()) {\n-\t\t\tselects.removeIf(s -> selectBlockList.contains(s.getId()));\n-\t\t}\n-\t\telse if (!selectAllowList.isEmpty()) {\n-\t\t\tselects.removeIf(s -> !selectAllowList.contains(s.getId()));\n-\t\t}\n-\n-\t\t// Add default selects if none is present anymore\n-\t\tif (selects.isEmpty()) {\n-\t\t\tconcept.setSelects(selectDefault.stream().map(namespaces::resolve).collect(Collectors.toList()));\n-\t\t}\n-\n-\t\t// Handle tables\n-\t\tList<CQTable> tables = concept.getTables();\n-\t\tIterator<CQTable> it = tables.iterator();\n-\t\twhile(it.hasNext()) {\n-\t\t\tCQTable table = it.next();\n-\t\t\tif (tableBlockList.contains(table.getConnector().getId())) {\n-\t\t\t\tit.remove();\n-\t\t\t}\n-\t\t\tif (!tableAllowList.containsKey(table.getConnector().getId())) {\n-\t\t\t\tit.remove();\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\t// If table is allowlisted apply a table manipulator if one exist\n-\t\t\t\tTableManipulator tableMan = tableAllowList.get(table.getConnector().getId());\n-\t\t\t\tif (tableMan != null) {\n-\t\t\t\t\ttableMan.consume(table, namespaces);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tif(tables.isEmpty()) {\n-\t\t\tthrow new IllegalStateException(String.format(\"After filtering the tables of concept %s, no table was left in the concept. ConceptManipulator: %s\", concept, this.toString()));\n-\t\t}\n-\t}\n-\n-\tpublic static ConceptManipulatorBuilder builder() {\n-\t\treturn new ConceptManipulatorBuilder();\n-\t}\n-\n-\tpublic static class ConceptManipulatorBuilder extends ConceptManipulatorInternalBuilder {\n-\n-\t\tpublic ConceptManipulatorBuilder() {\n-\t\t\tsuper();\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic FilteringConceptManipulator build() {\n-\t\t\tFilteringConceptManipulator foo = super.build();\n-\t\t\tfoo.init();\n-\t\t\treturn foo;\n-\t\t}\n-\t}\n-\n-}\n+\n+@Getter @Setter @ToString @Builder(builderClassName=\"ConceptManipulatorInternalBuilder\", builderMethodName=\"internalBuilder\")\n+public class FilteringConceptManipulator implements ConceptManipulator {\n+\n+ @Builder.Default\n+ private List<ConceptSelectId> selectBlockList = Collections.emptyList();\n+\n+ @Builder.Default\n+ private List<ConceptSelectId> selectAllowList = Collections.emptyList();\n+\n+ @Builder.Default\n+ private List<ConceptSelectId> selectDefault = Collections.emptyList();\n+\n+ @Builder.Default\n+ private List<ConnectorId> tableBlockList = Collections.emptyList();\n+\n+ @Builder.Default\n+ private Map<ConnectorId, TableManipulator> tableAllowList = Collections.emptyMap();\n+\n+ @Builder.Default\n+ private List<CQTable> tableDefault = Collections.emptyList();\n+ private void init() {\n+  if (!selectBlockList.isEmpty() && !selectAllowList.isEmpty()) {\n+   throw new IllegalArgumentException(\"Either select blocklist or allowlist needs to be empty.\");\n+  }\n+\n+  Set<ConceptSelectId> blockDefaultSelectIntersection = selectBlockList.stream().distinct().filter(selectDefault::contains).collect(Collectors.toSet());\n+  if (!blockDefaultSelectIntersection.isEmpty()) {\n+   throw new IllegalArgumentException(String.format(\"The list of default selects intersects with the blocklist. Intersecting Elements:\\t\", blockDefaultSelectIntersection.toString()));\n+  }\n+\n+  // Check tables\n+  if (!tableBlockList.isEmpty() && !tableAllowList.isEmpty()) {\n+   throw new IllegalArgumentException(\"Either table blocklist or allowlist needs to be empty.\");\n+  }\n+\n+  Set<ConnectorId> blockDefaultTableIntersection = tableDefault.stream().map(CQTable::getConnector).map(Connector::getId).distinct().filter(tableBlockList::contains).collect(Collectors.toSet());\n+  if (!blockDefaultTableIntersection.isEmpty()) {\n+   throw new IllegalArgumentException(String.format(\"The list of default tables intersects with the blocklist. Intersecting Elements:\\t\", blockDefaultTableIntersection.toString()));\n+  }\n+ }\n+\n+ public void consume(CQConcept concept, DatasetRegistry namespaces) {\n+  List<Select> selects = concept.getSelects();\n+  if(!selectBlockList.isEmpty()) {\n+   selects.removeIf(s -> selectBlockList.contains(s.getId()));\n+  }\n+  else if(!selectAllowList.isEmpty()) {\n+        selects.removeIf(s -> !selectAllowList.contains(s.getId()));\n+       }\n+\n+  // Add default selects if none is present anymore\n+  if (selects.isEmpty()) {\n+   concept.setSelects(selectDefault.stream().map(namespaces::resolve).collect(Collectors.toList()));\n+  }\n+\n+  // Handle tables\n+\n+  List<CQTable> tables = concept.getTables();\n+  Iterator<CQTable> it = tables.iterator();\n+  while (it.hasNext()) {\n+   CQTable table = it.next();\n+   if (tableBlockList.contains(table.getConnector().getId())) {\n+    it.remove();\n+   }\n+   if(!tableAllowList.containsKey(table.getConnector().getId())) {\n+    it.remove();\n+   }\n+   else {\n+    // If table is allowlisted apply a table manipulator if one exist\n+    TableManipulator tableMan = tableAllowList.get(table.getConnector().getId());\n+    if (tableMan != null) {\n+     tableMan.consume(table, namespaces);\n+    }\n+   }\n+  }\n+  if (tables.isEmpty()) {\n+   throw new IllegalStateException(String.format(\"After filtering the tables of concept %s, no table was left in the concept. ConceptManipulator: %s\", concept, this.toString()));\n+  }\n+ }\n+\n+ public static ConceptManipulatorBuilder builder() {\n+  return new ConceptManipulatorBuilder();\n+ }\n+\n+ public static class ConceptManipulatorBuilder extends ConceptManipulatorInternalBuilder {\n+\n+  public ConceptManipulatorBuilder() {\n+   super();\n+  }\n+\n+  @Override\n+  public FilteringConceptManipulator build() {\n+   FilteringConceptManipulator foo = super.build();\n+   foo.init();\n+   return foo;\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 120
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/152/FilteringConceptManipulator.java\nindex 44b948aadeb..a87a4ee1b76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/152/FilteringConceptManipulator.java\n@@ -32,7 +32,7 @@ import lombok.ToString;\n @Setter\n @ToString\n @Builder(builderClassName = \"ConceptManipulatorInternalBuilder\", builderMethodName = \"internalBuilder\")\n-public class FilteringConceptManipulator implements ConceptManipulator{\n+public class FilteringConceptManipulator implements ConceptManipulator {\n \n \t@Builder.Default\n \tprivate List<ConceptSelectId> selectBlockList = Collections.emptyList();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "warning",
                    "message": "'{' at column 1 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/152/FilteringConceptManipulator.java\nindex 44b948aadeb..ecea56d4941 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/152/FilteringConceptManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/152/FilteringConceptManipulator.java\n@@ -32,9 +32,9 @@ import lombok.ToString;\n @Setter\n @ToString\n @Builder(builderClassName = \"ConceptManipulatorInternalBuilder\", builderMethodName = \"internalBuilder\")\n-public class FilteringConceptManipulator implements ConceptManipulator{\n+public class FilteringConceptManipulator implements ConceptManipulator\n \n-\t@Builder.Default\n+{ @Builder.Default\n \tprivate List<ConceptSelectId> selectBlockList = Collections.emptyList();\n \t@Builder.Default\n \tprivate List<ConceptSelectId> selectAllowList = Collections.emptyList();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
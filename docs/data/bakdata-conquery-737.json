{
    "project_name": "bakdata-conquery",
    "error_id": "737",
    "information": {
        "errors": [
            {
                "line": "127",
                "column": "1",
                "severity": "warning",
                "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 128.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
            }
        ]
    },
    "source_code": "//\t\t\t\t\tadd(primaryDictionary, new File(file.getParentFile(), file.getName() + \".entities.csv\"));\n//\t\t\t\t}\n//\t\t\t}\n\t\t}\n\n\t\tprivate void add(EncodedDictionary primDict, File file) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "128",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/737/CollectEntitiesCommand.java\nindex eae1421e217..e10be6f4f1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/737/CollectEntitiesCommand.java\n@@ -125,7 +125,7 @@ public class CollectEntitiesCommand extends Command {\n //\t\t\t\t\tadd(primaryDictionary, new File(file.getParentFile(), file.getName() + \".entities.csv\"));\n //\t\t\t\t}\n //\t\t\t}\n-\t\t}\n+}\n \n \t\tprivate void add(EncodedDictionary primDict, File file) {\n \t\t\tSet<String> list = entities.computeIfAbsent(file, f -> Sets.newConcurrentHashSet());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 127.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/737/CollectEntitiesCommand.java\nindex eae1421e217..6aeb58de0bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/737/CollectEntitiesCommand.java\n@@ -33,82 +33,81 @@ import net.sourceforge.argparse4j.inf.Subparser;\n @Slf4j\n public class CollectEntitiesCommand extends Command {\n \n-\tprivate ConcurrentMap<File, Set<String>> entities = new ConcurrentHashMap<>();\n-\tprivate boolean verbose = false;\n-\n-\tpublic CollectEntitiesCommand() {\n-\t\tsuper(\"collectEntities\", \"Collect all entities from the given preprocessing directories.\");\n-\t}\n-\n-\t@Override\n-\tpublic void configure(Subparser subparser) {\n-\t\tsubparser\n-\t\t\t\t.addArgument(\"-verbose\")\n-\t\t\t\t.help(\"creates not only a file for all entities but for eqach cqpp\")\n-\t\t\t\t.action(Arguments.storeTrue());\n-\n-\t\tsubparser\n-\t\t\t\t.addArgument(\"--file\")\n-\t\t\t\t.nargs(\"+\")\n-\t\t\t\t.help(\"List of CQPP to process\");\n-\n-\t}\n-\n-\n-\t@Override\n-\tpublic void run(Bootstrap<?> bootstrap, Namespace namespace) throws Exception {\n-\t\tverbose = Boolean.TRUE.equals(namespace.getBoolean(\"-verbose\"));\n-\t\tCollection<EntityExtractor> jobs = findPreprocessedJobs(namespace.<File>getList(\"file\"));\n-\n-\t\tExecutorService pool = Executors.newCachedThreadPool();\n-\n-\t\tfor (EntityExtractor job : jobs) {\n-\t\t\tpool.submit(() -> {\n-\t\t\t\tConqueryMDC.setLocation(LogUtil.printPath(job.getFile()));\n-\t\t\t\ttry {\n-\t\t\t\t\tjob.execute();\n-\t\t\t\t\tlog.info(\"Merged {}\", LogUtil.printPath(job.getFile()));\n-\t\t\t\t}\n-\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\tlog.error(\"Failed to preprocess \" + LogUtil.printPath(job.getFile()), e);\n-\t\t\t\t}\n-\t\t\t});\n-\t\t}\n-\n-\t\tpool.shutdown();\n-\t\tpool.awaitTermination(24, TimeUnit.HOURS);\n-\n-\t\tlog.info(\"finished collecting ids, writing...\");\n-\t\tfor (Entry<File, Set<String>> e : entities.entrySet()) {\n-\t\t\tlog.info(\"{} entities into {}\", e.getValue().size(), e.getKey());\n-\t\t\tOut\n-\t\t\t\t\t.file(e.getKey())\n-\t\t\t\t\t.withUTF8()\n-\t\t\t\t\t.writeLines(e.getValue().stream().sorted().distinct().iterator());\n-\t\t}\n-\n-\t}\n-\n-\tpublic List<EntityExtractor> findPreprocessedJobs(List<File> files) throws IOException, JSONException {\n-\t\tList<EntityExtractor> l = new ArrayList<>();\n-\t\tfor (File preprocessedFile : files) {\n-\t\t\tif (!preprocessedFile.getName().endsWith(ConqueryConstants.EXTENSION_PREPROCESSED)) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\t\t\tl.add(new EntityExtractor(preprocessedFile));\n-\t\t}\n-\t\treturn l;\n-\t}\n-\n-\t@RequiredArgsConstructor\n-\t@Getter\n-\tpublic class EntityExtractor implements Executable {\n-\n-\t\tprivate final File file;\n-\n-\t\t@Override\n-\t\tpublic void execute() throws Exception {\n+    private ConcurrentMap<File, Set<String>> entities = new ConcurrentHashMap<>();\n+    private boolean verbose = false;\n+\n+    public CollectEntitiesCommand() {\n+        super(\"collectEntities\", \"Collect all entities from the given preprocessing directories.\");\n+    }\n+\n+    @Override\n+    public void configure(Subparser subparser) {\n+        subparser\n+            .addArgument(\"-verbose\")\n+            .help(\"creates not only a file for all entities but for eqach cqpp\")\n+            .action(Arguments.storeTrue());\n+\n+        subparser\n+            .addArgument(\"--file\")\n+            .nargs(\"+\")\n+            .help(\"List of CQPP to process\");\n+\n+    }\n+\n+\n+    @Override\n+    public void run(Bootstrap<?> bootstrap, Namespace namespace) throws Exception {\n+        verbose = Boolean.TRUE.equals(namespace.getBoolean(\"-verbose\"));\n+        Collection<EntityExtractor> jobs = findPreprocessedJobs(namespace.<File>getList(\"file\"));\n+\n+        ExecutorService pool = Executors.newCachedThreadPool();\n+\n+        for (EntityExtractor job : jobs) {\n+            pool.submit(() -> {\n+                ConqueryMDC.setLocation(LogUtil.printPath(job.getFile()));\n+                try {\n+                    job.execute();\n+                    log.info(\"Merged {}\", LogUtil.printPath(job.getFile()));\n+                } catch (Exception e) {\n+                    log.error(\"Failed to preprocess \" + LogUtil.printPath(job.getFile()), e);\n+                }\n+            });\n+        }\n+\n+        pool.shutdown();\n+        pool.awaitTermination(24, TimeUnit.HOURS);\n+\n+        log.info(\"finished collecting ids, writing...\");\n+        for (Entry<File, Set<String>> e : entities.entrySet()) {\n+            log.info(\"{} entities into {}\", e.getValue().size(), e.getKey());\n+            Out\n+                .file(e.getKey())\n+                .withUTF8()\n+                .writeLines(e.getValue().stream().sorted().distinct().iterator());\n+        }\n+\n+    }\n+\n+    public List<EntityExtractor> findPreprocessedJobs(List<File> files) throws IOException, JSONException {\n+        List<EntityExtractor> l = new ArrayList<>();\n+        for (File preprocessedFile : files) {\n+            if (!preprocessedFile.getName().endsWith(ConqueryConstants.EXTENSION_PREPROCESSED)) {\n+                continue;\n+            }\n+\n+            l.add(new EntityExtractor(preprocessedFile));\n+        }\n+        return l;\n+    }\n+\n+    @RequiredArgsConstructor\n+    @Getter\n+    public class EntityExtractor implements Executable {\n+\n+        private final File file;\n+\n+        @Override\n+        public void execute() throws Exception {\n //\t\t\ttry (HCFile hcFile = new HCFile(file, false)) {\n //\t\t\t\tPreprocessedHeader header = Jackson.BINARY_MAPPER.readerFor(PreprocessedHeader.class).readValue(hcFile.readHeader());\n //\n@@ -125,13 +124,13 @@ public class CollectEntitiesCommand extends Command {\n //\t\t\t\t\tadd(primaryDictionary, new File(file.getParentFile(), file.getName() + \".entities.csv\"));\n //\t\t\t\t}\n //\t\t\t}\n-\t\t}\n-\n-\t\tprivate void add(EncodedDictionary primDict, File file) {\n-\t\t\tSet<String> list = entities.computeIfAbsent(file, f -> Sets.newConcurrentHashSet());\n-\t\t\tfor (int id = 0; id < primDict.getSize(); id++) {\n-\t\t\t\tlist.add(primDict.getElement(id));\n-\t\t\t}\n-\t\t}\n-\t}\n+        }\n+\n+        private void add(EncodedDictionary primDict, File file) {\n+            Set<String> list = entities.computeIfAbsent(file, f -> Sets.newConcurrentHashSet());\n+            for (int id = 0; id < primDict.getSize(); id++) {\n+                list.add(primDict.getElement(id));\n+            }\n+        }\n+    }\n }\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "84",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/737/CollectEntitiesCommand.java\nindex eae1421e217..c9871317f0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/737/CollectEntitiesCommand.java\n@@ -42,16 +42,13 @@ public class CollectEntitiesCommand extends Command {\n \n \t@Override\n \tpublic void configure(Subparser subparser) {\n-\t\tsubparser\n-\t\t\t\t.addArgument(\"-verbose\")\n+\t\tsubparser.addArgument(\"-verbose\")\n \t\t\t\t.help(\"creates not only a file for all entities but for eqach cqpp\")\n \t\t\t\t.action(Arguments.storeTrue());\n \n-\t\tsubparser\n-\t\t\t\t.addArgument(\"--file\")\n+\t\tsubparser.addArgument(\"--file\")\n \t\t\t\t.nargs(\"+\")\n \t\t\t\t.help(\"List of CQPP to process\");\n-\n \t}\n \n \n@@ -81,12 +78,10 @@ public class CollectEntitiesCommand extends Command {\n \t\tlog.info(\"finished collecting ids, writing...\");\n \t\tfor (Entry<File, Set<String>> e : entities.entrySet()) {\n \t\t\tlog.info(\"{} entities into {}\", e.getValue().size(), e.getKey());\n-\t\t\tOut\n-\t\t\t\t\t.file(e.getKey())\n+\t\t\tOut.file(e.getKey())\n \t\t\t\t\t.withUTF8()\n \t\t\t\t\t.writeLines(e.getValue().stream().sorted().distinct().iterator());\n-\t\t}\n-\n+\t}\n \t}\n \n \tpublic List<EntityExtractor> findPreprocessedJobs(List<File> files) throws IOException, JSONException {\n@@ -109,23 +104,8 @@ public class CollectEntitiesCommand extends Command {\n \n \t\t@Override\n \t\tpublic void execute() throws Exception {\n-//\t\t\ttry (HCFile hcFile = new HCFile(file, false)) {\n-//\t\t\t\tPreprocessedHeader header = Jackson.BINARY_MAPPER.readerFor(PreprocessedHeader.class).readValue(hcFile.readHeader());\n-//\n-//\t\t\t\tfinal PreprocessedData data = Preprocessed.readContainer(hcFile.readContent());\n-//\n-//\t\t\t\tlog.info(\"Reading {}\", header.getName());\n-//\n-//\t\t\t\tlog.debug(\"\\tparsing dictionaries\");\n-//\n-//\t\t\t\tfinal EncodedDictionary primaryDictionary = new EncodedDictionary(data.getPrimaryDictionary(), StringTypeEncoded.Encoding.UTF8);\n-//\n-//\t\t\t\tadd(primaryDictionary, new File(file.getParentFile(), \"all_entities.csv\"));\n-//\t\t\t\tif (verbose) {\n-//\t\t\t\t\tadd(primaryDictionary, new File(file.getParentFile(), file.getName() + \".entities.csv\"));\n-//\t\t\t\t}\n-//\t\t\t}\n-\t\t}\n+\t//\t\t\ttry (HCFile hcFile = new H\n+\t}\n \n \t\tprivate void add(EncodedDictionary primDict, File file) {\n \t\t\tSet<String> list = entities.computeIfAbsent(file, f -> Sets.newConcurrentHashSet());\n@@ -134,4 +114,4 @@ public class CollectEntitiesCommand extends Command {\n \t\t\t}\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "128",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/737/CollectEntitiesCommand.java\nindex eae1421e217..e10be6f4f1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/737/CollectEntitiesCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/737/CollectEntitiesCommand.java\n@@ -125,7 +125,7 @@ public class CollectEntitiesCommand extends Command {\n //\t\t\t\t\tadd(primaryDictionary, new File(file.getParentFile(), file.getName() + \".entities.csv\"));\n //\t\t\t\t}\n //\t\t\t}\n-\t\t}\n+}\n \n \t\tprivate void add(EncodedDictionary primDict, File file) {\n \t\t\tSet<String> list = entities.computeIfAbsent(file, f -> Sets.newConcurrentHashSet());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
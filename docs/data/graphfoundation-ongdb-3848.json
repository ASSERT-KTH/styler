{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3848",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3848/ServiceProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3848/ServiceProcessor.java\nindex 3c328cba38f..d163600ea5e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3848/ServiceProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3848/ServiceProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.annotations;\n \n import java.io.IOException;\n@@ -32,20 +33,20 @@ import javax.lang.model.element.ExecutableElement;\n import javax.lang.model.element.TypeElement;\n import javax.lang.model.type.TypeMirror;\n \n-@SupportedSourceVersion( SourceVersion.RELEASE_8 )\n-@SupportedAnnotationTypes( \"org.neo4j.helpers.Service.Implementation\" )\n+@SupportedSourceVersion(SourceVersion.RELEASE_8)\n+@SupportedAnnotationTypes(\"org.neo4j.helpers.Service.Implementation\")\n public class ServiceProcessor extends AnnotationProcessor\n {\n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    protected void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n-            Map<? extends ExecutableElement, ? extends AnnotationValue> values ) throws IOException\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  protected void process(TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n+                         Map<? extends ExecutableElement, ? extends AnnotationValue> values) throws IOException\n+  {\n+    for (AnnotationValue o : (List<? extends AnnotationValue>) values.values().iterator().next().getValue())\n     {\n-        for ( AnnotationValue o : (List<? extends AnnotationValue>) values.values().iterator().next().getValue() )\n-        {\n-            TypeMirror service = (TypeMirror) o.getValue();\n-            addTo( ( (TypeElement) annotated ).getQualifiedName().toString(), \"META-INF\", \"services\",\n-                    service.toString() );\n-        }\n+      TypeMirror service = (TypeMirror) o.getValue();\n+      addTo(((TypeElement) annotated).getQualifiedName().toString(), \"META-INF\", \"services\",\n+          service.toString());\n     }\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3848/ServiceProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3848/ServiceProcessor.java\nindex 3c328cba38f..7e0a589c3ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3848/ServiceProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3848/ServiceProcessor.java\n@@ -38,14 +38,13 @@ public class ServiceProcessor extends AnnotationProcessor\n {\n     @SuppressWarnings( \"unchecked\" )\n     @Override\n-    protected void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n-            Map<? extends ExecutableElement, ? extends AnnotationValue> values ) throws IOException\n-    {\n+    protected void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation, Map<? extends ExecutableElement, ? extends AnnotationValue> values ) throws IOException\n+{\n         for ( AnnotationValue o : (List<? extends AnnotationValue>) values.values().iterator().next().getValue() )\n         {\n             TypeMirror service = (TypeMirror) o.getValue();\n-            addTo( ( (TypeElement) annotated ).getQualifiedName().toString(), \"META-INF\", \"services\",\n+            addTo( ( (TypeElement) annotated).getQualifiedName().toString(), \"META-INF\", \"services\",\n                     service.toString() );\n-        }\n     }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
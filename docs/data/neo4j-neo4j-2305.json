{
    "project_name": "neo4j-neo4j",
    "error_id": "2305",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2305/IndexUpdateSink.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2305/IndexUpdateSink.java\nindex 7b4d62ba754..b27eba36f6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2305/IndexUpdateSink.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2305/IndexUpdateSink.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import java.io.IOException;\n@@ -41,26 +42,24 @@ public class IndexUpdateSink\n     private final JobScheduler scheduler;\n     private final Semaphore updateQueueLimit;\n \n-    IndexUpdateSink( JobScheduler scheduler, int eventuallyConsistentUpdateQueueLimit )\n+    IndexUpdateSink(JobScheduler scheduler, int eventuallyConsistentUpdateQueueLimit)\n     {\n         this.scheduler = scheduler;\n-        updateQueueLimit = new Semaphore( eventuallyConsistentUpdateQueueLimit );\n+        updateQueueLimit = new Semaphore(eventuallyConsistentUpdateQueueLimit);\n     }\n \n-    public void enqueueUpdate( DatabaseIndex<? extends IndexReader> index, IndexUpdater indexUpdater, IndexEntryUpdate<?> update )\n+    public void enqueueUpdate(DatabaseIndex<? extends IndexReader> index, IndexUpdater indexUpdater, IndexEntryUpdate<?> update)\n     {\n         updateQueueLimit.acquireUninterruptibly();\n         Runnable eventualUpdate = () ->\n         {\n             try\n             {\n-                indexUpdater.process( update );\n-            }\n-            catch ( IndexEntryConflictException e )\n+                indexUpdater.process(update);\n+            } catch (IndexEntryConflictException e)\n             {\n-                markAsFailed( index, e );\n-            }\n-            finally\n+                markAsFailed(index, e);\n+            } finally\n             {\n                 updateQueueLimit.release();\n             }\n@@ -68,49 +67,46 @@ public class IndexUpdateSink\n \n         try\n         {\n-            var monitoringParams = JobMonitoringParams.systemJob( \"Background update of index '\" + index.getDescriptor().getName() + \"'\" );\n-            scheduler.schedule( Group.INDEX_UPDATING, monitoringParams, eventualUpdate );\n-        }\n-        catch ( Exception e )\n+            var monitoringParams = JobMonitoringParams.systemJob(\"Background update of index '\" + index.getDescriptor().getName() + \"'\");\n+            scheduler.schedule(Group.INDEX_UPDATING, monitoringParams, eventualUpdate);\n+        } catch (Exception e)\n         {\n             updateQueueLimit.release(); // Avoid leaking permits if job scheduling fails.\n             throw e;\n         }\n     }\n \n-    private static void markAsFailed( DatabaseIndex<? extends IndexReader> index, IndexEntryConflictException conflict )\n+    private static void markAsFailed(DatabaseIndex<? extends IndexReader> index, IndexEntryConflictException conflict)\n     {\n         try\n         {\n-            index.markAsFailed( conflict.getMessage() );\n-        }\n-        catch ( IOException ioe )\n+            index.markAsFailed(conflict.getMessage());\n+        } catch (IOException ioe)\n         {\n-            ioe.addSuppressed( conflict );\n-            throw new UncheckedIOException( ioe );\n+            ioe.addSuppressed(conflict);\n+            throw new UncheckedIOException(ioe);\n         }\n     }\n \n-    public void closeUpdater( DatabaseIndex<? extends IndexReader> index, IndexUpdater indexUpdater )\n+    public void closeUpdater(DatabaseIndex<? extends IndexReader> index, IndexUpdater indexUpdater)\n     {\n-        var monitoringParams = JobMonitoringParams.systemJob( \"Closing of an updater for index '\" + index.getDescriptor().getName() + \"'\" );\n-        scheduler.schedule( Group.INDEX_UPDATING, monitoringParams, () ->\n+        var monitoringParams = JobMonitoringParams.systemJob(\"Closing of an updater for index '\" + index.getDescriptor().getName() + \"'\");\n+        scheduler.schedule(Group.INDEX_UPDATING, monitoringParams, () ->\n         {\n             try\n             {\n                 indexUpdater.close();\n-            }\n-            catch ( IndexEntryConflictException e )\n+            } catch (IndexEntryConflictException e)\n             {\n-                markAsFailed( index, e );\n+                markAsFailed(index, e);\n             }\n-        } );\n+        });\n     }\n \n     public void awaitUpdateApplication()\n     {\n         BinaryLatch updateLatch = new BinaryLatch();\n-        scheduler.schedule( Group.INDEX_UPDATING, JobMonitoringParams.NOT_MONITORED, updateLatch::release );\n+        scheduler.schedule(Group.INDEX_UPDATING, JobMonitoringParams.NOT_MONITORED, updateLatch::release);\n         updateLatch.await();\n     }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "521",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/521/Files.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/521/Files.java\nindex 67741697834..b8bcb8f8010 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/521/Files.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/521/Files.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.file;\n \n import java.io.File;\n@@ -30,24 +31,24 @@ import org.neo4j.io.fs.FileSystemAbstraction;\n  */\n public class Files\n {\n-    private Files()\n-    {\n-    }\n+  private Files()\n+  {\n+  }\n \n-    /**\n-     * Creates a file, or opens an existing file. If necessary, parent directories will be created.\n-     *\n-     * @param fileSystem The filesystem abstraction to use\n-     * @param file The file to create or open\n-     * @return An output stream\n-     * @throws IOException If an error occurs creating directories or opening the file\n-     */\n-    public static OutputStream createOrOpenAsOutputStream( FileSystemAbstraction fileSystem, File file, boolean append ) throws IOException\n+  /**\n+   * Creates a file, or opens an existing file. If necessary, parent directories will be created.\n+   *\n+   * @param fileSystem The filesystem abstraction to use\n+   * @param file       The file to create or open\n+   * @return An output stream\n+   * @throws IOException If an error occurs creating directories or opening the file\n+   */\n+  public static OutputStream createOrOpenAsOutputStream(FileSystemAbstraction fileSystem, File file, boolean append) throws IOException\n+  {\n+    if (file.getParentFile() != null)\n     {\n-        if ( file.getParentFile() != null )\n-        {\n-            fileSystem.mkdirs( file.getParentFile() );\n-        }\n-        return fileSystem.openAsOutputStream( file, append );\n+      fileSystem.mkdirs(file.getParentFile());\n     }\n+    return fileSystem.openAsOutputStream(file, append);\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/521/Files.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/521/Files.java\nindex 67741697834..0b611254a85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/521/Files.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/521/Files.java\n@@ -48,6 +48,7 @@ public class Files\n         {\n             fileSystem.mkdirs( file.getParentFile() );\n         }\n-        return fileSystem.openAsOutputStream( file, append );\n+\n+return fileSystem.openAsOutputStream( file, append );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/521/Files.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/521/Files.java\nindex 67741697834..717e01327cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/521/Files.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/521/Files.java\n@@ -22,12 +22,12 @@ package org.neo4j.io.file;\n import java.io.File;\n import java.io.IOException;\n import java.io.OutputStream;\n-\n import org.neo4j.io.fs.FileSystemAbstraction;\n \n /**\n  * This class consists exclusively of static methods that operate on files, directories, or other types of files.\n  */\n+\n public class Files\n {\n     private Files()\n@@ -42,12 +42,14 @@ public class Files\n      * @return An output stream\n      * @throws IOException If an error occurs creating directories or opening the file\n      */\n+\n     public static OutputStream createOrOpenAsOutputStream( FileSystemAbstraction fileSystem, File file, boolean append ) throws IOException\n     {\n         if ( file.getParentFile() != null )\n         {\n             fileSystem.mkdirs( file.getParentFile() );\n         }\n+\n         return fileSystem.openAsOutputStream( file, append );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
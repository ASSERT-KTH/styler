{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2244",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2244/AllRelationshipIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2244/AllRelationshipIterator.java\nindex aecef0fdf6d..1170101bc17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2244/AllRelationshipIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2244/AllRelationshipIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.store;\n \n import org.neo4j.kernel.impl.api.RelationshipVisitor;\n@@ -27,42 +28,41 @@ import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n public class AllRelationshipIterator extends HighIdAwareIterator<RelationshipStore>\n     implements RelationshipIterator\n {\n-    private final RelationshipRecord record;\n+  private final RelationshipRecord record;\n \n-    private long currentId;\n+  private long currentId;\n \n-    AllRelationshipIterator( RelationshipStore store )\n-    {\n-        super( store );\n-        this.record = store.newRecord();\n-    }\n+  AllRelationshipIterator(RelationshipStore store)\n+  {\n+    super(store);\n+    this.record = store.newRecord();\n+  }\n \n-    @Override\n-    public <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId,\n-            RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION\n-    {\n-        visitor.visit( relationshipId, record.getType(), record.getFirstNode(), record.getSecondNode() );\n-        return false;\n-    }\n+  @Override\n+  public <EXCEPTION extends Exception> boolean relationshipVisit(long relationshipId,\n+                                                                 RelationshipVisitor<EXCEPTION> visitor) throws EXCEPTION\n+  {\n+    visitor.visit(relationshipId, record.getType(), record.getFirstNode(), record.getSecondNode());\n+    return false;\n+  }\n \n-    @Override\n-    protected boolean doFetchNext( long highId )\n+  @Override\n+  protected boolean doFetchNext(long highId)\n+  {\n+    while (currentId <= highId)\n     {\n-        while ( currentId <= highId )\n+      try\n+      {\n+        store.getRecord(currentId, record, RecordLoad.CHECK);\n+        if (record.inUse())\n         {\n-            try\n-            {\n-                store.getRecord( currentId, record, RecordLoad.CHECK );\n-                if ( record.inUse() )\n-                {\n-                    return next( record.getId() );\n-                }\n-            }\n-            finally\n-            {\n-                currentId++;\n-            }\n+          return next(record.getId());\n         }\n-        return false;\n+      } finally\n+      {\n+        currentId++;\n+      }\n     }\n+    return false;\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2244/AllRelationshipIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2244/AllRelationshipIterator.java\nindex aecef0fdf6d..b363bff374c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2244/AllRelationshipIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2244/AllRelationshipIterator.java\n@@ -24,8 +24,7 @@ import org.neo4j.kernel.impl.store.RelationshipStore;\n import org.neo4j.kernel.impl.store.record.RecordLoad;\n import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n \n-public class AllRelationshipIterator extends HighIdAwareIterator<RelationshipStore>\n-    implements RelationshipIterator\n+public class AllRelationshipIterator extends HighIdAwareIterator<RelationshipStore> implements RelationshipIterator\n {\n     private final RelationshipRecord record;\n \n@@ -38,9 +37,8 @@ public class AllRelationshipIterator extends HighIdAwareIterator<RelationshipSto\n     }\n \n     @Override\n-    public <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId,\n-            RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION\n-    {\n+    public <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId, RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION\n+{\n         visitor.visit( relationshipId, record.getType(), record.getFirstNode(), record.getSecondNode() );\n         return false;\n     }\n@@ -65,4 +63,4 @@ public class AllRelationshipIterator extends HighIdAwareIterator<RelationshipSto\n         }\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
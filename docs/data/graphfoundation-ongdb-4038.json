{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4038",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4038/ExtensionPointRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4038/ExtensionPointRepresentation.java\nindex 404e3043e36..412718a8494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4038/ExtensionPointRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4038/ExtensionPointRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.util.ArrayList;\n@@ -26,90 +27,90 @@ import org.neo4j.server.plugins.ParameterDescriptionConsumer;\n \n public final class ExtensionPointRepresentation extends ObjectRepresentation implements ParameterDescriptionConsumer\n {\n-    private final RepresentationType extended;\n-    private final String name;\n-    private final String desciption;\n-    private final List<ParameterRepresentation> parameters = new ArrayList<>();\n+  private final RepresentationType extended;\n+  private final String name;\n+  private final String desciption;\n+  private final List<ParameterRepresentation> parameters = new ArrayList<>();\n \n-    public ExtensionPointRepresentation( String name, Class<?> extended, String desciption )\n-    {\n-        super( RepresentationType.PLUGIN_DESCRIPTION );\n-        this.name = name;\n-        this.desciption = desciption;\n-        this.extended = RepresentationType.extended( extended );\n-    }\n+  public ExtensionPointRepresentation(String name, Class<?> extended, String desciption)\n+  {\n+    super(RepresentationType.PLUGIN_DESCRIPTION);\n+    this.name = name;\n+    this.desciption = desciption;\n+    this.extended = RepresentationType.extended(extended);\n+  }\n \n-    @Override\n-    public void describeParameter( String name, Class<?> type, boolean optional, String description )\n-    {\n-        parameters.add( new ParameterRepresentation( name, type, optional, description, false ) );\n-    }\n+  @Override\n+  public void describeParameter(String name, Class<?> type, boolean optional, String description)\n+  {\n+    parameters.add(new ParameterRepresentation(name, type, optional, description, false));\n+  }\n \n-    @Override\n-    public void describeListParameter( String name, Class<?> type, boolean optional, String description )\n-    {\n-        parameters.add( new ParameterRepresentation( name, type, optional, description, true ) );\n-    }\n+  @Override\n+  public void describeListParameter(String name, Class<?> type, boolean optional, String description)\n+  {\n+    parameters.add(new ParameterRepresentation(name, type, optional, description, true));\n+  }\n \n-    public String getName()\n-    {\n-        return name;\n-    }\n+  public String getName()\n+  {\n+    return name;\n+  }\n \n-    public String getExtendedEntity()\n-    {\n-        return extended.valueName;\n-    }\n+  public String getExtendedEntity()\n+  {\n+    return extended.valueName;\n+  }\n \n-    @Mapping( \"name\" )\n-    public ValueRepresentation methodName()\n-    {\n-        return ValueRepresentation.string( name );\n-    }\n+  @Mapping(\"name\")\n+  public ValueRepresentation methodName()\n+  {\n+    return ValueRepresentation.string(name);\n+  }\n \n-    @Mapping( \"description\" )\n-    public ValueRepresentation description()\n-    {\n-        return ValueRepresentation.string( desciption );\n-    }\n+  @Mapping(\"description\")\n+  public ValueRepresentation description()\n+  {\n+    return ValueRepresentation.string(desciption);\n+  }\n \n-    @Mapping( \"extends\" )\n-    public ValueRepresentation extendedEntity()\n-    {\n-        return ValueRepresentation.string( getExtendedEntity() );\n-    }\n+  @Mapping(\"extends\")\n+  public ValueRepresentation extendedEntity()\n+  {\n+    return ValueRepresentation.string(getExtendedEntity());\n+  }\n+\n+  @Mapping(\"parameters\")\n+  public ListRepresentation parametersList()\n+  {\n+    return new ListRepresentation(RepresentationType.PLUGIN_PARAMETER, parameters);\n+  }\n \n-    @Mapping( \"parameters\" )\n-    public ListRepresentation parametersList()\n+  private static class ParameterRepresentation extends MappingRepresentation\n+  {\n+    private final String name;\n+    private final RepresentationType paramType;\n+    private final String description;\n+    private final boolean optional;\n+    private final boolean list;\n+\n+    ParameterRepresentation(String name, Class<?> type, boolean optional, String description, boolean list)\n     {\n-        return new ListRepresentation( RepresentationType.PLUGIN_PARAMETER, parameters );\n+      super(RepresentationType.PLUGIN_PARAMETER);\n+      this.name = name;\n+      this.optional = optional;\n+      this.list = list;\n+      this.paramType = RepresentationType.extended(type);\n+      this.description = description;\n     }\n \n-    private static class ParameterRepresentation extends MappingRepresentation\n+    @Override\n+    protected void serialize(MappingSerializer serializer)\n     {\n-        private final String name;\n-        private final RepresentationType paramType;\n-        private final String description;\n-        private final boolean optional;\n-        private final boolean list;\n-\n-        ParameterRepresentation( String name, Class<?> type, boolean optional, String description, boolean list )\n-        {\n-            super( RepresentationType.PLUGIN_PARAMETER );\n-            this.name = name;\n-            this.optional = optional;\n-            this.list = list;\n-            this.paramType = RepresentationType.extended( type );\n-            this.description = description;\n-        }\n-\n-        @Override\n-        protected void serialize( MappingSerializer serializer )\n-        {\n-            serializer.putString( \"name\", name );\n-            serializer.putString( \"type\", list ? paramType.listName : paramType.valueName );\n-            serializer.putBoolean( \"optional\", optional );\n-            serializer.putString( \"description\", description );\n-        }\n+      serializer.putString(\"name\", name);\n+      serializer.putString(\"type\", list ? paramType.listName : paramType.valueName);\n+      serializer.putBoolean(\"optional\", optional);\n+      serializer.putString(\"description\", description);\n     }\n+  }\n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4038/ExtensionPointRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4038/ExtensionPointRepresentation.java\nindex 404e3043e36..3586ec29c6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4038/ExtensionPointRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4038/ExtensionPointRepresentation.java\n@@ -112,4 +112,4 @@ public final class ExtensionPointRepresentation extends ObjectRepresentation imp\n             serializer.putString( \"description\", description );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2225",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2225/Suppliers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2225/Suppliers.java\nindex 6521b020971..b99d2f57244 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2225/Suppliers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2225/Suppliers.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.function;\n \n import java.util.concurrent.TimeUnit;\n@@ -31,142 +32,142 @@ import static java.lang.System.currentTimeMillis;\n  */\n public final class Suppliers\n {\n-    private Suppliers()\n+  private Suppliers()\n+  {\n+  }\n+\n+  /**\n+   * Creates a {@link Supplier} that returns a single object\n+   *\n+   * @param instance The object to return\n+   * @param <T>      The object type\n+   * @return A {@link Supplier} returning the specified object instance\n+   */\n+  public static <T> Supplier<T> singleton(final T instance)\n+  {\n+    return () -> instance;\n+  }\n+\n+  /**\n+   * Creates a lazy initialized {@link Supplier} of a single object\n+   *\n+   * @param supplier A supplier that will provide the object when required\n+   * @param <T>      The object type\n+   * @return A {@link Supplier} returning the specified object instance\n+   */\n+  public static <T> Lazy<T> lazySingleton(final Supplier<T> supplier)\n+  {\n+    return new Lazy<T>()\n     {\n-    }\n+      volatile T instance;\n \n-    /**\n-     * Creates a {@link Supplier} that returns a single object\n-     *\n-     * @param instance The object to return\n-     * @param <T> The object type\n-     * @return A {@link Supplier} returning the specified object instance\n-     */\n-    public static <T> Supplier<T> singleton( final T instance )\n-    {\n-        return () -> instance;\n-    }\n-\n-    /**\n-     * Creates a lazy initialized {@link Supplier} of a single object\n-     *\n-     * @param supplier A supplier that will provide the object when required\n-     * @param <T> The object type\n-     * @return A {@link Supplier} returning the specified object instance\n-     */\n-    public static <T> Lazy<T> lazySingleton( final Supplier<T> supplier )\n-    {\n-        return new Lazy<T>()\n+      @Override\n+      public T get()\n+      {\n+        if (instance != null)\n         {\n-            volatile T instance;\n-\n-            @Override\n-            public T get()\n-            {\n-                if ( instance != null )\n-                {\n-                    return instance;\n-                }\n-\n-                synchronized ( this )\n-                {\n-                    if ( instance == null )\n-                    {\n-                        instance = supplier.get();\n-                    }\n-                }\n-                return instance;\n-            }\n-        };\n-    }\n+          return instance;\n+        }\n \n-    /**\n-     * Creates a new {@link Supplier} that applies the specified function to the values obtained from a source supplier. The\n-     * function is only invoked once for every sequence of identical objects obtained from the source supplier (the previous result\n-     * is cached and returned again if the source object hasn't changed).\n-     *\n-     * @param supplier A supplier of source objects\n-     * @param adaptor A function mapping source objects to result objects\n-     * @param <V> The source object type\n-     * @param <T> The result object type\n-     * @return A {@link Supplier} of objects\n-     */\n-    public static <T, V> Supplier<T> adapted( final Supplier<V> supplier, final Function<V,T> adaptor )\n+        synchronized (this)\n+        {\n+          if (instance == null)\n+          {\n+            instance = supplier.get();\n+          }\n+        }\n+        return instance;\n+      }\n+    };\n+  }\n+\n+  /**\n+   * Creates a new {@link Supplier} that applies the specified function to the values obtained from a source supplier. The\n+   * function is only invoked once for every sequence of identical objects obtained from the source supplier (the previous result\n+   * is cached and returned again if the source object hasn't changed).\n+   *\n+   * @param supplier A supplier of source objects\n+   * @param adaptor  A function mapping source objects to result objects\n+   * @param <V>      The source object type\n+   * @param <T>      The result object type\n+   * @return A {@link Supplier} of objects\n+   */\n+  public static <T, V> Supplier<T> adapted(final Supplier<V> supplier, final Function<V, T> adaptor)\n+  {\n+    return new Supplier<T>()\n     {\n-        return new Supplier<T>()\n+      volatile V lastValue;\n+      T instance;\n+\n+      @Override\n+      public T get()\n+      {\n+        V value = supplier.get();\n+        if (value == lastValue)\n         {\n-            volatile V lastValue;\n-            T instance;\n-\n-            @Override\n-            public T get()\n-            {\n-                V value = supplier.get();\n-                if ( value == lastValue )\n-                {\n-                    return instance;\n-                }\n-\n-                T adaptedValue = adaptor.apply( value );\n-                synchronized ( this )\n-                {\n-                    if ( value != lastValue )\n-                    {\n-                        instance = adaptedValue;\n-                        lastValue = value;\n-                    }\n-                }\n-                return instance;\n-            }\n-        };\n-    }\n+          return instance;\n+        }\n \n-    public static <T, E extends Exception> ThrowingCapturingSupplier<T,E> compose(\n-            final ThrowingSupplier<T,? extends E> input,\n-            final ThrowingPredicate<T,? extends E> predicate )\n+        T adaptedValue = adaptor.apply(value);\n+        synchronized (this)\n+        {\n+          if (value != lastValue)\n+          {\n+            instance = adaptedValue;\n+            lastValue = value;\n+          }\n+        }\n+        return instance;\n+      }\n+    };\n+  }\n+\n+  public static <T, E extends Exception> ThrowingCapturingSupplier<T, E> compose(\n+      final ThrowingSupplier<T, ? extends E> input,\n+      final ThrowingPredicate<T, ? extends E> predicate)\n+  {\n+    return new ThrowingCapturingSupplier<>(input, predicate);\n+  }\n+\n+  public static BooleanSupplier untilTimeExpired(long duration, TimeUnit unit)\n+  {\n+    final long endTimeInMilliseconds = currentTimeMillis() + unit.toMillis(duration);\n+    return () -> currentTimeMillis() <= endTimeInMilliseconds;\n+  }\n+\n+  static class ThrowingCapturingSupplier<T, E extends Exception> implements ThrowingSupplier<Boolean, E>\n+  {\n+    private final ThrowingSupplier<T, ? extends E> input;\n+    private final ThrowingPredicate<T, ? extends E> predicate;\n+\n+    private T current;\n+\n+    ThrowingCapturingSupplier(ThrowingSupplier<T, ? extends E> input, ThrowingPredicate<T, ? extends E> predicate)\n     {\n-        return new ThrowingCapturingSupplier<>( input, predicate );\n+      this.input = input;\n+      this.predicate = predicate;\n     }\n \n-    public static BooleanSupplier untilTimeExpired( long duration, TimeUnit unit )\n+    T lastInput()\n     {\n-        final long endTimeInMilliseconds = currentTimeMillis() + unit.toMillis( duration );\n-        return () -> currentTimeMillis() <= endTimeInMilliseconds;\n+      return current;\n     }\n \n-    static class ThrowingCapturingSupplier<T, E extends Exception> implements ThrowingSupplier<Boolean,E>\n+    @Override\n+    public Boolean get() throws E\n     {\n-        private final ThrowingSupplier<T,? extends E> input;\n-        private final ThrowingPredicate<T,? extends E> predicate;\n-\n-        private T current;\n-\n-        ThrowingCapturingSupplier( ThrowingSupplier<T,? extends E> input, ThrowingPredicate<T,? extends E> predicate )\n-        {\n-            this.input = input;\n-            this.predicate = predicate;\n-        }\n-\n-        T lastInput()\n-        {\n-            return current;\n-        }\n-\n-        @Override\n-        public Boolean get() throws E\n-        {\n-            current = input.get();\n-            return predicate.test( current );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return String.format( \"%s on %s\", predicate, input );\n-        }\n+      current = input.get();\n+      return predicate.test(current);\n     }\n \n-    public interface Lazy<T> extends Supplier<T>\n+    @Override\n+    public String toString()\n     {\n+      return String.format(\"%s on %s\", predicate, input);\n     }\n+  }\n+\n+  public interface Lazy<T> extends Supplier<T>\n+  {\n+  }\n }\n",
            "diff_size": 208
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2225/Suppliers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2225/Suppliers.java\nindex 6521b020971..057d413a756 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2225/Suppliers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2225/Suppliers.java\n@@ -91,7 +91,7 @@ public final class Suppliers\n      * @param <T> The result object type\n      * @return A {@link Supplier} of objects\n      */\n-    public static <T, V> Supplier<T> adapted( final Supplier<V> supplier, final Function<V,T> adaptor )\n+    public static <T,V> Supplier<T> adapted( final Supplier<V> supplier, final Function<V,T> adaptor )\n     {\n         return new Supplier<T>()\n         {\n@@ -121,9 +121,7 @@ public final class Suppliers\n         };\n     }\n \n-    public static <T, E extends Exception> ThrowingCapturingSupplier<T,E> compose(\n-            final ThrowingSupplier<T,? extends E> input,\n-            final ThrowingPredicate<T,? extends E> predicate )\n+    public static <T, E extends Exception> ThrowingCapturingSupplier<T,E> compose( final ThrowingSupplier<T,? extends E> input, final ThrowingPredicate<T,? extends E> predicate )\n     {\n         return new ThrowingCapturingSupplier<>( input, predicate );\n     }\n@@ -169,4 +167,4 @@ public final class Suppliers\n     public interface Lazy<T> extends Supplier<T>\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
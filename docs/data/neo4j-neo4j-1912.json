{
    "project_name": "neo4j-neo4j",
    "error_id": "1912",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1912/PropertyNameUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1912/PropertyNameUtils.java\nindex 2e6d4eca7d1..2964ff2c391 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1912/PropertyNameUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1912/PropertyNameUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi.schema;\n \n import java.util.ArrayList;\n@@ -36,63 +37,63 @@ public class PropertyNameUtils\n     {\n     }\n \n-    public static String[] getPropertyKeysOrThrow( TokenRead tokenRead, int... properties )\n-            throws PropertyKeyIdNotFoundKernelException\n+    public static String[] getPropertyKeysOrThrow(TokenRead tokenRead, int... properties)\n+      throws PropertyKeyIdNotFoundKernelException\n     {\n         String[] propertyKeys = new String[properties.length];\n-        for ( int i = 0; i < properties.length; i++ )\n+        for (int i = 0; i < properties.length; i++)\n         {\n-            propertyKeys[i] = tokenRead.propertyKeyName( properties[i] );\n+            propertyKeys[i] = tokenRead.propertyKeyName(properties[i]);\n         }\n         return propertyKeys;\n     }\n \n-    public static String[] getPropertyKeys( TokenNameLookup tokenNameLookup, LabelSchemaDescriptor descriptor )\n+    public static String[] getPropertyKeys(TokenNameLookup tokenNameLookup, LabelSchemaDescriptor descriptor)\n     {\n         int[] propertyKeyIds = descriptor.getPropertyIds();\n         String[] propertyKeys = new String[propertyKeyIds.length];\n-        for ( int i = 0; i < propertyKeyIds.length; i++ )\n+        for (int i = 0; i < propertyKeyIds.length; i++)\n         {\n-            propertyKeys[i] = tokenNameLookup.propertyKeyGetName( propertyKeyIds[i] );\n+            propertyKeys[i] = tokenNameLookup.propertyKeyGetName(propertyKeyIds[i]);\n         }\n         return propertyKeys;\n     }\n \n-    public static String[] getPropertyKeys( TokenNameLookup tokenNameLookup, int[] propertyIds )\n+    public static String[] getPropertyKeys(TokenNameLookup tokenNameLookup, int[] propertyIds)\n     {\n         String[] propertyKeys = new String[propertyIds.length];\n-        for ( int i = 0; i < propertyIds.length; i++ )\n+        for (int i = 0; i < propertyIds.length; i++)\n         {\n-            propertyKeys[i] = tokenNameLookup.propertyKeyGetName( propertyIds[i] );\n+            propertyKeys[i] = tokenNameLookup.propertyKeyGetName(propertyIds[i]);\n         }\n         return propertyKeys;\n     }\n \n-    public static int[] getOrCreatePropertyKeyIds( TokenWrite tokenWrite, String... propertyKeys )\n-            throws KernelException\n+    public static int[] getOrCreatePropertyKeyIds(TokenWrite tokenWrite, String... propertyKeys)\n+      throws KernelException\n     {\n         int[] propertyKeyIds = new int[propertyKeys.length];\n-        tokenWrite.propertyKeyGetOrCreateForNames( propertyKeys, propertyKeyIds );\n+        tokenWrite.propertyKeyGetOrCreateForNames(propertyKeys, propertyKeyIds);\n         return propertyKeyIds;\n     }\n \n-    public static int[] getOrCreatePropertyKeyIds( TokenWrite tokenWrite, IndexDefinition indexDefinition )\n-            throws KernelException\n+    public static int[] getOrCreatePropertyKeyIds(TokenWrite tokenWrite, IndexDefinition indexDefinition)\n+      throws KernelException\n     {\n-        return getOrCreatePropertyKeyIds( tokenWrite, getPropertyKeysArrayOf( indexDefinition ) );\n+        return getOrCreatePropertyKeyIds(tokenWrite, getPropertyKeysArrayOf(indexDefinition));\n     }\n \n-    private static String[] getPropertyKeysArrayOf( IndexDefinition indexDefinition )\n+    private static String[] getPropertyKeysArrayOf(IndexDefinition indexDefinition)\n     {\n-        if ( indexDefinition instanceof IndexDefinitionImpl )\n+        if (indexDefinition instanceof IndexDefinitionImpl)\n         {\n             return ((IndexDefinitionImpl) indexDefinition).getPropertyKeysArrayShared();\n         }\n         List<String> keys = new ArrayList<>();\n-        for ( String key : indexDefinition.getPropertyKeys() )\n+        for (String key : indexDefinition.getPropertyKeys())\n         {\n-            keys.add( key );\n+            keys.add(key);\n         }\n-        return keys.toArray( new String[0] );\n+        return keys.toArray(new String[0]);\n     }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1912/PropertyNameUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1912/PropertyNameUtils.java\nindex 2e6d4eca7d1..2e238194089 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1912/PropertyNameUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1912/PropertyNameUtils.java\n@@ -95,4 +95,4 @@ public class PropertyNameUtils\n         }\n         return keys.toArray( new String[0] );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
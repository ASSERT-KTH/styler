{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2732",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2732/LockManagerSwitcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2732/LockManagerSwitcher.java\nindex 99a9d54afc1..239f4c68da0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2732/LockManagerSwitcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2732/LockManagerSwitcher.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster.modeswitch;\n \n import org.neo4j.function.Factory;\n@@ -32,51 +33,51 @@ import org.neo4j.logging.LogProvider;\n \n public class LockManagerSwitcher extends AbstractComponentSwitcher<Locks>\n {\n-    private final DelegateInvocationHandler<Master> master;\n-    private final RequestContextFactory requestContextFactory;\n-    private final AvailabilityGuard availabilityGuard;\n-    private final Factory<Locks> locksFactory;\n-    private final LogProvider logProvider;\n-    private final Config config;\n+  private final DelegateInvocationHandler<Master> master;\n+  private final RequestContextFactory requestContextFactory;\n+  private final AvailabilityGuard availabilityGuard;\n+  private final Factory<Locks> locksFactory;\n+  private final LogProvider logProvider;\n+  private final Config config;\n \n-    public LockManagerSwitcher( DelegateInvocationHandler<Locks> delegate, DelegateInvocationHandler<Master> master,\n-                                RequestContextFactory requestContextFactory, AvailabilityGuard availabilityGuard,\n-                                Factory<Locks> locksFactory, LogProvider logProvider, Config config )\n-    {\n-        super( delegate );\n-        this.master = master;\n-        this.requestContextFactory = requestContextFactory;\n-        this.availabilityGuard = availabilityGuard;\n-        this.locksFactory = locksFactory;\n-        this.logProvider = logProvider;\n-        this.config = config;\n-    }\n+  public LockManagerSwitcher(DelegateInvocationHandler<Locks> delegate, DelegateInvocationHandler<Master> master,\n+                             RequestContextFactory requestContextFactory, AvailabilityGuard availabilityGuard,\n+                             Factory<Locks> locksFactory, LogProvider logProvider, Config config)\n+  {\n+    super(delegate);\n+    this.master = master;\n+    this.requestContextFactory = requestContextFactory;\n+    this.availabilityGuard = availabilityGuard;\n+    this.locksFactory = locksFactory;\n+    this.logProvider = logProvider;\n+    this.config = config;\n+  }\n \n-    @Override\n-    protected Locks getMasterImpl()\n-    {\n-        return locksFactory.newInstance();\n-    }\n+  @Override\n+  protected Locks getMasterImpl()\n+  {\n+    return locksFactory.newInstance();\n+  }\n \n-    @Override\n-    protected Locks getSlaveImpl()\n-    {\n-        return new SlaveLockManager( locksFactory.newInstance(), requestContextFactory, master.cement(),\n-                availabilityGuard, logProvider, config );\n-    }\n+  @Override\n+  protected Locks getSlaveImpl()\n+  {\n+    return new SlaveLockManager(locksFactory.newInstance(), requestContextFactory, master.cement(),\n+        availabilityGuard, logProvider, config);\n+  }\n \n-    @Override\n-    protected Locks getPendingImpl()\n-    {\n-        return new ReadOnlyLocks();\n-    }\n+  @Override\n+  protected Locks getPendingImpl()\n+  {\n+    return new ReadOnlyLocks();\n+  }\n \n-    @Override\n-    protected void shutdownOldDelegate( Locks oldLocks )\n+  @Override\n+  protected void shutdownOldDelegate(Locks oldLocks)\n+  {\n+    if (oldLocks != null)\n     {\n-        if ( oldLocks != null )\n-        {\n-            oldLocks.close();\n-        }\n+      oldLocks.close();\n     }\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 268).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2732/LockManagerSwitcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2732/LockManagerSwitcher.java\nindex 99a9d54afc1..68eef7e43e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2732/LockManagerSwitcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2732/LockManagerSwitcher.java\n@@ -39,10 +39,8 @@ public class LockManagerSwitcher extends AbstractComponentSwitcher<Locks>\n     private final LogProvider logProvider;\n     private final Config config;\n \n-    public LockManagerSwitcher( DelegateInvocationHandler<Locks> delegate, DelegateInvocationHandler<Master> master,\n-                                RequestContextFactory requestContextFactory, AvailabilityGuard availabilityGuard,\n-                                Factory<Locks> locksFactory, LogProvider logProvider, Config config )\n-    {\n+    public LockManagerSwitcher( DelegateInvocationHandler<Locks> delegate, DelegateInvocationHandler<Master> master, RequestContextFactory requestContextFactory, AvailabilityGuard availabilityGuard, Factory<Locks> locksFactory, LogProvider logProvider, Config config )\n+{\n         super( delegate );\n         this.master = master;\n         this.requestContextFactory = requestContextFactory;\n@@ -79,4 +77,4 @@ public class LockManagerSwitcher extends AbstractComponentSwitcher<Locks>\n             oldLocks.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "self-xdsd-self-core",
    "error_id": "33",
    "information": {
        "errors": [
            {
                "line": "119",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final Resource resp = this.resources\n            .patch(this.uri, Json.createObjectBuilder().build());\n        if(resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n            LOG.debug(\"Invitation accepted.\");\n        } else {\n            LOG.warn(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/33/GithubInvitation.java\nindex d78da514ad8..f9b92669035 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/33/GithubInvitation.java\n@@ -116,7 +116,7 @@ final class GithubInvitation implements Invitation {\n         );\n         final Resource resp = this.resources\n             .patch(this.uri, Json.createObjectBuilder().build());\n-        if(resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n+        if (resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n             LOG.debug(\"Invitation accepted.\");\n         } else {\n             LOG.warn(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/33/GithubInvitation.java\nindex d78da514ad8..bfd5a414b18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/33/GithubInvitation.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core;\n \n import com.selfxdsd.api.Invitation;\n@@ -34,6 +35,7 @@ import java.net.URI;\n \n /**\n  * A Github Repo invitation.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.7\n@@ -68,10 +70,11 @@ final class GithubInvitation implements Invitation {\n \n     /**\n      * Ctor.\n+     *\n      * @param resources Github's JSON resources.\n-     * @param baseUri Base URI of the Invitations API.\n-     * @param json This invitation in JSON format.\n-     * @param github Parent Github.\n+     * @param baseUri   Base URI of the Invitations API.\n+     * @param json      This invitation in JSON format.\n+     * @param github    Parent Github.\n      */\n     GithubInvitation(\n         final JsonResources resources,\n@@ -112,17 +115,17 @@ final class GithubInvitation implements Invitation {\n     public void accept() {\n         LOG.debug(\n             \"Accepting Github Repo Invitation [\"\n-            + this.uri.toString() +\"]...\"\n+                + this.uri.toString() + \"]...\"\n         );\n         final Resource resp = this.resources\n             .patch(this.uri, Json.createObjectBuilder().build());\n-        if(resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n+        if (resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n             LOG.debug(\"Invitation accepted.\");\n         } else {\n             LOG.warn(\n                 \"Problem when accepting invitation. \"\n-                + \"Expected 204 NO CONTENT, but got \"\n-                + resp.statusCode()\n+                    + \"Expected 204 NO CONTENT, but got \"\n+                    + resp.statusCode()\n             );\n         }\n     }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/33/GithubInvitation.java\nindex d78da514ad8..e270e41db72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/33/GithubInvitation.java\n@@ -112,11 +112,10 @@ final class GithubInvitation implements Invitation {\n     public void accept() {\n         LOG.debug(\n             \"Accepting Github Repo Invitation [\"\n-            + this.uri.toString() +\"]...\"\n-        );\n+            + this.uri.toString() + \"]...\");\n         final Resource resp = this.resources\n             .patch(this.uri, Json.createObjectBuilder().build());\n-        if(resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n+        if (resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n             LOG.debug(\"Invitation accepted.\");\n         } else {\n             LOG.warn(\n@@ -126,4 +125,4 @@ final class GithubInvitation implements Invitation {\n             );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/33/GithubInvitation.java\nindex d78da514ad8..ca3f7feb6fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/33/GithubInvitation.java\n@@ -26,7 +26,6 @@ import com.selfxdsd.api.Invitation;\n import com.selfxdsd.api.Repo;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.json.Json;\n import javax.json.JsonObject;\n import java.net.HttpURLConnection;\n@@ -38,32 +37,42 @@ import java.net.URI;\n  * @version $Id$\n  * @since 0.0.7\n  */\n+\n+\n final class GithubInvitation implements Invitation {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        GithubInvitation.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GithubInvitation.class);\n \n     /**\n      * Github's JSON resources.\n      */\n+\n+\n     private final JsonResources resources;\n \n     /**\n      * URI of this invitation.\n      */\n+\n+\n     private final URI uri;\n \n     /**\n      * This invitation as JSON.\n      */\n+\n+\n     private final JsonObject json;\n \n     /**\n      * Parent Github.\n      */\n+\n+\n     private final Github github;\n \n     /**\n@@ -73,6 +82,8 @@ final class GithubInvitation implements Invitation {\n      * @param json This invitation in JSON format.\n      * @param github Parent Github.\n      */\n+\n+\n     GithubInvitation(\n         final JsonResources resources,\n         final URI baseUri,\n@@ -80,9 +91,8 @@ final class GithubInvitation implements Invitation {\n         final Github github\n     ) {\n         this.resources = resources;\n-        this.uri = URI.create(\n-            baseUri.toString() + \"/\" + json.getJsonNumber(\"id\")\n-        );\n+        this.uri = URI.create(baseUri.toString() + \"/\"\n++ json.getJsonNumber(\"id\"));\n         this.json = json;\n         this.github = github;\n     }\n@@ -99,31 +109,24 @@ final class GithubInvitation implements Invitation {\n \n     @Override\n     public Repo repo() {\n-        final String repoFullName = this.json\n-            .getJsonObject(\"repository\")\n-            .getString(\"full_name\");\n+        final String repoFullName = this.json.getJsonObject(\"repository\").getString(\"full_name\");\n         return this.github.repo(\n-            repoFullName.split(\"/\")[0],\n-            repoFullName.split(\"/\")[1]\n+            repoFullName.split(\"/\")[ 0 ],\n+            repoFullName.split(\"/\")[ 1 ]\n         );\n     }\n \n     @Override\n     public void accept() {\n-        LOG.debug(\n-            \"Accepting Github Repo Invitation [\"\n-            + this.uri.toString() +\"]...\"\n-        );\n-        final Resource resp = this.resources\n-            .patch(this.uri, Json.createObjectBuilder().build());\n-        if(resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n+        LOG.debug(\"Accepting Github Repo Invitation [\"\n+                      + this.uri.toString() + \"]...\");\n+        final Resource resp = this.resources.patch(this.uri, Json.createObjectBuilder().build());\n+        if (resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n             LOG.debug(\"Invitation accepted.\");\n         } else {\n-            LOG.warn(\n-                \"Problem when accepting invitation. \"\n-                + \"Expected 204 NO CONTENT, but got \"\n-                + resp.statusCode()\n-            );\n+            LOG.warn(\"Problem when accepting invitation. \"\n+                         + \"Expected 204 NO CONTENT, but got \"\n++ resp.statusCode());\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/33/GithubInvitation.java\nindex d78da514ad8..f9b92669035 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/33/GithubInvitation.java\n@@ -116,7 +116,7 @@ final class GithubInvitation implements Invitation {\n         );\n         final Resource resp = this.resources\n             .patch(this.uri, Json.createObjectBuilder().build());\n-        if(resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n+        if (resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n             LOG.debug(\"Invitation accepted.\");\n         } else {\n             LOG.warn(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/33/GithubInvitation.java\nindex d78da514ad8..f9b92669035 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/33/GithubInvitation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/33/GithubInvitation.java\n@@ -116,7 +116,7 @@ final class GithubInvitation implements Invitation {\n         );\n         final Resource resp = this.resources\n             .patch(this.uri, Json.createObjectBuilder().build());\n-        if(resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n+        if (resp.statusCode() == HttpURLConnection.HTTP_NO_CONTENT) {\n             LOG.debug(\"Invitation accepted.\");\n         } else {\n             LOG.warn(\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
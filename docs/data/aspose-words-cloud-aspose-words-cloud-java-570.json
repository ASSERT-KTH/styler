{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "570",
    "information": {
        "errors": [
            {
                "line": "120",
                "column": "61",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n    return\n        Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n        Objects.equals(this.checked, formFieldCheckbox.checked) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/570/FormFieldCheckbox.java\nindex 8d859af1751..2ae044bb4da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/570/FormFieldCheckbox.java\n@@ -117,7 +117,7 @@ public class FormFieldCheckbox extends FormField {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n+    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox) o;\n     return\n         Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n         Objects.equals(this.checked, formFieldCheckbox.checked) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/570/FormFieldCheckbox.java\nindex 8d859af1751..e64548edae1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/570/FormFieldCheckbox.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -55,6 +58,7 @@ public class FormFieldCheckbox extends FormField {\n \n     @SerializedName(\"IsCheckBoxExactSize\")\n     private Boolean isCheckBoxExactSize = null;\n+\n     public FormFieldCheckbox checkBoxSize(Double checkBoxSize) {\n         this.checkBoxSize = checkBoxSize;\n         return this;\n@@ -62,8 +66,9 @@ public class FormFieldCheckbox extends FormField {\n \n     /**\n      * Gets or sets the size of the checkbox in points. Has effect only when IsCheckBoxExactSize is true.\n-    * @return checkBoxSize\n-    **/\n+     *\n+     * @return checkBoxSize\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the size of the checkbox in points. Has effect only when IsCheckBoxExactSize is true.\")\n     public Double getCheckBoxSize() {\n         return checkBoxSize;\n@@ -80,8 +85,9 @@ public class FormFieldCheckbox extends FormField {\n \n     /**\n      * Gets or sets the checked status of the check box form field.\n-    * @return checked\n-    **/\n+     *\n+     * @return checked\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the checked status of the check box form field.\")\n     public Boolean getChecked() {\n         return checked;\n@@ -98,8 +104,9 @@ public class FormFieldCheckbox extends FormField {\n \n     /**\n      * Gets or sets the boolean value that indicates whether the size of the textbox is automatic or specified explicitly.\n-    * @return isCheckBoxExactSize\n-    **/\n+     *\n+     * @return isCheckBoxExactSize\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the boolean value that indicates whether the size of the textbox is automatic or specified explicitly.\")\n     public Boolean getIsCheckBoxExactSize() {\n         return isCheckBoxExactSize;\n@@ -117,39 +124,39 @@ public class FormFieldCheckbox extends FormField {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n-    return\n-        Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n-        Objects.equals(this.checked, formFieldCheckbox.checked) &&\n-        Objects.equals(this.isCheckBoxExactSize, formFieldCheckbox.isCheckBoxExactSize) &&\n-        super.equals(o);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(checkBoxSize, checked, isCheckBoxExactSize, super.hashCode());\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class FormFieldCheckbox {\\n\");\n-    sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n-    sb.append(\"    checkBoxSize: \").append(toIndentedString(checkBoxSize)).append(\"\\n\");\n-    sb.append(\"    checked: \").append(toIndentedString(checked)).append(\"\\n\");\n-    sb.append(\"    isCheckBoxExactSize: \").append(toIndentedString(isCheckBoxExactSize)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n+        FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox) o;\n+        return\n+            Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n+                Objects.equals(this.checked, formFieldCheckbox.checked) &&\n+                Objects.equals(this.isCheckBoxExactSize, formFieldCheckbox.isCheckBoxExactSize) &&\n+                super.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(checkBoxSize, checked, isCheckBoxExactSize, super.hashCode());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class FormFieldCheckbox {\\n\");\n+        sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n+        sb.append(\"    checkBoxSize: \").append(toIndentedString(checkBoxSize)).append(\"\\n\");\n+        sb.append(\"    checked: \").append(toIndentedString(checked)).append(\"\\n\");\n+        sb.append(\"    isCheckBoxExactSize: \").append(toIndentedString(isCheckBoxExactSize)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n     }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "122",
                    "column": "57",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/570/FormFieldCheckbox.java\nindex 8d859af1751..fec8d32908b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/570/FormFieldCheckbox.java\n@@ -55,7 +55,8 @@ public class FormFieldCheckbox extends FormField {\n \n     @SerializedName(\"IsCheckBoxExactSize\")\n     private Boolean isCheckBoxExactSize = null;\n-    public FormFieldCheckbox checkBoxSize(Double checkBoxSize) {\n+\n+public FormFieldCheckbox checkBoxSize(Double checkBoxSize) {\n         this.checkBoxSize = checkBoxSize;\n         return this;\n     }\n@@ -113,13 +114,13 @@ public class FormFieldCheckbox extends FormField {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n-    return\n-        Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n+\n+FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n+    return Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n         Objects.equals(this.checked, formFieldCheckbox.checked) &&\n         Objects.equals(this.isCheckBoxExactSize, formFieldCheckbox.isCheckBoxExactSize) &&\n         super.equals(o);\n@@ -152,4 +153,4 @@ public class FormFieldCheckbox extends FormField {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/570/FormFieldCheckbox.java\nindex 8d859af1751..ef95ce668a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/570/FormFieldCheckbox.java\n@@ -45,91 +45,104 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * FormField checkbox element.\n  */\n+\n+\n @ApiModel(description = \"FormField checkbox element.\")\n+\n public class FormFieldCheckbox extends FormField {\n-    @SerializedName(\"CheckBoxSize\")\n-    private Double checkBoxSize = null;\n+  @SerializedName(\"CheckBoxSize\")\n+  private Double checkBoxSize = null;\n \n-    @SerializedName(\"Checked\")\n-    private Boolean checked = null;\n+  @SerializedName(\"Checked\")\n+  private Boolean checked = null;\n \n-    @SerializedName(\"IsCheckBoxExactSize\")\n-    private Boolean isCheckBoxExactSize = null;\n-    public FormFieldCheckbox checkBoxSize(Double checkBoxSize) {\n-        this.checkBoxSize = checkBoxSize;\n-        return this;\n-    }\n+  @SerializedName(\"IsCheckBoxExactSize\")\n+  private Boolean isCheckBoxExactSize = null;\n+\n+  public FormFieldCheckbox checkBoxSize(Double checkBoxSize) {\n+    this.checkBoxSize = checkBoxSize;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the size of the checkbox in points. Has effect only when IsCheckBoxExactSize is true.\n     * @return checkBoxSize\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the size of the checkbox in points. Has effect only when IsCheckBoxExactSize is true.\")\n-    public Double getCheckBoxSize() {\n-        return checkBoxSize;\n-    }\n \n-    public void setCheckBoxSize(Double checkBoxSize) {\n-        this.checkBoxSize = checkBoxSize;\n-    }\n \n-    public FormFieldCheckbox checked(Boolean checked) {\n-        this.checked = checked;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the size of the checkbox in points. Has effect only when IsCheckBoxExactSize is true.\")\n+  public Double getCheckBoxSize() {\n+    return checkBoxSize;\n+  }\n+\n+  public void setCheckBoxSize(Double checkBoxSize) {\n+    this.checkBoxSize = checkBoxSize;\n+  }\n+\n+  public FormFieldCheckbox checked(Boolean checked) {\n+    this.checked = checked;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the checked status of the check box form field.\n     * @return checked\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the checked status of the check box form field.\")\n-    public Boolean getChecked() {\n-        return checked;\n-    }\n \n-    public void setChecked(Boolean checked) {\n-        this.checked = checked;\n-    }\n \n-    public FormFieldCheckbox isCheckBoxExactSize(Boolean isCheckBoxExactSize) {\n-        this.isCheckBoxExactSize = isCheckBoxExactSize;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the checked status of the check box form field.\")\n+  public Boolean getChecked() {\n+    return checked;\n+  }\n+\n+  public void setChecked(Boolean checked) {\n+    this.checked = checked;\n+  }\n+\n+  public FormFieldCheckbox isCheckBoxExactSize(Boolean isCheckBoxExactSize) {\n+    this.isCheckBoxExactSize = isCheckBoxExactSize;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the boolean value that indicates whether the size of the textbox is automatic or specified explicitly.\n     * @return isCheckBoxExactSize\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the boolean value that indicates whether the size of the textbox is automatic or specified explicitly.\")\n-    public Boolean getIsCheckBoxExactSize() {\n-        return isCheckBoxExactSize;\n-    }\n \n-    public void setIsCheckBoxExactSize(Boolean isCheckBoxExactSize) {\n-        this.isCheckBoxExactSize = isCheckBoxExactSize;\n+\n+  @ApiModelProperty(value = \"Gets or sets the boolean value that indicates whether the size of the textbox is automatic or specified explicitly.\")\n+  public Boolean getIsCheckBoxExactSize() {\n+    return isCheckBoxExactSize;\n+  }\n+\n+  public void setIsCheckBoxExactSize(Boolean isCheckBoxExactSize) {\n+    this.isCheckBoxExactSize = isCheckBoxExactSize;\n+  }\n+\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n-    return\n-        Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n-        Objects.equals(this.checked, formFieldCheckbox.checked) &&\n-        Objects.equals(this.isCheckBoxExactSize, formFieldCheckbox.isCheckBoxExactSize) &&\n-        super.equals(o);\n+    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox) o;\n+    return Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n+    Objects.equals(this.checked, formFieldCheckbox.checked) &&\n+    Objects.equals(this.isCheckBoxExactSize, formFieldCheckbox.isCheckBoxExactSize) &&\n+    super.equals(o);\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(checkBoxSize, checked, isCheckBoxExactSize, super.hashCode());\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -146,10 +159,12 @@ public class FormFieldCheckbox extends FormField {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 95
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/570/FormFieldCheckbox.java\nindex 8d859af1751..2ae044bb4da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/570/FormFieldCheckbox.java\n@@ -117,7 +117,7 @@ public class FormFieldCheckbox extends FormField {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n+    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox) o;\n     return\n         Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n         Objects.equals(this.checked, formFieldCheckbox.checked) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/570/FormFieldCheckbox.java\nindex 8d859af1751..2ae044bb4da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/570/FormFieldCheckbox.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/570/FormFieldCheckbox.java\n@@ -117,7 +117,7 @@ public class FormFieldCheckbox extends FormField {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox)o;\n+    FormFieldCheckbox formFieldCheckbox = (FormFieldCheckbox) o;\n     return\n         Objects.equals(this.checkBoxSize, formFieldCheckbox.checkBoxSize) &&\n         Objects.equals(this.checked, formFieldCheckbox.checked) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "EMResearch-EMB",
    "error_id": "84",
    "information": {
        "errors": [
            {
                "line": "31",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public enum Location {\n    /** The rules in this category are part of the main distribution of\n     * LanguageTool and are thus available on <a href=\"http://community.languagetool.org\">community.languagetool.org</a>. */\n    INTERNAL,\n    /** The rules in this category are not part of the main distribution of LanguageTool. */\n    EXTERNAL",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/84/Category.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/84/Category.java\nindex c192a33879d..cad745524d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/84/Category.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/84/Category.java\n@@ -1,6 +1,6 @@\n-/* LanguageTool, a natural language style checker \n+/* LanguageTool, a natural language style checker\n  * Copyright (C) 2006 Daniel Naber (http://www.danielnaber.de)\n- * \n+ *\n  * This library is free software; you can redistribute it and/or\n  * modify it under the terms of the GNU Lesser General Public\n  * License as published by the Free Software Foundation; either\n@@ -16,6 +16,7 @@\n  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301\n  * USA\n  */\n+\n package org.languagetool.rules;\n \n import org.jetbrains.annotations.Nullable;\n@@ -26,81 +27,96 @@ import org.jetbrains.annotations.Nullable;\n  */\n public final class Category {\n \n-  public enum Location {\n-    /** The rules in this category are part of the main distribution of\n-     * LanguageTool and are thus available on <a href=\"http://community.languagetool.org\">community.languagetool.org</a>. */\n-    INTERNAL,\n-    /** The rules in this category are not part of the main distribution of LanguageTool. */\n-    EXTERNAL\n-  }\n-\n-  private final String name;\n-  private final CategoryId id;\n-  private final Location location;\n-  private final boolean defaultOff;\n-  private final String tabName;\n-  \n-  /**\n-   * @since 3.3\n-   */\n-  public Category(CategoryId id, String name) {\n-    this(id, name, Location.INTERNAL, true);\n-  }\n-\n-  /** @since 3.3 */\n-  public Category(CategoryId id, String name, Location location) {\n-    this(id, name, location, true);\n-  }\n-\n-  /** @since 3.3 */\n-  public Category(CategoryId id, String name, Location location, boolean onByDefault) {\n-    this(id, name, location, onByDefault, null);\n-  }\n-\n-  /** @since 4.3 */\n-  public Category(CategoryId id, String name, Location location, boolean onByDefault, String tabName) {\n-    this.id = id;\n-    this.name = name;\n-    this.location = location;\n-    this.defaultOff = !onByDefault;\n-    this.tabName = tabName;\n-  }\n-\n-  /** @since 3.3 */\n-  @Nullable\n-  public CategoryId getId() {\n-    return id;\n-  }\n-\n-  public String getName() {\n-    return name;\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return name;\n-  }\n-\n-  /** @since 4.3 */\n-  @Nullable\n-  public String getTabName() {\n-    return tabName;\n-  }\n-\n-  /**\n-   * Checks whether the category has been turned off\n-   * by default by the category author.\n-   * @return True if the category is turned off by default.\n-   */\n-  public boolean isDefaultOff() {\n-    return defaultOff;\n-  }\n-\n-  /**\n-   * @since 2.8\n-   */\n-  public Location getLocation() {\n-    return location;\n-  }\n+    public enum Location {\n+        /**\n+         * The rules in this category are part of the main distribution of\n+         * LanguageTool and are thus available on <a href=\"http://community.languagetool.org\">community.languagetool.org</a>.\n+         */\n+        INTERNAL,\n+        /**\n+         * The rules in this category are not part of the main distribution of LanguageTool.\n+         */\n+        EXTERNAL\n+    }\n+\n+    private final String name;\n+    private final CategoryId id;\n+    private final Location location;\n+    private final boolean defaultOff;\n+    private final String tabName;\n+\n+    /**\n+     * @since 3.3\n+     */\n+    public Category(CategoryId id, String name) {\n+        this(id, name, Location.INTERNAL, true);\n+    }\n+\n+    /**\n+     * @since 3.3\n+     */\n+    public Category(CategoryId id, String name, Location location) {\n+        this(id, name, location, true);\n+    }\n+\n+    /**\n+     * @since 3.3\n+     */\n+    public Category(CategoryId id, String name, Location location, boolean onByDefault) {\n+        this(id, name, location, onByDefault, null);\n+    }\n+\n+    /**\n+     * @since 4.3\n+     */\n+    public Category(CategoryId id, String name, Location location, boolean onByDefault, String tabName) {\n+        this.id = id;\n+        this.name = name;\n+        this.location = location;\n+        this.defaultOff = !onByDefault;\n+        this.tabName = tabName;\n+    }\n+\n+    /**\n+     * @since 3.3\n+     */\n+    @Nullable\n+    public CategoryId getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n+\n+    /**\n+     * @since 4.3\n+     */\n+    @Nullable\n+    public String getTabName() {\n+        return tabName;\n+    }\n+\n+    /**\n+     * Checks whether the category has been turned off\n+     * by default by the category author.\n+     *\n+     * @return True if the category is turned off by default.\n+     */\n+    public boolean isDefaultOff() {\n+        return defaultOff;\n+    }\n+\n+    /**\n+     * @since 2.8\n+     */\n+    public Location getLocation() {\n+        return location;\n+    }\n \n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/84/Category.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/84/Category.java\nindex c192a33879d..4912737d8f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/84/Category.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/84/Category.java\n@@ -27,10 +27,12 @@ import org.jetbrains.annotations.Nullable;\n public final class Category {\n \n   public enum Location {\n-    /** The rules in this category are part of the main distribution of\n+\n+  /** The rules in this category are part of the main distribution of\n      * LanguageTool and are thus available on <a href=\"http://community.languagetool.org\">community.languagetool.org</a>. */\n     INTERNAL,\n-    /** The rules in this category are not part of the main distribution of LanguageTool. */\n+\n+/** The rules in this category are not part of the main distribution of LanguageTool. */\n     EXTERNAL\n   }\n \n@@ -103,4 +105,4 @@ public final class Category {\n     return location;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/84/Category.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/84/Category.java\nindex c192a33879d..c3dc3f39dbf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/84/Category.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/84/Category.java\n@@ -24,83 +24,94 @@ import org.jetbrains.annotations.Nullable;\n  * A rule's category. Categories are used to group rules for\n  * a better overview.\n  */\n+\n+\n public final class Category {\n \n-  public enum Location {\n+    public enum Location {\n     /** The rules in this category are part of the main distribution of\n      * LanguageTool and are thus available on <a href=\"http://community.languagetool.org\">community.languagetool.org</a>. */\n-    INTERNAL,\n+        INTERNAL,\n     /** The rules in this category are not part of the main distribution of LanguageTool. */\n-    EXTERNAL\n-  }\n-\n-  private final String name;\n-  private final CategoryId id;\n-  private final Location location;\n-  private final boolean defaultOff;\n-  private final String tabName;\n+\n+        EXTERNAL\n+    }\n+\n+    private final String name;\n+    private final CategoryId id;\n+    private final Location location;\n+    private final boolean defaultOff;\n+    private final String tabName;\n   \n   /**\n    * @since 3.3\n    */\n-  public Category(CategoryId id, String name) {\n+\n+    public Category(CategoryId id, String name) {\n     this(id, name, Location.INTERNAL, true);\n-  }\n+    }\n \n   /** @since 3.3 */\n-  public Category(CategoryId id, String name, Location location) {\n+\n+    public Category(CategoryId id, String name, Location location) {\n     this(id, name, location, true);\n-  }\n+    }\n \n   /** @since 3.3 */\n-  public Category(CategoryId id, String name, Location location, boolean onByDefault) {\n+\n+    public Category(CategoryId id, String name, Location location, boolean onByDefault) {\n     this(id, name, location, onByDefault, null);\n-  }\n+    }\n \n   /** @since 4.3 */\n-  public Category(CategoryId id, String name, Location location, boolean onByDefault, String tabName) {\n-    this.id = id;\n-    this.name = name;\n-    this.location = location;\n-    this.defaultOff = !onByDefault;\n-    this.tabName = tabName;\n-  }\n+\n+    public Category(CategoryId id, String name, Location location, boolean onByDefault, String tabName) {\n+        this.id = id;\n+        this.name = name;\n+        this.location = location;\n+        this.defaultOff = !onByDefault;\n+        this.tabName = tabName;\n+    }\n \n   /** @since 3.3 */\n-  @Nullable\n-  public CategoryId getId() {\n-    return id;\n-  }\n \n-  public String getName() {\n-    return name;\n-  }\n+    @Nullable\n+    public CategoryId getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n \n-  @Override\n-  public String toString() {\n-    return name;\n-  }\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n \n   /** @since 4.3 */\n-  @Nullable\n-  public String getTabName() {\n-    return tabName;\n-  }\n+\n+    @Nullable\n+    public String getTabName() {\n+        return tabName;\n+    }\n \n   /**\n    * Checks whether the category has been turned off\n    * by default by the category author.\n    * @return True if the category is turned off by default.\n    */\n-  public boolean isDefaultOff() {\n-    return defaultOff;\n-  }\n+\n+    public boolean isDefaultOff() {\n+        return defaultOff;\n+    }\n \n   /**\n    * @since 2.8\n    */\n-  public Location getLocation() {\n-    return location;\n-  }\n \n-}\n+    public Location getLocation() {\n+        return location;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 63
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
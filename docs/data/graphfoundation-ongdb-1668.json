{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1668",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "169",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "187",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "244",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "266",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "281",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "296",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "317",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1668/PersonalUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1668/PersonalUserManager.java\nindex 082f64d1d2c..6a33d62fc73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1668/PersonalUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1668/PersonalUserManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import java.io.IOException;\n@@ -33,327 +34,312 @@ import static org.neo4j.graphdb.security.AuthorizationViolationException.PERMISS\n \n class PersonalUserManager implements EnterpriseUserManager\n {\n-    private final EnterpriseUserManager userManager;\n-    private final SecurityLog securityLog;\n-    private final AuthSubject subject;\n-    private final boolean isUserManager;\n+  private final EnterpriseUserManager userManager;\n+  private final SecurityLog securityLog;\n+  private final AuthSubject subject;\n+  private final boolean isUserManager;\n \n-    PersonalUserManager( EnterpriseUserManager userManager, AuthSubject subject, SecurityLog securityLog, boolean isUserManager )\n-    {\n-        this.userManager = userManager;\n-        this.securityLog = securityLog;\n-        this.subject = subject;\n-        this.isUserManager = isUserManager;\n-    }\n+  PersonalUserManager(EnterpriseUserManager userManager, AuthSubject subject, SecurityLog securityLog, boolean isUserManager)\n+  {\n+    this.userManager = userManager;\n+    this.securityLog = securityLog;\n+    this.subject = subject;\n+    this.isUserManager = isUserManager;\n+  }\n \n-    @Override\n-    public User newUser( String username, String initialPassword, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  @Override\n+  public User newUser(String username, String initialPassword, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n     {\n-        try\n-        {\n-            assertUserManager();\n-            User user = userManager.newUser( username, initialPassword, requirePasswordChange );\n-            securityLog.info( subject, \"created user `%s`%s\", username,\n-                    requirePasswordChange ? \", with password change required\" : \"\" );\n-            return user;\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to create user `%s`: %s\", username, e.getMessage() );\n-            throw e;\n-        }\n-    }\n-\n-    @Override\n-    public void suspendUser( String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+      assertUserManager();\n+      User user = userManager.newUser(username, initialPassword, requirePasswordChange);\n+      securityLog.info(subject, \"created user `%s`%s\", username,\n+          requirePasswordChange ? \", with password change required\" : \"\");\n+      return user;\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n     {\n-        try\n-        {\n-            assertUserManager();\n-            if ( subject.hasUsername( username ) )\n-            {\n-                throw new InvalidArgumentsException( \"Suspending yourself (user '\" + username +\n-                        \"') is not allowed.\" );\n-            }\n-            userManager.suspendUser( username );\n-            securityLog.info( subject, \"suspended user `%s`\", username );\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to suspend user `%s`: %s\", username, e.getMessage() );\n-            throw e;\n-        }\n+      securityLog.error(subject, \"tried to create user `%s`: %s\", username, e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public boolean deleteUser( String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  @Override\n+  public void suspendUser(String username)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n     {\n-        try\n-        {\n-            assertUserManager();\n-            if ( subject.hasUsername( username ) )\n-            {\n-                throw new InvalidArgumentsException( \"Deleting yourself (user '\" + username + \"') is not allowed.\" );\n-            }\n-            boolean wasDeleted = userManager.deleteUser( username );\n-            securityLog.info( subject, \"deleted user `%s`\", username );\n-            return wasDeleted;\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to delete user `%s`: %s\", username, e.getMessage() );\n-            throw e;\n-        }\n-    }\n-\n-    @Override\n-    public void activateUser( String username, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+      assertUserManager();\n+      if (subject.hasUsername(username))\n+      {\n+        throw new InvalidArgumentsException(\"Suspending yourself (user '\" + username +\n+            \"') is not allowed.\");\n+      }\n+      userManager.suspendUser(username);\n+      securityLog.info(subject, \"suspended user `%s`\", username);\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n     {\n-        try\n-        {\n-            assertUserManager();\n-            if ( subject.hasUsername( username ) )\n-            {\n-                throw new InvalidArgumentsException( \"Activating yourself (user '\" + username + \"') is not allowed.\" );\n-            }\n-            userManager.activateUser( username, requirePasswordChange );\n-            securityLog.info( subject, \"activated user `%s`\", username );\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to activate user `%s`: %s\", username, e.getMessage() );\n-            throw e;\n-        }\n+      securityLog.error(subject, \"tried to suspend user `%s`: %s\", username, e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public User getUser( String username ) throws InvalidArgumentsException\n+  @Override\n+  public boolean deleteUser(String username)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n     {\n-        return userManager.getUser( username );\n-    }\n-\n-    @Override\n-    public User silentlyGetUser( String username )\n+      assertUserManager();\n+      if (subject.hasUsername(username))\n+      {\n+        throw new InvalidArgumentsException(\"Deleting yourself (user '\" + username + \"') is not allowed.\");\n+      }\n+      boolean wasDeleted = userManager.deleteUser(username);\n+      securityLog.info(subject, \"deleted user `%s`\", username);\n+      return wasDeleted;\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n     {\n-        return userManager.silentlyGetUser( username );\n+      securityLog.error(subject, \"tried to delete user `%s`: %s\", username, e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public RoleRecord newRole( String roleName, String... usernames )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  @Override\n+  public void activateUser(String username, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n     {\n-        try\n-        {\n-            assertUserManager();\n-            RoleRecord newRole = userManager.newRole( roleName, usernames );\n-            securityLog.info( subject, \"created role `%s`\", roleName );\n-            return newRole;\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to create role `%s`: %s\", roleName, e.getMessage() );\n-            throw e;\n-        }\n-    }\n-\n-    @Override\n-    public boolean deleteRole( String roleName )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+      assertUserManager();\n+      if (subject.hasUsername(username))\n+      {\n+        throw new InvalidArgumentsException(\"Activating yourself (user '\" + username + \"') is not allowed.\");\n+      }\n+      userManager.activateUser(username, requirePasswordChange);\n+      securityLog.info(subject, \"activated user `%s`\", username);\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n     {\n-        try\n-        {\n-            assertUserManager();\n-            boolean wasDeleted = userManager.deleteRole( roleName );\n-            securityLog.info( subject, \"deleted role `%s`\", roleName );\n-            return wasDeleted;\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to delete role `%s`: %s\", roleName, e.getMessage() );\n-            throw e;\n-        }\n+      securityLog.error(subject, \"tried to activate user `%s`: %s\", username, e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public void setUserPassword( String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n-        if ( subject.hasUsername( username ) )\n-        {\n-            try\n-            {\n-                userManager.setUserPassword( username, password, requirePasswordChange );\n-                securityLog.info( subject, \"changed password%s\",\n-                        requirePasswordChange ? \", with password change required\" : \"\" );\n-            }\n-            catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-            {\n-                securityLog.error( subject, \"tried to change password: %s\", e.getMessage() );\n-                throw e;\n-            }\n-        }\n-        else\n-        {\n-            try\n-            {\n-                assertUserManager();\n-                userManager.setUserPassword( username, password, requirePasswordChange );\n-                securityLog.info( subject, \"changed password for user `%s`%s\", username,\n-                        requirePasswordChange ? \", with password change required\" : \"\" );\n-            }\n-            catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-            {\n-                securityLog.error( subject, \"tried to change password for user `%s`: %s\", username,\n-                        e.getMessage() );\n-                throw e;\n-            }\n-        }\n-    }\n+  @Override\n+  public User getUser(String username) throws InvalidArgumentsException\n+  {\n+    return userManager.getUser(username);\n+  }\n \n-    @Override\n-    public Set<String> getAllUsernames() throws AuthorizationViolationException\n-    {\n-        try\n-        {\n-            assertUserManager();\n-            return userManager.getAllUsernames();\n-        }\n-        catch ( AuthorizationViolationException e )\n-        {\n-            securityLog.error( subject, \"tried to list users: %s\", e.getMessage() );\n-            throw e;\n-        }\n-    }\n+  @Override\n+  public User silentlyGetUser(String username)\n+  {\n+    return userManager.silentlyGetUser(username);\n+  }\n \n-    @Override\n-    public RoleRecord getRole( String roleName ) throws InvalidArgumentsException\n+  @Override\n+  public RoleRecord newRole(String roleName, String... usernames)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n+    {\n+      assertUserManager();\n+      RoleRecord newRole = userManager.newRole(roleName, usernames);\n+      securityLog.info(subject, \"created role `%s`\", roleName);\n+      return newRole;\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n     {\n-        return userManager.getRole( roleName );\n+      securityLog.error(subject, \"tried to create role `%s`: %s\", roleName, e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public RoleRecord silentlyGetRole( String roleName )\n+  @Override\n+  public boolean deleteRole(String roleName)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n     {\n-        return userManager.silentlyGetRole( roleName );\n+      assertUserManager();\n+      boolean wasDeleted = userManager.deleteRole(roleName);\n+      securityLog.info(subject, \"deleted role `%s`\", roleName);\n+      return wasDeleted;\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n+    {\n+      securityLog.error(subject, \"tried to delete role `%s`: %s\", roleName, e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public void addRoleToUser( String roleName, String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  @Override\n+  public void setUserPassword(String username, String password, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    if (subject.hasUsername(username))\n+    {\n+      try\n+      {\n+        userManager.setUserPassword(username, password, requirePasswordChange);\n+        securityLog.info(subject, \"changed password%s\",\n+            requirePasswordChange ? \", with password change required\" : \"\");\n+      } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n+      {\n+        securityLog.error(subject, \"tried to change password: %s\", e.getMessage());\n+        throw e;\n+      }\n+    } else\n     {\n-        try\n-        {\n-            assertUserManager();\n-            userManager.addRoleToUser( roleName, username );\n-            securityLog.info( subject, \"added role `%s` to user `%s`\", roleName, username );\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to add role `%s` to user `%s`: %s\", roleName, username,\n-                    e.getMessage() );\n-            throw e;\n-        }\n+      try\n+      {\n+        assertUserManager();\n+        userManager.setUserPassword(username, password, requirePasswordChange);\n+        securityLog.info(subject, \"changed password for user `%s`%s\", username,\n+            requirePasswordChange ? \", with password change required\" : \"\");\n+      } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n+      {\n+        securityLog.error(subject, \"tried to change password for user `%s`: %s\", username,\n+            e.getMessage());\n+        throw e;\n+      }\n     }\n+  }\n \n-    @Override\n-    public void removeRoleFromUser( String roleName, String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  @Override\n+  public Set<String> getAllUsernames() throws AuthorizationViolationException\n+  {\n+    try\n     {\n-        try\n-        {\n-            assertUserManager();\n-            if ( subject.hasUsername( username ) && roleName.equals( PredefinedRoles.ADMIN ) )\n-            {\n-                throw new InvalidArgumentsException(\n-                        \"Removing yourself (user '\" + username + \"') from the admin role is not allowed.\" );\n-            }\n-            userManager.removeRoleFromUser( roleName, username );\n-            securityLog.info( subject, \"removed role `%s` from user `%s`\", roleName, username );\n-        }\n-        catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to remove role `%s` from user `%s`: %s\", roleName, username, e\n-                    .getMessage() );\n-            throw e;\n-        }\n+      assertUserManager();\n+      return userManager.getAllUsernames();\n+    } catch (AuthorizationViolationException e)\n+    {\n+      securityLog.error(subject, \"tried to list users: %s\", e.getMessage());\n+      throw e;\n     }\n+  }\n+\n+  @Override\n+  public RoleRecord getRole(String roleName) throws InvalidArgumentsException\n+  {\n+    return userManager.getRole(roleName);\n+  }\n+\n+  @Override\n+  public RoleRecord silentlyGetRole(String roleName)\n+  {\n+    return userManager.silentlyGetRole(roleName);\n+  }\n \n-    @Override\n-    public Set<String> getAllRoleNames() throws AuthorizationViolationException\n+  @Override\n+  public void addRoleToUser(String roleName, String username)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n     {\n-        try\n-        {\n-            assertUserManager();\n-            return userManager.getAllRoleNames();\n-        }\n-        catch ( AuthorizationViolationException e )\n-        {\n-            securityLog.error( subject, \"tried to list roles: %s\", e.getMessage() );\n-            throw e;\n-        }\n+      assertUserManager();\n+      userManager.addRoleToUser(roleName, username);\n+      securityLog.info(subject, \"added role `%s` to user `%s`\", roleName, username);\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n+    {\n+      securityLog.error(subject, \"tried to add role `%s` to user `%s`: %s\", roleName, username,\n+          e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public Set<String> getRoleNamesForUser( String username )\n-            throws InvalidArgumentsException, AuthorizationViolationException\n+  @Override\n+  public void removeRoleFromUser(String roleName, String username)\n+      throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n+    {\n+      assertUserManager();\n+      if (subject.hasUsername(username) && roleName.equals(PredefinedRoles.ADMIN))\n+      {\n+        throw new InvalidArgumentsException(\n+            \"Removing yourself (user '\" + username + \"') from the admin role is not allowed.\");\n+      }\n+      userManager.removeRoleFromUser(roleName, username);\n+      securityLog.info(subject, \"removed role `%s` from user `%s`\", roleName, username);\n+    } catch (AuthorizationViolationException | IOException | InvalidArgumentsException e)\n     {\n-        try\n-        {\n-            assertSelfOrUserManager( username );\n-            return userManager.getRoleNamesForUser( username );\n-        }\n-        catch ( AuthorizationViolationException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to list roles for user `%s`: %s\", username, e.getMessage() );\n-            throw e;\n-        }\n+      securityLog.error(subject, \"tried to remove role `%s` from user `%s`: %s\", roleName, username, e\n+          .getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public Set<String> silentlyGetRoleNamesForUser( String username )\n+  @Override\n+  public Set<String> getAllRoleNames() throws AuthorizationViolationException\n+  {\n+    try\n     {\n-        return userManager.silentlyGetRoleNamesForUser( username );\n+      assertUserManager();\n+      return userManager.getAllRoleNames();\n+    } catch (AuthorizationViolationException e)\n+    {\n+      securityLog.error(subject, \"tried to list roles: %s\", e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public Set<String> getUsernamesForRole( String roleName )\n-            throws InvalidArgumentsException, AuthorizationViolationException\n+  @Override\n+  public Set<String> getRoleNamesForUser(String username)\n+      throws InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n+    {\n+      assertSelfOrUserManager(username);\n+      return userManager.getRoleNamesForUser(username);\n+    } catch (AuthorizationViolationException | InvalidArgumentsException e)\n     {\n-        try\n-        {\n-            assertUserManager();\n-            return userManager.getUsernamesForRole( roleName );\n-        }\n-        catch ( AuthorizationViolationException | InvalidArgumentsException e )\n-        {\n-            securityLog.error( subject, \"tried to list users for role `%s`: %s\", roleName, e.getMessage() );\n-            throw e;\n-        }\n+      securityLog.error(subject, \"tried to list roles for user `%s`: %s\", username, e.getMessage());\n+      throw e;\n     }\n+  }\n \n-    @Override\n-    public Set<String> silentlyGetUsernamesForRole( String roleName )\n+  @Override\n+  public Set<String> silentlyGetRoleNamesForUser(String username)\n+  {\n+    return userManager.silentlyGetRoleNamesForUser(username);\n+  }\n+\n+  @Override\n+  public Set<String> getUsernamesForRole(String roleName)\n+      throws InvalidArgumentsException, AuthorizationViolationException\n+  {\n+    try\n+    {\n+      assertUserManager();\n+      return userManager.getUsernamesForRole(roleName);\n+    } catch (AuthorizationViolationException | InvalidArgumentsException e)\n     {\n-        return userManager.silentlyGetUsernamesForRole( roleName );\n+      securityLog.error(subject, \"tried to list users for role `%s`: %s\", roleName, e.getMessage());\n+      throw e;\n     }\n+  }\n+\n+  @Override\n+  public Set<String> silentlyGetUsernamesForRole(String roleName)\n+  {\n+    return userManager.silentlyGetUsernamesForRole(roleName);\n+  }\n \n-    private void assertSelfOrUserManager( String username )\n+  private void assertSelfOrUserManager(String username)\n+  {\n+    if (!subject.hasUsername(username))\n     {\n-        if ( !subject.hasUsername( username ) )\n-        {\n-            assertUserManager();\n-        }\n+      assertUserManager();\n     }\n+  }\n \n-    private void assertUserManager() throws AuthorizationViolationException\n+  private void assertUserManager() throws AuthorizationViolationException\n+  {\n+    if (!isUserManager)\n     {\n-        if ( !isUserManager )\n-        {\n-            throw new AuthorizationViolationException( PERMISSION_DENIED );\n-        }\n+      throw new AuthorizationViolationException(PERMISSION_DENIED);\n     }\n+  }\n }\n",
            "diff_size": 400
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1668/PersonalUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1668/PersonalUserManager.java\nindex 082f64d1d2c..da410279a1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1668/PersonalUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1668/PersonalUserManager.java\n@@ -47,16 +47,15 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public User newUser( String username, String initialPassword, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public User newUser( String username, String initialPassword, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n             User user = userManager.newUser( username, initialPassword, requirePasswordChange );\n             securityLog.info( subject, \"created user `%s`%s\", username,\n                     requirePasswordChange ? \", with password change required\" : \"\" );\n-            return user;\n+return user;\n         }\n         catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n         {\n@@ -66,16 +65,14 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void suspendUser( String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public void suspendUser( String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n             if ( subject.hasUsername( username ) )\n             {\n-                throw new InvalidArgumentsException( \"Suspending yourself (user '\" + username +\n-                        \"') is not allowed.\" );\n+                throw new InvalidArgumentsException( \"Suspending yourself (user '\" + username + \"') is not allowed.\" );\n             }\n             userManager.suspendUser( username );\n             securityLog.info( subject, \"suspended user `%s`\", username );\n@@ -88,9 +85,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public boolean deleteUser( String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public boolean deleteUser( String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n@@ -110,9 +106,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void activateUser( String username, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public void activateUser( String username, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n@@ -143,9 +138,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public RoleRecord newRole( String roleName, String... usernames )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public RoleRecord newRole( String roleName, String... usernames ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n@@ -161,9 +155,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public boolean deleteRole( String roleName )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public boolean deleteRole( String roleName ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n@@ -179,9 +172,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void setUserPassword( String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public void setUserPassword( String username, String password, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         if ( subject.hasUsername( username ) )\n         {\n             try\n@@ -189,7 +181,7 @@ class PersonalUserManager implements EnterpriseUserManager\n                 userManager.setUserPassword( username, password, requirePasswordChange );\n                 securityLog.info( subject, \"changed password%s\",\n                         requirePasswordChange ? \", with password change required\" : \"\" );\n-            }\n+    }\n             catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n             {\n                 securityLog.error( subject, \"tried to change password: %s\", e.getMessage() );\n@@ -204,12 +196,12 @@ class PersonalUserManager implements EnterpriseUserManager\n                 userManager.setUserPassword( username, password, requirePasswordChange );\n                 securityLog.info( subject, \"changed password for user `%s`%s\", username,\n                         requirePasswordChange ? \", with password change required\" : \"\" );\n-            }\n+    }\n             catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n             {\n                 securityLog.error( subject, \"tried to change password for user `%s`: %s\", username,\n                         e.getMessage() );\n-                throw e;\n+    throw e;\n             }\n         }\n     }\n@@ -242,9 +234,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void addRoleToUser( String roleName, String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public void addRoleToUser( String roleName, String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n@@ -255,30 +246,27 @@ class PersonalUserManager implements EnterpriseUserManager\n         {\n             securityLog.error( subject, \"tried to add role `%s` to user `%s`: %s\", roleName, username,\n                     e.getMessage() );\n-            throw e;\n+    throw e;\n         }\n     }\n \n     @Override\n-    public void removeRoleFromUser( String roleName, String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public void removeRoleFromUser( String roleName, String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n             if ( subject.hasUsername( username ) && roleName.equals( PredefinedRoles.ADMIN ) )\n             {\n-                throw new InvalidArgumentsException(\n-                        \"Removing yourself (user '\" + username + \"') from the admin role is not allowed.\" );\n+                throw new InvalidArgumentsException( \"Removing yourself (user '\" + username + \"') from the admin role is not allowed.\" );\n             }\n             userManager.removeRoleFromUser( roleName, username );\n             securityLog.info( subject, \"removed role `%s` from user `%s`\", roleName, username );\n         }\n         catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n         {\n-            securityLog.error( subject, \"tried to remove role `%s` from user `%s`: %s\", roleName, username, e\n-                    .getMessage() );\n-            throw e;\n+            securityLog.error( subject, \"tried to remove role `%s` from user `%s`: %s\", roleName, username, e.getMessage() );\n+    throw e;\n         }\n     }\n \n@@ -298,9 +286,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public Set<String> getRoleNamesForUser( String username )\n-            throws InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public Set<String> getRoleNamesForUser( String username ) throws InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertSelfOrUserManager( username );\n@@ -320,9 +307,8 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public Set<String> getUsernamesForRole( String roleName )\n-            throws InvalidArgumentsException, AuthorizationViolationException\n-    {\n+    public Set<String> getUsernamesForRole( String roleName ) throws InvalidArgumentsException, AuthorizationViolationException\n+{\n         try\n         {\n             assertUserManager();\n@@ -356,4 +342,4 @@ class PersonalUserManager implements EnterpriseUserManager\n             throw new AuthorizationViolationException( PERMISSION_DENIED );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "255",
                    "column": "49",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1668/PersonalUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1668/PersonalUserManager.java\nindex 082f64d1d2c..b617e0a90b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1668/PersonalUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1668/PersonalUserManager.java\n@@ -21,14 +21,12 @@ package org.neo4j.server.security.enterprise.auth;\n \n import java.io.IOException;\n import java.util.Set;\n-\n import org.neo4j.graphdb.security.AuthorizationViolationException;\n import org.neo4j.internal.kernel.api.security.AuthSubject;\n import org.neo4j.kernel.api.exceptions.InvalidArgumentsException;\n import org.neo4j.kernel.impl.security.User;\n import org.neo4j.server.security.enterprise.auth.plugin.api.PredefinedRoles;\n import org.neo4j.server.security.enterprise.log.SecurityLog;\n-\n import static org.neo4j.graphdb.security.AuthorizationViolationException.PERMISSION_DENIED;\n \n class PersonalUserManager implements EnterpriseUserManager\n@@ -47,15 +45,13 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public User newUser( String username, String initialPassword, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public User newUser( String username, String initialPassword, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n             assertUserManager();\n             User user = userManager.newUser( username, initialPassword, requirePasswordChange );\n-            securityLog.info( subject, \"created user `%s`%s\", username,\n-                    requirePasswordChange ? \", with password change required\" : \"\" );\n+            securityLog.info( subject, \"created user `%s`%s\", username, requirePasswordChange ? \", with password change required\" : \"\" );\n             return user;\n         }\n         catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n@@ -66,17 +62,16 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void suspendUser( String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public void suspendUser( String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n             assertUserManager();\n             if ( subject.hasUsername( username ) )\n             {\n-                throw new InvalidArgumentsException( \"Suspending yourself (user '\" + username +\n-                        \"') is not allowed.\" );\n+                throw new InvalidArgumentsException( \"Suspending yourself (user '\" + username + \"') is not allowed.\" );\n             }\n+\n             userManager.suspendUser( username );\n             securityLog.info( subject, \"suspended user `%s`\", username );\n         }\n@@ -88,8 +83,7 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public boolean deleteUser( String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public boolean deleteUser( String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n@@ -98,6 +92,7 @@ class PersonalUserManager implements EnterpriseUserManager\n             {\n                 throw new InvalidArgumentsException( \"Deleting yourself (user '\" + username + \"') is not allowed.\" );\n             }\n+\n             boolean wasDeleted = userManager.deleteUser( username );\n             securityLog.info( subject, \"deleted user `%s`\", username );\n             return wasDeleted;\n@@ -110,8 +105,7 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void activateUser( String username, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public void activateUser( String username, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n@@ -120,6 +114,7 @@ class PersonalUserManager implements EnterpriseUserManager\n             {\n                 throw new InvalidArgumentsException( \"Activating yourself (user '\" + username + \"') is not allowed.\" );\n             }\n+\n             userManager.activateUser( username, requirePasswordChange );\n             securityLog.info( subject, \"activated user `%s`\", username );\n         }\n@@ -143,8 +138,7 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public RoleRecord newRole( String roleName, String... usernames )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public RoleRecord newRole( String roleName, String... usernames ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n@@ -161,8 +155,7 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public boolean deleteRole( String roleName )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public boolean deleteRole( String roleName ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n@@ -179,16 +172,14 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void setUserPassword( String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public void setUserPassword( String username, String password, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         if ( subject.hasUsername( username ) )\n         {\n             try\n             {\n                 userManager.setUserPassword( username, password, requirePasswordChange );\n-                securityLog.info( subject, \"changed password%s\",\n-                        requirePasswordChange ? \", with password change required\" : \"\" );\n+                securityLog.info( subject, \"changed password%s\", requirePasswordChange ? \", with password change required\" : \"\" );\n             }\n             catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n             {\n@@ -202,13 +193,11 @@ class PersonalUserManager implements EnterpriseUserManager\n             {\n                 assertUserManager();\n                 userManager.setUserPassword( username, password, requirePasswordChange );\n-                securityLog.info( subject, \"changed password for user `%s`%s\", username,\n-                        requirePasswordChange ? \", with password change required\" : \"\" );\n+                securityLog.info( subject, \"changed password for user `%s`%s\", username, requirePasswordChange ? \", with password change required\" : \"\" );\n             }\n             catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n             {\n-                securityLog.error( subject, \"tried to change password for user `%s`: %s\", username,\n-                        e.getMessage() );\n+                securityLog.error( subject, \"tried to change password for user `%s`: %s\", username, e.getMessage() );\n                 throw e;\n             }\n         }\n@@ -242,8 +231,7 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public void addRoleToUser( String roleName, String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public void addRoleToUser( String roleName, String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n@@ -253,31 +241,28 @@ class PersonalUserManager implements EnterpriseUserManager\n         }\n         catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n         {\n-            securityLog.error( subject, \"tried to add role `%s` to user `%s`: %s\", roleName, username,\n-                    e.getMessage() );\n+            securityLog.error( subject, \"tried to add role `%s` to user `%s`: %s\", roleName, username, e.getMessage() );\n             throw e;\n         }\n     }\n \n     @Override\n-    public void removeRoleFromUser( String roleName, String username )\n-            throws IOException, InvalidArgumentsException, AuthorizationViolationException\n+    public void removeRoleFromUser( String roleName, String username ) throws IOException, InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n             assertUserManager();\n-            if ( subject.hasUsername( username ) && roleName.equals( PredefinedRoles.ADMIN ) )\n+            if ( subject.hasUsername( username )&& roleName.equals( PredefinedRoles.ADMIN ) )\n             {\n-                throw new InvalidArgumentsException(\n-                        \"Removing yourself (user '\" + username + \"') from the admin role is not allowed.\" );\n+                throw new InvalidArgumentsException( \"Removing yourself (user '\" + username + \"') from the admin role is not allowed.\" );\n             }\n+\n             userManager.removeRoleFromUser( roleName, username );\n             securityLog.info( subject, \"removed role `%s` from user `%s`\", roleName, username );\n         }\n         catch ( AuthorizationViolationException | IOException | InvalidArgumentsException e )\n         {\n-            securityLog.error( subject, \"tried to remove role `%s` from user `%s`: %s\", roleName, username, e\n-                    .getMessage() );\n+            securityLog.error( subject, \"tried to remove role `%s` from user `%s`: %s\", roleName, username, e.getMessage() );\n             throw e;\n         }\n     }\n@@ -298,8 +283,7 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public Set<String> getRoleNamesForUser( String username )\n-            throws InvalidArgumentsException, AuthorizationViolationException\n+    public Set<String> getRoleNamesForUser( String username ) throws InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n@@ -320,8 +304,7 @@ class PersonalUserManager implements EnterpriseUserManager\n     }\n \n     @Override\n-    public Set<String> getUsernamesForRole( String roleName )\n-            throws InvalidArgumentsException, AuthorizationViolationException\n+    public Set<String> getUsernamesForRole( String roleName ) throws InvalidArgumentsException, AuthorizationViolationException\n     {\n         try\n         {\n@@ -343,7 +326,7 @@ class PersonalUserManager implements EnterpriseUserManager\n \n     private void assertSelfOrUserManager( String username )\n     {\n-        if ( !subject.hasUsername( username ) )\n+        if ( ! subject.hasUsername( username ) )\n         {\n             assertUserManager();\n         }\n@@ -351,9 +334,9 @@ class PersonalUserManager implements EnterpriseUserManager\n \n     private void assertUserManager() throws AuthorizationViolationException\n     {\n-        if ( !isUserManager )\n+        if ( ! isUserManager )\n         {\n             throw new AuthorizationViolationException( PERMISSION_DENIED );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
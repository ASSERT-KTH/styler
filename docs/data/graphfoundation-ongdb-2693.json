{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2693",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2693/ExecutionMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2693/ExecutionMonitor.java\nindex eac6f4543cc..13b20a48b70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2693/ExecutionMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2693/ExecutionMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.staging;\n \n import java.time.Clock;\n@@ -31,78 +32,78 @@ import org.neo4j.time.Clocks;\n  */\n public interface ExecutionMonitor\n {\n-    /**\n-     * Signals start of import. Called only once and before any other method.\n-     *\n-     * @param dependencyResolver {@link DependencyResolver} for getting dependencies from.\n-     */\n-    default void initialize( DependencyResolver dependencyResolver )\n-    {   // empty by default\n+  /**\n+   * Signals start of import. Called only once and before any other method.\n+   *\n+   * @param dependencyResolver {@link DependencyResolver} for getting dependencies from.\n+   */\n+  default void initialize(DependencyResolver dependencyResolver)\n+  {   // empty by default\n+  }\n+\n+  /**\n+   * Signals the start of a {@link StageExecution}.\n+   */\n+  void start(StageExecution execution);\n+\n+  /**\n+   * Signals the end of the execution previously {@link #start(StageExecution) started}.\n+   */\n+  void end(StageExecution execution, long totalTimeMillis);\n+\n+  /**\n+   * Called after all {@link StageExecution stage executions} have run.\n+   */\n+  void done(boolean successful, long totalTimeMillis, String additionalInformation);\n+\n+  /**\n+   * @return next time stamp when this monitor would like to check that status of current execution.\n+   */\n+  long nextCheckTime();\n+\n+  /**\n+   * Called periodically while executing a {@link StageExecution}.\n+   */\n+  void check(StageExecution execution);\n+\n+  /**\n+   * Base implementation with most methods defaulting to not doing anything.\n+   */\n+  abstract class Adapter implements ExecutionMonitor\n+  {\n+    private final Clock clock;\n+    private final long intervalMillis;\n+\n+    public Adapter(Clock clock, long time, TimeUnit unit)\n+    {\n+      this.clock = clock;\n+      this.intervalMillis = unit.toMillis(time);\n     }\n \n-    /**\n-     * Signals the start of a {@link StageExecution}.\n-     */\n-    void start( StageExecution execution );\n-\n-    /**\n-     * Signals the end of the execution previously {@link #start(StageExecution) started}.\n-     */\n-    void end( StageExecution execution, long totalTimeMillis );\n-\n-    /**\n-     * Called after all {@link StageExecution stage executions} have run.\n-     */\n-    void done( boolean successful, long totalTimeMillis, String additionalInformation );\n-\n-    /**\n-     * @return next time stamp when this monitor would like to check that status of current execution.\n-     */\n-    long nextCheckTime();\n-\n-    /**\n-     * Called periodically while executing a {@link StageExecution}.\n-     */\n-    void check( StageExecution execution );\n-\n-    /**\n-     * Base implementation with most methods defaulting to not doing anything.\n-     */\n-    abstract class Adapter implements ExecutionMonitor\n+    public Adapter(long time, TimeUnit unit)\n     {\n-        private final Clock clock;\n-        private final long intervalMillis;\n-\n-        public Adapter( Clock clock, long time, TimeUnit unit )\n-        {\n-            this.clock = clock;\n-            this.intervalMillis = unit.toMillis( time );\n-        }\n-\n-        public Adapter( long time, TimeUnit unit )\n-        {\n-            this( Clocks.systemClock(), time, unit );\n-        }\n-\n-        @Override\n-        public long nextCheckTime()\n-        {\n-            return clock.millis() + intervalMillis;\n-        }\n-\n-        @Override\n-        public void start( StageExecution execution )\n-        {   // Do nothing by default\n-        }\n-\n-        @Override\n-        public void end( StageExecution execution, long totalTimeMillis )\n-        {   // Do nothing by default\n-        }\n-\n-        @Override\n-        public void done( boolean successful, long totalTimeMillis, String additionalInformation )\n-        {   // Do nothing by default\n-        }\n+      this(Clocks.systemClock(), time, unit);\n+    }\n+\n+    @Override\n+    public long nextCheckTime()\n+    {\n+      return clock.millis() + intervalMillis;\n+    }\n+\n+    @Override\n+    public void start(StageExecution execution)\n+    {   // Do nothing by default\n+    }\n+\n+    @Override\n+    public void end(StageExecution execution, long totalTimeMillis)\n+    {   // Do nothing by default\n+    }\n+\n+    @Override\n+    public void done(boolean successful, long totalTimeMillis, String additionalInformation)\n+    {   // Do nothing by default\n     }\n+  }\n }\n",
            "diff_size": 111
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2693/ExecutionMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2693/ExecutionMonitor.java\nindex eac6f4543cc..7b615143267 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2693/ExecutionMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2693/ExecutionMonitor.java\n@@ -37,7 +37,8 @@ public interface ExecutionMonitor\n      * @param dependencyResolver {@link DependencyResolver} for getting dependencies from.\n      */\n     default void initialize( DependencyResolver dependencyResolver )\n-    {   // empty by default\n+    {\n+    // empty by default\n     }\n \n     /**\n@@ -92,17 +93,20 @@ public interface ExecutionMonitor\n \n         @Override\n         public void start( StageExecution execution )\n-        {   // Do nothing by default\n+        {\n+    // Do nothing by default\n         }\n \n         @Override\n         public void end( StageExecution execution, long totalTimeMillis )\n-        {   // Do nothing by default\n+        {\n+    // Do nothing by default\n         }\n \n         @Override\n         public void done( boolean successful, long totalTimeMillis, String additionalInformation )\n-        {   // Do nothing by default\n+        {\n+    // Do nothing by default\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
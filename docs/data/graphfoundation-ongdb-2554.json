{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2554",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2554/NativeSchemaIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2554/NativeSchemaIndexAccessor.java\nindex 47b463d57ba..2d120c4f52c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2554/NativeSchemaIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2554/NativeSchemaIndexAccessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.File;\n@@ -44,90 +45,89 @@ import static org.neo4j.helpers.collection.Iterators.iterator;\n import static org.neo4j.index.internal.gbptree.GBPTree.NO_HEADER_WRITER;\n \n public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        extends NativeSchemaIndex<KEY,VALUE> implements IndexAccessor\n+    extends NativeSchemaIndex<KEY, VALUE> implements IndexAccessor\n {\n-    private final NativeSchemaIndexUpdater<KEY,VALUE> singleUpdater;\n-    final IndexSamplingConfig samplingConfig;\n-\n-    NativeSchemaIndexAccessor(\n-            PageCache pageCache,\n-            FileSystemAbstraction fs,\n-            File storeFile,\n-            Layout<KEY,VALUE> layout,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-            IndexProvider.Monitor monitor,\n-            SchemaIndexDescriptor descriptor,\n-            long indexId,\n-            IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n-        super( pageCache, fs, storeFile, layout, monitor, descriptor, indexId );\n-        singleUpdater = new NativeSchemaIndexUpdater<>( layout.newKey(), layout.newValue() );\n-        this.samplingConfig = samplingConfig;\n-        instantiateTree( recoveryCleanupWorkCollector, NO_HEADER_WRITER );\n-    }\n+  private final NativeSchemaIndexUpdater<KEY, VALUE> singleUpdater;\n+  final IndexSamplingConfig samplingConfig;\n \n-    @Override\n-    public void drop() throws IOException\n-    {\n-        closeTree();\n-        gbpTreeFileUtil.deleteFile( storeFile );\n-    }\n+  NativeSchemaIndexAccessor(\n+      PageCache pageCache,\n+      FileSystemAbstraction fs,\n+      File storeFile,\n+      Layout<KEY, VALUE> layout,\n+      RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n+      IndexProvider.Monitor monitor,\n+      SchemaIndexDescriptor descriptor,\n+      long indexId,\n+      IndexSamplingConfig samplingConfig) throws IOException\n+  {\n+    super(pageCache, fs, storeFile, layout, monitor, descriptor, indexId);\n+    singleUpdater = new NativeSchemaIndexUpdater<>(layout.newKey(), layout.newValue());\n+    this.samplingConfig = samplingConfig;\n+    instantiateTree(recoveryCleanupWorkCollector, NO_HEADER_WRITER);\n+  }\n \n-    @Override\n-    public NativeSchemaIndexUpdater<KEY, VALUE> newUpdater( IndexUpdateMode mode )\n-    {\n-        assertOpen();\n-        try\n-        {\n-            return singleUpdater.initialize( tree.writer() );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n-    }\n+  @Override\n+  public void drop() throws IOException\n+  {\n+    closeTree();\n+    gbpTreeFileUtil.deleteFile(storeFile);\n+  }\n \n-    @Override\n-    public void force( IOLimiter ioLimiter ) throws IOException\n+  @Override\n+  public NativeSchemaIndexUpdater<KEY, VALUE> newUpdater(IndexUpdateMode mode)\n+  {\n+    assertOpen();\n+    try\n     {\n-        tree.checkpoint( ioLimiter );\n-    }\n-\n-    @Override\n-    public void refresh()\n+      return singleUpdater.initialize(tree.writer());\n+    } catch (IOException e)\n     {\n-        // not required in this implementation\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        closeTree();\n-    }\n+  @Override\n+  public void force(IOLimiter ioLimiter) throws IOException\n+  {\n+    tree.checkpoint(ioLimiter);\n+  }\n \n-    @Override\n-    public boolean isDirty()\n-    {\n-        return tree.wasDirtyOnStartup();\n-    }\n+  @Override\n+  public void refresh()\n+  {\n+    // not required in this implementation\n+  }\n \n-    @Override\n-    public abstract IndexReader newReader();\n+  @Override\n+  public void close() throws IOException\n+  {\n+    closeTree();\n+  }\n \n-    @Override\n-    public BoundedIterable<Long> newAllEntriesReader()\n-    {\n-        return new NativeAllEntriesReader<>( tree, layout );\n-    }\n+  @Override\n+  public boolean isDirty()\n+  {\n+    return tree.wasDirtyOnStartup();\n+  }\n \n-    @Override\n-    public ResourceIterator<File> snapshotFiles()\n-    {\n-        return asResourceIterator( iterator( storeFile ) );\n-    }\n+  @Override\n+  public abstract IndexReader newReader();\n \n-    @Override\n-    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor ) throws IndexEntryConflictException\n-    {   // Not needed since uniqueness is verified automatically w/o cost for every update.\n-    }\n+  @Override\n+  public BoundedIterable<Long> newAllEntriesReader()\n+  {\n+    return new NativeAllEntriesReader<>(tree, layout);\n+  }\n+\n+  @Override\n+  public ResourceIterator<File> snapshotFiles()\n+  {\n+    return asResourceIterator(iterator(storeFile));\n+  }\n+\n+  @Override\n+  public void verifyDeferredConstraints(PropertyAccessor propertyAccessor) throws IndexEntryConflictException\n+  {   // Not needed since uniqueness is verified automatically w/o cost for every update.\n+  }\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2554/NativeSchemaIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2554/NativeSchemaIndexAccessor.java\nindex 47b463d57ba..c8654af0b7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2554/NativeSchemaIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2554/NativeSchemaIndexAccessor.java\n@@ -43,27 +43,25 @@ import static org.neo4j.helpers.collection.Iterators.asResourceIterator;\n import static org.neo4j.helpers.collection.Iterators.iterator;\n import static org.neo4j.index.internal.gbptree.GBPTree.NO_HEADER_WRITER;\n \n-public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        extends NativeSchemaIndex<KEY,VALUE> implements IndexAccessor\n+public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> extends NativeSchemaIndex<KEY,VALUE> implements IndexAccessor\n {\n     private final NativeSchemaIndexUpdater<KEY,VALUE> singleUpdater;\n     final IndexSamplingConfig samplingConfig;\n \n-    NativeSchemaIndexAccessor(\n-            PageCache pageCache,\n+    NativeSchemaIndexAccessor( PageCache pageCache,\n             FileSystemAbstraction fs,\n-            File storeFile,\n-            Layout<KEY,VALUE> layout,\n+            File storeFile, Layout<KEY,VALUE> layout,\n             RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n             IndexProvider.Monitor monitor,\n             SchemaIndexDescriptor descriptor,\n             long indexId,\n             IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n+{\n         super( pageCache, fs, storeFile, layout, monitor, descriptor, indexId );\n         singleUpdater = new NativeSchemaIndexUpdater<>( layout.newKey(), layout.newValue() );\n         this.samplingConfig = samplingConfig;\n-        instantiateTree( recoveryCleanupWorkCollector, NO_HEADER_WRITER );\n+\n+instantiateTree( recoveryCleanupWorkCollector, NO_HEADER_WRITER );\n     }\n \n     @Override\n@@ -74,7 +72,7 @@ public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>\n     }\n \n     @Override\n-    public NativeSchemaIndexUpdater<KEY, VALUE> newUpdater( IndexUpdateMode mode )\n+    public NativeSchemaIndexUpdater<KEY,VALUE> newUpdater( IndexUpdateMode mode )\n     {\n         assertOpen();\n         try\n@@ -128,6 +126,7 @@ public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>\n \n     @Override\n     public void verifyDeferredConstraints( PropertyAccessor propertyAccessor ) throws IndexEntryConflictException\n-    {   // Not needed since uniqueness is verified automatically w/o cost for every update.\n+    {\n+    // Not needed since uniqueness is verified automatically w/o cost for every update.\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "49",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "46",
                    "column": "49",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 294).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2554/NativeSchemaIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2554/NativeSchemaIndexAccessor.java\nindex 47b463d57ba..7ab47b016a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2554/NativeSchemaIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2554/NativeSchemaIndexAccessor.java\n@@ -22,7 +22,6 @@ package org.neo4j.kernel.impl.index.schema;\n import java.io.File;\n import java.io.IOException;\n import java.io.UncheckedIOException;\n-\n import org.neo4j.graphdb.ResourceIterator;\n import org.neo4j.helpers.collection.BoundedIterable;\n import org.neo4j.index.internal.gbptree.Layout;\n@@ -38,27 +37,20 @@ import org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor;\n import org.neo4j.kernel.impl.api.index.IndexUpdateMode;\n import org.neo4j.kernel.impl.api.index.sampling.IndexSamplingConfig;\n import org.neo4j.storageengine.api.schema.IndexReader;\n-\n import static org.neo4j.helpers.collection.Iterators.asResourceIterator;\n+\n import static org.neo4j.helpers.collection.Iterators.iterator;\n+\n import static org.neo4j.index.internal.gbptree.GBPTree.NO_HEADER_WRITER;\n \n-public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        extends NativeSchemaIndex<KEY,VALUE> implements IndexAccessor\n+public abstract class NativeSchemaIndexAccessor < KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> extends NativeSchemaIndex<KEY,VALUE>\n+implements IndexAccessor\n {\n     private final NativeSchemaIndexUpdater<KEY,VALUE> singleUpdater;\n     final IndexSamplingConfig samplingConfig;\n \n-    NativeSchemaIndexAccessor(\n-            PageCache pageCache,\n-            FileSystemAbstraction fs,\n-            File storeFile,\n-            Layout<KEY,VALUE> layout,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-            IndexProvider.Monitor monitor,\n-            SchemaIndexDescriptor descriptor,\n-            long indexId,\n-            IndexSamplingConfig samplingConfig ) throws IOException\n+    NativeSchemaIndexAccessor( PageCache pageCache, FileSystemAbstraction fs, File storeFile, Layout<KEY,VALUE> layout, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig )\n+    throws IOException\n     {\n         super( pageCache, fs, storeFile, layout, monitor, descriptor, indexId );\n         singleUpdater = new NativeSchemaIndexUpdater<>( layout.newKey(), layout.newValue() );\n@@ -74,7 +66,7 @@ public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>\n     }\n \n     @Override\n-    public NativeSchemaIndexUpdater<KEY, VALUE> newUpdater( IndexUpdateMode mode )\n+    public NativeSchemaIndexUpdater<KEY,VALUE> newUpdater( IndexUpdateMode mode )\n     {\n         assertOpen();\n         try\n@@ -112,7 +104,8 @@ public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>\n     }\n \n     @Override\n-    public abstract IndexReader newReader();\n+    public abstract IndexReader newReader()\n+    ;\n \n     @Override\n     public BoundedIterable<Long> newAllEntriesReader()\n@@ -130,4 +123,4 @@ public abstract class NativeSchemaIndexAccessor<KEY extends NativeSchemaKey<KEY>\n     public void verifyDeferredConstraints( PropertyAccessor propertyAccessor ) throws IndexEntryConflictException\n     {   // Not needed since uniqueness is verified automatically w/o cost for every update.\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
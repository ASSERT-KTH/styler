{
    "project_name": "graphfoundation-ongdb",
    "error_id": "751",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "183",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "195",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/751/NumberValues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/751/NumberValues.java\nindex ebae2680738..add4da1a8c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/751/NumberValues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/751/NumberValues.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.math.BigDecimal;\n@@ -27,339 +28,334 @@ import java.util.Arrays;\n  * <p>\n  * Also compares Value typed number arrays.\n  */\n-@SuppressWarnings( \"WeakerAccess\" )\n+@SuppressWarnings(\"WeakerAccess\")\n public final class NumberValues\n {\n-    private NumberValues()\n+  private NumberValues()\n+  {\n+  }\n+\n+  /*\n+   * Using the fact that the hashcode \u2211x_i * 31^(i-1) can be expressed as\n+   * a dot product, [1, v_1, v_2, v_2, ..., v_n] \u2022 [31^n, 31^{n-1}, ..., 31, 1]. By expressing\n+   * it in that way the compiler is smart enough to better parallelize the\n+   * computation of the hash code.\n+   */\n+  static final int MAX_LENGTH = 10000;\n+  private static final int[] COEFFICIENTS = new int[MAX_LENGTH + 1];\n+  private static final long NON_DOUBLE_LONG = 0xFFE0_0000_0000_0000L; // doubles are exact integers up to 53 bits\n+\n+  static\n+  {\n+    //We are defining the coefficient vector backwards, [1, 31, 31^2,...]\n+    //makes it easier and faster do find the starting position later\n+    COEFFICIENTS[0] = 1;\n+    for (int i = 1; i <= MAX_LENGTH; ++i)\n     {\n+      COEFFICIENTS[i] = 31 * COEFFICIENTS[i - 1];\n     }\n-\n-    /*\n-     * Using the fact that the hashcode \u2211x_i * 31^(i-1) can be expressed as\n-     * a dot product, [1, v_1, v_2, v_2, ..., v_n] \u2022 [31^n, 31^{n-1}, ..., 31, 1]. By expressing\n-     * it in that way the compiler is smart enough to better parallelize the\n-     * computation of the hash code.\n-     */\n-    static final int MAX_LENGTH = 10000;\n-    private static final int[] COEFFICIENTS = new int[MAX_LENGTH + 1];\n-    private static final long NON_DOUBLE_LONG = 0xFFE0_0000_0000_0000L; // doubles are exact integers up to 53 bits\n-\n-    static\n+  }\n+\n+  /*\n+   * For equality semantics it is important that the hashcode of a long\n+   * is the same as the hashcode of an int as long as the long can fit in 32 bits.\n+   */\n+  public static int hash(long number)\n+  {\n+    int asInt = (int) number;\n+    if (asInt == number)\n     {\n-        //We are defining the coefficient vector backwards, [1, 31, 31^2,...]\n-        //makes it easier and faster do find the starting position later\n-        COEFFICIENTS[0] = 1;\n-        for ( int i = 1; i <= MAX_LENGTH; ++i )\n-        {\n-            COEFFICIENTS[i] = 31 * COEFFICIENTS[i - 1];\n-        }\n+      return asInt;\n     }\n+    return Long.hashCode(number);\n+  }\n \n-    /*\n-     * For equality semantics it is important that the hashcode of a long\n-     * is the same as the hashcode of an int as long as the long can fit in 32 bits.\n-     */\n-    public static int hash( long number )\n+  public static int hash(double number)\n+  {\n+    long asLong = (long) number;\n+    if (asLong == number)\n     {\n-        int asInt = (int) number;\n-        if ( asInt == number )\n-        {\n-            return asInt;\n-        }\n-        return Long.hashCode( number );\n+      return hash(asLong);\n     }\n-\n-    public static int hash( double number )\n+    long bits = Double.doubleToLongBits(number);\n+    return (int) (bits ^ (bits >>> 32));\n+  }\n+\n+  /*\n+   * This is a slightly silly optimization but by turning the computation\n+   * of the hashcode into a dot product we trick the jit compiler to use SIMD\n+   * instructions and performance doubles.\n+   */\n+  public static int hash(byte[] values)\n+  {\n+    final int max = Math.min(values.length, MAX_LENGTH);\n+    int result = COEFFICIENTS[max];\n+    for (int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i)\n     {\n-        long asLong = (long) number;\n-        if ( asLong == number )\n-        {\n-            return hash( asLong );\n-        }\n-        long bits = Double.doubleToLongBits( number );\n-        return (int) (bits ^ (bits >>> 32));\n+      result += COEFFICIENTS[max - i - 1] * values[i];\n     }\n-\n-    /*\n-     * This is a slightly silly optimization but by turning the computation\n-     * of the hashcode into a dot product we trick the jit compiler to use SIMD\n-     * instructions and performance doubles.\n-     */\n-    public static int hash( byte[] values )\n+    return result;\n+  }\n+\n+  public static int hash(short[] values)\n+  {\n+    final int max = Math.min(values.length, MAX_LENGTH);\n+    int result = COEFFICIENTS[max];\n+    for (int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i)\n     {\n-        final int max = Math.min( values.length, MAX_LENGTH );\n-        int result = COEFFICIENTS[max];\n-        for ( int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i )\n-        {\n-            result += COEFFICIENTS[max - i - 1] * values[i];\n-        }\n-        return result;\n+      result += COEFFICIENTS[max - i - 1] * values[i];\n     }\n-\n-    public static int hash( short[] values )\n+    return result;\n+  }\n+\n+  public static int hash(char[] values)\n+  {\n+    final int max = Math.min(values.length, MAX_LENGTH);\n+    int result = COEFFICIENTS[max];\n+    for (int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i)\n     {\n-        final int max = Math.min( values.length, MAX_LENGTH );\n-        int result = COEFFICIENTS[max];\n-        for ( int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i )\n-        {\n-            result += COEFFICIENTS[max - i - 1] * values[i];\n-        }\n-        return result;\n+      result += COEFFICIENTS[max - i - 1] * values[i];\n     }\n-\n-    public static int hash( char[] values )\n+    return result;\n+  }\n+\n+  public static int hash(int[] values)\n+  {\n+    final int max = Math.min(values.length, MAX_LENGTH);\n+    int result = COEFFICIENTS[max];\n+    for (int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i)\n     {\n-        final int max = Math.min( values.length, MAX_LENGTH );\n-        int result = COEFFICIENTS[max];\n-        for ( int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i )\n-        {\n-            result += COEFFICIENTS[max - i - 1] * values[i];\n-        }\n-        return result;\n+      result += COEFFICIENTS[max - i - 1] * values[i];\n     }\n-\n-    public static int hash( int[] values )\n+    return result;\n+  }\n+\n+  public static int hash(long[] values)\n+  {\n+    final int max = Math.min(values.length, MAX_LENGTH);\n+    int result = COEFFICIENTS[max];\n+    for (int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i)\n     {\n-        final int max = Math.min( values.length, MAX_LENGTH );\n-        int result = COEFFICIENTS[max];\n-        for ( int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i )\n-        {\n-            result += COEFFICIENTS[max - i - 1] * values[i];\n-        }\n-        return result;\n+      result += COEFFICIENTS[max - i - 1] * NumberValues.hash(values[i]);\n     }\n+    return result;\n+  }\n \n-    public static int hash( long[] values )\n+  public static int hash(float[] values)\n+  {\n+    int result = 1;\n+    for (float value : values)\n     {\n-        final int max = Math.min( values.length, MAX_LENGTH );\n-        int result = COEFFICIENTS[max];\n-        for ( int i = 0; i < values.length && i < COEFFICIENTS.length - 1; ++i )\n-        {\n-            result += COEFFICIENTS[max - i - 1] * NumberValues.hash( values[i] );\n-        }\n-        return result;\n+      int elementHash = NumberValues.hash(value);\n+      result = 31 * result + elementHash;\n     }\n+    return result;\n+  }\n \n-    public static int hash( float[] values )\n+  public static int hash(double[] values)\n+  {\n+    int result = 1;\n+    for (double value : values)\n     {\n-        int result = 1;\n-        for ( float value : values )\n-        {\n-            int elementHash = NumberValues.hash( value );\n-            result = 31 * result + elementHash;\n-        }\n-        return result;\n+      int elementHash = NumberValues.hash(value);\n+      result = 31 * result + elementHash;\n     }\n+    return result;\n+  }\n \n-    public static int hash( double[] values )\n+  public static int hash(boolean[] value)\n+  {\n+    return Arrays.hashCode(value);\n+  }\n+\n+  public static boolean numbersEqual(double fpn, long in)\n+  {\n+    if (in < 0)\n     {\n-        int result = 1;\n-        for ( double value : values )\n-        {\n-            int elementHash = NumberValues.hash( value );\n-            result = 31 * result + elementHash;\n+      if (fpn < 0.0)\n+      {\n+        if ((NON_DOUBLE_LONG & in) == 0L) // the high order bits are only sign bits\n+        { // no loss of precision if converting the long to a double, so it's safe to compare as double\n+          return fpn == in;\n+        } else if (fpn < Long.MIN_VALUE)\n+        { // the double is too big to fit in a long, they cannot be equal\n+          return false;\n+        } else if ((fpn == Math.floor(fpn)) && !Double.isInfinite(fpn)) // no decimals\n+        { // safe to compare as long\n+          return in == (long) fpn;\n         }\n-        return result;\n+      }\n+    } else\n+    {\n+      if (!(fpn < 0.0))\n+      {\n+        if ((NON_DOUBLE_LONG & in) == 0L) // the high order bits are only sign bits\n+        { // no loss of precision if converting the long to a double, so it's safe to compare as double\n+          return fpn == in;\n+        } else if (fpn > Long.MAX_VALUE)\n+        { // the double is too big to fit in a long, they cannot be equal\n+          return false;\n+        } else if ((fpn == Math.floor(fpn)) && !Double.isInfinite(fpn))  // no decimals\n+        { // safe to compare as long\n+          return in == (long) fpn;\n+        }\n+      }\n     }\n+    return false;\n+  }\n \n-    public static int hash( boolean[] value )\n+  // Tested by PropertyValueComparisonTest\n+  public static int compareDoubleAgainstLong(double lhs, long rhs)\n+  {\n+    if ((NON_DOUBLE_LONG & rhs) != 0L)\n     {\n-        return Arrays.hashCode( value );\n+      if (Double.isNaN(lhs))\n+      {\n+        return +1;\n+      }\n+      if (Double.isInfinite(lhs))\n+      {\n+        return lhs < 0 ? -1 : +1;\n+      }\n+      return BigDecimal.valueOf(lhs).compareTo(BigDecimal.valueOf(rhs));\n     }\n-\n-    public static boolean numbersEqual( double fpn, long in )\n+    return Double.compare(lhs, rhs);\n+  }\n+\n+  // Tested by PropertyValueComparisonTest\n+  public static int compareLongAgainstDouble(long lhs, double rhs)\n+  {\n+    return -compareDoubleAgainstLong(rhs, lhs);\n+  }\n+\n+  public static boolean numbersEqual(IntegralArray lhs, IntegralArray rhs)\n+  {\n+    int length = lhs.length();\n+    if (length != rhs.length())\n     {\n-        if ( in < 0 )\n-        {\n-            if ( fpn < 0.0 )\n-            {\n-                if ( (NON_DOUBLE_LONG & in) == 0L ) // the high order bits are only sign bits\n-                { // no loss of precision if converting the long to a double, so it's safe to compare as double\n-                    return fpn == in;\n-                }\n-                else if ( fpn < Long.MIN_VALUE )\n-                { // the double is too big to fit in a long, they cannot be equal\n-                    return false;\n-                }\n-                else if ( (fpn == Math.floor( fpn )) && !Double.isInfinite( fpn ) ) // no decimals\n-                { // safe to compare as long\n-                    return in == (long) fpn;\n-                }\n-            }\n-        }\n-        else\n-        {\n-            if ( !(fpn < 0.0) )\n-            {\n-                if ( (NON_DOUBLE_LONG & in) == 0L ) // the high order bits are only sign bits\n-                { // no loss of precision if converting the long to a double, so it's safe to compare as double\n-                    return fpn == in;\n-                }\n-                else if ( fpn > Long.MAX_VALUE )\n-                { // the double is too big to fit in a long, they cannot be equal\n-                    return false;\n-                }\n-                else if ( (fpn == Math.floor( fpn )) && !Double.isInfinite( fpn ) )  // no decimals\n-                { // safe to compare as long\n-                    return in == (long) fpn;\n-                }\n-            }\n-        }\n+      return false;\n+    }\n+    for (int i = 0; i < length; i++)\n+    {\n+      if (lhs.longValue(i) != rhs.longValue(i))\n+      {\n         return false;\n+      }\n     }\n+    return true;\n+  }\n \n-    // Tested by PropertyValueComparisonTest\n-    public static int compareDoubleAgainstLong( double lhs, long rhs )\n+  public static boolean numbersEqual(FloatingPointArray lhs, FloatingPointArray rhs)\n+  {\n+    int length = lhs.length();\n+    if (length != rhs.length())\n     {\n-        if ( (NON_DOUBLE_LONG & rhs) != 0L )\n-        {\n-            if ( Double.isNaN( lhs ) )\n-            {\n-                return +1;\n-            }\n-            if ( Double.isInfinite( lhs ) )\n-            {\n-                return lhs < 0 ? -1 : +1;\n-            }\n-            return BigDecimal.valueOf( lhs ).compareTo( BigDecimal.valueOf( rhs ) );\n-        }\n-        return Double.compare( lhs, rhs );\n+      return false;\n     }\n-\n-    // Tested by PropertyValueComparisonTest\n-    public static int compareLongAgainstDouble( long lhs, double rhs )\n+    for (int i = 0; i < length; i++)\n     {\n-        return -compareDoubleAgainstLong( rhs, lhs );\n+      if (lhs.doubleValue(i) != rhs.doubleValue(i))\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n \n-    public static boolean numbersEqual( IntegralArray lhs, IntegralArray rhs )\n+  public static boolean numbersEqual(FloatingPointArray fps, IntegralArray ins)\n+  {\n+    int length = ins.length();\n+    if (length != fps.length())\n     {\n-        int length = lhs.length();\n-        if ( length != rhs.length() )\n-        {\n-            return false;\n-        }\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            if ( lhs.longValue( i ) != rhs.longValue( i ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      return false;\n     }\n-\n-    public static boolean numbersEqual( FloatingPointArray lhs, FloatingPointArray rhs )\n+    for (int i = 0; i < length; i++)\n     {\n-        int length = lhs.length();\n-        if ( length != rhs.length() )\n-        {\n-            return false;\n-        }\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            if ( lhs.doubleValue( i ) != rhs.doubleValue( i ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      if (!numbersEqual(fps.doubleValue(i), ins.longValue(i)))\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n+\n+  public static int compareIntegerArrays(IntegralArray a, IntegralArray b)\n+  {\n+    int i = 0;\n+    int x = 0;\n+    int length = Math.min(a.length(), b.length());\n \n-    public static boolean numbersEqual( FloatingPointArray fps, IntegralArray ins )\n+    while (x == 0 && i < length)\n     {\n-        int length = ins.length();\n-        if ( length != fps.length() )\n-        {\n-            return false;\n-        }\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            if ( !numbersEqual( fps.doubleValue( i ), ins.longValue( i ) ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      x = Long.compare(a.longValue(i), b.longValue(i));\n+      i++;\n     }\n \n-    public static int compareIntegerArrays( IntegralArray a, IntegralArray b )\n+    if (x == 0)\n     {\n-        int i = 0;\n-        int x = 0;\n-        int length = Math.min( a.length(), b.length() );\n-\n-        while ( x == 0 && i < length )\n-        {\n-            x = Long.compare( a.longValue( i ), b.longValue( i ) );\n-            i++;\n-        }\n+      x = a.length() - b.length();\n+    }\n \n-        if ( x == 0 )\n-        {\n-            x = a.length() - b.length();\n-        }\n+    return x;\n+  }\n \n-        return x;\n+  public static int compareIntegerVsFloatArrays(IntegralArray a, FloatingPointArray b)\n+  {\n+    int i = 0;\n+    int x = 0;\n+    int length = Math.min(a.length(), b.length());\n+\n+    while (x == 0 && i < length)\n+    {\n+      x = compareLongAgainstDouble(a.longValue(i), b.doubleValue(i));\n+      i++;\n     }\n \n-    public static int compareIntegerVsFloatArrays( IntegralArray a, FloatingPointArray b )\n+    if (x == 0)\n     {\n-        int i = 0;\n-        int x = 0;\n-        int length = Math.min( a.length(), b.length() );\n-\n-        while ( x == 0 && i < length )\n-        {\n-            x = compareLongAgainstDouble( a.longValue( i ), b.doubleValue( i ) );\n-            i++;\n-        }\n+      x = a.length() - b.length();\n+    }\n \n-        if ( x == 0 )\n-        {\n-            x = a.length() - b.length();\n-        }\n+    return x;\n+  }\n \n-        return x;\n+  public static int compareFloatArrays(FloatingPointArray a, FloatingPointArray b)\n+  {\n+    int i = 0;\n+    int x = 0;\n+    int length = Math.min(a.length(), b.length());\n+\n+    while (x == 0 && i < length)\n+    {\n+      x = Double.compare(a.doubleValue(i), b.doubleValue(i));\n+      i++;\n     }\n \n-    public static int compareFloatArrays( FloatingPointArray a, FloatingPointArray b )\n+    if (x == 0)\n     {\n-        int i = 0;\n-        int x = 0;\n-        int length = Math.min( a.length(), b.length() );\n-\n-        while ( x == 0 && i < length )\n-        {\n-            x = Double.compare( a.doubleValue( i ), b.doubleValue( i ) );\n-            i++;\n-        }\n+      x = a.length() - b.length();\n+    }\n \n-        if ( x == 0 )\n-        {\n-            x = a.length() - b.length();\n-        }\n+    return x;\n+  }\n \n-        return x;\n-    }\n+  public static int compareBooleanArrays(BooleanArray a, BooleanArray b)\n+  {\n+    int i = 0;\n+    int x = 0;\n+    int length = Math.min(a.length(), b.length());\n \n-    public static int compareBooleanArrays( BooleanArray a, BooleanArray b )\n+    while (x == 0 && i < length)\n     {\n-        int i = 0;\n-        int x = 0;\n-        int length = Math.min( a.length(), b.length() );\n-\n-        while ( x == 0 && i < length )\n-        {\n-            x = Boolean.compare( a.booleanValue( i ), b.booleanValue( i ) );\n-            i++;\n-        }\n-\n-        if ( x == 0 )\n-        {\n-            x = a.length() - b.length();\n-        }\n+      x = Boolean.compare(a.booleanValue(i), b.booleanValue(i));\n+      i++;\n+    }\n \n-        return x;\n+    if (x == 0)\n+    {\n+      x = a.length() - b.length();\n     }\n+\n+    return x;\n+  }\n }\n",
            "diff_size": 434
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "30",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/751/NumberValues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/751/NumberValues.java\nindex ebae2680738..f95a9c76b5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/751/NumberValues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/751/NumberValues.java\n@@ -61,12 +61,13 @@ public final class NumberValues\n      */\n     public static int hash( long number )\n     {\n-        int asInt = (int) number;\n+        int asInt = ( int) number;\n         if ( asInt == number )\n         {\n             return asInt;\n         }\n-        return Long.hashCode( number );\n+\n+return Long.hashCode( number );\n     }\n \n     public static int hash( double number )\n@@ -77,7 +78,7 @@ public final class NumberValues\n             return hash( asLong );\n         }\n         long bits = Double.doubleToLongBits( number );\n-        return (int) (bits ^ (bits >>> 32));\n+        return ( int) ( bits ^ ( bits >>> 32 ));\n     }\n \n     /*\n@@ -93,7 +94,8 @@ public final class NumberValues\n         {\n             result += COEFFICIENTS[max - i - 1] * values[i];\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static int hash( short[] values )\n@@ -104,7 +106,8 @@ public final class NumberValues\n         {\n             result += COEFFICIENTS[max - i - 1] * values[i];\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static int hash( char[] values )\n@@ -115,7 +118,8 @@ public final class NumberValues\n         {\n             result += COEFFICIENTS[max - i - 1] * values[i];\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static int hash( int[] values )\n@@ -126,7 +130,8 @@ public final class NumberValues\n         {\n             result += COEFFICIENTS[max - i - 1] * values[i];\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static int hash( long[] values )\n@@ -137,7 +142,8 @@ public final class NumberValues\n         {\n             result += COEFFICIENTS[max - i - 1] * NumberValues.hash( values[i] );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static int hash( float[] values )\n@@ -148,7 +154,8 @@ public final class NumberValues\n             int elementHash = NumberValues.hash( value );\n             result = 31 * result + elementHash;\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static int hash( double[] values )\n@@ -159,7 +166,8 @@ public final class NumberValues\n             int elementHash = NumberValues.hash( value );\n             result = 31 * result + elementHash;\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static int hash( boolean[] value )\n@@ -173,7 +181,7 @@ public final class NumberValues\n         {\n             if ( fpn < 0.0 )\n             {\n-                if ( (NON_DOUBLE_LONG & in) == 0L ) // the high order bits are only sign bits\n+                if ( ( NON_DOUBLE_LONG & in) == 0L ) // the high order bits are only sign bits\n                 { // no loss of precision if converting the long to a double, so it's safe to compare as double\n                     return fpn == in;\n                 }\n@@ -181,7 +189,7 @@ public final class NumberValues\n                 { // the double is too big to fit in a long, they cannot be equal\n                     return false;\n                 }\n-                else if ( (fpn == Math.floor( fpn )) && !Double.isInfinite( fpn ) ) // no decimals\n+                else if ( ( fpn == Math.floor( fpn )) && !Double.isInfinite( fpn ) ) // no decimals\n                 { // safe to compare as long\n                     return in == (long) fpn;\n                 }\n@@ -189,17 +197,17 @@ public final class NumberValues\n         }\n         else\n         {\n-            if ( !(fpn < 0.0) )\n+            if ( !( fpn < 0.0) )\n             {\n-                if ( (NON_DOUBLE_LONG & in) == 0L ) // the high order bits are only sign bits\n+                if ( ( NON_DOUBLE_LONG & in) == 0L ) // the high order bits are only sign bits\n                 { // no loss of precision if converting the long to a double, so it's safe to compare as double\n                     return fpn == in;\n                 }\n-                else if ( fpn > Long.MAX_VALUE )\n+                else if ( fpn> Long.MAX_VALUE )\n                 { // the double is too big to fit in a long, they cannot be equal\n                     return false;\n                 }\n-                else if ( (fpn == Math.floor( fpn )) && !Double.isInfinite( fpn ) )  // no decimals\n+                else if ( ( fpn == Math.floor( fpn )) && !Double.isInfinite( fpn ) )// no decimals\n                 { // safe to compare as long\n                     return in == (long) fpn;\n                 }\n@@ -211,19 +219,22 @@ public final class NumberValues\n     // Tested by PropertyValueComparisonTest\n     public static int compareDoubleAgainstLong( double lhs, long rhs )\n     {\n-        if ( (NON_DOUBLE_LONG & rhs) != 0L )\n+        if ( ( NON_DOUBLE_LONG & rhs) != 0L )\n         {\n             if ( Double.isNaN( lhs ) )\n             {\n-                return +1;\n+                return + 1;\n             }\n-            if ( Double.isInfinite( lhs ) )\n+\n+if ( Double.isInfinite( lhs ) )\n             {\n-                return lhs < 0 ? -1 : +1;\n+                return lhs < 0 ? -1 : + 1;\n             }\n-            return BigDecimal.valueOf( lhs ).compareTo( BigDecimal.valueOf( rhs ) );\n+\n+return BigDecimal.valueOf( lhs ).compareTo( BigDecimal.valueOf( rhs ) );\n         }\n-        return Double.compare( lhs, rhs );\n+\n+return Double.compare( lhs, rhs );\n     }\n \n     // Tested by PropertyValueComparisonTest\n@@ -362,4 +373,4 @@ public final class NumberValues\n \n         return x;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
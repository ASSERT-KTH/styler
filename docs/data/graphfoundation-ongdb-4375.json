{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4375",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "258",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "269",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4375/RelationshipDenseSelection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4375/RelationshipDenseSelection.java\nindex af08bdf8dda..1c05ace1cfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4375/RelationshipDenseSelection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4375/RelationshipDenseSelection.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.helpers;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -29,256 +30,253 @@ import org.neo4j.internal.kernel.api.RelationshipTraversalCursor;\n  */\n abstract class RelationshipDenseSelection\n {\n-    private enum Dir\n-    {\n-        OUT,\n-        IN,\n-        LOOP\n-    }\n+  private enum Dir\n+  {\n+    OUT,\n+    IN,\n+    LOOP\n+  }\n \n-    private RelationshipGroupCursor groupCursor;\n-    protected RelationshipTraversalCursor relationshipCursor;\n-    private int[] types;\n-    private Dir[] directions;\n-    private int currentDirection;\n-    private int nDirections;\n-    private boolean onRelationship;\n-    private boolean onGroup;\n-    private int foundTypes;\n+  private RelationshipGroupCursor groupCursor;\n+  protected RelationshipTraversalCursor relationshipCursor;\n+  private int[] types;\n+  private Dir[] directions;\n+  private int currentDirection;\n+  private int nDirections;\n+  private boolean onRelationship;\n+  private boolean onGroup;\n+  private int foundTypes;\n \n-    RelationshipDenseSelection()\n-    {\n-        this.directions = new Dir[3];\n-    }\n+  RelationshipDenseSelection()\n+  {\n+    this.directions = new Dir[3];\n+  }\n \n-    /**\n-     * Traverse all outgoing relationships including loops of the provided relationship types.\n-     *\n-     * @param groupCursor Group cursor to use. Pre-initialized on node.\n-     * @param relationshipCursor Relationship traversal cursor to use.\n-     */\n-    public final void outgoing(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor )\n-    {\n-        outgoing( groupCursor, relationshipCursor, null );\n-    }\n+  /**\n+   * Traverse all outgoing relationships including loops of the provided relationship types.\n+   *\n+   * @param groupCursor        Group cursor to use. Pre-initialized on node.\n+   * @param relationshipCursor Relationship traversal cursor to use.\n+   */\n+  public final void outgoing(\n+      RelationshipGroupCursor groupCursor,\n+      RelationshipTraversalCursor relationshipCursor)\n+  {\n+    outgoing(groupCursor, relationshipCursor, null);\n+  }\n \n-    /**\n-     * Traverse all outgoing relationships including loops of the provided relationship types.\n-     *\n-     * @param groupCursor Group cursor to use. Pre-initialized on node.\n-     * @param relationshipCursor Relationship traversal cursor to use.\n-     * @param types Relationship types to traverse\n-     */\n-    public final void outgoing(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n-    {\n-        this.groupCursor = groupCursor;\n-        this.relationshipCursor = relationshipCursor;\n-        this.types = types;\n-        this.directions[0] = Dir.OUT;\n-        this.directions[1] = Dir.LOOP;\n-        this.nDirections = 2;\n-        this.currentDirection = directions.length;\n-        this.onRelationship = false;\n-        this.onGroup = false;\n-        this.foundTypes = 0;\n-    }\n+  /**\n+   * Traverse all outgoing relationships including loops of the provided relationship types.\n+   *\n+   * @param groupCursor        Group cursor to use. Pre-initialized on node.\n+   * @param relationshipCursor Relationship traversal cursor to use.\n+   * @param types              Relationship types to traverse\n+   */\n+  public final void outgoing(\n+      RelationshipGroupCursor groupCursor,\n+      RelationshipTraversalCursor relationshipCursor,\n+      int[] types)\n+  {\n+    this.groupCursor = groupCursor;\n+    this.relationshipCursor = relationshipCursor;\n+    this.types = types;\n+    this.directions[0] = Dir.OUT;\n+    this.directions[1] = Dir.LOOP;\n+    this.nDirections = 2;\n+    this.currentDirection = directions.length;\n+    this.onRelationship = false;\n+    this.onGroup = false;\n+    this.foundTypes = 0;\n+  }\n \n-    /**\n-     * Traverse all incoming relationships including loops of the provided relationship types.\n-     *\n-     * @param groupCursor Group cursor to use. Pre-initialized on node.\n-     * @param relationshipCursor Relationship traversal cursor to use.\n-     */\n-    public final void incoming(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor )\n-    {\n-        incoming( groupCursor, relationshipCursor, null );\n-    }\n+  /**\n+   * Traverse all incoming relationships including loops of the provided relationship types.\n+   *\n+   * @param groupCursor        Group cursor to use. Pre-initialized on node.\n+   * @param relationshipCursor Relationship traversal cursor to use.\n+   */\n+  public final void incoming(\n+      RelationshipGroupCursor groupCursor,\n+      RelationshipTraversalCursor relationshipCursor)\n+  {\n+    incoming(groupCursor, relationshipCursor, null);\n+  }\n \n-    /**\n-     * Traverse all incoming relationships including loops of the provided relationship types.\n-     *\n-     * @param groupCursor Group cursor to use. Pre-initialized on node.\n-     * @param relationshipCursor Relationship traversal cursor to use.\n-     * @param types Relationship types to traverse\n-     */\n-    public final void incoming(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n-    {\n-        this.groupCursor = groupCursor;\n-        this.relationshipCursor = relationshipCursor;\n-        this.types = types;\n-        this.directions[0] = Dir.IN;\n-        this.directions[1] = Dir.LOOP;\n-        this.nDirections = 2;\n-        this.currentDirection = directions.length;\n-        this.onRelationship = false;\n-        this.onGroup = false;\n-        this.foundTypes = 0;\n-    }\n+  /**\n+   * Traverse all incoming relationships including loops of the provided relationship types.\n+   *\n+   * @param groupCursor        Group cursor to use. Pre-initialized on node.\n+   * @param relationshipCursor Relationship traversal cursor to use.\n+   * @param types              Relationship types to traverse\n+   */\n+  public final void incoming(\n+      RelationshipGroupCursor groupCursor,\n+      RelationshipTraversalCursor relationshipCursor,\n+      int[] types)\n+  {\n+    this.groupCursor = groupCursor;\n+    this.relationshipCursor = relationshipCursor;\n+    this.types = types;\n+    this.directions[0] = Dir.IN;\n+    this.directions[1] = Dir.LOOP;\n+    this.nDirections = 2;\n+    this.currentDirection = directions.length;\n+    this.onRelationship = false;\n+    this.onGroup = false;\n+    this.foundTypes = 0;\n+  }\n \n-    /**\n-     * Traverse all relationships of the provided relationship types.\n-     *\n-     * @param groupCursor Group cursor to use. Pre-initialized on node.\n-     * @param relationshipCursor Relationship traversal cursor to use.\n-     */\n-    public final void all(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor )\n-    {\n-        all( groupCursor, relationshipCursor, null );\n-    }\n+  /**\n+   * Traverse all relationships of the provided relationship types.\n+   *\n+   * @param groupCursor        Group cursor to use. Pre-initialized on node.\n+   * @param relationshipCursor Relationship traversal cursor to use.\n+   */\n+  public final void all(\n+      RelationshipGroupCursor groupCursor,\n+      RelationshipTraversalCursor relationshipCursor)\n+  {\n+    all(groupCursor, relationshipCursor, null);\n+  }\n+\n+  /**\n+   * Traverse all relationships of the provided relationship types.\n+   *\n+   * @param groupCursor        Group cursor to use. Pre-initialized on node.\n+   * @param relationshipCursor Relationship traversal cursor to use.\n+   * @param types              Relationship types to traverse\n+   */\n+  public final void all(\n+      RelationshipGroupCursor groupCursor,\n+      RelationshipTraversalCursor relationshipCursor,\n+      int[] types)\n+  {\n+    this.groupCursor = groupCursor;\n+    this.relationshipCursor = relationshipCursor;\n+    this.types = types;\n+    this.directions[0] = Dir.OUT;\n+    this.directions[1] = Dir.IN;\n+    this.directions[2] = Dir.LOOP;\n+    this.nDirections = 3;\n+    this.currentDirection = directions.length;\n+    this.onRelationship = false;\n+    this.onGroup = false;\n+    this.foundTypes = 0;\n+  }\n \n-    /**\n-     * Traverse all relationships of the provided relationship types.\n-     *\n-     * @param groupCursor Group cursor to use. Pre-initialized on node.\n-     * @param relationshipCursor Relationship traversal cursor to use.\n-     * @param types Relationship types to traverse\n-     */\n-    public final void all(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n+  /**\n+   * Fetch the next valid relationship.\n+   *\n+   * @return True is a valid relationship was found\n+   */\n+  protected boolean fetchNext()\n+  {\n+    if (onRelationship)\n     {\n-        this.groupCursor = groupCursor;\n-        this.relationshipCursor = relationshipCursor;\n-        this.types = types;\n-        this.directions[0] = Dir.OUT;\n-        this.directions[1] = Dir.IN;\n-        this.directions[2] = Dir.LOOP;\n-        this.nDirections = 3;\n-        this.currentDirection = directions.length;\n-        this.onRelationship = false;\n-        this.onGroup = false;\n-        this.foundTypes = 0;\n+      onRelationship = relationshipCursor.next();\n     }\n \n-    /**\n-     * Fetch the next valid relationship.\n-     *\n-     * @return True is a valid relationship was found\n-     */\n-    protected boolean fetchNext()\n+    while (!onRelationship)\n     {\n-        if ( onRelationship )\n+      currentDirection++;\n+      if (currentDirection >= nDirections)\n+      {\n+        if (types != null && foundTypes >= types.length)\n         {\n-            onRelationship = relationshipCursor.next();\n+          onGroup = false;\n+          return false;\n         }\n \n-        while ( !onRelationship )\n-        {\n-            currentDirection++;\n-            if ( currentDirection >= nDirections )\n-            {\n-                if ( types != null && foundTypes >= types.length )\n-                {\n-                    onGroup = false;\n-                    return false;\n-                }\n+        loopOnRelationship();\n+      }\n \n-                loopOnRelationship();\n-            }\n+      if (!onGroup)\n+      {\n+        return false;\n+      }\n \n-            if ( !onGroup )\n-            {\n-                return false;\n-            }\n-\n-            setupCursors();\n-        }\n-\n-        return true;\n+      setupCursors();\n     }\n \n-    private void loopOnRelationship()\n+    return true;\n+  }\n+\n+  private void loopOnRelationship()\n+  {\n+    do\n     {\n-        do\n-        {\n-            onGroup = groupCursor.next();\n-        } while ( onGroup && !correctRelationshipType() );\n+      onGroup = groupCursor.next();\n+    } while (onGroup && !correctRelationshipType());\n \n-        if ( onGroup )\n-        {\n-            foundTypes++;\n-            currentDirection = 0;\n-        }\n+    if (onGroup)\n+    {\n+      foundTypes++;\n+      currentDirection = 0;\n     }\n+  }\n \n-    private void setupCursors()\n-    {\n-        Dir d = directions[currentDirection];\n+  private void setupCursors()\n+  {\n+    Dir d = directions[currentDirection];\n \n-        switch ( d )\n-        {\n-        case OUT:\n-            groupCursor.outgoing( relationshipCursor );\n-            onRelationship = relationshipCursor.next();\n-            break;\n+    switch (d)\n+    {\n+      case OUT:\n+        groupCursor.outgoing(relationshipCursor);\n+        onRelationship = relationshipCursor.next();\n+        break;\n \n-        case IN:\n-            groupCursor.incoming( relationshipCursor );\n-            onRelationship = relationshipCursor.next();\n-            break;\n+      case IN:\n+        groupCursor.incoming(relationshipCursor);\n+        onRelationship = relationshipCursor.next();\n+        break;\n \n-        case LOOP:\n-            groupCursor.loops( relationshipCursor );\n-            onRelationship = relationshipCursor.next();\n-            break;\n+      case LOOP:\n+        groupCursor.loops(relationshipCursor);\n+        onRelationship = relationshipCursor.next();\n+        break;\n \n-        default:\n-            throw new IllegalStateException( \"Lorem ipsus, Brutus. (could not setup cursor for Dir='\" + d + \"')\" );\n-        }\n+      default:\n+        throw new IllegalStateException(\"Lorem ipsus, Brutus. (could not setup cursor for Dir='\" + d + \"')\");\n     }\n+  }\n+\n+  private boolean correctRelationshipType()\n+  {\n+    return types == null || ArrayUtils.contains(types, groupCursor.type());\n+  }\n \n-    private boolean correctRelationshipType()\n+  public void close()\n+  {\n+    Throwable closeGroupError = null;\n+    try\n+    {\n+      if (groupCursor != null)\n+      {\n+        groupCursor.close();\n+      }\n+    } catch (Throwable t)\n     {\n-        return types == null || ArrayUtils.contains( types, groupCursor.type() );\n+      closeGroupError = t;\n     }\n \n-    public void close()\n+    try\n     {\n-        Throwable closeGroupError = null;\n-        try\n-        {\n-            if ( groupCursor != null )\n-            {\n-                groupCursor.close();\n-            }\n-        }\n-        catch ( Throwable t )\n-        {\n-            closeGroupError = t;\n-        }\n-\n-        try\n-        {\n-            if ( relationshipCursor != null )\n-            {\n-                relationshipCursor.close();\n-            }\n-        }\n-        catch ( Throwable t )\n-        {\n-            if ( closeGroupError != null )\n-            {\n-                t.addSuppressed( closeGroupError );\n-            }\n-            throw t;\n-        }\n-        finally\n-        {\n-            relationshipCursor = null;\n-            groupCursor = null;\n-        }\n+      if (relationshipCursor != null)\n+      {\n+        relationshipCursor.close();\n+      }\n+    } catch (Throwable t)\n+    {\n+      if (closeGroupError != null)\n+      {\n+        t.addSuppressed(closeGroupError);\n+      }\n+      throw t;\n+    } finally\n+    {\n+      relationshipCursor = null;\n+      groupCursor = null;\n     }\n+  }\n }\n",
            "diff_size": 272
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4375/RelationshipDenseSelection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4375/RelationshipDenseSelection.java\nindex af08bdf8dda..169bf3986e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4375/RelationshipDenseSelection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4375/RelationshipDenseSelection.java\n@@ -31,8 +31,7 @@ abstract class RelationshipDenseSelection\n {\n     private enum Dir\n     {\n-        OUT,\n-        IN,\n+        OUT, IN,\n         LOOP\n     }\n \n@@ -57,8 +56,7 @@ abstract class RelationshipDenseSelection\n      * @param groupCursor Group cursor to use. Pre-initialized on node.\n      * @param relationshipCursor Relationship traversal cursor to use.\n      */\n-    public final void outgoing(\n-            RelationshipGroupCursor groupCursor,\n+    public final void outgoing( RelationshipGroupCursor groupCursor,\n             RelationshipTraversalCursor relationshipCursor )\n     {\n         outgoing( groupCursor, relationshipCursor, null );\n@@ -71,10 +69,8 @@ abstract class RelationshipDenseSelection\n      * @param relationshipCursor Relationship traversal cursor to use.\n      * @param types Relationship types to traverse\n      */\n-    public final void outgoing(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n+    public final void outgoing( RelationshipGroupCursor groupCursor,\n+            RelationshipTraversalCursor relationshipCursor, int[] types )\n     {\n         this.groupCursor = groupCursor;\n         this.relationshipCursor = relationshipCursor;\n@@ -94,8 +90,7 @@ abstract class RelationshipDenseSelection\n      * @param groupCursor Group cursor to use. Pre-initialized on node.\n      * @param relationshipCursor Relationship traversal cursor to use.\n      */\n-    public final void incoming(\n-            RelationshipGroupCursor groupCursor,\n+    public final void incoming( RelationshipGroupCursor groupCursor,\n             RelationshipTraversalCursor relationshipCursor )\n     {\n         incoming( groupCursor, relationshipCursor, null );\n@@ -108,10 +103,8 @@ abstract class RelationshipDenseSelection\n      * @param relationshipCursor Relationship traversal cursor to use.\n      * @param types Relationship types to traverse\n      */\n-    public final void incoming(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n+    public final void incoming( RelationshipGroupCursor groupCursor,\n+            RelationshipTraversalCursor relationshipCursor, int[] types )\n     {\n         this.groupCursor = groupCursor;\n         this.relationshipCursor = relationshipCursor;\n@@ -131,8 +124,7 @@ abstract class RelationshipDenseSelection\n      * @param groupCursor Group cursor to use. Pre-initialized on node.\n      * @param relationshipCursor Relationship traversal cursor to use.\n      */\n-    public final void all(\n-            RelationshipGroupCursor groupCursor,\n+    public final void all( RelationshipGroupCursor groupCursor,\n             RelationshipTraversalCursor relationshipCursor )\n     {\n         all( groupCursor, relationshipCursor, null );\n@@ -145,10 +137,8 @@ abstract class RelationshipDenseSelection\n      * @param relationshipCursor Relationship traversal cursor to use.\n      * @param types Relationship types to traverse\n      */\n-    public final void all(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n+    public final void all( RelationshipGroupCursor groupCursor,\n+            RelationshipTraversalCursor relationshipCursor, int[] types )\n     {\n         this.groupCursor = groupCursor;\n         this.relationshipCursor = relationshipCursor;\n@@ -206,8 +196,7 @@ abstract class RelationshipDenseSelection\n         {\n             onGroup = groupCursor.next();\n         } while ( onGroup && !correctRelationshipType() );\n-\n-        if ( onGroup )\n+if ( onGroup )\n         {\n             foundTypes++;\n             currentDirection = 0;\n@@ -217,25 +206,21 @@ abstract class RelationshipDenseSelection\n     private void setupCursors()\n     {\n         Dir d = directions[currentDirection];\n-\n-        switch ( d )\n+switch ( d )\n         {\n         case OUT:\n             groupCursor.outgoing( relationshipCursor );\n             onRelationship = relationshipCursor.next();\n             break;\n-\n-        case IN:\n+    case IN:\n             groupCursor.incoming( relationshipCursor );\n             onRelationship = relationshipCursor.next();\n             break;\n-\n-        case LOOP:\n+    case LOOP:\n             groupCursor.loops( relationshipCursor );\n             onRelationship = relationshipCursor.next();\n             break;\n-\n-        default:\n+    default:\n             throw new IllegalStateException( \"Lorem ipsus, Brutus. (could not setup cursor for Dir='\" + d + \"')\" );\n         }\n     }\n@@ -281,4 +266,4 @@ abstract class RelationshipDenseSelection\n             groupCursor = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "21",
                    "severity": "error",
                    "message": "'{' at column 21 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "32",
                    "column": "21",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "165",
                    "column": "9",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "165",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "197",
                    "column": "1",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "197",
                    "column": "15",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "230",
                    "column": "29",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4375/RelationshipDenseSelection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4375/RelationshipDenseSelection.java\nindex af08bdf8dda..3920cf795b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4375/RelationshipDenseSelection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4375/RelationshipDenseSelection.java\n@@ -20,21 +20,16 @@\n package org.neo4j.internal.kernel.api.helpers;\n \n import org.apache.commons.lang3.ArrayUtils;\n-\n import org.neo4j.internal.kernel.api.RelationshipGroupCursor;\n import org.neo4j.internal.kernel.api.RelationshipTraversalCursor;\n \n /**\n  * Helper for traversing specific types and directions of a dense node.\n  */\n+\n abstract class RelationshipDenseSelection\n {\n-    private enum Dir\n-    {\n-        OUT,\n-        IN,\n-        LOOP\n-    }\n+    private enum Dir{ OUT, IN, LOOP}\n \n     private RelationshipGroupCursor groupCursor;\n     protected RelationshipTraversalCursor relationshipCursor;\n@@ -57,9 +52,8 @@ abstract class RelationshipDenseSelection\n      * @param groupCursor Group cursor to use. Pre-initialized on node.\n      * @param relationshipCursor Relationship traversal cursor to use.\n      */\n-    public final void outgoing(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor )\n+\n+    public final void outgoing( RelationshipGroupCursor groupCursor, RelationshipTraversalCursor relationshipCursor )\n     {\n         outgoing( groupCursor, relationshipCursor, null );\n     }\n@@ -71,10 +65,8 @@ abstract class RelationshipDenseSelection\n      * @param relationshipCursor Relationship traversal cursor to use.\n      * @param types Relationship types to traverse\n      */\n-    public final void outgoing(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n+\n+    public final void outgoing( RelationshipGroupCursor groupCursor, RelationshipTraversalCursor relationshipCursor, int[] types )\n     {\n         this.groupCursor = groupCursor;\n         this.relationshipCursor = relationshipCursor;\n@@ -94,9 +86,8 @@ abstract class RelationshipDenseSelection\n      * @param groupCursor Group cursor to use. Pre-initialized on node.\n      * @param relationshipCursor Relationship traversal cursor to use.\n      */\n-    public final void incoming(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor )\n+\n+    public final void incoming( RelationshipGroupCursor groupCursor, RelationshipTraversalCursor relationshipCursor )\n     {\n         incoming( groupCursor, relationshipCursor, null );\n     }\n@@ -108,10 +99,8 @@ abstract class RelationshipDenseSelection\n      * @param relationshipCursor Relationship traversal cursor to use.\n      * @param types Relationship types to traverse\n      */\n-    public final void incoming(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n+\n+    public final void incoming( RelationshipGroupCursor groupCursor, RelationshipTraversalCursor relationshipCursor, int[] types )\n     {\n         this.groupCursor = groupCursor;\n         this.relationshipCursor = relationshipCursor;\n@@ -131,9 +120,8 @@ abstract class RelationshipDenseSelection\n      * @param groupCursor Group cursor to use. Pre-initialized on node.\n      * @param relationshipCursor Relationship traversal cursor to use.\n      */\n-    public final void all(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor )\n+\n+    public final void all( RelationshipGroupCursor groupCursor, RelationshipTraversalCursor relationshipCursor )\n     {\n         all( groupCursor, relationshipCursor, null );\n     }\n@@ -145,10 +133,8 @@ abstract class RelationshipDenseSelection\n      * @param relationshipCursor Relationship traversal cursor to use.\n      * @param types Relationship types to traverse\n      */\n-    public final void all(\n-            RelationshipGroupCursor groupCursor,\n-            RelationshipTraversalCursor relationshipCursor,\n-            int[] types )\n+\n+    public final void all( RelationshipGroupCursor groupCursor, RelationshipTraversalCursor relationshipCursor, int[] types )\n     {\n         this.groupCursor = groupCursor;\n         this.relationshipCursor = relationshipCursor;\n@@ -168,6 +154,7 @@ abstract class RelationshipDenseSelection\n      *\n      * @return True is a valid relationship was found\n      */\n+\n     protected boolean fetchNext()\n     {\n         if ( onRelationship )\n@@ -175,12 +162,12 @@ abstract class RelationshipDenseSelection\n             onRelationship = relationshipCursor.next();\n         }\n \n-        while ( !onRelationship )\n+        while( ! onRelationship)\n         {\n             currentDirection++;\n             if ( currentDirection >= nDirections )\n             {\n-                if ( types != null && foundTypes >= types.length )\n+                if ( types != null&& foundTypes >= types.length )\n                 {\n                     onGroup = false;\n                     return false;\n@@ -189,7 +176,7 @@ abstract class RelationshipDenseSelection\n                 loopOnRelationship();\n             }\n \n-            if ( !onGroup )\n+            if ( ! onGroup )\n             {\n                 return false;\n             }\n@@ -205,8 +192,10 @@ abstract class RelationshipDenseSelection\n         do\n         {\n             onGroup = groupCursor.next();\n-        } while ( onGroup && !correctRelationshipType() );\n+        }\n \n+while( onGroup&& ! correctRelationshipType()\n+);\n         if ( onGroup )\n         {\n             foundTypes++;\n@@ -216,25 +205,21 @@ abstract class RelationshipDenseSelection\n \n     private void setupCursors()\n     {\n-        Dir d = directions[currentDirection];\n-\n+        Dir d = directions[ currentDirection];\n         switch ( d )\n         {\n         case OUT:\n             groupCursor.outgoing( relationshipCursor );\n             onRelationship = relationshipCursor.next();\n             break;\n-\n         case IN:\n             groupCursor.incoming( relationshipCursor );\n             onRelationship = relationshipCursor.next();\n             break;\n-\n         case LOOP:\n             groupCursor.loops( relationshipCursor );\n             onRelationship = relationshipCursor.next();\n             break;\n-\n         default:\n             throw new IllegalStateException( \"Lorem ipsus, Brutus. (could not setup cursor for Dir='\" + d + \"')\" );\n         }\n@@ -242,7 +227,7 @@ abstract class RelationshipDenseSelection\n \n     private boolean correctRelationshipType()\n     {\n-        return types == null || ArrayUtils.contains( types, groupCursor.type() );\n+        return types == null|| ArrayUtils.contains( types, groupCursor.type() );\n     }\n \n     public void close()\n@@ -273,6 +258,7 @@ abstract class RelationshipDenseSelection\n             {\n                 t.addSuppressed( closeGroupError );\n             }\n+\n             throw t;\n         }\n         finally\n@@ -281,4 +267,4 @@ abstract class RelationshipDenseSelection\n             groupCursor = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3636",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3636/PrimitiveIntLongHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3636/PrimitiveIntLongHashMap.java\nindex eefed537237..6f868b0a17c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3636/PrimitiveIntLongHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3636/PrimitiveIntLongHashMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import org.neo4j.collection.primitive.PrimitiveIntLongMap;\n@@ -26,158 +27,158 @@ import org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.Monito\n import static org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.DEFAULT_HASHING;\n \n public class PrimitiveIntLongHashMap extends AbstractIntHopScotchCollection<long[]>\n-        implements PrimitiveIntLongMap\n+    implements PrimitiveIntLongMap\n {\n-    private final long[] transport = new long[1];\n-    private final Monitor monitor;\n-\n-    public PrimitiveIntLongHashMap( Table<long[]> table, Monitor monitor )\n+  private final long[] transport = new long[1];\n+  private final Monitor monitor;\n+\n+  public PrimitiveIntLongHashMap(Table<long[]> table, Monitor monitor)\n+  {\n+    super(table);\n+    this.monitor = monitor;\n+  }\n+\n+  @Override\n+  public long put(int key, long value)\n+  {\n+    return unpack(HopScotchHashingAlgorithm.put(table, monitor, DEFAULT_HASHING, key, pack(value), this));\n+  }\n+\n+  @Override\n+  public boolean containsKey(int key)\n+  {\n+    return HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, key) != null;\n+  }\n+\n+  @Override\n+  public long get(int key)\n+  {\n+    return unpack(HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, key));\n+  }\n+\n+  @Override\n+  public long remove(int key)\n+  {\n+    return unpack(HopScotchHashingAlgorithm.remove(table, monitor, DEFAULT_HASHING, key));\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return table.size();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return table.toString();\n+  }\n+\n+  @Override\n+  public <E extends Exception> void visitEntries(PrimitiveIntLongVisitor<E> visitor) throws E\n+  {\n+    long nullKey = table.nullKey();\n+    int capacity = table.capacity();\n+    for (int i = 0; i < capacity; i++)\n     {\n-        super( table );\n-        this.monitor = monitor;\n-    }\n-\n-    @Override\n-    public long put( int key, long value )\n-    {\n-        return unpack( HopScotchHashingAlgorithm.put( table, monitor, DEFAULT_HASHING, key, pack( value ), this ) );\n-    }\n-\n-    @Override\n-    public boolean containsKey( int key )\n-    {\n-        return HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, key ) != null;\n+      int key = (int) table.key(i);\n+      if (key != nullKey)\n+      {\n+        long[] value = table.value(i);\n+        if (value != null && visitor.visited(key, value[0]))\n+        {\n+          return;\n+        }\n+      }\n     }\n-\n-    @Override\n-    public long get( int key )\n+  }\n+\n+  private long[] pack(long value)\n+  {\n+    transport[0] = value;\n+    return transport;\n+  }\n+\n+  private long unpack(long[] result)\n+  {\n+    return result != null ? result[0] : IntKeyLongValueTable.NULL;\n+  }\n+\n+  @SuppressWarnings(\"EqualsWhichDoesntCheckParameterClass\") // yes it does\n+  @Override\n+  public boolean equals(Object other)\n+  {\n+    if (typeAndSizeEqual(other))\n     {\n-        return unpack( HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, key ) );\n+      PrimitiveIntLongHashMap that = (PrimitiveIntLongHashMap) other;\n+      IntLongEquality equality = new IntLongEquality(that);\n+      visitEntries(equality);\n+      return equality.isEqual();\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public long remove( int key )\n-    {\n-        return unpack( HopScotchHashingAlgorithm.remove( table, monitor, DEFAULT_HASHING, key ) );\n-    }\n+  private static class IntLongEquality implements PrimitiveIntLongVisitor<RuntimeException>\n+  {\n+    private PrimitiveIntLongHashMap other;\n+    private boolean equal = true;\n \n-    @Override\n-    public int size()\n+    IntLongEquality(PrimitiveIntLongHashMap that)\n     {\n-        return table.size();\n+      this.other = that;\n     }\n \n     @Override\n-    public String toString()\n+    public boolean visited(int key, long value)\n     {\n-        return table.toString();\n+      equal = other.get(key) == value;\n+      return !equal;\n     }\n \n-    @Override\n-    public <E extends Exception> void visitEntries( PrimitiveIntLongVisitor<E> visitor ) throws E\n+    public boolean isEqual()\n     {\n-        long nullKey = table.nullKey();\n-        int capacity = table.capacity();\n-        for ( int i = 0; i < capacity; i++ )\n-        {\n-            int key = (int) table.key( i );\n-            if ( key != nullKey )\n-            {\n-                long[] value = table.value( i );\n-                if ( value != null && visitor.visited( key, value[0] ) )\n-                {\n-                    return;\n-                }\n-            }\n-        }\n+      return equal;\n     }\n+  }\n \n-    private long[] pack( long value )\n-    {\n-        transport[0] = value;\n-        return transport;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    HashCodeComputer hash = new HashCodeComputer();\n+    visitEntries(hash);\n+    return hash.hashCode();\n+  }\n \n-    private long unpack( long[] result )\n-    {\n-        return result != null ? result[0] : IntKeyLongValueTable.NULL;\n-    }\n+  private static class HashCodeComputer implements PrimitiveIntLongVisitor<RuntimeException>\n+  {\n+    private int hash = 1337;\n \n-    @SuppressWarnings( \"EqualsWhichDoesntCheckParameterClass\" ) // yes it does\n     @Override\n-    public boolean equals( Object other )\n+    public boolean visited(int key, long value) throws RuntimeException\n     {\n-        if ( typeAndSizeEqual( other ) )\n-        {\n-            PrimitiveIntLongHashMap that = (PrimitiveIntLongHashMap) other;\n-            IntLongEquality equality = new IntLongEquality( that );\n-            visitEntries( equality );\n-            return equality.isEqual();\n-        }\n-        return false;\n-    }\n-\n-    private static class IntLongEquality implements PrimitiveIntLongVisitor<RuntimeException>\n-    {\n-        private PrimitiveIntLongHashMap other;\n-        private boolean equal = true;\n-\n-        IntLongEquality( PrimitiveIntLongHashMap that )\n-        {\n-            this.other = that;\n-        }\n-\n-        @Override\n-        public boolean visited( int key, long value )\n-        {\n-            equal = other.get( key ) == value;\n-            return !equal;\n-        }\n-\n-        public boolean isEqual()\n-        {\n-            return equal;\n-        }\n+      hash += DEFAULT_HASHING.hashSingleValueToInt(key + DEFAULT_HASHING.hashSingleValueToInt(value));\n+      return false;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        HashCodeComputer hash = new HashCodeComputer();\n-        visitEntries( hash );\n-        return hash.hashCode();\n+      return hash;\n     }\n \n-    private static class HashCodeComputer implements PrimitiveIntLongVisitor<RuntimeException>\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        private int hash = 1337;\n-\n-        @Override\n-        public boolean visited( int key, long value ) throws RuntimeException\n-        {\n-            hash += DEFAULT_HASHING.hashSingleValueToInt( key + DEFAULT_HASHING.hashSingleValueToInt( value ) );\n-            return false;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return hash;\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            HashCodeComputer that = (HashCodeComputer) o;\n-            return hash == that.hash;\n-        }\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      HashCodeComputer that = (HashCodeComputer) o;\n+      return hash == that.hash;\n     }\n+  }\n }\n",
            "diff_size": 198
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
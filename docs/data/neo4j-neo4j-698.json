{
    "project_name": "neo4j-neo4j",
    "error_id": "698",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/698/DatabaseNameValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/698/DatabaseNameValidator.java\nindex 587633f56b4..63746651585 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/698/DatabaseNameValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/698/DatabaseNameValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration.helpers;\n \n import java.util.Objects;\n@@ -29,72 +30,72 @@ public class DatabaseNameValidator\n     private static final int MINIMUM_DATABASE_NAME_LENGTH = 3;\n     public static final int MAXIMUM_DATABASE_NAME_LENGTH = 63;\n     public static final String DESCRIPTION = \"Containing only alphabetic characters, numbers, dots and dashes, \" +\n-            \"with a length between \" + MINIMUM_DATABASE_NAME_LENGTH + \" and \" + MAXIMUM_DATABASE_NAME_LENGTH + \" characters. \" +\n-            \"It should be starting with an alphabetic character but not with the name 'system'.\";\n-    private static final Pattern DATABASE_NAME_PATTERN = Pattern.compile( \"^[a-z0-9-.]+$\" );\n+      \"with a length between \" + MINIMUM_DATABASE_NAME_LENGTH + \" and \" + MAXIMUM_DATABASE_NAME_LENGTH + \" characters. \" +\n+      \"It should be starting with an alphabetic character but not with the name 'system'.\";\n+    private static final Pattern DATABASE_NAME_PATTERN = Pattern.compile(\"^[a-z0-9-.]+$\");\n \n-    public static void validateExternalDatabaseName( NormalizedDatabaseName normalizedName )\n+    public static void validateExternalDatabaseName(NormalizedDatabaseName normalizedName)\n     {\n-        validateInternalDatabaseName( normalizedName );\n+        validateInternalDatabaseName(normalizedName);\n \n         var name = normalizedName.name();\n-        if ( name.startsWith( \"system\" ) )\n+        if (name.startsWith(\"system\"))\n         {\n-            throw new IllegalArgumentException( \"Database name '\" + name + \"' is invalid, due to the prefix 'system'.\" );\n+            throw new IllegalArgumentException(\"Database name '\" + name + \"' is invalid, due to the prefix 'system'.\");\n         }\n     }\n \n-    public static void validateInternalDatabaseName( NormalizedDatabaseName normalizedName )\n+    public static void validateInternalDatabaseName(NormalizedDatabaseName normalizedName)\n     {\n-        Objects.requireNonNull( normalizedName, \"The provided database name is empty.\" );\n+        Objects.requireNonNull(normalizedName, \"The provided database name is empty.\");\n \n         String name = normalizedName.name();\n \n-        if ( name.isEmpty() )\n+        if (name.isEmpty())\n         {\n-            throw new IllegalArgumentException( \"The provided database name is empty.\" );\n+            throw new IllegalArgumentException(\"The provided database name is empty.\");\n         }\n \n-        if ( name.length() < MINIMUM_DATABASE_NAME_LENGTH || name.length() > MAXIMUM_DATABASE_NAME_LENGTH )\n+        if (name.length() < MINIMUM_DATABASE_NAME_LENGTH || name.length() > MAXIMUM_DATABASE_NAME_LENGTH)\n         {\n-            throw new IllegalArgumentException( \"The provided database name must have a length between \" + MINIMUM_DATABASE_NAME_LENGTH +\n-                    \" and \" + MAXIMUM_DATABASE_NAME_LENGTH + \" characters.\" );\n+            throw new IllegalArgumentException(\"The provided database name must have a length between \" + MINIMUM_DATABASE_NAME_LENGTH +\n+              \" and \" + MAXIMUM_DATABASE_NAME_LENGTH + \" characters.\");\n         }\n \n-        if ( !isAsciiAlphaLower( name.charAt( 0 ) ) )\n+        if (!isAsciiAlphaLower(name.charAt(0)))\n         {\n-            throw new IllegalArgumentException( \"Database name '\" + name + \"' is not starting with an ASCII alphabetic character.\" );\n+            throw new IllegalArgumentException(\"Database name '\" + name + \"' is not starting with an ASCII alphabetic character.\");\n         }\n \n-        if ( !DATABASE_NAME_PATTERN.matcher( name ).matches() )\n+        if (!DATABASE_NAME_PATTERN.matcher(name).matches())\n         {\n             throw new IllegalArgumentException(\n-                    \"Database name '\" + name + \"' contains illegal characters. Use simple ascii characters, numbers, dots and dashes.\" );\n+              \"Database name '\" + name + \"' contains illegal characters. Use simple ascii characters, numbers, dots and dashes.\");\n         }\n     }\n \n-    private static final Pattern DATABASE_NAME_GLOBBING_PATTERN = Pattern.compile( \"^[a-z0-9-.*?]+$\" );\n+    private static final Pattern DATABASE_NAME_GLOBBING_PATTERN = Pattern.compile(\"^[a-z0-9-.*?]+$\");\n \n-    public static String validateDatabaseNamePattern( String name )\n+    public static String validateDatabaseNamePattern(String name)\n     {\n-        Objects.requireNonNull( name, \"The provided database name is empty.\" );\n+        Objects.requireNonNull(name, \"The provided database name is empty.\");\n \n-        if ( name.trim().isEmpty() )\n+        if (name.trim().isEmpty())\n         {\n-            throw new IllegalArgumentException( \"The provided database name is empty.\" );\n+            throw new IllegalArgumentException(\"The provided database name is empty.\");\n         }\n         name = name.toLowerCase();\n-        if ( name.length() > MAXIMUM_DATABASE_NAME_LENGTH )\n+        if (name.length() > MAXIMUM_DATABASE_NAME_LENGTH)\n         {\n-            throw new IllegalArgumentException( \"The provided database name must have a length between \" + 1 +\n-                                                \" and \" + MAXIMUM_DATABASE_NAME_LENGTH + \" characters.\" );\n+            throw new IllegalArgumentException(\"The provided database name must have a length between \" + 1 +\n+              \" and \" + MAXIMUM_DATABASE_NAME_LENGTH + \" characters.\");\n         }\n \n-        if ( !DATABASE_NAME_GLOBBING_PATTERN.matcher( name ).matches() )\n+        if (!DATABASE_NAME_GLOBBING_PATTERN.matcher(name).matches())\n         {\n             throw new IllegalArgumentException(\n-                    \"Database name '\" + name + \"' contains illegal characters. Use simple ascii characters, numbers, dots,\" +\n-                    \" question marks, asterisk and dashes.\" );\n+              \"Database name '\" + name + \"' contains illegal characters. Use simple ascii characters, numbers, dots,\" +\n+                \" question marks, asterisk and dashes.\");\n         }\n \n         return name;\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
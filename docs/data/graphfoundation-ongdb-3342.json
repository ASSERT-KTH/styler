{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3342",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3342/ThrowingConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3342/ThrowingConsumer.java\nindex 53d58389fab..84e602a64bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3342/ThrowingConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3342/ThrowingConsumer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.function;\n \n /**\n@@ -28,16 +29,17 @@ package org.neo4j.function;\n  */\n public interface ThrowingConsumer<T, E extends Throwable>\n {\n-    /**\n-     * Performs this operation on the given argument.\n-     *\n-     * @param t the input argument\n-     * @throws E an exception if the function fails\n-     */\n-    void accept( T t ) throws E;\n+  /**\n+   * Performs this operation on the given argument.\n+   *\n+   * @param t the input argument\n+   * @throws E an exception if the function fails\n+   */\n+  void accept(T t) throws E;\n \n-    static <T, E extends Exception> ThrowingConsumer<T, E> noop()\n-    {\n-        return t -> {};\n-    }\n+  static <T, E extends Exception> ThrowingConsumer<T, E> noop()\n+  {\n+    return t -> {\n+    };\n+  }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3342/ThrowingConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3342/ThrowingConsumer.java\nindex 53d58389fab..36e441a62f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3342/ThrowingConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3342/ThrowingConsumer.java\n@@ -36,8 +36,9 @@ public interface ThrowingConsumer<T, E extends Throwable>\n      */\n     void accept( T t ) throws E;\n \n-    static <T, E extends Exception> ThrowingConsumer<T, E> noop()\n+    static <T, E extends Exception> ThrowingConsumer<T,E> noop()\n     {\n-        return t -> {};\n+        return t -> {\n+};\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "34",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "39",
                    "column": "11",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "39",
                    "column": "11",
                    "severity": "error",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3342/ThrowingConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3342/ThrowingConsumer.java\nindex 53d58389fab..9b1409b4579 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3342/ThrowingConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3342/ThrowingConsumer.java\n@@ -26,7 +26,8 @@ package org.neo4j.function;\n  * @param <T> the type of the input to the operation\n  * @param <E> the type of exception that may be thrown from the function\n  */\n-public interface ThrowingConsumer<T, E extends Throwable>\n+\n+public interface ThrowingConsumer< T, E extends Throwable>\n {\n     /**\n      * Performs this operation on the given argument.\n@@ -34,10 +35,12 @@ public interface ThrowingConsumer<T, E extends Throwable>\n      * @param t the input argument\n      * @throws E an exception if the function fails\n      */\n-    void accept( T t ) throws E;\n-\n-    static <T, E extends Exception> ThrowingConsumer<T, E> noop()\n+    void accept( T t ) throws E ;\n+    static< T, E extends Exception> ThrowingConsumer<T,E> noop()\n     {\n-        return t -> {};\n+        return t ->\n+               {\n+               };\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
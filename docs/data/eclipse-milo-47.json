{
    "project_name": "eclipse-milo",
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "34",
                "severity": "error",
                "message": "'}' at column 34 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class DoubleConversions {\n\n    private DoubleConversions() {}\n\n    @NotNull\n    static Boolean doubleToBoolean(@NotNull Double d) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/47/DoubleConversions.java\nindex 6e814b37075..7e0ad1cba29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/47/DoubleConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class DoubleConversions {\n \n-    private DoubleConversions() {}\n+    private DoubleConversions() {\n+    }\n \n     @NotNull\n     static Boolean doubleToBoolean(@NotNull Double d) {\n@@ -149,18 +150,30 @@ final class DoubleConversions {\n     static Object explicitConversion(@NotNull Double d, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return doubleToBoolean(d);\n-            case Byte:      return doubleToByte(d);\n-            case Float:     return doubleToFloat(d);\n-            case Int16:     return doubleToInt16(d);\n-            case Int32:     return doubleToInt32(d);\n-            case Int64:     return doubleToInt64(d);\n-            case SByte:     return doubleToSByte(d);\n-            case String:    return doubleToString(d);\n-            case UInt16:    return doubleToUInt16(d);\n-            case UInt32:    return doubleToUInt32(d);\n-            case UInt64:    return doubleToUInt64(d);\n-            default:        return implicitConversion(d, targetType);\n+            case Boolean:\n+                return doubleToBoolean(d);\n+            case Byte:\n+                return doubleToByte(d);\n+            case Float:\n+                return doubleToFloat(d);\n+            case Int16:\n+                return doubleToInt16(d);\n+            case Int32:\n+                return doubleToInt32(d);\n+            case Int64:\n+                return doubleToInt64(d);\n+            case SByte:\n+                return doubleToSByte(d);\n+            case String:\n+                return doubleToString(d);\n+            case UInt16:\n+                return doubleToUInt16(d);\n+            case UInt32:\n+                return doubleToUInt32(d);\n+            case UInt64:\n+                return doubleToUInt64(d);\n+            default:\n+                return implicitConversion(d, targetType);\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/47/DoubleConversions.java\nindex 6e814b37075..beec9a46b6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/47/DoubleConversions.java\n@@ -149,7 +149,8 @@ final class DoubleConversions {\n     static Object explicitConversion(@NotNull Double d, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return doubleToBoolean(d);\n+            case Boolean:\n+    return doubleToBoolean(d);\n             case Byte:      return doubleToByte(d);\n             case Float:     return doubleToFloat(d);\n             case Int16:     return doubleToInt16(d);\n@@ -160,7 +161,8 @@ final class DoubleConversions {\n             case UInt16:    return doubleToUInt16(d);\n             case UInt32:    return doubleToUInt32(d);\n             case UInt64:    return doubleToUInt64(d);\n-            default:        return implicitConversion(d, targetType);\n+            default:\n+    return implicitConversion(d, targetType);\n         }\n         //@formatter:on\n     }\n@@ -171,4 +173,4 @@ final class DoubleConversions {\n         return null;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/47/DoubleConversions.java\nindex 6e814b37075..ae4dd13d3b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/47/DoubleConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class DoubleConversions {\n \n-    private DoubleConversions() {}\n+    private DoubleConversions() {\n+    }\n \n     @NotNull\n     static Boolean doubleToBoolean(@NotNull Double d) {\n@@ -136,10 +137,7 @@ final class DoubleConversions {\n     static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof Double) {\n             Double d = (Double) o;\n-\n-            return implicit ?\n-                implicitConversion(d, targetType) :\n-                explicitConversion(d, targetType);\n+            return implicit ? implicitConversion(d, targetType) : explicitConversion(d, targetType);\n         } else {\n             return null;\n         }\n@@ -149,18 +147,40 @@ final class DoubleConversions {\n     static Object explicitConversion(@NotNull Double d, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return doubleToBoolean(d);\n-            case Byte:      return doubleToByte(d);\n-            case Float:     return doubleToFloat(d);\n-            case Int16:     return doubleToInt16(d);\n-            case Int32:     return doubleToInt32(d);\n-            case Int64:     return doubleToInt64(d);\n-            case SByte:     return doubleToSByte(d);\n-            case String:    return doubleToString(d);\n-            case UInt16:    return doubleToUInt16(d);\n-            case UInt32:    return doubleToUInt32(d);\n-            case UInt64:    return doubleToUInt64(d);\n-            default:        return implicitConversion(d, targetType);\n+            case Boolean:\n+                return doubleToBoolean(d);\n+\n+            case Byte:\n+                return doubleToByte(d);\n+\n+            case Float:\n+                return doubleToFloat(d);\n+\n+            case Int16:\n+                return doubleToInt16(d);\n+\n+            case Int32:\n+                return doubleToInt32(d);\n+\n+            case Int64:\n+                return doubleToInt64(d);\n+\n+            case SByte:\n+                return doubleToSByte(d);\n+\n+            case String:\n+                return doubleToString(d);\n+\n+            case UInt16:\n+                return doubleToUInt16(d);\n+\n+            case UInt32:\n+                return doubleToUInt32(d);\n+\n+            case UInt64:\n+                return doubleToUInt64(d);\n+            default:\n+                return implicitConversion(d, targetType);\n         }\n         //@formatter:on\n     }\n@@ -171,4 +191,4 @@ final class DoubleConversions {\n         return null;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/47/DoubleConversions.java\nindex 6e814b37075..088ff8d3816 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/47/DoubleConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/47/DoubleConversions.java\n@@ -25,9 +25,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class DoubleConversions {\n \n-    private DoubleConversions() {}\n+    private DoubleConversions() {\n \n-    @NotNull\n+    } @NotNull\n     static Boolean doubleToBoolean(@NotNull Double d) {\n         return d != 0.0d;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "748",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/748/Schema.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/748/Schema.java\nindex 6d1d319d69d..35f0337e349 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/748/Schema.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/748/Schema.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.schema;\n \n import java.util.concurrent.TimeUnit;\n@@ -28,7 +29,7 @@ import org.neo4j.graphdb.RelationshipType;\n /**\n  * Interface for managing the schema of your graph database. This currently includes\n  * the indexing support added in Neo4j 2.0. Please see the Neo4j manual for details.\n- *\n+ * <p>\n  * Compatibility note: New methods may be added to this interface without notice,\n  * backwards compatibility is only guaranteed for clients of this interface, not for\n  * implementors.\n@@ -50,11 +51,11 @@ public interface Schema\n \n     /**\n      * Begin specifying an index for all nodes with the given label.\n-     *\n+     * <p>\n      * Returns an {@link IndexCreator} where details about the index to create can be\n      * specified. When all details have been entered, {@link IndexCreator#create() create}\n      * must be called for the index to actually be created.\n-     *\n+     * <p>\n      * Creating an index enables indexing for nodes with the specified label. The index will\n      * have the details supplied to the {@link IndexCreator returned index creator}.\n      * All existing and all future nodes matching the index definition will be indexed,\n@@ -64,42 +65,42 @@ public interface Schema\n      * @return an {@link IndexCreator} capable of providing details for, as well as creating\n      * an index for the given {@link Label label}.\n      */\n-    IndexCreator indexFor( Label label );\n+    IndexCreator indexFor(Label label);\n \n     /**\n      * Begin specifying an index for all nodes with any of the given labels.\n-     *\n+     * <p>\n      * Returns an {@link IndexCreator} where details about the index to create can be\n      * specified. When all details have been entered, {@link IndexCreator#create() create}\n      * must be called for the index to actually be created.\n-     *\n+     * <p>\n      * Creating an index enables indexing for nodes with any of the specified labels.\n      * The index will have the details supplied to the {@link IndexCreator returned index creator}.\n      * All existing and all future nodes matching the index definition will be indexed,\n      * speeding up future read operations.\n-     *\n+     * <p>\n      * This behaves similar to the {@link #indexFor(Label)} method, with the exception that\n      * multiple labels can be specified. Doing so will create a so-called\n      * {@linkplain IndexDefinition#isMultiTokenIndex() multi-token} index.\n-     *\n+     * <p>\n      * Note that not all index types support multi-token indexes.\n      * See {@link IndexType} for more information.\n-     *\n+     * <p>\n      * The list of labels may not contain any duplicates.\n      *\n      * @param labels The list of labels for which nodes should be indexed.\n      * @return an {@link IndexCreator} capable of providing details for, as well as creating\n      * an index for the given list of {@link Label labels}.\n      */\n-    IndexCreator indexFor( Label... labels );\n+    IndexCreator indexFor(Label... labels);\n \n     /**\n      * Begin specifying an index for all relationships with the given relationship type.\n-     *\n+     * <p>\n      * Returns an {@link IndexCreator} where details about the index to create can be\n      * specified. When all details have been entered, {@link IndexCreator#create() create}\n      * must be called for the index to actually be created.\n-     *\n+     * <p>\n      * Creating an index enables indexing for relationships with the specified relationship type.\n      * The index will have the details supplied to the {@link IndexCreator returned index creator}.\n      * All existing and all future relationships matching the index definition will be indexed,\n@@ -109,24 +110,24 @@ public interface Schema\n      * @return an {@link IndexCreator} capable of providing details for, as well as creating\n      * an index for the given {@link RelationshipType}.\n      */\n-    IndexCreator indexFor( RelationshipType type );\n+    IndexCreator indexFor(RelationshipType type);\n \n     /**\n      * Begin specifying an index for all relationships with any of the given relationship types.\n-     *\n+     * <p>\n      * Returns an {@link IndexCreator} where details about the index to create can be\n      * specified. When all details have been entered, {@link IndexCreator#create() create}\n      * must be called for the index to actually be created.\n-     *\n+     * <p>\n      * Creating an index enables indexing for relationships with any of the specified relationship types.\n      * The index will have the details supplied to the {@link IndexCreator returned index creator}.\n      * All existing and all future relationships matching the index definition will be indexes,\n      * speeding up future read operations.\n-     *\n+     * <p>\n      * This behaves similar to the {@link #indexFor(RelationshipType)} method, with the exception that\n      * multiple relationship types can be specified. Doing so will create a so-called\n      * {@linkplain IndexDefinition#isMultiTokenIndex() multi-token} index.\n-     *\n+     * <p>\n      * Note that not all index types support multi-token indexes.\n      * See {@link IndexType} for more information.\n      *\n@@ -134,19 +135,19 @@ public interface Schema\n      * @return an {@link IndexCreator} capable of providing details for, as well as creating\n      * an index for the given {@link RelationshipType RelationshipTypes}.\n      */\n-    IndexCreator indexFor( RelationshipType... types );\n+    IndexCreator indexFor(RelationshipType... types);\n \n     /**\n      * @param label the {@link Label} to get {@link IndexDefinition indexes} for.\n      * @return all {@link IndexDefinition indexes} attached to the given {@link Label label}.\n      */\n-    Iterable<IndexDefinition> getIndexes( Label label );\n+    Iterable<IndexDefinition> getIndexes(Label label);\n \n     /**\n      * @param relationshipType the {@link RelationshipType} to get {@link IndexDefinition indexes} for.\n      * @return all {@link IndexDefinition indexes} attached to the given {@link RelationshipType relationship type}.\n      */\n-    Iterable<IndexDefinition> getIndexes( RelationshipType relationshipType );\n+    Iterable<IndexDefinition> getIndexes(RelationshipType relationshipType);\n \n     /**\n      * @return all {@link IndexDefinition indexes} in this database.\n@@ -162,7 +163,7 @@ public interface Schema\n      * @param index the index that we want to poll state for\n      * @return the current {@link IndexState} of the index\n      */\n-    IndexState getIndexState( IndexDefinition index );\n+    IndexState getIndexState(IndexDefinition index);\n \n     /**\n      * Poll the database for the population progress. This can be used to track the progress of the\n@@ -173,24 +174,24 @@ public interface Schema\n      *\n      * @param index the index that we want to poll state for\n      * @return the current population progress for the index\n-     *\n      */\n-    IndexPopulationProgress getIndexPopulationProgress( IndexDefinition index );\n+    IndexPopulationProgress getIndexPopulationProgress(IndexDefinition index);\n \n     /**\n      * If {@link #getIndexState(IndexDefinition)} return {@link IndexState#FAILED} this method will\n      * return the failure description.\n+     *\n      * @param index the {@link IndexDefinition} to get failure from.\n      * @return the failure description.\n      * @throws IllegalStateException if the {@code index} isn't in a {@link IndexState#FAILED} state.\n      */\n-    String getIndexFailure( IndexDefinition index );\n+    String getIndexFailure(IndexDefinition index);\n \n     /**\n      * Returns a {@link ConstraintCreator} where details about the constraint can be\n      * specified. When all details have been entered, {@link ConstraintCreator#create()}\n      * must be called for it to actually be created.\n-     *\n+     * <p>\n      * Creating a constraint will block on the {@linkplain ConstraintCreator#create() create method} until\n      * all existing data has been verified for compliance.\n      * If any existing data doesn't comply with the constraint an exception will be thrown,\n@@ -200,13 +201,13 @@ public interface Schema\n      * @return a {@link ConstraintCreator} capable of providing details for, as well as creating\n      * a constraint for the given {@linkplain Label label}.\n      */\n-    ConstraintCreator constraintFor( Label label );\n+    ConstraintCreator constraintFor(Label label);\n \n     /**\n      * Returns a {@link ConstraintCreator} where details about the constraint can be specified.\n      * When all details have been entered, {@link ConstraintCreator#create()}\n      * must be called for it the actually be created.\n-     *\n+     * <p>\n      * Creating a constraint will block on the {@linkplain ConstraintCreator#create() create method} until\n      * all existing data has been verified for compliance.\n      * If any existing data doesn't comply with the constraint an exception will be thrown,\n@@ -216,19 +217,19 @@ public interface Schema\n      * @return a {@link ConstraintCreator} capable of providing details for, as well as creating\n      * a constraint for the given {@linkplain RelationshipType}.\n      */\n-    ConstraintCreator constraintFor( RelationshipType type );\n+    ConstraintCreator constraintFor(RelationshipType type);\n \n     /**\n      * @param label the {@linkplain Label label} to get constraints for.\n      * @return all constraints for the given label.\n      */\n-    Iterable<ConstraintDefinition> getConstraints( Label label );\n+    Iterable<ConstraintDefinition> getConstraints(Label label);\n \n     /**\n      * @param type the {@linkplain RelationshipType relationship type} to get constraints for.\n      * @return all constraints for the given relationship type.\n      */\n-    Iterable<ConstraintDefinition> getConstraints( RelationshipType type );\n+    Iterable<ConstraintDefinition> getConstraints(RelationshipType type);\n \n     /**\n      * @return all constraints\n@@ -238,50 +239,52 @@ public interface Schema\n     /**\n      * Wait until an index comes online\n      *\n-     * @param index the index that we want to wait for\n+     * @param index    the index that we want to wait for\n      * @param duration duration to wait for the index to come online\n-     * @param unit TimeUnit of duration\n+     * @param unit     TimeUnit of duration\n      * @throws IllegalStateException if the index did not enter the ONLINE state\n-     *             within the given duration or if the index entered the FAILED\n-     *             state\n+     *                               within the given duration or if the index entered the FAILED\n+     *                               state\n      */\n-    void awaitIndexOnline( IndexDefinition index, long duration, TimeUnit unit );\n+    void awaitIndexOnline(IndexDefinition index, long duration, TimeUnit unit);\n \n     /**\n      * Wait until an index with the given name comes online.\n      *\n      * @param indexName the name of the index that we want to wait for.\n-     * @param duration duration to wait for the index to come online\n-     * @param unit TimeUnit of duration\n+     * @param duration  duration to wait for the index to come online\n+     * @param unit      TimeUnit of duration\n      * @throws IllegalStateException if the index did not enter the ONLINE state\n-     * within the given duration, or if the index entered the FAILED state.\n+     *                               within the given duration, or if the index entered the FAILED state.\n      */\n-    void awaitIndexOnline( String indexName, long duration, TimeUnit unit );\n+    void awaitIndexOnline(String indexName, long duration, TimeUnit unit);\n \n     /**\n      * Wait until all indices comes online\n      *\n      * @param duration duration to wait for all indexes to come online\n-     * @param unit TimeUnit of duration\n+     * @param unit     TimeUnit of duration\n      * @throws IllegalStateException if some index did not enter the ONLINE\n-     *             state within the given duration or if the index entered the\n-     *             FAILED state\n+     *                               state within the given duration or if the index entered the\n+     *                               FAILED state\n      */\n-    void awaitIndexesOnline( long duration, TimeUnit unit );\n+    void awaitIndexesOnline(long duration, TimeUnit unit);\n \n     /**\n      * Get a {@link ConstraintDefinition} by the given name of the constraint.\n+     *\n      * @param constraintName The name of the constraint.\n      * @return The constraint with that name.\n      * @throws IllegalArgumentException if there is no constraint with that name.\n      */\n-    ConstraintDefinition getConstraintByName( String constraintName );\n+    ConstraintDefinition getConstraintByName(String constraintName);\n \n     /**\n      * Get an {@link IndexDefinition} by the name of the index.\n+     *\n      * @param indexName The name of the index.\n      * @return The index with that name.\n      * @throws IllegalArgumentException if there is no index with that name.\n      */\n-    IndexDefinition getIndexByName( String indexName );\n+    IndexDefinition getIndexByName(String indexName);\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
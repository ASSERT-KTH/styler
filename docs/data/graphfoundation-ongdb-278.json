{
    "project_name": "graphfoundation-ongdb",
    "error_id": "278",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "115",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "203",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "206",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "229",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/278/OnlineBackupContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/278/OnlineBackupContextBuilder.java\nindex c9ae5ddc3a9..8af4ea6caad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/278/OnlineBackupContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/278/OnlineBackupContextBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.io.IOException;\n@@ -54,186 +55,182 @@ import static org.neo4j.kernel.impl.util.Converters.toOptionalHostnamePortFromRa\n \n class OnlineBackupContextBuilder\n {\n-    static final String ARG_NAME_BACKUP_DIRECTORY = \"backup-dir\";\n-    static final String ARG_DESC_BACKUP_DIRECTORY = \"Directory to place backup in.\";\n-\n-    static final String ARG_NAME_BACKUP_NAME = \"name\";\n-    static final String ARG_DESC_BACKUP_NAME =\n-            \"Name of backup. If a backup with this name already exists an incremental backup will be attempted.\";\n-\n-    static final String ARG_NAME_BACKUP_SOURCE = \"from\";\n-    static final String ARG_DESC_BACKUP_SOURCE = \"Host and port of Neo4j.\";\n-    static final String ARG_DFLT_BACKUP_SOURCE = \"localhost:6362\";\n-\n-    static final String ARG_NAME_PROTO_OVERRIDE = \"protocol\";\n-    static final String ARG_DESC_PROTO_OVERRIDE = \"Preferred backup protocol\";\n-    static final String ARG_DFLT_PROTO_OVERRIDE = \"any\";\n-\n-    static final String ARG_NAME_TIMEOUT = \"timeout\";\n-    static final String ARG_DESC_TIMEOUT =\n-            \"Timeout in the form <time>[ms|s|m|h], where the default unit is seconds.\";\n-    static final String ARG_DFLT_TIMEOUT = \"20m\";\n-\n-    static final String ARG_NAME_PAGECACHE = \"pagecache\";\n-    static final String ARG_DESC_PAGECACHE = \"The size of the page cache to use for the backup process.\";\n-    static final String ARG_DFLT_PAGECACHE = \"8m\";\n-\n-    static final String ARG_NAME_REPORT_DIRECTORY = \"cc-report-dir\";\n-    static final String ARG_DESC_REPORT_DIRECTORY = \"Directory where consistency report will be written.\";\n-\n-    static final String ARG_NAME_ADDITIONAL_CONFIG_DIR = \"additional-config\";\n-    static final String ARG_DESC_ADDITIONAL_CONFIG_DIR =\n-            \"Configuration file to supply additional configuration in. This argument is DEPRECATED.\";\n-\n-    static final String ARG_NAME_FALLBACK_FULL = \"fallback-to-full\";\n-    static final String ARG_DESC_FALLBACK_FULL =\n-            \"If an incremental backup fails backup will move the old backup to <name>.err.<N> and fallback to a full \" +\n-            \"backup instead.\";\n-\n-    static final String ARG_NAME_CHECK_CONSISTENCY = \"check-consistency\";\n-    static final String ARG_DESC_CHECK_CONSISTENCY = \"If a consistency check should be made.\";\n-\n-    static final String ARG_NAME_CHECK_GRAPH = \"cc-graph\";\n-    static final String ARG_DESC_CHECK_GRAPH =\n-            \"Perform consistency checks between nodes, relationships, properties, types and tokens.\";\n-\n-    static final String ARG_NAME_CHECK_INDEXES = \"cc-indexes\";\n-    static final String ARG_DESC_CHECK_INDEXES = \"Perform consistency checks on indexes.\";\n-\n-    static final String ARG_NAME_CHECK_LABELS = \"cc-label-scan-store\";\n-    static final String ARG_DESC_CHECK_LABELS = \"Perform consistency checks on the label scan store.\";\n-\n-    static final String ARG_NAME_CHECK_OWNERS = \"cc-property-owners\";\n-    static final String ARG_DESC_CHECK_OWNERS =\n-            \"Perform additional consistency checks on property ownership. This check is *very* expensive in time and \" +\n-            \"memory.\";\n-\n-    private final Path homeDir;\n-    private final Path configDir;\n-\n-    OnlineBackupContextBuilder( Path homeDir, Path configDir )\n+  static final String ARG_NAME_BACKUP_DIRECTORY = \"backup-dir\";\n+  static final String ARG_DESC_BACKUP_DIRECTORY = \"Directory to place backup in.\";\n+\n+  static final String ARG_NAME_BACKUP_NAME = \"name\";\n+  static final String ARG_DESC_BACKUP_NAME =\n+      \"Name of backup. If a backup with this name already exists an incremental backup will be attempted.\";\n+\n+  static final String ARG_NAME_BACKUP_SOURCE = \"from\";\n+  static final String ARG_DESC_BACKUP_SOURCE = \"Host and port of Neo4j.\";\n+  static final String ARG_DFLT_BACKUP_SOURCE = \"localhost:6362\";\n+\n+  static final String ARG_NAME_PROTO_OVERRIDE = \"protocol\";\n+  static final String ARG_DESC_PROTO_OVERRIDE = \"Preferred backup protocol\";\n+  static final String ARG_DFLT_PROTO_OVERRIDE = \"any\";\n+\n+  static final String ARG_NAME_TIMEOUT = \"timeout\";\n+  static final String ARG_DESC_TIMEOUT =\n+      \"Timeout in the form <time>[ms|s|m|h], where the default unit is seconds.\";\n+  static final String ARG_DFLT_TIMEOUT = \"20m\";\n+\n+  static final String ARG_NAME_PAGECACHE = \"pagecache\";\n+  static final String ARG_DESC_PAGECACHE = \"The size of the page cache to use for the backup process.\";\n+  static final String ARG_DFLT_PAGECACHE = \"8m\";\n+\n+  static final String ARG_NAME_REPORT_DIRECTORY = \"cc-report-dir\";\n+  static final String ARG_DESC_REPORT_DIRECTORY = \"Directory where consistency report will be written.\";\n+\n+  static final String ARG_NAME_ADDITIONAL_CONFIG_DIR = \"additional-config\";\n+  static final String ARG_DESC_ADDITIONAL_CONFIG_DIR =\n+      \"Configuration file to supply additional configuration in. This argument is DEPRECATED.\";\n+\n+  static final String ARG_NAME_FALLBACK_FULL = \"fallback-to-full\";\n+  static final String ARG_DESC_FALLBACK_FULL =\n+      \"If an incremental backup fails backup will move the old backup to <name>.err.<N> and fallback to a full \" +\n+          \"backup instead.\";\n+\n+  static final String ARG_NAME_CHECK_CONSISTENCY = \"check-consistency\";\n+  static final String ARG_DESC_CHECK_CONSISTENCY = \"If a consistency check should be made.\";\n+\n+  static final String ARG_NAME_CHECK_GRAPH = \"cc-graph\";\n+  static final String ARG_DESC_CHECK_GRAPH =\n+      \"Perform consistency checks between nodes, relationships, properties, types and tokens.\";\n+\n+  static final String ARG_NAME_CHECK_INDEXES = \"cc-indexes\";\n+  static final String ARG_DESC_CHECK_INDEXES = \"Perform consistency checks on indexes.\";\n+\n+  static final String ARG_NAME_CHECK_LABELS = \"cc-label-scan-store\";\n+  static final String ARG_DESC_CHECK_LABELS = \"Perform consistency checks on the label scan store.\";\n+\n+  static final String ARG_NAME_CHECK_OWNERS = \"cc-property-owners\";\n+  static final String ARG_DESC_CHECK_OWNERS =\n+      \"Perform additional consistency checks on property ownership. This check is *very* expensive in time and \" +\n+          \"memory.\";\n+\n+  private final Path homeDir;\n+  private final Path configDir;\n+\n+  OnlineBackupContextBuilder(Path homeDir, Path configDir)\n+  {\n+    this.homeDir = homeDir;\n+    this.configDir = configDir;\n+  }\n+\n+  public static Arguments arguments()\n+  {\n+    String argExampleProtoOverride = Stream.of(SelectedBackupProtocol.values())\n+        .map(SelectedBackupProtocol::getName)\n+        .sorted()\n+        .collect(Collectors.joining(\"|\"));\n+    return new Arguments()\n+        .withArgument(new MandatoryCanonicalPath(\n+            ARG_NAME_BACKUP_DIRECTORY, \"backup-path\", ARG_DESC_BACKUP_DIRECTORY))\n+        .withArgument(new MandatoryNamedArg(\n+            ARG_NAME_BACKUP_NAME, \"graph.db-backup\", ARG_DESC_BACKUP_NAME))\n+        .withArgument(new OptionalNamedArg(\n+            ARG_NAME_BACKUP_SOURCE, \"address\", ARG_DFLT_BACKUP_SOURCE, ARG_DESC_BACKUP_SOURCE))\n+        .withArgument(new OptionalNamedArg(ARG_NAME_PROTO_OVERRIDE, argExampleProtoOverride,\n+            ARG_DFLT_PROTO_OVERRIDE, ARG_DESC_PROTO_OVERRIDE))\n+        .withArgument(new OptionalBooleanArg(\n+            ARG_NAME_FALLBACK_FULL, true, ARG_DESC_FALLBACK_FULL))\n+        .withArgument(new OptionalNamedArg(\n+            ARG_NAME_TIMEOUT, \"timeout\", ARG_DFLT_TIMEOUT, ARG_DESC_TIMEOUT))\n+        .withArgument(new OptionalNamedArg(\n+            ARG_NAME_PAGECACHE, \"8m\", ARG_DFLT_PAGECACHE, ARG_DESC_PAGECACHE))\n+        .withArgument(new OptionalBooleanArg(\n+            ARG_NAME_CHECK_CONSISTENCY, true, ARG_DESC_CHECK_CONSISTENCY))\n+        .withArgument(new OptionalCanonicalPath(\n+            ARG_NAME_REPORT_DIRECTORY, \"directory\", \".\", ARG_DESC_REPORT_DIRECTORY))\n+        .withArgument(new OptionalCanonicalPath(\n+            ARG_NAME_ADDITIONAL_CONFIG_DIR, \"config-file-path\", \"\", ARG_DESC_ADDITIONAL_CONFIG_DIR))\n+        .withArgument(new OptionalBooleanArg(\n+            ARG_NAME_CHECK_GRAPH, true, ARG_DESC_CHECK_GRAPH))\n+        .withArgument(new OptionalBooleanArg(\n+            ARG_NAME_CHECK_INDEXES, true, ARG_DESC_CHECK_INDEXES))\n+        .withArgument(new OptionalBooleanArg(\n+            ARG_NAME_CHECK_LABELS, true, ARG_DESC_CHECK_LABELS))\n+        .withArgument(new OptionalBooleanArg(\n+            ARG_NAME_CHECK_OWNERS, false, ARG_DESC_CHECK_OWNERS));\n+  }\n+\n+  public OnlineBackupContext createContext(String... args) throws IncorrectUsage, CommandFailed\n+  {\n+    try\n     {\n-        this.homeDir = homeDir;\n-        this.configDir = configDir;\n-    }\n-\n-    public static Arguments arguments()\n+      Arguments arguments = arguments();\n+      arguments.parse(args);\n+\n+      OptionalHostnamePort address = toOptionalHostnamePortFromRawAddress(\n+          arguments.get(ARG_NAME_BACKUP_SOURCE));\n+      Path folder = getBackupDirectory(arguments);\n+      String name = arguments.get(ARG_NAME_BACKUP_NAME);\n+      boolean fallbackToFull = arguments.getBoolean(ARG_NAME_FALLBACK_FULL);\n+      boolean doConsistencyCheck = arguments.getBoolean(ARG_NAME_CHECK_CONSISTENCY);\n+      long timeout = arguments.get(ARG_NAME_TIMEOUT, TimeUtil.parseTimeMillis);\n+      SelectedBackupProtocol selectedBackupProtocol = SelectedBackupProtocol.fromUserInput(arguments.get(ARG_NAME_PROTO_OVERRIDE));\n+      String pagecacheMemory = arguments.get(ARG_NAME_PAGECACHE);\n+      Optional<Path> additionalConfig = arguments.getOptionalPath(ARG_NAME_ADDITIONAL_CONFIG_DIR);\n+      Path reportDir = arguments.getOptionalPath(ARG_NAME_REPORT_DIRECTORY).orElseThrow(\n+          () -> new IllegalArgumentException(ARG_NAME_REPORT_DIRECTORY + \" must be a path\"));\n+\n+      OnlineBackupRequiredArguments requiredArguments = new OnlineBackupRequiredArguments(\n+          address, folder, name, selectedBackupProtocol, fallbackToFull, doConsistencyCheck, timeout, reportDir);\n+\n+      Path configFile = configDir.resolve(Config.DEFAULT_CONFIG_FILE_NAME);\n+      Config.Builder builder = Config.fromFile(configFile);\n+      Path logPath = requiredArguments.getResolvedLocationFromName();\n+      Config config = builder.withHome(homeDir)\n+          .withSetting(logical_logs_location, logPath.toString())\n+          .withConnectorsDisabled()\n+          .build();\n+      additionalConfig.map(this::loadAdditionalConfigFile).ifPresent(config::augment);\n+      // We only replace the page cache memory setting.\n+      // Any other custom page swapper, etc. settings are preserved and used.\n+      config.augment(pagecache_memory, pagecacheMemory);\n+\n+      // Build consistency-checker configuration.\n+      // Note: We can remove the loading from config file in 4.0.\n+      BiFunction<String, Setting<Boolean>, Boolean> oneOf =\n+          (a, s) -> arguments.has(a) ? arguments.getBoolean(a) : config.get(s);\n+      ConsistencyFlags consistencyFlags = new ConsistencyFlags(\n+          oneOf.apply(ARG_NAME_CHECK_GRAPH, consistency_check_graph),\n+          oneOf.apply(ARG_NAME_CHECK_INDEXES, consistency_check_indexes),\n+          oneOf.apply(ARG_NAME_CHECK_LABELS, consistency_check_label_scan_store),\n+          oneOf.apply(ARG_NAME_CHECK_OWNERS, consistency_check_property_owners));\n+      return new OnlineBackupContext(requiredArguments, config, consistencyFlags);\n+    } catch (IllegalArgumentException e)\n     {\n-        String argExampleProtoOverride = Stream.of( SelectedBackupProtocol.values() )\n-                .map( SelectedBackupProtocol::getName )\n-                .sorted()\n-                .collect( Collectors.joining( \"|\" ) );\n-        return new Arguments()\n-                .withArgument( new MandatoryCanonicalPath(\n-                        ARG_NAME_BACKUP_DIRECTORY, \"backup-path\", ARG_DESC_BACKUP_DIRECTORY ) )\n-                .withArgument( new MandatoryNamedArg(\n-                        ARG_NAME_BACKUP_NAME, \"graph.db-backup\", ARG_DESC_BACKUP_NAME ) )\n-                .withArgument( new OptionalNamedArg(\n-                        ARG_NAME_BACKUP_SOURCE, \"address\", ARG_DFLT_BACKUP_SOURCE, ARG_DESC_BACKUP_SOURCE ) )\n-                .withArgument( new OptionalNamedArg( ARG_NAME_PROTO_OVERRIDE, argExampleProtoOverride,\n-                        ARG_DFLT_PROTO_OVERRIDE, ARG_DESC_PROTO_OVERRIDE ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_FALLBACK_FULL, true, ARG_DESC_FALLBACK_FULL ) )\n-                .withArgument( new OptionalNamedArg(\n-                        ARG_NAME_TIMEOUT, \"timeout\", ARG_DFLT_TIMEOUT, ARG_DESC_TIMEOUT ) )\n-                .withArgument( new OptionalNamedArg(\n-                        ARG_NAME_PAGECACHE, \"8m\", ARG_DFLT_PAGECACHE, ARG_DESC_PAGECACHE ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_CONSISTENCY, true, ARG_DESC_CHECK_CONSISTENCY ) )\n-                .withArgument( new OptionalCanonicalPath(\n-                        ARG_NAME_REPORT_DIRECTORY, \"directory\", \".\", ARG_DESC_REPORT_DIRECTORY ) )\n-                .withArgument( new OptionalCanonicalPath(\n-                        ARG_NAME_ADDITIONAL_CONFIG_DIR, \"config-file-path\", \"\", ARG_DESC_ADDITIONAL_CONFIG_DIR ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_GRAPH, true, ARG_DESC_CHECK_GRAPH ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_INDEXES, true, ARG_DESC_CHECK_INDEXES ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_LABELS, true, ARG_DESC_CHECK_LABELS ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_OWNERS, false, ARG_DESC_CHECK_OWNERS ) );\n-    }\n-\n-    public OnlineBackupContext createContext( String... args ) throws IncorrectUsage, CommandFailed\n+      throw new IncorrectUsage(e.getMessage());\n+    } catch (UncheckedIOException e)\n     {\n-        try\n-        {\n-            Arguments arguments = arguments();\n-            arguments.parse( args );\n-\n-            OptionalHostnamePort address = toOptionalHostnamePortFromRawAddress(\n-                    arguments.get( ARG_NAME_BACKUP_SOURCE ) );\n-            Path folder = getBackupDirectory( arguments );\n-            String name = arguments.get( ARG_NAME_BACKUP_NAME );\n-            boolean fallbackToFull = arguments.getBoolean( ARG_NAME_FALLBACK_FULL );\n-            boolean doConsistencyCheck = arguments.getBoolean( ARG_NAME_CHECK_CONSISTENCY );\n-            long timeout = arguments.get( ARG_NAME_TIMEOUT, TimeUtil.parseTimeMillis );\n-            SelectedBackupProtocol selectedBackupProtocol = SelectedBackupProtocol.fromUserInput( arguments.get( ARG_NAME_PROTO_OVERRIDE ) );\n-            String pagecacheMemory = arguments.get( ARG_NAME_PAGECACHE );\n-            Optional<Path> additionalConfig = arguments.getOptionalPath( ARG_NAME_ADDITIONAL_CONFIG_DIR );\n-            Path reportDir = arguments.getOptionalPath( ARG_NAME_REPORT_DIRECTORY ).orElseThrow(\n-                    () -> new IllegalArgumentException( ARG_NAME_REPORT_DIRECTORY + \" must be a path\" ) );\n-\n-            OnlineBackupRequiredArguments requiredArguments = new OnlineBackupRequiredArguments(\n-                    address, folder, name, selectedBackupProtocol, fallbackToFull, doConsistencyCheck, timeout, reportDir );\n-\n-            Path configFile = configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME );\n-            Config.Builder builder = Config.fromFile( configFile );\n-            Path logPath = requiredArguments.getResolvedLocationFromName();\n-            Config config = builder.withHome( homeDir )\n-                                   .withSetting( logical_logs_location, logPath.toString() )\n-                                   .withConnectorsDisabled()\n-                                   .build();\n-            additionalConfig.map( this::loadAdditionalConfigFile ).ifPresent( config::augment );\n-            // We only replace the page cache memory setting.\n-            // Any other custom page swapper, etc. settings are preserved and used.\n-            config.augment( pagecache_memory, pagecacheMemory );\n-\n-            // Build consistency-checker configuration.\n-            // Note: We can remove the loading from config file in 4.0.\n-            BiFunction<String,Setting<Boolean>,Boolean> oneOf =\n-                    ( a, s ) -> arguments.has( a ) ? arguments.getBoolean( a ) : config.get( s );\n-            ConsistencyFlags consistencyFlags = new ConsistencyFlags(\n-                    oneOf.apply( ARG_NAME_CHECK_GRAPH, consistency_check_graph ),\n-                    oneOf.apply( ARG_NAME_CHECK_INDEXES, consistency_check_indexes ),\n-                    oneOf.apply( ARG_NAME_CHECK_LABELS, consistency_check_label_scan_store ),\n-                    oneOf.apply( ARG_NAME_CHECK_OWNERS, consistency_check_property_owners ) );\n-            return new OnlineBackupContext( requiredArguments, config, consistencyFlags );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            throw new IncorrectUsage( e.getMessage() );\n-        }\n-        catch ( UncheckedIOException e )\n-        {\n-            throw new CommandFailed( e.getMessage(), e );\n-        }\n+      throw new CommandFailed(e.getMessage(), e);\n     }\n+  }\n \n-    private Path getBackupDirectory( Arguments arguments ) throws CommandFailed\n+  private Path getBackupDirectory(Arguments arguments) throws CommandFailed\n+  {\n+    Path path = arguments.getMandatoryPath(ARG_NAME_BACKUP_DIRECTORY);\n+    try\n     {\n-        Path path = arguments.getMandatoryPath( ARG_NAME_BACKUP_DIRECTORY );\n-        try\n-        {\n-            return path.toRealPath();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new CommandFailed( String.format( \"Directory '%s' does not exist.\", path ) );\n-        }\n+      return path.toRealPath();\n+    } catch (IOException e)\n+    {\n+      throw new CommandFailed(String.format(\"Directory '%s' does not exist.\", path));\n     }\n+  }\n \n-    private Config loadAdditionalConfigFile( Path path )\n+  private Config loadAdditionalConfigFile(Path path)\n+  {\n+    try (InputStream in = Files.newInputStream(path))\n+    {\n+      return Config.fromSettings(MapUtil.load(in)).build();\n+    } catch (IOException e)\n     {\n-        try ( InputStream in = Files.newInputStream( path ) )\n-        {\n-            return Config.fromSettings( MapUtil.load( in ) ).build();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException(\n-                    \"Could not read additional configuration from \" + path + \". \" +\n-                    \"The file either does not exist, is not a regular file, or is not readable.\", e );\n-        }\n+      throw new UncheckedIOException(\n+          \"Could not read additional configuration from \" + path + \". \" +\n+              \"The file either does not exist, is not a regular file, or is not readable.\", e);\n     }\n+  }\n }\n",
            "diff_size": 266
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "column": "201",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "164",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "211",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 246).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "column": "246",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "195",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 447).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 334).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/278/OnlineBackupContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/278/OnlineBackupContextBuilder.java\nindex c9ae5ddc3a9..3a4ec4932b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/278/OnlineBackupContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/278/OnlineBackupContextBuilder.java\n@@ -58,10 +58,7 @@ class OnlineBackupContextBuilder\n     static final String ARG_DESC_BACKUP_DIRECTORY = \"Directory to place backup in.\";\n \n     static final String ARG_NAME_BACKUP_NAME = \"name\";\n-    static final String ARG_DESC_BACKUP_NAME =\n-            \"Name of backup. If a backup with this name already exists an incremental backup will be attempted.\";\n-\n-    static final String ARG_NAME_BACKUP_SOURCE = \"from\";\n+    static final String ARG_DESC_BACKUP_NAME = \"Name of backup. If a backup with this name already exists an incremental backup will be attempted.\"; static final String ARG_NAME_BACKUP_SOURCE = \"from\";\n     static final String ARG_DESC_BACKUP_SOURCE = \"Host and port of Neo4j.\";\n     static final String ARG_DFLT_BACKUP_SOURCE = \"localhost:6362\";\n \n@@ -70,9 +67,7 @@ class OnlineBackupContextBuilder\n     static final String ARG_DFLT_PROTO_OVERRIDE = \"any\";\n \n     static final String ARG_NAME_TIMEOUT = \"timeout\";\n-    static final String ARG_DESC_TIMEOUT =\n-            \"Timeout in the form <time>[ms|s|m|h], where the default unit is seconds.\";\n-    static final String ARG_DFLT_TIMEOUT = \"20m\";\n+    static final String ARG_DESC_TIMEOUT = \"Timeout in the form <time>[ms|s|m|h], where the default unit is seconds.\"; static final String ARG_DFLT_TIMEOUT = \"20m\";\n \n     static final String ARG_NAME_PAGECACHE = \"pagecache\";\n     static final String ARG_DESC_PAGECACHE = \"The size of the page cache to use for the backup process.\";\n@@ -82,33 +77,20 @@ class OnlineBackupContextBuilder\n     static final String ARG_DESC_REPORT_DIRECTORY = \"Directory where consistency report will be written.\";\n \n     static final String ARG_NAME_ADDITIONAL_CONFIG_DIR = \"additional-config\";\n-    static final String ARG_DESC_ADDITIONAL_CONFIG_DIR =\n-            \"Configuration file to supply additional configuration in. This argument is DEPRECATED.\";\n-\n-    static final String ARG_NAME_FALLBACK_FULL = \"fallback-to-full\";\n-    static final String ARG_DESC_FALLBACK_FULL =\n-            \"If an incremental backup fails backup will move the old backup to <name>.err.<N> and fallback to a full \" +\n-            \"backup instead.\";\n-\n-    static final String ARG_NAME_CHECK_CONSISTENCY = \"check-consistency\";\n+    static final String ARG_DESC_ADDITIONAL_CONFIG_DIR = \"Configuration file to supply additional configuration in. This argument is DEPRECATED.\"; static final String ARG_NAME_FALLBACK_FULL = \"fallback-to-full\";\n+    static final String ARG_DESC_FALLBACK_FULL = \"If an incremental backup fails backup will move the old backup to <name>.err.<N> and fallback to a full \" + \"backup instead.\"; static final String ARG_NAME_CHECK_CONSISTENCY = \"check-consistency\";\n     static final String ARG_DESC_CHECK_CONSISTENCY = \"If a consistency check should be made.\";\n \n     static final String ARG_NAME_CHECK_GRAPH = \"cc-graph\";\n-    static final String ARG_DESC_CHECK_GRAPH =\n-            \"Perform consistency checks between nodes, relationships, properties, types and tokens.\";\n-\n-    static final String ARG_NAME_CHECK_INDEXES = \"cc-indexes\";\n+    static final String ARG_DESC_CHECK_GRAPH = \"Perform consistency checks between nodes, relationships, properties, types and tokens.\"; static final String ARG_NAME_CHECK_INDEXES = \"cc-indexes\";\n     static final String ARG_DESC_CHECK_INDEXES = \"Perform consistency checks on indexes.\";\n \n     static final String ARG_NAME_CHECK_LABELS = \"cc-label-scan-store\";\n     static final String ARG_DESC_CHECK_LABELS = \"Perform consistency checks on the label scan store.\";\n \n     static final String ARG_NAME_CHECK_OWNERS = \"cc-property-owners\";\n-    static final String ARG_DESC_CHECK_OWNERS =\n-            \"Perform additional consistency checks on property ownership. This check is *very* expensive in time and \" +\n-            \"memory.\";\n-\n-    private final Path homeDir;\n+    static final String ARG_DESC_CHECK_OWNERS = \"Perform additional consistency checks on property ownership. This check is *very* expensive in time and \" + \"memory.\";\n+private final Path homeDir;\n     private final Path configDir;\n \n     OnlineBackupContextBuilder( Path homeDir, Path configDir )\n@@ -119,39 +101,9 @@ class OnlineBackupContextBuilder\n \n     public static Arguments arguments()\n     {\n-        String argExampleProtoOverride = Stream.of( SelectedBackupProtocol.values() )\n-                .map( SelectedBackupProtocol::getName )\n-                .sorted()\n-                .collect( Collectors.joining( \"|\" ) );\n-        return new Arguments()\n-                .withArgument( new MandatoryCanonicalPath(\n-                        ARG_NAME_BACKUP_DIRECTORY, \"backup-path\", ARG_DESC_BACKUP_DIRECTORY ) )\n-                .withArgument( new MandatoryNamedArg(\n-                        ARG_NAME_BACKUP_NAME, \"graph.db-backup\", ARG_DESC_BACKUP_NAME ) )\n-                .withArgument( new OptionalNamedArg(\n-                        ARG_NAME_BACKUP_SOURCE, \"address\", ARG_DFLT_BACKUP_SOURCE, ARG_DESC_BACKUP_SOURCE ) )\n-                .withArgument( new OptionalNamedArg( ARG_NAME_PROTO_OVERRIDE, argExampleProtoOverride,\n-                        ARG_DFLT_PROTO_OVERRIDE, ARG_DESC_PROTO_OVERRIDE ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_FALLBACK_FULL, true, ARG_DESC_FALLBACK_FULL ) )\n-                .withArgument( new OptionalNamedArg(\n-                        ARG_NAME_TIMEOUT, \"timeout\", ARG_DFLT_TIMEOUT, ARG_DESC_TIMEOUT ) )\n-                .withArgument( new OptionalNamedArg(\n-                        ARG_NAME_PAGECACHE, \"8m\", ARG_DFLT_PAGECACHE, ARG_DESC_PAGECACHE ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_CONSISTENCY, true, ARG_DESC_CHECK_CONSISTENCY ) )\n-                .withArgument( new OptionalCanonicalPath(\n-                        ARG_NAME_REPORT_DIRECTORY, \"directory\", \".\", ARG_DESC_REPORT_DIRECTORY ) )\n-                .withArgument( new OptionalCanonicalPath(\n-                        ARG_NAME_ADDITIONAL_CONFIG_DIR, \"config-file-path\", \"\", ARG_DESC_ADDITIONAL_CONFIG_DIR ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_GRAPH, true, ARG_DESC_CHECK_GRAPH ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_INDEXES, true, ARG_DESC_CHECK_INDEXES ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_LABELS, true, ARG_DESC_CHECK_LABELS ) )\n-                .withArgument( new OptionalBooleanArg(\n-                        ARG_NAME_CHECK_OWNERS, false, ARG_DESC_CHECK_OWNERS ) );\n+        String argExampleProtoOverride = Stream.of( SelectedBackupProtocol.values() ).map( SelectedBackupProtocol::getName ).sorted().collect( Collectors.joining( \"|\" ) );\n+return new Arguments().withArgument( new MandatoryCanonicalPath( ARG_NAME_BACKUP_DIRECTORY, \"backup-path\", ARG_DESC_BACKUP_DIRECTORY ) ).withArgument( new MandatoryNamedArg( ARG_NAME_BACKUP_NAME, \"graph.db-backup\", ARG_DESC_BACKUP_NAME ) ).withArgument( new OptionalNamedArg( ARG_NAME_BACKUP_SOURCE, \"address\", ARG_DFLT_BACKUP_SOURCE, ARG_DESC_BACKUP_SOURCE ) ).withArgument( new OptionalNamedArg( ARG_NAME_PROTO_OVERRIDE, argExampleProtoOverride,\n+                        ARG_DFLT_PROTO_OVERRIDE, ARG_DESC_PROTO_OVERRIDE ) ).withArgument( new OptionalBooleanArg( ARG_NAME_FALLBACK_FULL, true, ARG_DESC_FALLBACK_FULL ) ).withArgument( new OptionalNamedArg( ARG_NAME_TIMEOUT, \"timeout\", ARG_DFLT_TIMEOUT, ARG_DESC_TIMEOUT ) ).withArgument( new OptionalNamedArg( ARG_NAME_PAGECACHE, \"8m\", ARG_DFLT_PAGECACHE, ARG_DESC_PAGECACHE ) ).withArgument( new OptionalBooleanArg( ARG_NAME_CHECK_CONSISTENCY, true, ARG_DESC_CHECK_CONSISTENCY ) ).withArgument( new OptionalCanonicalPath( ARG_NAME_REPORT_DIRECTORY, \"directory\", \".\", ARG_DESC_REPORT_DIRECTORY ) ).withArgument( new OptionalCanonicalPath( ARG_NAME_ADDITIONAL_CONFIG_DIR, \"config-file-path\", \"\", ARG_DESC_ADDITIONAL_CONFIG_DIR ) ).withArgument( new OptionalBooleanArg( ARG_NAME_CHECK_GRAPH, true, ARG_DESC_CHECK_GRAPH ) ).withArgument( new OptionalBooleanArg( ARG_NAME_CHECK_INDEXES, true, ARG_DESC_CHECK_INDEXES ) ).withArgument( new OptionalBooleanArg( ARG_NAME_CHECK_LABELS, true, ARG_DESC_CHECK_LABELS ) ).withArgument( new OptionalBooleanArg( ARG_NAME_CHECK_OWNERS, false, ARG_DESC_CHECK_OWNERS ) );\n     }\n \n     public OnlineBackupContext createContext( String... args ) throws IncorrectUsage, CommandFailed\n@@ -160,10 +112,8 @@ class OnlineBackupContextBuilder\n         {\n             Arguments arguments = arguments();\n             arguments.parse( args );\n-\n-            OptionalHostnamePort address = toOptionalHostnamePortFromRawAddress(\n-                    arguments.get( ARG_NAME_BACKUP_SOURCE ) );\n-            Path folder = getBackupDirectory( arguments );\n+OptionalHostnamePort address = toOptionalHostnamePortFromRawAddress( arguments.get( ARG_NAME_BACKUP_SOURCE ) );\n+Path folder = getBackupDirectory( arguments );\n             String name = arguments.get( ARG_NAME_BACKUP_NAME );\n             boolean fallbackToFull = arguments.getBoolean( ARG_NAME_FALLBACK_FULL );\n             boolean doConsistencyCheck = arguments.getBoolean( ARG_NAME_CHECK_CONSISTENCY );\n@@ -171,34 +121,22 @@ class OnlineBackupContextBuilder\n             SelectedBackupProtocol selectedBackupProtocol = SelectedBackupProtocol.fromUserInput( arguments.get( ARG_NAME_PROTO_OVERRIDE ) );\n             String pagecacheMemory = arguments.get( ARG_NAME_PAGECACHE );\n             Optional<Path> additionalConfig = arguments.getOptionalPath( ARG_NAME_ADDITIONAL_CONFIG_DIR );\n-            Path reportDir = arguments.getOptionalPath( ARG_NAME_REPORT_DIRECTORY ).orElseThrow(\n-                    () -> new IllegalArgumentException( ARG_NAME_REPORT_DIRECTORY + \" must be a path\" ) );\n-\n-            OnlineBackupRequiredArguments requiredArguments = new OnlineBackupRequiredArguments(\n-                    address, folder, name, selectedBackupProtocol, fallbackToFull, doConsistencyCheck, timeout, reportDir );\n-\n-            Path configFile = configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME );\n+            Path reportDir = arguments.getOptionalPath( ARG_NAME_REPORT_DIRECTORY ).orElseThrow(() -> new IllegalArgumentException( ARG_NAME_REPORT_DIRECTORY + \" must be a path\" ) );\n+OnlineBackupRequiredArguments requiredArguments = new OnlineBackupRequiredArguments( address, folder, name, selectedBackupProtocol, fallbackToFull, doConsistencyCheck, timeout, reportDir );\n+Path configFile = configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME );\n             Config.Builder builder = Config.fromFile( configFile );\n             Path logPath = requiredArguments.getResolvedLocationFromName();\n-            Config config = builder.withHome( homeDir )\n-                                   .withSetting( logical_logs_location, logPath.toString() )\n-                                   .withConnectorsDisabled()\n-                                   .build();\n-            additionalConfig.map( this::loadAdditionalConfigFile ).ifPresent( config::augment );\n+            Config config = builder.withHome( homeDir ).withSetting( logical_logs_location, logPath.toString() ).withConnectorsDisabled().build();\n+additionalConfig.map( this::loadAdditionalConfigFile ).ifPresent( config::augment );\n             // We only replace the page cache memory setting.\n             // Any other custom page swapper, etc. settings are preserved and used.\n             config.augment( pagecache_memory, pagecacheMemory );\n \n             // Build consistency-checker configuration.\n             // Note: We can remove the loading from config file in 4.0.\n-            BiFunction<String,Setting<Boolean>,Boolean> oneOf =\n-                    ( a, s ) -> arguments.has( a ) ? arguments.getBoolean( a ) : config.get( s );\n-            ConsistencyFlags consistencyFlags = new ConsistencyFlags(\n-                    oneOf.apply( ARG_NAME_CHECK_GRAPH, consistency_check_graph ),\n-                    oneOf.apply( ARG_NAME_CHECK_INDEXES, consistency_check_indexes ),\n-                    oneOf.apply( ARG_NAME_CHECK_LABELS, consistency_check_label_scan_store ),\n-                    oneOf.apply( ARG_NAME_CHECK_OWNERS, consistency_check_property_owners ) );\n-            return new OnlineBackupContext( requiredArguments, config, consistencyFlags );\n+            BiFunction<String,Setting<Boolean>,Boolean> oneOf = ( a, s ) -> arguments.has( a ) ? arguments.getBoolean( a ) : config.get( s );\n+ConsistencyFlags consistencyFlags = new ConsistencyFlags( oneOf.apply( ARG_NAME_CHECK_GRAPH, consistency_check_graph ), oneOf.apply( ARG_NAME_CHECK_INDEXES, consistency_check_indexes ), oneOf.apply( ARG_NAME_CHECK_LABELS, consistency_check_label_scan_store ), oneOf.apply( ARG_NAME_CHECK_OWNERS, consistency_check_property_owners ) );\n+return new OnlineBackupContext( requiredArguments, config, consistencyFlags );\n         }\n         catch ( IllegalArgumentException e )\n         {\n@@ -231,9 +169,7 @@ class OnlineBackupContextBuilder\n         }\n         catch ( IOException e )\n         {\n-            throw new UncheckedIOException(\n-                    \"Could not read additional configuration from \" + path + \". \" +\n-                    \"The file either does not exist, is not a regular file, or is not readable.\", e );\n-        }\n+            throw new UncheckedIOException( \"Could not read additional configuration from \" + path + \". \" + \"The file either does not exist, is not a regular file, or is not readable.\", e );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 87
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
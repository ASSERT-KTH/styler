{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2015",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2015/PullingProducerStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2015/PullingProducerStep.java\nindex 84e0e4a2e8c..52302cc7b89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2015/PullingProducerStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2015/PullingProducerStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.staging;\n \n import org.neo4j.unsafe.impl.batchimport.Configuration;\n@@ -25,37 +26,38 @@ import static java.lang.System.nanoTime;\n \n public abstract class PullingProducerStep extends ProducerStep\n {\n-    public PullingProducerStep( StageControl control, Configuration config )\n-    {\n-        super( control, config );\n-    }\n+  public PullingProducerStep(StageControl control, Configuration config)\n+  {\n+    super(control, config);\n+  }\n \n-    /**\n-     * Forms batches out of some sort of data stream and sends these batches downstream.\n-     */\n-    @Override\n-    protected void process()\n+  /**\n+   * Forms batches out of some sort of data stream and sends these batches downstream.\n+   */\n+  @Override\n+  protected void process()\n+  {\n+    Object batch;\n+    while (true)\n     {\n-        Object batch;\n-        while ( true )\n-        {\n-            long startTime = nanoTime();\n-            batch = nextBatchOrNull( doneBatches.get(), batchSize );\n-            if ( batch == null )\n-            {\n-                break;\n-            }\n+      long startTime = nanoTime();\n+      batch = nextBatchOrNull(doneBatches.get(), batchSize);\n+      if (batch == null)\n+      {\n+        break;\n+      }\n \n-            totalProcessingTime.add( nanoTime() - startTime );\n-            sendDownstream( batch );\n-            assertHealthy();\n-        }\n+      totalProcessingTime.add(nanoTime() - startTime);\n+      sendDownstream(batch);\n+      assertHealthy();\n     }\n+  }\n \n-    /**\n-     * Generates next batch object with a target size of {@code batchSize} items from its data stream in it.\n-     * @param batchSize number of items to grab from its data stream (whatever a subclass defines as a data stream).\n-     * @return the batch object to send downstream, or null if the data stream came to an end.\n-     */\n-    protected abstract Object nextBatchOrNull( long ticket, int batchSize );\n+  /**\n+   * Generates next batch object with a target size of {@code batchSize} items from its data stream in it.\n+   *\n+   * @param batchSize number of items to grab from its data stream (whatever a subclass defines as a data stream).\n+   * @return the batch object to send downstream, or null if the data stream came to an end.\n+   */\n+  protected abstract Object nextBatchOrNull(long ticket, int batchSize);\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2015/PullingProducerStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2015/PullingProducerStep.java\nindex 84e0e4a2e8c..644a04e7f48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2015/PullingProducerStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2015/PullingProducerStep.java\n@@ -58,4 +58,4 @@ public abstract class PullingProducerStep extends ProducerStep\n      * @return the batch object to send downstream, or null if the data stream came to an end.\n      */\n     protected abstract Object nextBatchOrNull( long ticket, int batchSize );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
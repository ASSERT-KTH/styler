{
    "project_name": "LoboEvolution-LoboEvolution",
    "error_id": "482",
    "information": {
        "errors": [
            {
                "line": "35",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic interface SMILMediaElement extends ElementTime, SMILElement {\n\t/**\n\t * See the abstract attribute from .\n\t *\n\t * @exception DOMException",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/482/SMILMediaElement.java\nindex aaa02ab6b4a..40b5d9b2da1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/482/SMILMediaElement.java\n@@ -32,7 +32,7 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface SMILMediaElement extends ElementTime, SMILElement {\n-\t/**\n+    /**\n \t * See the abstract attribute from .\n \t *\n \t * @exception DOMException\n@@ -40,7 +40,7 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getAbstractAttr();\n+String getAbstractAttr();\n \n \t/**\n \t * <p>setAbstractAttr.</p>\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/482/SMILMediaElement.java\nindex aaa02ab6b4a..f7fe15a517e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/482/SMILMediaElement.java\n@@ -32,274 +32,259 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface SMILMediaElement extends ElementTime, SMILElement {\n-\t/**\n-\t * See the abstract attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the abstract attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getAbstractAttr();\n \n-\t/**\n-\t * <p>setAbstractAttr.</p>\n-\t *\n-\t * @param abstractAttr a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setAbstractAttr.</p>\n+     *\n+     * @param abstractAttr a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setAbstractAttr(String abstractAttr) throws DOMException;\n \n-\t/**\n-\t * See the alt attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the alt attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getAlt();\n \n-\t/**\n-\t * <p>setAlt.</p>\n-\t *\n-\t * @param alt a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setAlt.</p>\n+     *\n+     * @param alt a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setAlt(String alt) throws DOMException;\n \n-\t/**\n-\t * See the author attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the author attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getAuthor();\n \n-\t/**\n-\t * <p>setAuthor.</p>\n-\t *\n-\t * @param author a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setAuthor.</p>\n+     *\n+     * @param author a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setAuthor(String author) throws DOMException;\n \n-\t/**\n-\t * See the clipBegin attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the clipBegin attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getClipBegin();\n \n-\t/**\n-\t * <p>setClipBegin.</p>\n-\t *\n-\t * @param clipBegin a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setClipBegin.</p>\n+     *\n+     * @param clipBegin a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setClipBegin(String clipBegin) throws DOMException;\n \n-\t/**\n-\t * See the clipEnd attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the clipEnd attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getClipEnd();\n \n-\t/**\n-\t * <p>setClipEnd.</p>\n-\t *\n-\t * @param clipEnd a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setClipEnd.</p>\n+     *\n+     * @param clipEnd a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setClipEnd(String clipEnd) throws DOMException;\n \n-\t/**\n-\t * See the copyright attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the copyright attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getCopyright();\n \n-\t/**\n-\t * <p>setCopyright.</p>\n-\t *\n-\t * @param copyright a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setCopyright.</p>\n+     *\n+     * @param copyright a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setCopyright(String copyright) throws DOMException;\n \n-\t/**\n-\t * See the longdesc attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the longdesc attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getLongdesc();\n \n-\t/**\n-\t * <p>setLongdesc.</p>\n-\t *\n-\t * @param longdesc a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setLongdesc.</p>\n+     *\n+     * @param longdesc a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setLongdesc(String longdesc) throws DOMException;\n \n-\t/**\n-\t * See the port attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the port attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getPort();\n \n-\t/**\n-\t * <p>setPort.</p>\n-\t *\n-\t * @param port a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setPort.</p>\n+     *\n+     * @param port a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setPort(String port) throws DOMException;\n \n-\t/**\n-\t * See the readIndex attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the readIndex attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getReadIndex();\n \n-\t/**\n-\t * <p>setReadIndex.</p>\n-\t *\n-\t * @param readIndex a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setReadIndex.</p>\n+     *\n+     * @param readIndex a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setReadIndex(String readIndex) throws DOMException;\n \n-\t/**\n-\t * See the rtpformat attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the rtpformat attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getRtpformat();\n \n-\t/**\n-\t * <p>setRtpformat.</p>\n-\t *\n-\t * @param rtpformat a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setRtpformat.</p>\n+     *\n+     * @param rtpformat a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setRtpformat(String rtpformat) throws DOMException;\n \n-\t/**\n-\t * See the src attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the src attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getSrc();\n \n-\t/**\n-\t * <p>setSrc.</p>\n-\t *\n-\t * @param src a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setSrc.</p>\n+     *\n+     * @param src a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setSrc(String src) throws DOMException;\n \n-\t/**\n-\t * See the stripRepeat attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the stripRepeat attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getStripRepeat();\n \n-\t/**\n-\t * <p>setStripRepeat.</p>\n-\t *\n-\t * @param stripRepeat a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setStripRepeat.</p>\n+     *\n+     * @param stripRepeat a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setStripRepeat(String stripRepeat) throws DOMException;\n \n-\t/**\n-\t * See the title attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the title attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getTitle();\n \n-\t/**\n-\t * <p>setTitle.</p>\n-\t *\n-\t * @param title a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setTitle.</p>\n+     *\n+     * @param title a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setTitle(String title) throws DOMException;\n \n-\t/**\n-\t * See the transport attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the transport attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getTransport();\n \n-\t/**\n-\t * <p>setTransport.</p>\n-\t *\n-\t * @param transport a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setTransport.</p>\n+     *\n+     * @param transport a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setTransport(String transport) throws DOMException;\n \n-\t/**\n-\t * See the type attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the type attribute from .\n+     *\n+     * @return a {@link java.lang.String} object.\n+     * @throws DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                      readonly.\n+     */\n     String getType();\n \n-\t/**\n-\t * <p>setType.</p>\n-\t *\n-\t * @param type a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setType.</p>\n+     *\n+     * @param type a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n     void setType(String type) throws DOMException;\n \n }\n",
            "diff_size": 210
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/naturalize/482/SMILMediaElement.java\nindex aaa02ab6b4a..8c0b803565a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/naturalize/482/SMILMediaElement.java\n@@ -32,7 +32,8 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface SMILMediaElement extends ElementTime, SMILElement {\n-\t/**\n+\n+    /**\n \t * See the abstract attribute from .\n \t *\n \t * @exception DOMException\n@@ -40,17 +41,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getAbstractAttr();\n+String getAbstractAttr();\n \n-\t/**\n+/**\n \t * <p>setAbstractAttr.</p>\n \t *\n \t * @param abstractAttr a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setAbstractAttr(String abstractAttr) throws DOMException;\n+void setAbstractAttr(String abstractAttr) throws DOMException;\n \n-\t/**\n+/**\n \t * See the alt attribute from .\n \t *\n \t * @exception DOMException\n@@ -58,17 +59,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getAlt();\n+String getAlt();\n \n-\t/**\n+/**\n \t * <p>setAlt.</p>\n \t *\n \t * @param alt a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setAlt(String alt) throws DOMException;\n+void setAlt(String alt) throws DOMException;\n \n-\t/**\n+/**\n \t * See the author attribute from .\n \t *\n \t * @exception DOMException\n@@ -76,17 +77,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getAuthor();\n+String getAuthor();\n \n-\t/**\n+/**\n \t * <p>setAuthor.</p>\n \t *\n \t * @param author a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setAuthor(String author) throws DOMException;\n+void setAuthor(String author) throws DOMException;\n \n-\t/**\n+/**\n \t * See the clipBegin attribute from .\n \t *\n \t * @exception DOMException\n@@ -94,17 +95,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getClipBegin();\n+String getClipBegin();\n \n-\t/**\n+/**\n \t * <p>setClipBegin.</p>\n \t *\n \t * @param clipBegin a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setClipBegin(String clipBegin) throws DOMException;\n+void setClipBegin(String clipBegin) throws DOMException;\n \n-\t/**\n+/**\n \t * See the clipEnd attribute from .\n \t *\n \t * @exception DOMException\n@@ -112,17 +113,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getClipEnd();\n+String getClipEnd();\n \n-\t/**\n+/**\n \t * <p>setClipEnd.</p>\n \t *\n \t * @param clipEnd a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setClipEnd(String clipEnd) throws DOMException;\n+void setClipEnd(String clipEnd) throws DOMException;\n \n-\t/**\n+/**\n \t * See the copyright attribute from .\n \t *\n \t * @exception DOMException\n@@ -130,17 +131,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getCopyright();\n+String getCopyright();\n \n-\t/**\n+/**\n \t * <p>setCopyright.</p>\n \t *\n \t * @param copyright a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setCopyright(String copyright) throws DOMException;\n+void setCopyright(String copyright) throws DOMException;\n \n-\t/**\n+/**\n \t * See the longdesc attribute from .\n \t *\n \t * @exception DOMException\n@@ -148,17 +149,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getLongdesc();\n+String getLongdesc();\n \n-\t/**\n+/**\n \t * <p>setLongdesc.</p>\n \t *\n \t * @param longdesc a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setLongdesc(String longdesc) throws DOMException;\n+void setLongdesc(String longdesc) throws DOMException;\n \n-\t/**\n+/**\n \t * See the port attribute from .\n \t *\n \t * @exception DOMException\n@@ -166,17 +167,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getPort();\n+String getPort();\n \n-\t/**\n+/**\n \t * <p>setPort.</p>\n \t *\n \t * @param port a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setPort(String port) throws DOMException;\n+void setPort(String port) throws DOMException;\n \n-\t/**\n+/**\n \t * See the readIndex attribute from .\n \t *\n \t * @exception DOMException\n@@ -184,17 +185,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getReadIndex();\n+String getReadIndex();\n \n-\t/**\n+/**\n \t * <p>setReadIndex.</p>\n \t *\n \t * @param readIndex a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setReadIndex(String readIndex) throws DOMException;\n+void setReadIndex(String readIndex) throws DOMException;\n \n-\t/**\n+/**\n \t * See the rtpformat attribute from .\n \t *\n \t * @exception DOMException\n@@ -202,17 +203,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getRtpformat();\n+String getRtpformat();\n \n-\t/**\n+/**\n \t * <p>setRtpformat.</p>\n \t *\n \t * @param rtpformat a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setRtpformat(String rtpformat) throws DOMException;\n+void setRtpformat(String rtpformat) throws DOMException;\n \n-\t/**\n+/**\n \t * See the src attribute from .\n \t *\n \t * @exception DOMException\n@@ -220,17 +221,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getSrc();\n+String getSrc();\n \n-\t/**\n+/**\n \t * <p>setSrc.</p>\n \t *\n \t * @param src a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setSrc(String src) throws DOMException;\n+void setSrc(String src) throws DOMException;\n \n-\t/**\n+/**\n \t * See the stripRepeat attribute from .\n \t *\n \t * @exception DOMException\n@@ -238,17 +239,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getStripRepeat();\n+String getStripRepeat();\n \n-\t/**\n+/**\n \t * <p>setStripRepeat.</p>\n \t *\n \t * @param stripRepeat a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setStripRepeat(String stripRepeat) throws DOMException;\n+void setStripRepeat(String stripRepeat) throws DOMException;\n \n-\t/**\n+/**\n \t * See the title attribute from .\n \t *\n \t * @exception DOMException\n@@ -256,17 +257,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getTitle();\n+String getTitle();\n \n-\t/**\n+/**\n \t * <p>setTitle.</p>\n \t *\n \t * @param title a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setTitle(String title) throws DOMException;\n+void setTitle(String title) throws DOMException;\n \n-\t/**\n+/**\n \t * See the transport attribute from .\n \t *\n \t * @exception DOMException\n@@ -274,17 +275,17 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getTransport();\n+String getTransport();\n \n-\t/**\n+/**\n \t * <p>setTransport.</p>\n \t *\n \t * @param transport a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setTransport(String transport) throws DOMException;\n+void setTransport(String transport) throws DOMException;\n \n-\t/**\n+/**\n \t * See the type attribute from .\n \t *\n \t * @exception DOMException\n@@ -292,14 +293,14 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getType();\n+String getType();\n \n-\t/**\n+/**\n \t * <p>setType.</p>\n \t *\n \t * @param type a {@link java.lang.String} object.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-    void setType(String type) throws DOMException;\n+void setType(String type) throws DOMException;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/482/SMILMediaElement.java\nindex aaa02ab6b4a..db98e926555 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/482/SMILMediaElement.java\n@@ -31,275 +31,336 @@ import org.w3c.dom.DOMException;\n  * @author utente\n  * @version $Id: $Id\n  */\n+\n+\n public interface SMILMediaElement extends ElementTime, SMILElement {\n-\t/**\n-\t * See the abstract attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the abstract attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getAbstractAttr();\n \n-\t/**\n-\t * <p>setAbstractAttr.</p>\n-\t *\n-\t * @param abstractAttr a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setAbstractAttr.</p>\n+     *\n+     * @param abstractAttr a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setAbstractAttr(String abstractAttr) throws DOMException;\n \n-\t/**\n-\t * See the alt attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the alt attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getAlt();\n \n-\t/**\n-\t * <p>setAlt.</p>\n-\t *\n-\t * @param alt a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setAlt.</p>\n+     *\n+     * @param alt a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setAlt(String alt) throws DOMException;\n \n-\t/**\n-\t * See the author attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the author attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getAuthor();\n \n-\t/**\n-\t * <p>setAuthor.</p>\n-\t *\n-\t * @param author a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setAuthor.</p>\n+     *\n+     * @param author a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setAuthor(String author) throws DOMException;\n \n-\t/**\n-\t * See the clipBegin attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the clipBegin attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getClipBegin();\n \n-\t/**\n-\t * <p>setClipBegin.</p>\n-\t *\n-\t * @param clipBegin a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setClipBegin.</p>\n+     *\n+     * @param clipBegin a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setClipBegin(String clipBegin) throws DOMException;\n \n-\t/**\n-\t * See the clipEnd attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the clipEnd attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getClipEnd();\n \n-\t/**\n-\t * <p>setClipEnd.</p>\n-\t *\n-\t * @param clipEnd a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setClipEnd.</p>\n+     *\n+     * @param clipEnd a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setClipEnd(String clipEnd) throws DOMException;\n \n-\t/**\n-\t * See the copyright attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the copyright attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getCopyright();\n \n-\t/**\n-\t * <p>setCopyright.</p>\n-\t *\n-\t * @param copyright a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setCopyright.</p>\n+     *\n+     * @param copyright a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setCopyright(String copyright) throws DOMException;\n \n-\t/**\n-\t * See the longdesc attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the longdesc attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getLongdesc();\n \n-\t/**\n-\t * <p>setLongdesc.</p>\n-\t *\n-\t * @param longdesc a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setLongdesc.</p>\n+     *\n+     * @param longdesc a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setLongdesc(String longdesc) throws DOMException;\n \n-\t/**\n-\t * See the port attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the port attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getPort();\n \n-\t/**\n-\t * <p>setPort.</p>\n-\t *\n-\t * @param port a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setPort.</p>\n+     *\n+     * @param port a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setPort(String port) throws DOMException;\n \n-\t/**\n-\t * See the readIndex attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the readIndex attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getReadIndex();\n \n-\t/**\n-\t * <p>setReadIndex.</p>\n-\t *\n-\t * @param readIndex a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setReadIndex.</p>\n+     *\n+     * @param readIndex a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setReadIndex(String readIndex) throws DOMException;\n \n-\t/**\n-\t * See the rtpformat attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the rtpformat attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getRtpformat();\n \n-\t/**\n-\t * <p>setRtpformat.</p>\n-\t *\n-\t * @param rtpformat a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setRtpformat.</p>\n+     *\n+     * @param rtpformat a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setRtpformat(String rtpformat) throws DOMException;\n \n-\t/**\n-\t * See the src attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the src attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getSrc();\n \n-\t/**\n-\t * <p>setSrc.</p>\n-\t *\n-\t * @param src a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setSrc.</p>\n+     *\n+     * @param src a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setSrc(String src) throws DOMException;\n \n-\t/**\n-\t * See the stripRepeat attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the stripRepeat attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getStripRepeat();\n \n-\t/**\n-\t * <p>setStripRepeat.</p>\n-\t *\n-\t * @param stripRepeat a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setStripRepeat.</p>\n+     *\n+     * @param stripRepeat a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setStripRepeat(String stripRepeat) throws DOMException;\n \n-\t/**\n-\t * See the title attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the title attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getTitle();\n \n-\t/**\n-\t * <p>setTitle.</p>\n-\t *\n-\t * @param title a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setTitle.</p>\n+     *\n+     * @param title a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setTitle(String title) throws DOMException;\n \n-\t/**\n-\t * See the transport attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the transport attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getTransport();\n \n-\t/**\n-\t * <p>setTransport.</p>\n-\t *\n-\t * @param transport a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n+    /**\n+     * <p>setTransport.</p>\n+     *\n+     * @param transport a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n     void setTransport(String transport) throws DOMException;\n \n-\t/**\n-\t * See the type attribute from .\n-\t *\n-\t * @exception DOMException\n-\t *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n-\t *                readonly.\n-\t * @return a {@link java.lang.String} object.\n-\t */\n+    /**\n+     * See the type attribute from .\n+     *\n+     * @exception DOMException\n+     *                NO_MODIFICATION_ALLOWED_ERR: Raised if this attribute is\n+     *                readonly.\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n     String getType();\n \n-\t/**\n-\t * <p>setType.</p>\n-\t *\n-\t * @param type a {@link java.lang.String} object.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-    void setType(String type) throws DOMException;\n+    /**\n+     * <p>setType.</p>\n+     *\n+     * @param type a {@link java.lang.String} object.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n \n-}\n+    void setType(String type) throws DOMException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 273
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/482/SMILMediaElement.java\nindex aaa02ab6b4a..ee9664e9cb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/482/SMILMediaElement.java\n@@ -32,7 +32,8 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface SMILMediaElement extends ElementTime, SMILElement {\n-\t/**\n+\n+    /**\n \t * See the abstract attribute from .\n \t *\n \t * @exception DOMException\n@@ -40,7 +41,7 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getAbstractAttr();\n+             String getAbstractAttr();\n \n \t/**\n \t * <p>setAbstractAttr.</p>\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/482/SMILMediaElement.java\nindex aaa02ab6b4a..40b5d9b2da1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/482/SMILMediaElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/482/SMILMediaElement.java\n@@ -32,7 +32,7 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface SMILMediaElement extends ElementTime, SMILElement {\n-\t/**\n+    /**\n \t * See the abstract attribute from .\n \t *\n \t * @exception DOMException\n@@ -40,7 +40,7 @@ public interface SMILMediaElement extends ElementTime, SMILElement {\n \t *                readonly.\n \t * @return a {@link java.lang.String} object.\n \t */\n-    String getAbstractAttr();\n+String getAbstractAttr();\n \n \t/**\n \t * <p>setAbstractAttr.</p>\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
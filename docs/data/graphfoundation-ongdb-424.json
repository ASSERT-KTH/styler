{
    "project_name": "graphfoundation-ongdb",
    "error_id": "424",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/424/RawMapIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/424/RawMapIterator.java\nindex b14bb45c248..47eb869a60d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/424/RawMapIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/424/RawMapIterator.java\n@@ -17,38 +17,39 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import org.neo4j.collection.RawIterator;\n import org.neo4j.function.ThrowingFunction;\n \n-class RawMapIterator<FROM, TO, EX extends Exception> implements RawIterator<TO,EX>\n+class RawMapIterator<FROM, TO, EX extends Exception> implements RawIterator<TO, EX>\n {\n-    private final RawIterator<FROM,EX> fromIterator;\n-    private final ThrowingFunction<? super FROM,? extends TO,EX> function;\n+  private final RawIterator<FROM, EX> fromIterator;\n+  private final ThrowingFunction<? super FROM, ? extends TO, EX> function;\n \n-    RawMapIterator( RawIterator<FROM,EX> fromIterator, ThrowingFunction<? super FROM,? extends TO,EX> function )\n-    {\n-        this.fromIterator = fromIterator;\n-        this.function = function;\n-    }\n+  RawMapIterator(RawIterator<FROM, EX> fromIterator, ThrowingFunction<? super FROM, ? extends TO, EX> function)\n+  {\n+    this.fromIterator = fromIterator;\n+    this.function = function;\n+  }\n \n-    @Override\n-    public boolean hasNext() throws EX\n-    {\n-        return fromIterator.hasNext();\n-    }\n+  @Override\n+  public boolean hasNext() throws EX\n+  {\n+    return fromIterator.hasNext();\n+  }\n \n-    @Override\n-    public TO next() throws EX\n-    {\n-        FROM from = fromIterator.next();\n-        return function.apply( from );\n-    }\n+  @Override\n+  public TO next() throws EX\n+  {\n+    FROM from = fromIterator.next();\n+    return function.apply(from);\n+  }\n \n-    @Override\n-    public void remove()\n-    {\n-        fromIterator.remove();\n-    }\n+  @Override\n+  public void remove()\n+  {\n+    fromIterator.remove();\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/424/RawMapIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/424/RawMapIterator.java\nindex b14bb45c248..c53cc32c3ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/424/RawMapIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/424/RawMapIterator.java\n@@ -25,9 +25,9 @@ import org.neo4j.function.ThrowingFunction;\n class RawMapIterator<FROM, TO, EX extends Exception> implements RawIterator<TO,EX>\n {\n     private final RawIterator<FROM,EX> fromIterator;\n-    private final ThrowingFunction<? super FROM,? extends TO,EX> function;\n+    private final ThrowingFunction<? super FROM, ? extends TO,EX> function;\n \n-    RawMapIterator( RawIterator<FROM,EX> fromIterator, ThrowingFunction<? super FROM,? extends TO,EX> function )\n+    RawMapIterator( RawIterator<FROM,EX> fromIterator, ThrowingFunction<? super FROM, ? extends TO,EX> function )\n     {\n         this.fromIterator = fromIterator;\n         this.function = function;\n@@ -51,4 +51,4 @@ class RawMapIterator<FROM, TO, EX extends Exception> implements RawIterator<TO,E\n     {\n         fromIterator.remove();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
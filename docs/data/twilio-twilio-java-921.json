{
    "project_name": "twilio-twilio-java",
    "error_id": "921",
    "information": {
        "errors": [
            {
                "line": "222",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/921/TaskQueuesStatisticsReader.java\nindex 49a11df9033..3cd6138725f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/921/TaskQueuesStatisticsReader.java\n@@ -219,7 +219,7 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/921/TaskQueuesStatisticsReader.java\nindex 49a11df9033..626525a5843 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/921/TaskQueuesStatisticsReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.taskrouter.v1.workspace.taskqueue;\n@@ -219,7 +219,7 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/921/TaskQueuesStatisticsReader.java\nindex 49a11df9033..abe52076812 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/921/TaskQueuesStatisticsReader.java\n@@ -35,6 +35,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      *\n      * @param pathWorkspaceSid The SID of the Workspace with the TaskQueues to read\n      */\n+\n+\n     public TaskQueuesStatisticsReader(final String pathWorkspaceSid) {\n         this.pathWorkspaceSid = pathWorkspaceSid;\n     }\n@@ -46,6 +48,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param endDate Only calculate statistics from on or before this date\n      * @return this\n      */\n+\n+\n     public TaskQueuesStatisticsReader setEndDate(final DateTime endDate) {\n         this.endDate = endDate;\n         return this;\n@@ -57,6 +61,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param friendlyName The friendly_name of the TaskQueue statistics to read\n      * @return this\n      */\n+\n+\n     public TaskQueuesStatisticsReader setFriendlyName(final String friendlyName) {\n         this.friendlyName = friendlyName;\n         return this;\n@@ -69,6 +75,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param minutes Only calculate statistics since this many minutes in the past\n      * @return this\n      */\n+\n+\n     public TaskQueuesStatisticsReader setMinutes(final Integer minutes) {\n         this.minutes = minutes;\n         return this;\n@@ -81,6 +89,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param startDate Only calculate statistics from on or after this date\n      * @return this\n      */\n+\n+\n     public TaskQueuesStatisticsReader setStartDate(final DateTime startDate) {\n         this.startDate = startDate;\n         return this;\n@@ -93,6 +103,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param taskChannel Only calculate statistics on this TaskChannel.\n      * @return this\n      */\n+\n+\n     public TaskQueuesStatisticsReader setTaskChannel(final String taskChannel) {\n         this.taskChannel = taskChannel;\n         return this;\n@@ -108,6 +120,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      *                        thresholds to calculate statistics on\n      * @return this\n      */\n+\n+\n     public TaskQueuesStatisticsReader setSplitByWaitTime(final String splitByWaitTime) {\n         this.splitByWaitTime = splitByWaitTime;\n         return this;\n@@ -119,6 +133,7 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param client TwilioRestClient with which to make the request\n      * @return TaskQueuesStatistics ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<TaskQueuesStatistics> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -130,14 +145,15 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param client TwilioRestClient with which to make the request\n      * @return TaskQueuesStatistics ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<TaskQueuesStatistics> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.TASKROUTER.toString(),\n-            \"/v1/Workspaces/\" + this.pathWorkspaceSid + \"/TaskQueues/Statistics\",\n-            client.getRegion()\n+                              HttpMethod.GET,\n+                              Domains.TASKROUTER.toString(),\n+                              \"/v1/Workspaces/\" + this.pathWorkspaceSid + \"/TaskQueues/Statistics\",\n+                              client.getRegion()\n         );\n \n         addQueryParams(request);\n@@ -151,14 +167,12 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param client TwilioRestClient with which to make the request\n      * @return TaskQueuesStatistics ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<TaskQueuesStatistics> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<TaskQueuesStatistics> getPage(final String targetUrl,\n+                                              final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -169,15 +183,13 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<TaskQueuesStatistics> nextPage(final Page<TaskQueuesStatistics> page,\n                                                final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.TASKROUTER.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getNextPageUrl(Domains.TASKROUTER.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -189,15 +201,13 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<TaskQueuesStatistics> previousPage(final Page<TaskQueuesStatistics> page,\n                                                    final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.TASKROUTER.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getPreviousPageUrl(Domains.TASKROUTER.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -209,9 +219,11 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<TaskQueuesStatistics> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<TaskQueuesStatistics> pageForRequest(final TwilioRestClient client,\n+                                                      final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"TaskQueuesStatistics read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -219,7 +231,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -227,7 +240,7 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n             response.getContent(),\n             TaskQueuesStatistics.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -235,6 +248,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (endDate != null) {\n             request.addQueryParam(\"EndDate\", endDate.toString());\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/921/TaskQueuesStatisticsReader.java\nindex 49a11df9033..3cd6138725f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/921/TaskQueuesStatisticsReader.java\n@@ -219,7 +219,7 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/921/TaskQueuesStatisticsReader.java\nindex 49a11df9033..5115c124d86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/921/TaskQueuesStatisticsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/921/TaskQueuesStatisticsReader.java\n@@ -219,7 +219,8 @@ public class TaskQueuesStatisticsReader extends Reader<TaskQueuesStatistics> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
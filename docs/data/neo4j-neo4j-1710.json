{
    "project_name": "neo4j-neo4j",
    "error_id": "1710",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1710/HelloMessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1710/HelloMessageDecoder.java\nindex e4471abe3e0..6b43421d0a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1710/HelloMessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1710/HelloMessageDecoder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v3.messaging.decoder;\n \n import java.io.IOException;\n@@ -36,7 +37,7 @@ public class HelloMessageDecoder implements RequestMessageDecoder\n {\n     private final BoltResponseHandler responseHandler;\n \n-    public HelloMessageDecoder( BoltResponseHandler responseHandler )\n+    public HelloMessageDecoder(BoltResponseHandler responseHandler)\n     {\n         this.responseHandler = responseHandler;\n     }\n@@ -54,33 +55,33 @@ public class HelloMessageDecoder implements RequestMessageDecoder\n     }\n \n     @Override\n-    public RequestMessage decode( Neo4jPack.Unpacker unpacker ) throws IOException\n+    public RequestMessage decode(Neo4jPack.Unpacker unpacker) throws IOException\n     {\n-        Map<String,Object> meta = readMetaDataMap( unpacker );\n-        assertUserAgentPresent( meta );\n-        return new HelloMessage( meta );\n+        Map<String, Object> meta = readMetaDataMap(unpacker);\n+        assertUserAgentPresent(meta);\n+        return new HelloMessage(meta);\n     }\n \n-    protected static Map<String,Object> readMetaDataMap( Neo4jPack.Unpacker unpacker ) throws IOException\n+    protected static Map<String, Object> readMetaDataMap(Neo4jPack.Unpacker unpacker) throws IOException\n     {\n         var metaDataMapValue = unpacker.unpackMap();\n         var writer = new PrimitiveOnlyValueWriter();\n-        var metaDataMap = new HashMap<String,Object>( metaDataMapValue.size() );\n-        metaDataMapValue.foreach( ( key, value ) ->\n+        var metaDataMap = new HashMap<String, Object>(metaDataMapValue.size());\n+        metaDataMapValue.foreach((key, value) ->\n         {\n-            Object convertedValue = AuthToken.containsSensitiveInformation( key ) ?\n-                                    writer.sensitiveValueAsObject( value ) :\n-                                    writer.valueAsObject( value );\n-            metaDataMap.put( key, convertedValue );\n-        } );\n+            Object convertedValue = AuthToken.containsSensitiveInformation(key) ?\n+              writer.sensitiveValueAsObject(value) :\n+              writer.valueAsObject(value);\n+            metaDataMap.put(key, convertedValue);\n+        });\n         return metaDataMap;\n     }\n \n-    private static void assertUserAgentPresent( Map<String,Object> metaData ) throws BoltIOException\n+    private static void assertUserAgentPresent(Map<String, Object> metaData) throws BoltIOException\n     {\n-        if ( !metaData.containsKey( \"user_agent\" ) )\n+        if (!metaData.containsKey(\"user_agent\"))\n         {\n-            throw new BoltIOException( Status.Request.Invalid, \"Expected \\\"user_agent\\\" in metadata\" );\n+            throw new BoltIOException(Status.Request.Invalid, \"Expected \\\"user_agent\\\" in metadata\");\n         }\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1710/HelloMessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1710/HelloMessageDecoder.java\nindex e4471abe3e0..d6be2b49fc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1710/HelloMessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1710/HelloMessageDecoder.java\n@@ -83,4 +83,4 @@ public class HelloMessageDecoder implements RequestMessageDecoder\n             throw new BoltIOException( Status.Request.Invalid, \"Expected \\\"user_agent\\\" in metadata\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
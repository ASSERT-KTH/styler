{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4217",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4217/TemporalIndexPopulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4217/TemporalIndexPopulator.java\nindex 73a73eed4fd..130b5ca84ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4217/TemporalIndexPopulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4217/TemporalIndexPopulator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -47,179 +48,179 @@ import static org.neo4j.kernel.impl.index.schema.fusion.FusionIndexSampler.combi\n \n class TemporalIndexPopulator extends TemporalIndexCache<TemporalIndexPopulator.PartPopulator<?>> implements IndexPopulator\n {\n-    TemporalIndexPopulator( long indexId,\n-                            SchemaIndexDescriptor descriptor,\n-                            IndexSamplingConfig samplingConfig,\n-                            TemporalIndexFiles temporalIndexFiles,\n-                            PageCache pageCache,\n-                            FileSystemAbstraction fs,\n-                            IndexProvider.Monitor monitor )\n+  TemporalIndexPopulator(long indexId,\n+                         SchemaIndexDescriptor descriptor,\n+                         IndexSamplingConfig samplingConfig,\n+                         TemporalIndexFiles temporalIndexFiles,\n+                         PageCache pageCache,\n+                         FileSystemAbstraction fs,\n+                         IndexProvider.Monitor monitor)\n+  {\n+    super(new PartFactory(pageCache, fs, temporalIndexFiles, indexId, descriptor, samplingConfig, monitor));\n+  }\n+\n+  @Override\n+  public synchronized void create() throws IOException\n+  {\n+    forAll(NativeSchemaIndexPopulator::clear, this);\n+\n+    // We must make sure to have at least one subindex:\n+    // to be able to persist failure and to have the right state in the beginning\n+    if (!this.iterator().hasNext())\n     {\n-        super( new PartFactory( pageCache, fs, temporalIndexFiles, indexId, descriptor, samplingConfig, monitor ) );\n+      select(ValueGroup.DATE);\n     }\n-\n-    @Override\n-    public synchronized void create() throws IOException\n+  }\n+\n+  @Override\n+  public synchronized void drop() throws IOException\n+  {\n+    forAll(NativeSchemaIndexPopulator::drop, this);\n+  }\n+\n+  @Override\n+  public void add(Collection<? extends IndexEntryUpdate<?>> updates) throws IndexEntryConflictException, IOException\n+  {\n+    Map<ValueGroup, List<IndexEntryUpdate<?>>> batchMap = new HashMap<>();\n+    for (IndexEntryUpdate<?> update : updates)\n     {\n-        forAll( NativeSchemaIndexPopulator::clear, this );\n-\n-        // We must make sure to have at least one subindex:\n-        // to be able to persist failure and to have the right state in the beginning\n-        if ( !this.iterator().hasNext() )\n-        {\n-            select( ValueGroup.DATE );\n-        }\n+      ValueGroup valueGroup = update.values()[0].valueGroup();\n+      List<IndexEntryUpdate<?>> batch = batchMap.computeIfAbsent(valueGroup, k -> new ArrayList<>());\n+      batch.add(update);\n     }\n-\n-    @Override\n-    public synchronized void drop() throws IOException\n+    for (Map.Entry<ValueGroup, List<IndexEntryUpdate<?>>> entry : batchMap.entrySet())\n+    {\n+      select(entry.getKey()).add(entry.getValue());\n+    }\n+  }\n+\n+  @Override\n+  public void verifyDeferredConstraints(PropertyAccessor propertyAccessor)\n+      throws IndexEntryConflictException, IOException\n+  {\n+    // No-op, uniqueness is checked for each update in add(IndexEntryUpdate)\n+  }\n+\n+  @Override\n+  public IndexUpdater newPopulatingUpdater(PropertyAccessor accessor)\n+  {\n+    return new TemporalIndexPopulatingUpdater(this, accessor);\n+  }\n+\n+  @Override\n+  public synchronized void close(boolean populationCompletedSuccessfully) throws IOException\n+  {\n+    closeInstantiateCloseLock();\n+    for (NativeSchemaIndexPopulator part : this)\n     {\n-        forAll( NativeSchemaIndexPopulator::drop, this );\n+      part.close(populationCompletedSuccessfully);\n     }\n+  }\n \n-    @Override\n-    public void add( Collection<? extends IndexEntryUpdate<?>> updates ) throws IndexEntryConflictException, IOException\n+  @Override\n+  public synchronized void markAsFailed(String failure)\n+  {\n+    for (NativeSchemaIndexPopulator part : this)\n+    {\n+      part.markAsFailed(failure);\n+    }\n+  }\n+\n+  @Override\n+  public void includeSample(IndexEntryUpdate<?> update)\n+  {\n+    Value[] values = update.values();\n+    assert values.length == 1;\n+    uncheckedSelect(values[0].valueGroup()).includeSample(update);\n+  }\n+\n+  @Override\n+  public IndexSample sampleResult()\n+  {\n+    IndexSample[] indexSamples = StreamSupport.stream(this.spliterator(), false)\n+        .map(PartPopulator::sampleResult)\n+        .toArray(IndexSample[]::new);\n+    return combineSamples(indexSamples);\n+  }\n+\n+  static class PartPopulator<KEY extends NativeSchemaKey<KEY>> extends NativeSchemaIndexPopulator<KEY, NativeSchemaValue>\n+  {\n+    PartPopulator(PageCache pageCache, FileSystemAbstraction fs, TemporalIndexFiles.FileLayout<KEY> fileLayout,\n+                  IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig)\n     {\n-        Map<ValueGroup,List<IndexEntryUpdate<?>>> batchMap = new HashMap<>();\n-        for ( IndexEntryUpdate<?> update : updates )\n-        {\n-            ValueGroup valueGroup = update.values()[0].valueGroup();\n-            List<IndexEntryUpdate<?>> batch = batchMap.computeIfAbsent( valueGroup, k -> new ArrayList<>() );\n-            batch.add( update );\n-        }\n-        for ( Map.Entry<ValueGroup,List<IndexEntryUpdate<?>>> entry : batchMap.entrySet() )\n-        {\n-            select( entry.getKey() ).add( entry.getValue() );\n-        }\n+      super(pageCache, fs, fileLayout.indexFile, fileLayout.layout, monitor, descriptor, indexId, samplingConfig);\n     }\n \n     @Override\n-    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor )\n-            throws IndexEntryConflictException, IOException\n+    IndexReader newReader()\n     {\n-        // No-op, uniqueness is checked for each update in add(IndexEntryUpdate)\n+      return new TemporalIndexPartReader<>(tree, layout, samplingConfig, descriptor);\n+    }\n+  }\n+\n+  static class PartFactory implements TemporalIndexCache.Factory<PartPopulator<?>>\n+  {\n+    private final PageCache pageCache;\n+    private final FileSystemAbstraction fs;\n+    private final TemporalIndexFiles temporalIndexFiles;\n+    private final long indexId;\n+    private final SchemaIndexDescriptor descriptor;\n+    private final IndexSamplingConfig samplingConfig;\n+    private final IndexProvider.Monitor monitor;\n+\n+    PartFactory(PageCache pageCache, FileSystemAbstraction fs, TemporalIndexFiles temporalIndexFiles, long indexId,\n+                SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig, IndexProvider.Monitor monitor)\n+    {\n+      this.pageCache = pageCache;\n+      this.fs = fs;\n+      this.temporalIndexFiles = temporalIndexFiles;\n+      this.indexId = indexId;\n+      this.descriptor = descriptor;\n+      this.samplingConfig = samplingConfig;\n+      this.monitor = monitor;\n     }\n \n     @Override\n-    public IndexUpdater newPopulatingUpdater( PropertyAccessor accessor )\n+    public PartPopulator<?> newDate() throws IOException\n     {\n-        return new TemporalIndexPopulatingUpdater( this, accessor );\n+      return create(temporalIndexFiles.date());\n     }\n \n     @Override\n-    public synchronized void close( boolean populationCompletedSuccessfully ) throws IOException\n+    public PartPopulator<?> newLocalDateTime() throws IOException\n     {\n-        closeInstantiateCloseLock();\n-        for ( NativeSchemaIndexPopulator part : this )\n-        {\n-            part.close( populationCompletedSuccessfully );\n-        }\n+      return create(temporalIndexFiles.localDateTime());\n     }\n \n     @Override\n-    public synchronized void markAsFailed( String failure )\n+    public PartPopulator<?> newZonedDateTime() throws IOException\n     {\n-        for ( NativeSchemaIndexPopulator part : this )\n-        {\n-            part.markAsFailed( failure );\n-        }\n+      return create(temporalIndexFiles.zonedDateTime());\n     }\n \n     @Override\n-    public void includeSample( IndexEntryUpdate<?> update )\n+    public PartPopulator<?> newLocalTime() throws IOException\n     {\n-        Value[] values = update.values();\n-        assert values.length == 1;\n-        uncheckedSelect( values[0].valueGroup() ).includeSample( update );\n+      return create(temporalIndexFiles.localTime());\n     }\n \n     @Override\n-    public IndexSample sampleResult()\n+    public PartPopulator<?> newZonedTime() throws IOException\n     {\n-        IndexSample[] indexSamples = StreamSupport.stream( this.spliterator(), false )\n-                .map( PartPopulator::sampleResult )\n-                .toArray( IndexSample[]::new );\n-        return combineSamples( indexSamples );\n+      return create(temporalIndexFiles.zonedTime());\n     }\n \n-    static class PartPopulator<KEY extends NativeSchemaKey<KEY>> extends NativeSchemaIndexPopulator<KEY, NativeSchemaValue>\n+    @Override\n+    public PartPopulator<?> newDuration() throws IOException\n     {\n-        PartPopulator( PageCache pageCache, FileSystemAbstraction fs, TemporalIndexFiles.FileLayout<KEY> fileLayout,\n-                       IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig )\n-        {\n-            super( pageCache, fs, fileLayout.indexFile, fileLayout.layout, monitor, descriptor, indexId, samplingConfig );\n-        }\n-\n-        @Override\n-        IndexReader newReader()\n-        {\n-            return new TemporalIndexPartReader<>( tree, layout, samplingConfig, descriptor );\n-        }\n+      return create(temporalIndexFiles.duration());\n     }\n \n-    static class PartFactory implements TemporalIndexCache.Factory<PartPopulator<?>>\n+    private <KEY extends NativeSchemaKey<KEY>> PartPopulator<KEY> create(TemporalIndexFiles.FileLayout<KEY> fileLayout) throws IOException\n     {\n-        private final PageCache pageCache;\n-        private final FileSystemAbstraction fs;\n-        private final TemporalIndexFiles temporalIndexFiles;\n-        private final long indexId;\n-        private final SchemaIndexDescriptor descriptor;\n-        private final IndexSamplingConfig samplingConfig;\n-        private final IndexProvider.Monitor monitor;\n-\n-        PartFactory( PageCache pageCache, FileSystemAbstraction fs, TemporalIndexFiles temporalIndexFiles, long indexId,\n-                     SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig, IndexProvider.Monitor monitor )\n-        {\n-            this.pageCache = pageCache;\n-            this.fs = fs;\n-            this.temporalIndexFiles = temporalIndexFiles;\n-            this.indexId = indexId;\n-            this.descriptor = descriptor;\n-            this.samplingConfig = samplingConfig;\n-            this.monitor = monitor;\n-        }\n-\n-        @Override\n-        public PartPopulator<?> newDate() throws IOException\n-        {\n-            return create( temporalIndexFiles.date() );\n-        }\n-\n-        @Override\n-        public PartPopulator<?> newLocalDateTime() throws IOException\n-        {\n-            return create( temporalIndexFiles.localDateTime() );\n-        }\n-\n-        @Override\n-        public PartPopulator<?> newZonedDateTime() throws IOException\n-        {\n-            return create( temporalIndexFiles.zonedDateTime() );\n-        }\n-\n-        @Override\n-        public PartPopulator<?> newLocalTime() throws IOException\n-        {\n-            return create( temporalIndexFiles.localTime() );\n-        }\n-\n-        @Override\n-        public PartPopulator<?> newZonedTime() throws IOException\n-        {\n-            return create( temporalIndexFiles.zonedTime() );\n-        }\n-\n-        @Override\n-        public PartPopulator<?> newDuration() throws IOException\n-        {\n-            return create( temporalIndexFiles.duration() );\n-        }\n-\n-        private <KEY extends NativeSchemaKey<KEY>> PartPopulator<KEY> create( TemporalIndexFiles.FileLayout<KEY> fileLayout ) throws IOException\n-        {\n-            PartPopulator<KEY> populator = new PartPopulator<>( pageCache, fs, fileLayout, monitor, descriptor, indexId, samplingConfig );\n-            populator.create();\n-            return populator;\n-        }\n+      PartPopulator<KEY> populator = new PartPopulator<>(pageCache, fs, fileLayout, monitor, descriptor, indexId, samplingConfig);\n+      populator.create();\n+      return populator;\n     }\n+  }\n }\n",
            "diff_size": 234
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
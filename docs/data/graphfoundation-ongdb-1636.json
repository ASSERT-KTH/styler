{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1636",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1636/TransactionLogFileInformation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1636/TransactionLogFileInformation.java\nindex b4fba853245..4b79cbe8d4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1636/TransactionLogFileInformation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1636/TransactionLogFileInformation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.files;\n \n import java.io.IOException;\n@@ -33,103 +34,103 @@ import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_I\n \n public class TransactionLogFileInformation implements LogFileInformation\n {\n-    private final LogFiles logFiles;\n-    private final LogHeaderCache logHeaderCache;\n-    private final TransactionLogFileTimestampMapper logFileTimestampMapper;\n-    private final TransactionLogFilesContext logFileContext;\n-\n-    TransactionLogFileInformation( LogFiles logFiles, LogHeaderCache logHeaderCache, TransactionLogFilesContext context )\n+  private final LogFiles logFiles;\n+  private final LogHeaderCache logHeaderCache;\n+  private final TransactionLogFileTimestampMapper logFileTimestampMapper;\n+  private final TransactionLogFilesContext logFileContext;\n+\n+  TransactionLogFileInformation(LogFiles logFiles, LogHeaderCache logHeaderCache, TransactionLogFilesContext context)\n+  {\n+    this.logFiles = logFiles;\n+    this.logHeaderCache = logHeaderCache;\n+    this.logFileContext = context;\n+    this.logFileTimestampMapper = new TransactionLogFileTimestampMapper(logFiles, context.getLogEntryReader());\n+  }\n+\n+  @Override\n+  public long getFirstExistingEntryId() throws IOException\n+  {\n+    long version = logFiles.getHighestLogVersion();\n+    long candidateFirstTx = -1;\n+    while (logFiles.versionExists(version))\n     {\n-        this.logFiles = logFiles;\n-        this.logHeaderCache = logHeaderCache;\n-        this.logFileContext = context;\n-        this.logFileTimestampMapper = new TransactionLogFileTimestampMapper( logFiles, context.getLogEntryReader() );\n+      candidateFirstTx = getFirstEntryId(version);\n+      version--;\n     }\n-\n-    @Override\n-    public long getFirstExistingEntryId() throws IOException\n-    {\n-        long version = logFiles.getHighestLogVersion();\n-        long candidateFirstTx = -1;\n-        while ( logFiles.versionExists( version ) )\n-        {\n-            candidateFirstTx = getFirstEntryId( version );\n-            version--;\n-        }\n-        version++; // the loop above goes back one version too far.\n-\n-        // OK, so we now have the oldest existing log version here. Open it and see if there's any transaction\n-        // in there. If there is then that transaction is the first one that we have.\n-        return logFiles.hasAnyEntries( version ) ? candidateFirstTx : -1;\n+    version++; // the loop above goes back one version too far.\n+\n+    // OK, so we now have the oldest existing log version here. Open it and see if there's any transaction\n+    // in there. If there is then that transaction is the first one that we have.\n+    return logFiles.hasAnyEntries(version) ? candidateFirstTx : -1;\n+  }\n+\n+  @Override\n+  public long getFirstEntryId(long version) throws IOException\n+  {\n+    Long logHeader = logHeaderCache.getLogHeader(version);\n+    if (logHeader != null)\n+    {   // It existed in cache\n+      return logHeader + 1;\n     }\n \n-    @Override\n-    public long getFirstEntryId( long version ) throws IOException\n+    // Wasn't cached, go look for it\n+    if (logFiles.versionExists(version))\n     {\n-        Long logHeader = logHeaderCache.getLogHeader( version );\n-        if ( logHeader != null )\n-        {   // It existed in cache\n-            return logHeader + 1;\n-        }\n-\n-        // Wasn't cached, go look for it\n-        if ( logFiles.versionExists( version ) )\n-        {\n-            long previousVersionLastCommittedTx = logFiles.extractHeader( version ).lastCommittedTxId;\n-            logHeaderCache.putHeader( version, previousVersionLastCommittedTx );\n-            return previousVersionLastCommittedTx + 1;\n-        }\n-        return -1;\n+      long previousVersionLastCommittedTx = logFiles.extractHeader(version).lastCommittedTxId;\n+      logHeaderCache.putHeader(version, previousVersionLastCommittedTx);\n+      return previousVersionLastCommittedTx + 1;\n     }\n+    return -1;\n+  }\n+\n+  @Override\n+  public long getLastEntryId()\n+  {\n+    return logFileContext.getLastCommittedTransactionId();\n+  }\n+\n+  @Override\n+  public long getFirstStartRecordTimestamp(long version) throws IOException\n+  {\n+    return logFileTimestampMapper.getTimestampForVersion(version);\n+  }\n+\n+  @Override\n+  public boolean transactionExistsOnDisk(long transactionId) throws IOException\n+  {\n+    long lowestOnDisk = getFirstExistingEntryId();\n+    long highestOnDisk = getLastEntryId();\n+    return (transactionId >= BASE_TX_ID) // It's a real transaction id\n+        && (transactionId >= lowestOnDisk && transactionId <= highestOnDisk); // and it's in the on-disk range\n+  }\n+\n+  private static class TransactionLogFileTimestampMapper\n+  {\n \n-    @Override\n-    public long getLastEntryId()\n-    {\n-        return logFileContext.getLastCommittedTransactionId();\n-    }\n-\n-    @Override\n-    public long getFirstStartRecordTimestamp( long version ) throws IOException\n-    {\n-        return logFileTimestampMapper.getTimestampForVersion( version );\n-    }\n+    private final LogFiles logFiles;\n+    private final LogEntryReader<ReadableLogChannel> logEntryReader;\n \n-    @Override\n-    public boolean transactionExistsOnDisk( long transactionId ) throws IOException\n+    TransactionLogFileTimestampMapper(LogFiles logFiles, LogEntryReader<ReadableLogChannel> logEntryReader)\n     {\n-        long lowestOnDisk = getFirstExistingEntryId();\n-        long highestOnDisk = getLastEntryId();\n-        return ( transactionId >= BASE_TX_ID ) // It's a real transaction id\n-                && ( transactionId >= lowestOnDisk && transactionId <= highestOnDisk ); // and it's in the on-disk range\n+      this.logFiles = logFiles;\n+      this.logEntryReader = logEntryReader;\n     }\n \n-    private static class TransactionLogFileTimestampMapper\n+    long getTimestampForVersion(long version) throws IOException\n     {\n-\n-        private final LogFiles logFiles;\n-        private final LogEntryReader<ReadableLogChannel> logEntryReader;\n-\n-        TransactionLogFileTimestampMapper( LogFiles logFiles, LogEntryReader<ReadableLogChannel> logEntryReader )\n-        {\n-            this.logFiles = logFiles;\n-            this.logEntryReader = logEntryReader;\n-        }\n-\n-        long getTimestampForVersion( long version ) throws IOException\n+      LogPosition position = LogPosition.start(version);\n+      try (ReadableLogChannel channel = logFiles.getLogFile().getReader(position))\n+      {\n+        LogEntry entry;\n+        while ((entry = logEntryReader.readLogEntry(channel)) != null)\n         {\n-            LogPosition position = LogPosition.start( version );\n-            try ( ReadableLogChannel channel = logFiles.getLogFile().getReader( position ) )\n-            {\n-                LogEntry entry;\n-                while ( (entry = logEntryReader.readLogEntry( channel )) != null )\n-                {\n-                    if ( entry instanceof LogEntryStart )\n-                    {\n-                        return entry.<LogEntryStart>as().getTimeWritten();\n-                    }\n-                }\n-            }\n-            return -1;\n+          if (entry instanceof LogEntryStart)\n+          {\n+            return entry.<LogEntryStart>as().getTimeWritten();\n+          }\n         }\n+      }\n+      return -1;\n     }\n+  }\n }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "128",
                    "column": "52",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1636/TransactionLogFileInformation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1636/TransactionLogFileInformation.java\nindex b4fba853245..05a6a97a2d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1636/TransactionLogFileInformation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1636/TransactionLogFileInformation.java\n@@ -68,7 +68,8 @@ public class TransactionLogFileInformation implements LogFileInformation\n     {\n         Long logHeader = logHeaderCache.getLogHeader( version );\n         if ( logHeader != null )\n-        {   // It existed in cache\n+        {\n+    // It existed in cache\n             return logHeader + 1;\n         }\n \n@@ -105,8 +106,7 @@ public class TransactionLogFileInformation implements LogFileInformation\n \n     private static class TransactionLogFileTimestampMapper\n     {\n-\n-        private final LogFiles logFiles;\n+    private final LogFiles logFiles;\n         private final LogEntryReader<ReadableLogChannel> logEntryReader;\n \n         TransactionLogFileTimestampMapper( LogFiles logFiles, LogEntryReader<ReadableLogChannel> logEntryReader )\n@@ -125,11 +125,11 @@ public class TransactionLogFileInformation implements LogFileInformation\n                 {\n                     if ( entry instanceof LogEntryStart )\n                     {\n-                        return entry.<LogEntryStart>as().getTimeWritten();\n+                        return entry.<LogEntryStart> as().getTimeWritten();\n                     }\n                 }\n             }\n             return -1;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "342",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    private Map<String, String> properties;\n\n    @Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n    private ArrayList<Comment> comments;\n\n    public byte[] getContent() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/342/Resource.java\nindex beaa1655cab..4ec924434c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/342/Resource.java\n@@ -25,7 +25,7 @@ public class Resource extends HierarchyNode {\n     @Collection(jcrName = \"key*\", collectionConverter = ResidualPropertiesCollectionConverterImpl.class)\n     private Map<String, String> properties;\n \n-    @Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n+@Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n     private ArrayList<Comment> comments;\n \n     public byte[] getContent() {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/342/Resource.java\nindex beaa1655cab..89ad034df05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/342/Resource.java\n@@ -13,80 +13,80 @@ import org.apache.jackrabbit.ocm.mapper.impl.annotation.Node;\n @Node(jcrType = \"registry:resource\", extend = HierarchyNode.class)\n public class Resource extends HierarchyNode {\n \n-    @Field(jcrName = \"registry:content\")\n-    private byte[] content;\n+  @Field(jcrName = \"registry:content\")\n+  private byte[] content;\n \n-    @Field(jcrName = \"registry:description\")\n-    private String description;\n+  @Field(jcrName = \"registry:description\")\n+  private String description;\n \n-    @Field(jcrName = \"registry:mediaType\")\n-    private String mediaType;\n+  @Field(jcrName = \"registry:mediaType\")\n+  private String mediaType;\n \n-    @Collection(jcrName = \"key*\", collectionConverter = ResidualPropertiesCollectionConverterImpl.class)\n-    private Map<String, String> properties;\n+  @Collection(jcrName = \"key*\", collectionConverter = ResidualPropertiesCollectionConverterImpl.class)\n+  private Map<String, String> properties;\n \n-    @Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n-    private ArrayList<Comment> comments;\n+  @Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n+  private ArrayList<Comment> comments;\n \n-    public byte[] getContent() {\n-        return content;\n-    }\n+  public byte[] getContent() {\n+    return content;\n+  }\n \n-    public String getDescription() {\n-        return description;\n-    }\n+  public String getDescription() {\n+    return description;\n+  }\n \n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n+  public void setDescription(String description) {\n+    this.description = description;\n+  }\n \n-    public void setContent(byte[] content) {\n-        this.content = content;\n-    }\n+  public void setContent(byte[] content) {\n+    this.content = content;\n+  }\n \n-    public Map getProperties() {\n-        return properties;\n-    }\n+  public Map getProperties() {\n+    return properties;\n+  }\n \n-    public void setProperties(Map properties) {\n-        this.properties = properties;\n-    }\n+  public void setProperties(Map properties) {\n+    this.properties = properties;\n+  }\n \n-    public void setProperty(String key, String value) {\n-        if (properties == null) {\n-            properties = new HashMap<String, String>();\n-        }\n-        properties.put(key, value);\n+  public void setProperty(String key, String value) {\n+    if (properties == null) {\n+      properties = new HashMap<String, String>();\n     }\n+    properties.put(key, value);\n+  }\n \n-    public String getProperty(String key) {\n-        if (properties == null) {\n-            return null;\n-        }\n-        return (String) properties.get(key);\n+  public String getProperty(String key) {\n+    if (properties == null) {\n+      return null;\n     }\n+    return (String) properties.get(key);\n+  }\n \n-    public ArrayList<Comment> getComments() {\n-        return comments;\n-    }\n+  public ArrayList<Comment> getComments() {\n+    return comments;\n+  }\n \n-    public void setComments(ArrayList<Comment> comments) {\n-        this.comments = comments;\n-    }\n+  public void setComments(ArrayList<Comment> comments) {\n+    this.comments = comments;\n+  }\n \n-    public void addComment(Comment comment) {\n-        if (comments == null) {\n-            comments = new ArrayList<Comment>();\n-        }\n-        comments.add(comment);\n+  public void addComment(Comment comment) {\n+    if (comments == null) {\n+      comments = new ArrayList<Comment>();\n     }\n+    comments.add(comment);\n+  }\n \n-    public String getMediaType() {\n-        return mediaType;\n-    }\n+  public String getMediaType() {\n+    return mediaType;\n+  }\n \n-    public void setMediaType(String mediaType) {\n-        this.mediaType = mediaType;\n-    }\n+  public void setMediaType(String mediaType) {\n+    this.mediaType = mediaType;\n+  }\n \n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/342/Resource.java\nindex beaa1655cab..c6add812d59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/342/Resource.java\n@@ -89,4 +89,4 @@ public class Resource extends HierarchyNode {\n         this.mediaType = mediaType;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/342/Resource.java\nindex beaa1655cab..d3181d95af0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/342/Resource.java\n@@ -25,8 +25,8 @@ public class Resource extends HierarchyNode {\n     @Collection(jcrName = \"key*\", collectionConverter = ResidualPropertiesCollectionConverterImpl.class)\n     private Map<String, String> properties;\n \n-    @Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n-    private ArrayList<Comment> comments;\n+@Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n+        private ArrayList<Comment> comments;\n \n     public byte[] getContent() {\n         return content;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/342/Resource.java\nindex beaa1655cab..4ec924434c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/342/Resource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/342/Resource.java\n@@ -25,7 +25,7 @@ public class Resource extends HierarchyNode {\n     @Collection(jcrName = \"key*\", collectionConverter = ResidualPropertiesCollectionConverterImpl.class)\n     private Map<String, String> properties;\n \n-    @Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n+@Collection(autoUpdate = false, elementClassName = Comment.class, collectionConverter = NTCollectionConverterImpl.class)\n     private ArrayList<Comment> comments;\n \n     public byte[] getContent() {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
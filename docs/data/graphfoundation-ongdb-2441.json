{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2441",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "121",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "121",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2441/TimeZones.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2441/TimeZones.java\nindex e97a0ee616b..d3fbb6c9ade 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2441/TimeZones.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2441/TimeZones.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.io.BufferedReader;\n@@ -34,103 +35,100 @@ import static java.util.Collections.unmodifiableSet;\n \n public class TimeZones\n {\n-    /**\n-     * Prevent instance creation.\n-     */\n-    private TimeZones()\n-    {\n-    }\n+  /**\n+   * Prevent instance creation.\n+   */\n+  private TimeZones()\n+  {\n+  }\n \n-    private static final List<String> TIME_ZONE_SHORT_TO_STRING = new ArrayList<>( 1024 );\n-    private static final Map<String,Short> TIME_ZONE_STRING_TO_SHORT = new HashMap<>( 1024 );\n+  private static final List<String> TIME_ZONE_SHORT_TO_STRING = new ArrayList<>(1024);\n+  private static final Map<String, Short> TIME_ZONE_STRING_TO_SHORT = new HashMap<>(1024);\n \n-    private static final long MIN_ZONE_OFFSET_SECONDS = -18 * 3600;\n-    private static final long MAX_ZONE_OFFSET_SECONDS = 18 * 3600;\n+  private static final long MIN_ZONE_OFFSET_SECONDS = -18 * 3600;\n+  private static final long MAX_ZONE_OFFSET_SECONDS = 18 * 3600;\n \n-    public static boolean validZoneOffset( int zoneOffsetSeconds )\n-    {\n-        return zoneOffsetSeconds >= MIN_ZONE_OFFSET_SECONDS && zoneOffsetSeconds <= MAX_ZONE_OFFSET_SECONDS;\n-    }\n+  public static boolean validZoneOffset(int zoneOffsetSeconds)\n+  {\n+    return zoneOffsetSeconds >= MIN_ZONE_OFFSET_SECONDS && zoneOffsetSeconds <= MAX_ZONE_OFFSET_SECONDS;\n+  }\n \n-    public static boolean validZoneId( short zoneId )\n-    {\n-        return zoneId >= 0 && zoneId < TIME_ZONE_SHORT_TO_STRING.size();\n-    }\n+  public static boolean validZoneId(short zoneId)\n+  {\n+    return zoneId >= 0 && zoneId < TIME_ZONE_SHORT_TO_STRING.size();\n+  }\n \n-    public static final String LATEST_SUPPORTED_IANA_VERSION;\n+  public static final String LATEST_SUPPORTED_IANA_VERSION;\n \n-    /**\n-     * @throws IllegalArgumentException if tzid is not in the file\n-     */\n-    public static short map( String tzid )\n+  /**\n+   * @throws IllegalArgumentException if tzid is not in the file\n+   */\n+  public static short map(String tzid)\n+  {\n+    if (!TIME_ZONE_STRING_TO_SHORT.containsKey(tzid))\n     {\n-        if ( !TIME_ZONE_STRING_TO_SHORT.containsKey( tzid ) )\n-        {\n-            throw new IllegalArgumentException( String.format( \"unknown tzid '%s'\", tzid ) );\n-        }\n-        return TIME_ZONE_STRING_TO_SHORT.get( tzid );\n+      throw new IllegalArgumentException(String.format(\"unknown tzid '%s'\", tzid));\n     }\n+    return TIME_ZONE_STRING_TO_SHORT.get(tzid);\n+  }\n \n-    public static String map( short offset )\n-    {\n-        return TIME_ZONE_SHORT_TO_STRING.get( offset );\n-    }\n+  public static String map(short offset)\n+  {\n+    return TIME_ZONE_SHORT_TO_STRING.get(offset);\n+  }\n \n-    public static Set<String> supportedTimeZones()\n-    {\n-        return unmodifiableSet( TIME_ZONE_STRING_TO_SHORT.keySet() );\n-    }\n+  public static Set<String> supportedTimeZones()\n+  {\n+    return unmodifiableSet(TIME_ZONE_STRING_TO_SHORT.keySet());\n+  }\n \n-    static\n-    {\n-        String latestVersion = \"\";\n-        Pattern version = Pattern.compile( \"# tzdata([0-9]{4}[a-z])\" );\n-        Map<String,String> oldToNewName = new HashMap<>( 1024 );\n+  static\n+  {\n+    String latestVersion = \"\";\n+    Pattern version = Pattern.compile(\"# tzdata([0-9]{4}[a-z])\");\n+    Map<String, String> oldToNewName = new HashMap<>(1024);\n \n-        try ( BufferedReader reader = new BufferedReader( new InputStreamReader( TimeZones.class.getResourceAsStream( \"/TZIDS\" ) ) ) )\n+    try (BufferedReader reader = new BufferedReader(new InputStreamReader(TimeZones.class.getResourceAsStream(\"/TZIDS\"))))\n+    {\n+      for (String line; (line = reader.readLine()) != null; )\n+      {\n+        if (line.startsWith(\"//\") || line.trim().isEmpty())\n         {\n-            for ( String line; (line = reader.readLine()) != null; )\n-            {\n-                if ( line.startsWith( \"//\" ) || line.trim().isEmpty() )\n-                {\n-                    continue;\n-                }\n-                else if ( line.startsWith( \"#\" ) )\n-                {\n-                    Matcher matcher = version.matcher( line );\n-                    if ( matcher.matches() )\n-                    {\n-                        latestVersion = matcher.group( 1 );\n-                    }\n-                    continue;\n-                }\n-                int sep = line.indexOf( ' ' );\n-                if ( sep != -1 )\n-                {\n-                    String oldName = line.substring( 0, sep );\n-                    String newName = line.substring( sep + 1 );\n-                    TIME_ZONE_SHORT_TO_STRING.add( newName );\n-                    oldToNewName.put( oldName, newName );\n-                }\n-                else\n-                {\n-                    TIME_ZONE_SHORT_TO_STRING.add( line );\n-                    TIME_ZONE_STRING_TO_SHORT.put( line, (short) (TIME_ZONE_SHORT_TO_STRING.size() - 1) );\n-                }\n-            }\n-            LATEST_SUPPORTED_IANA_VERSION = latestVersion;\n-        }\n-        catch ( IOException e )\n+          continue;\n+        } else if (line.startsWith(\"#\"))\n         {\n-            throw new RuntimeException( \"Failed to read time zone id file.\" );\n+          Matcher matcher = version.matcher(line);\n+          if (matcher.matches())\n+          {\n+            latestVersion = matcher.group(1);\n+          }\n+          continue;\n         }\n-\n-        for ( Map.Entry<String,String> entry : oldToNewName.entrySet() )\n+        int sep = line.indexOf(' ');\n+        if (sep != -1)\n         {\n-            String oldName = entry.getKey();\n-            String newName = entry.getValue();\n-            Short newNameId = TIME_ZONE_STRING_TO_SHORT.get( newName );\n-            TIME_ZONE_STRING_TO_SHORT.put( oldName, newNameId );\n+          String oldName = line.substring(0, sep);\n+          String newName = line.substring(sep + 1);\n+          TIME_ZONE_SHORT_TO_STRING.add(newName);\n+          oldToNewName.put(oldName, newName);\n+        } else\n+        {\n+          TIME_ZONE_SHORT_TO_STRING.add(line);\n+          TIME_ZONE_STRING_TO_SHORT.put(line, (short) (TIME_ZONE_SHORT_TO_STRING.size() - 1));\n         }\n+      }\n+      LATEST_SUPPORTED_IANA_VERSION = latestVersion;\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(\"Failed to read time zone id file.\");\n+    }\n+\n+    for (Map.Entry<String, String> entry : oldToNewName.entrySet())\n+    {\n+      String oldName = entry.getKey();\n+      String newName = entry.getValue();\n+      Short newNameId = TIME_ZONE_STRING_TO_SHORT.get(newName);\n+      TIME_ZONE_STRING_TO_SHORT.put(oldName, newNameId);\n     }\n+  }\n }\n",
            "diff_size": 113
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2441/TimeZones.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2441/TimeZones.java\nindex e97a0ee616b..f8d4b2826c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2441/TimeZones.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2441/TimeZones.java\n@@ -68,7 +68,8 @@ public class TimeZones\n         {\n             throw new IllegalArgumentException( String.format( \"unknown tzid '%s'\", tzid ) );\n         }\n-        return TIME_ZONE_STRING_TO_SHORT.get( tzid );\n+\n+return TIME_ZONE_STRING_TO_SHORT.get( tzid );\n     }\n \n     public static String map( short offset )\n@@ -133,4 +134,4 @@ public class TimeZones\n             TIME_ZONE_STRING_TO_SHORT.put( oldName, newNameId );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
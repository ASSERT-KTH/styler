{
    "project_name": "Roboy-roboy_dialog",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "14",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * previous: previously selected items, to handle more without variables\n * implementation: voxelurn.VoxelWorld\n * \n * @author sidaw\n **/\npublic abstract class World {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/6/World.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/intellij/6/World.java\nindex 8871aa5d3bd..a5396ab9213 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/6/World.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/intellij/6/World.java\n@@ -11,70 +11,71 @@ import edu.stanford.nlp.sempre.interactive.voxelurn.VoxelWorld;\n  * the set of items in focus, usually, but not necessarily a subset of allItems\n  * previous: previously selected items, to handle more without variables\n  * implementation: voxelurn.VoxelWorld\n- * \n+ *\n  * @author sidaw\n  **/\n public abstract class World {\n-  // supports variables, and perhaps scoping\n-  public Set<Item> allItems;\n-  public Set<Item> selected;\n-  public Set<Item> previous;\n-\n-  public static World fromContext(String worldname, ContextValue context) {\n-    if (worldname.equals(\"VoxelWorld\"))\n-      return VoxelWorld.fromContext(context);\n-    throw new RuntimeException(\"World does not exist: \" + worldname);\n-  }\n-\n-  // there are some annoying issues with mutable objects.\n-  // The current strategy is to keep allitems up to date on each mutable\n-  // operation\n-  public abstract String toJSON();\n-\n-  public abstract Set<Item> has(String rel, Set<Object> values);\n-\n-  public abstract Set<Object> get(String rel, Set<Item> subset);\n-\n-  public abstract void update(String rel, Object value, Set<Item> selected);\n-\n-  public abstract void merge();\n-  // public abstract void select(Set<Item> set);\n-\n-  public World() {\n-    this.allItems = new HashSet<>();\n-    this.selected = new HashSet<>();\n-    this.previous = new HashSet<>();\n-  }\n-\n-  // general actions, flatness means these actions can be performed on allitems\n-  public void remove(Set<Item> selected) {\n-    allItems = new HashSet<>(allItems);\n-    allItems.removeAll(selected);\n-    // this.selected.removeAll(selected);\n-  }\n-\n-  // it is bad to ever mutate select, which will break scoping\n-  public void select(Set<Item> set) {\n-    this.selected = set;\n-  }\n-\n-  public void noop() {\n-  }\n-\n-  public Set<Item> selected() {\n-    return this.selected;\n-  }\n-\n-  public Set<Item> previous() {\n-    return this.previous;\n-  }\n-\n-  public Set<Item> all() {\n-    return allItems;\n-  }\n-\n-  public Set<Item> empty() {\n-    return new HashSet<>();\n-  }\n+    // supports variables, and perhaps scoping\n+    public Set<Item> allItems;\n+    public Set<Item> selected;\n+    public Set<Item> previous;\n+\n+    public static World fromContext(String worldname, ContextValue context) {\n+        if (worldname.equals(\"VoxelWorld\")) {\n+            return VoxelWorld.fromContext(context);\n+        }\n+        throw new RuntimeException(\"World does not exist: \" + worldname);\n+    }\n+\n+    // there are some annoying issues with mutable objects.\n+    // The current strategy is to keep allitems up to date on each mutable\n+    // operation\n+    public abstract String toJSON();\n+\n+    public abstract Set<Item> has(String rel, Set<Object> values);\n+\n+    public abstract Set<Object> get(String rel, Set<Item> subset);\n+\n+    public abstract void update(String rel, Object value, Set<Item> selected);\n+\n+    public abstract void merge();\n+    // public abstract void select(Set<Item> set);\n+\n+    public World() {\n+        this.allItems = new HashSet<>();\n+        this.selected = new HashSet<>();\n+        this.previous = new HashSet<>();\n+    }\n+\n+    // general actions, flatness means these actions can be performed on allitems\n+    public void remove(Set<Item> selected) {\n+        allItems = new HashSet<>(allItems);\n+        allItems.removeAll(selected);\n+        // this.selected.removeAll(selected);\n+    }\n+\n+    // it is bad to ever mutate select, which will break scoping\n+    public void select(Set<Item> set) {\n+        this.selected = set;\n+    }\n+\n+    public void noop() {\n+    }\n+\n+    public Set<Item> selected() {\n+        return this.selected;\n+    }\n+\n+    public Set<Item> previous() {\n+        return this.previous;\n+    }\n+\n+    public Set<Item> all() {\n+        return allItems;\n+    }\n+\n+    public Set<Item> empty() {\n+        return new HashSet<>();\n+    }\n \n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/6/World.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/naturalize/6/World.java\nindex 8871aa5d3bd..e00235903ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/6/World.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/naturalize/6/World.java\n@@ -77,4 +77,4 @@ public abstract class World {\n     return new HashSet<>();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/6/World.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/codebuff/6/World.java\nindex 8871aa5d3bd..8b0bef0c709 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/6/World.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/codebuff/6/World.java\n@@ -2,7 +2,6 @@ package edu.stanford.nlp.sempre.interactive;\n \n import java.util.HashSet;\n import java.util.Set;\n-\n import edu.stanford.nlp.sempre.ContextValue;\n import edu.stanford.nlp.sempre.interactive.voxelurn.VoxelWorld;\n \n@@ -14,10 +13,14 @@ import edu.stanford.nlp.sempre.interactive.voxelurn.VoxelWorld;\n  * \n  * @author sidaw\n  **/\n+\n+\n public abstract class World {\n   // supports variables, and perhaps scoping\n   public Set<Item> allItems;\n+\n   public Set<Item> selected;\n+\n   public Set<Item> previous;\n \n   public static World fromContext(String worldname, ContextValue context) {\n@@ -29,6 +32,7 @@ public abstract class World {\n   // there are some annoying issues with mutable objects.\n   // The current strategy is to keep allitems up to date on each mutable\n   // operation\n+\n   public abstract String toJSON();\n \n   public abstract Set<Item> has(String rel, Set<Object> values);\n@@ -47,6 +51,7 @@ public abstract class World {\n   }\n \n   // general actions, flatness means these actions can be performed on allitems\n+\n   public void remove(Set<Item> selected) {\n     allItems = new HashSet<>(allItems);\n     allItems.removeAll(selected);\n@@ -54,13 +59,12 @@ public abstract class World {\n   }\n \n   // it is bad to ever mutate select, which will break scoping\n+\n   public void select(Set<Item> set) {\n     this.selected = set;\n   }\n \n-  public void noop() {\n-  }\n-\n+  public void noop() { }\n   public Set<Item> selected() {\n     return this.selected;\n   }\n@@ -76,5 +80,4 @@ public abstract class World {\n   public Set<Item> empty() {\n     return new HashSet<>();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1742",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1742/Cursors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1742/Cursors.java\nindex e51029707a0..fb2bb7546e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1742/Cursors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1742/Cursors.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.Iterator;\n@@ -27,124 +28,122 @@ import org.neo4j.cursor.RawCursor;\n \n public class Cursors\n {\n-    private static Cursor<Object> EMPTY = new Cursor<Object>()\n+  private static Cursor<Object> EMPTY = new Cursor<Object>()\n+  {\n+    @Override\n+    public boolean next()\n     {\n-        @Override\n-        public boolean next()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public Object get()\n-        {\n-            throw new IllegalStateException( \"no elements\" );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-        }\n-    };\n+      return false;\n+    }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private Cursors()\n+    @Override\n+    public Object get()\n     {\n+      throw new IllegalStateException(\"no elements\");\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static <T> Cursor<T> empty()\n+    @Override\n+    public void close()\n     {\n-        return (Cursor<T>) EMPTY;\n     }\n-\n-    public static <E extends Exception> int count( RawCursor<?,E> cursor ) throws E\n+  };\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private Cursors()\n+  {\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> Cursor<T> empty()\n+  {\n+    return (Cursor<T>) EMPTY;\n+  }\n+\n+  public static <E extends Exception> int count(RawCursor<?, E> cursor) throws E\n+  {\n+    try\n     {\n-        try\n-        {\n-            int count = 0;\n-            while ( cursor.next() )\n-            {\n-                count++;\n-            }\n-            return count;\n-        }\n-        finally\n-        {\n-            cursor.close();\n-        }\n+      int count = 0;\n+      while (cursor.next())\n+      {\n+        count++;\n+      }\n+      return count;\n+    } finally\n+    {\n+      cursor.close();\n     }\n+  }\n \n-    public static <T, EX extends Exception> RawCursor<T,EX> rawCursorOf( T... values )\n+  public static <T, EX extends Exception> RawCursor<T, EX> rawCursorOf(T... values)\n+  {\n+    return new RawCursor<T, EX>()\n     {\n-        return new RawCursor<T,EX>()\n+      private int idx;\n+      private CursorValue<T> current = new CursorValue<>();\n+\n+      @Override\n+      public T get()\n+      {\n+        return current.get();\n+      }\n+\n+      @Override\n+      public boolean next() throws EX\n+      {\n+        if (idx >= values.length)\n         {\n-            private int idx;\n-            private CursorValue<T> current = new CursorValue<>();\n-\n-            @Override\n-            public T get()\n-            {\n-                return current.get();\n-            }\n-\n-            @Override\n-            public boolean next() throws EX\n-            {\n-                if ( idx >= values.length )\n-                {\n-                    current.invalidate();\n-                    return false;\n-                }\n-\n-                current.set( values[idx] );\n-                idx++;\n-\n-                return true;\n-            }\n-\n-            @Override\n-            public void close() throws EX\n-            {\n-                idx = values.length;\n-                current.invalidate();\n-            }\n-        };\n-    }\n+          current.invalidate();\n+          return false;\n+        }\n+\n+        current.set(values[idx]);\n+        idx++;\n+\n+        return true;\n+      }\n \n-    public static <T, EX extends Exception> RawCursor<T,EX> rawCursorOf( Iterable<T> iterable )\n+      @Override\n+      public void close() throws EX\n+      {\n+        idx = values.length;\n+        current.invalidate();\n+      }\n+    };\n+  }\n+\n+  public static <T, EX extends Exception> RawCursor<T, EX> rawCursorOf(Iterable<T> iterable)\n+  {\n+    return new RawCursor<T, EX>()\n     {\n-        return new RawCursor<T,EX>()\n+      private CursorValue<T> current = new CursorValue<>();\n+      private Iterator<T> itr = iterable.iterator();\n+\n+      @Override\n+      public T get()\n+      {\n+        return current.get();\n+      }\n+\n+      @Override\n+      public boolean next() throws EX\n+      {\n+        if (itr.hasNext())\n         {\n-            private CursorValue<T> current = new CursorValue<>();\n-            private Iterator<T> itr = iterable.iterator();\n-\n-            @Override\n-            public T get()\n-            {\n-                return current.get();\n-            }\n-\n-            @Override\n-            public boolean next() throws EX\n-            {\n-                if ( itr.hasNext() )\n-                {\n-                    current.set( itr.next() );\n-                    return true;\n-                }\n-                else\n-                {\n-                    current.invalidate();\n-                    return false;\n-                }\n-            }\n-\n-            @Override\n-            public void close() throws EX\n-            {\n-                current.invalidate();\n-            }\n-        };\n-    }\n+          current.set(itr.next());\n+          return true;\n+        } else\n+        {\n+          current.invalidate();\n+          return false;\n+        }\n+      }\n+\n+      @Override\n+      public void close() throws EX\n+      {\n+        current.invalidate();\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 162
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1742/Cursors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1742/Cursors.java\nindex e51029707a0..4f43f2db68b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1742/Cursors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1742/Cursors.java\n@@ -67,7 +67,8 @@ public class Cursors\n             {\n                 count++;\n             }\n-            return count;\n+\n+return count;\n         }\n         finally\n         {\n@@ -147,4 +148,4 @@ public class Cursors\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "19",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "80",
                    "column": "30",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "113",
                    "column": "19",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "115",
                    "column": "30",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1742/Cursors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1742/Cursors.java\nindex e51029707a0..27798a3cac0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1742/Cursors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1742/Cursors.java\n@@ -20,7 +20,6 @@\n package org.neo4j.kernel.impl.util;\n \n import java.util.Iterator;\n-\n import org.neo4j.cursor.Cursor;\n import org.neo4j.cursor.CursorValue;\n import org.neo4j.cursor.RawCursor;\n@@ -28,31 +27,31 @@ import org.neo4j.cursor.RawCursor;\n public class Cursors\n {\n     private static Cursor<Object> EMPTY = new Cursor<Object>()\n+{\n+    @Override\n+    public boolean next()\n     {\n-        @Override\n-        public boolean next()\n-        {\n-            return false;\n-        }\n+        return false;\n+    }\n \n-        @Override\n-        public Object get()\n-        {\n-            throw new IllegalStateException( \"no elements\" );\n-        }\n+    @Override\n+    public Object get()\n+    {\n+        throw new IllegalStateException( \"no elements\" );\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-        }\n-    };\n+    @Override\n+    public void close()\n+    {\n+    }\n+};\n \n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     private Cursors()\n     {\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     public static <T> Cursor<T> empty()\n     {\n         return (Cursor<T>) EMPTY;\n@@ -63,10 +62,11 @@ public class Cursors\n         try\n         {\n             int count = 0;\n-            while ( cursor.next() )\n+            while( cursor.next())\n             {\n                 count++;\n             }\n+\n             return count;\n         }\n         finally\n@@ -75,76 +75,73 @@ public class Cursors\n         }\n     }\n \n-    public static <T, EX extends Exception> RawCursor<T,EX> rawCursorOf( T... values )\n+    public static < T, EX extends Exception> RawCursor<T,EX> rawCursorOf( T... values )\n     {\n-        return new RawCursor<T,EX>()\n-        {\n-            private int idx;\n-            private CursorValue<T> current = new CursorValue<>();\n-\n-            @Override\n-            public T get()\n-            {\n-                return current.get();\n-            }\n+        return new RawCursor <T,EX>()\n+{\n+    private int idx;\n+    private CursorValue<T> current = new CursorValue<>();\n+    @Override\n+    public T get()\n+    {\n+        return current.get();\n+    }\n \n-            @Override\n-            public boolean next() throws EX\n-            {\n-                if ( idx >= values.length )\n-                {\n-                    current.invalidate();\n-                    return false;\n-                }\n+    @Override\n+    public boolean next() throws EX\n+    {\n+        if ( idx >= values.length )\n+        {\n+            current.invalidate();\n+            return false;\n+        }\n \n-                current.set( values[idx] );\n-                idx++;\n+        current.set( values[ idx] );\n+        idx++;\n+        return true;\n+    }\n \n-                return true;\n-            }\n+    @Override\n+    public void close() throws EX\n+    {\n+        idx = values.length;\n+        current.invalidate();\n+    }\n+};\n+    }\n \n-            @Override\n-            public void close() throws EX\n-            {\n-                idx = values.length;\n-                current.invalidate();\n-            }\n-        };\n+    public static < T, EX extends Exception> RawCursor<T,EX> rawCursorOf( Iterable<T> iterable )\n+    {\n+        return new RawCursor <T,EX>()\n+{\n+    private CursorValue<T> current = new CursorValue<>();\n+    private Iterator<T> itr = iterable.iterator();\n+    @Override\n+    public T get()\n+    {\n+        return current.get();\n     }\n \n-    public static <T, EX extends Exception> RawCursor<T,EX> rawCursorOf( Iterable<T> iterable )\n+    @Override\n+    public boolean next() throws EX\n     {\n-        return new RawCursor<T,EX>()\n+        if ( itr.hasNext() )\n         {\n-            private CursorValue<T> current = new CursorValue<>();\n-            private Iterator<T> itr = iterable.iterator();\n-\n-            @Override\n-            public T get()\n-            {\n-                return current.get();\n-            }\n-\n-            @Override\n-            public boolean next() throws EX\n-            {\n-                if ( itr.hasNext() )\n-                {\n-                    current.set( itr.next() );\n-                    return true;\n-                }\n-                else\n-                {\n-                    current.invalidate();\n-                    return false;\n-                }\n-            }\n+            current.set( itr.next() );\n+            return true;\n+        }\n+        else\n+        {\n+            current.invalidate();\n+            return false;\n+        }\n+    }\n \n-            @Override\n-            public void close() throws EX\n-            {\n-                current.invalidate();\n-            }\n-        };\n+    @Override\n+    public void close() throws EX\n+    {\n+        current.invalidate();\n+    }\n+};\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 97
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "530",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/530/UpdateParamWithKeyIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/530/UpdateParamWithKeyIds.java\nindex 86c2830fde9..56323ba02b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/530/UpdateParamWithKeyIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/530/UpdateParamWithKeyIds.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.params;\n \n import com.tencent.angel.PartitionKey;\n@@ -58,5 +59,5 @@ public abstract class UpdateParamWithKeyIds extends UpdateParam {\n   }\n \n   protected abstract PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx,\n-      int endIdx);\n+                                                            int endIdx);\n }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 6, indentation should be the same level as line 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 6, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/530/UpdateParamWithKeyIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/530/UpdateParamWithKeyIds.java\nindex 86c2830fde9..693cf0248d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/530/UpdateParamWithKeyIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/530/UpdateParamWithKeyIds.java\n@@ -25,7 +25,7 @@ import java.util.List;\n \n public abstract class UpdateParamWithKeyIds extends UpdateParam {\n \n-  protected long[] keyIds;  // pls. make sure keyIds is sorted\n+  protected long[] keyIds; // pls. make sure keyIds is sorted\n \n   public UpdateParamWithKeyIds(int matrixId, boolean updateClock) {\n     super(matrixId, updateClock);\n@@ -44,11 +44,14 @@ public abstract class UpdateParamWithKeyIds extends UpdateParam {\n \n     int nodeIndex = 0;\n     for (PartitionKey part : parts) {\n-      int start = nodeIndex;  // include start\n+      int start = nodeIndex;\n+\n+// include start\n       while (nodeIndex < keyIds.length && keyIds[nodeIndex] < part.getEndCol()) {\n         nodeIndex++;\n       }\n-      int end = nodeIndex;  // exclude end\n+      int end = nodeIndex;\n+// exclude end\n       if (end - start > 0) {\n         partParams.add(getPartitionParam(part, start, end));\n       }\n@@ -57,6 +60,5 @@ public abstract class UpdateParamWithKeyIds extends UpdateParam {\n     return partParams;\n   }\n \n-  protected abstract PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx,\n-      int endIdx);\n-}\n+  protected abstract PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx, int endIdx);\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/530/UpdateParamWithKeyIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/530/UpdateParamWithKeyIds.java\nindex 86c2830fde9..b2c979ba4fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/530/UpdateParamWithKeyIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/530/UpdateParamWithKeyIds.java\n@@ -39,24 +39,23 @@ public abstract class UpdateParamWithKeyIds extends UpdateParam {\n   public List<PartitionUpdateParam> split() {\n     List<PartitionKey> parts = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n     int size = parts.size();\n-\n     List<PartitionUpdateParam> partParams = new ArrayList<>(size);\n-\n     int nodeIndex = 0;\n     for (PartitionKey part : parts) {\n       int start = nodeIndex;  // include start\n       while (nodeIndex < keyIds.length && keyIds[nodeIndex] < part.getEndCol()) {\n         nodeIndex++;\n       }\n+\n       int end = nodeIndex;  // exclude end\n       if (end - start > 0) {\n         partParams.add(getPartitionParam(part, start, end));\n       }\n     }\n-\n     return partParams;\n   }\n \n-  protected abstract PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx,\n-      int endIdx);\n-}\n+  protected abstract PartitionUpdateParam getPartitionParam(\n+    PartitionKey part, int startIdx, int endIdx);\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
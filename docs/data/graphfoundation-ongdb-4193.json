{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4193",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4193/FileManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4193/FileManager.java\nindex aee2ac64eb7..f5b454d7c45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4193/FileManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4193/FileManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.io.ByteArrayOutputStream;\n@@ -36,54 +37,54 @@ import org.neo4j.codegen.ByteCodes;\n \n class FileManager extends ForwardingJavaFileManager<StandardJavaFileManager>\n {\n-    private final Map<String/*className*/, ClassFile> classes = new HashMap<>();\n+  private final Map<String/*className*/, ClassFile> classes = new HashMap<>();\n+\n+  FileManager(StandardJavaFileManager fileManager)\n+  {\n+    super(fileManager);\n+  }\n+\n+  @Override\n+  public JavaFileObject getJavaFileForOutput(Location location, String className,\n+                                             JavaFileObject.Kind kind, FileObject sibling)\n+  {\n+    ClassFile file = new ClassFile(className);\n+    classes.put(className, file);\n+    return file;\n+  }\n \n-    FileManager( StandardJavaFileManager fileManager )\n+  public Iterable<? extends ByteCodes> bytecodes()\n+  {\n+    return classes.values();\n+  }\n+\n+  private static class ClassFile extends SimpleJavaFileObject implements ByteCodes\n+  {\n+    private final ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n+    private final String className;\n+\n+    protected ClassFile(String className)\n     {\n-        super( fileManager );\n+      super(URI.create(\"classes:/\" + className.replace('.', '/') + Kind.CLASS.extension), Kind.CLASS);\n+      this.className = className;\n     }\n \n     @Override\n-    public JavaFileObject getJavaFileForOutput( Location location, String className,\n-                                                JavaFileObject.Kind kind, FileObject sibling )\n+    public OutputStream openOutputStream()\n     {\n-        ClassFile file = new ClassFile( className );\n-        classes.put( className, file );\n-        return file;\n+      return bytes;\n     }\n \n-    public Iterable<? extends ByteCodes> bytecodes()\n+    @Override\n+    public String name()\n     {\n-        return classes.values();\n+      return className;\n     }\n \n-    private static class ClassFile extends SimpleJavaFileObject implements ByteCodes\n+    @Override\n+    public ByteBuffer bytes()\n     {\n-        private final ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n-        private final String className;\n-\n-        protected ClassFile( String className )\n-        {\n-            super( URI.create( \"classes:/\" + className.replace( '.', '/' ) + Kind.CLASS.extension ), Kind.CLASS );\n-            this.className = className;\n-        }\n-\n-        @Override\n-        public OutputStream openOutputStream()\n-        {\n-            return bytes;\n-        }\n-\n-        @Override\n-        public String name()\n-        {\n-            return className;\n-        }\n-\n-        @Override\n-        public ByteBuffer bytes()\n-        {\n-            return ByteBuffer.wrap( bytes.toByteArray() );\n-        }\n+      return ByteBuffer.wrap(bytes.toByteArray());\n     }\n+  }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4193/FileManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4193/FileManager.java\nindex aee2ac64eb7..abf151c3adf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4193/FileManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4193/FileManager.java\n@@ -44,9 +44,8 @@ class FileManager extends ForwardingJavaFileManager<StandardJavaFileManager>\n     }\n \n     @Override\n-    public JavaFileObject getJavaFileForOutput( Location location, String className,\n-                                                JavaFileObject.Kind kind, FileObject sibling )\n-    {\n+    public JavaFileObject getJavaFileForOutput( Location location, String className, JavaFileObject.Kind kind, FileObject sibling )\n+{\n         ClassFile file = new ClassFile( className );\n         classes.put( className, file );\n         return file;\n@@ -86,4 +85,4 @@ class FileManager extends ForwardingJavaFileManager<StandardJavaFileManager>\n             return ByteBuffer.wrap( bytes.toByteArray() );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
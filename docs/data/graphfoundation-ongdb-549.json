{
    "project_name": "graphfoundation-ongdb",
    "error_id": "549",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/549/StoreCopyResponsePacker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/549/StoreCopyResponsePacker.java\nindex 93e76956edd..2366bea0f70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/549/StoreCopyResponsePacker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/549/StoreCopyResponsePacker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.util.function.Supplier;\n@@ -47,79 +48,78 @@ import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_I\n  */\n class StoreCopyResponsePacker extends ResponsePacker\n {\n-    private final long mandatoryStartTransactionId;\n-    private final LogFileInformation logFileInformation;\n-    private final TransactionIdStore transactionIdStore;\n-    private final Monitor monitor;\n+  private final long mandatoryStartTransactionId;\n+  private final LogFileInformation logFileInformation;\n+  private final TransactionIdStore transactionIdStore;\n+  private final Monitor monitor;\n \n-    StoreCopyResponsePacker( LogicalTransactionStore transactionStore,\n-            TransactionIdStore transactionIdStore, LogFileInformation logFileInformation,\n-            Supplier<StoreId> storeId, long mandatoryStartTransactionId, StoreCopyServer.Monitor monitor )\n-    {\n-        super( transactionStore, transactionIdStore, storeId );\n-        this.transactionIdStore = transactionIdStore;\n-        this.mandatoryStartTransactionId = mandatoryStartTransactionId;\n-        this.logFileInformation = logFileInformation;\n-        this.monitor = monitor;\n-    }\n+  StoreCopyResponsePacker(LogicalTransactionStore transactionStore,\n+                          TransactionIdStore transactionIdStore, LogFileInformation logFileInformation,\n+                          Supplier<StoreId> storeId, long mandatoryStartTransactionId, StoreCopyServer.Monitor monitor)\n+  {\n+    super(transactionStore, transactionIdStore, storeId);\n+    this.transactionIdStore = transactionIdStore;\n+    this.mandatoryStartTransactionId = mandatoryStartTransactionId;\n+    this.logFileInformation = logFileInformation;\n+    this.monitor = monitor;\n+  }\n \n-    @Override\n-    public <T> Response<T> packTransactionStreamResponse( RequestContext context, T response )\n+  @Override\n+  public <T> Response<T> packTransactionStreamResponse(RequestContext context, T response)\n+  {\n+    final String packerIdentifier = Thread.currentThread().getName();\n+    final long toStartFrom = mandatoryStartTransactionId;\n+    final long toEndAt = transactionIdStore.getLastCommittedTransactionId();\n+    TransactionStream transactions = visitor ->\n     {\n-        final String packerIdentifier = Thread.currentThread().getName();\n-        final long toStartFrom = mandatoryStartTransactionId;\n-        final long toEndAt = transactionIdStore.getLastCommittedTransactionId();\n-        TransactionStream transactions = visitor ->\n-        {\n-            // Check so that it's even worth thinking about extracting any transactions at all\n-            if ( toStartFrom > BASE_TX_ID && toStartFrom <= toEndAt )\n-            {\n-                monitor.startStreamingTransactions( toStartFrom, packerIdentifier );\n-                extractTransactions( toStartFrom, filterVisitor( visitor, toEndAt ) );\n-                monitor.finishStreamingTransactions( toEndAt, packerIdentifier );\n-            }\n-        };\n-        return new TransactionStreamResponse<>( response, storeId.get(), transactions, ResourceReleaser.NO_OP );\n-    }\n+      // Check so that it's even worth thinking about extracting any transactions at all\n+      if (toStartFrom > BASE_TX_ID && toStartFrom <= toEndAt)\n+      {\n+        monitor.startStreamingTransactions(toStartFrom, packerIdentifier);\n+        extractTransactions(toStartFrom, filterVisitor(visitor, toEndAt));\n+        monitor.finishStreamingTransactions(toEndAt, packerIdentifier);\n+      }\n+    };\n+    return new TransactionStreamResponse<>(response, storeId.get(), transactions, ResourceReleaser.NO_OP);\n+  }\n \n-    @Override\n-    protected void extractTransactions( long startingAtTransactionId,\n-            Visitor<CommittedTransactionRepresentation,Exception> accumulator ) throws Exception\n+  @Override\n+  protected void extractTransactions(long startingAtTransactionId,\n+                                     Visitor<CommittedTransactionRepresentation, Exception> accumulator) throws Exception\n+  {\n+    try\n     {\n-        try\n-        {\n-            startingAtTransactionId = Math.min( mandatoryStartTransactionId, startingAtTransactionId );\n-            super.extractTransactions( startingAtTransactionId, accumulator );\n-        }\n-        catch ( NoSuchTransactionException e )\n+      startingAtTransactionId = Math.min(mandatoryStartTransactionId, startingAtTransactionId);\n+      super.extractTransactions(startingAtTransactionId, accumulator);\n+    } catch (NoSuchTransactionException e)\n+    {\n+      // We no longer have transactions that far back. Which transaction is the farthest back?\n+      if (startingAtTransactionId < mandatoryStartTransactionId)\n+      {\n+        // We don't necessarily need to ask that far back. Ask which is the oldest transaction in the log(s)\n+        // that we can possibly serve\n+        long oldestExistingTransactionId = logFileInformation.getFirstExistingEntryId();\n+        if (oldestExistingTransactionId == -1)\n         {\n-            // We no longer have transactions that far back. Which transaction is the farthest back?\n-            if ( startingAtTransactionId < mandatoryStartTransactionId )\n-            {\n-                // We don't necessarily need to ask that far back. Ask which is the oldest transaction in the log(s)\n-                // that we can possibly serve\n-                long oldestExistingTransactionId = logFileInformation.getFirstExistingEntryId();\n-                if ( oldestExistingTransactionId == -1 )\n-                {\n-                    // Seriously, there are no logs that we can serve?\n-                    if ( mandatoryStartTransactionId >= transactionIdStore.getLastCommittedTransactionId() )\n-                    {\n-                        // Although there are no mandatory transactions to stream, so we're good here.\n-                        return;\n-                    }\n-\n-                    // We are required to serve one or more transactions, but there are none, tell that\n-                    throw e;\n-                }\n+          // Seriously, there are no logs that we can serve?\n+          if (mandatoryStartTransactionId >= transactionIdStore.getLastCommittedTransactionId())\n+          {\n+            // Although there are no mandatory transactions to stream, so we're good here.\n+            return;\n+          }\n \n-                if ( oldestExistingTransactionId <= mandatoryStartTransactionId )\n-                {\n-                    super.extractTransactions( oldestExistingTransactionId, accumulator );\n-                }\n+          // We are required to serve one or more transactions, but there are none, tell that\n+          throw e;\n+        }\n \n-                // We can't serve the mandatory transactions, tell that\n-                throw e;\n-            }\n+        if (oldestExistingTransactionId <= mandatoryStartTransactionId)\n+        {\n+          super.extractTransactions(oldestExistingTransactionId, accumulator);\n         }\n+\n+        // We can't serve the mandatory transactions, tell that\n+        throw e;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 83
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "column": "29",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/549/StoreCopyResponsePacker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/549/StoreCopyResponsePacker.java\nindex 93e76956edd..0ee822b9e05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/549/StoreCopyResponsePacker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/549/StoreCopyResponsePacker.java\n@@ -53,8 +53,7 @@ class StoreCopyResponsePacker extends ResponsePacker\n     private final Monitor monitor;\n \n     StoreCopyResponsePacker( LogicalTransactionStore transactionStore,\n-            TransactionIdStore transactionIdStore, LogFileInformation logFileInformation,\n-            Supplier<StoreId> storeId, long mandatoryStartTransactionId, StoreCopyServer.Monitor monitor )\n+            TransactionIdStore transactionIdStore, LogFileInformation logFileInformation, Supplier<StoreId> storeId, long mandatoryStartTransactionId, StoreCopyServer.Monitor monitor )\n     {\n         super( transactionStore, transactionIdStore, storeId );\n         this.transactionIdStore = transactionIdStore;\n@@ -72,7 +71,7 @@ class StoreCopyResponsePacker extends ResponsePacker\n         TransactionStream transactions = visitor ->\n         {\n             // Check so that it's even worth thinking about extracting any transactions at all\n-            if ( toStartFrom > BASE_TX_ID && toStartFrom <= toEndAt )\n+            if ( toStartFrom> BASE_TX_ID && toStartFrom <= toEndAt )\n             {\n                 monitor.startStreamingTransactions( toStartFrom, packerIdentifier );\n                 extractTransactions( toStartFrom, filterVisitor( visitor, toEndAt ) );\n@@ -83,9 +82,8 @@ class StoreCopyResponsePacker extends ResponsePacker\n     }\n \n     @Override\n-    protected void extractTransactions( long startingAtTransactionId,\n-            Visitor<CommittedTransactionRepresentation,Exception> accumulator ) throws Exception\n-    {\n+    protected void extractTransactions( long startingAtTransactionId, Visitor<CommittedTransactionRepresentation,Exception> accumulator ) throws Exception\n+{\n         try\n         {\n             startingAtTransactionId = Math.min( mandatoryStartTransactionId, startingAtTransactionId );\n@@ -122,4 +120,4 @@ class StoreCopyResponsePacker extends ResponsePacker\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
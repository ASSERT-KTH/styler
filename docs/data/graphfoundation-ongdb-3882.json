{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3882",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "143",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "440",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "520",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "567",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "663",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "663",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "679",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "679",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "706",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "728",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "728",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "798",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "798",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "800",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "800",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "826",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "826",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "831",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "831",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "904",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "904",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "911",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "911",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "914",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "914",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "914",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "916",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "916",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "922",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "922",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "970",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "970",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "996",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "996",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1036",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1036",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1047",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1049",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1049",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1056",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1057",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1060",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1060",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1065",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1065",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1067",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1067",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1069",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1070",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1070",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1070",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1072",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1074",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1074",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1079",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1079",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1084",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1084",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1086",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1086",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1092",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1092",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1094",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1094",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1106",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1106",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1111",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1111",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1116",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1116",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1121",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1121",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1125",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1131",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1131",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1139",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1139",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1143",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1143",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1147",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1147",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1152",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1152",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1159",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1159",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1159",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1168",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1168",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1171",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1171",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1173",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1173",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1177",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1177",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1181",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1181",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1183",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1183",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1187",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1187",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1192",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1192",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1198",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1199",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1201",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1201",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1206",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1209",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1209",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1211",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1211",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1217",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1228",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1228",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1228",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1234",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1234",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1236",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1236",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1238",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1238",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1242",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1242",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3882/Operations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3882/Operations.java\nindex ea9ae965d01..8a05a4c5027 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3882/Operations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3882/Operations.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -109,1147 +110,1137 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n \n /**\n  * Collects all Kernel API operations and guards them from being used outside of transaction.\n- *\n+ * <p>\n  * Many methods assume cursors to be initialized before use in private methods, even if they're not passed in explicitly.\n  * Keep that in mind: e.g. nodeCursor, propertyCursor and relationshipCursor\n  */\n public class Operations implements Write, ExplicitIndexWrite, SchemaWrite\n {\n-    private final KernelTransactionImplementation ktx;\n-    private final AllStoreHolder allStoreHolder;\n-    private final KernelToken token;\n-    private final StorageStatement statement;\n-    private final AutoIndexing autoIndexing;\n-    private DefaultNodeCursor nodeCursor;\n-    private final IndexTxStateUpdater updater;\n-    private DefaultPropertyCursor propertyCursor;\n-    private DefaultRelationshipScanCursor relationshipCursor;\n-    private final DefaultCursors cursors;\n-    private final ConstraintIndexCreator constraintIndexCreator;\n-    private final ConstraintSemantics constraintSemantics;\n-    private final IndexProviderMap indexProviderMap;\n-\n-    public Operations(\n-            AllStoreHolder allStoreHolder,\n-            IndexTxStateUpdater updater,\n-            StorageStatement statement,\n-            KernelTransactionImplementation ktx,\n-            KernelToken token,\n-            DefaultCursors cursors,\n-            AutoIndexing autoIndexing,\n-            ConstraintIndexCreator constraintIndexCreator,\n-            ConstraintSemantics constraintSemantics,\n-            IndexProviderMap indexProviderMap )\n-    {\n-        this.token = token;\n-        this.autoIndexing = autoIndexing;\n-        this.allStoreHolder = allStoreHolder;\n-        this.ktx = ktx;\n-        this.statement = statement;\n-        this.updater = updater;\n-        this.cursors = cursors;\n-        this.constraintIndexCreator = constraintIndexCreator;\n-        this.constraintSemantics = constraintSemantics;\n-        this.indexProviderMap = indexProviderMap;\n-    }\n-\n-    public void initialize()\n-    {\n-        this.nodeCursor = cursors.allocateNodeCursor();\n-        this.propertyCursor = cursors.allocatePropertyCursor();\n-        this.relationshipCursor = cursors.allocateRelationshipScanCursor();\n-    }\n-\n-    @Override\n-    public long nodeCreate()\n-    {\n-        ktx.assertOpen();\n-        long nodeId = statement.reserveNode();\n-        ktx.txState().nodeDoCreate( nodeId );\n-        return nodeId;\n-    }\n-\n-    @Override\n-    public boolean nodeDelete( long node ) throws AutoIndexingKernelException\n-    {\n-        ktx.assertOpen();\n-        return nodeDelete( node, true );\n-    }\n-\n-    @Override\n-    public int nodeDetachDelete( final long nodeId ) throws KernelException\n-    {\n-        final MutableInt count = new MutableInt();\n-        TwoPhaseNodeForRelationshipLocking locking = new TwoPhaseNodeForRelationshipLocking(\n-                relId ->\n-                {\n-                    ktx.assertOpen();\n-                    if ( relationshipDelete( relId, false ) )\n-                    {\n-                        count.increment();\n-                    }\n-                }, ktx.statementLocks().optimistic(), ktx.lockTracer() );\n-\n-        locking.lockAllNodesAndConsumeRelationships( nodeId, ktx, ktx.ambientNodeCursor() );\n-        ktx.assertOpen();\n-\n-        //we are already holding the lock\n-        nodeDelete( nodeId, false );\n-        return count.intValue();\n-    }\n-\n-    @Override\n-    public long relationshipCreate( long sourceNode, int relationshipType, long targetNode )\n-            throws EntityNotFoundException\n-    {\n-        ktx.assertOpen();\n-\n-        sharedRelationshipTypeLock( relationshipType );\n-        lockRelationshipNodes( sourceNode, targetNode );\n-\n-        assertNodeExists( sourceNode );\n-        assertNodeExists( targetNode );\n-\n-        long id = statement.reserveRelationship();\n-        ktx.txState().relationshipDoCreate( id, relationshipType, sourceNode, targetNode );\n-        return id;\n-    }\n-\n-    @Override\n-    public boolean relationshipDelete( long relationship ) throws AutoIndexingKernelException\n-    {\n-        ktx.assertOpen();\n-        return relationshipDelete( relationship, true );\n-    }\n-\n-    @Override\n-    public boolean nodeAddLabel( long node, int nodeLabel )\n-            throws EntityNotFoundException, ConstraintValidationException\n-    {\n-        acquireSharedLabelLock( nodeLabel );\n-        acquireExclusiveNodeLock( node );\n-\n-        ktx.assertOpen();\n-        singleNode( node );\n-\n-        if ( nodeCursor.labels().contains( nodeLabel ) )\n-        {\n-            //label already there, nothing to do\n-            return false;\n-        }\n-\n-        //Check so that we are not breaking uniqueness constraints\n-        //We do this by checking if there is an existing node in the index that\n-        //with the same label and property combination.\n-        Iterator<ConstraintDescriptor> constraints = allStoreHolder.constraintsGetForLabel( nodeLabel );\n-        while ( constraints.hasNext() )\n-        {\n-            ConstraintDescriptor constraint = constraints.next();\n-            if ( constraint.enforcesUniqueness() )\n-            {\n-                IndexBackedConstraintDescriptor uniqueConstraint = (IndexBackedConstraintDescriptor) constraint;\n-                IndexQuery.ExactPredicate[] propertyValues = getAllPropertyValues( uniqueConstraint.schema(),\n-                        StatementConstants.NO_SUCH_PROPERTY_KEY, Values.NO_VALUE );\n-                if ( propertyValues != null )\n-                {\n-                    validateNoExistingNodeWithExactValues( uniqueConstraint, propertyValues, node );\n-                }\n-            }\n-        }\n-\n-        //node is there and doesn't already have the label, let's add\n-        ktx.txState().nodeDoAddLabel( nodeLabel, node );\n-        updater.onLabelChange( nodeLabel, nodeCursor, propertyCursor, ADDED_LABEL );\n-        return true;\n-    }\n-\n-    private boolean nodeDelete( long node, boolean lock ) throws AutoIndexingKernelException\n-    {\n-        ktx.assertOpen();\n-\n-        if ( ktx.hasTxStateWithChanges() )\n+  private final KernelTransactionImplementation ktx;\n+  private final AllStoreHolder allStoreHolder;\n+  private final KernelToken token;\n+  private final StorageStatement statement;\n+  private final AutoIndexing autoIndexing;\n+  private DefaultNodeCursor nodeCursor;\n+  private final IndexTxStateUpdater updater;\n+  private DefaultPropertyCursor propertyCursor;\n+  private DefaultRelationshipScanCursor relationshipCursor;\n+  private final DefaultCursors cursors;\n+  private final ConstraintIndexCreator constraintIndexCreator;\n+  private final ConstraintSemantics constraintSemantics;\n+  private final IndexProviderMap indexProviderMap;\n+\n+  public Operations(\n+      AllStoreHolder allStoreHolder,\n+      IndexTxStateUpdater updater,\n+      StorageStatement statement,\n+      KernelTransactionImplementation ktx,\n+      KernelToken token,\n+      DefaultCursors cursors,\n+      AutoIndexing autoIndexing,\n+      ConstraintIndexCreator constraintIndexCreator,\n+      ConstraintSemantics constraintSemantics,\n+      IndexProviderMap indexProviderMap)\n+  {\n+    this.token = token;\n+    this.autoIndexing = autoIndexing;\n+    this.allStoreHolder = allStoreHolder;\n+    this.ktx = ktx;\n+    this.statement = statement;\n+    this.updater = updater;\n+    this.cursors = cursors;\n+    this.constraintIndexCreator = constraintIndexCreator;\n+    this.constraintSemantics = constraintSemantics;\n+    this.indexProviderMap = indexProviderMap;\n+  }\n+\n+  public void initialize()\n+  {\n+    this.nodeCursor = cursors.allocateNodeCursor();\n+    this.propertyCursor = cursors.allocatePropertyCursor();\n+    this.relationshipCursor = cursors.allocateRelationshipScanCursor();\n+  }\n+\n+  @Override\n+  public long nodeCreate()\n+  {\n+    ktx.assertOpen();\n+    long nodeId = statement.reserveNode();\n+    ktx.txState().nodeDoCreate(nodeId);\n+    return nodeId;\n+  }\n+\n+  @Override\n+  public boolean nodeDelete(long node) throws AutoIndexingKernelException\n+  {\n+    ktx.assertOpen();\n+    return nodeDelete(node, true);\n+  }\n+\n+  @Override\n+  public int nodeDetachDelete(final long nodeId) throws KernelException\n+  {\n+    final MutableInt count = new MutableInt();\n+    TwoPhaseNodeForRelationshipLocking locking = new TwoPhaseNodeForRelationshipLocking(\n+        relId ->\n         {\n-            if ( ktx.txState().nodeIsAddedInThisTx( node ) )\n-            {\n-                autoIndexing.nodes().entityRemoved( this, node );\n-                ktx.txState().nodeDoDelete( node );\n-                return true;\n-            }\n-            if ( ktx.txState().nodeIsDeletedInThisTx( node ) )\n-            {\n-                // already deleted\n-                return false;\n-            }\n-        }\n-\n-        if ( lock )\n+          ktx.assertOpen();\n+          if (relationshipDelete(relId, false))\n+          {\n+            count.increment();\n+          }\n+        }, ktx.statementLocks().optimistic(), ktx.lockTracer());\n+\n+    locking.lockAllNodesAndConsumeRelationships(nodeId, ktx, ktx.ambientNodeCursor());\n+    ktx.assertOpen();\n+\n+    //we are already holding the lock\n+    nodeDelete(nodeId, false);\n+    return count.intValue();\n+  }\n+\n+  @Override\n+  public long relationshipCreate(long sourceNode, int relationshipType, long targetNode)\n+      throws EntityNotFoundException\n+  {\n+    ktx.assertOpen();\n+\n+    sharedRelationshipTypeLock(relationshipType);\n+    lockRelationshipNodes(sourceNode, targetNode);\n+\n+    assertNodeExists(sourceNode);\n+    assertNodeExists(targetNode);\n+\n+    long id = statement.reserveRelationship();\n+    ktx.txState().relationshipDoCreate(id, relationshipType, sourceNode, targetNode);\n+    return id;\n+  }\n+\n+  @Override\n+  public boolean relationshipDelete(long relationship) throws AutoIndexingKernelException\n+  {\n+    ktx.assertOpen();\n+    return relationshipDelete(relationship, true);\n+  }\n+\n+  @Override\n+  public boolean nodeAddLabel(long node, int nodeLabel)\n+      throws EntityNotFoundException, ConstraintValidationException\n+  {\n+    acquireSharedLabelLock(nodeLabel);\n+    acquireExclusiveNodeLock(node);\n+\n+    ktx.assertOpen();\n+    singleNode(node);\n+\n+    if (nodeCursor.labels().contains(nodeLabel))\n+    {\n+      //label already there, nothing to do\n+      return false;\n+    }\n+\n+    //Check so that we are not breaking uniqueness constraints\n+    //We do this by checking if there is an existing node in the index that\n+    //with the same label and property combination.\n+    Iterator<ConstraintDescriptor> constraints = allStoreHolder.constraintsGetForLabel(nodeLabel);\n+    while (constraints.hasNext())\n+    {\n+      ConstraintDescriptor constraint = constraints.next();\n+      if (constraint.enforcesUniqueness())\n+      {\n+        IndexBackedConstraintDescriptor uniqueConstraint = (IndexBackedConstraintDescriptor) constraint;\n+        IndexQuery.ExactPredicate[] propertyValues = getAllPropertyValues(uniqueConstraint.schema(),\n+            StatementConstants.NO_SUCH_PROPERTY_KEY, Values.NO_VALUE);\n+        if (propertyValues != null)\n         {\n-            ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), ResourceTypes.NODE, node );\n-        }\n-\n-        allStoreHolder.singleNode( node, nodeCursor );\n-        if ( nodeCursor.next() )\n-        {\n-            acquireSharedNodeLabelLocks();\n-\n-            autoIndexing.nodes().entityRemoved( this, node );\n-            ktx.txState().nodeDoDelete( node );\n-            return true;\n+          validateNoExistingNodeWithExactValues(uniqueConstraint, propertyValues, node);\n         }\n-\n-        // tried to delete node that does not exist\n-        return false;\n+      }\n     }\n \n-    /**\n-     * Assuming that the nodeCursor have been initialized to the node that labels are retrieved from\n-     */\n-    private void acquireSharedNodeLabelLocks()\n-    {\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), ResourceTypes.LABEL, nodeCursor.labels().all() );\n-    }\n+    //node is there and doesn't already have the label, let's add\n+    ktx.txState().nodeDoAddLabel(nodeLabel, node);\n+    updater.onLabelChange(nodeLabel, nodeCursor, propertyCursor, ADDED_LABEL);\n+    return true;\n+  }\n \n-    private boolean relationshipDelete( long relationship, boolean lock ) throws AutoIndexingKernelException\n-    {\n-        allStoreHolder.singleRelationship( relationship, relationshipCursor ); // tx-state aware\n+  private boolean nodeDelete(long node, boolean lock) throws AutoIndexingKernelException\n+  {\n+    ktx.assertOpen();\n \n-        if ( relationshipCursor.next() )\n-        {\n-            if ( lock )\n-            {\n-                lockRelationshipNodes( relationshipCursor.sourceNodeReference(),\n-                        relationshipCursor.targetNodeReference() );\n-                acquireExclusiveRelationshipLock( relationship );\n-            }\n-            if ( !allStoreHolder.relationshipExists( relationship ) )\n-            {\n-                return false;\n-            }\n-\n-            ktx.assertOpen();\n-\n-            autoIndexing.relationships().entityRemoved( this, relationship );\n-\n-            TransactionState txState = ktx.txState();\n-            if ( txState.relationshipIsAddedInThisTx( relationship ) )\n-            {\n-                txState.relationshipDoDeleteAddedInThisTx( relationship );\n-            }\n-            else\n-            {\n-                txState.relationshipDoDelete( relationship, relationshipCursor.getType(),\n-                        relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference() );\n-            }\n-            return true;\n-        }\n-\n-        // tried to delete relationship that does not exist\n-        return false;\n-    }\n-\n-    private void singleNode( long node ) throws EntityNotFoundException\n-    {\n-        allStoreHolder.singleNode( node, nodeCursor );\n-        if ( !nodeCursor.next() )\n-        {\n-            throw new EntityNotFoundException( EntityType.NODE, node );\n-        }\n-    }\n-\n-    private void singleRelationship( long relationship ) throws EntityNotFoundException\n+    if (ktx.hasTxStateWithChanges())\n     {\n-        allStoreHolder.singleRelationship( relationship, relationshipCursor );\n-        if ( !relationshipCursor.next() )\n-        {\n-            throw new EntityNotFoundException( EntityType.RELATIONSHIP, relationship );\n-        }\n-    }\n-\n-    /**\n-     * Fetch the property values for all properties in schema for a given node. Return these as an exact predicate\n-     * array.\n-     */\n-    private IndexQuery.ExactPredicate[] getAllPropertyValues( SchemaDescriptor schema, int changedPropertyKeyId,\n-            Value changedValue )\n-    {\n-        int[] schemaPropertyIds = schema.getPropertyIds();\n-        IndexQuery.ExactPredicate[] values = new IndexQuery.ExactPredicate[schemaPropertyIds.length];\n-\n-        int nMatched = 0;\n-        nodeCursor.properties( propertyCursor );\n-        while ( propertyCursor.next() )\n-        {\n-            int nodePropertyId = propertyCursor.propertyKey();\n-            int k = ArrayUtils.indexOf( schemaPropertyIds, nodePropertyId );\n-            if ( k >= 0 )\n-            {\n-                if ( nodePropertyId != StatementConstants.NO_SUCH_PROPERTY_KEY )\n-                {\n-                    values[k] = IndexQuery.exact( nodePropertyId, propertyCursor.propertyValue() );\n-                }\n-                nMatched++;\n-            }\n-        }\n-\n-        //This is true if we are adding a property\n-        if ( changedPropertyKeyId != NO_SUCH_PROPERTY_KEY )\n-        {\n-            int k = ArrayUtils.indexOf( schemaPropertyIds, changedPropertyKeyId );\n-            if ( k >= 0 )\n-            {\n-                values[k] = IndexQuery.exact( changedPropertyKeyId, changedValue );\n-                nMatched++;\n-            }\n-        }\n-\n-        if ( nMatched < values.length )\n-        {\n-            return null;\n-        }\n-        return values;\n-    }\n-\n-    /**\n-     * Check so that there is not an existing node with the exact match of label and property\n-     */\n-    private void validateNoExistingNodeWithExactValues( IndexBackedConstraintDescriptor constraint,\n-            IndexQuery.ExactPredicate[] propertyValues, long modifiedNode\n-    ) throws UniquePropertyValueValidationException, UnableToValidateConstraintException\n-    {\n-        SchemaIndexDescriptor schemaIndexDescriptor = constraint.ownedIndexDescriptor();\n-        CapableIndexReference indexReference = allStoreHolder.indexGetCapability( schemaIndexDescriptor );\n-        try ( DefaultNodeValueIndexCursor valueCursor = cursors.allocateNodeValueIndexCursor();\n-                IndexReaders indexReaders = new IndexReaders( indexReference, allStoreHolder ) )\n-        {\n-            assertIndexOnline( schemaIndexDescriptor );\n-            int labelId = schemaIndexDescriptor.schema().keyId();\n-\n-            //Take a big fat lock, and check for existing node in index\n-            ktx.statementLocks().optimistic().acquireExclusive(\n-                    ktx.lockTracer(), INDEX_ENTRY,\n-                    indexEntryResourceId( labelId, propertyValues )\n-            );\n-\n-            allStoreHolder.nodeIndexSeekWithFreshIndexReader( valueCursor, indexReaders.createReader(), propertyValues );\n-            if ( valueCursor.next() && valueCursor.nodeReference() != modifiedNode )\n-            {\n-                throw new UniquePropertyValueValidationException( constraint, VALIDATION,\n-                        new IndexEntryConflictException( valueCursor.nodeReference(), NO_SUCH_NODE,\n-                                IndexQuery.asValueTuple( propertyValues ) ) );\n-            }\n-        }\n-        catch ( IndexNotFoundKernelException | IndexBrokenKernelException | IndexNotApplicableKernelException e )\n-        {\n-            throw new UnableToValidateConstraintException( constraint, e );\n-        }\n-    }\n-\n-    private void assertIndexOnline( SchemaIndexDescriptor descriptor )\n-            throws IndexNotFoundKernelException, IndexBrokenKernelException\n-    {\n-        switch ( allStoreHolder.indexGetState( descriptor ) )\n-        {\n-        case ONLINE:\n-            return;\n-        default:\n-            throw new IndexBrokenKernelException( allStoreHolder.indexGetFailure( descriptor ) );\n-        }\n-    }\n-\n-    @Override\n-    public boolean nodeRemoveLabel( long node, int labelId ) throws EntityNotFoundException\n-    {\n-        acquireExclusiveNodeLock( node );\n-        ktx.assertOpen();\n-\n-        singleNode( node );\n-\n-        if ( !nodeCursor.labels().contains( labelId ) )\n-        {\n-            //the label wasn't there, nothing to do\n-            return false;\n-        }\n-\n-        acquireSharedLabelLock( labelId );\n-        ktx.txState().nodeDoRemoveLabel( labelId, node );\n-        updater.onLabelChange( labelId, nodeCursor, propertyCursor, REMOVED_LABEL );\n+      if (ktx.txState().nodeIsAddedInThisTx(node))\n+      {\n+        autoIndexing.nodes().entityRemoved(this, node);\n+        ktx.txState().nodeDoDelete(node);\n         return true;\n+      }\n+      if (ktx.txState().nodeIsDeletedInThisTx(node))\n+      {\n+        // already deleted\n+        return false;\n+      }\n     }\n \n-    @Override\n-    public Value nodeSetProperty( long node, int propertyKey, Value value )\n-            throws EntityNotFoundException, ConstraintValidationException, AutoIndexingKernelException\n-    {\n-        acquireExclusiveNodeLock( node );\n-        ktx.assertOpen();\n-\n-        singleNode( node );\n-        acquireSharedNodeLabelLocks();\n-        Iterator<ConstraintDescriptor> constraints = allStoreHolder.constraintsGetForProperty( propertyKey );\n-        Iterator<IndexBackedConstraintDescriptor> uniquenessConstraints =\n-                new CastingIterator<>( constraints, IndexBackedConstraintDescriptor.class );\n-\n-        NodeSchemaMatcher.onMatchingSchema( uniquenessConstraints, nodeCursor, propertyCursor, propertyKey,\n-                ( constraint, propertyIds ) ->\n-                {\n-                    if ( propertyIds.contains( propertyKey ) )\n-                    {\n-                        Value previousValue = readNodeProperty( propertyKey );\n-                        if ( value.equals( previousValue ) )\n-                        {\n-                            // since we are changing to the same value, there is no need to check\n-                            return;\n-                        }\n-                    }\n-                    validateNoExistingNodeWithExactValues( constraint,\n-                            getAllPropertyValues( constraint.schema(), propertyKey, value ), node );\n-                } );\n-\n-        Value existingValue = readNodeProperty( propertyKey );\n-\n-        if ( existingValue == NO_VALUE )\n-        {\n-            //no existing value, we just add it\n-            autoIndexing.nodes().propertyAdded( this, node, propertyKey, value );\n-            ktx.txState().nodeDoAddProperty( node, propertyKey, value );\n-            updater.onPropertyAdd( nodeCursor, propertyCursor, propertyKey, value );\n-            return NO_VALUE;\n-        }\n-        else\n-        {\n-            // We need to auto-index even if not actually changing the value.\n-            autoIndexing.nodes().propertyChanged( this, node, propertyKey, existingValue, value );\n-            if ( propertyHasChanged( value, existingValue ) )\n-            {\n-                //the value has changed to a new value\n-                ktx.txState().nodeDoChangeProperty( node, propertyKey, existingValue, value );\n-                updater.onPropertyChange( nodeCursor, propertyCursor, propertyKey, existingValue, value );\n-            }\n-            return existingValue;\n-        }\n-    }\n-\n-    @Override\n-    public Value nodeRemoveProperty( long node, int propertyKey )\n-            throws EntityNotFoundException, AutoIndexingKernelException\n-    {\n-        acquireExclusiveNodeLock( node );\n-        ktx.assertOpen();\n-        singleNode( node );\n-        Value existingValue = readNodeProperty( propertyKey );\n-\n-        if ( existingValue != NO_VALUE )\n-        {\n-            acquireSharedNodeLabelLocks();\n-            autoIndexing.nodes().propertyRemoved( this, node, propertyKey );\n-            ktx.txState().nodeDoRemoveProperty( node, propertyKey );\n-            updater.onPropertyRemove( nodeCursor, propertyCursor, propertyKey, existingValue );\n-        }\n-\n-        return existingValue;\n-    }\n-\n-    @Override\n-    public Value relationshipSetProperty( long relationship, int propertyKey, Value value )\n-            throws EntityNotFoundException, AutoIndexingKernelException\n-    {\n-        acquireExclusiveRelationshipLock( relationship );\n-        ktx.assertOpen();\n-        singleRelationship( relationship );\n-        Value existingValue = readRelationshipProperty( propertyKey );\n-        if ( existingValue == NO_VALUE )\n-        {\n-            autoIndexing.relationships().propertyAdded( this, relationship, propertyKey, value );\n-            ktx.txState().relationshipDoReplaceProperty( relationship, propertyKey, NO_VALUE, value );\n-            return NO_VALUE;\n-        }\n-        else\n-        {\n-            // We need to auto-index even if not actually changing the value.\n-            autoIndexing.relationships().propertyChanged( this, relationship, propertyKey, existingValue, value );\n-            if ( propertyHasChanged( existingValue, value ) )\n-            {\n-\n-                ktx.txState().relationshipDoReplaceProperty( relationship, propertyKey, existingValue, value );\n-            }\n-\n-            return existingValue;\n-        }\n-    }\n-\n-    @Override\n-    public Value relationshipRemoveProperty( long relationship, int propertyKey )\n-            throws EntityNotFoundException, AutoIndexingKernelException\n-    {\n-        acquireExclusiveRelationshipLock( relationship );\n-        ktx.assertOpen();\n-        singleRelationship( relationship );\n-        Value existingValue = readRelationshipProperty( propertyKey );\n-\n-        if ( existingValue != NO_VALUE )\n-        {\n-            autoIndexing.relationships().propertyRemoved( this, relationship, propertyKey );\n-            ktx.txState().relationshipDoRemoveProperty( relationship, propertyKey );\n-        }\n-\n-        return existingValue;\n-    }\n-\n-    @Override\n-    public Value graphSetProperty( int propertyKey, Value value )\n-    {\n-        ktx.statementLocks().optimistic()\n-                .acquireExclusive( ktx.lockTracer(), ResourceTypes.GRAPH_PROPS, ResourceTypes.graphPropertyResource() );\n-        ktx.assertOpen();\n-\n-        Value existingValue = readGraphProperty( propertyKey );\n-        if ( !existingValue.equals( value ) )\n-        {\n-            ktx.txState().graphDoReplaceProperty( propertyKey, existingValue, value );\n-        }\n-        return existingValue;\n-    }\n-\n-    @Override\n-    public Value graphRemoveProperty( int propertyKey )\n-    {\n-        ktx.statementLocks().optimistic()\n-                .acquireExclusive( ktx.lockTracer(), ResourceTypes.GRAPH_PROPS, ResourceTypes.graphPropertyResource() );\n-        ktx.assertOpen();\n-        Value existingValue = readGraphProperty( propertyKey );\n-        if ( existingValue != Values.NO_VALUE )\n-        {\n-            ktx.txState().graphDoRemoveProperty( propertyKey );\n-        }\n-        return existingValue;\n-    }\n-\n-    @Override\n-    public void nodeAddToExplicitIndex( String indexName, long node, String key, Object value )\n-            throws ExplicitIndexNotFoundKernelException\n+    if (lock)\n     {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().nodeChanges( indexName ).addNode( node, key, value );\n+      ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), ResourceTypes.NODE, node);\n     }\n \n-    @Override\n-    public void nodeRemoveFromExplicitIndex( String indexName, long node ) throws ExplicitIndexNotFoundKernelException\n+    allStoreHolder.singleNode(node, nodeCursor);\n+    if (nodeCursor.next())\n     {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().nodeChanges( indexName ).remove( node );\n-    }\n+      acquireSharedNodeLabelLocks();\n \n-    @Override\n-    public void nodeRemoveFromExplicitIndex( String indexName, long node, String key, Object value )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().nodeChanges( indexName ).remove( node, key, value );\n+      autoIndexing.nodes().entityRemoved(this, node);\n+      ktx.txState().nodeDoDelete(node);\n+      return true;\n     }\n \n-    @Override\n-    public void nodeRemoveFromExplicitIndex( String indexName, long node, String key )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().nodeChanges( indexName ).remove( node, key );\n-    }\n+    // tried to delete node that does not exist\n+    return false;\n+  }\n \n-    @Override\n-    public void nodeExplicitIndexCreate( String indexName, Map<String,String> customConfig )\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().createIndex( IndexEntityType.Node, indexName, customConfig );\n-    }\n+  /**\n+   * Assuming that the nodeCursor have been initialized to the node that labels are retrieved from\n+   */\n+  private void acquireSharedNodeLabelLocks()\n+  {\n+    ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), ResourceTypes.LABEL, nodeCursor.labels().all());\n+  }\n \n-    @Override\n-    public void nodeExplicitIndexCreateLazily( String indexName, Map<String,String> customConfig )\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.getOrCreateNodeIndexConfig( indexName, customConfig );\n-    }\n-\n-    @Override\n-    public void nodeExplicitIndexDrop( String indexName ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ExplicitIndexTransactionState txState = allStoreHolder.explicitIndexTxState();\n-        txState.nodeChanges( indexName ).drop();\n-        txState.deleteIndex( IndexEntityType.Node, indexName );\n-    }\n+  private boolean relationshipDelete(long relationship, boolean lock) throws AutoIndexingKernelException\n+  {\n+    allStoreHolder.singleRelationship(relationship, relationshipCursor); // tx-state aware\n \n-    @Override\n-    public String nodeExplicitIndexSetConfiguration( String indexName, String key, String value )\n-            throws ExplicitIndexNotFoundKernelException\n+    if (relationshipCursor.next())\n     {\n-       ktx.assertOpen();\n-       return allStoreHolder.explicitIndexStore().setNodeIndexConfiguration( indexName, key, value );\n-    }\n-\n-    @Override\n-    public String nodeExplicitIndexRemoveConfiguration( String indexName, String key )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        return allStoreHolder.explicitIndexStore().removeNodeIndexConfiguration( indexName, key );\n-    }\n-\n-    @Override\n-    public void relationshipAddToExplicitIndex( String indexName, long relationship, String key, Object value )\n-            throws ExplicitIndexNotFoundKernelException, EntityNotFoundException\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.singleRelationship( relationship, relationshipCursor );\n-        if ( relationshipCursor.next() )\n-        {\n-            allStoreHolder.explicitIndexTxState().relationshipChanges( indexName ).addRelationship( relationship, key, value,\n-                    relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference() );\n-        }\n-        else\n-        {\n-            throw new EntityNotFoundException( EntityType.RELATIONSHIP, relationship );\n-        }\n-    }\n+      if (lock)\n+      {\n+        lockRelationshipNodes(relationshipCursor.sourceNodeReference(),\n+            relationshipCursor.targetNodeReference());\n+        acquireExclusiveRelationshipLock(relationship);\n+      }\n+      if (!allStoreHolder.relationshipExists(relationship))\n+      {\n+        return false;\n+      }\n \n-    @Override\n-    public void relationshipRemoveFromExplicitIndex( String indexName, long relationship, String key, Object value )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().relationshipChanges( indexName ).remove( relationship, key, value );\n-    }\n+      ktx.assertOpen();\n \n-    @Override\n-    public void relationshipRemoveFromExplicitIndex( String indexName, long relationship, String key )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().relationshipChanges( indexName ).remove( relationship, key );\n+      autoIndexing.relationships().entityRemoved(this, relationship);\n \n+      TransactionState txState = ktx.txState();\n+      if (txState.relationshipIsAddedInThisTx(relationship))\n+      {\n+        txState.relationshipDoDeleteAddedInThisTx(relationship);\n+      } else\n+      {\n+        txState.relationshipDoDelete(relationship, relationshipCursor.getType(),\n+            relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference());\n+      }\n+      return true;\n     }\n \n-    @Override\n-    public void relationshipRemoveFromExplicitIndex( String indexName, long relationship )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().relationshipChanges( indexName ).remove( relationship );\n-    }\n+    // tried to delete relationship that does not exist\n+    return false;\n+  }\n \n-    @Override\n-    public void relationshipExplicitIndexCreate( String indexName, Map<String,String> customConfig )\n+  private void singleNode(long node) throws EntityNotFoundException\n+  {\n+    allStoreHolder.singleNode(node, nodeCursor);\n+    if (!nodeCursor.next())\n     {\n-        ktx.assertOpen();\n-        allStoreHolder.explicitIndexTxState().createIndex( IndexEntityType.Relationship, indexName, customConfig );\n+      throw new EntityNotFoundException(EntityType.NODE, node);\n     }\n+  }\n \n-    @Override\n-    public void relationshipExplicitIndexCreateLazily( String indexName, Map<String,String> customConfig )\n+  private void singleRelationship(long relationship) throws EntityNotFoundException\n+  {\n+    allStoreHolder.singleRelationship(relationship, relationshipCursor);\n+    if (!relationshipCursor.next())\n     {\n-        ktx.assertOpen();\n-        allStoreHolder.getOrCreateRelationshipIndexConfig( indexName, customConfig );\n+      throw new EntityNotFoundException(EntityType.RELATIONSHIP, relationship);\n     }\n+  }\n \n-    @Override\n-    public void relationshipExplicitIndexDrop( String indexName ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ExplicitIndexTransactionState txState = allStoreHolder.explicitIndexTxState();\n-        txState.relationshipChanges( indexName ).drop();\n-        txState.deleteIndex( IndexEntityType.Relationship, indexName );\n-    }\n+  /**\n+   * Fetch the property values for all properties in schema for a given node. Return these as an exact predicate\n+   * array.\n+   */\n+  private IndexQuery.ExactPredicate[] getAllPropertyValues(SchemaDescriptor schema, int changedPropertyKeyId,\n+                                                           Value changedValue)\n+  {\n+    int[] schemaPropertyIds = schema.getPropertyIds();\n+    IndexQuery.ExactPredicate[] values = new IndexQuery.ExactPredicate[schemaPropertyIds.length];\n \n-    private Value readNodeProperty( int propertyKey )\n+    int nMatched = 0;\n+    nodeCursor.properties(propertyCursor);\n+    while (propertyCursor.next())\n     {\n-        nodeCursor.properties( propertyCursor );\n-\n-        //Find out if the property had a value\n-        Value existingValue = NO_VALUE;\n-        while ( propertyCursor.next() )\n+      int nodePropertyId = propertyCursor.propertyKey();\n+      int k = ArrayUtils.indexOf(schemaPropertyIds, nodePropertyId);\n+      if (k >= 0)\n+      {\n+        if (nodePropertyId != StatementConstants.NO_SUCH_PROPERTY_KEY)\n         {\n-            if ( propertyCursor.propertyKey() == propertyKey )\n-            {\n-                existingValue = propertyCursor.propertyValue();\n-                break;\n-            }\n+          values[k] = IndexQuery.exact(nodePropertyId, propertyCursor.propertyValue());\n         }\n-        return existingValue;\n+        nMatched++;\n+      }\n     }\n \n-    private Value readRelationshipProperty( int propertyKey )\n+    //This is true if we are adding a property\n+    if (changedPropertyKeyId != NO_SUCH_PROPERTY_KEY)\n     {\n-        relationshipCursor.properties( propertyCursor );\n-\n-        //Find out if the property had a value\n-        Value existingValue = NO_VALUE;\n-        while ( propertyCursor.next() )\n-        {\n-            if ( propertyCursor.propertyKey() == propertyKey )\n-            {\n-                existingValue = propertyCursor.propertyValue();\n-                break;\n-            }\n-        }\n-        return existingValue;\n-    }\n-\n-    private Value readGraphProperty( int propertyKey )\n-    {\n-        allStoreHolder.graphProperties( propertyCursor );\n-\n-        //Find out if the property had a value\n-        Value existingValue = NO_VALUE;\n-        while ( propertyCursor.next() )\n-        {\n-            if ( propertyCursor.propertyKey() == propertyKey )\n-            {\n-                existingValue = propertyCursor.propertyValue();\n-                break;\n-            }\n-        }\n-        return existingValue;\n+      int k = ArrayUtils.indexOf(schemaPropertyIds, changedPropertyKeyId);\n+      if (k >= 0)\n+      {\n+        values[k] = IndexQuery.exact(changedPropertyKeyId, changedValue);\n+        nMatched++;\n+      }\n     }\n \n-    public CursorFactory cursors()\n+    if (nMatched < values.length)\n     {\n-        return cursors;\n+      return null;\n     }\n+    return values;\n+  }\n \n-    public Procedures procedures()\n+  /**\n+   * Check so that there is not an existing node with the exact match of label and property\n+   */\n+  private void validateNoExistingNodeWithExactValues(IndexBackedConstraintDescriptor constraint,\n+                                                     IndexQuery.ExactPredicate[] propertyValues, long modifiedNode\n+  ) throws UniquePropertyValueValidationException, UnableToValidateConstraintException\n+  {\n+    SchemaIndexDescriptor schemaIndexDescriptor = constraint.ownedIndexDescriptor();\n+    CapableIndexReference indexReference = allStoreHolder.indexGetCapability(schemaIndexDescriptor);\n+    try (DefaultNodeValueIndexCursor valueCursor = cursors.allocateNodeValueIndexCursor();\n+         IndexReaders indexReaders = new IndexReaders(indexReference, allStoreHolder))\n     {\n-        return allStoreHolder;\n-    }\n-\n-    public void release()\n-    {\n-        if ( nodeCursor != null )\n-        {\n-            nodeCursor.close();\n-            nodeCursor = null;\n-        }\n-        if ( propertyCursor != null )\n-        {\n-            propertyCursor.close();\n-            propertyCursor = null;\n-        }\n-        if ( relationshipCursor != null )\n-        {\n-            relationshipCursor.close();\n-            relationshipCursor = null;\n-        }\n-\n-        cursors.assertClosed();\n-        cursors.release();\n-    }\n+      assertIndexOnline(schemaIndexDescriptor);\n+      int labelId = schemaIndexDescriptor.schema().keyId();\n \n-    public Token token()\n-    {\n-        return token;\n-    }\n+      //Take a big fat lock, and check for existing node in index\n+      ktx.statementLocks().optimistic().acquireExclusive(\n+          ktx.lockTracer(), INDEX_ENTRY,\n+          indexEntryResourceId(labelId, propertyValues)\n+      );\n \n-    public ExplicitIndexRead indexRead()\n+      allStoreHolder.nodeIndexSeekWithFreshIndexReader(valueCursor, indexReaders.createReader(), propertyValues);\n+      if (valueCursor.next() && valueCursor.nodeReference() != modifiedNode)\n+      {\n+        throw new UniquePropertyValueValidationException(constraint, VALIDATION,\n+            new IndexEntryConflictException(valueCursor.nodeReference(), NO_SUCH_NODE,\n+                IndexQuery.asValueTuple(propertyValues)));\n+      }\n+    } catch (IndexNotFoundKernelException | IndexBrokenKernelException | IndexNotApplicableKernelException e)\n     {\n-        return allStoreHolder;\n+      throw new UnableToValidateConstraintException(constraint, e);\n     }\n+  }\n \n-    public SchemaRead schemaRead()\n+  private void assertIndexOnline(SchemaIndexDescriptor descriptor)\n+      throws IndexNotFoundKernelException, IndexBrokenKernelException\n+  {\n+    switch (allStoreHolder.indexGetState(descriptor))\n     {\n-        return allStoreHolder;\n+      case ONLINE:\n+        return;\n+      default:\n+        throw new IndexBrokenKernelException(allStoreHolder.indexGetFailure(descriptor));\n     }\n+  }\n \n-    public Read dataRead()\n-    {\n-        return allStoreHolder;\n-    }\n+  @Override\n+  public boolean nodeRemoveLabel(long node, int labelId) throws EntityNotFoundException\n+  {\n+    acquireExclusiveNodeLock(node);\n+    ktx.assertOpen();\n \n-    public DefaultNodeCursor nodeCursor()\n-    {\n-        return nodeCursor;\n-    }\n+    singleNode(node);\n \n-    public DefaultRelationshipScanCursor relationshipCursor()\n+    if (!nodeCursor.labels().contains(labelId))\n     {\n-        return relationshipCursor;\n+      //the label wasn't there, nothing to do\n+      return false;\n     }\n \n-    public DefaultPropertyCursor propertyCursor()\n-    {\n-        return propertyCursor;\n-    }\n+    acquireSharedLabelLock(labelId);\n+    ktx.txState().nodeDoRemoveLabel(labelId, node);\n+    updater.onLabelChange(labelId, nodeCursor, propertyCursor, REMOVED_LABEL);\n+    return true;\n+  }\n \n-    @Override\n-    public IndexReference indexCreate( SchemaDescriptor descriptor, String providerName ) throws SchemaKernelException\n-    {\n-        acquireExclusiveLabelLock( descriptor.keyId() );\n-        ktx.assertOpen();\n-        assertValidDescriptor( descriptor, SchemaKernelException.OperationContext.INDEX_CREATION );\n-        assertIndexDoesNotExist( SchemaKernelException.OperationContext.INDEX_CREATION, descriptor );\n-\n-        SchemaIndexDescriptor indexDescriptor = SchemaIndexDescriptorFactory.forSchema( descriptor );\n-        IndexProvider.Descriptor providerDescriptor = providerByName( providerName );\n-        ktx.txState().indexRuleDoAdd( indexDescriptor, providerDescriptor );\n-        return DefaultIndexReference.fromDescriptor( indexDescriptor );\n-    }\n+  @Override\n+  public Value nodeSetProperty(long node, int propertyKey, Value value)\n+      throws EntityNotFoundException, ConstraintValidationException, AutoIndexingKernelException\n+  {\n+    acquireExclusiveNodeLock(node);\n+    ktx.assertOpen();\n \n-    @Override\n-    public void indexDrop( IndexReference index ) throws SchemaKernelException\n-    {\n-        assertValidIndex( index );\n+    singleNode(node);\n+    acquireSharedNodeLabelLocks();\n+    Iterator<ConstraintDescriptor> constraints = allStoreHolder.constraintsGetForProperty(propertyKey);\n+    Iterator<IndexBackedConstraintDescriptor> uniquenessConstraints =\n+        new CastingIterator<>(constraints, IndexBackedConstraintDescriptor.class);\n \n-        acquireExclusiveLabelLock( index.label() );\n-        ktx.assertOpen();\n-        org.neo4j.kernel.api.schema.LabelSchemaDescriptor descriptor = labelDescriptor( index );\n-        try\n+    NodeSchemaMatcher.onMatchingSchema(uniquenessConstraints, nodeCursor, propertyCursor, propertyKey,\n+        (constraint, propertyIds) ->\n         {\n-            SchemaIndexDescriptor existingIndex = allStoreHolder.indexGetForSchema( descriptor );\n-\n-            if ( existingIndex == null )\n-            {\n-                throw new NoSuchIndexException( descriptor );\n-            }\n-\n-            if ( existingIndex.type() == UNIQUE )\n+          if (propertyIds.contains(propertyKey))\n+          {\n+            Value previousValue = readNodeProperty(propertyKey);\n+            if (value.equals(previousValue))\n             {\n-                if ( allStoreHolder.indexGetOwningUniquenessConstraintId( existingIndex ) != null )\n-                {\n-                    throw new IndexBelongsToConstraintException( descriptor );\n-                }\n+              // since we are changing to the same value, there is no need to check\n+              return;\n             }\n-        }\n-        catch ( IndexBelongsToConstraintException | NoSuchIndexException e )\n-        {\n-            throw new DropIndexFailureException( descriptor, e );\n-        }\n-        ktx.txState().indexDoDrop( allStoreHolder.indexDescriptor( index ) );\n-    }\n-\n-    @Override\n-    public ConstraintDescriptor uniquePropertyConstraintCreate( SchemaDescriptor descriptor, String providerName )\n-            throws SchemaKernelException\n-    {\n-        //Lock\n-        acquireExclusiveLabelLock( descriptor.keyId() );\n-        ktx.assertOpen();\n-\n-        //Check data integrity\n-        assertValidDescriptor( descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION );\n-        UniquenessConstraintDescriptor constraint = ConstraintDescriptorFactory.uniqueForSchema( descriptor );\n-        assertConstraintDoesNotExist( constraint );\n-        // It is not allowed to create uniqueness constraints on indexed label/property pairs\n-        assertIndexDoesNotExist( SchemaKernelException.OperationContext.CONSTRAINT_CREATION, descriptor );\n-\n-        // Create constraints\n-        IndexProvider.Descriptor providerDescriptor = providerByName( providerName );\n-        indexBackedConstraintCreate( constraint, providerDescriptor );\n-        return constraint;\n-    }\n-\n-    @Override\n-    public ConstraintDescriptor nodeKeyConstraintCreate( LabelSchemaDescriptor descriptor, String providerName ) throws SchemaKernelException\n-    {\n-        //Lock\n-        acquireExclusiveLabelLock( descriptor.getLabelId() );\n-        ktx.assertOpen();\n-\n-        //Check data integrity\n-        assertValidDescriptor( descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION );\n-        NodeKeyConstraintDescriptor constraint = ConstraintDescriptorFactory.nodeKeyForSchema( descriptor );\n-        assertConstraintDoesNotExist( constraint );\n-        // It is not allowed to create node key constraints on indexed label/property pairs\n-        assertIndexDoesNotExist( SchemaKernelException.OperationContext.CONSTRAINT_CREATION, descriptor );\n-\n-        //enforce constraints\n-        try ( NodeLabelIndexCursor nodes = cursors.allocateNodeLabelIndexCursor() )\n+          }\n+          validateNoExistingNodeWithExactValues(constraint,\n+              getAllPropertyValues(constraint.schema(), propertyKey, value), node);\n+        });\n+\n+    Value existingValue = readNodeProperty(propertyKey);\n+\n+    if (existingValue == NO_VALUE)\n+    {\n+      //no existing value, we just add it\n+      autoIndexing.nodes().propertyAdded(this, node, propertyKey, value);\n+      ktx.txState().nodeDoAddProperty(node, propertyKey, value);\n+      updater.onPropertyAdd(nodeCursor, propertyCursor, propertyKey, value);\n+      return NO_VALUE;\n+    } else\n+    {\n+      // We need to auto-index even if not actually changing the value.\n+      autoIndexing.nodes().propertyChanged(this, node, propertyKey, existingValue, value);\n+      if (propertyHasChanged(value, existingValue))\n+      {\n+        //the value has changed to a new value\n+        ktx.txState().nodeDoChangeProperty(node, propertyKey, existingValue, value);\n+        updater.onPropertyChange(nodeCursor, propertyCursor, propertyKey, existingValue, value);\n+      }\n+      return existingValue;\n+    }\n+  }\n+\n+  @Override\n+  public Value nodeRemoveProperty(long node, int propertyKey)\n+      throws EntityNotFoundException, AutoIndexingKernelException\n+  {\n+    acquireExclusiveNodeLock(node);\n+    ktx.assertOpen();\n+    singleNode(node);\n+    Value existingValue = readNodeProperty(propertyKey);\n+\n+    if (existingValue != NO_VALUE)\n+    {\n+      acquireSharedNodeLabelLocks();\n+      autoIndexing.nodes().propertyRemoved(this, node, propertyKey);\n+      ktx.txState().nodeDoRemoveProperty(node, propertyKey);\n+      updater.onPropertyRemove(nodeCursor, propertyCursor, propertyKey, existingValue);\n+    }\n+\n+    return existingValue;\n+  }\n+\n+  @Override\n+  public Value relationshipSetProperty(long relationship, int propertyKey, Value value)\n+      throws EntityNotFoundException, AutoIndexingKernelException\n+  {\n+    acquireExclusiveRelationshipLock(relationship);\n+    ktx.assertOpen();\n+    singleRelationship(relationship);\n+    Value existingValue = readRelationshipProperty(propertyKey);\n+    if (existingValue == NO_VALUE)\n+    {\n+      autoIndexing.relationships().propertyAdded(this, relationship, propertyKey, value);\n+      ktx.txState().relationshipDoReplaceProperty(relationship, propertyKey, NO_VALUE, value);\n+      return NO_VALUE;\n+    } else\n+    {\n+      // We need to auto-index even if not actually changing the value.\n+      autoIndexing.relationships().propertyChanged(this, relationship, propertyKey, existingValue, value);\n+      if (propertyHasChanged(existingValue, value))\n+      {\n+\n+        ktx.txState().relationshipDoReplaceProperty(relationship, propertyKey, existingValue, value);\n+      }\n+\n+      return existingValue;\n+    }\n+  }\n+\n+  @Override\n+  public Value relationshipRemoveProperty(long relationship, int propertyKey)\n+      throws EntityNotFoundException, AutoIndexingKernelException\n+  {\n+    acquireExclusiveRelationshipLock(relationship);\n+    ktx.assertOpen();\n+    singleRelationship(relationship);\n+    Value existingValue = readRelationshipProperty(propertyKey);\n+\n+    if (existingValue != NO_VALUE)\n+    {\n+      autoIndexing.relationships().propertyRemoved(this, relationship, propertyKey);\n+      ktx.txState().relationshipDoRemoveProperty(relationship, propertyKey);\n+    }\n+\n+    return existingValue;\n+  }\n+\n+  @Override\n+  public Value graphSetProperty(int propertyKey, Value value)\n+  {\n+    ktx.statementLocks().optimistic()\n+        .acquireExclusive(ktx.lockTracer(), ResourceTypes.GRAPH_PROPS, ResourceTypes.graphPropertyResource());\n+    ktx.assertOpen();\n+\n+    Value existingValue = readGraphProperty(propertyKey);\n+    if (!existingValue.equals(value))\n+    {\n+      ktx.txState().graphDoReplaceProperty(propertyKey, existingValue, value);\n+    }\n+    return existingValue;\n+  }\n+\n+  @Override\n+  public Value graphRemoveProperty(int propertyKey)\n+  {\n+    ktx.statementLocks().optimistic()\n+        .acquireExclusive(ktx.lockTracer(), ResourceTypes.GRAPH_PROPS, ResourceTypes.graphPropertyResource());\n+    ktx.assertOpen();\n+    Value existingValue = readGraphProperty(propertyKey);\n+    if (existingValue != Values.NO_VALUE)\n+    {\n+      ktx.txState().graphDoRemoveProperty(propertyKey);\n+    }\n+    return existingValue;\n+  }\n+\n+  @Override\n+  public void nodeAddToExplicitIndex(String indexName, long node, String key, Object value)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().nodeChanges(indexName).addNode(node, key, value);\n+  }\n+\n+  @Override\n+  public void nodeRemoveFromExplicitIndex(String indexName, long node) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().nodeChanges(indexName).remove(node);\n+  }\n+\n+  @Override\n+  public void nodeRemoveFromExplicitIndex(String indexName, long node, String key, Object value)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().nodeChanges(indexName).remove(node, key, value);\n+  }\n+\n+  @Override\n+  public void nodeRemoveFromExplicitIndex(String indexName, long node, String key)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().nodeChanges(indexName).remove(node, key);\n+  }\n+\n+  @Override\n+  public void nodeExplicitIndexCreate(String indexName, Map<String, String> customConfig)\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().createIndex(IndexEntityType.Node, indexName, customConfig);\n+  }\n+\n+  @Override\n+  public void nodeExplicitIndexCreateLazily(String indexName, Map<String, String> customConfig)\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.getOrCreateNodeIndexConfig(indexName, customConfig);\n+  }\n+\n+  @Override\n+  public void nodeExplicitIndexDrop(String indexName) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ExplicitIndexTransactionState txState = allStoreHolder.explicitIndexTxState();\n+    txState.nodeChanges(indexName).drop();\n+    txState.deleteIndex(IndexEntityType.Node, indexName);\n+  }\n+\n+  @Override\n+  public String nodeExplicitIndexSetConfiguration(String indexName, String key, String value)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return allStoreHolder.explicitIndexStore().setNodeIndexConfiguration(indexName, key, value);\n+  }\n+\n+  @Override\n+  public String nodeExplicitIndexRemoveConfiguration(String indexName, String key)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return allStoreHolder.explicitIndexStore().removeNodeIndexConfiguration(indexName, key);\n+  }\n+\n+  @Override\n+  public void relationshipAddToExplicitIndex(String indexName, long relationship, String key, Object value)\n+      throws ExplicitIndexNotFoundKernelException, EntityNotFoundException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.singleRelationship(relationship, relationshipCursor);\n+    if (relationshipCursor.next())\n+    {\n+      allStoreHolder.explicitIndexTxState().relationshipChanges(indexName).addRelationship(relationship, key, value,\n+          relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference());\n+    } else\n+    {\n+      throw new EntityNotFoundException(EntityType.RELATIONSHIP, relationship);\n+    }\n+  }\n+\n+  @Override\n+  public void relationshipRemoveFromExplicitIndex(String indexName, long relationship, String key, Object value)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().relationshipChanges(indexName).remove(relationship, key, value);\n+  }\n+\n+  @Override\n+  public void relationshipRemoveFromExplicitIndex(String indexName, long relationship, String key)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().relationshipChanges(indexName).remove(relationship, key);\n+\n+  }\n+\n+  @Override\n+  public void relationshipRemoveFromExplicitIndex(String indexName, long relationship)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().relationshipChanges(indexName).remove(relationship);\n+  }\n+\n+  @Override\n+  public void relationshipExplicitIndexCreate(String indexName, Map<String, String> customConfig)\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.explicitIndexTxState().createIndex(IndexEntityType.Relationship, indexName, customConfig);\n+  }\n+\n+  @Override\n+  public void relationshipExplicitIndexCreateLazily(String indexName, Map<String, String> customConfig)\n+  {\n+    ktx.assertOpen();\n+    allStoreHolder.getOrCreateRelationshipIndexConfig(indexName, customConfig);\n+  }\n+\n+  @Override\n+  public void relationshipExplicitIndexDrop(String indexName) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ExplicitIndexTransactionState txState = allStoreHolder.explicitIndexTxState();\n+    txState.relationshipChanges(indexName).drop();\n+    txState.deleteIndex(IndexEntityType.Relationship, indexName);\n+  }\n+\n+  private Value readNodeProperty(int propertyKey)\n+  {\n+    nodeCursor.properties(propertyCursor);\n+\n+    //Find out if the property had a value\n+    Value existingValue = NO_VALUE;\n+    while (propertyCursor.next())\n+    {\n+      if (propertyCursor.propertyKey() == propertyKey)\n+      {\n+        existingValue = propertyCursor.propertyValue();\n+        break;\n+      }\n+    }\n+    return existingValue;\n+  }\n+\n+  private Value readRelationshipProperty(int propertyKey)\n+  {\n+    relationshipCursor.properties(propertyCursor);\n+\n+    //Find out if the property had a value\n+    Value existingValue = NO_VALUE;\n+    while (propertyCursor.next())\n+    {\n+      if (propertyCursor.propertyKey() == propertyKey)\n+      {\n+        existingValue = propertyCursor.propertyValue();\n+        break;\n+      }\n+    }\n+    return existingValue;\n+  }\n+\n+  private Value readGraphProperty(int propertyKey)\n+  {\n+    allStoreHolder.graphProperties(propertyCursor);\n+\n+    //Find out if the property had a value\n+    Value existingValue = NO_VALUE;\n+    while (propertyCursor.next())\n+    {\n+      if (propertyCursor.propertyKey() == propertyKey)\n+      {\n+        existingValue = propertyCursor.propertyValue();\n+        break;\n+      }\n+    }\n+    return existingValue;\n+  }\n+\n+  public CursorFactory cursors()\n+  {\n+    return cursors;\n+  }\n+\n+  public Procedures procedures()\n+  {\n+    return allStoreHolder;\n+  }\n+\n+  public void release()\n+  {\n+    if (nodeCursor != null)\n+    {\n+      nodeCursor.close();\n+      nodeCursor = null;\n+    }\n+    if (propertyCursor != null)\n+    {\n+      propertyCursor.close();\n+      propertyCursor = null;\n+    }\n+    if (relationshipCursor != null)\n+    {\n+      relationshipCursor.close();\n+      relationshipCursor = null;\n+    }\n+\n+    cursors.assertClosed();\n+    cursors.release();\n+  }\n+\n+  public Token token()\n+  {\n+    return token;\n+  }\n+\n+  public ExplicitIndexRead indexRead()\n+  {\n+    return allStoreHolder;\n+  }\n+\n+  public SchemaRead schemaRead()\n+  {\n+    return allStoreHolder;\n+  }\n+\n+  public Read dataRead()\n+  {\n+    return allStoreHolder;\n+  }\n+\n+  public DefaultNodeCursor nodeCursor()\n+  {\n+    return nodeCursor;\n+  }\n+\n+  public DefaultRelationshipScanCursor relationshipCursor()\n+  {\n+    return relationshipCursor;\n+  }\n+\n+  public DefaultPropertyCursor propertyCursor()\n+  {\n+    return propertyCursor;\n+  }\n+\n+  @Override\n+  public IndexReference indexCreate(SchemaDescriptor descriptor, String providerName) throws SchemaKernelException\n+  {\n+    acquireExclusiveLabelLock(descriptor.keyId());\n+    ktx.assertOpen();\n+    assertValidDescriptor(descriptor, SchemaKernelException.OperationContext.INDEX_CREATION);\n+    assertIndexDoesNotExist(SchemaKernelException.OperationContext.INDEX_CREATION, descriptor);\n+\n+    SchemaIndexDescriptor indexDescriptor = SchemaIndexDescriptorFactory.forSchema(descriptor);\n+    IndexProvider.Descriptor providerDescriptor = providerByName(providerName);\n+    ktx.txState().indexRuleDoAdd(indexDescriptor, providerDescriptor);\n+    return DefaultIndexReference.fromDescriptor(indexDescriptor);\n+  }\n+\n+  @Override\n+  public void indexDrop(IndexReference index) throws SchemaKernelException\n+  {\n+    assertValidIndex(index);\n+\n+    acquireExclusiveLabelLock(index.label());\n+    ktx.assertOpen();\n+    org.neo4j.kernel.api.schema.LabelSchemaDescriptor descriptor = labelDescriptor(index);\n+    try\n+    {\n+      SchemaIndexDescriptor existingIndex = allStoreHolder.indexGetForSchema(descriptor);\n+\n+      if (existingIndex == null)\n+      {\n+        throw new NoSuchIndexException(descriptor);\n+      }\n+\n+      if (existingIndex.type() == UNIQUE)\n+      {\n+        if (allStoreHolder.indexGetOwningUniquenessConstraintId(existingIndex) != null)\n         {\n-            allStoreHolder.nodeLabelScan( descriptor.getLabelId(), nodes );\n-            constraintSemantics.validateNodeKeyConstraint( nodes, nodeCursor, propertyCursor, descriptor );\n+          throw new IndexBelongsToConstraintException(descriptor);\n         }\n-\n-        //create constraint\n-        IndexProvider.Descriptor providerDescriptor = providerByName( providerName );\n-        indexBackedConstraintCreate( constraint, providerDescriptor );\n-        return constraint;\n-    }\n-\n-    @Override\n-    public ConstraintDescriptor nodePropertyExistenceConstraintCreate( LabelSchemaDescriptor descriptor )\n-            throws SchemaKernelException\n-    {\n-        //Lock\n-        acquireExclusiveLabelLock( descriptor.getLabelId() );\n-        ktx.assertOpen();\n-\n-        //verify data integrity\n-        assertValidDescriptor( descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION );\n-        ConstraintDescriptor constraint = ConstraintDescriptorFactory.existsForSchema( descriptor );\n-        assertConstraintDoesNotExist( constraint );\n-\n-        //enforce constraints\n-        try ( NodeLabelIndexCursor nodes = cursors.allocateNodeLabelIndexCursor() )\n+      }\n+    } catch (IndexBelongsToConstraintException | NoSuchIndexException e)\n+    {\n+      throw new DropIndexFailureException(descriptor, e);\n+    }\n+    ktx.txState().indexDoDrop(allStoreHolder.indexDescriptor(index));\n+  }\n+\n+  @Override\n+  public ConstraintDescriptor uniquePropertyConstraintCreate(SchemaDescriptor descriptor, String providerName)\n+      throws SchemaKernelException\n+  {\n+    //Lock\n+    acquireExclusiveLabelLock(descriptor.keyId());\n+    ktx.assertOpen();\n+\n+    //Check data integrity\n+    assertValidDescriptor(descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION);\n+    UniquenessConstraintDescriptor constraint = ConstraintDescriptorFactory.uniqueForSchema(descriptor);\n+    assertConstraintDoesNotExist(constraint);\n+    // It is not allowed to create uniqueness constraints on indexed label/property pairs\n+    assertIndexDoesNotExist(SchemaKernelException.OperationContext.CONSTRAINT_CREATION, descriptor);\n+\n+    // Create constraints\n+    IndexProvider.Descriptor providerDescriptor = providerByName(providerName);\n+    indexBackedConstraintCreate(constraint, providerDescriptor);\n+    return constraint;\n+  }\n+\n+  @Override\n+  public ConstraintDescriptor nodeKeyConstraintCreate(LabelSchemaDescriptor descriptor, String providerName) throws SchemaKernelException\n+  {\n+    //Lock\n+    acquireExclusiveLabelLock(descriptor.getLabelId());\n+    ktx.assertOpen();\n+\n+    //Check data integrity\n+    assertValidDescriptor(descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION);\n+    NodeKeyConstraintDescriptor constraint = ConstraintDescriptorFactory.nodeKeyForSchema(descriptor);\n+    assertConstraintDoesNotExist(constraint);\n+    // It is not allowed to create node key constraints on indexed label/property pairs\n+    assertIndexDoesNotExist(SchemaKernelException.OperationContext.CONSTRAINT_CREATION, descriptor);\n+\n+    //enforce constraints\n+    try (NodeLabelIndexCursor nodes = cursors.allocateNodeLabelIndexCursor())\n+    {\n+      allStoreHolder.nodeLabelScan(descriptor.getLabelId(), nodes);\n+      constraintSemantics.validateNodeKeyConstraint(nodes, nodeCursor, propertyCursor, descriptor);\n+    }\n+\n+    //create constraint\n+    IndexProvider.Descriptor providerDescriptor = providerByName(providerName);\n+    indexBackedConstraintCreate(constraint, providerDescriptor);\n+    return constraint;\n+  }\n+\n+  @Override\n+  public ConstraintDescriptor nodePropertyExistenceConstraintCreate(LabelSchemaDescriptor descriptor)\n+      throws SchemaKernelException\n+  {\n+    //Lock\n+    acquireExclusiveLabelLock(descriptor.getLabelId());\n+    ktx.assertOpen();\n+\n+    //verify data integrity\n+    assertValidDescriptor(descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION);\n+    ConstraintDescriptor constraint = ConstraintDescriptorFactory.existsForSchema(descriptor);\n+    assertConstraintDoesNotExist(constraint);\n+\n+    //enforce constraints\n+    try (NodeLabelIndexCursor nodes = cursors.allocateNodeLabelIndexCursor())\n+    {\n+      allStoreHolder.nodeLabelScan(descriptor.getLabelId(), nodes);\n+      constraintSemantics\n+          .validateNodePropertyExistenceConstraint(nodes, nodeCursor, propertyCursor, descriptor);\n+    }\n+\n+    //create constraint\n+    ktx.txState().constraintDoAdd(constraint);\n+    return constraint;\n+  }\n+\n+  @Override\n+  public ConstraintDescriptor relationshipPropertyExistenceConstraintCreate(RelationTypeSchemaDescriptor descriptor)\n+      throws SchemaKernelException\n+  {\n+    //Lock\n+    exclusiveRelationshipTypeLock(descriptor.getRelTypeId());\n+    ktx.assertOpen();\n+\n+    //verify data integrity\n+    assertValidDescriptor(descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION);\n+    ConstraintDescriptor constraint = ConstraintDescriptorFactory.existsForSchema(descriptor);\n+    assertConstraintDoesNotExist(constraint);\n+\n+    //enforce constraints\n+    allStoreHolder.relationshipTypeScan(descriptor.getRelTypeId(), relationshipCursor);\n+    constraintSemantics\n+        .validateRelationshipPropertyExistenceConstraint(relationshipCursor, propertyCursor, descriptor);\n+\n+    //Create\n+    ktx.txState().constraintDoAdd(constraint);\n+    return constraint;\n+\n+  }\n+\n+  @Override\n+  public String relationshipExplicitIndexSetConfiguration(String indexName, String key, String value)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return allStoreHolder.explicitIndexStore().setRelationshipIndexConfiguration(indexName, key, value);\n+  }\n+\n+  @Override\n+  public String relationshipExplicitIndexRemoveConfiguration(String indexName, String key)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return allStoreHolder.explicitIndexStore().removeRelationshipIndexConfiguration(indexName, key);\n+  }\n+\n+  @Override\n+  public void constraintDrop(ConstraintDescriptor descriptor) throws SchemaKernelException\n+  {\n+    //Lock\n+    SchemaDescriptor schema = descriptor.schema();\n+    exclusiveOptimisticLock(schema.keyType(), schema.keyId());\n+    ktx.assertOpen();\n+\n+    //verify data integrity\n+    try\n+    {\n+      assertConstraintExists(descriptor);\n+    } catch (NoSuchConstraintException e)\n+    {\n+      throw new DropConstraintFailureException(descriptor, e);\n+    }\n+\n+    //Drop it like it's hot\n+    ktx.txState().constraintDoDrop(descriptor);\n+  }\n+\n+  private void assertIndexDoesNotExist(SchemaKernelException.OperationContext context,\n+                                       SchemaDescriptor descriptor) throws AlreadyIndexedException, AlreadyConstrainedException\n+  {\n+    SchemaIndexDescriptor existingIndex = allStoreHolder.indexGetForSchema(descriptor);\n+    if (existingIndex != null)\n+    {\n+      // OK so we found a matching constraint index. We check whether or not it has an owner\n+      // because this may have been a left-over constraint index from a previously failed\n+      // constraint creation, due to crash or similar, hence the missing owner.\n+      if (existingIndex.type() == UNIQUE)\n+      {\n+        if (context != CONSTRAINT_CREATION || constraintIndexHasOwner(existingIndex))\n         {\n-            allStoreHolder.nodeLabelScan( descriptor.getLabelId(), nodes );\n-            constraintSemantics\n-                    .validateNodePropertyExistenceConstraint( nodes, nodeCursor, propertyCursor, descriptor );\n+          throw new AlreadyConstrainedException(ConstraintDescriptorFactory.uniqueForSchema(descriptor),\n+              context, new SilentTokenNameLookup(token));\n         }\n-\n-        //create constraint\n-        ktx.txState().constraintDoAdd( constraint );\n-        return constraint;\n+      } else\n+      {\n+        throw new AlreadyIndexedException(descriptor, context);\n+      }\n     }\n+  }\n \n-    @Override\n-    public ConstraintDescriptor relationshipPropertyExistenceConstraintCreate( RelationTypeSchemaDescriptor descriptor )\n-            throws SchemaKernelException\n-    {\n-        //Lock\n-        exclusiveRelationshipTypeLock( descriptor.getRelTypeId() );\n-        ktx.assertOpen();\n-\n-        //verify data integrity\n-        assertValidDescriptor( descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION );\n-        ConstraintDescriptor constraint = ConstraintDescriptorFactory.existsForSchema( descriptor );\n-        assertConstraintDoesNotExist( constraint );\n-\n-        //enforce constraints\n-        allStoreHolder.relationshipTypeScan( descriptor.getRelTypeId(), relationshipCursor );\n-        constraintSemantics\n-                .validateRelationshipPropertyExistenceConstraint( relationshipCursor, propertyCursor, descriptor );\n-\n-        //Create\n-        ktx.txState().constraintDoAdd( constraint );\n-        return constraint;\n+  private void exclusiveOptimisticLock(ResourceType resource, long resourceId)\n+  {\n+    ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), resource, resourceId);\n+  }\n \n-    }\n-\n-    @Override\n-    public String relationshipExplicitIndexSetConfiguration( String indexName, String key, String value )\n-            throws ExplicitIndexNotFoundKernelException\n+  private void acquireExclusiveNodeLock(long node)\n+  {\n+    if (!ktx.hasTxStateWithChanges() || !ktx.txState().nodeIsAddedInThisTx(node))\n     {\n-        ktx.assertOpen();\n-        return allStoreHolder.explicitIndexStore().setRelationshipIndexConfiguration( indexName, key, value );\n+      ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), ResourceTypes.NODE, node);\n     }\n+  }\n \n-    @Override\n-    public String relationshipExplicitIndexRemoveConfiguration( String indexName, String key )\n-            throws ExplicitIndexNotFoundKernelException\n+  private void acquireExclusiveRelationshipLock(long relationshipId)\n+  {\n+    if (!ktx.hasTxStateWithChanges() || !ktx.txState().relationshipIsAddedInThisTx(relationshipId))\n     {\n-        ktx.assertOpen();\n-        return allStoreHolder.explicitIndexStore().removeRelationshipIndexConfiguration( indexName, key );\n+      ktx.statementLocks().optimistic()\n+          .acquireExclusive(ktx.lockTracer(), ResourceTypes.RELATIONSHIP, relationshipId);\n     }\n+  }\n \n-    @Override\n-    public void constraintDrop( ConstraintDescriptor descriptor ) throws SchemaKernelException\n-    {\n-        //Lock\n-        SchemaDescriptor schema = descriptor.schema();\n-        exclusiveOptimisticLock( schema.keyType(), schema.keyId() );\n-        ktx.assertOpen();\n+  private void acquireSharedLabelLock(int labelId)\n+  {\n+    ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), ResourceTypes.LABEL, labelId);\n+  }\n \n-        //verify data integrity\n-        try\n-        {\n-            assertConstraintExists( descriptor );\n-        }\n-        catch ( NoSuchConstraintException e )\n-        {\n-            throw new DropConstraintFailureException( descriptor, e );\n-        }\n+  private void acquireExclusiveLabelLock(int labelId)\n+  {\n+    ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), ResourceTypes.LABEL, labelId);\n+  }\n \n-        //Drop it like it's hot\n-        ktx.txState().constraintDoDrop( descriptor );\n-    }\n+  private void sharedRelationshipTypeLock(long typeId)\n+  {\n+    ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), ResourceTypes.RELATIONSHIP_TYPE, typeId);\n+  }\n \n-    private void assertIndexDoesNotExist( SchemaKernelException.OperationContext context,\n-            SchemaDescriptor descriptor ) throws AlreadyIndexedException, AlreadyConstrainedException\n-    {\n-        SchemaIndexDescriptor existingIndex = allStoreHolder.indexGetForSchema( descriptor );\n-        if ( existingIndex != null )\n-        {\n-            // OK so we found a matching constraint index. We check whether or not it has an owner\n-            // because this may have been a left-over constraint index from a previously failed\n-            // constraint creation, due to crash or similar, hence the missing owner.\n-            if ( existingIndex.type() == UNIQUE )\n-            {\n-                if ( context != CONSTRAINT_CREATION || constraintIndexHasOwner( existingIndex ) )\n-                {\n-                    throw new AlreadyConstrainedException( ConstraintDescriptorFactory.uniqueForSchema( descriptor ),\n-                            context, new SilentTokenNameLookup( token ) );\n-                }\n-            }\n-            else\n-            {\n-                throw new AlreadyIndexedException( descriptor, context );\n-            }\n-        }\n-    }\n+  private void exclusiveRelationshipTypeLock(long typeId)\n+  {\n+    ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), ResourceTypes.RELATIONSHIP_TYPE, typeId);\n+  }\n \n-    private void exclusiveOptimisticLock( ResourceType resource, long resourceId )\n+  private void lockRelationshipNodes(long startNodeId, long endNodeId)\n+  {\n+    // Order the locks to lower the risk of deadlocks with other threads creating/deleting rels concurrently\n+    acquireExclusiveNodeLock(min(startNodeId, endNodeId));\n+    if (startNodeId != endNodeId)\n     {\n-        ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), resource, resourceId );\n+      acquireExclusiveNodeLock(max(startNodeId, endNodeId));\n     }\n+  }\n \n-    private void acquireExclusiveNodeLock( long node )\n-    {\n-        if ( !ktx.hasTxStateWithChanges() || !ktx.txState().nodeIsAddedInThisTx( node ) )\n-        {\n-            ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), ResourceTypes.NODE, node );\n-        }\n-    }\n+  private boolean propertyHasChanged(Value lhs, Value rhs)\n+  {\n+    //It is not enough to check equality here since by our equality semantics `int == tofloat(int)` is `true`\n+    //so by only checking for equality users cannot change type of property without also \"changing\" the value.\n+    //Hence the extra type check here.\n+    return lhs.getClass() != rhs.getClass() || !lhs.equals(rhs);\n+  }\n \n-    private void acquireExclusiveRelationshipLock( long relationshipId )\n+  private void assertNodeExists(long sourceNode) throws EntityNotFoundException\n+  {\n+    if (!allStoreHolder.nodeExists(sourceNode))\n     {\n-        if ( !ktx.hasTxStateWithChanges() || !ktx.txState().relationshipIsAddedInThisTx( relationshipId ) )\n-        {\n-            ktx.statementLocks().optimistic()\n-                    .acquireExclusive( ktx.lockTracer(), ResourceTypes.RELATIONSHIP, relationshipId );\n-        }\n+      throw new EntityNotFoundException(EntityType.NODE, sourceNode);\n     }\n+  }\n \n-    private void acquireSharedLabelLock( int labelId )\n-    {\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), ResourceTypes.LABEL, labelId );\n-    }\n+  private boolean constraintIndexHasOwner(SchemaIndexDescriptor descriptor)\n+  {\n+    return allStoreHolder.indexGetOwningUniquenessConstraintId(descriptor) != null;\n+  }\n \n-    private void acquireExclusiveLabelLock( int labelId )\n+  private void assertConstraintDoesNotExist(ConstraintDescriptor constraint)\n+      throws AlreadyConstrainedException\n+  {\n+    if (allStoreHolder.constraintExists(constraint))\n     {\n-        ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), ResourceTypes.LABEL, labelId );\n+      throw new AlreadyConstrainedException(constraint,\n+          SchemaKernelException.OperationContext.CONSTRAINT_CREATION,\n+          new SilentTokenNameLookup(token));\n     }\n+  }\n \n-    private void sharedRelationshipTypeLock( long typeId )\n-    {\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), ResourceTypes.RELATIONSHIP_TYPE, typeId );\n-    }\n-\n-    private void exclusiveRelationshipTypeLock( long typeId )\n-    {\n-        ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), ResourceTypes.RELATIONSHIP_TYPE, typeId );\n-    }\n-\n-    private void lockRelationshipNodes( long startNodeId, long endNodeId )\n-    {\n-        // Order the locks to lower the risk of deadlocks with other threads creating/deleting rels concurrently\n-        acquireExclusiveNodeLock( min( startNodeId, endNodeId ) );\n-        if ( startNodeId != endNodeId )\n-        {\n-            acquireExclusiveNodeLock( max( startNodeId, endNodeId ) );\n-        }\n-    }\n+  public Locks locks()\n+  {\n+    return allStoreHolder;\n+  }\n \n-    private boolean propertyHasChanged( Value lhs, Value rhs )\n+  private void assertConstraintExists(ConstraintDescriptor constraint)\n+      throws NoSuchConstraintException\n+  {\n+    if (!allStoreHolder.constraintExists(constraint))\n     {\n-        //It is not enough to check equality here since by our equality semantics `int == tofloat(int)` is `true`\n-        //so by only checking for equality users cannot change type of property without also \"changing\" the value.\n-        //Hence the extra type check here.\n-        return lhs.getClass() != rhs.getClass() || !lhs.equals( rhs );\n+      throw new NoSuchConstraintException(constraint);\n     }\n+  }\n \n-    private void assertNodeExists( long sourceNode ) throws EntityNotFoundException\n+  private void assertValidDescriptor(SchemaDescriptor descriptor, SchemaKernelException.OperationContext context)\n+      throws RepeatedPropertyInCompositeSchemaException\n+  {\n+    int numUnique = Arrays.stream(descriptor.getPropertyIds()).distinct().toArray().length;\n+    if (numUnique != descriptor.getPropertyIds().length)\n     {\n-        if ( !allStoreHolder.nodeExists( sourceNode ) )\n-        {\n-            throw new EntityNotFoundException( EntityType.NODE, sourceNode );\n-        }\n+      throw new RepeatedPropertyInCompositeSchemaException(descriptor, context);\n     }\n+  }\n \n-    private boolean constraintIndexHasOwner( SchemaIndexDescriptor descriptor )\n-    {\n-        return allStoreHolder.indexGetOwningUniquenessConstraintId( descriptor ) != null;\n-    }\n+  private org.neo4j.kernel.api.schema.LabelSchemaDescriptor labelDescriptor(IndexReference index)\n+  {\n+    return SchemaDescriptorFactory.forLabel(index.label(), index.properties());\n+  }\n \n-    private void assertConstraintDoesNotExist( ConstraintDescriptor constraint )\n-            throws AlreadyConstrainedException\n-    {\n-        if ( allStoreHolder.constraintExists( constraint ) )\n-        {\n-            throw new AlreadyConstrainedException( constraint,\n-                    SchemaKernelException.OperationContext.CONSTRAINT_CREATION,\n-                    new SilentTokenNameLookup( token ) );\n+  private void indexBackedConstraintCreate(IndexBackedConstraintDescriptor constraint, IndexProvider.Descriptor providerDescriptor)\n+      throws CreateConstraintFailureException\n+  {\n+    SchemaDescriptor descriptor = constraint.schema();\n+    try\n+    {\n+      if (ktx.hasTxStateWithChanges() &&\n+          ktx.txState().indexDoUnRemove(constraint.ownedIndexDescriptor())) // ..., DROP, *CREATE*\n+      { // creation is undoing a drop\n+        if (!ktx.txState().constraintDoUnRemove(constraint)) // CREATE, ..., DROP, *CREATE*\n+        { // ... the drop we are undoing did itself undo a prior create...\n+          ktx.txState().constraintDoAdd(\n+              constraint, ktx.txState().indexCreatedForConstraint(constraint));\n         }\n-    }\n-\n-    public Locks locks()\n-    {\n-        return allStoreHolder;\n-    }\n-\n-    private void assertConstraintExists( ConstraintDescriptor constraint )\n-            throws NoSuchConstraintException\n-    {\n-        if ( !allStoreHolder.constraintExists( constraint ) )\n+      } else // *CREATE*\n+      { // create from scratch\n+        Iterator<ConstraintDescriptor> it = allStoreHolder.constraintsGetForSchema(descriptor);\n+        while (it.hasNext())\n         {\n-            throw new NoSuchConstraintException( constraint );\n+          if (it.next().equals(constraint))\n+          {\n+            return;\n+          }\n         }\n-    }\n-\n-    private void assertValidDescriptor( SchemaDescriptor descriptor, SchemaKernelException.OperationContext context )\n-            throws RepeatedPropertyInCompositeSchemaException\n-    {\n-        int numUnique = Arrays.stream( descriptor.getPropertyIds() ).distinct().toArray().length;\n-        if ( numUnique != descriptor.getPropertyIds().length )\n+        long indexId = constraintIndexCreator.createUniquenessConstraintIndex(ktx, descriptor, providerDescriptor);\n+        if (!allStoreHolder.constraintExists(constraint))\n         {\n-            throw new RepeatedPropertyInCompositeSchemaException( descriptor, context );\n+          // This looks weird, but since we release the label lock while awaiting population of the index\n+          // backing this constraint there can be someone else getting ahead of us, creating this exact\n+          // constraint\n+          // before we do, so now getting out here under the lock we must check again and if it exists\n+          // we must at this point consider this an idempotent operation because we verified earlier\n+          // that it didn't exist and went on to create it.\n+          ktx.txState().constraintDoAdd(constraint, indexId);\n         }\n-    }\n-\n-    private org.neo4j.kernel.api.schema.LabelSchemaDescriptor labelDescriptor( IndexReference index )\n-    {\n-        return SchemaDescriptorFactory.forLabel( index.label(), index.properties() );\n-    }\n-\n-    private void indexBackedConstraintCreate( IndexBackedConstraintDescriptor constraint, IndexProvider.Descriptor providerDescriptor )\n-            throws CreateConstraintFailureException\n+      }\n+    } catch (UniquePropertyValueValidationException | TransactionFailureException | AlreadyConstrainedException e)\n     {\n-        SchemaDescriptor descriptor = constraint.schema();\n-        try\n-        {\n-            if ( ktx.hasTxStateWithChanges() &&\n-                 ktx.txState().indexDoUnRemove( constraint.ownedIndexDescriptor() ) ) // ..., DROP, *CREATE*\n-            { // creation is undoing a drop\n-                if ( !ktx.txState().constraintDoUnRemove( constraint ) ) // CREATE, ..., DROP, *CREATE*\n-                { // ... the drop we are undoing did itself undo a prior create...\n-                    ktx.txState().constraintDoAdd(\n-                            constraint, ktx.txState().indexCreatedForConstraint( constraint ) );\n-                }\n-            }\n-            else // *CREATE*\n-            { // create from scratch\n-                Iterator<ConstraintDescriptor> it = allStoreHolder.constraintsGetForSchema( descriptor );\n-                while ( it.hasNext() )\n-                {\n-                    if ( it.next().equals( constraint ) )\n-                    {\n-                        return;\n-                    }\n-                }\n-                long indexId = constraintIndexCreator.createUniquenessConstraintIndex( ktx, descriptor, providerDescriptor );\n-                if ( !allStoreHolder.constraintExists( constraint ) )\n-                {\n-                    // This looks weird, but since we release the label lock while awaiting population of the index\n-                    // backing this constraint there can be someone else getting ahead of us, creating this exact\n-                    // constraint\n-                    // before we do, so now getting out here under the lock we must check again and if it exists\n-                    // we must at this point consider this an idempotent operation because we verified earlier\n-                    // that it didn't exist and went on to create it.\n-                    ktx.txState().constraintDoAdd( constraint, indexId );\n-                }\n-            }\n-        }\n-        catch ( UniquePropertyValueValidationException | TransactionFailureException | AlreadyConstrainedException e )\n-        {\n-            throw new CreateConstraintFailureException( constraint, e );\n-        }\n+      throw new CreateConstraintFailureException(constraint, e);\n     }\n+  }\n \n-    private void assertValidIndex( IndexReference index ) throws NoSuchIndexException\n+  private void assertValidIndex(IndexReference index) throws NoSuchIndexException\n+  {\n+    if (index == CapableIndexReference.NO_INDEX)\n     {\n-        if ( index == CapableIndexReference.NO_INDEX )\n-        {\n-            throw new NoSuchIndexException( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ) );\n-        }\n+      throw new NoSuchIndexException(SchemaDescriptorFactory.forLabel(index.label(), index.properties()));\n     }\n+  }\n \n-    private IndexProvider.Descriptor providerByName( String providerName )\n-    {\n-        return providerName != null ? indexProviderMap.lookup( providerName ).getProviderDescriptor() : null;\n-    }\n+  private IndexProvider.Descriptor providerByName(String providerName)\n+  {\n+    return providerName != null ? indexProviderMap.lookup(providerName).getProviderDescriptor() : null;\n+  }\n }\n",
            "diff_size": 1681
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
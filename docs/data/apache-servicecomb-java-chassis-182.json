{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "182",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "32",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "\n      config.setClassName(\n          \"gen.wrap.protobuf.\" +\n              org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n      if (!Void.TYPE.isAssignableFrom(javaType.getRawClass())) {\n        config.addField(\"field0\", javaType);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/182/ScopedProtobufSchemaManager.java\nindex 002c009c95f..c482efbaa88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/182/ScopedProtobufSchemaManager.java\n@@ -69,8 +69,7 @@ public class ScopedProtobufSchemaManager {\n       config.setType(WrapType.NORMAL_WRAP);\n \n       config.setClassName(\n-          \"gen.wrap.protobuf.\" +\n-              org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n+          \"gen.wrap.protobuf.\" + org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n       if (!Void.TYPE.isAssignableFrom(javaType.getRawClass())) {\n         config.addField(\"field0\", javaType);\n       }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "72",
                    "column": "32",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/182/ScopedProtobufSchemaManager.java\nindex 002c009c95f..27c9bd16fda 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/182/ScopedProtobufSchemaManager.java\n@@ -69,9 +69,8 @@ public class ScopedProtobufSchemaManager {\n       config.setType(WrapType.NORMAL_WRAP);\n \n       config.setClassName(\n-          \"gen.wrap.protobuf.\" +\n-              org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n-      if (!Void.TYPE.isAssignableFrom(javaType.getRawClass())) {\n+          \"gen.wrap.protobuf.\" + org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n+if (!Void.TYPE.isAssignableFrom(javaType.getRawClass())) {\n         config.addField(\"field0\", javaType);\n       }\n \n@@ -101,8 +100,7 @@ public class ScopedProtobufSchemaManager {\n       Parameter[] params = method.getParameters();\n       for (int idx = 0; idx < params.length; idx++) {\n         Parameter param = params[idx];\n-        String paramName = org.apache.servicecomb.swagger.generator.core.utils.ClassUtils\n-            .correctMethodParameterName(operationMeta.getParamName(idx));\n+        String paramName = org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctMethodParameterName(operationMeta.getParamName(idx));\n         config.addField(paramName, param.getParameterizedType());\n       }\n \n@@ -111,4 +109,4 @@ public class ScopedProtobufSchemaManager {\n       return createWrapSchema(config);\n     });\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/182/ScopedProtobufSchemaManager.java\nindex 002c009c95f..c482efbaa88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/182/ScopedProtobufSchemaManager.java\n@@ -69,8 +69,7 @@ public class ScopedProtobufSchemaManager {\n       config.setType(WrapType.NORMAL_WRAP);\n \n       config.setClassName(\n-          \"gen.wrap.protobuf.\" +\n-              org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n+          \"gen.wrap.protobuf.\" + org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n       if (!Void.TYPE.isAssignableFrom(javaType.getRawClass())) {\n         config.addField(\"field0\", javaType);\n       }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/182/ScopedProtobufSchemaManager.java\nindex 002c009c95f..c482efbaa88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/182/ScopedProtobufSchemaManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/182/ScopedProtobufSchemaManager.java\n@@ -69,8 +69,7 @@ public class ScopedProtobufSchemaManager {\n       config.setType(WrapType.NORMAL_WRAP);\n \n       config.setClassName(\n-          \"gen.wrap.protobuf.\" +\n-              org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n+          \"gen.wrap.protobuf.\" + org.apache.servicecomb.swagger.generator.core.utils.ClassUtils.correctClassName(key));\n       if (!Void.TYPE.isAssignableFrom(javaType.getRawClass())) {\n         config.addField(\"field0\", javaType);\n       }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
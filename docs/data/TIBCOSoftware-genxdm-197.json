{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "197",
    "information": {
        "errors": [
            {
                "line": "23",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public final class StringRegExException extends Exception\n{\n\tpublic enum Kind\n\t{\n\t\tblockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/197/StringRegExException.java\nindex eed4897896c..159341be78a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/197/StringRegExException.java\n@@ -20,7 +20,7 @@ import org.genxdm.exceptions.PreCondition;\n @SuppressWarnings(\"serial\")\n public final class StringRegExException extends Exception\n {\n-\tpublic enum Kind\n+public enum Kind\n \t{\n \t\tblockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n \t}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/197/StringRegExException.java\nindex eed4897896c..cb7d99e891e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/197/StringRegExException.java\n@@ -1,72 +1,70 @@\n /**\n  * Copyright (c) 2009-2010 TIBCO Software Inc.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.processor.w3c.xs.regex.impl.string;\n \n import org.genxdm.exceptions.PreCondition;\n \n @SuppressWarnings(\"serial\")\n-public final class StringRegExException extends Exception\n-{\n-\tpublic enum Kind\n-\t{\n-\t\tblockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n-\t}\n+public final class StringRegExException extends Exception {\n+    public enum Kind {\n+        blockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange,\n+        invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing,\n+        invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch,\n+        invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure,\n+        invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n+    }\n \n-\tprivate final Object[] m_args;\n+    private final Object[] m_args;\n \n-\tprivate final Kind m_key;\n+    private final Kind m_key;\n \n-\tpublic StringRegExException(final Kind key, final Object argument)\n-\t{\n-\t\tthis(key, new Object[] { argument });\n-\t}\n+    public StringRegExException(final Kind key, final Object argument) {\n+        this(key, new Object[] {argument});\n+    }\n \n-\tpublic StringRegExException(final Kind key, final Object[] argument)\n-\t{\n-\t\tm_key = PreCondition.assertArgumentNotNull(key, \"key\");\n-\t\tm_args = argument;\n-\t}\n+    public StringRegExException(final Kind key, final Object[] argument) {\n+        m_key = PreCondition.assertArgumentNotNull(key, \"key\");\n+        m_args = argument;\n+    }\n \n-\t/**\n-\t * Returns an argument array that can be passed to the format() method of a Java MessageFormat.\n-\t * \n-\t * @return Argument parameters.\n-\t */\n-\tpublic Object[] getArguments()\n-\t{\n-\t\treturn m_args;\n-\t}\n+    /**\n+     * Returns an argument array that can be passed to the format() method of a Java MessageFormat.\n+     *\n+     * @return Argument parameters.\n+     */\n+    public Object[] getArguments() {\n+        return m_args;\n+    }\n \n-\t/**\n-\t * Returns the key that will be used to uniquely identify the message. This will be used as the key into a resource\n-\t * bundle.\n-\t * \n-\t * @return The resouce bundle pattern key.\n-\t */\n-\tpublic String getPatternKey()\n-\t{\n-\t\treturn m_key.name();\n-\t}\n+    /**\n+     * Returns the key that will be used to uniquely identify the message. This will be used as the key into a resource\n+     * bundle.\n+     *\n+     * @return The resouce bundle pattern key.\n+     */\n+    public String getPatternKey() {\n+        return m_key.name();\n+    }\n \n-\t/**\n-\t * The base name of the file that contains the message resources.\n-\t */\n-\tpublic String getResourceBundleBaseName()\n-\t{\n-\t\tfinal String name = getClass().getName();\n-\t\treturn name.substring(0, name.lastIndexOf(\".\")) + \".exceptions\";\n-\t}\n+    /**\n+     * The base name of the file that contains the message resources.\n+     */\n+    public String getResourceBundleBaseName() {\n+        final String name = getClass().getName();\n+        return name.substring(0, name.lastIndexOf(\".\")) + \".exceptions\";\n+    }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/197/StringRegExException.java\nindex eed4897896c..9407c337d69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/197/StringRegExException.java\n@@ -20,10 +20,10 @@ import org.genxdm.exceptions.PreCondition;\n @SuppressWarnings(\"serial\")\n public final class StringRegExException extends Exception\n {\n-\tpublic enum Kind\n+    public enum Kind\n \t{\n-\t\tblockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n-\t}\n+    blockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n+    }\n \n \tprivate final Object[] m_args;\n \n@@ -31,14 +31,14 @@ public final class StringRegExException extends Exception\n \n \tpublic StringRegExException(final Kind key, final Object argument)\n \t{\n-\t\tthis(key, new Object[] { argument });\n-\t}\n+    this(key, new Object[] { argument });\n+    }\n \n \tpublic StringRegExException(final Kind key, final Object[] argument)\n \t{\n-\t\tm_key = PreCondition.assertArgumentNotNull(key, \"key\");\n+    m_key = PreCondition.assertArgumentNotNull(key, \"key\");\n \t\tm_args = argument;\n-\t}\n+    }\n \n \t/**\n \t * Returns an argument array that can be passed to the format() method of a Java MessageFormat.\n@@ -47,8 +47,8 @@ public final class StringRegExException extends Exception\n \t */\n \tpublic Object[] getArguments()\n \t{\n-\t\treturn m_args;\n-\t}\n+    return m_args;\n+    }\n \n \t/**\n \t * Returns the key that will be used to uniquely identify the message. This will be used as the key into a resource\n@@ -58,15 +58,15 @@ public final class StringRegExException extends Exception\n \t */\n \tpublic String getPatternKey()\n \t{\n-\t\treturn m_key.name();\n-\t}\n+    return m_key.name();\n+    }\n \n \t/**\n \t * The base name of the file that contains the message resources.\n \t */\n \tpublic String getResourceBundleBaseName()\n \t{\n-\t\tfinal String name = getClass().getName();\n+    final String name = getClass().getName();\n \t\treturn name.substring(0, name.lastIndexOf(\".\")) + \".exceptions\";\n-\t}\n-}\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/197/StringRegExException.java\nindex eed4897896c..2beab07f2cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/197/StringRegExException.java\n@@ -20,53 +20,89 @@ import org.genxdm.exceptions.PreCondition;\n @SuppressWarnings(\"serial\")\n public final class StringRegExException extends Exception\n {\n-\tpublic enum Kind\n-\t{\n-\t\tblockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n-\t}\n-\n-\tprivate final Object[] m_args;\n-\n-\tprivate final Kind m_key;\n-\n-\tpublic StringRegExException(final Kind key, final Object argument)\n-\t{\n-\t\tthis(key, new Object[] { argument });\n-\t}\n-\n-\tpublic StringRegExException(final Kind key, final Object[] argument)\n-\t{\n-\t\tm_key = PreCondition.assertArgumentNotNull(key, \"key\");\n-\t\tm_args = argument;\n-\t}\n-\n-\t/**\n-\t * Returns an argument array that can be passed to the format() method of a Java MessageFormat.\n-\t * \n-\t * @return Argument parameters.\n-\t */\n-\tpublic Object[] getArguments()\n-\t{\n-\t\treturn m_args;\n-\t}\n-\n-\t/**\n-\t * Returns the key that will be used to uniquely identify the message. This will be used as the key into a resource\n-\t * bundle.\n-\t * \n-\t * @return The resouce bundle pattern key.\n-\t */\n-\tpublic String getPatternKey()\n-\t{\n-\t\treturn m_key.name();\n-\t}\n-\n-\t/**\n-\t * The base name of the file that contains the message resources.\n-\t */\n-\tpublic String getResourceBundleBaseName()\n-\t{\n-\t\tfinal String name = getClass().getName();\n-\t\treturn name.substring(0, name.lastIndexOf(\".\")) + \".exceptions\";\n-\t}\n-}\n+    public enum Kind\n+    {\n+        blockBeginWIs,\n+\n+        expectedBraceAfter,\n+\n+        invalidAtomNoClosure,\n+\n+        invalidChar,\n+\n+        invalidCharRange,\n+\n+        invalidCharRangeEx,\n+\n+        invalidCommaQuantifier,\n+\n+        invalidEmptyAtom,\n+\n+        invalidExprMissing,\n+\n+        invalidPattern,\n+\n+        invalidPatternEmptyAtom,\n+\n+        invalidPatternEmptyBranch,\n+\n+        invalidQualifierNoClosure,\n+\n+        invalidRangeQualifier,\n+\n+        invalidSubtractionNoClosure,\n+\n+        invalidUnicodeBlockName,\n+\n+        invalidUnicodeCategory,\n+\n+        unrecognizedEscapeChar\n+    }\n+\n+    private final Object[] m_args;\n+    private final Kind m_key;\n+\n+    public StringRegExException(final Kind key, final Object argument)\n+    {\n+        this(key, new Object[] { argument });\n+    }\n+\n+    public StringRegExException(final Kind key, final Object[] argument)\n+    {\n+        m_key = PreCondition.assertArgumentNotNull(key, \"key\");\n+        m_args = argument;\n+    }\n+\n+    /**\n+     * Returns an argument array that can be passed to the format() method of a Java MessageFormat.\n+     * \n+     * @return Argument parameters.\n+     */\n+\n+    public Object[] getArguments()\n+    {\n+        return m_args;\n+    }\n+\n+    /**\n+     * Returns the key that will be used to uniquely identify the message. This will be used as the key into a resource\n+     * bundle.\n+     * \n+     * @return The resouce bundle pattern key.\n+     */\n+\n+    public String getPatternKey()\n+    {\n+        return m_key.name();\n+    }\n+\n+    /**\n+     * The base name of the file that contains the message resources.\n+     */\n+\n+    public String getResourceBundleBaseName()\n+    {\n+        final String name = getClass().getName();\n+        return name.substring(0, name.lastIndexOf(\".\")) + \".exceptions\";\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 86
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/197/StringRegExException.java\nindex eed4897896c..159341be78a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/197/StringRegExException.java\n@@ -20,7 +20,7 @@ import org.genxdm.exceptions.PreCondition;\n @SuppressWarnings(\"serial\")\n public final class StringRegExException extends Exception\n {\n-\tpublic enum Kind\n+public enum Kind\n \t{\n \t\tblockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n \t}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/197/StringRegExException.java\nindex eed4897896c..ed96a9aafb0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/197/StringRegExException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/197/StringRegExException.java\n@@ -20,7 +20,7 @@ import org.genxdm.exceptions.PreCondition;\n @SuppressWarnings(\"serial\")\n public final class StringRegExException extends Exception\n {\n-\tpublic enum Kind\n+    public enum Kind\n \t{\n \t\tblockBeginWIs, expectedBraceAfter, invalidAtomNoClosure, invalidChar, invalidCharRange, invalidCharRangeEx, invalidCommaQuantifier, invalidEmptyAtom, invalidExprMissing, invalidPattern, invalidPatternEmptyAtom, invalidPatternEmptyBranch, invalidQualifierNoClosure, invalidRangeQualifier, invalidSubtractionNoClosure, invalidUnicodeBlockName, invalidUnicodeCategory, unrecognizedEscapeChar\n \t}\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
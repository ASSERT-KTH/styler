{
    "project_name": "neo4j-neo4j",
    "error_id": "346",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/346/AdversarialOutputStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/346/AdversarialOutputStream.java\nindex 984ca1b5cef..c3c1f12f5bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/346/AdversarialOutputStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/346/AdversarialOutputStream.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.adversaries.fs;\n \n import java.io.IOException;\n@@ -24,50 +25,50 @@ import java.io.OutputStream;\n \n import org.neo4j.adversaries.Adversary;\n \n-@SuppressWarnings( \"unchecked\" )\n+@SuppressWarnings(\"unchecked\")\n public class AdversarialOutputStream extends OutputStream\n {\n     private final OutputStream outputStream;\n     private final Adversary adversary;\n \n-    public AdversarialOutputStream( OutputStream outputStream, Adversary adversary )\n+    public AdversarialOutputStream(OutputStream outputStream, Adversary adversary)\n     {\n         this.outputStream = outputStream;\n         this.adversary = adversary;\n     }\n \n     @Override\n-    public void write( int b ) throws IOException\n+    public void write(int b) throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n-        outputStream.write( b );\n+        adversary.injectFailure(IOException.class);\n+        outputStream.write(b);\n     }\n \n     @Override\n-    public void write( byte[] b ) throws IOException\n+    public void write(byte[] b) throws IOException\n     {\n-        adversary.injectFailure( NullPointerException.class, IndexOutOfBoundsException.class, IOException.class );\n-        outputStream.write( b );\n+        adversary.injectFailure(NullPointerException.class, IndexOutOfBoundsException.class, IOException.class);\n+        outputStream.write(b);\n     }\n \n     @Override\n-    public void write( byte[] b, int off, int len ) throws IOException\n+    public void write(byte[] b, int off, int len) throws IOException\n     {\n-        adversary.injectFailure( NullPointerException.class, IndexOutOfBoundsException.class, IOException.class );\n-        outputStream.write( b, off, len );\n+        adversary.injectFailure(NullPointerException.class, IndexOutOfBoundsException.class, IOException.class);\n+        outputStream.write(b, off, len);\n     }\n \n     @Override\n     public void flush() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         outputStream.flush();\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         outputStream.close();\n     }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/346/AdversarialOutputStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/346/AdversarialOutputStream.java\nindex 984ca1b5cef..374e8449d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/346/AdversarialOutputStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/346/AdversarialOutputStream.java\n@@ -70,4 +70,4 @@ public class AdversarialOutputStream extends OutputStream\n         adversary.injectFailure( IOException.class );\n         outputStream.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
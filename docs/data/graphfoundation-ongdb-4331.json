{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4331",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4331/RecoveryStartInformationProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4331/RecoveryStartInformationProvider.java\nindex ffdf7283ea9..c94ec8922b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4331/RecoveryStartInformationProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4331/RecoveryStartInformationProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.recovery;\n \n import java.io.IOException;\n@@ -31,91 +32,90 @@ import static org.neo4j.kernel.impl.transaction.log.LogVersionRepository.INITIAL\n /**\n  * Utility class to find the log position to start recovery from\n  */\n-public class RecoveryStartInformationProvider implements ThrowingSupplier<RecoveryStartInformation,IOException>\n+public class RecoveryStartInformationProvider implements ThrowingSupplier<RecoveryStartInformation, IOException>\n {\n-    public interface Monitor\n-    {\n-        /**\n-         * There's a check point log entry as the last entry in the transaction log.\n-         *\n-         * @param logPosition {@link LogPosition} of the last check point.\n-         */\n-        default void noCommitsAfterLastCheckPoint( LogPosition logPosition )\n-        {   // no-op by default\n-        }\n+  public interface Monitor\n+  {\n+    /**\n+     * There's a check point log entry as the last entry in the transaction log.\n+     *\n+     * @param logPosition {@link LogPosition} of the last check point.\n+     */\n+    default void noCommitsAfterLastCheckPoint(LogPosition logPosition)\n+    {   // no-op by default\n+    }\n \n-        /**\n-         * There's a check point log entry, but there are other log entries after it.\n-         *\n-         * @param logPosition {@link LogPosition} pointing to the first log entry after the last\n-         * check pointed transaction.\n-         * @param firstTxIdAfterLastCheckPoint transaction id of the first transaction after the last check point.\n-         */\n-        default void commitsAfterLastCheckPoint( LogPosition logPosition, long firstTxIdAfterLastCheckPoint )\n-        {   // no-op by default\n-        }\n+    /**\n+     * There's a check point log entry, but there are other log entries after it.\n+     *\n+     * @param logPosition                  {@link LogPosition} pointing to the first log entry after the last\n+     *                                     check pointed transaction.\n+     * @param firstTxIdAfterLastCheckPoint transaction id of the first transaction after the last check point.\n+     */\n+    default void commitsAfterLastCheckPoint(LogPosition logPosition, long firstTxIdAfterLastCheckPoint)\n+    {   // no-op by default\n+    }\n \n-        /**\n-         * No check point log entry found in the transaction log.\n-         */\n-        default void noCheckPointFound()\n-        {   // no-op by default\n-        }\n+    /**\n+     * No check point log entry found in the transaction log.\n+     */\n+    default void noCheckPointFound()\n+    {   // no-op by default\n     }\n+  }\n \n-    public static final Monitor NO_MONITOR = new Monitor()\n-    {\n-    };\n+  public static final Monitor NO_MONITOR = new Monitor()\n+  {\n+  };\n \n-    private final LogTailScanner logTailScanner;\n-    private final Monitor monitor;\n+  private final LogTailScanner logTailScanner;\n+  private final Monitor monitor;\n \n-    public RecoveryStartInformationProvider( LogTailScanner logTailScanner, Monitor monitor )\n-    {\n-        this.logTailScanner = logTailScanner;\n-        this.monitor = monitor;\n-    }\n+  public RecoveryStartInformationProvider(LogTailScanner logTailScanner, Monitor monitor)\n+  {\n+    this.logTailScanner = logTailScanner;\n+    this.monitor = monitor;\n+  }\n \n-    /**\n-     * Find the log position to start recovery from\n-     *\n-     * @return {@link LogPosition#UNSPECIFIED} if there is no need to recover otherwise the {@link LogPosition} to\n-     * start recovery from\n-     * @throws IOException if log files cannot be read\n-     */\n-    @Override\n-    public RecoveryStartInformation get()\n+  /**\n+   * Find the log position to start recovery from\n+   *\n+   * @return {@link LogPosition#UNSPECIFIED} if there is no need to recover otherwise the {@link LogPosition} to\n+   * start recovery from\n+   * @throws IOException if log files cannot be read\n+   */\n+  @Override\n+  public RecoveryStartInformation get()\n+  {\n+    LogTailScanner.LogTailInformation logTailInformation = logTailScanner.getTailInformation();\n+    CheckPoint lastCheckPoint = logTailInformation.lastCheckPoint;\n+    long txIdAfterLastCheckPoint = logTailInformation.firstTxIdAfterLastCheckPoint;\n+    if (!logTailInformation.commitsAfterLastCheckpoint())\n     {\n-        LogTailScanner.LogTailInformation logTailInformation = logTailScanner.getTailInformation();\n-        CheckPoint lastCheckPoint = logTailInformation.lastCheckPoint;\n-        long txIdAfterLastCheckPoint = logTailInformation.firstTxIdAfterLastCheckPoint;\n-        if ( !logTailInformation.commitsAfterLastCheckpoint() )\n-        {\n-            monitor.noCommitsAfterLastCheckPoint( lastCheckPoint != null ? lastCheckPoint.getLogPosition() : null );\n-            return createRecoveryInformation( LogPosition.UNSPECIFIED, txIdAfterLastCheckPoint );\n-        }\n-\n-        if ( lastCheckPoint != null )\n-        {\n-            monitor.commitsAfterLastCheckPoint( lastCheckPoint.getLogPosition(), txIdAfterLastCheckPoint );\n-            return createRecoveryInformation( lastCheckPoint.getLogPosition(), txIdAfterLastCheckPoint );\n-        }\n-        else\n-        {\n-            if ( logTailInformation.oldestLogVersionFound != INITIAL_LOG_VERSION )\n-            {\n-                long fromLogVersion = Math.max( INITIAL_LOG_VERSION, logTailInformation.oldestLogVersionFound );\n-                throw new UnderlyingStorageException(\n-                        \"No check point found in any log file from version \" + fromLogVersion + \" to \" +\n-                                logTailInformation.currentLogVersion );\n-            }\n-            monitor.noCheckPointFound();\n-            return createRecoveryInformation( LogPosition.start( 0 ), txIdAfterLastCheckPoint );\n-        }\n+      monitor.noCommitsAfterLastCheckPoint(lastCheckPoint != null ? lastCheckPoint.getLogPosition() : null);\n+      return createRecoveryInformation(LogPosition.UNSPECIFIED, txIdAfterLastCheckPoint);\n     }\n \n-    private RecoveryStartInformation createRecoveryInformation( LogPosition logPosition, long firstTxId )\n+    if (lastCheckPoint != null)\n     {\n-        return new RecoveryStartInformation( logPosition, firstTxId );\n+      monitor.commitsAfterLastCheckPoint(lastCheckPoint.getLogPosition(), txIdAfterLastCheckPoint);\n+      return createRecoveryInformation(lastCheckPoint.getLogPosition(), txIdAfterLastCheckPoint);\n+    } else\n+    {\n+      if (logTailInformation.oldestLogVersionFound != INITIAL_LOG_VERSION)\n+      {\n+        long fromLogVersion = Math.max(INITIAL_LOG_VERSION, logTailInformation.oldestLogVersionFound);\n+        throw new UnderlyingStorageException(\n+            \"No check point found in any log file from version \" + fromLogVersion + \" to \" +\n+                logTailInformation.currentLogVersion);\n+      }\n+      monitor.noCheckPointFound();\n+      return createRecoveryInformation(LogPosition.start(0), txIdAfterLastCheckPoint);\n     }\n+  }\n+\n+  private RecoveryStartInformation createRecoveryInformation(LogPosition logPosition, long firstTxId)\n+  {\n+    return new RecoveryStartInformation(logPosition, firstTxId);\n+  }\n }\n",
            "diff_size": 99
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4331/RecoveryStartInformationProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4331/RecoveryStartInformationProvider.java\nindex ffdf7283ea9..a87ce771308 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4331/RecoveryStartInformationProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4331/RecoveryStartInformationProvider.java\n@@ -41,7 +41,8 @@ public class RecoveryStartInformationProvider implements ThrowingSupplier<Recove\n          * @param logPosition {@link LogPosition} of the last check point.\n          */\n         default void noCommitsAfterLastCheckPoint( LogPosition logPosition )\n-        {   // no-op by default\n+        {\n+    // no-op by default\n         }\n \n         /**\n@@ -52,14 +53,16 @@ public class RecoveryStartInformationProvider implements ThrowingSupplier<Recove\n          * @param firstTxIdAfterLastCheckPoint transaction id of the first transaction after the last check point.\n          */\n         default void commitsAfterLastCheckPoint( LogPosition logPosition, long firstTxIdAfterLastCheckPoint )\n-        {   // no-op by default\n+        {\n+    // no-op by default\n         }\n \n         /**\n          * No check point log entry found in the transaction log.\n          */\n         default void noCheckPointFound()\n-        {   // no-op by default\n+        {\n+    // no-op by default\n         }\n     }\n \n@@ -105,10 +108,8 @@ public class RecoveryStartInformationProvider implements ThrowingSupplier<Recove\n             if ( logTailInformation.oldestLogVersionFound != INITIAL_LOG_VERSION )\n             {\n                 long fromLogVersion = Math.max( INITIAL_LOG_VERSION, logTailInformation.oldestLogVersionFound );\n-                throw new UnderlyingStorageException(\n-                        \"No check point found in any log file from version \" + fromLogVersion + \" to \" +\n-                                logTailInformation.currentLogVersion );\n-            }\n+                throw new UnderlyingStorageException( \"No check point found in any log file from version \" + fromLogVersion + \" to \" + logTailInformation.currentLogVersion );\n+    }\n             monitor.noCheckPointFound();\n             return createRecoveryInformation( LogPosition.start( 0 ), txIdAfterLastCheckPoint );\n         }\n@@ -118,4 +119,4 @@ public class RecoveryStartInformationProvider implements ThrowingSupplier<Recove\n     {\n         return new RecoveryStartInformation( logPosition, firstTxId );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1881",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1881/ArrayQueueOutOfOrderSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1881/ArrayQueueOutOfOrderSequence.java\nindex 0af8a433ab2..9a74b9100e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1881/ArrayQueueOutOfOrderSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1881/ArrayQueueOutOfOrderSequence.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.util.concurrent;\n \n import java.util.Arrays;\n@@ -34,29 +35,29 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n     private long[] metaArray;\n     private volatile long highestEverSeen;\n \n-    public ArrayQueueOutOfOrderSequence( long startingNumber, int initialArraySize, long[] initialMeta )\n+    public ArrayQueueOutOfOrderSequence(long startingNumber, int initialArraySize, long[] initialMeta)\n     {\n         this.highestGapFreeNumber = startingNumber;\n         this.highestEverSeen = startingNumber;\n-        this.highestGapFreeMeta = Arrays.copyOf( initialMeta, initialMeta.length );\n-        this.metaArray = Arrays.copyOf( initialMeta, initialMeta.length );\n-        this.outOfOrderQueue = new SequenceArray( initialMeta.length + 1, initialArraySize );\n+        this.highestGapFreeMeta = Arrays.copyOf(initialMeta, initialMeta.length);\n+        this.metaArray = Arrays.copyOf(initialMeta, initialMeta.length);\n+        this.outOfOrderQueue = new SequenceArray(initialMeta.length + 1, initialArraySize);\n     }\n \n     @Override\n-    public synchronized boolean offer( long number, long[] meta )\n+    public synchronized boolean offer(long number, long[] meta)\n     {\n-        highestEverSeen = Math.max( highestEverSeen, number );\n-        if ( highestGapFreeNumber + 1 == number )\n+        highestEverSeen = Math.max(highestEverSeen, number);\n+        if (highestGapFreeNumber + 1 == number)\n         {\n             version++;\n-            highestGapFreeNumber = outOfOrderQueue.pollHighestGapFree( number, metaArray );\n-            highestGapFreeMeta = highestGapFreeNumber == number ? meta : Arrays.copyOf( metaArray, metaArray.length );\n+            highestGapFreeNumber = outOfOrderQueue.pollHighestGapFree(number, metaArray);\n+            highestGapFreeMeta = highestGapFreeNumber == number ? meta : Arrays.copyOf(metaArray, metaArray.length);\n             version++;\n             return true;\n         }\n \n-        outOfOrderQueue.offer( highestGapFreeNumber, number, pack( meta ) );\n+        outOfOrderQueue.offer(highestGapFreeNumber, number, pack(meta));\n         return false;\n     }\n \n@@ -66,7 +67,7 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n         return this.highestEverSeen;\n     }\n \n-    private long[] pack( long[] meta )\n+    private long[] pack(long[] meta)\n     {\n         metaArray = meta;\n         return metaArray;\n@@ -77,30 +78,30 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n     {\n         long number;\n         long[] meta;\n-        while ( true )\n+        while (true)\n         {\n             int versionBefore = version;\n-            if ( (versionBefore & 1) == 1 )\n+            if ((versionBefore & 1) == 1)\n             {   // Someone else is updating those values as we speak, go another round\n                 continue;\n             }\n \n             number = highestGapFreeNumber;\n             meta = highestGapFreeMeta;\n-            if ( version == versionBefore )\n+            if (version == versionBefore)\n             {   // We read a consistent version of these two values\n                 break;\n             }\n         }\n \n-        return createResult( number, meta );\n+        return createResult(number, meta);\n     }\n \n-    private static long[] createResult( long number, long[] meta )\n+    private static long[] createResult(long number, long[] meta)\n     {\n         long[] result = new long[meta.length + 1];\n         result[0] = number;\n-        System.arraycopy( meta, 0, result, 1, meta.length );\n+        System.arraycopy(meta, 0, result, 1, meta.length);\n         return result;\n     }\n \n@@ -111,7 +112,7 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n     }\n \n     @Override\n-    public synchronized void set( long number, long[] meta )\n+    public synchronized void set(long number, long[] meta)\n     {\n         highestEverSeen = number;\n         highestGapFreeNumber = number;\n@@ -143,6 +144,6 @@ public class ArrayQueueOutOfOrderSequence implements OutOfOrderSequence\n     @Override\n     public synchronized String toString()\n     {\n-        return String.format( \"out-of-order-sequence:%d %d [%s]\", highestEverSeen, highestGapFreeNumber, outOfOrderQueue );\n+        return String.format(\"out-of-order-sequence:%d %d [%s]\", highestEverSeen, highestGapFreeNumber, outOfOrderQueue);\n     }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
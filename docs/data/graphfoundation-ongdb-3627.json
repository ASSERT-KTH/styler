{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3627",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3627/RecordDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3627/RecordDistributor.java\nindex 08ab5c80f24..5d1d951c9a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3627/RecordDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3627/RecordDistributor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import java.util.Iterator;\n@@ -33,90 +34,87 @@ import org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.Workers;\n  */\n public class RecordDistributor\n {\n-    private RecordDistributor()\n+  private RecordDistributor()\n+  {\n+  }\n+\n+  public static <RECORD> void distributeRecords(\n+      int numberOfThreads,\n+      String workerNames,\n+      int queueSize,\n+      Iterator<RECORD> records,\n+      final ProgressListener progress,\n+      RecordProcessor<RECORD> processor,\n+      QueueDistributor<RECORD> idDistributor)\n+  {\n+    if (!records.hasNext())\n     {\n+      return;\n     }\n \n-    public static <RECORD> void distributeRecords(\n-            int numberOfThreads,\n-            String workerNames,\n-            int queueSize,\n-            Iterator<RECORD> records,\n-            final ProgressListener progress,\n-            RecordProcessor<RECORD> processor,\n-            QueueDistributor<RECORD> idDistributor )\n+    @SuppressWarnings(\"unchecked\") final ArrayBlockingQueue<RECORD>[] recordQ = new ArrayBlockingQueue[numberOfThreads];\n+    final Workers<RecordCheckWorker<RECORD>> workers = new Workers<>(workerNames);\n+    final AtomicInteger idGroup = new AtomicInteger(-1);\n+    for (int threadId = 0; threadId < numberOfThreads; threadId++)\n     {\n-        if ( !records.hasNext() )\n-        {\n-            return;\n-        }\n-\n-        @SuppressWarnings( \"unchecked\" )\n-        final ArrayBlockingQueue<RECORD>[] recordQ = new ArrayBlockingQueue[numberOfThreads];\n-        final Workers<RecordCheckWorker<RECORD>> workers = new Workers<>( workerNames );\n-        final AtomicInteger idGroup = new AtomicInteger( -1 );\n-        for ( int threadId = 0; threadId < numberOfThreads; threadId++ )\n-        {\n-            recordQ[threadId] = new ArrayBlockingQueue<>( queueSize );\n-            workers.start( new RecordCheckWorker<>( threadId, idGroup, recordQ[threadId], processor ) );\n-        }\n+      recordQ[threadId] = new ArrayBlockingQueue<>(queueSize);\n+      workers.start(new RecordCheckWorker<>(threadId, idGroup, recordQ[threadId], processor));\n+    }\n \n-        final int[] recsProcessed = new int[numberOfThreads];\n-        RecordConsumer<RECORD> recordConsumer = ( record, qIndex ) ->\n-        {\n-            recordQ[qIndex].put( record );\n-            recsProcessed[qIndex]++;\n-        };\n+    final int[] recsProcessed = new int[numberOfThreads];\n+    RecordConsumer<RECORD> recordConsumer = (record, qIndex) ->\n+    {\n+      recordQ[qIndex].put(record);\n+      recsProcessed[qIndex]++;\n+    };\n \n+    try\n+    {\n+      while (records.hasNext())\n+      {\n         try\n         {\n-            while ( records.hasNext() )\n-            {\n-                try\n-                {\n-                    // Put records into the queues using the queue distributor. Each Worker will pull and process.\n-                    RECORD record = records.next();\n-                    idDistributor.distribute( record, recordConsumer );\n-                    progress.add( 1 );\n-                }\n-                catch ( InterruptedException e )\n-                {\n-                    Thread.currentThread().interrupt();\n-                    break;\n-                }\n-            }\n-\n-            // No more records to distribute, mark as done so that the workers will exit when no more records in queue.\n-            for ( RecordCheckWorker<RECORD> worker : workers )\n-            {\n-                worker.done();\n-            }\n-\n-            workers.awaitAndThrowOnError();\n-        }\n-        catch ( InterruptedException e )\n+          // Put records into the queues using the queue distributor. Each Worker will pull and process.\n+          RECORD record = records.next();\n+          idDistributor.distribute(record, recordConsumer);\n+          progress.add(1);\n+        } catch (InterruptedException e)\n         {\n-            Thread.currentThread().interrupt();\n-            throw new RuntimeException( \"Was interrupted while awaiting completion\" );\n+          Thread.currentThread().interrupt();\n+          break;\n         }\n-    }\n+      }\n \n-    /**\n-     * Consumers records from a {@link QueueDistribution}, feeding into correct queue.\n-     */\n-    interface RecordConsumer<RECORD>\n+      // No more records to distribute, mark as done so that the workers will exit when no more records in queue.\n+      for (RecordCheckWorker<RECORD> worker : workers)\n+      {\n+        worker.done();\n+      }\n+\n+      workers.awaitAndThrowOnError();\n+    } catch (InterruptedException e)\n     {\n-        void accept( RECORD record, int qIndex ) throws InterruptedException;\n+      Thread.currentThread().interrupt();\n+      throw new RuntimeException(\"Was interrupted while awaiting completion\");\n     }\n+  }\n+\n+  /**\n+   * Consumers records from a {@link QueueDistribution}, feeding into correct queue.\n+   */\n+  interface RecordConsumer<RECORD>\n+  {\n+    void accept(RECORD record, int qIndex) throws InterruptedException;\n+  }\n \n-    public static long calculateRecodsPerCpu( long highId, int numberOfThreads )\n+  public static long calculateRecodsPerCpu(long highId, int numberOfThreads)\n+  {\n+    boolean hasRest = highId % numberOfThreads > 0;\n+    long result = highId / numberOfThreads;\n+    if (hasRest)\n     {\n-        boolean hasRest = highId % numberOfThreads > 0;\n-        long result = highId / numberOfThreads;\n-        if ( hasRest )\n-        {\n-            result++;\n-        }\n-        return result;\n+      result++;\n     }\n+    return result;\n+  }\n }\n",
            "diff_size": 109
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3627/RecordDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3627/RecordDistributor.java\nindex 08ab5c80f24..26ae5fb2964 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3627/RecordDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3627/RecordDistributor.java\n@@ -37,14 +37,8 @@ public class RecordDistributor\n     {\n     }\n \n-    public static <RECORD> void distributeRecords(\n-            int numberOfThreads,\n-            String workerNames,\n-            int queueSize,\n-            Iterator<RECORD> records,\n-            final ProgressListener progress,\n-            RecordProcessor<RECORD> processor,\n-            QueueDistributor<RECORD> idDistributor )\n+    public static <RECORD> void distributeRecords( int numberOfThreads,\n+            String workerNames, int queueSize, Iterator<RECORD> records, final ProgressListener progress, RecordProcessor<RECORD> processor, QueueDistributor<RECORD> idDistributor )\n     {\n         if ( !records.hasNext() )\n         {\n@@ -117,6 +111,7 @@ public class RecordDistributor\n         {\n             result++;\n         }\n-        return result;\n+\n+return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "863",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/863/LockManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/863/LockManager.java\nindex 788ae31e4c4..04ef44d9d0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/863/LockManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/863/LockManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.management;\n \n import java.util.List;\n@@ -25,21 +26,21 @@ import org.neo4j.jmx.Description;\n import org.neo4j.jmx.ManagementInterface;\n import org.neo4j.kernel.info.LockInfo;\n \n-@ManagementInterface( name = LockManager.NAME )\n-@Description( \"Information about the Neo4j lock status\" )\n+@ManagementInterface(name = LockManager.NAME)\n+@Description(\"Information about the Neo4j lock status\")\n public interface LockManager\n {\n-    String NAME = \"Locking\";\n+  String NAME = \"Locking\";\n \n-    @Description( \"The number of lock sequences that would have lead to a deadlock situation that \"\n-                  + \"Neo4j has detected and averted (by throwing DeadlockDetectedException).\" )\n-    long getNumberOfAvertedDeadlocks();\n+  @Description(\"The number of lock sequences that would have lead to a deadlock situation that \"\n+      + \"Neo4j has detected and averted (by throwing DeadlockDetectedException).\")\n+  long getNumberOfAvertedDeadlocks();\n \n-    @Description( \"Information about all locks held by Neo4j\" )\n-    List<LockInfo> getLocks();\n+  @Description(\"Information about all locks held by Neo4j\")\n+  List<LockInfo> getLocks();\n \n-    @Description( \"Information about contended locks (locks where at least one thread is waiting) held by Neo4j. \"\n-                  + \"The parameter is used to get locks where threads have waited for at least the specified number \"\n-                  + \"of milliseconds, a value of 0 retrieves all contended locks.\" )\n-    List<LockInfo> getContendedLocks( long minWaitTime );\n+  @Description(\"Information about contended locks (locks where at least one thread is waiting) held by Neo4j. \"\n+      + \"The parameter is used to get locks where threads have waited for at least the specified number \"\n+      + \"of milliseconds, a value of 0 retrieves all contended locks.\")\n+  List<LockInfo> getContendedLocks(long minWaitTime);\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Annotation 'Description' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 212).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Annotation 'Description' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 334).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/863/LockManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/863/LockManager.java\nindex 788ae31e4c4..e7d8003f592 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/863/LockManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/863/LockManager.java\n@@ -31,15 +31,10 @@ public interface LockManager\n {\n     String NAME = \"Locking\";\n \n-    @Description( \"The number of lock sequences that would have lead to a deadlock situation that \"\n-                  + \"Neo4j has detected and averted (by throwing DeadlockDetectedException).\" )\n-    long getNumberOfAvertedDeadlocks();\n+    @Description( \"The number of lock sequences that would have lead to a deadlock situation that \" + \"Neo4j has detected and averted (by throwing DeadlockDetectedException).\" )long getNumberOfAvertedDeadlocks();\n \n     @Description( \"Information about all locks held by Neo4j\" )\n     List<LockInfo> getLocks();\n \n-    @Description( \"Information about contended locks (locks where at least one thread is waiting) held by Neo4j. \"\n-                  + \"The parameter is used to get locks where threads have waited for at least the specified number \"\n-                  + \"of milliseconds, a value of 0 retrieves all contended locks.\" )\n-    List<LockInfo> getContendedLocks( long minWaitTime );\n-}\n+    @Description( \"Information about contended locks (locks where at least one thread is waiting) held by Neo4j. \" + \"The parameter is used to get locks where threads have waited for at least the specified number \" + \"of milliseconds, a value of 0 retrieves all contended locks.\" )List<LockInfo> getContendedLocks( long minWaitTime );\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1777",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1777/HaRequestType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1777/HaRequestType.java\nindex 403060073a4..88bc35e5bdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1777/HaRequestType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1777/HaRequestType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import org.neo4j.com.ObjectSerializer;\n@@ -25,40 +26,40 @@ import org.neo4j.com.TargetCaller;\n \n public class HaRequestType implements RequestType\n {\n-    private final TargetCaller targetCaller;\n-    private final ObjectSerializer objectSerializer;\n-    private final byte id;\n-    private final boolean unpack;\n+  private final TargetCaller targetCaller;\n+  private final ObjectSerializer objectSerializer;\n+  private final byte id;\n+  private final boolean unpack;\n \n-    public HaRequestType( TargetCaller targetCaller, ObjectSerializer objectSerializer, byte id, boolean unpack )\n-    {\n-        this.targetCaller = targetCaller;\n-        this.objectSerializer = objectSerializer;\n-        this.id = id;\n-        this.unpack = unpack;\n-    }\n+  public HaRequestType(TargetCaller targetCaller, ObjectSerializer objectSerializer, byte id, boolean unpack)\n+  {\n+    this.targetCaller = targetCaller;\n+    this.objectSerializer = objectSerializer;\n+    this.id = id;\n+    this.unpack = unpack;\n+  }\n \n-    @Override\n-    public TargetCaller getTargetCaller()\n-    {\n-        return targetCaller;\n-    }\n+  @Override\n+  public TargetCaller getTargetCaller()\n+  {\n+    return targetCaller;\n+  }\n \n-    @Override\n-    public ObjectSerializer getObjectSerializer()\n-    {\n-        return objectSerializer;\n-    }\n+  @Override\n+  public ObjectSerializer getObjectSerializer()\n+  {\n+    return objectSerializer;\n+  }\n \n-    @Override\n-    public byte id()\n-    {\n-        return id;\n-    }\n+  @Override\n+  public byte id()\n+  {\n+    return id;\n+  }\n \n-    @Override\n-    public boolean responseShouldBeUnpacked()\n-    {\n-        return unpack;\n-    }\n+  @Override\n+  public boolean responseShouldBeUnpacked()\n+  {\n+    return unpack;\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1777/HaRequestType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1777/HaRequestType.java\nindex 403060073a4..12f08c3408a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1777/HaRequestType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1777/HaRequestType.java\n@@ -61,4 +61,4 @@ public class HaRequestType implements RequestType\n     {\n         return unpack;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
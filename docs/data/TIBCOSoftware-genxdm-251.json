{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "251",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class NfaFactory<E, T> implements RegExFactory<E, T>\n{\n\tpublic RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n\t{\n\t\tPreCondition.assertArgumentNotNull(term, \"term\");\n\t\tPreCondition.assertArgumentNotNull(bridge, \"bridge\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/251/NfaFactory.java\nindex 14adf5fbf15..709154adab8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/251/NfaFactory.java\n@@ -22,7 +22,7 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExPattern;\n \n public class NfaFactory<E, T> implements RegExFactory<E, T>\n {\n-\tpublic RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n+public RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n \t{\n \t\tPreCondition.assertArgumentNotNull(term, \"term\");\n \t\tPreCondition.assertArgumentNotNull(bridge, \"bridge\");\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/251/NfaFactory.java\nindex 14adf5fbf15..4a323005eee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/251/NfaFactory.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.processor.w3c.xs.regex.impl.nfa;\n \n import org.genxdm.exceptions.PreCondition;\n@@ -20,13 +21,11 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExBridge;\n import org.genxdm.processor.w3c.xs.regex.api.RegExFactory;\n import org.genxdm.processor.w3c.xs.regex.api.RegExPattern;\n \n-public class NfaFactory<E, T> implements RegExFactory<E, T>\n-{\n-\tpublic RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n-\t{\n-\t\tPreCondition.assertArgumentNotNull(term, \"term\");\n-\t\tPreCondition.assertArgumentNotNull(bridge, \"bridge\");\n+public class NfaFactory<E, T> implements RegExFactory<E, T> {\n+    public RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge) {\n+        PreCondition.assertArgumentNotNull(term, \"term\");\n+        PreCondition.assertArgumentNotNull(bridge, \"bridge\");\n \n-\t\treturn NfaPattern.newPattern(term, bridge);\n-\t}\n+        return NfaPattern.newPattern(term, bridge);\n+    }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/251/NfaFactory.java\nindex 14adf5fbf15..fd79a1da12b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/251/NfaFactory.java\n@@ -22,11 +22,11 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExPattern;\n \n public class NfaFactory<E, T> implements RegExFactory<E, T>\n {\n-\tpublic RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n+    public RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n \t{\n-\t\tPreCondition.assertArgumentNotNull(term, \"term\");\n+    PreCondition.assertArgumentNotNull(term, \"term\");\n \t\tPreCondition.assertArgumentNotNull(bridge, \"bridge\");\n \n \t\treturn NfaPattern.newPattern(term, bridge);\n-\t}\n-}\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/251/NfaFactory.java\nindex 14adf5fbf15..393412a5341 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/251/NfaFactory.java\n@@ -22,11 +22,11 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExPattern;\n \n public class NfaFactory<E, T> implements RegExFactory<E, T>\n {\n-\tpublic RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n-\t{\n-\t\tPreCondition.assertArgumentNotNull(term, \"term\");\n-\t\tPreCondition.assertArgumentNotNull(bridge, \"bridge\");\n+    public RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n+    {\n+        PreCondition.assertArgumentNotNull(term, \"term\");\n+        PreCondition.assertArgumentNotNull(bridge, \"bridge\");\n+        return NfaPattern.newPattern(term, bridge);\n+    }\n \n-\t\treturn NfaPattern.newPattern(term, bridge);\n-\t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/251/NfaFactory.java\nindex 14adf5fbf15..709154adab8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/251/NfaFactory.java\n@@ -22,7 +22,7 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExPattern;\n \n public class NfaFactory<E, T> implements RegExFactory<E, T>\n {\n-\tpublic RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n+public RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n \t{\n \t\tPreCondition.assertArgumentNotNull(term, \"term\");\n \t\tPreCondition.assertArgumentNotNull(bridge, \"bridge\");\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/251/NfaFactory.java\nindex 14adf5fbf15..c05f3346d41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/251/NfaFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/251/NfaFactory.java\n@@ -22,7 +22,7 @@ import org.genxdm.processor.w3c.xs.regex.api.RegExPattern;\n \n public class NfaFactory<E, T> implements RegExFactory<E, T>\n {\n-\tpublic RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n+    public RegExPattern<E, T> newPattern(final E term, RegExBridge<E, T> bridge)\n \t{\n \t\tPreCondition.assertArgumentNotNull(term, \"term\");\n \t\tPreCondition.assertArgumentNotNull(bridge, \"bridge\");\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2658",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2658/LoadBalancingPluginLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2658/LoadBalancingPluginLoader.java\nindex a01fcd58786..2338899a430 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2658/LoadBalancingPluginLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2658/LoadBalancingPluginLoader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.routing.load_balancing;\n \n import java.util.HashSet;\n@@ -38,47 +39,47 @@ import org.neo4j.logging.LogProvider;\n  */\n public class LoadBalancingPluginLoader\n {\n-    private LoadBalancingPluginLoader()\n-    {\n-    }\n+  private LoadBalancingPluginLoader()\n+  {\n+  }\n \n-    public static void validate( Config config, Log log ) throws InvalidSettingException\n-    {\n-        LoadBalancingPlugin plugin = findPlugin( config );\n-        plugin.validate( config, log );\n-    }\n-\n-    public static LoadBalancingProcessor load( TopologyService topologyService, LeaderLocator leaderLocator,\n-            LogProvider logProvider, Config config ) throws Throwable\n-    {\n-        LoadBalancingPlugin plugin = findPlugin( config );\n-        plugin.init( topologyService, leaderLocator, logProvider, config );\n+  public static void validate(Config config, Log log) throws InvalidSettingException\n+  {\n+    LoadBalancingPlugin plugin = findPlugin(config);\n+    plugin.validate(config, log);\n+  }\n \n-        if ( config.get( CausalClusteringSettings.load_balancing_shuffle ) )\n-        {\n-            return new ServerShufflingProcessor( plugin );\n-        }\n+  public static LoadBalancingProcessor load(TopologyService topologyService, LeaderLocator leaderLocator,\n+                                            LogProvider logProvider, Config config) throws Throwable\n+  {\n+    LoadBalancingPlugin plugin = findPlugin(config);\n+    plugin.init(topologyService, leaderLocator, logProvider, config);\n \n-        return plugin;\n+    if (config.get(CausalClusteringSettings.load_balancing_shuffle))\n+    {\n+      return new ServerShufflingProcessor(plugin);\n     }\n \n-    private static LoadBalancingPlugin findPlugin( Config config ) throws InvalidSettingException\n-    {\n-        Set<String> availableOptions = new HashSet<>();\n-        Iterable<LoadBalancingPlugin> allImplementationsOnClasspath = Service.load( LoadBalancingPlugin.class );\n+    return plugin;\n+  }\n \n-        String configuredName = config.get( CausalClusteringSettings.load_balancing_plugin );\n+  private static LoadBalancingPlugin findPlugin(Config config) throws InvalidSettingException\n+  {\n+    Set<String> availableOptions = new HashSet<>();\n+    Iterable<LoadBalancingPlugin> allImplementationsOnClasspath = Service.load(LoadBalancingPlugin.class);\n \n-        for ( LoadBalancingPlugin plugin : allImplementationsOnClasspath )\n-        {\n-            if ( plugin.pluginName().equals( configuredName ) )\n-            {\n-                return plugin;\n-            }\n-            availableOptions.add( plugin.pluginName() );\n-        }\n+    String configuredName = config.get(CausalClusteringSettings.load_balancing_plugin);\n \n-        throw new InvalidSettingException( String.format( \"Could not find load balancing plugin with name: '%s'\" +\n-                                                   \" among available options: %s\", configuredName, availableOptions ) );\n+    for (LoadBalancingPlugin plugin : allImplementationsOnClasspath)\n+    {\n+      if (plugin.pluginName().equals(configuredName))\n+      {\n+        return plugin;\n+      }\n+      availableOptions.add(plugin.pluginName());\n     }\n+\n+    throw new InvalidSettingException(String.format(\"Could not find load balancing plugin with name: '%s'\" +\n+        \" among available options: %s\", configuredName, availableOptions));\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2658/LoadBalancingPluginLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2658/LoadBalancingPluginLoader.java\nindex a01fcd58786..75e7caacf85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2658/LoadBalancingPluginLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2658/LoadBalancingPluginLoader.java\n@@ -50,11 +50,10 @@ public class LoadBalancingPluginLoader\n \n     public static LoadBalancingProcessor load( TopologyService topologyService, LeaderLocator leaderLocator,\n             LogProvider logProvider, Config config ) throws Throwable\n-    {\n+{\n         LoadBalancingPlugin plugin = findPlugin( config );\n         plugin.init( topologyService, leaderLocator, logProvider, config );\n-\n-        if ( config.get( CausalClusteringSettings.load_balancing_shuffle ) )\n+if ( config.get( CausalClusteringSettings.load_balancing_shuffle ) )\n         {\n             return new ServerShufflingProcessor( plugin );\n         }\n@@ -66,10 +65,8 @@ public class LoadBalancingPluginLoader\n     {\n         Set<String> availableOptions = new HashSet<>();\n         Iterable<LoadBalancingPlugin> allImplementationsOnClasspath = Service.load( LoadBalancingPlugin.class );\n-\n-        String configuredName = config.get( CausalClusteringSettings.load_balancing_plugin );\n-\n-        for ( LoadBalancingPlugin plugin : allImplementationsOnClasspath )\n+String configuredName = config.get( CausalClusteringSettings.load_balancing_plugin );\n+for ( LoadBalancingPlugin plugin : allImplementationsOnClasspath )\n         {\n             if ( plugin.pluginName().equals( configuredName ) )\n             {\n@@ -78,7 +75,6 @@ public class LoadBalancingPluginLoader\n             availableOptions.add( plugin.pluginName() );\n         }\n \n-        throw new InvalidSettingException( String.format( \"Could not find load balancing plugin with name: '%s'\" +\n-                                                   \" among available options: %s\", configuredName, availableOptions ) );\n+        throw new InvalidSettingException( String.format( \"Could not find load balancing plugin with name: '%s'\" + \" among available options: %s\", configuredName, availableOptions ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "68",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2658/LoadBalancingPluginLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2658/LoadBalancingPluginLoader.java\nindex a01fcd58786..52d293d7eee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2658/LoadBalancingPluginLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2658/LoadBalancingPluginLoader.java\n@@ -21,7 +21,6 @@ package org.neo4j.causalclustering.routing.load_balancing;\n \n import java.util.HashSet;\n import java.util.Set;\n-\n import org.neo4j.causalclustering.core.CausalClusteringSettings;\n import org.neo4j.causalclustering.core.consensus.LeaderLocator;\n import org.neo4j.causalclustering.discovery.TopologyService;\n@@ -36,6 +35,7 @@ import org.neo4j.logging.LogProvider;\n  * Loads and initialises any service implementations of <class>LoadBalancingPlugin</class>.\n  * Exposes configured instances of that interface via an iterator.\n  */\n+\n public class LoadBalancingPluginLoader\n {\n     private LoadBalancingPluginLoader()\n@@ -48,12 +48,10 @@ public class LoadBalancingPluginLoader\n         plugin.validate( config, log );\n     }\n \n-    public static LoadBalancingProcessor load( TopologyService topologyService, LeaderLocator leaderLocator,\n-            LogProvider logProvider, Config config ) throws Throwable\n+    public static LoadBalancingProcessor load( TopologyService topologyService, LeaderLocator leaderLocator, LogProvider logProvider, Config config ) throws Throwable\n     {\n         LoadBalancingPlugin plugin = findPlugin( config );\n         plugin.init( topologyService, leaderLocator, logProvider, config );\n-\n         if ( config.get( CausalClusteringSettings.load_balancing_shuffle ) )\n         {\n             return new ServerShufflingProcessor( plugin );\n@@ -66,19 +64,17 @@ public class LoadBalancingPluginLoader\n     {\n         Set<String> availableOptions = new HashSet<>();\n         Iterable<LoadBalancingPlugin> allImplementationsOnClasspath = Service.load( LoadBalancingPlugin.class );\n-\n         String configuredName = config.get( CausalClusteringSettings.load_balancing_plugin );\n-\n-        for ( LoadBalancingPlugin plugin : allImplementationsOnClasspath )\n+        for( LoadBalancingPlugin plugin : allImplementationsOnClasspath)\n         {\n             if ( plugin.pluginName().equals( configuredName ) )\n             {\n                 return plugin;\n             }\n+\n             availableOptions.add( plugin.pluginName() );\n         }\n \n-        throw new InvalidSettingException( String.format( \"Could not find load balancing plugin with name: '%s'\" +\n-                                                   \" among available options: %s\", configuredName, availableOptions ) );\n+        throw new InvalidSettingException( String.format( \"Could not find load balancing plugin with name: '%s'\" + \" among available options: %s\", configuredName, availableOptions ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
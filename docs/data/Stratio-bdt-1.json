{
    "project_name": "Stratio-bdt",
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.stratio.qa.aspects;\n\nimport com.stratio.qa.utils.ThreadProperty;\nimport org.testng.annotations.Test;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/1/MandatoryAspectTest.java\nindex 20ddb2ed91a..0694456c5b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/1/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/1/MandatoryAspectTest.java\nindex 20ddb2ed91a..d9443324d83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/1/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -31,7 +32,8 @@ public class MandatoryAspectTest {\n         MandatoryAspect mandAspect = new MandatoryAspect();\n         List<String> tagList = new ArrayList<>();\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"No mandatory tag should make feature run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList)).as(\"No mandatory tag should make feature run.\")\n+            .isEqualTo(true);\n     }\n \n     @Test\n@@ -41,7 +43,8 @@ public class MandatoryAspectTest {\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@mandatory\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"No vars tag should make feature run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList)).as(\"No vars tag should make feature run.\")\n+            .isEqualTo(true);\n     }\n \n     @Test\n@@ -51,7 +54,8 @@ public class MandatoryAspectTest {\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@vars\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"No mandatory tag with vars tag should make feature run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"No mandatory tag with vars tag should make feature run.\").isEqualTo(true);\n     }\n \n     @Test\n@@ -63,7 +67,8 @@ public class MandatoryAspectTest {\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n         System.clearProperty(\"SYSTEM\");\n     }\n \n@@ -75,7 +80,8 @@ public class MandatoryAspectTest {\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n     }\n \n     @Test\n@@ -87,7 +93,8 @@ public class MandatoryAspectTest {\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"Defined variable should make feature to run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"Defined variable should make feature to run.\").isEqualTo(true);\n         System.clearProperty(\"SSH\");\n     }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/1/MandatoryAspectTest.java\nindex 20ddb2ed91a..e778f7a0b9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/1/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -90,4 +91,4 @@ public class MandatoryAspectTest {\n         assertThat(mandAspect.manageTags(tagList)).as(\"Defined variable should make feature to run.\").isEqualTo(true);\n         System.clearProperty(\"SSH\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/1/MandatoryAspectTest.java\nindex 20ddb2ed91a..0694456c5b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/1/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/1/MandatoryAspectTest.java\nindex 20ddb2ed91a..0694456c5b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/1/MandatoryAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/1/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
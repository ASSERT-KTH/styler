{
    "project_name": "neo4j-neo4j",
    "error_id": "558",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "157",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "177",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "203",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "213",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "247",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "262",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/558/PrimitiveArrays.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/558/PrimitiveArrays.java\nindex 359d7a58f3b..b726a00749e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/558/PrimitiveArrays.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/558/PrimitiveArrays.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection;\n \n import java.util.Arrays;\n@@ -25,7 +26,7 @@ import static org.neo4j.collection.PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n \n /**\n  * Specialized methods for operations on primitive arrays.\n- *\n+ * <p>\n  * For set operations (union, intersect, symmetricDifference), input and output arrays\n  * are arrays containing unique values in sorted ascending order.\n  */\n@@ -39,62 +40,59 @@ public final class PrimitiveArrays\n     /**\n      * Compute union of two sets of integers represented as sorted arrays.\n      *\n-     * @param lhs\n-     *         a set of integers, represented as a sorted array.\n-     * @param rhs\n-     *         a set of integers, represented as a sorted array.\n+     * @param lhs a set of integers, represented as a sorted array.\n+     * @param rhs a set of integers, represented as a sorted array.\n      * @return a set of integers, represented as a sorted array.\n      */\n     // NOTE: this implementation was measured to be faster than an implementation\n     // with countUnique for arrays on size 100+.\n-    public static int[] union( int[] lhs, int[] rhs )\n+    public static int[] union(int[] lhs, int[] rhs)\n     {\n-        if ( lhs == null || rhs == null )\n+        if (lhs == null || rhs == null)\n         {\n             return lhs == null ? rhs : lhs;\n         }\n \n-        assert isSortedSet( lhs ) && isSortedSet( rhs );\n-        if ( lhs.length < rhs.length )\n+        assert isSortedSet(lhs) && isSortedSet(rhs);\n+        if (lhs.length < rhs.length)\n         {\n-            return union( rhs, lhs );\n+            return union(rhs, lhs);\n         }\n         int[] merged = null;\n         int m = 0;\n         int l = 0;\n-        for ( int r = 0; l <= lhs.length && r < rhs.length; )\n+        for (int r = 0; l <= lhs.length && r < rhs.length; )\n         {\n-            while ( l < lhs.length && lhs[l] < rhs[r] )\n+            while (l < lhs.length && lhs[l] < rhs[r])\n             {\n-                if ( merged != null )\n+                if (merged != null)\n                 {\n                     merged[m++] = lhs[l];\n                 }\n                 l++;\n             }\n-            if ( l == lhs.length )\n+            if (l == lhs.length)\n             {\n-                if ( merged == null )\n+                if (merged == null)\n                 {\n-                    merged = Arrays.copyOf( lhs, lhs.length + rhs.length - r );\n+                    merged = Arrays.copyOf(lhs, lhs.length + rhs.length - r);\n                     m = l;\n                 }\n-                System.arraycopy( rhs, r, merged, m, rhs.length - r );\n+                System.arraycopy(rhs, r, merged, m, rhs.length - r);\n                 m += rhs.length - r;\n                 break;\n             }\n-            if ( lhs[l] > rhs[r] )\n+            if (lhs[l] > rhs[r])\n             {\n-                if ( merged == null )\n+                if (merged == null)\n                 {\n-                    merged = Arrays.copyOf( lhs, lhs.length + rhs.length - r );\n+                    merged = Arrays.copyOf(lhs, lhs.length + rhs.length - r);\n                     m = l;\n                 }\n                 merged[m++] = rhs[r++];\n-            }\n-            else // i.e. ( lhs[l] == rhs[r] )\n+            } else // i.e. ( lhs[l] == rhs[r] )\n             {\n-                if ( merged != null )\n+                if (merged != null)\n                 {\n                     merged[m++] = lhs[l];\n                 }\n@@ -102,65 +100,64 @@ public final class PrimitiveArrays\n                 r++;\n             }\n         }\n-        if ( merged == null )\n+        if (merged == null)\n         {\n             return lhs;\n         }\n-        if ( l < lhs.length ) // get tail of lhs\n+        if (l < lhs.length) // get tail of lhs\n         {\n-            System.arraycopy( lhs, l, merged, m, lhs.length - l );\n+            System.arraycopy(lhs, l, merged, m, lhs.length - l);\n             m += lhs.length - l;\n         }\n-        if ( m < merged.length ) // truncate extra elements\n+        if (m < merged.length) // truncate extra elements\n         {\n-            merged = Arrays.copyOf( merged, m );\n+            merged = Arrays.copyOf(merged, m);\n         }\n         return merged;\n     }\n \n     /**\n      * Compute the intersection of two sorted long array sets.\n-     * @param left a sorted array set\n+     *\n+     * @param left  a sorted array set\n      * @param right another sorted array set\n      * @return the intersection, represented as a sorted long array\n      */\n-    public static long[] intersect( long[] left, long[] right )\n+    public static long[] intersect(long[] left, long[] right)\n     {\n-        if ( left == null || right == null )\n+        if (left == null || right == null)\n         {\n             return EMPTY_LONG_ARRAY;\n         }\n \n-        assert isSortedSet( left ) && isSortedSet( right );\n+        assert isSortedSet(left) && isSortedSet(right);\n \n-        long uniqueCounts = countUnique( left, right );\n-        if ( uniqueCounts == 0 ) // complete intersection\n+        long uniqueCounts = countUnique(left, right);\n+        if (uniqueCounts == 0) // complete intersection\n         {\n             return right;\n         }\n-        if ( right( uniqueCounts ) == right.length || left( uniqueCounts ) == left.length ) // non-intersecting\n+        if (right(uniqueCounts) == right.length || left(uniqueCounts) == left.length) // non-intersecting\n         {\n             return EMPTY_LONG_ARRAY;\n         }\n \n-        long[] intersect = new long[left.length - left( uniqueCounts )];\n+        long[] intersect = new long[left.length - left(uniqueCounts)];\n \n         int cursor = 0;\n         int l = 0;\n         int r = 0;\n-        while ( l < left.length && r < right.length )\n+        while (l < left.length && r < right.length)\n         {\n-            if ( left[l] == right[r] )\n+            if (left[l] == right[r])\n             {\n                 intersect[cursor++] = left[l];\n                 l++;\n                 r++;\n-            }\n-            else if ( left[l] < right[r] )\n+            } else if (left[l] < right[r])\n             {\n                 l++;\n-            }\n-            else\n+            } else\n             {\n                 r++;\n             }\n@@ -169,56 +166,56 @@ public final class PrimitiveArrays\n         assert cursor == intersect.length;\n         return intersect;\n     }\n+\n     /**\n      * Compute the symmetric difference (set XOR basically) of two sorted long array sets.\n-     * @param left a sorted array set\n+     *\n+     * @param left  a sorted array set\n      * @param right another sorted array set\n      * @return the symmetric difference, represented as a sorted long array\n      */\n-    public static long[] symmetricDifference( long[] left, long[] right )\n+    public static long[] symmetricDifference(long[] left, long[] right)\n     {\n-        if ( left == null || right == null )\n+        if (left == null || right == null)\n         {\n             return left == null ? right : left;\n         }\n \n-        assert isSortedSet( left ) && isSortedSet( right );\n+        assert isSortedSet(left) && isSortedSet(right);\n \n-        long uniqueCounts = countUnique( left, right );\n-        if ( uniqueCounts == 0 ) // complete intersection\n+        long uniqueCounts = countUnique(left, right);\n+        if (uniqueCounts == 0) // complete intersection\n         {\n             return EMPTY_LONG_ARRAY;\n         }\n \n-        long[] difference = new long[left( uniqueCounts ) + right( uniqueCounts )];\n+        long[] difference = new long[left(uniqueCounts) + right(uniqueCounts)];\n \n         int cursor = 0;\n         int l = 0;\n         int r = 0;\n-        while ( l < left.length && r < right.length )\n+        while (l < left.length && r < right.length)\n         {\n-            if ( left[l] == right[r] )\n+            if (left[l] == right[r])\n             {\n                 l++;\n                 r++;\n-            }\n-            else if ( left[l] < right[r] )\n+            } else if (left[l] < right[r])\n             {\n                 difference[cursor++] = left[l];\n                 l++;\n-            }\n-            else\n+            } else\n             {\n                 difference[cursor++] = right[r];\n                 r++;\n             }\n         }\n-        while ( l < left.length )\n+        while (l < left.length)\n         {\n             difference[cursor++] = left[l];\n             l++;\n         }\n-        while ( r < right.length )\n+        while (r < right.length)\n         {\n             difference[cursor++] = right[r];\n             r++;\n@@ -230,29 +227,28 @@ public final class PrimitiveArrays\n \n     /**\n      * Compute the number of unique values in two sorted long array sets\n-     * @param left a sorted array set\n+     *\n+     * @param left  a sorted array set\n      * @param right another sorted array set\n      * @return int pair packed into long\n      */\n-    static long countUnique( long[] left, long[] right )\n+    static long countUnique(long[] left, long[] right)\n     {\n         int l = 0;\n         int r = 0;\n         int uniqueInLeft = 0;\n         int uniqueInRight = 0;\n-        while ( l < left.length && r < right.length )\n+        while (l < left.length && r < right.length)\n         {\n-            if ( left[l] == right[r] )\n+            if (left[l] == right[r])\n             {\n                 l++;\n                 r++;\n-            }\n-            else if ( left[l] < right[r] )\n+            } else if (left[l] < right[r])\n             {\n                 uniqueInLeft++;\n                 l++;\n-            }\n-            else\n+            } else\n             {\n                 uniqueInRight++;\n                 r++;\n@@ -260,36 +256,36 @@ public final class PrimitiveArrays\n         }\n         uniqueInLeft += left.length - l;\n         uniqueInRight += right.length - r;\n-        return intPair( uniqueInLeft, uniqueInRight );\n+        return intPair(uniqueInLeft, uniqueInRight);\n     }\n \n-    private static long intPair( int left, int right )\n+    private static long intPair(int left, int right)\n     {\n         return (((long) left) << Integer.SIZE) | right;\n     }\n \n-    private static int left( long pair )\n+    private static int left(long pair)\n     {\n-        return (int)(pair >> Integer.SIZE);\n+        return (int) (pair >> Integer.SIZE);\n     }\n \n-    private static int right( long pair )\n+    private static int right(long pair)\n     {\n-        return (int)(pair & 0xFFFF_FFFFL);\n+        return (int) (pair & 0xFFFF_FFFFL);\n     }\n \n-    private static boolean isSortedSet( int[] set )\n+    private static boolean isSortedSet(int[] set)\n     {\n-        for ( int i = 0; i < set.length - 1; i++ )\n+        for (int i = 0; i < set.length - 1; i++)\n         {\n             assert set[i] < set[i + 1] : \"Array is not a sorted set: has \" + set[i] + \" before \" + set[i + 1];\n         }\n         return true;\n     }\n \n-    private static boolean isSortedSet( long[] set )\n+    private static boolean isSortedSet(long[] set)\n     {\n-        for ( int i = 0; i < set.length - 1; i++ )\n+        for (int i = 0; i < set.length - 1; i++)\n         {\n             assert set[i] < set[i + 1] : \"Array is not a sorted set: has \" + set[i] + \" before \" + set[i + 1];\n         }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/558/PrimitiveArrays.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/558/PrimitiveArrays.java\nindex 359d7a58f3b..5cdbbc1a2ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/558/PrimitiveArrays.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/558/PrimitiveArrays.java\n@@ -296,4 +296,4 @@ public final class PrimitiveArrays\n         return true;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
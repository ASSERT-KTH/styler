{
    "project_name": "self-xdsd-self-core",
    "error_id": "34",
    "information": {
        "errors": [
            {
                "line": "66",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public Step start(final Event event) {\n        final Step steps;\n        if(Event.Type.REGISTER.equals(event.type())) {\n            final Language language = event.project().language();\n            final String author = event.comment().author();\n            steps = new IssueIsClosed(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/34/Register.java\nindex 1b27f2e26c4..1bb189b9ff2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/34/Register.java\n@@ -63,7 +63,7 @@ public final class Register implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.REGISTER.equals(event.type())) {\n+        if (Event.Type.REGISTER.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new IssueIsClosed(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/34/Register.java\nindex 1b27f2e26c4..09e42cfaacb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/34/Register.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.managers;\n \n import com.selfxdsd.api.Contract;\n@@ -33,6 +34,7 @@ import org.slf4j.LoggerFactory;\n /**\n  * Conversation where a user asks the PM to register\n  * the ticket as a task.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.20\n@@ -53,8 +55,9 @@ public final class Register implements Conversation {\n \n     /**\n      * Ctor.\n+     *\n      * @param notRegister Next in the conversation chain, if the\n-     *  event type is not register.\n+     *                    event type is not register.\n      */\n     public Register(final Conversation notRegister) {\n         this.notRegister = notRegister;\n@@ -63,7 +66,7 @@ public final class Register implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.REGISTER.equals(event.type())) {\n+        if (Event.Type.REGISTER.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new IssueIsClosed(\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/34/Register.java\nindex 1b27f2e26c4..b1b85c750c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/34/Register.java\n@@ -63,7 +63,7 @@ public final class Register implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.REGISTER.equals(event.type())) {\n+        if (Event.Type.REGISTER.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new IssueIsClosed(\n@@ -109,4 +109,4 @@ public final class Register implements Conversation {\n         }\n         return steps;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/34/Register.java\nindex 1b27f2e26c4..7287c0e6deb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/34/Register.java\n@@ -37,18 +37,22 @@ import org.slf4j.LoggerFactory;\n  * @version $Id$\n  * @since 0.0.20\n  */\n+\n+\n public final class Register implements Conversation {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        Register.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(Register.class);\n \n     /**\n      * Next conversation, if the event type is not \"register\".\n      */\n+\n+\n     private final Conversation notRegister;\n \n     /**\n@@ -56,6 +60,8 @@ public final class Register implements Conversation {\n      * @param notRegister Next in the conversation chain, if the\n      *  event type is not register.\n      */\n+\n+\n     public Register(final Conversation notRegister) {\n         this.notRegister = notRegister;\n     }\n@@ -63,50 +69,27 @@ public final class Register implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.REGISTER.equals(event.type())) {\n+        if (Event.Type.REGISTER.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n-            steps = new IssueIsClosed(\n-                new SendReply(\n-                    String.format(\n-                        language.reply(\"issueClosed.comment\"),\n-                        author\n-                    )\n-                ),\n-                new AuthorHasRoles(\n-                    new TaskIsRegistered(\n-                        new SendReply(\n-                            String.format(\n-                                language.reply(\n-                                    \"taskAlreadyRegistered.comment\"\n-                                ),\n-                                author\n-                            )\n-                        ),\n-                        new RegisterIssue(\n-                            new SendReply(\n-                                String.format(\n-                                    language.reply(\n-                                        \"taskRegistered.comment\"\n-                                    ),\n-                                    author\n-                                )\n-                            )\n-                        )\n-                    ),\n-                    new SendReply(\n-                        String.format(\n-                            language.reply(\"mustBeContributor.comment\"),\n-                            author\n-                        )\n-                    ),\n-                    event,\n-                    Contract.Roles.ANY\n-                )\n-            );\n+            steps = new IssueIsClosed(new SendReply(String.format(language.reply(\"issueClosed.comment\"), author)), new AuthorHasRoles(\n+                                          new TaskIsRegistered(\n+                                              new SendReply(String.format(\n+                                                                language.reply(\"taskAlreadyRegistered.comment\"),\n+                                                                author\n+                                                            )),\n+                                              new RegisterIssue(new SendReply(String.format(language.reply(\"taskRegistered.comment\"), author)))\n+                                          ),\n+                                          new SendReply(String.format(\n+                                                            language.reply(\"mustBeContributor.comment\"),\n+                                                            author\n+                                                        )),\n+                                          event,\n+                                          Contract.Roles.ANY\n+                                      ));\n         } else {\n             steps = this.notRegister.start(event);\n         }\n         return steps;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/34/Register.java\nindex 1b27f2e26c4..1bb189b9ff2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/34/Register.java\n@@ -63,7 +63,7 @@ public final class Register implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.REGISTER.equals(event.type())) {\n+        if (Event.Type.REGISTER.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new IssueIsClosed(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/34/Register.java\nindex 1b27f2e26c4..1bb189b9ff2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/34/Register.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/34/Register.java\n@@ -63,7 +63,7 @@ public final class Register implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.REGISTER.equals(event.type())) {\n+        if (Event.Type.REGISTER.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new IssueIsClosed(\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2615",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2615/StubNodeValueIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2615/StubNodeValueIndexCursor.java\nindex 37848d4a685..70ea830d55a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2615/StubNodeValueIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2615/StubNodeValueIndexCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.helpers;\n \n import java.util.ArrayList;\n@@ -37,14 +38,15 @@ public class StubNodeValueIndexCursor extends DefaultCloseListenable implements\n     private final List<NodeData> nodes = new ArrayList<>();\n     private List<Value[]> values = new ArrayList<>();\n \n-    public StubNodeValueIndexCursor withNode( long id, Value... vs )\n+    public StubNodeValueIndexCursor withNode(long id, Value... vs)\n     {\n-        nodes.add( new NodeData( id, new long[]{}, Collections.emptyMap() ) );\n-        values.add( vs );\n+        nodes.add(new NodeData(id, new long[] {}, Collections.emptyMap()));\n+        values.add(vs);\n         return this;\n     }\n+\n     @Override\n-    public void node( NodeCursor cursor )\n+    public void node(NodeCursor cursor)\n     {\n \n     }\n@@ -52,7 +54,7 @@ public class StubNodeValueIndexCursor extends DefaultCloseListenable implements\n     @Override\n     public long nodeReference()\n     {\n-        return position >= 0 && position < nodes.size() ? nodes.get( position ).id : -1;\n+        return position >= 0 && position < nodes.size() ? nodes.get(position).id : -1;\n     }\n \n     @Override\n@@ -80,7 +82,7 @@ public class StubNodeValueIndexCursor extends DefaultCloseListenable implements\n     }\n \n     @Override\n-    public void setTracer( KernelReadTracer tracer )\n+    public void setTracer(KernelReadTracer tracer)\n     {\n     }\n \n@@ -92,11 +94,11 @@ public class StubNodeValueIndexCursor extends DefaultCloseListenable implements\n     @Override\n     public int numberOfProperties()\n     {\n-        return position >= 0 && position < values.size() ? values.get( position ).length : 0;\n+        return position >= 0 && position < values.size() ? values.get(position).length : 0;\n     }\n \n     @Override\n-    public int propertyKey( int offset )\n+    public int propertyKey(int offset)\n     {\n         return 0;\n     }\n@@ -108,8 +110,8 @@ public class StubNodeValueIndexCursor extends DefaultCloseListenable implements\n     }\n \n     @Override\n-    public Value propertyValue( int offset )\n+    public Value propertyValue(int offset)\n     {\n-        return position >= 0 && position < values.size() ? values.get( position )[offset] : NO_VALUE;\n+        return position >= 0 && position < values.size() ? values.get(position)[offset] : NO_VALUE;\n     }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2615/StubNodeValueIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2615/StubNodeValueIndexCursor.java\nindex 37848d4a685..5d46d38bd62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2615/StubNodeValueIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2615/StubNodeValueIndexCursor.java\n@@ -43,7 +43,8 @@ public class StubNodeValueIndexCursor extends DefaultCloseListenable implements\n         values.add( vs );\n         return this;\n     }\n-    @Override\n+\n+@Override\n     public void node( NodeCursor cursor )\n     {\n \n@@ -112,4 +113,4 @@ public class StubNodeValueIndexCursor extends DefaultCloseListenable implements\n     {\n         return position >= 0 && position < values.size() ? values.get( position )[offset] : NO_VALUE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
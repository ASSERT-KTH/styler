{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1204",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1204/PaxosInstanceStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1204/PaxosInstanceStore.java\nindex 98c7b4ec0b7..a9c935bf1d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1204/PaxosInstanceStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1204/PaxosInstanceStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos;\n \n import java.util.HashMap;\n@@ -29,116 +30,116 @@ import java.util.Queue;\n  */\n public class PaxosInstanceStore\n {\n-    /*\n-     * This represents the number of delivered paxos instances to keep in memory - it is essentially the length\n-     * of the delivered queue and therefore the size of the instances map.\n-     * The use of this is to server Learn requests. While learning is the final phase of the Paxos algo, it is also\n-     * executed when an instance needs to catch up with events that happened in the cluster but it missed because it\n-     * was temporarily disconnected.\n-     * MAX_STORED therefore represents the maximum number of paxos instances a lagging member may be lagging behind\n-     * and be able to recover from. This number must be large enough to account for a few minutes of downtime (like\n-     * an extra long GC pause) during which intense broadcasting happens.\n-     * Assuming 2 paxos instances per second gives us 120 instances per minute or 1200 instances for 10 minutes of\n-     * downtime. We about 5x that here since instances are relatively small in size and we can spare the memory.\n-     */\n-    // TODO (quite challenging and interesting) Prune this queue aggressively.\n-    /*\n-     * This queue, as it stands now, will always remain at full capacity. However, if we could figure out that\n-     * all cluster members have learned a particular paxos instance then we can remove it since no one will ever\n-     * request it. That way the MAX_STORED value should be reached only when an instance is know to be in the failed\n-     * state.\n-     */\n-\n-    private static final int MAX_STORED = 5000;\n-\n-    private int queued;\n-    private Queue<InstanceId> delivered = new LinkedList<>();\n-    private Map<InstanceId, PaxosInstance> instances = new HashMap<>();\n-    private final int maxInstancesToStore;\n-\n-    public PaxosInstanceStore()\n+  /*\n+   * This represents the number of delivered paxos instances to keep in memory - it is essentially the length\n+   * of the delivered queue and therefore the size of the instances map.\n+   * The use of this is to server Learn requests. While learning is the final phase of the Paxos algo, it is also\n+   * executed when an instance needs to catch up with events that happened in the cluster but it missed because it\n+   * was temporarily disconnected.\n+   * MAX_STORED therefore represents the maximum number of paxos instances a lagging member may be lagging behind\n+   * and be able to recover from. This number must be large enough to account for a few minutes of downtime (like\n+   * an extra long GC pause) during which intense broadcasting happens.\n+   * Assuming 2 paxos instances per second gives us 120 instances per minute or 1200 instances for 10 minutes of\n+   * downtime. We about 5x that here since instances are relatively small in size and we can spare the memory.\n+   */\n+  // TODO (quite challenging and interesting) Prune this queue aggressively.\n+  /*\n+   * This queue, as it stands now, will always remain at full capacity. However, if we could figure out that\n+   * all cluster members have learned a particular paxos instance then we can remove it since no one will ever\n+   * request it. That way the MAX_STORED value should be reached only when an instance is know to be in the failed\n+   * state.\n+   */\n+\n+  private static final int MAX_STORED = 5000;\n+\n+  private int queued;\n+  private Queue<InstanceId> delivered = new LinkedList<>();\n+  private Map<InstanceId, PaxosInstance> instances = new HashMap<>();\n+  private final int maxInstancesToStore;\n+\n+  public PaxosInstanceStore()\n+  {\n+    this(MAX_STORED);\n+  }\n+\n+  public PaxosInstanceStore(int maxInstancesToStore)\n+  {\n+    this.maxInstancesToStore = maxInstancesToStore;\n+  }\n+\n+  public PaxosInstance getPaxosInstance(InstanceId instanceId)\n+  {\n+    if (instanceId == null)\n     {\n-        this( MAX_STORED );\n+      throw new NullPointerException(\"InstanceId may not be null\");\n     }\n \n-    public PaxosInstanceStore( int maxInstancesToStore )\n-    {\n-        this.maxInstancesToStore = maxInstancesToStore;\n-    }\n+    return instances.computeIfAbsent(instanceId, i -> new PaxosInstance(this, i));\n+  }\n \n-    public PaxosInstance getPaxosInstance( InstanceId instanceId )\n-    {\n-        if ( instanceId == null )\n-        {\n-            throw new NullPointerException( \"InstanceId may not be null\" );\n-        }\n+  public void delivered(InstanceId instanceId)\n+  {\n+    queued++;\n+    delivered.offer(instanceId);\n \n-        return instances.computeIfAbsent( instanceId, i -> new PaxosInstance( this, i ) );\n+    if (queued > maxInstancesToStore)\n+    {\n+      InstanceId removeInstanceId = delivered.poll();\n+      instances.remove(removeInstanceId);\n+      queued--;\n     }\n-\n-    public void delivered( InstanceId instanceId )\n+  }\n+\n+  public void leave()\n+  {\n+    queued = 0;\n+    delivered.clear();\n+    instances.clear();\n+  }\n+\n+  public PaxosInstanceStore snapshot()\n+  {\n+    PaxosInstanceStore snapshotStore = new PaxosInstanceStore();\n+    snapshotStore.queued = queued;\n+    snapshotStore.delivered = new LinkedList<>(delivered);\n+    for (Map.Entry<InstanceId, PaxosInstance> instance : instances.entrySet())\n     {\n-        queued++;\n-        delivered.offer( instanceId );\n-\n-        if ( queued > maxInstancesToStore )\n-        {\n-            InstanceId removeInstanceId = delivered.poll();\n-            instances.remove( removeInstanceId );\n-            queued--;\n-        }\n+      snapshotStore.instances.put(instance.getKey(), instance.getValue().snapshot(snapshotStore));\n     }\n+    return snapshotStore;\n+  }\n \n-    public void leave()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        queued = 0;\n-        delivered.clear();\n-        instances.clear();\n+      return true;\n     }\n-\n-    public PaxosInstanceStore snapshot()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        PaxosInstanceStore snapshotStore = new PaxosInstanceStore();\n-        snapshotStore.queued = queued;\n-        snapshotStore.delivered = new LinkedList<>( delivered );\n-        for ( Map.Entry<InstanceId, PaxosInstance> instance : instances.entrySet() )\n-        {\n-            snapshotStore.instances.put( instance.getKey(), instance.getValue().snapshot(snapshotStore) );\n-        }\n-        return snapshotStore;\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals( Object o )\n+    PaxosInstanceStore that = (PaxosInstanceStore) o;\n+\n+    if (queued != that.queued)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        PaxosInstanceStore that = (PaxosInstanceStore) o;\n-\n-        if ( queued != that.queued )\n-        {\n-            return false;\n-        }\n-        if ( !delivered.equals( that.delivered ) )\n-        {\n-            return false;\n-        }\n-        return instances.equals( that.instances );\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (!delivered.equals(that.delivered))\n     {\n-        int result = queued;\n-        result = 31 * result + delivered.hashCode();\n-        result = 31 * result + instances.hashCode();\n-        return result;\n+      return false;\n     }\n+    return instances.equals(that.instances);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = queued;\n+    result = 31 * result + delivered.hashCode();\n+    result = 31 * result + instances.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 141
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1204/PaxosInstanceStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1204/PaxosInstanceStore.java\nindex 98c7b4ec0b7..6a15d85a7a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1204/PaxosInstanceStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1204/PaxosInstanceStore.java\n@@ -53,7 +53,7 @@ public class PaxosInstanceStore\n \n     private int queued;\n     private Queue<InstanceId> delivered = new LinkedList<>();\n-    private Map<InstanceId, PaxosInstance> instances = new HashMap<>();\n+    private Map<InstanceId,PaxosInstance> instances = new HashMap<>();\n     private final int maxInstancesToStore;\n \n     public PaxosInstanceStore()\n@@ -80,8 +80,7 @@ public class PaxosInstanceStore\n     {\n         queued++;\n         delivered.offer( instanceId );\n-\n-        if ( queued > maxInstancesToStore )\n+if ( queued> maxInstancesToStore )\n         {\n             InstanceId removeInstanceId = delivered.poll();\n             instances.remove( removeInstanceId );\n@@ -101,11 +100,12 @@ public class PaxosInstanceStore\n         PaxosInstanceStore snapshotStore = new PaxosInstanceStore();\n         snapshotStore.queued = queued;\n         snapshotStore.delivered = new LinkedList<>( delivered );\n-        for ( Map.Entry<InstanceId, PaxosInstance> instance : instances.entrySet() )\n+        for ( Map.Entry<InstanceId,PaxosInstance> instance : instances.entrySet() )\n         {\n             snapshotStore.instances.put( instance.getKey(), instance.getValue().snapshot(snapshotStore) );\n         }\n-        return snapshotStore;\n+\n+return snapshotStore;\n     }\n \n     @Override\n@@ -115,7 +115,8 @@ public class PaxosInstanceStore\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -126,11 +127,13 @@ public class PaxosInstanceStore\n         {\n             return false;\n         }\n-        if ( !delivered.equals( that.delivered ) )\n+\n+if ( !delivered.equals( that.delivered ) )\n         {\n             return false;\n         }\n-        return instances.equals( that.instances );\n+\n+return instances.equals( that.instances );\n     }\n \n     @Override\n@@ -141,4 +144,4 @@ public class PaxosInstanceStore\n         result = 31 * result + instances.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
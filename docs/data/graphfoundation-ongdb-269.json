{
    "project_name": "graphfoundation-ongdb",
    "error_id": "269",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/269/IOUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/269/IOUtils.java\nindex 9e32a61922d..8514a062482 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/269/IOUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/269/IOUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io;\n \n import java.io.IOException;\n@@ -29,150 +30,144 @@ import java.util.Collection;\n  */\n public final class IOUtils\n {\n-    private IOUtils()\n-    {\n-    }\n+  private IOUtils()\n+  {\n+  }\n \n-    /**\n-     * Closes given {@link Collection collection} of {@link AutoCloseable closeables}.\n-     *\n-     * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n-     * @throws IOException\n-     * @see #closeAll(AutoCloseable[])\n-     */\n-    public static <T extends AutoCloseable> void closeAll( Collection<T> closeables ) throws IOException\n-    {\n-        closeAll( closeables.toArray( new AutoCloseable[closeables.size()] ) );\n-    }\n+  /**\n+   * Closes given {@link Collection collection} of {@link AutoCloseable closeables}.\n+   *\n+   * @param closeables the closeables to close\n+   * @param <T>        the type of closeable\n+   * @throws IOException\n+   * @see #closeAll(AutoCloseable[])\n+   */\n+  public static <T extends AutoCloseable> void closeAll(Collection<T> closeables) throws IOException\n+  {\n+    closeAll(closeables.toArray(new AutoCloseable[closeables.size()]));\n+  }\n \n-    /**\n-     * Closes given {@link Collection collection} of {@link AutoCloseable closeables} ignoring all exceptions.\n-     *\n-     * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n-     * @see #closeAll(AutoCloseable[])\n-     */\n-    public static <T extends AutoCloseable> void closeAllSilently( Collection<T> closeables )\n+  /**\n+   * Closes given {@link Collection collection} of {@link AutoCloseable closeables} ignoring all exceptions.\n+   *\n+   * @param closeables the closeables to close\n+   * @param <T>        the type of closeable\n+   * @see #closeAll(AutoCloseable[])\n+   */\n+  public static <T extends AutoCloseable> void closeAllSilently(Collection<T> closeables)\n+  {\n+    try\n+    {\n+      closeAll(closeables);\n+    } catch (IOException ignored)\n     {\n-        try\n-        {\n-            closeAll( closeables );\n-        }\n-        catch ( IOException ignored )\n-        {\n-        }\n     }\n+  }\n+\n+  /**\n+   * Closes given array of {@link AutoCloseable closeables}. If any {@link AutoCloseable#close()} call throws\n+   * {@link IOException} than it will be rethrown to the caller after calling {@link AutoCloseable#close()}\n+   * on other given resources. If more than one {@link AutoCloseable#close()} throw than resulting exception will\n+   * have suppressed exceptions. See {@link Exception#addSuppressed(Throwable)}\n+   *\n+   * @param closeables the closeables to close\n+   * @param <T>        the type of closeable\n+   * @throws IOException\n+   */\n+  @SafeVarargs\n+  public static <T extends AutoCloseable> void closeAll(T... closeables) throws IOException\n+  {\n+    closeAll(IOException.class, closeables);\n+  }\n \n-    /**\n-     * Closes given array of {@link AutoCloseable closeables}. If any {@link AutoCloseable#close()} call throws\n-     * {@link IOException} than it will be rethrown to the caller after calling {@link AutoCloseable#close()}\n-     * on other given resources. If more than one {@link AutoCloseable#close()} throw than resulting exception will\n-     * have suppressed exceptions. See {@link Exception#addSuppressed(Throwable)}\n-     *\n-     * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n-     * @throws IOException\n-     */\n-    @SafeVarargs\n-    public static <T extends AutoCloseable> void closeAll( T... closeables ) throws IOException\n+  /**\n+   * Closes given array of {@link AutoCloseable closeables} ignoring all exceptions.\n+   *\n+   * @param closeables the closeables to close\n+   * @param <T>        the type of closeable\n+   */\n+  @SafeVarargs\n+  public static <T extends AutoCloseable> void closeAllSilently(T... closeables)\n+  {\n+    try\n+    {\n+      closeAll(closeables);\n+    } catch (IOException ignored)\n     {\n-        closeAll( IOException.class, closeables );\n     }\n+  }\n \n-    /**\n-     * Closes given array of {@link AutoCloseable closeables} ignoring all exceptions.\n-     *\n-     * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n-     */\n-    @SafeVarargs\n-    public static <T extends AutoCloseable> void closeAllSilently( T... closeables )\n+  /**\n+   * Close all given closeables and if something goes wrong throw exception of the given type.\n+   * Exception class should have a public constructor that accepts {@link String} and {@link Throwable} like\n+   * {@link RuntimeException#RuntimeException(String, Throwable)}\n+   *\n+   * @param throwableClass exception type to throw in case of failure\n+   * @param closeables     the closeables to close\n+   * @param <T>            the type of closeable\n+   * @param <E>            the type of exception\n+   * @throws E when any {@link AutoCloseable#close()} throws exception\n+   */\n+  @SafeVarargs\n+  public static <T extends AutoCloseable, E extends Throwable> void closeAll(Class<E> throwableClass,\n+                                                                             T... closeables) throws E\n+  {\n+    Throwable closeThrowable = null;\n+    for (T closeable : closeables)\n     {\n+      if (closeable != null)\n+      {\n         try\n         {\n-            closeAll( closeables );\n-        }\n-        catch ( IOException ignored )\n+          closeable.close();\n+        } catch (Throwable t)\n         {\n+          if (closeThrowable == null)\n+          {\n+            closeThrowable = t;\n+          } else\n+          {\n+            closeThrowable.addSuppressed(t);\n+          }\n         }\n+      }\n     }\n-\n-    /**\n-     * Close all given closeables and if something goes wrong throw exception of the given type.\n-     * Exception class should have a public constructor that accepts {@link String} and {@link Throwable} like\n-     * {@link RuntimeException#RuntimeException(String, Throwable)}\n-     *\n-     * @param throwableClass exception type to throw in case of failure\n-     * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n-     * @param <E> the type of exception\n-     * @throws E when any {@link AutoCloseable#close()} throws exception\n-     */\n-    @SafeVarargs\n-    public static <T extends AutoCloseable, E extends Throwable> void closeAll( Class<E> throwableClass,\n-            T... closeables ) throws E\n+    if (closeThrowable != null)\n     {\n-        Throwable closeThrowable = null;\n-        for ( T closeable : closeables )\n-        {\n-            if ( closeable != null )\n-            {\n-                try\n-                {\n-                    closeable.close();\n-                }\n-                catch ( Throwable t )\n-                {\n-                    if ( closeThrowable == null )\n-                    {\n-                        closeThrowable = t;\n-                    }\n-                    else\n-                    {\n-                        closeThrowable.addSuppressed( t );\n-                    }\n-                }\n-            }\n-        }\n-        if ( closeThrowable != null )\n-        {\n-            throw newThrowable( throwableClass, \"Exception closing multiple resources\", closeThrowable );\n-        }\n+      throw newThrowable(throwableClass, \"Exception closing multiple resources\", closeThrowable);\n     }\n+  }\n \n-    /**\n-     * Close all the provided {@link AutoCloseable closeables}, chaining exceptions, if any, into a single {@link UncheckedIOException}.\n-     *\n-     * @param closeables to call close on.\n-     * @param <T> the type of closeable.\n-     * @throws UncheckedIOException if any exception is thrown from any of the {@code closeables}.\n-     */\n-    public static <T extends AutoCloseable> void closeAllUnchecked( Collection<T> closeables ) throws UncheckedIOException\n+  /**\n+   * Close all the provided {@link AutoCloseable closeables}, chaining exceptions, if any, into a single {@link UncheckedIOException}.\n+   *\n+   * @param closeables to call close on.\n+   * @param <T>        the type of closeable.\n+   * @throws UncheckedIOException if any exception is thrown from any of the {@code closeables}.\n+   */\n+  public static <T extends AutoCloseable> void closeAllUnchecked(Collection<T> closeables) throws UncheckedIOException\n+  {\n+    try\n     {\n-        try\n-        {\n-            closeAll( closeables );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      closeAll(closeables);\n+    } catch (IOException e)\n+    {\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    private static <E extends Throwable> E newThrowable( Class<E> throwableClass, String message, Throwable cause )\n+  private static <E extends Throwable> E newThrowable(Class<E> throwableClass, String message, Throwable cause)\n+  {\n+    try\n     {\n-        try\n-        {\n-            Constructor<E> constructor = throwableClass.getConstructor( String.class, Throwable.class );\n-            return constructor.newInstance( message, cause );\n-        }\n-        catch ( Throwable t )\n-        {\n-            RuntimeException runtimeException = new RuntimeException(\n-                    \"Unable to create exception to throw. Original message: \" + message, t );\n-            runtimeException.addSuppressed( cause );\n-            throw runtimeException;\n-        }\n+      Constructor<E> constructor = throwableClass.getConstructor(String.class, Throwable.class);\n+      return constructor.newInstance(message, cause);\n+    } catch (Throwable t)\n+    {\n+      RuntimeException runtimeException = new RuntimeException(\n+          \"Unable to create exception to throw. Original message: \" + message, t);\n+      runtimeException.addSuppressed(cause);\n+      throw runtimeException;\n     }\n+  }\n }\n",
            "diff_size": 175
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/269/IOUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/269/IOUtils.java\nindex 9e32a61922d..07a6ffa985f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/269/IOUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/269/IOUtils.java\n@@ -112,7 +112,7 @@ public final class IOUtils\n     @SafeVarargs\n     public static <T extends AutoCloseable, E extends Throwable> void closeAll( Class<E> throwableClass,\n             T... closeables ) throws E\n-    {\n+{\n         Throwable closeThrowable = null;\n         for ( T closeable : closeables )\n         {\n@@ -169,10 +169,9 @@ public final class IOUtils\n         }\n         catch ( Throwable t )\n         {\n-            RuntimeException runtimeException = new RuntimeException(\n-                    \"Unable to create exception to throw. Original message: \" + message, t );\n-            runtimeException.addSuppressed( cause );\n+            RuntimeException runtimeException = new RuntimeException( \"Unable to create exception to throw. Original message: \" + message, t );\n+runtimeException.addSuppressed( cause );\n             throw runtimeException;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2792",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2792/ReadOnlyFulltext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2792/ReadOnlyFulltext.java\nindex ee88af2c62f..eea35b31610 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2792/ReadOnlyFulltext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2792/ReadOnlyFulltext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import java.io.IOException;\n@@ -24,28 +25,26 @@ import java.util.Collection;\n \n public interface ReadOnlyFulltext extends AutoCloseable\n {\n-    /**\n-     * Searches the fulltext index for any exact match of any of the given terms against any token in any of the indexed properties.\n-     *\n-     *\n-     * @param terms The terms to query for.\n-     * @param matchAll If true, only resluts that match all the given terms will be returned\n-     * @return An iterator over the matching entityIDs, ordered by lucene scoring of the match.\n-     */\n-    ScoreEntityIterator query( Collection<String> terms, boolean matchAll );\n+  /**\n+   * Searches the fulltext index for any exact match of any of the given terms against any token in any of the indexed properties.\n+   *\n+   * @param terms    The terms to query for.\n+   * @param matchAll If true, only resluts that match all the given terms will be returned\n+   * @return An iterator over the matching entityIDs, ordered by lucene scoring of the match.\n+   */\n+  ScoreEntityIterator query(Collection<String> terms, boolean matchAll);\n \n-    /**\n-     * Searches the fulltext index for any fuzzy match of any of the given terms against any token in any of the indexed properties.\n-     *\n-     *\n-     * @param terms The terms to query for.\n-     * @param matchAll If true, only resluts that match all the given terms will be returned\n-     * @return An iterator over the matching entityIDs, ordered by lucene scoring of the match.\n-     */\n-    ScoreEntityIterator fuzzyQuery( Collection<String> terms, boolean matchAll );\n+  /**\n+   * Searches the fulltext index for any fuzzy match of any of the given terms against any token in any of the indexed properties.\n+   *\n+   * @param terms    The terms to query for.\n+   * @param matchAll If true, only resluts that match all the given terms will be returned\n+   * @return An iterator over the matching entityIDs, ordered by lucene scoring of the match.\n+   */\n+  ScoreEntityIterator fuzzyQuery(Collection<String> terms, boolean matchAll);\n \n-    @Override\n-    void close();\n+  @Override\n+  void close();\n \n-    FulltextIndexConfiguration getConfigurationDocument() throws IOException;\n+  FulltextIndexConfiguration getConfigurationDocument() throws IOException;\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2792/ReadOnlyFulltext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2792/ReadOnlyFulltext.java\nindex ee88af2c62f..bf12875987a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2792/ReadOnlyFulltext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2792/ReadOnlyFulltext.java\n@@ -48,4 +48,4 @@ public interface ReadOnlyFulltext extends AutoCloseable\n     void close();\n \n     FulltextIndexConfiguration getConfigurationDocument() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 404).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "49",
                    "column": "80",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2792/ReadOnlyFulltext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2792/ReadOnlyFulltext.java\nindex ee88af2c62f..1cb4750d0ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2792/ReadOnlyFulltext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2792/ReadOnlyFulltext.java\n@@ -32,7 +32,8 @@ public interface ReadOnlyFulltext extends AutoCloseable\n      * @param matchAll If true, only resluts that match all the given terms will be returned\n      * @return An iterator over the matching entityIDs, ordered by lucene scoring of the match.\n      */\n-    ScoreEntityIterator query( Collection<String> terms, boolean matchAll );\n+    ScoreEntityIterator query( Collection<String> terms, boolean matchAll )\n+    ;\n \n     /**\n      * Searches the fulltext index for any fuzzy match of any of the given terms against any token in any of the indexed properties.\n@@ -41,11 +42,9 @@ public interface ReadOnlyFulltext extends AutoCloseable\n      * @param terms The terms to query for.\n      * @param matchAll If true, only resluts that match all the given terms will be returned\n      * @return An iterator over the matching entityIDs, ordered by lucene scoring of the match.\n-     */\n-    ScoreEntityIterator fuzzyQuery( Collection<String> terms, boolean matchAll );\n-\n-    @Override\n-    void close();\n+     */ ScoreEntityIterator fuzzyQuery( Collection<String> terms, boolean matchAll )\n+                                                                                                                                                                                                                                                                                                                                                                                                                   ;\n \n-    FulltextIndexConfiguration getConfigurationDocument() throws IOException;\n-}\n+    @Override void close()\n+    ; FulltextIndexConfiguration getConfigurationDocument() throws IOException ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
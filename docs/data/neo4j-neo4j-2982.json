{
    "project_name": "neo4j-neo4j",
    "error_id": "2982",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2982/SchemaReadCoreSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2982/SchemaReadCoreSnapshot.java\nindex ae67a9f8c04..683ba7f463f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2982/SchemaReadCoreSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2982/SchemaReadCoreSnapshot.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import java.util.Iterator;\n@@ -37,7 +38,7 @@ class SchemaReadCoreSnapshot implements SchemaReadCore\n     private final KernelTransactionImplementation ktx;\n     private final AllStoreHolder stores;\n \n-    SchemaReadCoreSnapshot( StorageSchemaReader snapshot, KernelTransactionImplementation ktx, AllStoreHolder stores )\n+    SchemaReadCoreSnapshot(StorageSchemaReader snapshot, KernelTransactionImplementation ktx, AllStoreHolder stores)\n     {\n         this.snapshot = snapshot;\n         this.ktx = ktx;\n@@ -45,86 +46,86 @@ class SchemaReadCoreSnapshot implements SchemaReadCore\n     }\n \n     @Override\n-    public IndexDescriptor indexGetForName( String name )\n+    public IndexDescriptor indexGetForName(String name)\n     {\n-        return stores.indexGetForName( snapshot, name );\n+        return stores.indexGetForName(snapshot, name);\n     }\n \n     @Override\n-    public ConstraintDescriptor constraintGetForName( String name )\n+    public ConstraintDescriptor constraintGetForName(String name)\n     {\n-        return stores.constraintGetForName( snapshot, name );\n+        return stores.constraintGetForName(snapshot, name);\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> index( SchemaDescriptor schema )\n+    public Iterator<IndexDescriptor> index(SchemaDescriptor schema)\n     {\n         ktx.assertOpen();\n-        return stores.indexGetForSchema( snapshot, schema );\n+        return stores.indexGetForSchema(snapshot, schema);\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> indexesGetForLabel( int labelId )\n+    public Iterator<IndexDescriptor> indexesGetForLabel(int labelId)\n     {\n         ktx.assertOpen();\n-        return stores.indexesGetForLabel( snapshot, labelId );\n+        return stores.indexesGetForLabel(snapshot, labelId);\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> indexesGetForRelationshipType( int relationshipType )\n+    public Iterator<IndexDescriptor> indexesGetForRelationshipType(int relationshipType)\n     {\n         ktx.assertOpen();\n-        return stores.indexesGetForRelationshipType( snapshot, relationshipType );\n+        return stores.indexesGetForRelationshipType(snapshot, relationshipType);\n     }\n \n     @Override\n     public Iterator<IndexDescriptor> indexesGetAll()\n     {\n         ktx.assertOpen();\n-        return stores.indexesGetAll( snapshot );\n+        return stores.indexesGetAll(snapshot);\n     }\n \n     @Override\n-    public InternalIndexState indexGetState( IndexDescriptor index ) throws IndexNotFoundKernelException\n+    public InternalIndexState indexGetState(IndexDescriptor index) throws IndexNotFoundKernelException\n     {\n-        AllStoreHolder.assertValidIndex( index );\n+        AllStoreHolder.assertValidIndex(index);\n         ktx.assertOpen();\n-        return stores.indexGetStateLocked( index );\n+        return stores.indexGetStateLocked(index);\n     }\n \n     @Override\n-    public PopulationProgress indexGetPopulationProgress( IndexDescriptor index ) throws IndexNotFoundKernelException\n+    public PopulationProgress indexGetPopulationProgress(IndexDescriptor index) throws IndexNotFoundKernelException\n     {\n-        AllStoreHolder.assertValidIndex( index );\n+        AllStoreHolder.assertValidIndex(index);\n         ktx.assertOpen();\n-        return stores.indexGetPopulationProgressLocked( index );\n+        return stores.indexGetPopulationProgressLocked(index);\n     }\n \n     @Override\n-    public String indexGetFailure( IndexDescriptor index ) throws IndexNotFoundKernelException\n+    public String indexGetFailure(IndexDescriptor index) throws IndexNotFoundKernelException\n     {\n-        AllStoreHolder.assertValidIndex( index );\n-        return stores.indexGetFailure( index );\n+        AllStoreHolder.assertValidIndex(index);\n+        return stores.indexGetFailure(index);\n     }\n \n     @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForLabel( int labelId )\n+    public Iterator<ConstraintDescriptor> constraintsGetForLabel(int labelId)\n     {\n         ktx.assertOpen();\n-        return stores.constraintsGetForLabel( snapshot, labelId );\n+        return stores.constraintsGetForLabel(snapshot, labelId);\n     }\n \n     @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType( int typeId )\n+    public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType(int typeId)\n     {\n         ktx.assertOpen();\n-        return stores.constraintsGetForRelationshipType( snapshot, typeId );\n+        return stores.constraintsGetForRelationshipType(snapshot, typeId);\n     }\n \n     @Override\n     public Iterator<ConstraintDescriptor> constraintsGetAll()\n     {\n         ktx.assertOpen();\n-        return stores.constraintsGetAll( snapshot );\n+        return stores.constraintsGetAll(snapshot);\n     }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
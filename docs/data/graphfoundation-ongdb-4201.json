{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4201",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4201/CoreLife.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4201/CoreLife.java\nindex 070909c568b..2d0f0bc8ecc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4201/CoreLife.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4201/CoreLife.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state;\n \n import java.util.Optional;\n@@ -35,81 +36,80 @@ import org.neo4j.scheduler.JobScheduler;\n \n public class CoreLife extends SafeLifecycle\n {\n-    private final RaftMachine raftMachine;\n-    private final LocalDatabase localDatabase;\n-    private final ClusterBinder clusterBinder;\n-\n-    private final CommandApplicationProcess applicationProcess;\n-    private final CoreStateMachines coreStateMachines;\n-    private final LifecycleMessageHandler<?> raftMessageHandler;\n-    private final CoreSnapshotService snapshotService;\n-    private final CoreStateDownloaderService downloadService;\n-\n-    public CoreLife( RaftMachine raftMachine, LocalDatabase localDatabase, ClusterBinder clusterBinder, CommandApplicationProcess commandApplicationProcess,\n-            CoreStateMachines coreStateMachines, LifecycleMessageHandler<?> raftMessageHandler, CoreSnapshotService snapshotService,\n-            CoreStateDownloaderService downloadService )\n-    {\n-        this.raftMachine = raftMachine;\n-        this.localDatabase = localDatabase;\n-        this.clusterBinder = clusterBinder;\n-        this.applicationProcess = commandApplicationProcess;\n-        this.coreStateMachines = coreStateMachines;\n-        this.raftMessageHandler = raftMessageHandler;\n-        this.snapshotService = snapshotService;\n-        this.downloadService = downloadService;\n-    }\n+  private final RaftMachine raftMachine;\n+  private final LocalDatabase localDatabase;\n+  private final ClusterBinder clusterBinder;\n \n-    @Override\n-    public void init0() throws Throwable\n-    {\n-        localDatabase.init();\n-    }\n+  private final CommandApplicationProcess applicationProcess;\n+  private final CoreStateMachines coreStateMachines;\n+  private final LifecycleMessageHandler<?> raftMessageHandler;\n+  private final CoreSnapshotService snapshotService;\n+  private final CoreStateDownloaderService downloadService;\n \n-    @Override\n-    public void start0() throws Throwable\n-    {\n-        BoundState boundState = clusterBinder.bindToCluster();\n-        raftMessageHandler.start( boundState.clusterId() );\n+  public CoreLife(RaftMachine raftMachine, LocalDatabase localDatabase, ClusterBinder clusterBinder, CommandApplicationProcess commandApplicationProcess,\n+                  CoreStateMachines coreStateMachines, LifecycleMessageHandler<?> raftMessageHandler, CoreSnapshotService snapshotService,\n+                  CoreStateDownloaderService downloadService)\n+  {\n+    this.raftMachine = raftMachine;\n+    this.localDatabase = localDatabase;\n+    this.clusterBinder = clusterBinder;\n+    this.applicationProcess = commandApplicationProcess;\n+    this.coreStateMachines = coreStateMachines;\n+    this.raftMessageHandler = raftMessageHandler;\n+    this.snapshotService = snapshotService;\n+    this.downloadService = downloadService;\n+  }\n \n-        boolean startedByDownloader = false;\n-        if ( boundState.snapshot().isPresent() )\n-        {\n-            // this means that we bootstrapped the cluster\n-            CoreSnapshot snapshot = boundState.snapshot().get();\n-            snapshotService.installSnapshot( snapshot );\n-        }\n-        else\n-        {\n-            snapshotService.awaitState();\n-            Optional<JobScheduler.JobHandle> downloadJob = downloadService.downloadJob();\n-            if ( downloadJob.isPresent() )\n-            {\n-                downloadJob.get().waitTermination();\n-                startedByDownloader = true;\n-            }\n-        }\n+  @Override\n+  public void init0() throws Throwable\n+  {\n+    localDatabase.init();\n+  }\n \n-        if ( !startedByDownloader )\n-        {\n-            localDatabase.start();\n-            coreStateMachines.installCommitProcess( localDatabase.getCommitProcess() );\n-        }\n-        applicationProcess.start();\n-        raftMachine.postRecoveryActions();\n-    }\n+  @Override\n+  public void start0() throws Throwable\n+  {\n+    BoundState boundState = clusterBinder.bindToCluster();\n+    raftMessageHandler.start(boundState.clusterId());\n \n-    @Override\n-    public void stop0() throws Throwable\n+    boolean startedByDownloader = false;\n+    if (boundState.snapshot().isPresent())\n     {\n-        raftMachine.stopTimers();\n-        raftMessageHandler.stop();\n-        applicationProcess.stop();\n-        localDatabase.stop();\n+      // this means that we bootstrapped the cluster\n+      CoreSnapshot snapshot = boundState.snapshot().get();\n+      snapshotService.installSnapshot(snapshot);\n+    } else\n+    {\n+      snapshotService.awaitState();\n+      Optional<JobScheduler.JobHandle> downloadJob = downloadService.downloadJob();\n+      if (downloadJob.isPresent())\n+      {\n+        downloadJob.get().waitTermination();\n+        startedByDownloader = true;\n+      }\n     }\n \n-    @Override\n-    public void shutdown0() throws Throwable\n+    if (!startedByDownloader)\n     {\n-        localDatabase.shutdown();\n+      localDatabase.start();\n+      coreStateMachines.installCommitProcess(localDatabase.getCommitProcess());\n     }\n+    applicationProcess.start();\n+    raftMachine.postRecoveryActions();\n+  }\n+\n+  @Override\n+  public void stop0() throws Throwable\n+  {\n+    raftMachine.stopTimers();\n+    raftMessageHandler.stop();\n+    applicationProcess.stop();\n+    localDatabase.stop();\n+  }\n+\n+  @Override\n+  public void shutdown0() throws Throwable\n+  {\n+    localDatabase.shutdown();\n+  }\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4201/CoreLife.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4201/CoreLife.java\nindex 070909c568b..ef220e0b13b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4201/CoreLife.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4201/CoreLife.java\n@@ -112,4 +112,4 @@ public class CoreLife extends SafeLifecycle\n     {\n         localDatabase.shutdown();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "145",
    "information": {
        "errors": [
            {
                "line": "96",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    /**ExtensionAssignOperation's nested element missing*/\n    public CompilationMessage errUndeclaredExtensionAssignOperation(){\n    \treturn this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n    }\n\n    /**Draft extensibleAssign is not supported.*/",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/145/AssignGeneratorMessages.java\nindex b1f61b85f9c..f4687bbc054 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/145/AssignGeneratorMessages.java\n@@ -93,8 +93,8 @@ public class AssignGeneratorMessages extends CompilationMessageBundle {\n \n     /**ExtensionAssignOperation's nested element missing*/\n     public CompilationMessage errUndeclaredExtensionAssignOperation(){\n-    \treturn this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n-    }\n+    return this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n+}\n \n     /**Draft extensibleAssign is not supported.*/\n     public CompilationMessage errExtensibleAssignNotSupported(){\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/145/AssignGeneratorMessages.java\nindex b1f61b85f9c..0f5e9637316 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/145/AssignGeneratorMessages.java\n@@ -26,79 +26,99 @@ import javax.xml.namespace.QName;\n \n public class AssignGeneratorMessages extends CompilationMessageBundle {\n \n-    /** Copy missing from-spec. */\n-    public CompilationMessage errMissingFromSpec() {\n-        return this.formatCompilationMessage(\"Copy missing from-spec.\");\n-    }\n-\n-    /** Copy to message variable {0} requires a message for the r-value. */\n-    public CompilationMessage errCopyToMessageFromNonMessage(String lval) {\n-        return this.formatCompilationMessage(\n-            \"Copy to message variable {0} requires a message for the r-value.\", lval);\n-    }\n-\n-    /** Copy from message variable {0} requires a message for the l-value. */\n-    public CompilationMessage errCopyFromMessageToNonMessage(String rval) {\n-        return this.formatCompilationMessage(\n-            \"Copy from message variable {0} requires a message for the l-value.\", rval);\n-    }\n-\n-    /**\n-     * Copy to message variable {0} of type {1} from message {2} of type {3} is\n-     * not permitted (the message types do not match).\n-     */\n-    public CompilationMessage errMismatchedMessageAssignment(String lvar, QName tlvalue,\n-                                                             String rval, QName trvalue) {\n-        return this.formatCompilationMessage(\n-            \"Copy to message variable {0} of type {1} from message {2}\" +\n-            \" of type {3} is not permitted (the message types do not match).\", lvar,\n-            tlvalue, rval, trvalue);\n-    }\n-\n-    /** Copy to partner link {0} requires the partnerRole to be defined on partner link. */\n-    public CompilationMessage errCopyToUndeclaredPartnerRole(String lval) {\n-        return this.formatCompilationMessage(\n-            \"Copy to partner link {0} requires the partnerRole to be defined on partner link.\", lval);\n-    }\n-\n-    /**\n-     * Copy from partner link {0} with enpoint reference {1} requires\n-     * the corresponding role to be defined on partner link.\n-     */\n-    public CompilationMessage errCopyFromUndeclaredPartnerRole(String rval, String epr) {\n-        return this.formatCompilationMessage(\n-            \"Copy from partner link {0} with enpoint reference {1} requires\" +\n-            \" the corresponding role to be defined on partner link.\", rval, epr);\n-    }\n-\n-    /** Copy missing to-spec. */\n-    public CompilationMessage errMissingToSpec() {\n-        return this.formatCompilationMessage(\"Copy missing to-spec.\");\n-    }\n-\n-    /** From-spec format is unrecognized. */\n-    public CompilationMessage errUnkownFromSpec() {\n-        return this.formatCompilationMessage(\"From-spec format is unrecognized.\");\n-    }\n-\n-    /** To-spec format is unrecognized. */\n-    public CompilationMessage errUnknownToSpec() {\n-        return this.formatCompilationMessage(\"To-spec format is unrecognized.\");\n-    }\n-\n-    /**ExtensionAssignOperation's nested element missing*/\n-    public CompilationMessage errMissingExtensionAssignOperationElement(){\n-    \treturn this.formatCompilationMessage(\"Extensibility element in <extensionAssignOperation> is missing.\");\n-    }\n-\n-    /**ExtensionAssignOperation's nested element missing*/\n-    public CompilationMessage errUndeclaredExtensionAssignOperation(){\n-    \treturn this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n-    }\n-\n-    /**Draft extensibleAssign is not supported.*/\n-    public CompilationMessage errExtensibleAssignNotSupported(){\n-    \treturn this.formatCompilationMessage(\"ExtensibleAssign is not supported, please upgrade to BPEL 2.0 final.\");\n-    }\n+  /**\n+   * Copy missing from-spec.\n+   */\n+  public CompilationMessage errMissingFromSpec() {\n+    return this.formatCompilationMessage(\"Copy missing from-spec.\");\n+  }\n+\n+  /**\n+   * Copy to message variable {0} requires a message for the r-value.\n+   */\n+  public CompilationMessage errCopyToMessageFromNonMessage(String lval) {\n+    return this.formatCompilationMessage(\n+      \"Copy to message variable {0} requires a message for the r-value.\", lval);\n+  }\n+\n+  /**\n+   * Copy from message variable {0} requires a message for the l-value.\n+   */\n+  public CompilationMessage errCopyFromMessageToNonMessage(String rval) {\n+    return this.formatCompilationMessage(\n+      \"Copy from message variable {0} requires a message for the l-value.\", rval);\n+  }\n+\n+  /**\n+   * Copy to message variable {0} of type {1} from message {2} of type {3} is\n+   * not permitted (the message types do not match).\n+   */\n+  public CompilationMessage errMismatchedMessageAssignment(String lvar, QName tlvalue,\n+                                                           String rval, QName trvalue) {\n+    return this.formatCompilationMessage(\n+      \"Copy to message variable {0} of type {1} from message {2}\" +\n+        \" of type {3} is not permitted (the message types do not match).\", lvar,\n+      tlvalue, rval, trvalue);\n+  }\n+\n+  /**\n+   * Copy to partner link {0} requires the partnerRole to be defined on partner link.\n+   */\n+  public CompilationMessage errCopyToUndeclaredPartnerRole(String lval) {\n+    return this.formatCompilationMessage(\n+      \"Copy to partner link {0} requires the partnerRole to be defined on partner link.\", lval);\n+  }\n+\n+  /**\n+   * Copy from partner link {0} with enpoint reference {1} requires\n+   * the corresponding role to be defined on partner link.\n+   */\n+  public CompilationMessage errCopyFromUndeclaredPartnerRole(String rval, String epr) {\n+    return this.formatCompilationMessage(\n+      \"Copy from partner link {0} with enpoint reference {1} requires\" +\n+        \" the corresponding role to be defined on partner link.\", rval, epr);\n+  }\n+\n+  /**\n+   * Copy missing to-spec.\n+   */\n+  public CompilationMessage errMissingToSpec() {\n+    return this.formatCompilationMessage(\"Copy missing to-spec.\");\n+  }\n+\n+  /**\n+   * From-spec format is unrecognized.\n+   */\n+  public CompilationMessage errUnkownFromSpec() {\n+    return this.formatCompilationMessage(\"From-spec format is unrecognized.\");\n+  }\n+\n+  /**\n+   * To-spec format is unrecognized.\n+   */\n+  public CompilationMessage errUnknownToSpec() {\n+    return this.formatCompilationMessage(\"To-spec format is unrecognized.\");\n+  }\n+\n+  /**\n+   * ExtensionAssignOperation's nested element missing\n+   */\n+  public CompilationMessage errMissingExtensionAssignOperationElement() {\n+    return this.formatCompilationMessage(\"Extensibility element in <extensionAssignOperation> is missing.\");\n+  }\n+\n+  /**\n+   * ExtensionAssignOperation's nested element missing\n+   */\n+  public CompilationMessage errUndeclaredExtensionAssignOperation() {\n+    return this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n+  }\n+\n+  /**\n+   * Draft extensibleAssign is not supported.\n+   */\n+  public CompilationMessage errExtensibleAssignNotSupported() {\n+    return this.formatCompilationMessage(\"ExtensibleAssign is not supported, please upgrade to BPEL 2.0 final.\");\n+  }\n \n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/145/AssignGeneratorMessages.java\nindex b1f61b85f9c..b4cee2967b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/145/AssignGeneratorMessages.java\n@@ -47,8 +47,7 @@ public class AssignGeneratorMessages extends CompilationMessageBundle {\n      * Copy to message variable {0} of type {1} from message {2} of type {3} is\n      * not permitted (the message types do not match).\n      */\n-    public CompilationMessage errMismatchedMessageAssignment(String lvar, QName tlvalue,\n-                                                             String rval, QName trvalue) {\n+    public CompilationMessage errMismatchedMessageAssignment(String lvar, QName tlvalue, String rval, QName trvalue) {\n         return this.formatCompilationMessage(\n             \"Copy to message variable {0} of type {1} from message {2}\" +\n             \" of type {3} is not permitted (the message types do not match).\", lvar,\n@@ -101,4 +100,4 @@ public class AssignGeneratorMessages extends CompilationMessageBundle {\n     \treturn this.formatCompilationMessage(\"ExtensibleAssign is not supported, please upgrade to BPEL 2.0 final.\");\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/145/AssignGeneratorMessages.java\nindex b1f61b85f9c..4786738de32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/145/AssignGeneratorMessages.java\n@@ -93,7 +93,7 @@ public class AssignGeneratorMessages extends CompilationMessageBundle {\n \n     /**ExtensionAssignOperation's nested element missing*/\n     public CompilationMessage errUndeclaredExtensionAssignOperation(){\n-    \treturn this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n+\t\t\t\t\treturn this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n     }\n \n     /**Draft extensibleAssign is not supported.*/\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/145/AssignGeneratorMessages.java\nindex b1f61b85f9c..f4687bbc054 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/145/AssignGeneratorMessages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/145/AssignGeneratorMessages.java\n@@ -93,8 +93,8 @@ public class AssignGeneratorMessages extends CompilationMessageBundle {\n \n     /**ExtensionAssignOperation's nested element missing*/\n     public CompilationMessage errUndeclaredExtensionAssignOperation(){\n-    \treturn this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n-    }\n+    return this.formatCompilationMessage(\"Extension namespace of <extensionAssignOperation> has not been declared.\");\n+}\n \n     /**Draft extensibleAssign is not supported.*/\n     public CompilationMessage errExtensibleAssignNotSupported(){\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
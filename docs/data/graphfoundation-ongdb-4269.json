{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4269",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "322",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4269/HighAvailabilityMemberState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4269/HighAvailabilityMemberState.java\nindex 195baa634f2..b360e2251bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4269/HighAvailabilityMemberState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4269/HighAvailabilityMemberState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster;\n \n import java.net.URI;\n@@ -26,9 +27,9 @@ import org.neo4j.cluster.InstanceId;\n /**\n  * This represents the different states that a cluster member\n  * can have internally.\n- *\n+ * <p>\n  * Since transitioning to master or slave can take significant time those states are explicitly modeled.\n- *\n+ * <p>\n  * Most common transitions:\n  * PENDING -> TO_MASTER -> MASTER\n  * PENDING -> TO_SLAVE -> SLAVE\n@@ -36,392 +37,391 @@ import org.neo4j.cluster.InstanceId;\n  */\n public enum HighAvailabilityMemberState\n {\n-    /**\n-     * This state is the initial state, and is also the state used when leaving the cluster.\n-     * <p>\n-     * Here we are waiting for events that transitions this member either to becoming a master or slave.\n-     */\n-    PENDING\n-            {\n-                @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n-                    assert context.getAvailableHaMaster() == null;\n-                    if ( masterId.equals( context.getMyId() ) && !context.isSlaveOnly() )\n-                    {\n-                        return TO_MASTER;\n-                    }\n-                    return PENDING;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId, URI masterHaURI )\n-                {\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        HighAvailabilityMemberState result = ILLEGAL;\n-                        result.setErrorMessage( \"Received a MasterIsAvailable event for my InstanceId while in\" +\n-                                \" PENDING state\" );\n-                        return result;\n-                    }\n-                    return TO_SLAVE;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n-                                                                     URI slaveUri )\n-                {\n-                    if ( slaveId.equals( context.getMyId() ) )\n-                    {\n-                        HighAvailabilityMemberState result = ILLEGAL;\n-                        result.setErrorMessage( \"Cannot go from pending to slave\" );\n-                        return result;\n-                    }\n-                    return this;\n-                }\n-\n-                @Override\n-                public boolean isEligibleForElection()\n-                {\n-                    return true;\n-                }\n-\n-                @Override\n-                public boolean isAccessAllowed()\n-                {\n-                    return false;\n-                }\n-            },\n-\n-    /**\n-     * Member now knows that a master is available, and is transitioning itself to become a slave to that master.\n-     * It is performing the transition process here, and so is not yet available as a slave.\n-     */\n-    TO_SLAVE\n-            {\n-                @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n-                    if ( masterId.equals( context.getElectedMasterId() ) )\n-                    {\n-                        // A member joined and we all got the same event\n-                        return this;\n-                    }\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        return TO_MASTER;\n-                    }\n-                    // This may mean the master changed from the time we transitioned here\n-                    return PENDING;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n-                                                                      URI masterHaURI )\n-                {\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        HighAvailabilityMemberState result = ILLEGAL;\n-                        result.setErrorMessage( \"i (\" + context.getMyId() + \") am trying to become a slave but \" +\n-                                \"someone said i am available as master\" );\n-                        return result;\n-                    }\n-                    if ( masterId.equals( context.getElectedMasterId() ) )\n-                    {\n-                        // A member joined and we all got the same event\n-                        return this;\n-                    }\n-                    HighAvailabilityMemberState result = ILLEGAL;\n-                    result.setErrorMessage( \"my (\" + context.getMyId() + \") current master is \" + context\n-                            .getAvailableHaMaster() + \" (elected as \" + context.getElectedMasterId() + \" but i got a \" +\n-                            \"masterIsAvailable event for \" + masterHaURI  );\n-                    return result;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n-                                                                     URI slaveUri )\n-                {\n-                    if ( slaveId.equals( context.getMyId() ) )\n-                    {\n-                        return SLAVE;\n-                    }\n-                    return this;\n-                }\n-\n-                @Override\n-                public boolean isEligibleForElection()\n-                {\n-                    return false;\n-                }\n-\n-                @Override\n-                public boolean isAccessAllowed()\n-                {\n-                    return false;\n-                }\n-            },\n-\n-    /**\n-     * The cluster member knows that it has been elected as master, and starts the transitioning process.\n-     */\n-    TO_MASTER\n-            {\n-                @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n-                    assert context.getAvailableHaMaster() == null;\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        return this;\n-                    }\n-                    return PENDING; // everything still goes\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n-                                                                      URI masterHaURI )\n-                {\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        return MASTER;\n-                    }\n-                    HighAvailabilityMemberState result = ILLEGAL;\n-                    result.setErrorMessage( \"Received a MasterIsAvailable event for instance \" + masterId\n-                            + \" while in TO_MASTER state\" );\n-                    return result;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n-                                                                     URI slaveUri )\n-                {\n-                    if ( slaveId.equals( context.getMyId() ) )\n-                    {\n-                        HighAvailabilityMemberState result = ILLEGAL;\n-                        result.setErrorMessage( \"Cannot be transitioning to master and slave at the same time\" );\n-                        return result;\n-                    }\n-                    return this;\n-                }\n-\n-                @Override\n-                public boolean isEligibleForElection()\n-                {\n-                    return true;\n-                }\n-\n-                @Override\n-                public boolean isAccessAllowed()\n-                {\n-                    return false;\n-                }\n-            },\n-\n-    /**\n-     * Cluster member is available as master for other cluster members to use.\n-     */\n-    MASTER\n-            {\n-                @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        return this;\n-                    }\n-                    // This means we (probably) were disconnected and got back in the cluster\n-                    // and we find out that we are not the master anymore.\n-                    return PENDING;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n-                                                                      URI masterHaURI )\n-                {\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        return this;\n-                    }\n-                    HighAvailabilityMemberState result = ILLEGAL;\n-                    result.setErrorMessage( \"I, \" + context.getMyId() + \" got a masterIsAvailable for \" +\n-                            masterHaURI + \" (id is \" + masterId + \" ) while in MASTER state. Probably missed a \" +\n-                            \"MasterIsElected event.\"  );\n-                    return result;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n-                                                                     URI slaveUri )\n-                {\n-                    if ( slaveId.equals( context.getMyId() ) )\n-                    {\n-                        HighAvailabilityMemberState result = ILLEGAL;\n-                        result.setErrorMessage( \"Cannot be master and transition to slave at the same time\" );\n-                        return result;\n-                    }\n-                    return this;\n-                }\n-\n-                @Override\n-                public boolean isEligibleForElection()\n-                {\n-                    return true;\n-                }\n-\n-                @Override\n-                public boolean isAccessAllowed()\n-                {\n-                    return true;\n-                }\n-            },\n-\n-    /**\n-     * Cluster member is ready as a slave\n-     */\n-    SLAVE\n-            {\n-                @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        return TO_MASTER;\n-                    }\n-                    if ( masterId.equals( context.getElectedMasterId() ) )\n-                    {\n-                        return this;\n-                    }\n-                    return PENDING;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n-                                                                      URI masterHaURI )\n-                {\n-                    if ( masterId.equals( context.getMyId() ) )\n-                    {\n-                        HighAvailabilityMemberState returnValue = ILLEGAL;\n-                        returnValue.setErrorMessage( \"Cannot transition to MASTER directly from SLAVE state\" );\n-                        return returnValue;\n-                    }\n-                    else if ( masterId.equals( context.getElectedMasterId() ) )\n-                    {\n-                        // this is just someone else that joined the cluster\n-                        return this;\n-                    }\n-                    HighAvailabilityMemberState returnValue = ILLEGAL;\n-                    returnValue.setErrorMessage( \"Received a MasterIsAvailable event for \" + masterId +\n-                            \" which is different from the current master (\" + context.getElectedMasterId() +\n-                            \") while in the SLAVE state (probably missed a MasterIsElected event)\" );\n-                    return returnValue;\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                        InstanceId slaveId, URI slaveUri )\n-                {\n-                    return this;\n-                }\n-\n-                @Override\n-                public boolean isEligibleForElection()\n-                {\n-                    return true;\n-                }\n-\n-                @Override\n-                public boolean isAccessAllowed()\n-                {\n-                    return true;\n-                }\n-            },\n-    ILLEGAL\n-            {\n-                @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                        InstanceId masterId )\n-                {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                        InstanceId masterId, URI masterHaURI )\n-                {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n-\n-                @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                        InstanceId slaveId, URI slaveUri )\n-                {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n-\n-                @Override\n-                public boolean isEligibleForElection()\n-                {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n-\n-                @Override\n-                public boolean isAccessAllowed()\n-                {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n-            };\n-\n-    private String errorMessage = \"\";\n-\n-    public abstract HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context, InstanceId masterId );\n-\n-    public abstract HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId,\n-                                                                   URI masterHaURI );\n-\n-    public abstract HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context, InstanceId slaveId, URI slaveUri );\n-\n-    /**\n-     * The purpose of this is that an instance cannot vote in an election while becoming a slave,\n-     * as it is copying stores.\n-     *\n-     * @return whether the instance is eligible or not\n-     */\n-    public abstract boolean isEligibleForElection();\n-\n-    public abstract boolean isAccessAllowed();\n-\n-    public String errorMessage()\n-    {\n-        return errorMessage;\n-    }\n-\n-    private void setErrorMessage( String message )\n-    {\n-        errorMessage = message;\n-    }\n+  /**\n+   * This state is the initial state, and is also the state used when leaving the cluster.\n+   * <p>\n+   * Here we are waiting for events that transitions this member either to becoming a master or slave.\n+   */\n+  PENDING\n+      {\n+        @Override\n+        public HighAvailabilityMemberState masterIsElected(HighAvailabilityMemberContext context,\n+                                                           InstanceId masterId)\n+        {\n+          assert context.getAvailableHaMaster() == null;\n+          if (masterId.equals(context.getMyId()) && !context.isSlaveOnly())\n+          {\n+            return TO_MASTER;\n+          }\n+          return PENDING;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState masterIsAvailable(HighAvailabilityMemberContext context,\n+                                                             InstanceId masterId, URI masterHaURI)\n+        {\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            HighAvailabilityMemberState result = ILLEGAL;\n+            result.setErrorMessage(\"Received a MasterIsAvailable event for my InstanceId while in\" +\n+                \" PENDING state\");\n+            return result;\n+          }\n+          return TO_SLAVE;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState slaveIsAvailable(HighAvailabilityMemberContext context,\n+                                                            InstanceId slaveId,\n+                                                            URI slaveUri)\n+        {\n+          if (slaveId.equals(context.getMyId()))\n+          {\n+            HighAvailabilityMemberState result = ILLEGAL;\n+            result.setErrorMessage(\"Cannot go from pending to slave\");\n+            return result;\n+          }\n+          return this;\n+        }\n+\n+        @Override\n+        public boolean isEligibleForElection()\n+        {\n+          return true;\n+        }\n+\n+        @Override\n+        public boolean isAccessAllowed()\n+        {\n+          return false;\n+        }\n+      },\n+\n+  /**\n+   * Member now knows that a master is available, and is transitioning itself to become a slave to that master.\n+   * It is performing the transition process here, and so is not yet available as a slave.\n+   */\n+  TO_SLAVE\n+      {\n+        @Override\n+        public HighAvailabilityMemberState masterIsElected(HighAvailabilityMemberContext context,\n+                                                           InstanceId masterId)\n+        {\n+          if (masterId.equals(context.getElectedMasterId()))\n+          {\n+            // A member joined and we all got the same event\n+            return this;\n+          }\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            return TO_MASTER;\n+          }\n+          // This may mean the master changed from the time we transitioned here\n+          return PENDING;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState masterIsAvailable(HighAvailabilityMemberContext context,\n+                                                             InstanceId masterId,\n+                                                             URI masterHaURI)\n+        {\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            HighAvailabilityMemberState result = ILLEGAL;\n+            result.setErrorMessage(\"i (\" + context.getMyId() + \") am trying to become a slave but \" +\n+                \"someone said i am available as master\");\n+            return result;\n+          }\n+          if (masterId.equals(context.getElectedMasterId()))\n+          {\n+            // A member joined and we all got the same event\n+            return this;\n+          }\n+          HighAvailabilityMemberState result = ILLEGAL;\n+          result.setErrorMessage(\"my (\" + context.getMyId() + \") current master is \" + context\n+              .getAvailableHaMaster() + \" (elected as \" + context.getElectedMasterId() + \" but i got a \" +\n+              \"masterIsAvailable event for \" + masterHaURI);\n+          return result;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState slaveIsAvailable(HighAvailabilityMemberContext context,\n+                                                            InstanceId slaveId,\n+                                                            URI slaveUri)\n+        {\n+          if (slaveId.equals(context.getMyId()))\n+          {\n+            return SLAVE;\n+          }\n+          return this;\n+        }\n+\n+        @Override\n+        public boolean isEligibleForElection()\n+        {\n+          return false;\n+        }\n+\n+        @Override\n+        public boolean isAccessAllowed()\n+        {\n+          return false;\n+        }\n+      },\n+\n+  /**\n+   * The cluster member knows that it has been elected as master, and starts the transitioning process.\n+   */\n+  TO_MASTER\n+      {\n+        @Override\n+        public HighAvailabilityMemberState masterIsElected(HighAvailabilityMemberContext context,\n+                                                           InstanceId masterId)\n+        {\n+          assert context.getAvailableHaMaster() == null;\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            return this;\n+          }\n+          return PENDING; // everything still goes\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState masterIsAvailable(HighAvailabilityMemberContext context,\n+                                                             InstanceId masterId,\n+                                                             URI masterHaURI)\n+        {\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            return MASTER;\n+          }\n+          HighAvailabilityMemberState result = ILLEGAL;\n+          result.setErrorMessage(\"Received a MasterIsAvailable event for instance \" + masterId\n+              + \" while in TO_MASTER state\");\n+          return result;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState slaveIsAvailable(HighAvailabilityMemberContext context,\n+                                                            InstanceId slaveId,\n+                                                            URI slaveUri)\n+        {\n+          if (slaveId.equals(context.getMyId()))\n+          {\n+            HighAvailabilityMemberState result = ILLEGAL;\n+            result.setErrorMessage(\"Cannot be transitioning to master and slave at the same time\");\n+            return result;\n+          }\n+          return this;\n+        }\n+\n+        @Override\n+        public boolean isEligibleForElection()\n+        {\n+          return true;\n+        }\n+\n+        @Override\n+        public boolean isAccessAllowed()\n+        {\n+          return false;\n+        }\n+      },\n+\n+  /**\n+   * Cluster member is available as master for other cluster members to use.\n+   */\n+  MASTER\n+      {\n+        @Override\n+        public HighAvailabilityMemberState masterIsElected(HighAvailabilityMemberContext context,\n+                                                           InstanceId masterId)\n+        {\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            return this;\n+          }\n+          // This means we (probably) were disconnected and got back in the cluster\n+          // and we find out that we are not the master anymore.\n+          return PENDING;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState masterIsAvailable(HighAvailabilityMemberContext context,\n+                                                             InstanceId masterId,\n+                                                             URI masterHaURI)\n+        {\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            return this;\n+          }\n+          HighAvailabilityMemberState result = ILLEGAL;\n+          result.setErrorMessage(\"I, \" + context.getMyId() + \" got a masterIsAvailable for \" +\n+              masterHaURI + \" (id is \" + masterId + \" ) while in MASTER state. Probably missed a \" +\n+              \"MasterIsElected event.\");\n+          return result;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState slaveIsAvailable(HighAvailabilityMemberContext context,\n+                                                            InstanceId slaveId,\n+                                                            URI slaveUri)\n+        {\n+          if (slaveId.equals(context.getMyId()))\n+          {\n+            HighAvailabilityMemberState result = ILLEGAL;\n+            result.setErrorMessage(\"Cannot be master and transition to slave at the same time\");\n+            return result;\n+          }\n+          return this;\n+        }\n+\n+        @Override\n+        public boolean isEligibleForElection()\n+        {\n+          return true;\n+        }\n+\n+        @Override\n+        public boolean isAccessAllowed()\n+        {\n+          return true;\n+        }\n+      },\n+\n+  /**\n+   * Cluster member is ready as a slave\n+   */\n+  SLAVE\n+      {\n+        @Override\n+        public HighAvailabilityMemberState masterIsElected(HighAvailabilityMemberContext context,\n+                                                           InstanceId masterId)\n+        {\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            return TO_MASTER;\n+          }\n+          if (masterId.equals(context.getElectedMasterId()))\n+          {\n+            return this;\n+          }\n+          return PENDING;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState masterIsAvailable(HighAvailabilityMemberContext context,\n+                                                             InstanceId masterId,\n+                                                             URI masterHaURI)\n+        {\n+          if (masterId.equals(context.getMyId()))\n+          {\n+            HighAvailabilityMemberState returnValue = ILLEGAL;\n+            returnValue.setErrorMessage(\"Cannot transition to MASTER directly from SLAVE state\");\n+            return returnValue;\n+          } else if (masterId.equals(context.getElectedMasterId()))\n+          {\n+            // this is just someone else that joined the cluster\n+            return this;\n+          }\n+          HighAvailabilityMemberState returnValue = ILLEGAL;\n+          returnValue.setErrorMessage(\"Received a MasterIsAvailable event for \" + masterId +\n+              \" which is different from the current master (\" + context.getElectedMasterId() +\n+              \") while in the SLAVE state (probably missed a MasterIsElected event)\");\n+          return returnValue;\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState slaveIsAvailable(HighAvailabilityMemberContext context,\n+                                                            InstanceId slaveId, URI slaveUri)\n+        {\n+          return this;\n+        }\n+\n+        @Override\n+        public boolean isEligibleForElection()\n+        {\n+          return true;\n+        }\n+\n+        @Override\n+        public boolean isAccessAllowed()\n+        {\n+          return true;\n+        }\n+      },\n+  ILLEGAL\n+      {\n+        @Override\n+        public HighAvailabilityMemberState masterIsElected(HighAvailabilityMemberContext context,\n+                                                           InstanceId masterId)\n+        {\n+          throw new IllegalStateException(\n+              \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n+                  \" something went wrong while handling a message and the state should be set to PENDING\");\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState masterIsAvailable(HighAvailabilityMemberContext context,\n+                                                             InstanceId masterId, URI masterHaURI)\n+        {\n+          throw new IllegalStateException(\n+              \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n+                  \" something went wrong while handling a message and the state should be set to PENDING\");\n+        }\n+\n+        @Override\n+        public HighAvailabilityMemberState slaveIsAvailable(HighAvailabilityMemberContext context,\n+                                                            InstanceId slaveId, URI slaveUri)\n+        {\n+          throw new IllegalStateException(\n+              \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n+                  \" something went wrong while handling a message and the state should be set to PENDING\");\n+        }\n+\n+        @Override\n+        public boolean isEligibleForElection()\n+        {\n+          throw new IllegalStateException(\n+              \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n+                  \" something went wrong while handling a message and the state should be set to PENDING\");\n+        }\n+\n+        @Override\n+        public boolean isAccessAllowed()\n+        {\n+          throw new IllegalStateException(\n+              \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n+                  \" something went wrong while handling a message and the state should be set to PENDING\");\n+        }\n+      };\n+\n+  private String errorMessage = \"\";\n+\n+  public abstract HighAvailabilityMemberState masterIsElected(HighAvailabilityMemberContext context, InstanceId masterId);\n+\n+  public abstract HighAvailabilityMemberState masterIsAvailable(HighAvailabilityMemberContext context, InstanceId masterId,\n+                                                                URI masterHaURI);\n+\n+  public abstract HighAvailabilityMemberState slaveIsAvailable(HighAvailabilityMemberContext context, InstanceId slaveId, URI slaveUri);\n+\n+  /**\n+   * The purpose of this is that an instance cannot vote in an election while becoming a slave,\n+   * as it is copying stores.\n+   *\n+   * @return whether the instance is eligible or not\n+   */\n+  public abstract boolean isEligibleForElection();\n+\n+  public abstract boolean isAccessAllowed();\n+\n+  public String errorMessage()\n+  {\n+    return errorMessage;\n+  }\n+\n+  private void setErrorMessage(String message)\n+  {\n+    errorMessage = message;\n+  }\n }\n",
            "diff_size": 391
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 245).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "346",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "360",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "366",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "372",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4269/HighAvailabilityMemberState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4269/HighAvailabilityMemberState.java\nindex 195baa634f2..ee86b37d48e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4269/HighAvailabilityMemberState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4269/HighAvailabilityMemberState.java\n@@ -42,38 +42,36 @@ public enum HighAvailabilityMemberState\n      * Here we are waiting for events that transitions this member either to becoming a master or slave.\n      */\n     PENDING\n-            {\n+{\n                 @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n+                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context, InstanceId masterId )\n+{\n                     assert context.getAvailableHaMaster() == null;\n                     if ( masterId.equals( context.getMyId() ) && !context.isSlaveOnly() )\n                     {\n                         return TO_MASTER;\n                     }\n-                    return PENDING;\n+\n+return PENDING;\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId, URI masterHaURI )\n-                {\n+                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId, URI masterHaURI )\n+{\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         HighAvailabilityMemberState result = ILLEGAL;\n-                        result.setErrorMessage( \"Received a MasterIsAvailable event for my InstanceId while in\" +\n-                                \" PENDING state\" );\n-                        return result;\n+                        result.setErrorMessage( \"Received a MasterIsAvailable event for my InstanceId while in\" + \" PENDING state\" );\n+return result;\n                     }\n-                    return TO_SLAVE;\n+\n+return TO_SLAVE;\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n+                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context, InstanceId slaveId,\n                                                                      URI slaveUri )\n-                {\n+{\n                     if ( slaveId.equals( context.getMyId() ) )\n                     {\n                         HighAvailabilityMemberState result = ILLEGAL;\n@@ -96,22 +94,22 @@ public enum HighAvailabilityMemberState\n                 }\n             },\n \n-    /**\n+/**\n      * Member now knows that a master is available, and is transitioning itself to become a slave to that master.\n      * It is performing the transition process here, and so is not yet available as a slave.\n      */\n     TO_SLAVE\n-            {\n+{\n                 @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n+                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context, InstanceId masterId )\n+{\n                     if ( masterId.equals( context.getElectedMasterId() ) )\n                     {\n                         // A member joined and we all got the same event\n                         return this;\n                     }\n-                    if ( masterId.equals( context.getMyId() ) )\n+\n+if ( masterId.equals( context.getMyId() ) )\n                     {\n                         return TO_MASTER;\n                     }\n@@ -120,34 +118,31 @@ public enum HighAvailabilityMemberState\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n+                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId,\n                                                                       URI masterHaURI )\n-                {\n+{\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         HighAvailabilityMemberState result = ILLEGAL;\n-                        result.setErrorMessage( \"i (\" + context.getMyId() + \") am trying to become a slave but \" +\n-                                \"someone said i am available as master\" );\n-                        return result;\n+                        result.setErrorMessage( \"i (\" + context.getMyId() + \") am trying to become a slave but \" + \"someone said i am available as master\" );\n+return result;\n                     }\n-                    if ( masterId.equals( context.getElectedMasterId() ) )\n+\n+if ( masterId.equals( context.getElectedMasterId() ) )\n                     {\n                         // A member joined and we all got the same event\n                         return this;\n                     }\n-                    HighAvailabilityMemberState result = ILLEGAL;\n-                    result.setErrorMessage( \"my (\" + context.getMyId() + \") current master is \" + context\n-                            .getAvailableHaMaster() + \" (elected as \" + context.getElectedMasterId() + \" but i got a \" +\n-                            \"masterIsAvailable event for \" + masterHaURI  );\n-                    return result;\n+\n+HighAvailabilityMemberState result = ILLEGAL;\n+                    result.setErrorMessage( \"my (\" + context.getMyId() + \") current master is \" + context.getAvailableHaMaster() + \" (elected as \" + context.getElectedMasterId() + \" but i got a \" + \"masterIsAvailable event for \" + masterHaURI );\n+return result;\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n+                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context, InstanceId slaveId,\n                                                                      URI slaveUri )\n-                {\n+{\n                     if ( slaveId.equals( context.getMyId() ) )\n                     {\n                         return SLAVE;\n@@ -168,43 +163,41 @@ public enum HighAvailabilityMemberState\n                 }\n             },\n \n-    /**\n+/**\n      * The cluster member knows that it has been elected as master, and starts the transitioning process.\n      */\n     TO_MASTER\n-            {\n+{\n                 @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n+                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context, InstanceId masterId )\n+{\n                     assert context.getAvailableHaMaster() == null;\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         return this;\n                     }\n-                    return PENDING; // everything still goes\n+\n+return PENDING; // everything still goes\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n+                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId,\n                                                                       URI masterHaURI )\n-                {\n+{\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         return MASTER;\n                     }\n-                    HighAvailabilityMemberState result = ILLEGAL;\n-                    result.setErrorMessage( \"Received a MasterIsAvailable event for instance \" + masterId\n-                            + \" while in TO_MASTER state\" );\n-                    return result;\n+\n+HighAvailabilityMemberState result = ILLEGAL;\n+                    result.setErrorMessage( \"Received a MasterIsAvailable event for instance \" + masterId + \" while in TO_MASTER state\" );\n+return result;\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n+                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context, InstanceId slaveId,\n                                                                      URI slaveUri )\n-                {\n+{\n                     if ( slaveId.equals( context.getMyId() ) )\n                     {\n                         HighAvailabilityMemberState result = ILLEGAL;\n@@ -227,15 +220,14 @@ public enum HighAvailabilityMemberState\n                 }\n             },\n \n-    /**\n+/**\n      * Cluster member is available as master for other cluster members to use.\n      */\n     MASTER\n-            {\n+{\n                 @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n+                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context, InstanceId masterId )\n+{\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         return this;\n@@ -246,26 +238,23 @@ public enum HighAvailabilityMemberState\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n+                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId,\n                                                                       URI masterHaURI )\n-                {\n+{\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         return this;\n                     }\n-                    HighAvailabilityMemberState result = ILLEGAL;\n-                    result.setErrorMessage( \"I, \" + context.getMyId() + \" got a masterIsAvailable for \" +\n-                            masterHaURI + \" (id is \" + masterId + \" ) while in MASTER state. Probably missed a \" +\n-                            \"MasterIsElected event.\"  );\n-                    return result;\n+\n+HighAvailabilityMemberState result = ILLEGAL;\n+                    result.setErrorMessage( \"I, \" + context.getMyId() + \" got a masterIsAvailable for \" + masterHaURI + \" (id is \" + masterId + \" ) while in MASTER state. Probably missed a \" + \"MasterIsElected event.\" );\n+return result;\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n-                                                                     InstanceId slaveId,\n+                public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context, InstanceId slaveId,\n                                                                      URI slaveUri )\n-                {\n+{\n                     if ( slaveId.equals( context.getMyId() ) )\n                     {\n                         HighAvailabilityMemberState result = ILLEGAL;\n@@ -288,31 +277,31 @@ public enum HighAvailabilityMemberState\n                 }\n             },\n \n-    /**\n+/**\n      * Cluster member is ready as a slave\n      */\n     SLAVE\n-            {\n+{\n                 @Override\n-                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n-                                                                    InstanceId masterId )\n-                {\n+                public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context, InstanceId masterId )\n+{\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         return TO_MASTER;\n                     }\n-                    if ( masterId.equals( context.getElectedMasterId() ) )\n+\n+if ( masterId.equals( context.getElectedMasterId() ) )\n                     {\n                         return this;\n                     }\n-                    return PENDING;\n+\n+return PENDING;\n                 }\n \n                 @Override\n-                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n-                                                                      InstanceId masterId,\n+                public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId,\n                                                                       URI masterHaURI )\n-                {\n+{\n                     if ( masterId.equals( context.getMyId() ) )\n                     {\n                         HighAvailabilityMemberState returnValue = ILLEGAL;\n@@ -324,11 +313,10 @@ public enum HighAvailabilityMemberState\n                         // this is just someone else that joined the cluster\n                         return this;\n                     }\n-                    HighAvailabilityMemberState returnValue = ILLEGAL;\n-                    returnValue.setErrorMessage( \"Received a MasterIsAvailable event for \" + masterId +\n-                            \" which is different from the current master (\" + context.getElectedMasterId() +\n-                            \") while in the SLAVE state (probably missed a MasterIsElected event)\" );\n-                    return returnValue;\n+\n+HighAvailabilityMemberState returnValue = ILLEGAL;\n+                    returnValue.setErrorMessage( \"Received a MasterIsAvailable event for \" + masterId + \" which is different from the current master (\" + context.getElectedMasterId() + \") while in the SLAVE state (probably missed a MasterIsElected event)\" );\n+return returnValue;\n                 }\n \n                 @Override\n@@ -349,61 +337,49 @@ public enum HighAvailabilityMemberState\n                 {\n                     return true;\n                 }\n-            },\n-    ILLEGAL\n-            {\n+            }, ILLEGAL\n+{\n                 @Override\n                 public HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context,\n                         InstanceId masterId )\n                 {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n+                    throw new IllegalStateException( \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" + \" something went wrong while handling a message and the state should be set to PENDING\" );\n+    }\n \n                 @Override\n                 public HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context,\n                         InstanceId masterId, URI masterHaURI )\n                 {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n+                    throw new IllegalStateException( \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" + \" something went wrong while handling a message and the state should be set to PENDING\" );\n+    }\n \n                 @Override\n                 public HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context,\n                         InstanceId slaveId, URI slaveUri )\n                 {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n+                    throw new IllegalStateException( \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" + \" something went wrong while handling a message and the state should be set to PENDING\" );\n+    }\n \n                 @Override\n                 public boolean isEligibleForElection()\n                 {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n+                    throw new IllegalStateException( \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" + \" something went wrong while handling a message and the state should be set to PENDING\" );\n+    }\n \n                 @Override\n                 public boolean isAccessAllowed()\n                 {\n-                    throw new IllegalStateException(\n-                            \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" +\n-                                    \" something went wrong while handling a message and the state should be set to PENDING\" );\n-                }\n+                    throw new IllegalStateException( \"The ILLEGAL state is not meant to be used as a state, merely as an indicator that\" + \" something went wrong while handling a message and the state should be set to PENDING\" );\n+    }\n             };\n \n-    private String errorMessage = \"\";\n+private String errorMessage = \"\";\n \n     public abstract HighAvailabilityMemberState masterIsElected( HighAvailabilityMemberContext context, InstanceId masterId );\n \n-    public abstract HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId,\n-                                                                   URI masterHaURI );\n+    public abstract HighAvailabilityMemberState masterIsAvailable( HighAvailabilityMemberContext context, InstanceId masterId, URI masterHaURI );\n \n-    public abstract HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context, InstanceId slaveId, URI slaveUri );\n+public abstract HighAvailabilityMemberState slaveIsAvailable( HighAvailabilityMemberContext context, InstanceId slaveId, URI slaveUri );\n \n     /**\n      * The purpose of this is that an instance cannot vote in an election while becoming a slave,\n@@ -424,4 +400,4 @@ public enum HighAvailabilityMemberState\n     {\n         errorMessage = message;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 118
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
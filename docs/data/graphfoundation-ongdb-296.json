{
    "project_name": "graphfoundation-ongdb",
    "error_id": "296",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/296/SchemaStoreProcessorTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/296/SchemaStoreProcessorTask.java\nindex 26eaa756431..4e50f17aec2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/296/SchemaStoreProcessorTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/296/SchemaStoreProcessorTask.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import org.neo4j.consistency.checking.SchemaRecordCheck;\n@@ -29,31 +30,31 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n \n public class SchemaStoreProcessorTask<R extends AbstractBaseRecord> extends StoreProcessorTask<R>\n {\n-    private final SchemaRecordCheck schemaRecordCheck;\n+  private final SchemaRecordCheck schemaRecordCheck;\n \n-    public SchemaStoreProcessorTask( String name, Statistics statistics, int threads, RecordStore<R> store,\n-            StoreAccess storeAccess,\n-            String builderPrefix,\n-            SchemaRecordCheck schemaRecordCheck,\n-            ProgressMonitorFactory.MultiPartBuilder builder,\n-            CacheAccess cacheAccess,\n-            StoreProcessor processor,\n-            QueueDistribution distribution )\n-    {\n-        super( name, statistics, threads, store, storeAccess, builderPrefix,\n-                builder, cacheAccess, processor, distribution );\n-        this.schemaRecordCheck = schemaRecordCheck;\n-    }\n+  public SchemaStoreProcessorTask(String name, Statistics statistics, int threads, RecordStore<R> store,\n+                                  StoreAccess storeAccess,\n+                                  String builderPrefix,\n+                                  SchemaRecordCheck schemaRecordCheck,\n+                                  ProgressMonitorFactory.MultiPartBuilder builder,\n+                                  CacheAccess cacheAccess,\n+                                  StoreProcessor processor,\n+                                  QueueDistribution distribution)\n+  {\n+    super(name, statistics, threads, store, storeAccess, builderPrefix,\n+        builder, cacheAccess, processor, distribution);\n+    this.schemaRecordCheck = schemaRecordCheck;\n+  }\n \n-    @Override\n-    protected void beforeProcessing( StoreProcessor processor )\n-    {\n-        processor.setSchemaRecordCheck( schemaRecordCheck );\n-    }\n+  @Override\n+  protected void beforeProcessing(StoreProcessor processor)\n+  {\n+    processor.setSchemaRecordCheck(schemaRecordCheck);\n+  }\n \n-    @Override\n-    protected void afterProcessing( StoreProcessor processor )\n-    {\n-        processor.setSchemaRecordCheck( null );\n-    }\n+  @Override\n+  protected void afterProcessing(StoreProcessor processor)\n+  {\n+    processor.setSchemaRecordCheck(null);\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/296/SchemaStoreProcessorTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/296/SchemaStoreProcessorTask.java\nindex 26eaa756431..e91d61aabb2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/296/SchemaStoreProcessorTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/296/SchemaStoreProcessorTask.java\n@@ -42,7 +42,7 @@ public class SchemaStoreProcessorTask<R extends AbstractBaseRecord> extends Stor\n     {\n         super( name, statistics, threads, store, storeAccess, builderPrefix,\n                 builder, cacheAccess, processor, distribution );\n-        this.schemaRecordCheck = schemaRecordCheck;\n+this.schemaRecordCheck = schemaRecordCheck;\n     }\n \n     @Override\n@@ -56,4 +56,4 @@ public class SchemaStoreProcessorTask<R extends AbstractBaseRecord> extends Stor\n     {\n         processor.setSchemaRecordCheck( null );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
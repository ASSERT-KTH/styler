{
    "project_name": "graphfoundation-ongdb",
    "error_id": "491",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/491/BasicAuthentication.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/491/BasicAuthentication.java\nindex e3e87844cf2..3280a9588dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/491/BasicAuthentication.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/491/BasicAuthentication.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.security.auth;\n \n import java.io.IOException;\n@@ -39,83 +40,79 @@ import static org.neo4j.kernel.api.security.AuthToken.PRINCIPAL;\n  */\n public class BasicAuthentication implements Authentication\n {\n-    private final AuthManager authManager;\n-    private final UserManagerSupplier userManagerSupplier;\n+  private final AuthManager authManager;\n+  private final UserManagerSupplier userManagerSupplier;\n \n-    public BasicAuthentication( AuthManager authManager, UserManagerSupplier userManagerSupplier )\n-    {\n-        this.authManager = authManager;\n-        this.userManagerSupplier = userManagerSupplier;\n-    }\n+  public BasicAuthentication(AuthManager authManager, UserManagerSupplier userManagerSupplier)\n+  {\n+    this.authManager = authManager;\n+    this.userManagerSupplier = userManagerSupplier;\n+  }\n \n-    @Override\n-    public AuthenticationResult authenticate( Map<String,Object> authToken ) throws AuthenticationException\n+  @Override\n+  public AuthenticationResult authenticate(Map<String, Object> authToken) throws AuthenticationException\n+  {\n+    if (authToken.containsKey(NEW_CREDENTIALS))\n+    {\n+      return update(authToken);\n+    } else\n     {\n-        if ( authToken.containsKey( NEW_CREDENTIALS ) )\n-        {\n-            return update( authToken );\n-        }\n-        else\n-        {\n-            return doAuthenticate( authToken );\n-        }\n+      return doAuthenticate(authToken);\n     }\n+  }\n \n-    private AuthenticationResult doAuthenticate( Map<String,Object> authToken ) throws AuthenticationException\n+  private AuthenticationResult doAuthenticate(Map<String, Object> authToken) throws AuthenticationException\n+  {\n+    try\n     {\n-        try\n-        {\n-            LoginContext loginContext = authManager.login( authToken );\n+      LoginContext loginContext = authManager.login(authToken);\n \n-            switch ( loginContext.subject().getAuthenticationResult() )\n-            {\n-            case SUCCESS:\n-            case PASSWORD_CHANGE_REQUIRED:\n-                break;\n-            case TOO_MANY_ATTEMPTS:\n-                throw new AuthenticationException( Status.Security.AuthenticationRateLimit );\n-            default:\n-                throw new AuthenticationException( Status.Security.Unauthorized );\n-            }\n+      switch (loginContext.subject().getAuthenticationResult())\n+      {\n+        case SUCCESS:\n+        case PASSWORD_CHANGE_REQUIRED:\n+          break;\n+        case TOO_MANY_ATTEMPTS:\n+          throw new AuthenticationException(Status.Security.AuthenticationRateLimit);\n+        default:\n+          throw new AuthenticationException(Status.Security.Unauthorized);\n+      }\n \n-            return new BasicAuthenticationResult( loginContext );\n-        }\n-        catch ( InvalidAuthTokenException e )\n-        {\n-            throw new AuthenticationException( e.status(), e.getMessage() );\n-        }\n+      return new BasicAuthenticationResult(loginContext);\n+    } catch (InvalidAuthTokenException e)\n+    {\n+      throw new AuthenticationException(e.status(), e.getMessage());\n     }\n+  }\n \n-    private AuthenticationResult update( Map<String,Object> authToken )\n-            throws AuthenticationException\n+  private AuthenticationResult update(Map<String, Object> authToken)\n+      throws AuthenticationException\n+  {\n+    try\n     {\n-        try\n-        {\n-            LoginContext loginContext = authManager.login( authToken );\n+      LoginContext loginContext = authManager.login(authToken);\n \n-            switch ( loginContext.subject().getAuthenticationResult() )\n-            {\n-            case SUCCESS:\n-            case PASSWORD_CHANGE_REQUIRED:\n-                String newPassword = AuthToken.safeCast( NEW_CREDENTIALS, authToken );\n-                String username = AuthToken.safeCast( PRINCIPAL, authToken );\n-                userManagerSupplier.getUserManager( loginContext.subject(), false )\n-                        .setUserPassword( username, newPassword, false );\n-                loginContext.subject().setPasswordChangeNoLongerRequired();\n-                break;\n-            default:\n-                throw new AuthenticationException( Status.Security.Unauthorized );\n-            }\n+      switch (loginContext.subject().getAuthenticationResult())\n+      {\n+        case SUCCESS:\n+        case PASSWORD_CHANGE_REQUIRED:\n+          String newPassword = AuthToken.safeCast(NEW_CREDENTIALS, authToken);\n+          String username = AuthToken.safeCast(PRINCIPAL, authToken);\n+          userManagerSupplier.getUserManager(loginContext.subject(), false)\n+              .setUserPassword(username, newPassword, false);\n+          loginContext.subject().setPasswordChangeNoLongerRequired();\n+          break;\n+        default:\n+          throw new AuthenticationException(Status.Security.Unauthorized);\n+      }\n \n-            return new BasicAuthenticationResult( loginContext );\n-        }\n-        catch ( AuthorizationViolationException | InvalidArgumentsException | InvalidAuthTokenException e )\n-        {\n-            throw new AuthenticationException( e.status(), e.getMessage(), e );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new AuthenticationException( Status.Security.Unauthorized, e.getMessage(), e );\n-        }\n+      return new BasicAuthenticationResult(loginContext);\n+    } catch (AuthorizationViolationException | InvalidArgumentsException | InvalidAuthTokenException e)\n+    {\n+      throw new AuthenticationException(e.status(), e.getMessage(), e);\n+    } catch (IOException e)\n+    {\n+      throw new AuthenticationException(Status.Security.Unauthorized, e.getMessage(), e);\n     }\n+  }\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/491/BasicAuthentication.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/491/BasicAuthentication.java\nindex e3e87844cf2..8c2496f103d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/491/BasicAuthentication.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/491/BasicAuthentication.java\n@@ -66,8 +66,7 @@ public class BasicAuthentication implements Authentication\n         try\n         {\n             LoginContext loginContext = authManager.login( authToken );\n-\n-            switch ( loginContext.subject().getAuthenticationResult() )\n+switch ( loginContext.subject().getAuthenticationResult() )\n             {\n             case SUCCESS:\n             case PASSWORD_CHANGE_REQUIRED:\n@@ -86,22 +85,19 @@ public class BasicAuthentication implements Authentication\n         }\n     }\n \n-    private AuthenticationResult update( Map<String,Object> authToken )\n-            throws AuthenticationException\n-    {\n+    private AuthenticationResult update( Map<String,Object> authToken ) throws AuthenticationException\n+{\n         try\n         {\n             LoginContext loginContext = authManager.login( authToken );\n-\n-            switch ( loginContext.subject().getAuthenticationResult() )\n+switch ( loginContext.subject().getAuthenticationResult() )\n             {\n             case SUCCESS:\n             case PASSWORD_CHANGE_REQUIRED:\n                 String newPassword = AuthToken.safeCast( NEW_CREDENTIALS, authToken );\n                 String username = AuthToken.safeCast( PRINCIPAL, authToken );\n-                userManagerSupplier.getUserManager( loginContext.subject(), false )\n-                        .setUserPassword( username, newPassword, false );\n-                loginContext.subject().setPasswordChangeNoLongerRequired();\n+                userManagerSupplier.getUserManager( loginContext.subject(), false ).setUserPassword( username, newPassword, false );\n+loginContext.subject().setPasswordChangeNoLongerRequired();\n                 break;\n             default:\n                 throw new AuthenticationException( Status.Security.Unauthorized );\n@@ -118,4 +114,4 @@ public class BasicAuthentication implements Authentication\n             throw new AuthenticationException( Status.Security.Unauthorized, e.getMessage(), e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
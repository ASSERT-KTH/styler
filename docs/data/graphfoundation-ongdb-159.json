{
    "project_name": "graphfoundation-ongdb",
    "error_id": "159",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "187",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "207",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/159/StoreCopyClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/159/StoreCopyClient.java\nindex 35d8a347952..1bd3e676c71 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/159/StoreCopyClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/159/StoreCopyClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import java.io.File;\n@@ -45,169 +46,165 @@ import static org.neo4j.causalclustering.catchup.storecopy.StoreCopyResponseAdap\n \n public class StoreCopyClient\n {\n-    private final CatchUpClient catchUpClient;\n-    private final Log log;\n-    private TimeoutStrategy backOffStrategy;\n-    private final Monitors monitors;\n+  private final CatchUpClient catchUpClient;\n+  private final Log log;\n+  private TimeoutStrategy backOffStrategy;\n+  private final Monitors monitors;\n \n-    public StoreCopyClient( CatchUpClient catchUpClient, Monitors monitors, LogProvider logProvider, TimeoutStrategy backOffStrategy )\n-    {\n-        this.catchUpClient = catchUpClient;\n-        this.monitors = monitors;\n-        log = logProvider.getLog( getClass() );\n-        this.backOffStrategy = backOffStrategy;\n-    }\n+  public StoreCopyClient(CatchUpClient catchUpClient, Monitors monitors, LogProvider logProvider, TimeoutStrategy backOffStrategy)\n+  {\n+    this.catchUpClient = catchUpClient;\n+    this.monitors = monitors;\n+    log = logProvider.getLog(getClass());\n+    this.backOffStrategy = backOffStrategy;\n+  }\n \n-    long copyStoreFiles( CatchupAddressProvider catchupAddressProvider, StoreId expectedStoreId, StoreFileStreamProvider storeFileStreamProvider,\n-            Supplier<TerminationCondition> requestWiseTerminationCondition, File destDir )\n-            throws StoreCopyFailedException\n+  long copyStoreFiles(CatchupAddressProvider catchupAddressProvider, StoreId expectedStoreId, StoreFileStreamProvider storeFileStreamProvider,\n+                      Supplier<TerminationCondition> requestWiseTerminationCondition, File destDir)\n+      throws StoreCopyFailedException\n+  {\n+    try\n     {\n-        try\n-        {\n-            PrepareStoreCopyResponse prepareStoreCopyResponse = prepareStoreCopy( catchupAddressProvider.primary(), expectedStoreId, storeFileStreamProvider );\n-            copyFilesIndividually( prepareStoreCopyResponse, expectedStoreId, catchupAddressProvider, storeFileStreamProvider,\n-                    requestWiseTerminationCondition, destDir );\n-            copyIndexSnapshotIndividually( prepareStoreCopyResponse, expectedStoreId, catchupAddressProvider, storeFileStreamProvider,\n-                    requestWiseTerminationCondition );\n-            return prepareStoreCopyResponse.lastTransactionId();\n-        }\n-        catch ( CatchupAddressResolutionException | CatchUpClientException e )\n-        {\n-            throw new StoreCopyFailedException( e );\n-        }\n+      PrepareStoreCopyResponse prepareStoreCopyResponse = prepareStoreCopy(catchupAddressProvider.primary(), expectedStoreId, storeFileStreamProvider);\n+      copyFilesIndividually(prepareStoreCopyResponse, expectedStoreId, catchupAddressProvider, storeFileStreamProvider,\n+          requestWiseTerminationCondition, destDir);\n+      copyIndexSnapshotIndividually(prepareStoreCopyResponse, expectedStoreId, catchupAddressProvider, storeFileStreamProvider,\n+          requestWiseTerminationCondition);\n+      return prepareStoreCopyResponse.lastTransactionId();\n+    } catch (CatchupAddressResolutionException | CatchUpClientException e)\n+    {\n+      throw new StoreCopyFailedException(e);\n     }\n+  }\n \n-    private void copyFilesIndividually( PrepareStoreCopyResponse prepareStoreCopyResponse, StoreId expectedStoreId, CatchupAddressProvider addressProvider,\n-            StoreFileStreamProvider storeFileStream, Supplier<TerminationCondition> terminationConditions, File destDir ) throws StoreCopyFailedException\n+  private void copyFilesIndividually(PrepareStoreCopyResponse prepareStoreCopyResponse, StoreId expectedStoreId, CatchupAddressProvider addressProvider,\n+                                     StoreFileStreamProvider storeFileStream, Supplier<TerminationCondition> terminationConditions, File destDir)\n+      throws StoreCopyFailedException\n+  {\n+    StoreCopyClientMonitor\n+        storeCopyClientMonitor = monitors.newMonitor(StoreCopyClientMonitor.class);\n+    storeCopyClientMonitor.startReceivingStoreFiles();\n+    long lastTransactionId = prepareStoreCopyResponse.lastTransactionId();\n+    for (File file : prepareStoreCopyResponse.getFiles())\n     {\n-        StoreCopyClientMonitor\n-                storeCopyClientMonitor = monitors.newMonitor( StoreCopyClientMonitor.class );\n-        storeCopyClientMonitor.startReceivingStoreFiles();\n-        long lastTransactionId = prepareStoreCopyResponse.lastTransactionId();\n-        for ( File file : prepareStoreCopyResponse.getFiles() )\n-        {\n-            storeCopyClientMonitor.startReceivingStoreFile( Paths.get( destDir.toString(), file.getName() ).toString() );\n-            persistentCallToSecondary( new GetStoreFileRequest( expectedStoreId, file, lastTransactionId ), filesCopyAdaptor( storeFileStream, log ),\n-                    addressProvider,\n-                    terminationConditions.get() );\n-            storeCopyClientMonitor.finishReceivingStoreFile( Paths.get( destDir.toString(), file.getName() ).toString() );\n-        }\n-        storeCopyClientMonitor.finishReceivingStoreFiles();\n+      storeCopyClientMonitor.startReceivingStoreFile(Paths.get(destDir.toString(), file.getName()).toString());\n+      persistentCallToSecondary(new GetStoreFileRequest(expectedStoreId, file, lastTransactionId), filesCopyAdaptor(storeFileStream, log),\n+          addressProvider,\n+          terminationConditions.get());\n+      storeCopyClientMonitor.finishReceivingStoreFile(Paths.get(destDir.toString(), file.getName()).toString());\n     }\n+    storeCopyClientMonitor.finishReceivingStoreFiles();\n+  }\n \n-    private void copyIndexSnapshotIndividually( PrepareStoreCopyResponse prepareStoreCopyResponse, StoreId expectedStoreId,\n-            CatchupAddressProvider addressProvider, StoreFileStreamProvider storeFileStream, Supplier<TerminationCondition> terminationConditions )\n-            throws StoreCopyFailedException\n+  private void copyIndexSnapshotIndividually(PrepareStoreCopyResponse prepareStoreCopyResponse, StoreId expectedStoreId,\n+                                             CatchupAddressProvider addressProvider, StoreFileStreamProvider storeFileStream,\n+                                             Supplier<TerminationCondition> terminationConditions)\n+      throws StoreCopyFailedException\n+  {\n+    StoreCopyClientMonitor\n+        storeCopyClientMonitor = monitors.newMonitor(StoreCopyClientMonitor.class);\n+    long lastTransactionId = prepareStoreCopyResponse.lastTransactionId();\n+    PrimitiveLongIterator indexIds = prepareStoreCopyResponse.getIndexIds().iterator();\n+    storeCopyClientMonitor.startReceivingIndexSnapshots();\n+    while (indexIds.hasNext())\n     {\n-        StoreCopyClientMonitor\n-                storeCopyClientMonitor = monitors.newMonitor( StoreCopyClientMonitor.class );\n-        long lastTransactionId = prepareStoreCopyResponse.lastTransactionId();\n-        PrimitiveLongIterator indexIds = prepareStoreCopyResponse.getIndexIds().iterator();\n-        storeCopyClientMonitor.startReceivingIndexSnapshots();\n-        while ( indexIds.hasNext() )\n-        {\n-            long indexId = indexIds.next();\n-            storeCopyClientMonitor.startReceivingIndexSnapshot( indexId );\n-            persistentCallToSecondary( new GetIndexFilesRequest( expectedStoreId, indexId, lastTransactionId ), filesCopyAdaptor( storeFileStream, log ),\n-                    addressProvider,\n-                    terminationConditions.get() );\n-            storeCopyClientMonitor.finishReceivingIndexSnapshot( indexId );\n-        }\n-        storeCopyClientMonitor.finishReceivingIndexSnapshots();\n+      long indexId = indexIds.next();\n+      storeCopyClientMonitor.startReceivingIndexSnapshot(indexId);\n+      persistentCallToSecondary(new GetIndexFilesRequest(expectedStoreId, indexId, lastTransactionId), filesCopyAdaptor(storeFileStream, log),\n+          addressProvider,\n+          terminationConditions.get());\n+      storeCopyClientMonitor.finishReceivingIndexSnapshot(indexId);\n     }\n+    storeCopyClientMonitor.finishReceivingIndexSnapshots();\n+  }\n \n-    private void persistentCallToSecondary( CatchUpRequest request, CatchUpResponseAdaptor<StoreCopyFinishedResponse> copyHandler,\n-            CatchupAddressProvider addressProvider,\n-            TerminationCondition terminationCondition ) throws StoreCopyFailedException\n+  private void persistentCallToSecondary(CatchUpRequest request, CatchUpResponseAdaptor<StoreCopyFinishedResponse> copyHandler,\n+                                         CatchupAddressProvider addressProvider,\n+                                         TerminationCondition terminationCondition) throws StoreCopyFailedException\n+  {\n+    TimeoutStrategy.Timeout timeout = backOffStrategy.newTimeout();\n+    boolean successful;\n+    do\n     {\n-        TimeoutStrategy.Timeout timeout = backOffStrategy.newTimeout();\n-        boolean successful;\n-        do\n-        {\n-            try\n-            {\n-                AdvertisedSocketAddress address = addressProvider.secondary();\n-                log.info( format( \"Sending request '%s' to '%s'\", request, address ) );\n-                StoreCopyFinishedResponse response = catchUpClient.makeBlockingRequest( address, request, copyHandler );\n-                successful = successfulRequest( response, request );\n-            }\n-            catch ( CatchUpClientException | CatchupAddressResolutionException e )\n-            {\n-                log.warn( format( \"Request failed exceptionally '%s'.\", request ), e );\n-                successful = false;\n-            }\n-            if ( !successful )\n-            {\n-                terminationCondition.assertContinue();\n-            }\n-            awaitAndIncrementTimeout( timeout );\n-        }\n-        while ( !successful );\n+      try\n+      {\n+        AdvertisedSocketAddress address = addressProvider.secondary();\n+        log.info(format(\"Sending request '%s' to '%s'\", request, address));\n+        StoreCopyFinishedResponse response = catchUpClient.makeBlockingRequest(address, request, copyHandler);\n+        successful = successfulRequest(response, request);\n+      } catch (CatchUpClientException | CatchupAddressResolutionException e)\n+      {\n+        log.warn(format(\"Request failed exceptionally '%s'.\", request), e);\n+        successful = false;\n+      }\n+      if (!successful)\n+      {\n+        terminationCondition.assertContinue();\n+      }\n+      awaitAndIncrementTimeout(timeout);\n     }\n+    while (!successful);\n+  }\n \n-    private void awaitAndIncrementTimeout( TimeoutStrategy.Timeout timeout ) throws StoreCopyFailedException\n+  private void awaitAndIncrementTimeout(TimeoutStrategy.Timeout timeout) throws StoreCopyFailedException\n+  {\n+    try\n     {\n-        try\n-        {\n-            Thread.sleep( timeout.getMillis() );\n-            timeout.increment();\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            throw new StoreCopyFailedException( \"Thread interrupted\" );\n-        }\n+      Thread.sleep(timeout.getMillis());\n+      timeout.increment();\n+    } catch (InterruptedException e)\n+    {\n+      throw new StoreCopyFailedException(\"Thread interrupted\");\n     }\n+  }\n \n-    private PrepareStoreCopyResponse prepareStoreCopy( AdvertisedSocketAddress from, StoreId expectedStoreId, StoreFileStreamProvider storeFileStream )\n-            throws CatchUpClientException, StoreCopyFailedException\n+  private PrepareStoreCopyResponse prepareStoreCopy(AdvertisedSocketAddress from, StoreId expectedStoreId, StoreFileStreamProvider storeFileStream)\n+      throws CatchUpClientException, StoreCopyFailedException\n+  {\n+    log.info(\"Requesting store listing from: \" + from);\n+    PrepareStoreCopyResponse prepareStoreCopyResponse =\n+        catchUpClient.makeBlockingRequest(from, new PrepareStoreCopyRequest(expectedStoreId), prepareStoreCopyAdaptor(storeFileStream, log));\n+    if (prepareStoreCopyResponse.status() != PrepareStoreCopyResponse.Status.SUCCESS)\n     {\n-        log.info( \"Requesting store listing from: \" + from );\n-        PrepareStoreCopyResponse prepareStoreCopyResponse =\n-                catchUpClient.makeBlockingRequest( from, new PrepareStoreCopyRequest( expectedStoreId ), prepareStoreCopyAdaptor( storeFileStream, log ) );\n-        if ( prepareStoreCopyResponse.status() != PrepareStoreCopyResponse.Status.SUCCESS )\n-        {\n-            throw new StoreCopyFailedException( \"Preparing store failed due to: \" + prepareStoreCopyResponse.status() );\n-        }\n-        return prepareStoreCopyResponse;\n+      throw new StoreCopyFailedException(\"Preparing store failed due to: \" + prepareStoreCopyResponse.status());\n     }\n+    return prepareStoreCopyResponse;\n+  }\n \n-    public StoreId fetchStoreId( AdvertisedSocketAddress fromAddress ) throws StoreIdDownloadFailedException\n+  public StoreId fetchStoreId(AdvertisedSocketAddress fromAddress) throws StoreIdDownloadFailedException\n+  {\n+    try\n     {\n-        try\n-        {\n-            CatchUpResponseAdaptor<StoreId> responseHandler = new CatchUpResponseAdaptor<StoreId>()\n-            {\n-                @Override\n-                public void onGetStoreIdResponse( CompletableFuture<StoreId> signal, GetStoreIdResponse response )\n-                {\n-                    signal.complete( response.storeId() );\n-                }\n-            };\n-            return catchUpClient.makeBlockingRequest( fromAddress, new GetStoreIdRequest(), responseHandler );\n-        }\n-        catch ( CatchUpClientException e )\n+      CatchUpResponseAdaptor<StoreId> responseHandler = new CatchUpResponseAdaptor<StoreId>()\n+      {\n+        @Override\n+        public void onGetStoreIdResponse(CompletableFuture<StoreId> signal, GetStoreIdResponse response)\n         {\n-            throw new StoreIdDownloadFailedException( e );\n+          signal.complete(response.storeId());\n         }\n+      };\n+      return catchUpClient.makeBlockingRequest(fromAddress, new GetStoreIdRequest(), responseHandler);\n+    } catch (CatchUpClientException e)\n+    {\n+      throw new StoreIdDownloadFailedException(e);\n     }\n+  }\n \n-    private boolean successfulRequest( StoreCopyFinishedResponse response, CatchUpRequest request ) throws StoreCopyFailedException\n+  private boolean successfulRequest(StoreCopyFinishedResponse response, CatchUpRequest request) throws StoreCopyFailedException\n+  {\n+    StoreCopyFinishedResponse.Status responseStatus = response.status();\n+    if (responseStatus == StoreCopyFinishedResponse.Status.SUCCESS)\n     {\n-        StoreCopyFinishedResponse.Status responseStatus = response.status();\n-        if ( responseStatus == StoreCopyFinishedResponse.Status.SUCCESS )\n-        {\n-            log.info( format( \"Request was successful '%s'\", request ) );\n-            return true;\n-        }\n-        else if ( StoreCopyFinishedResponse.Status.E_TOO_FAR_BEHIND == responseStatus || StoreCopyFinishedResponse.Status.E_UNKNOWN == responseStatus ||\n-                StoreCopyFinishedResponse.Status.E_STORE_ID_MISMATCH == responseStatus )\n-        {\n-            log.warn( format( \"Request failed '%s'. With response: %s\", request, response.status() ) );\n-            return false;\n-        }\n-        else\n-        {\n-            throw new StoreCopyFailedException( format( \"Request responded with an unknown response type: %s. '%s'\", responseStatus, request ) );\n-        }\n+      log.info(format(\"Request was successful '%s'\", request));\n+      return true;\n+    } else if (StoreCopyFinishedResponse.Status.E_TOO_FAR_BEHIND == responseStatus || StoreCopyFinishedResponse.Status.E_UNKNOWN == responseStatus ||\n+        StoreCopyFinishedResponse.Status.E_STORE_ID_MISMATCH == responseStatus)\n+    {\n+      log.warn(format(\"Request failed '%s'. With response: %s\", request, response.status()));\n+      return false;\n+    } else\n+    {\n+      throw new StoreCopyFailedException(format(\"Request responded with an unknown response type: %s. '%s'\", responseStatus, request));\n     }\n+  }\n }\n",
            "diff_size": 189
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 256).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 224).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "column": "151",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/159/StoreCopyClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/159/StoreCopyClient.java\nindex 35d8a347952..a059c6a40fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/159/StoreCopyClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/159/StoreCopyClient.java\n@@ -58,18 +58,16 @@ public class StoreCopyClient\n         this.backOffStrategy = backOffStrategy;\n     }\n \n-    long copyStoreFiles( CatchupAddressProvider catchupAddressProvider, StoreId expectedStoreId, StoreFileStreamProvider storeFileStreamProvider,\n-            Supplier<TerminationCondition> requestWiseTerminationCondition, File destDir )\n-            throws StoreCopyFailedException\n-    {\n+    long copyStoreFiles( CatchupAddressProvider catchupAddressProvider, StoreId expectedStoreId, StoreFileStreamProvider storeFileStreamProvider, Supplier<TerminationCondition> requestWiseTerminationCondition, File destDir ) throws StoreCopyFailedException\n+{\n         try\n         {\n             PrepareStoreCopyResponse prepareStoreCopyResponse = prepareStoreCopy( catchupAddressProvider.primary(), expectedStoreId, storeFileStreamProvider );\n             copyFilesIndividually( prepareStoreCopyResponse, expectedStoreId, catchupAddressProvider, storeFileStreamProvider,\n                     requestWiseTerminationCondition, destDir );\n-            copyIndexSnapshotIndividually( prepareStoreCopyResponse, expectedStoreId, catchupAddressProvider, storeFileStreamProvider,\n+copyIndexSnapshotIndividually( prepareStoreCopyResponse, expectedStoreId, catchupAddressProvider, storeFileStreamProvider,\n                     requestWiseTerminationCondition );\n-            return prepareStoreCopyResponse.lastTransactionId();\n+return prepareStoreCopyResponse.lastTransactionId();\n         }\n         catch ( CatchupAddressResolutionException | CatchUpClientException e )\n         {\n@@ -79,39 +77,34 @@ public class StoreCopyClient\n \n     private void copyFilesIndividually( PrepareStoreCopyResponse prepareStoreCopyResponse, StoreId expectedStoreId, CatchupAddressProvider addressProvider,\n             StoreFileStreamProvider storeFileStream, Supplier<TerminationCondition> terminationConditions, File destDir ) throws StoreCopyFailedException\n-    {\n-        StoreCopyClientMonitor\n-                storeCopyClientMonitor = monitors.newMonitor( StoreCopyClientMonitor.class );\n-        storeCopyClientMonitor.startReceivingStoreFiles();\n+{\n+        StoreCopyClientMonitor storeCopyClientMonitor = monitors.newMonitor( StoreCopyClientMonitor.class );\n+storeCopyClientMonitor.startReceivingStoreFiles();\n         long lastTransactionId = prepareStoreCopyResponse.lastTransactionId();\n         for ( File file : prepareStoreCopyResponse.getFiles() )\n         {\n             storeCopyClientMonitor.startReceivingStoreFile( Paths.get( destDir.toString(), file.getName() ).toString() );\n-            persistentCallToSecondary( new GetStoreFileRequest( expectedStoreId, file, lastTransactionId ), filesCopyAdaptor( storeFileStream, log ),\n-                    addressProvider,\n+            persistentCallToSecondary( new GetStoreFileRequest( expectedStoreId, file, lastTransactionId ), filesCopyAdaptor( storeFileStream, log ), addressProvider,\n                     terminationConditions.get() );\n-            storeCopyClientMonitor.finishReceivingStoreFile( Paths.get( destDir.toString(), file.getName() ).toString() );\n+storeCopyClientMonitor.finishReceivingStoreFile( Paths.get( destDir.toString(), file.getName() ).toString() );\n         }\n         storeCopyClientMonitor.finishReceivingStoreFiles();\n     }\n \n     private void copyIndexSnapshotIndividually( PrepareStoreCopyResponse prepareStoreCopyResponse, StoreId expectedStoreId,\n-            CatchupAddressProvider addressProvider, StoreFileStreamProvider storeFileStream, Supplier<TerminationCondition> terminationConditions )\n-            throws StoreCopyFailedException\n-    {\n-        StoreCopyClientMonitor\n-                storeCopyClientMonitor = monitors.newMonitor( StoreCopyClientMonitor.class );\n-        long lastTransactionId = prepareStoreCopyResponse.lastTransactionId();\n+            CatchupAddressProvider addressProvider, StoreFileStreamProvider storeFileStream, Supplier<TerminationCondition> terminationConditions ) throws StoreCopyFailedException\n+{\n+        StoreCopyClientMonitor storeCopyClientMonitor = monitors.newMonitor( StoreCopyClientMonitor.class );\n+    long lastTransactionId = prepareStoreCopyResponse.lastTransactionId();\n         PrimitiveLongIterator indexIds = prepareStoreCopyResponse.getIndexIds().iterator();\n         storeCopyClientMonitor.startReceivingIndexSnapshots();\n         while ( indexIds.hasNext() )\n         {\n             long indexId = indexIds.next();\n             storeCopyClientMonitor.startReceivingIndexSnapshot( indexId );\n-            persistentCallToSecondary( new GetIndexFilesRequest( expectedStoreId, indexId, lastTransactionId ), filesCopyAdaptor( storeFileStream, log ),\n-                    addressProvider,\n+            persistentCallToSecondary( new GetIndexFilesRequest( expectedStoreId, indexId, lastTransactionId ), filesCopyAdaptor( storeFileStream, log ), addressProvider,\n                     terminationConditions.get() );\n-            storeCopyClientMonitor.finishReceivingIndexSnapshot( indexId );\n+storeCopyClientMonitor.finishReceivingIndexSnapshot( indexId );\n         }\n         storeCopyClientMonitor.finishReceivingIndexSnapshots();\n     }\n@@ -119,7 +112,7 @@ public class StoreCopyClient\n     private void persistentCallToSecondary( CatchUpRequest request, CatchUpResponseAdaptor<StoreCopyFinishedResponse> copyHandler,\n             CatchupAddressProvider addressProvider,\n             TerminationCondition terminationCondition ) throws StoreCopyFailedException\n-    {\n+{\n         TimeoutStrategy.Timeout timeout = backOffStrategy.newTimeout();\n         boolean successful;\n         do\n@@ -136,11 +129,13 @@ public class StoreCopyClient\n                 log.warn( format( \"Request failed exceptionally '%s'.\", request ), e );\n                 successful = false;\n             }\n-            if ( !successful )\n+\n+if ( !successful )\n             {\n                 terminationCondition.assertContinue();\n             }\n-            awaitAndIncrementTimeout( timeout );\n+\n+awaitAndIncrementTimeout( timeout );\n         }\n         while ( !successful );\n     }\n@@ -158,17 +153,16 @@ public class StoreCopyClient\n         }\n     }\n \n-    private PrepareStoreCopyResponse prepareStoreCopy( AdvertisedSocketAddress from, StoreId expectedStoreId, StoreFileStreamProvider storeFileStream )\n-            throws CatchUpClientException, StoreCopyFailedException\n-    {\n+    private PrepareStoreCopyResponse prepareStoreCopy( AdvertisedSocketAddress from, StoreId expectedStoreId, StoreFileStreamProvider storeFileStream ) throws CatchUpClientException, StoreCopyFailedException\n+{\n         log.info( \"Requesting store listing from: \" + from );\n-        PrepareStoreCopyResponse prepareStoreCopyResponse =\n-                catchUpClient.makeBlockingRequest( from, new PrepareStoreCopyRequest( expectedStoreId ), prepareStoreCopyAdaptor( storeFileStream, log ) );\n-        if ( prepareStoreCopyResponse.status() != PrepareStoreCopyResponse.Status.SUCCESS )\n+        PrepareStoreCopyResponse prepareStoreCopyResponse = catchUpClient.makeBlockingRequest( from, new PrepareStoreCopyRequest( expectedStoreId ), prepareStoreCopyAdaptor( storeFileStream, log ) );\n+if ( prepareStoreCopyResponse.status() != PrepareStoreCopyResponse.Status.SUCCESS )\n         {\n             throw new StoreCopyFailedException( \"Preparing store failed due to: \" + prepareStoreCopyResponse.status() );\n         }\n-        return prepareStoreCopyResponse;\n+\n+return prepareStoreCopyResponse;\n     }\n \n     public StoreId fetchStoreId( AdvertisedSocketAddress fromAddress ) throws StoreIdDownloadFailedException\n@@ -199,8 +193,7 @@ public class StoreCopyClient\n             log.info( format( \"Request was successful '%s'\", request ) );\n             return true;\n         }\n-        else if ( StoreCopyFinishedResponse.Status.E_TOO_FAR_BEHIND == responseStatus || StoreCopyFinishedResponse.Status.E_UNKNOWN == responseStatus ||\n-                StoreCopyFinishedResponse.Status.E_STORE_ID_MISMATCH == responseStatus )\n+        else if ( StoreCopyFinishedResponse.Status.E_TOO_FAR_BEHIND == responseStatus || StoreCopyFinishedResponse.Status.E_UNKNOWN == responseStatus ||StoreCopyFinishedResponse.Status.E_STORE_ID_MISMATCH == responseStatus )\n         {\n             log.warn( format( \"Request failed '%s'. With response: %s\", request, response.status() ) );\n             return false;\n@@ -210,4 +203,4 @@ public class StoreCopyClient\n             throw new StoreCopyFailedException( format( \"Request responded with an unknown response type: %s. '%s'\", responseStatus, request ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
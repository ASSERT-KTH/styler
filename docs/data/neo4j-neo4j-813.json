{
    "project_name": "neo4j-neo4j",
    "error_id": "813",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/813/Neo4jWithSocketSupportExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/813/Neo4jWithSocketSupportExtension.java\nindex 51ce2ad6296..95072d6925b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/813/Neo4jWithSocketSupportExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/813/Neo4jWithSocketSupportExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport;\n \n import org.junit.jupiter.api.extension.AfterEachCallback;\n@@ -34,7 +35,7 @@ import static org.neo4j.test.extension.testdirectory.TestDirectorySupportExtensi\n public class Neo4jWithSocketSupportExtension extends StatefulFieldExtension<Neo4jWithSocket> implements AfterEachCallback\n {\n     private static final String FIELD_KEY = \"neo4jWithSocket\";\n-    private static final ExtensionContext.Namespace NAMESPACE = ExtensionContext.Namespace.create( \"org\", \"neo4j\", FIELD_KEY );\n+    private static final ExtensionContext.Namespace NAMESPACE = ExtensionContext.Namespace.create(\"org\", \"neo4j\", FIELD_KEY);\n \n     @Override\n     protected String getFieldKey()\n@@ -49,20 +50,21 @@ public class Neo4jWithSocketSupportExtension extends StatefulFieldExtension<Neo4\n     }\n \n     @Override\n-    protected Neo4jWithSocket createField( ExtensionContext context )\n+    protected Neo4jWithSocket createField(ExtensionContext context)\n     {\n-        var testDirectory = getTestDirectory( context );\n-        return new Neo4jWithSocket( new TestDatabaseManagementServiceBuilder(), () -> testDirectory, settings -> {} );\n+        var testDirectory = getTestDirectory(context);\n+        return new Neo4jWithSocket(new TestDatabaseManagementServiceBuilder(), () -> testDirectory, settings -> {\n+        });\n     }\n \n-    public TestDirectory getTestDirectory( ExtensionContext context )\n+    public TestDirectory getTestDirectory(ExtensionContext context)\n     {\n-        var testDir = context.getStore( TEST_DIRECTORY_NAMESPACE ).get( TEST_DIRECTORY, TestDirectory.class );\n-        if ( testDir == null )\n+        var testDir = context.getStore(TEST_DIRECTORY_NAMESPACE).get(TEST_DIRECTORY, TestDirectory.class);\n+        if (testDir == null)\n         {\n             var tdClassName = TestDirectorySupportExtension.class.getSimpleName();\n             var dbClassName = DbmsSupportExtension.class.getSimpleName();\n-            throw new IllegalStateException( tdClassName + \" not in scope, make sure to add it before the relevant \" + dbClassName );\n+            throw new IllegalStateException(tdClassName + \" not in scope, make sure to add it before the relevant \" + dbClassName);\n         }\n         return testDir;\n     }\n@@ -74,8 +76,8 @@ public class Neo4jWithSocketSupportExtension extends StatefulFieldExtension<Neo4\n     }\n \n     @Override\n-    public void afterEach( ExtensionContext context )\n+    public void afterEach(ExtensionContext context)\n     {\n-        getStoredValue( context ).shutdownDatabase();\n+        getStoredValue(context).shutdownDatabase();\n     }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
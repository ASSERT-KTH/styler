{
    "project_name": "decorators-squad-eo-yaml",
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 81).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @todo #336:30min Add more tests to cover all the examples from the Yaml 1.2\n *  Specification. You can have a look at PR 335 to see how other examples have\n *  been tested. Don't forget that you do not have to write all the tests in this\n *  task -- write 1 or 2 tests, leave a todo (puzzle) and the work will continue\n *  in a future ticket.\n */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/28/SpecExamplesITCase.java\nindex 53cabf337e5..6f5edf266ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/28/SpecExamplesITCase.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2016-2020, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.eoyaml.spec;\n \n import com.amihaiemil.eoyaml.Yaml;\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/28/SpecExamplesITCase.java\nindex 53cabf337e5..4245ede3756 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/28/SpecExamplesITCase.java\n@@ -62,7 +62,7 @@ public final class SpecExamplesITCase {\n             .add(\"Sammy Sosa\")\n             .add(\"Ken Griffey\")\n             .build();\n-        System.out.println(expected);\n+System.out.println(expected);\n         final YamlSequence actual = Yaml.createYamlInput(\n             new File(\"src/test/resources/spec/spec_2_1.yml\")\n         ).readYamlSequence();\n@@ -76,28 +76,24 @@ public final class SpecExamplesITCase {\n      */\n     @Test\n     public void readSpecExampleTwoDotTwo() throws Exception {\n-\n-        final YamlMapping expected = Yaml.createYamlMappingBuilder()\n+    final YamlMapping expected = Yaml.createYamlMappingBuilder()\n             .add(\n                 \"hr\",\n                 Yaml.createYamlScalarBuilder()\n                     .addLine(\"65\")\n-                    .buildPlainScalar(\"Home runs\")\n-            )\n+                    .buildPlainScalar(\"Home runs\"))\n             .add(\n                 \"avg\",\n                 Yaml.createYamlScalarBuilder()\n                     .addLine(\"0.278\")\n-                    .buildPlainScalar(\"Batting average\")\n-            )\n+                    .buildPlainScalar(\"Batting average\"))\n             .add(\n                 \"rbi\",\n                 Yaml.createYamlScalarBuilder()\n                     .addLine(\"147\")\n-                    .buildPlainScalar(\"Runs Batted In\")\n-            )\n+                    .buildPlainScalar(\"Runs Batted In\"))\n             .build();\n-        System.out.println(expected);\n+System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n             new File(\"src/test/resources/spec/spec_2_2.yml\")\n         ).readYamlMapping();\n@@ -112,20 +108,16 @@ public final class SpecExamplesITCase {\n     @Test\n     public void readSpecExampleTwoDotThree() throws Exception {\n         final YamlMapping expected = Yaml.createYamlMappingBuilder()\n-            .add(\"american\",\n-                Yaml.createYamlSequenceBuilder()\n+            .add(\"american\", Yaml.createYamlSequenceBuilder()\n                     .add(\"Boston Red Sox\")\n                     .add(\"Detroit Tigers\")\n-                    .add(\"New York Yankees\").build()\n-            )\n-            .add(\"national\",\n-                Yaml.createYamlSequenceBuilder()\n+                    .add(\"New York Yankees\").build())\n+            .add(\"national\", Yaml.createYamlSequenceBuilder()\n                     .add(\"New York Mets\")\n                     .add(\"Chicago Cubs\")\n                     .add(\"Atlanta Braves\").build()\n             ).build();\n-\n-        System.out.println(expected);\n+System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n             new File(\"src/test/resources/spec/spec_2_3.yml\")\n         ).readYamlMapping();\n@@ -144,16 +136,14 @@ public final class SpecExamplesITCase {\n                 .add(\"name\", \"Mark McGwire\")\n                 .add(\"hr\", \"65\")\n                 .add(\"avg\", \"0.278\")\n-                .build()\n-            )\n+                .build())\n             .add(Yaml.createYamlMappingBuilder()\n                 .add(\"name\", \"Sammy Sosa\")\n                 .add(\"hr\", \"63\")\n                 .add(\"avg\", \"0.288\")\n                 .build()\n             ).build();\n-\n-        System.out.println(expected);\n+System.out.println(expected);\n         final YamlSequence actual = Yaml.createYamlInput(\n             new File(\"src/test/resources/spec/spec_2_4.yml\")\n         ).readYamlSequence();\n@@ -173,7 +163,7 @@ public final class SpecExamplesITCase {\n             .add(\"octal\", \"0o14\")\n             .add(\"hexadecimal\", \"0xC\")\n             .build();\n-        System.out.println(expected);\n+System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n             new File(\"src/test/resources/spec/spec_2_19.yml\")\n         ).readYamlMapping();\n@@ -194,7 +184,7 @@ public final class SpecExamplesITCase {\n             .add(\"negative infinity\", \"-.inf\")\n             .add(\"not a number\", \".NaN\")\n             .build();\n-        System.out.println(expected);\n+System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n             new File(\"src/test/resources/spec/spec_2_20.yml\")\n         ).readYamlMapping();\n@@ -214,11 +204,11 @@ public final class SpecExamplesITCase {\n             .add(\"spaced\", \"2001-12-14 21:59:43.10 -5\")\n             .add(\"date\", \"2002-12-14\")\n             .build();\n-        System.out.println(expected);\n+System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n             new File(\"src/test/resources/spec/spec_2_22.yml\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 295).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 228).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/28/SpecExamplesITCase.java\nindex 53cabf337e5..da9b3f05ee2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/28/SpecExamplesITCase.java\n@@ -48,6 +48,8 @@ import org.junit.Test;\n  *  task -- write 1 or 2 tests, leave a todo (puzzle) and the work will continue\n  *  in a future ticket.\n  */\n+\n+\n public final class SpecExamplesITCase {\n \n     /**\n@@ -55,18 +57,19 @@ public final class SpecExamplesITCase {\n      *\n      * @throws Exception If something goes wrong\n      */\n+\n+\n     @Test\n     public void readSpecExampleTwoDotOne() throws Exception {\n-        final YamlSequence expected = Yaml.createYamlSequenceBuilder()\n-            .add(\"Mark McGwire\")\n-            .add(\"Sammy Sosa\")\n-            .add(\"Ken Griffey\")\n-            .build();\n+        final YamlSequence expected = Yaml.createYamlSequenceBuilder().add(\"Mark McGwire\").add(\"Sammy Sosa\").add(\"Ken Griffey\").build();\n         System.out.println(expected);\n         final YamlSequence actual = Yaml.createYamlInput(\n-            new File(\"src/test/resources/spec/spec_2_1.yml\")\n-        ).readYamlSequence();\n-        MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n+                                        new File(\n+                                            \"src/test/resources/spec/spec_2_1.yml\"\n+                                        )\n+                                    ).readYamlSequence();\n+        MatcherAssert.assertThat(expected, Matchers.equalTo(\n+                                     actual));\n     }\n \n     /**\n@@ -74,34 +77,27 @@ public final class SpecExamplesITCase {\n      *\n      * @throws Exception If something goes wrong\n      */\n+\n     @Test\n     public void readSpecExampleTwoDotTwo() throws Exception {\n-\n-        final YamlMapping expected = Yaml.createYamlMappingBuilder()\n-            .add(\n-                \"hr\",\n-                Yaml.createYamlScalarBuilder()\n-                    .addLine(\"65\")\n-                    .buildPlainScalar(\"Home runs\")\n-            )\n-            .add(\n-                \"avg\",\n-                Yaml.createYamlScalarBuilder()\n-                    .addLine(\"0.278\")\n-                    .buildPlainScalar(\"Batting average\")\n-            )\n-            .add(\n-                \"rbi\",\n-                Yaml.createYamlScalarBuilder()\n-                    .addLine(\"147\")\n-                    .buildPlainScalar(\"Runs Batted In\")\n-            )\n-            .build();\n+        final YamlMapping expected = Yaml.createYamlMappingBuilder().add(\n+                                         \"hr\",\n+                                         Yaml.createYamlScalarBuilder().addLine(\"65\").buildPlainScalar(\"Home runs\")\n+                                     ).add(\n+                                         \"avg\",\n+                                         Yaml.createYamlScalarBuilder().addLine(\"0.278\").buildPlainScalar(\"Batting average\")\n+                                     ).add(\n+                                         \"rbi\",\n+                                         Yaml.createYamlScalarBuilder().addLine(\"147\").buildPlainScalar(\"Runs Batted In\")\n+                                     ).build();\n         System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n-            new File(\"src/test/resources/spec/spec_2_2.yml\")\n-        ).readYamlMapping();\n-        MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n+                                       new File(\n+                                           \"src/test/resources/spec/spec_2_2.yml\"\n+                                       )\n+                                   ).readYamlMapping();\n+        MatcherAssert.assertThat(expected, Matchers.equalTo(\n+                                     actual));\n     }\n \n     /**\n@@ -109,27 +105,24 @@ public final class SpecExamplesITCase {\n      *\n      * @throws Exception If something goes wrong\n      */\n+\n     @Test\n     public void readSpecExampleTwoDotThree() throws Exception {\n-        final YamlMapping expected = Yaml.createYamlMappingBuilder()\n-            .add(\"american\",\n-                Yaml.createYamlSequenceBuilder()\n-                    .add(\"Boston Red Sox\")\n-                    .add(\"Detroit Tigers\")\n-                    .add(\"New York Yankees\").build()\n-            )\n-            .add(\"national\",\n-                Yaml.createYamlSequenceBuilder()\n-                    .add(\"New York Mets\")\n-                    .add(\"Chicago Cubs\")\n-                    .add(\"Atlanta Braves\").build()\n-            ).build();\n-\n+        final YamlMapping expected = Yaml.createYamlMappingBuilder().add(\n+                                         \"american\",\n+                                         Yaml.createYamlSequenceBuilder().add(\"Boston Red Sox\").add(\"Detroit Tigers\").add(\"New York Yankees\").build()\n+                                     ).add(\n+                                         \"national\",\n+                                         Yaml.createYamlSequenceBuilder().add(\"New York Mets\").add(\"Chicago Cubs\").add(\"Atlanta Braves\").build()\n+                                     ).build();\n         System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n-            new File(\"src/test/resources/spec/spec_2_3.yml\")\n-        ).readYamlMapping();\n-        MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n+                                       new File(\n+                                           \"src/test/resources/spec/spec_2_3.yml\"\n+                                       )\n+                                   ).readYamlMapping();\n+        MatcherAssert.assertThat(expected, Matchers.equalTo(\n+                                     actual));\n     }\n \n     /**\n@@ -137,27 +130,18 @@ public final class SpecExamplesITCase {\n      *\n      * @throws Exception If something goes wrong\n      */\n+\n     @Test\n     public void readFourthSpecExample() throws Exception {\n-        final YamlSequence expected = Yaml.createYamlSequenceBuilder()\n-            .add(Yaml.createYamlMappingBuilder()\n-                .add(\"name\", \"Mark McGwire\")\n-                .add(\"hr\", \"65\")\n-                .add(\"avg\", \"0.278\")\n-                .build()\n-            )\n-            .add(Yaml.createYamlMappingBuilder()\n-                .add(\"name\", \"Sammy Sosa\")\n-                .add(\"hr\", \"63\")\n-                .add(\"avg\", \"0.288\")\n-                .build()\n-            ).build();\n-\n+        final YamlSequence expected = Yaml.createYamlSequenceBuilder().add(Yaml.createYamlMappingBuilder().add(\"name\", \"Mark McGwire\").add(\"hr\", \"65\").add(\"avg\", \"0.278\").build()).add(Yaml.createYamlMappingBuilder().add(\"name\", \"Sammy Sosa\").add(\"hr\", \"63\").add(\"avg\", \"0.288\").build()).build();\n         System.out.println(expected);\n         final YamlSequence actual = Yaml.createYamlInput(\n-            new File(\"src/test/resources/spec/spec_2_4.yml\")\n-        ).readYamlSequence();\n-        MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n+                                        new File(\n+                                            \"src/test/resources/spec/spec_2_4.yml\"\n+                                        )\n+                                    ).readYamlSequence();\n+        MatcherAssert.assertThat(expected, Matchers.equalTo(\n+                                     actual));\n     }\n \n     /**\n@@ -165,19 +149,18 @@ public final class SpecExamplesITCase {\n      *\n      * @throws Exception If something goes wrong\n      */\n+\n     @Test\n     public void readSpecExampleTwoDotNineteen() throws Exception {\n-        final YamlMapping expected = Yaml.createYamlMappingBuilder()\n-            .add(\"canonical\", \"12345\")\n-            .add(\"decimal\", \"+12345\")\n-            .add(\"octal\", \"0o14\")\n-            .add(\"hexadecimal\", \"0xC\")\n-            .build();\n+        final YamlMapping expected = Yaml.createYamlMappingBuilder().add(\"canonical\", \"12345\").add(\"decimal\", \"+12345\").add(\"octal\", \"0o14\").add(\"hexadecimal\", \"0xC\").build();\n         System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n-            new File(\"src/test/resources/spec/spec_2_19.yml\")\n-        ).readYamlMapping();\n-        MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n+                                       new File(\n+                                           \"src/test/resources/spec/spec_2_19.yml\"\n+                                       )\n+                                   ).readYamlMapping();\n+        MatcherAssert.assertThat(expected, Matchers.equalTo(\n+                                     actual));\n     }\n \n     /**\n@@ -185,20 +168,18 @@ public final class SpecExamplesITCase {\n      *\n      * @throws Exception If something goes wrong\n      */\n+\n     @Test\n     public void readSpecExampleTwoDotTwenty() throws Exception {\n-        final YamlMapping expected = Yaml.createYamlMappingBuilder()\n-            .add(\"canonical\", \"1.23015e+3\")\n-            .add(\"exponential\", \"12.3015e+02\")\n-            .add(\"fixed\", \"1230.15\")\n-            .add(\"negative infinity\", \"-.inf\")\n-            .add(\"not a number\", \".NaN\")\n-            .build();\n+        final YamlMapping expected = Yaml.createYamlMappingBuilder().add(\"canonical\", \"1.23015e+3\").add(\"exponential\", \"12.3015e+02\").add(\"fixed\", \"1230.15\").add(\"negative infinity\", \"-.inf\").add(\"not a number\", \".NaN\").build();\n         System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n-            new File(\"src/test/resources/spec/spec_2_20.yml\")\n-        ).readYamlMapping();\n-        MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n+                                       new File(\n+                                           \"src/test/resources/spec/spec_2_20.yml\"\n+                                       )\n+                                   ).readYamlMapping();\n+        MatcherAssert.assertThat(expected, Matchers.equalTo(\n+                                     actual));\n     }\n \n     /**\n@@ -206,19 +187,18 @@ public final class SpecExamplesITCase {\n      *\n      * @throws Exception If something goes wrong\n      */\n+\n     @Test\n     public void readSpecExampleTwoDotTwentyTwo() throws Exception {\n-        final YamlMapping expected = Yaml.createYamlMappingBuilder()\n-            .add(\"canonical\", \"2001-12-15T02:59:43.1Z\")\n-            .add(\"iso8601\", \"2001-12-14t21:59:43.10-05:00\")\n-            .add(\"spaced\", \"2001-12-14 21:59:43.10 -5\")\n-            .add(\"date\", \"2002-12-14\")\n-            .build();\n+        final YamlMapping expected = Yaml.createYamlMappingBuilder().add(\"canonical\", \"2001-12-15T02:59:43.1Z\").add(\"iso8601\", \"2001-12-14t21:59:43.10-05:00\").add(\"spaced\", \"2001-12-14 21:59:43.10 -5\").add(\"date\", \"2002-12-14\").build();\n         System.out.println(expected);\n         final YamlMapping actual = Yaml.createYamlInput(\n-            new File(\"src/test/resources/spec/spec_2_22.yml\")\n-        ).readYamlMapping();\n-        MatcherAssert.assertThat(expected, Matchers.equalTo(actual));\n+                                       new File(\n+                                           \"src/test/resources/spec/spec_2_22.yml\"\n+                                       )\n+                                   ).readYamlMapping();\n+        MatcherAssert.assertThat(expected, Matchers.equalTo(\n+                                     actual));\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 126
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/28/SpecExamplesITCase.java\nindex 53cabf337e5..33acb5247a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/28/SpecExamplesITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/28/SpecExamplesITCase.java\n@@ -34,7 +34,6 @@ import java.io.File;\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n import org.junit.Test;\n-\n /**\n  * It tests the spec 1.2 examples.\n  *\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
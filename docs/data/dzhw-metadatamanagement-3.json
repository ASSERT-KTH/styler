{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "79",
                "severity": "error",
                "message": "'}' at column 79 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidFilterExpressionLanguage constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "column": "79",
                    "severity": "error",
                    "message": "'}' at column 79 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/3/ValidFilterExpressionLanguageValidator.java\nindex 121957813ad..0aff63ed94d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/3/ValidFilterExpressionLanguageValidator.java\n@@ -10,24 +10,24 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.FilterExpression\n /**\n  * Validator for the filter expression languages of a variable. Only values from the\n  * {@link FilterExpressionLanguages} class are allowed.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n public class ValidFilterExpressionLanguageValidator\n     implements ConstraintValidator<ValidFilterExpressionLanguage, String> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidFilterExpressionLanguage constraintAnnotation) {}\n+  public void initialize(ValidFilterExpressionLanguage constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n@@ -37,7 +37,7 @@ public class ValidFilterExpressionLanguageValidator\n     if (Strings.isNullOrEmpty(filterExpressionLanguage)) {\n       return true;\n     }\n-     // expression language is okay\n+    // expression language is okay\n     return FilterExpressionLanguages.ALL.contains(filterExpressionLanguage);\n   }\n \n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "column": "79",
                    "severity": "error",
                    "message": "'}' at column 79 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/3/ValidFilterExpressionLanguageValidator.java\nindex 121957813ad..331a09edff0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/3/ValidFilterExpressionLanguageValidator.java\n@@ -33,12 +33,11 @@ public class ValidFilterExpressionLanguageValidator\n    */\n   @Override\n   public boolean isValid(String filterExpressionLanguage, ConstraintValidatorContext context) {\n-\n-    if (Strings.isNullOrEmpty(filterExpressionLanguage)) {\n+  if (Strings.isNullOrEmpty(filterExpressionLanguage)) {\n       return true;\n     }\n      // expression language is okay\n     return FilterExpressionLanguages.ALL.contains(filterExpressionLanguage);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/3/ValidFilterExpressionLanguageValidator.java\nindex 121957813ad..97f4d3e8ef4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/3/ValidFilterExpressionLanguageValidator.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import com.google.common.base.Strings;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.FilterExpressionLanguages;\n \n /**\n@@ -14,16 +12,20 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.FilterExpression\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidFilterExpressionLanguageValidator\n-    implements ConstraintValidator<ValidFilterExpressionLanguage, String> {\n+\n+\n+public class ValidFilterExpressionLanguageValidator implements ConstraintValidator<ValidFilterExpressionLanguage, String> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidFilterExpressionLanguage constraintAnnotation) {}\n+  public void initialize(ValidFilterExpressionLanguage constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -31,14 +33,16 @@ public class ValidFilterExpressionLanguageValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(String filterExpressionLanguage, ConstraintValidatorContext context) {\n \n+\n+  @Override\n+  public boolean isValid(String filterExpressionLanguage,\n+    ConstraintValidatorContext context) {\n     if (Strings.isNullOrEmpty(filterExpressionLanguage)) {\n       return true;\n     }\n      // expression language is okay\n+\n     return FilterExpressionLanguages.ALL.contains(filterExpressionLanguage);\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "column": "79",
                    "severity": "error",
                    "message": "'}' at column 79 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "column": "79",
                    "severity": "error",
                    "message": "'}' at column 79 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/3/ValidFilterExpressionLanguageValidator.java\nindex 121957813ad..a5904297c5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/3/ValidFilterExpressionLanguageValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/3/ValidFilterExpressionLanguageValidator.java\n@@ -24,7 +24,6 @@ public class ValidFilterExpressionLanguageValidator\n    */\n   @Override\n   public void initialize(ValidFilterExpressionLanguage constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
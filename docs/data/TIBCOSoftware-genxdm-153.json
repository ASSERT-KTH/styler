{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "153",
    "information": {
        "errors": [
            {
                "line": "96",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    implements XPathExtendToolkit\n{\n\t/**\n\t * Initialize these once at this toolkit level.\n\t */\n\tprivate final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "97",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/153/XPathToolkitImpl.java\nindex ff81838157e..d5ab116ae5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/153/XPathToolkitImpl.java\n@@ -93,10 +93,10 @@ import org.genxdm.xpath.v10.extend.XPathExtendToolkit;\n final class XPathToolkitImpl\r\n     implements XPathExtendToolkit\r\n {\r\n-\t/**\r\n+/**\r\n \t * Initialize these once at this toolkit level.\r\n \t */\r\n-\tprivate final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n+ private final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n \tprivate final HashMap<String, Function> functionTable = new HashMap<String, Function>();\r\n \tprivate final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\r\n \r\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/153/XPathToolkitImpl.java\nindex ff81838157e..a8b677a5564 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/153/XPathToolkitImpl.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10;\r\n \r\n import java.util.HashMap;\r\n@@ -91,113 +92,110 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n import org.genxdm.xpath.v10.extend.XPathExtendToolkit;\r\n \r\n final class XPathToolkitImpl\r\n-    implements XPathExtendToolkit\r\n-{\r\n-\t/**\r\n-\t * Initialize these once at this toolkit level.\r\n-\t */\r\n-\tprivate final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n-\tprivate final HashMap<String, Function> functionTable = new HashMap<String, Function>();\r\n-\tprivate final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\r\n-\r\n-\tpublic XPathToolkitImpl()\r\n-\t{\r\n-\t\taxisTable.put(\"child\", new ChildAxisExpr());\r\n-\t\taxisTable.put(\"parent\", new ParentAxisExpr());\r\n-\t\taxisTable.put(\"self\", new SelfAxisExpr());\r\n-\t\taxisTable.put(\"attribute\", new AttributeAxisExpr());\r\n-\t\taxisTable.put(\"namespace\", new NamespaceAxisExpr());\r\n-\t\taxisTable.put(\"descendant-or-self\", new DescendantOrSelfAxisExpr());\r\n-\t\taxisTable.put(\"descendant\", new DescendantAxisExpr());\r\n-\t\taxisTable.put(\"ancestor-or-self\", new AncestorOrSelfAxisExpr());\r\n-\t\taxisTable.put(\"ancestor\", new AncestorAxisExpr());\r\n-\t\taxisTable.put(\"following-sibling\", new FollowingSiblingAxisExpr());\r\n-\t\taxisTable.put(\"preceding-sibling\", new PrecedingSiblingAxisExpr());\r\n-\t\taxisTable.put(\"following\", new FollowingAxisExpr());\r\n-\t\taxisTable.put(\"preceding\", new PrecedingAxisExpr());\r\n-\r\n-\t\t// TODO - the function table is exactly the same, regardless of parameters, so it should\r\n-\t\t// be created in a static.\r\n-\t\tfunctionTable.put(\"boolean\", new BooleanFunction());\r\n-\t\tfunctionTable.put(\"ceiling\", new CeilingFunction());\r\n-\t\tfunctionTable.put(\"concat\", new ConcatFunction());\r\n-\t\tfunctionTable.put(\"contains\", new ContainsFunction());\r\n-\t\tfunctionTable.put(\"count\", new CountFunction());\r\n-\t\tfunctionTable.put(\"false\", new FalseFunction());\r\n-\t\tfunctionTable.put(\"floor\", new FloorFunction());\r\n-\t\tfunctionTable.put(\"format-number\", new FormatNumberFunction());\r\n-\t\tfunctionTable.put(\"id\", new IdFunction());\r\n-\t\tfunctionTable.put(\"lang\", new LangFunction());\r\n-\t\tfunctionTable.put(\"last\", new LastFunction());\r\n-\t\tfunctionTable.put(\"local-name\", new LocalNameFunction());\r\n-\t\tfunctionTable.put(\"namespace-uri\", new NamespaceUriFunction());\r\n-\t\tfunctionTable.put(\"normalize-space\", new NormalizeSpaceFunction());\r\n-\t\tfunctionTable.put(\"not\", new NotFunction());\r\n-\t\tfunctionTable.put(\"number\", new NumberFunction());\r\n-\t\tfunctionTable.put(\"position\", new PositionFunction());\r\n-\t\tfunctionTable.put(\"name\", new NameFunction());\r\n-\t\tfunctionTable.put(\"round\", new RoundFunction());\r\n-\t\tfunctionTable.put(\"starts-with\", new StartsWithFunction());\r\n-\t\tfunctionTable.put(\"string\", new StringFunction());\r\n-\t\tfunctionTable.put(\"string-length\", new StringLengthFunction());\r\n-\t\tfunctionTable.put(\"substring\", new SubstringFunction());\r\n-\t\tfunctionTable.put(\"substring-after\", new SubstringAfterFunction());\r\n-\t\tfunctionTable.put(\"substring-before\", new SubstringBeforeFunction());\r\n-\t\tfunctionTable.put(\"sum\", new SumFunction());\r\n-\t\tfunctionTable.put(\"system-property\", new SystemPropertyFunction());\r\n-\t\tfunctionTable.put(\"translate\", new TranslateFunction());\r\n-\t\tfunctionTable.put(\"true\", new TrueFunction());\r\n-\r\n-\t\trelationTable.put(\"=\", new EqualsRelation());\r\n-\t\trelationTable.put(\"!=\", new NotEqualsRelation());\r\n-\t\trelationTable.put(\"==\", new EqualsRelation());\r\n-\t\trelationTable.put(\">=\", new GreaterThanEqualsRelation());\r\n-\t\trelationTable.put(\">\", new GreaterThanRelation());\r\n-\t}\r\n-\r\n-\tpublic XPathCompiler newXPathCompiler()\r\n-\t{\r\n-\t\treturn new XPathCompilerImpl(axisTable, functionTable, relationTable);\r\n-\t}\r\n-\r\n-\tpublic <N> ExprContextDynamicArgs<N> newExprContextDynamicArgs()\r\n-\t{\r\n-\t\treturn new ExprContextDynamicArgsImpl<N>();\r\n-\t}\r\n-\r\n-\tpublic ExprContextStatic newExprContextStaticArgs()\r\n-\t{\r\n-\t\treturn new ExprContextStaticImpl();\r\n-\t}\r\n-\r\n-\tpublic Function declareFunction(String name, Function newFunction) {\r\n-\t\treturn functionTable.put(name, newFunction);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapNodeSetExpr(\r\n-\t\t\tNodeSetExpr nodeSetExpr, int optimizeFlags) {\r\n-\t\treturn WrappedNodeSetExpr.wrap(nodeSetExpr, optimizeFlags);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapBooleanExpr(BooleanExpr expr) {\r\n-\t\treturn WrappedBooleanExpr.wrap(expr);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapNumberExpr(NumberExpr expr) {\r\n-\t\treturn WrappedNumberExpr.wrap(expr);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapStringExpr(StringExpr expr) {\r\n-\t\treturn WrappedStringExpr.wrap(expr);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapVariantExpr(VariantExpr expr) {\r\n-\t\treturn WrappedVariantExpr.wrap(expr);\r\n-\t}\r\n-\t\r\n+    implements XPathExtendToolkit {\r\n+    /**\r\n+     * Initialize these once at this toolkit level.\r\n+     */\r\n+    private final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n+\r\n+    private final HashMap<String, Function> functionTable = new HashMap<String, Function>();\r\n+\r\n+    private final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\r\n+\r\n+    public XPathToolkitImpl() {\r\n+        axisTable.put(\"child\", new ChildAxisExpr());\r\n+        axisTable.put(\"parent\", new ParentAxisExpr());\r\n+        axisTable.put(\"self\", new SelfAxisExpr());\r\n+        axisTable.put(\"attribute\", new AttributeAxisExpr());\r\n+        axisTable.put(\"namespace\", new NamespaceAxisExpr());\r\n+        axisTable.put(\"descendant-or-self\", new DescendantOrSelfAxisExpr());\r\n+        axisTable.put(\"descendant\", new DescendantAxisExpr());\r\n+        axisTable.put(\"ancestor-or-self\", new AncestorOrSelfAxisExpr());\r\n+        axisTable.put(\"ancestor\", new AncestorAxisExpr());\r\n+        axisTable.put(\"following-sibling\", new FollowingSiblingAxisExpr());\r\n+        axisTable.put(\"preceding-sibling\", new PrecedingSiblingAxisExpr());\r\n+        axisTable.put(\"following\", new FollowingAxisExpr());\r\n+        axisTable.put(\"preceding\", new PrecedingAxisExpr());\r\n+\r\n+        // TODO - the function table is exactly the same, regardless of parameters, so it should\r\n+        // be created in a static.\r\n+        functionTable.put(\"boolean\", new BooleanFunction());\r\n+        functionTable.put(\"ceiling\", new CeilingFunction());\r\n+        functionTable.put(\"concat\", new ConcatFunction());\r\n+        functionTable.put(\"contains\", new ContainsFunction());\r\n+        functionTable.put(\"count\", new CountFunction());\r\n+        functionTable.put(\"false\", new FalseFunction());\r\n+        functionTable.put(\"floor\", new FloorFunction());\r\n+        functionTable.put(\"format-number\", new FormatNumberFunction());\r\n+        functionTable.put(\"id\", new IdFunction());\r\n+        functionTable.put(\"lang\", new LangFunction());\r\n+        functionTable.put(\"last\", new LastFunction());\r\n+        functionTable.put(\"local-name\", new LocalNameFunction());\r\n+        functionTable.put(\"namespace-uri\", new NamespaceUriFunction());\r\n+        functionTable.put(\"normalize-space\", new NormalizeSpaceFunction());\r\n+        functionTable.put(\"not\", new NotFunction());\r\n+        functionTable.put(\"number\", new NumberFunction());\r\n+        functionTable.put(\"position\", new PositionFunction());\r\n+        functionTable.put(\"name\", new NameFunction());\r\n+        functionTable.put(\"round\", new RoundFunction());\r\n+        functionTable.put(\"starts-with\", new StartsWithFunction());\r\n+        functionTable.put(\"string\", new StringFunction());\r\n+        functionTable.put(\"string-length\", new StringLengthFunction());\r\n+        functionTable.put(\"substring\", new SubstringFunction());\r\n+        functionTable.put(\"substring-after\", new SubstringAfterFunction());\r\n+        functionTable.put(\"substring-before\", new SubstringBeforeFunction());\r\n+        functionTable.put(\"sum\", new SumFunction());\r\n+        functionTable.put(\"system-property\", new SystemPropertyFunction());\r\n+        functionTable.put(\"translate\", new TranslateFunction());\r\n+        functionTable.put(\"true\", new TrueFunction());\r\n+\r\n+        relationTable.put(\"=\", new EqualsRelation());\r\n+        relationTable.put(\"!=\", new NotEqualsRelation());\r\n+        relationTable.put(\"==\", new EqualsRelation());\r\n+        relationTable.put(\">=\", new GreaterThanEqualsRelation());\r\n+        relationTable.put(\">\", new GreaterThanRelation());\r\n+    }\r\n+\r\n+    public XPathCompiler newXPathCompiler() {\r\n+        return new XPathCompilerImpl(axisTable, functionTable, relationTable);\r\n+    }\r\n+\r\n+    public <N> ExprContextDynamicArgs<N> newExprContextDynamicArgs() {\r\n+        return new ExprContextDynamicArgsImpl<N>();\r\n+    }\r\n+\r\n+    public ExprContextStatic newExprContextStaticArgs() {\r\n+        return new ExprContextStaticImpl();\r\n+    }\r\n+\r\n+    public Function declareFunction(String name, Function newFunction) {\r\n+        return functionTable.put(name, newFunction);\r\n+    }\r\n+\r\n+    @Override\r\n+    public ConvertibleExpr wrapNodeSetExpr(\r\n+        NodeSetExpr nodeSetExpr, int optimizeFlags) {\r\n+        return WrappedNodeSetExpr.wrap(nodeSetExpr, optimizeFlags);\r\n+    }\r\n+\r\n+    @Override\r\n+    public ConvertibleExpr wrapBooleanExpr(BooleanExpr expr) {\r\n+        return WrappedBooleanExpr.wrap(expr);\r\n+    }\r\n+\r\n+    @Override\r\n+    public ConvertibleExpr wrapNumberExpr(NumberExpr expr) {\r\n+        return WrappedNumberExpr.wrap(expr);\r\n+    }\r\n+\r\n+    @Override\r\n+    public ConvertibleExpr wrapStringExpr(StringExpr expr) {\r\n+        return WrappedStringExpr.wrap(expr);\r\n+    }\r\n+\r\n+    @Override\r\n+    public ConvertibleExpr wrapVariantExpr(VariantExpr expr) {\r\n+        return WrappedVariantExpr.wrap(expr);\r\n+    }\r\n+\r\n }\r\n",
            "diff_size": 111
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "97",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/153/XPathToolkitImpl.java\nindex ff81838157e..1c819dd09b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/153/XPathToolkitImpl.java\n@@ -92,8 +92,8 @@ import org.genxdm.xpath.v10.extend.XPathExtendToolkit;\n \r\n final class XPathToolkitImpl\r\n     implements XPathExtendToolkit\r\n-{\r\n-\t/**\r\n+{\n+    /**\r\n \t * Initialize these once at this toolkit level.\r\n \t */\r\n \tprivate final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n@@ -101,8 +101,8 @@ final class XPathToolkitImpl\n \tprivate final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\r\n \r\n \tpublic XPathToolkitImpl()\r\n-\t{\r\n-\t\taxisTable.put(\"child\", new ChildAxisExpr());\r\n+\t{\n+    axisTable.put(\"child\", new ChildAxisExpr());\r\n \t\taxisTable.put(\"parent\", new ParentAxisExpr());\r\n \t\taxisTable.put(\"self\", new SelfAxisExpr());\r\n \t\taxisTable.put(\"attribute\", new AttributeAxisExpr());\r\n@@ -152,52 +152,51 @@ final class XPathToolkitImpl\n \t\trelationTable.put(\"!=\", new NotEqualsRelation());\r\n \t\trelationTable.put(\"==\", new EqualsRelation());\r\n \t\trelationTable.put(\">=\", new GreaterThanEqualsRelation());\r\n-\t\trelationTable.put(\">\", new GreaterThanRelation());\r\n-\t}\r\n+\t\trelationTable.put(\">\", new GreaterThanRelation());\n+    }\r\n \r\n \tpublic XPathCompiler newXPathCompiler()\r\n-\t{\r\n-\t\treturn new XPathCompilerImpl(axisTable, functionTable, relationTable);\r\n-\t}\r\n+\t{\n+    return new XPathCompilerImpl(axisTable, functionTable, relationTable);\n+    }\r\n \r\n \tpublic <N> ExprContextDynamicArgs<N> newExprContextDynamicArgs()\r\n-\t{\r\n-\t\treturn new ExprContextDynamicArgsImpl<N>();\r\n-\t}\r\n+\t{\n+    return new ExprContextDynamicArgsImpl<N>();\n+    }\r\n \r\n \tpublic ExprContextStatic newExprContextStaticArgs()\r\n-\t{\r\n-\t\treturn new ExprContextStaticImpl();\r\n-\t}\r\n+\t{\n+    return new ExprContextStaticImpl();\n+    }\r\n \r\n-\tpublic Function declareFunction(String name, Function newFunction) {\r\n-\t\treturn functionTable.put(name, newFunction);\r\n-\t}\r\n+\tpublic Function declareFunction(String name, Function newFunction) {\n+    return functionTable.put(name, newFunction);\n+    }\r\n \r\n \t@Override\r\n-\tpublic ConvertibleExpr wrapNodeSetExpr(\r\n-\t\t\tNodeSetExpr nodeSetExpr, int optimizeFlags) {\r\n-\t\treturn WrappedNodeSetExpr.wrap(nodeSetExpr, optimizeFlags);\r\n-\t}\r\n+\tpublic ConvertibleExpr wrapNodeSetExpr(NodeSetExpr nodeSetExpr, int optimizeFlags) {\n+    return WrappedNodeSetExpr.wrap(nodeSetExpr, optimizeFlags);\n+    }\r\n \r\n \t@Override\r\n-\tpublic ConvertibleExpr wrapBooleanExpr(BooleanExpr expr) {\r\n-\t\treturn WrappedBooleanExpr.wrap(expr);\r\n-\t}\r\n+\tpublic ConvertibleExpr wrapBooleanExpr(BooleanExpr expr) {\n+    return WrappedBooleanExpr.wrap(expr);\n+    }\r\n \r\n \t@Override\r\n-\tpublic ConvertibleExpr wrapNumberExpr(NumberExpr expr) {\r\n-\t\treturn WrappedNumberExpr.wrap(expr);\r\n-\t}\r\n+\tpublic ConvertibleExpr wrapNumberExpr(NumberExpr expr) {\n+    return WrappedNumberExpr.wrap(expr);\n+    }\r\n \r\n \t@Override\r\n-\tpublic ConvertibleExpr wrapStringExpr(StringExpr expr) {\r\n-\t\treturn WrappedStringExpr.wrap(expr);\r\n-\t}\r\n+\tpublic ConvertibleExpr wrapStringExpr(StringExpr expr) {\n+    return WrappedStringExpr.wrap(expr);\n+    }\r\n \r\n \t@Override\r\n-\tpublic ConvertibleExpr wrapVariantExpr(VariantExpr expr) {\r\n-\t\treturn WrappedVariantExpr.wrap(expr);\r\n-\t}\r\n+\tpublic ConvertibleExpr wrapVariantExpr(VariantExpr expr) {\n+    return WrappedVariantExpr.wrap(expr);\n+    }\r\n \t\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/153/XPathToolkitImpl.java\nindex ff81838157e..49329dc1b8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/153/XPathToolkitImpl.java\n@@ -18,186 +18,187 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10;\r\n-\r\n-import java.util.HashMap;\r\n-\r\n-import org.genxdm.processor.xpath.v10.expressions.AncestorAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.AncestorOrSelfAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.AttributeAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.AxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.ChildAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.DescendantAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.DescendantOrSelfAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.ExprContextDynamicArgsImpl;\r\n-import org.genxdm.processor.xpath.v10.expressions.ExprContextStaticImpl;\r\n-import org.genxdm.processor.xpath.v10.expressions.FollowingAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.FollowingSiblingAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.NamespaceAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.ParentAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.PrecedingAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.PrecedingSiblingAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.SelfAxisExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.WrappedBooleanExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.WrappedNodeSetExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.WrappedNumberExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.WrappedStringExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.WrappedVariantExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.XPathCompilerImpl;\r\n-import org.genxdm.processor.xpath.v10.functions.BooleanFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.CeilingFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.ConcatFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.ContainsFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.CountFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.FalseFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.FloorFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.FormatNumberFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.IdFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.LangFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.LastFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.LocalNameFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.NameFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.NamespaceUriFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.NormalizeSpaceFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.NotFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.NumberFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.PositionFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.RoundFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.StartsWithFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.StringFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.StringLengthFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.SubstringAfterFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.SubstringBeforeFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.SubstringFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.SumFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.SystemPropertyFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.TranslateFunction;\r\n-import org.genxdm.processor.xpath.v10.functions.TrueFunction;\r\n-import org.genxdm.processor.xpath.v10.relations.EqualsRelation;\r\n-import org.genxdm.processor.xpath.v10.relations.GreaterThanEqualsRelation;\r\n-import org.genxdm.processor.xpath.v10.relations.GreaterThanRelation;\r\n-import org.genxdm.processor.xpath.v10.relations.NotEqualsRelation;\r\n-import org.genxdm.processor.xpath.v10.relations.Relation;\r\n-import org.genxdm.xpath.v10.BooleanExpr;\r\n-import org.genxdm.xpath.v10.ExprContextDynamicArgs;\r\n-import org.genxdm.xpath.v10.ExprContextStatic;\r\n-import org.genxdm.xpath.v10.NodeSetExpr;\r\n-import org.genxdm.xpath.v10.NumberExpr;\r\n-import org.genxdm.xpath.v10.StringExpr;\r\n-import org.genxdm.xpath.v10.VariantExpr;\r\n-import org.genxdm.xpath.v10.XPathCompiler;\r\n-import org.genxdm.xpath.v10.extend.Function;\r\n-import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n-import org.genxdm.xpath.v10.extend.XPathExtendToolkit;\r\n-\r\n-final class XPathToolkitImpl\r\n-    implements XPathExtendToolkit\r\n+package org.genxdm.processor.xpath.v10;\n+\n+import java.util.HashMap;\n+import org.genxdm.processor.xpath.v10.expressions.AncestorAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.AncestorOrSelfAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.AttributeAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.AxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.ChildAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.DescendantAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.DescendantOrSelfAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.ExprContextDynamicArgsImpl;\n+import org.genxdm.processor.xpath.v10.expressions.ExprContextStaticImpl;\n+import org.genxdm.processor.xpath.v10.expressions.FollowingAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.FollowingSiblingAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.NamespaceAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.ParentAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.PrecedingAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.PrecedingSiblingAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.SelfAxisExpr;\n+import org.genxdm.processor.xpath.v10.expressions.WrappedBooleanExpr;\n+import org.genxdm.processor.xpath.v10.expressions.WrappedNodeSetExpr;\n+import org.genxdm.processor.xpath.v10.expressions.WrappedNumberExpr;\n+import org.genxdm.processor.xpath.v10.expressions.WrappedStringExpr;\n+import org.genxdm.processor.xpath.v10.expressions.WrappedVariantExpr;\n+import org.genxdm.processor.xpath.v10.expressions.XPathCompilerImpl;\n+import org.genxdm.processor.xpath.v10.functions.BooleanFunction;\n+import org.genxdm.processor.xpath.v10.functions.CeilingFunction;\n+import org.genxdm.processor.xpath.v10.functions.ConcatFunction;\n+import org.genxdm.processor.xpath.v10.functions.ContainsFunction;\n+import org.genxdm.processor.xpath.v10.functions.CountFunction;\n+import org.genxdm.processor.xpath.v10.functions.FalseFunction;\n+import org.genxdm.processor.xpath.v10.functions.FloorFunction;\n+import org.genxdm.processor.xpath.v10.functions.FormatNumberFunction;\n+import org.genxdm.processor.xpath.v10.functions.IdFunction;\n+import org.genxdm.processor.xpath.v10.functions.LangFunction;\n+import org.genxdm.processor.xpath.v10.functions.LastFunction;\n+import org.genxdm.processor.xpath.v10.functions.LocalNameFunction;\n+import org.genxdm.processor.xpath.v10.functions.NameFunction;\n+import org.genxdm.processor.xpath.v10.functions.NamespaceUriFunction;\n+import org.genxdm.processor.xpath.v10.functions.NormalizeSpaceFunction;\n+import org.genxdm.processor.xpath.v10.functions.NotFunction;\n+import org.genxdm.processor.xpath.v10.functions.NumberFunction;\n+import org.genxdm.processor.xpath.v10.functions.PositionFunction;\n+import org.genxdm.processor.xpath.v10.functions.RoundFunction;\n+import org.genxdm.processor.xpath.v10.functions.StartsWithFunction;\n+import org.genxdm.processor.xpath.v10.functions.StringFunction;\n+import org.genxdm.processor.xpath.v10.functions.StringLengthFunction;\n+import org.genxdm.processor.xpath.v10.functions.SubstringAfterFunction;\n+import org.genxdm.processor.xpath.v10.functions.SubstringBeforeFunction;\n+import org.genxdm.processor.xpath.v10.functions.SubstringFunction;\n+import org.genxdm.processor.xpath.v10.functions.SumFunction;\n+import org.genxdm.processor.xpath.v10.functions.SystemPropertyFunction;\n+import org.genxdm.processor.xpath.v10.functions.TranslateFunction;\n+import org.genxdm.processor.xpath.v10.functions.TrueFunction;\n+import org.genxdm.processor.xpath.v10.relations.EqualsRelation;\n+import org.genxdm.processor.xpath.v10.relations.GreaterThanEqualsRelation;\n+import org.genxdm.processor.xpath.v10.relations.GreaterThanRelation;\n+import org.genxdm.processor.xpath.v10.relations.NotEqualsRelation;\n+import org.genxdm.processor.xpath.v10.relations.Relation;\n+import org.genxdm.xpath.v10.BooleanExpr;\n+import org.genxdm.xpath.v10.ExprContextDynamicArgs;\n+import org.genxdm.xpath.v10.ExprContextStatic;\n+import org.genxdm.xpath.v10.NodeSetExpr;\n+import org.genxdm.xpath.v10.NumberExpr;\n+import org.genxdm.xpath.v10.StringExpr;\n+import org.genxdm.xpath.v10.VariantExpr;\n+import org.genxdm.xpath.v10.XPathCompiler;\n+import org.genxdm.xpath.v10.extend.Function;\n+import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n+import org.genxdm.xpath.v10.extend.XPathExtendToolkit;\n+\n+final class XPathToolkitImpl implements XPathExtendToolkit\n {\r\n-\t/**\r\n-\t * Initialize these once at this toolkit level.\r\n-\t */\r\n-\tprivate final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n-\tprivate final HashMap<String, Function> functionTable = new HashMap<String, Function>();\r\n-\tprivate final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\r\n-\r\n-\tpublic XPathToolkitImpl()\r\n-\t{\r\n-\t\taxisTable.put(\"child\", new ChildAxisExpr());\r\n-\t\taxisTable.put(\"parent\", new ParentAxisExpr());\r\n-\t\taxisTable.put(\"self\", new SelfAxisExpr());\r\n-\t\taxisTable.put(\"attribute\", new AttributeAxisExpr());\r\n-\t\taxisTable.put(\"namespace\", new NamespaceAxisExpr());\r\n-\t\taxisTable.put(\"descendant-or-self\", new DescendantOrSelfAxisExpr());\r\n-\t\taxisTable.put(\"descendant\", new DescendantAxisExpr());\r\n-\t\taxisTable.put(\"ancestor-or-self\", new AncestorOrSelfAxisExpr());\r\n-\t\taxisTable.put(\"ancestor\", new AncestorAxisExpr());\r\n-\t\taxisTable.put(\"following-sibling\", new FollowingSiblingAxisExpr());\r\n-\t\taxisTable.put(\"preceding-sibling\", new PrecedingSiblingAxisExpr());\r\n-\t\taxisTable.put(\"following\", new FollowingAxisExpr());\r\n-\t\taxisTable.put(\"preceding\", new PrecedingAxisExpr());\r\n-\r\n-\t\t// TODO - the function table is exactly the same, regardless of parameters, so it should\r\n-\t\t// be created in a static.\r\n-\t\tfunctionTable.put(\"boolean\", new BooleanFunction());\r\n-\t\tfunctionTable.put(\"ceiling\", new CeilingFunction());\r\n-\t\tfunctionTable.put(\"concat\", new ConcatFunction());\r\n-\t\tfunctionTable.put(\"contains\", new ContainsFunction());\r\n-\t\tfunctionTable.put(\"count\", new CountFunction());\r\n-\t\tfunctionTable.put(\"false\", new FalseFunction());\r\n-\t\tfunctionTable.put(\"floor\", new FloorFunction());\r\n-\t\tfunctionTable.put(\"format-number\", new FormatNumberFunction());\r\n-\t\tfunctionTable.put(\"id\", new IdFunction());\r\n-\t\tfunctionTable.put(\"lang\", new LangFunction());\r\n-\t\tfunctionTable.put(\"last\", new LastFunction());\r\n-\t\tfunctionTable.put(\"local-name\", new LocalNameFunction());\r\n-\t\tfunctionTable.put(\"namespace-uri\", new NamespaceUriFunction());\r\n-\t\tfunctionTable.put(\"normalize-space\", new NormalizeSpaceFunction());\r\n-\t\tfunctionTable.put(\"not\", new NotFunction());\r\n-\t\tfunctionTable.put(\"number\", new NumberFunction());\r\n-\t\tfunctionTable.put(\"position\", new PositionFunction());\r\n-\t\tfunctionTable.put(\"name\", new NameFunction());\r\n-\t\tfunctionTable.put(\"round\", new RoundFunction());\r\n-\t\tfunctionTable.put(\"starts-with\", new StartsWithFunction());\r\n-\t\tfunctionTable.put(\"string\", new StringFunction());\r\n-\t\tfunctionTable.put(\"string-length\", new StringLengthFunction());\r\n-\t\tfunctionTable.put(\"substring\", new SubstringFunction());\r\n-\t\tfunctionTable.put(\"substring-after\", new SubstringAfterFunction());\r\n-\t\tfunctionTable.put(\"substring-before\", new SubstringBeforeFunction());\r\n-\t\tfunctionTable.put(\"sum\", new SumFunction());\r\n-\t\tfunctionTable.put(\"system-property\", new SystemPropertyFunction());\r\n-\t\tfunctionTable.put(\"translate\", new TranslateFunction());\r\n-\t\tfunctionTable.put(\"true\", new TrueFunction());\r\n-\r\n-\t\trelationTable.put(\"=\", new EqualsRelation());\r\n-\t\trelationTable.put(\"!=\", new NotEqualsRelation());\r\n-\t\trelationTable.put(\"==\", new EqualsRelation());\r\n-\t\trelationTable.put(\">=\", new GreaterThanEqualsRelation());\r\n-\t\trelationTable.put(\">\", new GreaterThanRelation());\r\n-\t}\r\n-\r\n-\tpublic XPathCompiler newXPathCompiler()\r\n-\t{\r\n-\t\treturn new XPathCompilerImpl(axisTable, functionTable, relationTable);\r\n-\t}\r\n-\r\n-\tpublic <N> ExprContextDynamicArgs<N> newExprContextDynamicArgs()\r\n-\t{\r\n-\t\treturn new ExprContextDynamicArgsImpl<N>();\r\n-\t}\r\n-\r\n-\tpublic ExprContextStatic newExprContextStaticArgs()\r\n-\t{\r\n-\t\treturn new ExprContextStaticImpl();\r\n-\t}\r\n-\r\n-\tpublic Function declareFunction(String name, Function newFunction) {\r\n-\t\treturn functionTable.put(name, newFunction);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapNodeSetExpr(\r\n-\t\t\tNodeSetExpr nodeSetExpr, int optimizeFlags) {\r\n-\t\treturn WrappedNodeSetExpr.wrap(nodeSetExpr, optimizeFlags);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapBooleanExpr(BooleanExpr expr) {\r\n-\t\treturn WrappedBooleanExpr.wrap(expr);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapNumberExpr(NumberExpr expr) {\r\n-\t\treturn WrappedNumberExpr.wrap(expr);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapStringExpr(StringExpr expr) {\r\n-\t\treturn WrappedStringExpr.wrap(expr);\r\n-\t}\r\n+    /**\r\n+     * Initialize these once at this toolkit level.\r\n+     */\n+    private final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\n+    private final HashMap<String, Function> functionTable = new HashMap<String, Function>();\n+    private final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\n+\n+    public XPathToolkitImpl()\n+    {\n+        axisTable.put(\"child\", new ChildAxisExpr());\n+        axisTable.put(\"parent\", new ParentAxisExpr());\n+        axisTable.put(\"self\", new SelfAxisExpr());\n+        axisTable.put(\"attribute\", new AttributeAxisExpr());\n+        axisTable.put(\"namespace\", new NamespaceAxisExpr());\n+        axisTable.put(\"descendant-or-self\", new DescendantOrSelfAxisExpr());\n+        axisTable.put(\"descendant\", new DescendantAxisExpr());\n+        axisTable.put(\"ancestor-or-self\", new AncestorOrSelfAxisExpr());\n+        axisTable.put(\"ancestor\", new AncestorAxisExpr());\n+        axisTable.put(\"following-sibling\", new FollowingSiblingAxisExpr());\n+        axisTable.put(\"preceding-sibling\", new PrecedingSiblingAxisExpr());\n+        axisTable.put(\"following\", new FollowingAxisExpr());\n+        axisTable.put(\"preceding\", new PrecedingAxisExpr());\r\n \r\n-\t@Override\r\n-\tpublic ConvertibleExpr wrapVariantExpr(VariantExpr expr) {\r\n-\t\treturn WrappedVariantExpr.wrap(expr);\r\n-\t}\r\n-\t\r\n-}\r\n+        // TODO - the function table is exactly the same, regardless of parameters, so it should\r\n+        // be created in a static.\n+        functionTable.put(\"boolean\", new BooleanFunction());\n+        functionTable.put(\"ceiling\", new CeilingFunction());\n+        functionTable.put(\"concat\", new ConcatFunction());\n+        functionTable.put(\"contains\", new ContainsFunction());\n+        functionTable.put(\"count\", new CountFunction());\n+        functionTable.put(\"false\", new FalseFunction());\n+        functionTable.put(\"floor\", new FloorFunction());\n+        functionTable.put(\"format-number\", new FormatNumberFunction());\n+        functionTable.put(\"id\", new IdFunction());\n+        functionTable.put(\"lang\", new LangFunction());\n+        functionTable.put(\"last\", new LastFunction());\n+        functionTable.put(\"local-name\", new LocalNameFunction());\n+        functionTable.put(\"namespace-uri\", new NamespaceUriFunction());\n+        functionTable.put(\"normalize-space\", new NormalizeSpaceFunction());\n+        functionTable.put(\"not\", new NotFunction());\n+        functionTable.put(\"number\", new NumberFunction());\n+        functionTable.put(\"position\", new PositionFunction());\n+        functionTable.put(\"name\", new NameFunction());\n+        functionTable.put(\"round\", new RoundFunction());\n+        functionTable.put(\"starts-with\", new StartsWithFunction());\n+        functionTable.put(\"string\", new StringFunction());\n+        functionTable.put(\"string-length\", new StringLengthFunction());\n+        functionTable.put(\"substring\", new SubstringFunction());\n+        functionTable.put(\"substring-after\", new SubstringAfterFunction());\n+        functionTable.put(\"substring-before\", new SubstringBeforeFunction());\n+        functionTable.put(\"sum\", new SumFunction());\n+        functionTable.put(\"system-property\", new SystemPropertyFunction());\n+        functionTable.put(\"translate\", new TranslateFunction());\n+        functionTable.put(\"true\", new TrueFunction());\n+        relationTable.put(\"=\", new EqualsRelation());\n+        relationTable.put(\"!=\", new NotEqualsRelation());\n+        relationTable.put(\"==\", new EqualsRelation());\n+        relationTable.put(\">=\", new GreaterThanEqualsRelation());\n+        relationTable.put(\">\", new GreaterThanRelation());\n+    }\n+\n+    public XPathCompiler newXPathCompiler()\n+    {\n+        return new XPathCompilerImpl(axisTable, functionTable, relationTable);\n+    }\n+\n+    public <N> ExprContextDynamicArgs<N> newExprContextDynamicArgs()\n+    {\n+        return new ExprContextDynamicArgsImpl<N>();\n+    }\n+\n+    public ExprContextStatic newExprContextStaticArgs()\n+    {\n+        return new ExprContextStaticImpl();\n+    }\n+\n+    public Function declareFunction(String name, Function newFunction)\n+    {\n+        return functionTable.put(name, newFunction);\n+    }\n+\n+    @Override\n+    public ConvertibleExpr wrapNodeSetExpr(NodeSetExpr nodeSetExpr, int optimizeFlags)\n+    {\n+        return WrappedNodeSetExpr.wrap(nodeSetExpr, optimizeFlags);\n+    }\n+\n+    @Override\n+    public ConvertibleExpr wrapBooleanExpr(BooleanExpr expr)\n+    {\n+        return WrappedBooleanExpr.wrap(expr);\n+    }\n+\n+    @Override\n+    public ConvertibleExpr wrapNumberExpr(NumberExpr expr)\n+    {\n+        return WrappedNumberExpr.wrap(expr);\n+    }\n+\n+    @Override\n+    public ConvertibleExpr wrapStringExpr(StringExpr expr)\n+    {\n+        return WrappedStringExpr.wrap(expr);\n+    }\n+\n+    @Override\n+    public ConvertibleExpr wrapVariantExpr(VariantExpr expr)\n+    {\n+        return WrappedVariantExpr.wrap(expr);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 263
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "97",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/153/XPathToolkitImpl.java\nindex ff81838157e..d5ab116ae5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/153/XPathToolkitImpl.java\n@@ -93,10 +93,10 @@ import org.genxdm.xpath.v10.extend.XPathExtendToolkit;\n final class XPathToolkitImpl\r\n     implements XPathExtendToolkit\r\n {\r\n-\t/**\r\n+/**\r\n \t * Initialize these once at this toolkit level.\r\n \t */\r\n-\tprivate final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n+ private final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n \tprivate final HashMap<String, Function> functionTable = new HashMap<String, Function>();\r\n \tprivate final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\r\n \r\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "97",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/153/XPathToolkitImpl.java\nindex ff81838157e..ed5ccaded9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/153/XPathToolkitImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/153/XPathToolkitImpl.java\n@@ -93,10 +93,10 @@ import org.genxdm.xpath.v10.extend.XPathExtendToolkit;\n final class XPathToolkitImpl\r\n     implements XPathExtendToolkit\r\n {\r\n-\t/**\r\n+    /**\r\n \t * Initialize these once at this toolkit level.\r\n \t */\r\n-\tprivate final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n+ private final HashMap<String, AxisExpr> axisTable = new HashMap<String, AxisExpr>();\r\n \tprivate final HashMap<String, Function> functionTable = new HashMap<String, Function>();\r\n \tprivate final HashMap<String, Relation> relationTable = new HashMap<String, Relation>();\r\n \r\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
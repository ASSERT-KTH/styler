{
    "project_name": "graphfoundation-ongdb",
    "error_id": "428",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/428/BlockLogReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/428/BlockLogReader.java\nindex ad9ae4809df..95fd56431ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/428/BlockLogReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/428/BlockLogReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n import org.jboss.netty.buffer.ChannelBuffer;\n@@ -38,101 +39,101 @@ import java.nio.channels.ReadableByteChannel;\n  */\n public class BlockLogReader implements ReadableByteChannel\n {\n-    private final ChannelBuffer source;\n-    private final byte[] byteArray = new byte[BlockLogBuffer.MAX_SIZE];\n-    private final ByteBuffer byteBuffer = ByteBuffer.wrap( byteArray );\n-    private boolean moreBlocks;\n+  private final ChannelBuffer source;\n+  private final byte[] byteArray = new byte[BlockLogBuffer.MAX_SIZE];\n+  private final ByteBuffer byteBuffer = ByteBuffer.wrap(byteArray);\n+  private boolean moreBlocks;\n \n-    public BlockLogReader( ChannelBuffer source )\n-    {\n-        this.source = source;\n-        readNextBlock();\n-    }\n+  public BlockLogReader(ChannelBuffer source)\n+  {\n+    this.source = source;\n+    readNextBlock();\n+  }\n \n-    /**\n-     * Read a block from the channel. Read the first byte, determine size and if\n-     * more are coming, set state accordingly and store content. NOTE: After\n-     * this op the buffer is flipped, ready to read.\n-     */\n-    private void readNextBlock()\n-    {\n-        int blockSize = source.readUnsignedByte();\n-        byteBuffer.clear();\n-        moreBlocks = blockSize == BlockLogBuffer.FULL_BLOCK_AND_MORE;\n-        int limit = moreBlocks ? BlockLogBuffer.DATA_SIZE : blockSize;\n-        byteBuffer.limit( limit );\n-        source.readBytes( byteBuffer );\n-        byteBuffer.flip();\n-    }\n+  /**\n+   * Read a block from the channel. Read the first byte, determine size and if\n+   * more are coming, set state accordingly and store content. NOTE: After\n+   * this op the buffer is flipped, ready to read.\n+   */\n+  private void readNextBlock()\n+  {\n+    int blockSize = source.readUnsignedByte();\n+    byteBuffer.clear();\n+    moreBlocks = blockSize == BlockLogBuffer.FULL_BLOCK_AND_MORE;\n+    int limit = moreBlocks ? BlockLogBuffer.DATA_SIZE : blockSize;\n+    byteBuffer.limit(limit);\n+    source.readBytes(byteBuffer);\n+    byteBuffer.flip();\n+  }\n \n-    @Override\n-    public boolean isOpen()\n-    {\n-        return true;\n-    }\n+  @Override\n+  public boolean isOpen()\n+  {\n+    return true;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        // This is to make sure that reader index in the ChannelBuffer is left\n-        // in the right place even if this reader wasn't completely read through.\n-        readToTheEnd();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    // This is to make sure that reader index in the ChannelBuffer is left\n+    // in the right place even if this reader wasn't completely read through.\n+    readToTheEnd();\n+  }\n \n-    @Override\n-    public int read( ByteBuffer dst )\n+  @Override\n+  public int read(ByteBuffer dst)\n+  {\n+    /*\n+     * Fill up dst with what comes from the channel, until dst is full.\n+     * readAsMuchAsPossible() is constantly called reading essentially\n+     * one chunk at a time until either it runs out of stuff coming\n+     * from the channel or the actual target buffer is filled.\n+     */\n+    int bytesWanted = dst.limit();\n+    int bytesRead = 0;\n+    while (bytesWanted > 0)\n     {\n-        /*\n-         * Fill up dst with what comes from the channel, until dst is full.\n-         * readAsMuchAsPossible() is constantly called reading essentially\n-         * one chunk at a time until either it runs out of stuff coming\n-         * from the channel or the actual target buffer is filled.\n-         */\n-        int bytesWanted = dst.limit();\n-        int bytesRead = 0;\n-        while ( bytesWanted > 0 )\n-        {\n-            int bytesReadThisTime = readAsMuchAsPossible( dst, bytesWanted );\n-            if ( bytesReadThisTime == 0 )\n-            {\n-                break;\n-            }\n-            bytesRead += bytesReadThisTime;\n-            bytesWanted -= bytesReadThisTime;\n-        }\n-        return bytesRead == 0 && !moreBlocks ? -1 : bytesRead;\n+      int bytesReadThisTime = readAsMuchAsPossible(dst, bytesWanted);\n+      if (bytesReadThisTime == 0)\n+      {\n+        break;\n+      }\n+      bytesRead += bytesReadThisTime;\n+      bytesWanted -= bytesReadThisTime;\n     }\n+    return bytesRead == 0 && !moreBlocks ? -1 : bytesRead;\n+  }\n \n-    /**\n-     * Reads in at most {@code maxBytesWanted} in {@code dst} but never more\n-     * than a chunk.\n-     *\n-     * @param dst The buffer to write the reads bytes to\n-     * @param maxBytesWanted The maximum number of bytes to read.\n-     * @return The number of bytes actually read\n-     */\n-    private int readAsMuchAsPossible( ByteBuffer dst, int maxBytesWanted )\n+  /**\n+   * Reads in at most {@code maxBytesWanted} in {@code dst} but never more\n+   * than a chunk.\n+   *\n+   * @param dst            The buffer to write the reads bytes to\n+   * @param maxBytesWanted The maximum number of bytes to read.\n+   * @return The number of bytes actually read\n+   */\n+  private int readAsMuchAsPossible(ByteBuffer dst, int maxBytesWanted)\n+  {\n+    if (byteBuffer.remaining() == 0 && moreBlocks)\n     {\n-        if ( byteBuffer.remaining() == 0 && moreBlocks )\n-        {\n-            readNextBlock();\n-        }\n-\n-        int bytesToRead = Math.min( maxBytesWanted, byteBuffer.remaining() );\n-        dst.put( byteArray, byteBuffer.position(), bytesToRead );\n-        byteBuffer.position( byteBuffer.position() + bytesToRead );\n-        return bytesToRead;\n+      readNextBlock();\n     }\n \n-    /**\n-     * Reads everything that can be read from the channel. Stops when a chunk\n-     * starting with a non zero byte is met.\n-     */\n-    private void readToTheEnd()\n+    int bytesToRead = Math.min(maxBytesWanted, byteBuffer.remaining());\n+    dst.put(byteArray, byteBuffer.position(), bytesToRead);\n+    byteBuffer.position(byteBuffer.position() + bytesToRead);\n+    return bytesToRead;\n+  }\n+\n+  /**\n+   * Reads everything that can be read from the channel. Stops when a chunk\n+   * starting with a non zero byte is met.\n+   */\n+  private void readToTheEnd()\n+  {\n+    while (moreBlocks)\n     {\n-        while ( moreBlocks )\n-        {\n-            readNextBlock();\n-        }\n+      readNextBlock();\n     }\n+  }\n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/428/BlockLogReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/428/BlockLogReader.java\nindex ad9ae4809df..efe0a848da7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/428/BlockLogReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/428/BlockLogReader.java\n@@ -97,10 +97,12 @@ public class BlockLogReader implements ReadableByteChannel\n             {\n                 break;\n             }\n-            bytesRead += bytesReadThisTime;\n+\n+bytesRead += bytesReadThisTime;\n             bytesWanted -= bytesReadThisTime;\n         }\n-        return bytesRead == 0 && !moreBlocks ? -1 : bytesRead;\n+\n+return bytesRead == 0 && !moreBlocks ? -1 : bytesRead;\n     }\n \n     /**\n@@ -135,4 +137,4 @@ public class BlockLogReader implements ReadableByteChannel\n             readNextBlock();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "1013",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1013/WorkerThreadStackBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1013/WorkerThreadStackBlock.java\nindex 2243cf7c535..a3ac9471c63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1013/WorkerThreadStackBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1013/WorkerThreadStackBlock.java\n@@ -45,8 +45,7 @@ public class WorkerThreadStackBlock extends HtmlBlock {\n   @Override\n   protected void render(Block html) {\n     set(TITLE, join(\"Angel WorkerThreadStack \", $(WORKER_ATTEMPT_ID)));\n-\n-    try {\n+try {\n       WorkerAttemptId workerAttemptId = new WorkerAttemptId($(WORKER_ATTEMPT_ID));\n       WorkerClient workerClient = null;\n       LOG.info(\"start init WorkerClient\");\n@@ -57,4 +56,4 @@ public class WorkerThreadStackBlock extends HtmlBlock {\n       LOG.error(\"get stack for \" + $(WORKER_ATTEMPT_ID) + \" failed, \", e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1013/WorkerThreadStackBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1013/WorkerThreadStackBlock.java\nindex 2243cf7c535..fd9980ae947 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1013/WorkerThreadStackBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1013/WorkerThreadStackBlock.java\n@@ -22,17 +22,15 @@ import com.tencent.angel.exception.UnvalidIdStrException;\n import com.tencent.angel.master.app.AMContext;\n import com.tencent.angel.master.workerclient.WorkerClient;\n import com.tencent.angel.worker.WorkerAttemptId;\n-\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.hadoop.yarn.webapp.view.HtmlBlock;\n-\n import java.io.IOException;\n-\n import static com.tencent.angel.webapp.AngelParams.WORKER_ATTEMPT_ID;\n import static org.apache.hadoop.yarn.util.StringHelper.join;\n \n public class WorkerThreadStackBlock extends HtmlBlock {\n+\n   final AMContext amContext;\n   private static final Log LOG = LogFactory.getLog(ParameterServerThreadStackBlock.class);\n \n@@ -45,7 +43,6 @@ public class WorkerThreadStackBlock extends HtmlBlock {\n   @Override\n   protected void render(Block html) {\n     set(TITLE, join(\"Angel WorkerThreadStack \", $(WORKER_ATTEMPT_ID)));\n-\n     try {\n       WorkerAttemptId workerAttemptId = new WorkerAttemptId($(WORKER_ATTEMPT_ID));\n       WorkerClient workerClient = null;\n@@ -53,8 +50,9 @@ public class WorkerThreadStackBlock extends HtmlBlock {\n       workerClient = new WorkerClient(amContext, workerAttemptId);\n       String info = workerClient.getThreadStack();\n       html.pre()._(info)._();\n-    } catch (IOException | UnvalidIdStrException | ServiceException e) {\n+    } catch (IOException|UnvalidIdStrException| ServiceException e) {\n       LOG.error(\"get stack for \" + $(WORKER_ATTEMPT_ID) + \" failed, \", e);\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
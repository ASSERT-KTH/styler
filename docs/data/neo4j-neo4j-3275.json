{
    "project_name": "neo4j-neo4j",
    "error_id": "3275",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "57",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3275/AggregatingIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3275/AggregatingIndexSampler.java\nindex 0cad8863ec3..093b6ca7a9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3275/AggregatingIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3275/AggregatingIndexSampler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.sampler;\n \n import java.util.List;\n@@ -35,42 +36,41 @@ public class AggregatingIndexSampler implements IndexSampler\n {\n     private final List<IndexSampler> indexSamplers;\n \n-    public AggregatingIndexSampler( List<IndexSampler> indexSamplers )\n+    public AggregatingIndexSampler(List<IndexSampler> indexSamplers)\n     {\n         this.indexSamplers = indexSamplers;\n     }\n \n     @Override\n-    public IndexSample sampleIndex( PageCursorTracer cursorTracer )\n+    public IndexSample sampleIndex(PageCursorTracer cursorTracer)\n     {\n-        return indexSamplers.parallelStream().map( sampler -> sampleIndex( sampler, cursorTracer ) )\n-                .reduce( this::combine )\n-                .get();\n+        return indexSamplers.parallelStream().map(sampler -> sampleIndex(sampler, cursorTracer))\n+          .reduce(this::combine)\n+          .get();\n     }\n \n-    private IndexSample sampleIndex( IndexSampler sampler, PageCursorTracer cursorTracer )\n+    private IndexSample sampleIndex(IndexSampler sampler, PageCursorTracer cursorTracer)\n     {\n         try\n         {\n-            return sampler.sampleIndex( cursorTracer );\n-        }\n-        catch ( IndexNotFoundKernelException e )\n+            return sampler.sampleIndex(cursorTracer);\n+        } catch (IndexNotFoundKernelException e)\n         {\n-            throw new RuntimeException( e );\n+            throw new RuntimeException(e);\n         }\n     }\n \n-    public IndexSample combine( IndexSample sample1, IndexSample sample2 )\n+    public IndexSample combine(IndexSample sample1, IndexSample sample2)\n     {\n-        long indexSize = Math.addExact( sample1.indexSize(), sample2.indexSize() );\n-        long uniqueValues = Math.addExact( sample1.uniqueValues(), sample2.uniqueValues() );\n-        long sampleSize = Math.addExact( sample1.sampleSize(), sample2.sampleSize() );\n-        return new IndexSample( indexSize, uniqueValues, sampleSize );\n+        long indexSize = Math.addExact(sample1.indexSize(), sample2.indexSize());\n+        long uniqueValues = Math.addExact(sample1.uniqueValues(), sample2.uniqueValues());\n+        long sampleSize = Math.addExact(sample1.sampleSize(), sample2.sampleSize());\n+        return new IndexSample(indexSize, uniqueValues, sampleSize);\n     }\n \n     @Override\n     public void close()\n     {\n-        IOUtils.closeAllSilently( indexSamplers );\n+        IOUtils.closeAllSilently(indexSamplers);\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
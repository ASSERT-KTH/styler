{
    "project_name": "neo4j-neo4j",
    "error_id": "415",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/415/BatchingTransactionAppender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/415/BatchingTransactionAppender.java\nindex 5e4292065fc..def67c44690 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/415/BatchingTransactionAppender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/415/BatchingTransactionAppender.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.IOException;\n@@ -50,8 +51,8 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n     private TransactionLogWriter transactionLogWriter;\n     private int previousChecksum;\n \n-    public BatchingTransactionAppender( LogFiles logFiles, LogRotation logRotation, TransactionMetadataCache transactionMetadataCache,\n-            TransactionIdStore transactionIdStore, Health databaseHealth )\n+    public BatchingTransactionAppender(LogFiles logFiles, LogRotation logRotation, TransactionMetadataCache transactionMetadataCache,\n+                                       TransactionIdStore transactionIdStore, Health databaseHealth)\n     {\n         this.logFile = logFiles.getLogFile();\n         this.logRotation = logRotation;\n@@ -62,8 +63,8 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n     }\n \n     @VisibleForTesting\n-    public BatchingTransactionAppender( LogFiles logFiles, LogRotation logRotation, TransactionMetadataCache transactionMetadataCache,\n-            TransactionIdStore transactionIdStore, Health databaseHealth, int previousChecksum )\n+    public BatchingTransactionAppender(LogFiles logFiles, LogRotation logRotation, TransactionMetadataCache transactionMetadataCache,\n+                                       TransactionIdStore transactionIdStore, Health databaseHealth, int previousChecksum)\n     {\n         this.logFile = logFiles.getLogFile();\n         this.logRotation = logRotation;\n@@ -80,20 +81,20 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n     }\n \n     @Override\n-    public long append( TransactionToApply batch, LogAppendEvent logAppendEvent ) throws IOException\n+    public long append(TransactionToApply batch, LogAppendEvent logAppendEvent) throws IOException\n     {\n         // Assigned base tx id just to make compiler happy\n         long lastTransactionId = TransactionIdStore.BASE_TX_ID;\n         // Synchronized with logFile to get absolute control over concurrent rotations happening\n-        synchronized ( logFile )\n+        synchronized (logFile)\n         {\n             // Assert that kernel is healthy before making any changes\n-            databaseHealth.assertHealthy( IOException.class );\n-            try ( SerializeTransactionEvent serialiseEvent = logAppendEvent.beginSerializeTransaction() )\n+            databaseHealth.assertHealthy(IOException.class);\n+            try (SerializeTransactionEvent serialiseEvent = logAppendEvent.beginSerializeTransaction())\n             {\n                 // Append all transactions in this batch to the log under the same logFile monitor\n                 TransactionToApply tx = batch;\n-                while ( tx != null )\n+                while (tx != null)\n                 {\n                     long transactionId = transactionIdStore.nextCommittingTransactionId();\n \n@@ -101,12 +102,12 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n                     // id have already been generated by another entity we simply check that our id\n                     // that we generated match that id. If it doesn't we've run into a problem we can't \u00b4\n                     // really recover from and would point to a bug somewhere.\n-                    matchAgainstExpectedTransactionIdIfAny( transactionId, tx );\n+                    matchAgainstExpectedTransactionIdIfAny(transactionId, tx);\n \n-                    TransactionCommitment commitment = appendToLog( tx.transactionRepresentation(), transactionId, logAppendEvent, previousChecksum );\n+                    TransactionCommitment commitment = appendToLog(tx.transactionRepresentation(), transactionId, logAppendEvent, previousChecksum);\n                     previousChecksum = commitment.getTransactionChecksum();\n-                    tx.commitment( commitment, transactionId );\n-                    tx.logPosition( commitment.logPosition() );\n+                    tx.commitment(commitment, transactionId);\n+                    tx.logPosition(commitment.logPosition());\n                     tx = tx.next();\n                     lastTransactionId = transactionId;\n                 }\n@@ -117,40 +118,40 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n         // as committed since they haven't been forced to disk yet. So here we force, or potentially\n         // piggy-back on another force, but anyway after this call below we can be sure that all our transactions\n         // in this batch exist durably on disk.\n-        if ( logFile.forceAfterAppend( logAppendEvent ) )\n+        if (logFile.forceAfterAppend(logAppendEvent))\n         {\n             // We got lucky and were the one forcing the log. It's enough if ones of all doing concurrent committers\n             // checks the need for log rotation.\n-            boolean logRotated = logRotation.rotateLogIfNeeded( logAppendEvent );\n-            logAppendEvent.setLogRotated( logRotated );\n+            boolean logRotated = logRotation.rotateLogIfNeeded(logAppendEvent);\n+            logAppendEvent.setLogRotated(logRotated);\n         }\n \n         // Mark all transactions as committed\n-        publishAsCommitted( batch );\n+        publishAsCommitted(batch);\n \n         return lastTransactionId;\n     }\n \n-    private void matchAgainstExpectedTransactionIdIfAny( long transactionId, TransactionToApply tx )\n+    private void matchAgainstExpectedTransactionIdIfAny(long transactionId, TransactionToApply tx)\n     {\n         long expectedTransactionId = tx.transactionId();\n-        if ( expectedTransactionId != TRANSACTION_ID_NOT_SPECIFIED )\n+        if (expectedTransactionId != TRANSACTION_ID_NOT_SPECIFIED)\n         {\n-            if ( transactionId != expectedTransactionId )\n+            if (transactionId != expectedTransactionId)\n             {\n                 IllegalStateException ex = new IllegalStateException(\n-                        \"Received \" + tx.transactionRepresentation() + \" with txId:\" + expectedTransactionId +\n-                                \" to be applied, but appending it ended up generating an unexpected txId:\" +\n-                                transactionId );\n-                databaseHealth.panic( ex );\n+                  \"Received \" + tx.transactionRepresentation() + \" with txId:\" + expectedTransactionId +\n+                    \" to be applied, but appending it ended up generating an unexpected txId:\" +\n+                    transactionId);\n+                databaseHealth.panic(ex);\n                 throw ex;\n             }\n         }\n     }\n \n-    private static void publishAsCommitted( TransactionToApply batch )\n+    private static void publishAsCommitted(TransactionToApply batch)\n     {\n-        while ( batch != null )\n+        while (batch != null)\n         {\n             batch.publishAsCommitted();\n             batch = batch.next();\n@@ -161,8 +162,8 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n      * @return A TransactionCommitment instance with metadata about the committed transaction, such as whether or not\n      * this transaction contains any explicit index changes.\n      */\n-    private TransactionCommitment appendToLog( TransactionRepresentation transaction, long transactionId, LogAppendEvent logAppendEvent, int previousChecksum )\n-            throws IOException\n+    private TransactionCommitment appendToLog(TransactionRepresentation transaction, long transactionId, LogAppendEvent logAppendEvent, int previousChecksum)\n+      throws IOException\n     {\n         // The outcome of this try block is either of:\n         // a) transaction successfully appended, at which point we return a Commitment to be used after force\n@@ -173,17 +174,16 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n         try\n         {\n             var logPositionBeforeCommit = transactionLogWriter.getCurrentPosition();\n-            int checksum = transactionLogWriter.append( transaction, transactionId, previousChecksum );\n+            int checksum = transactionLogWriter.append(transaction, transactionId, previousChecksum);\n             var logPositionAfterCommit = transactionLogWriter.getCurrentPosition();\n-            logAppendEvent.appendToLogFile( logPositionBeforeCommit, logPositionAfterCommit );\n+            logAppendEvent.appendToLogFile(logPositionBeforeCommit, logPositionAfterCommit);\n \n-            transactionMetadataCache.cacheTransactionMetadata( transactionId, logPositionBeforeCommit, checksum, transaction.getTimeCommitted() );\n+            transactionMetadataCache.cacheTransactionMetadata(transactionId, logPositionBeforeCommit, checksum, transaction.getTimeCommitted());\n \n-            return new TransactionCommitment( transactionId, checksum, transaction.getTimeCommitted(), logPositionAfterCommit, transactionIdStore );\n-        }\n-        catch ( final Throwable panic )\n+            return new TransactionCommitment(transactionId, checksum, transaction.getTimeCommitted(), logPositionAfterCommit, transactionIdStore);\n+        } catch (final Throwable panic)\n         {\n-            databaseHealth.panic( panic );\n+            databaseHealth.panic(panic);\n             throw panic;\n         }\n     }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/415/BatchingTransactionAppender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/415/BatchingTransactionAppender.java\nindex 5e4292065fc..478550a74d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/415/BatchingTransactionAppender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/415/BatchingTransactionAppender.java\n@@ -187,4 +187,4 @@ public class BatchingTransactionAppender extends LifecycleAdapter implements Tra\n             throw panic;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
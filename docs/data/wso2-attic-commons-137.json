{
    "project_name": "wso2-attic-commons",
    "error_id": "137",
    "information": {
        "errors": [
            {
                "line": "168",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t     aFactory = factory;\n\t   }\n\t   Iterator mexSections = mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n        \n           if (mexSections == null){\n         \tthrow new MexOMException(\"Metadata element does not contain MetadataSection element.\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/137/Metadata.java\nindex 31968660944..474d73e1648 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/137/Metadata.java\n@@ -165,9 +165,9 @@ public class Metadata extends MexOM implements IMexOM {\n \t  if (aFactory == null) {\n \t     aFactory = factory;\n \t   }\n-\t   Iterator mexSections = mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n-        \n-           if (mexSections == null){\n+    Iterator mexSections = mexElement.\n+            getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n+    if (mexSections == null){\n          \tthrow new MexOMException(\"Metadata element does not contain MetadataSection element.\");\n          }\n         while (mexSections.hasNext()){\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/137/Metadata.java\nindex 31968660944..99718386e0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/137/Metadata.java\n@@ -37,207 +37,204 @@ import org.wso2.mex.MexException;\n import org.wso2.mex.util.MexUtil;\n \n /**\n- * \n- * Class implementing  mex:Metadata element \n- *\n+ * Class implementing  mex:Metadata element\n  */\n \n public class Metadata extends MexOM implements IMexOM {\n-\tprivate String namespaceValue = null;\n-\tprivate OMFactory factory;\n-\tprivate List  metadataSections = new ArrayList(); \n-\tprivate OMAttribute attribute = null;\n-\t\n-        /**\n-\t * Constructor\n-\t * @throws MexException \n-\t */\n-\n-\tpublic Metadata() throws MexException  {\n-\t\t\n-\t\tthis.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);;\n-\t\tthis.namespaceValue = MexConstants.Spec_2004_09.NS_URI;\n-\t}\n-\n-\t/**\n-\t * \n-\t * @param defaultFactory\n-\t * @param namespaceValue\n-\t * @throws MexOMException\n-\t */\n-\n-\tpublic Metadata(OMFactory defaultFactory, String namespaceValue) throws MexOMException  {\n-\t\tthis.factory = defaultFactory;\n-\t\tthis.namespaceValue = namespaceValue;\n-\t}\n-\n-        /**\n-         * \n-         * @return Array of MetadataSection of metadata units\n-         */\n-        public MetadataSection[] getMetadatSections() {\n-\t\treturn (MetadataSection[])metadataSections.toArray(new MetadataSection[0]);\n-\t}\n-\n-         /**\n-     * \n-     * @param dialect\n-     * @param identifier\n-     * @return Array of MetadataSection for the specified dialect metadata type and identifier  \n-     */\n-    public MetadataSection[] getMetadataSection(String dialect, String identifier){\n-    \tMetadataSection[] sections = getMetadataSection(dialect, identifier, null);\n-    \treturn sections;\n+  private String namespaceValue = null;\n+  private OMFactory factory;\n+  private List metadataSections = new ArrayList();\n+  private OMAttribute attribute = null;\n+\n+  /**\n+   * Constructor\n+   *\n+   * @throws MexException\n+   */\n+\n+  public Metadata() throws MexException {\n+\n+    this.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);\n+    ;\n+    this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;\n+  }\n+\n+  /**\n+   * @param defaultFactory\n+   * @param namespaceValue\n+   * @throws MexOMException\n+   */\n+\n+  public Metadata(OMFactory defaultFactory, String namespaceValue) throws MexOMException {\n+    this.factory = defaultFactory;\n+    this.namespaceValue = namespaceValue;\n+  }\n+\n+  /**\n+   * @return Array of MetadataSection of metadata units\n+   */\n+  public MetadataSection[] getMetadatSections() {\n+    return (MetadataSection[]) metadataSections.toArray(new MetadataSection[0]);\n+  }\n+\n+  /**\n+   * @param dialect\n+   * @param identifier\n+   * @return Array of MetadataSection for the specified dialect metadata type and identifier\n+   */\n+  public MetadataSection[] getMetadataSection(String dialect, String identifier) {\n+    MetadataSection[] sections = getMetadataSection(dialect, identifier, null);\n+    return sections;\n+  }\n+\n+  /**\n+   * Answers the Metadata Sections that met the criteria specified in the dialect, identifier, and form.\n+   * Note: Null value parameter will be treated as wild card.\n+   *\n+   * @param dialect\n+   * @param identifier\n+   * @param form       specify the form of metadata: inline or by reference\n+   *                   See <code>OutputForm</code> for valid output forms.\n+   * @return Array of MetadataSection for the specified dialect metadata type and identifier of\n+   * the form specified.\n+   */\n+  public MetadataSection[] getMetadataSection(String dialect, String identifier, OutputForm form) {\n+\n+    Iterator sections = metadataSections.iterator();\n+    List foundSections = new ArrayList();\n+    while (sections.hasNext()) {\n+      MetadataSection aSection = (MetadataSection) sections.next();\n+      if ((dialect == null || dialect.equals(aSection.getDialect())) &&\n+        (identifier == null || dialect.equals(aSection.getIdentifier())) &&\n+        matchOutputForm(aSection, form)) {\n+        foundSections.add(aSection);\n+      }\n+\n     }\n-    \n-    /**\n-     * \n-     * Answers the Metadata Sections that met the criteria specified in the dialect, identifier, and form.\n-     * Note: Null value parameter will be treated as wild card.\n-     * @param dialect\n-     * @param identifier\n-     * @param form specify the form of metadata: inline or by reference\n-     *        See <code>OutputForm</code> for valid output forms.\n-     * @return Array of MetadataSection for the specified dialect metadata type and identifier of\n-     *         the form specified.\n-     *\n-     */\n-    public MetadataSection[] getMetadataSection(String dialect, String identifier, OutputForm form ){\n-        \n-    \tIterator sections = metadataSections.iterator();\n-    \tList foundSections = new ArrayList();\n-    \twhile (sections.hasNext()){\n-    \t\tMetadataSection aSection = (MetadataSection) sections.next();\n-    \t\tif ((dialect == null || dialect.equals(aSection.getDialect())) &&\n-    \t\t\t(identifier == null || dialect.equals(aSection.getIdentifier())) &&\n-    \t\t\tmatchOutputForm(aSection, form)){\n-    \t\t\tfoundSections.add(aSection);\n-    \t\t}\t\n-    \t\t\n-    \t}\n-    \treturn (MetadataSection[])foundSections.toArray(new MetadataSection[0]);\n+    return (MetadataSection[]) foundSections.toArray(new MetadataSection[0]);\n+  }\n+\n+  /**\n+   * Populates an Metadata object based on the <code>OMElement</code> passed.\n+   *\n+   * @param inElement mex:Metadata element or element contains mex:Metadata element\n+   * @return Metadata\n+   * @throws MexOMException\n+   */\n+  public Metadata fromOM(OMElement inElement) throws MexOMException {\n+\n+    OMElement mexElement = null;\n+    if (inElement == null) {\n+      throw new MexOMException(\"Null element passed.\");\n     }\n-    \n-    /**\n-\t * Populates an Metadata object based on the <code>OMElement</code> passed. \n-\t * @param inElement mex:Metadata element or element contains mex:Metadata element\n-\t * @return Metadata \n-\t * @throws MexOMException\n-\t */\n-\tpublic Metadata fromOM(OMElement inElement) throws MexOMException {\n-\t\t\t\n-\t\tOMElement mexElement = null;\n-        if (inElement == null ){\n-        \tthrow new MexOMException(\"Null element passed.\");\n-        }\n-        \n-        if (inElement.getLocalName().equals(MexConstants.SPEC.METADATA)){\n-        \tmexElement = inElement;\n-        }\n-        if (inElement.getLocalName().equals(\"EndpointReference\")){\n-            try {\n-\t    \t  EndpointReference epr = EndpointReferenceHelper.fromOM(inElement);\n-\t\t\t\t\n-\t\t  ArrayList metadata = epr.getMetaData();\n-\t\t  if (metadata != null)\n-\t\t      mexElement = (OMElement)metadata.get(0);\n-\t\t  else {\n-\t\t      ArrayList refParm = epr.getExtensibleElements();\n-\t\t      for (int i=0; i<refParm.size(); i++){\n-\t\t          OMElement elem = (OMElement)refParm.get(i);\n-\t\t\t  if (elem.getLocalName().equals(MexConstants.SPEC.METADATA)){\n-\t\t\t      mexElement = elem;\n-\t\t\t      break;\n-\t\t\t   }\n-\t\t\t}\n-\t\t\t}\n-\t\t} catch (AxisFault e) {\n-\t\t   throw new MexOMException(e);\n-\t\t}\n-        \t\n-\t        if (mexElement == null) {\n-\t\t    throw new MexOMException(\"Missing expected Metadata element in element passed.\");\n-\t\t}\n-\t   }\n-          else mexElement = inElement;\n-        \n-\t  OMFactory aFactory = mexElement.getOMFactory();\n-\t  if (aFactory == null) {\n-\t     aFactory = factory;\n-\t   }\n-\t   Iterator mexSections = mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n-        \n-           if (mexSections == null){\n-         \tthrow new MexOMException(\"Metadata element does not contain MetadataSection element.\");\n-         }\n-        while (mexSections.hasNext()){\n-        \tOMElement aSection = (OMElement) mexSections.next();\n-            MetadataSection metadataSection = new MetadataSection(aFactory, namespaceValue);\n-            addMetadatSection(metadataSection.fromOM(aSection)); \n+\n+    if (inElement.getLocalName().equals(MexConstants.SPEC.METADATA)) {\n+      mexElement = inElement;\n+    }\n+    if (inElement.getLocalName().equals(\"EndpointReference\")) {\n+      try {\n+        EndpointReference epr = EndpointReferenceHelper.fromOM(inElement);\n+\n+        ArrayList metadata = epr.getMetaData();\n+        if (metadata != null) {\n+          mexElement = (OMElement) metadata.get(0);\n+        } else {\n+          ArrayList refParm = epr.getExtensibleElements();\n+          for (int i = 0; i < refParm.size(); i++) {\n+            OMElement elem = (OMElement) refParm.get(i);\n+            if (elem.getLocalName().equals(MexConstants.SPEC.METADATA)) {\n+              mexElement = elem;\n+              break;\n+            }\n+          }\n         }\n-        \n-\t\treturn this;\n-\t}\n-\t\n-\t\n-       /**\n-        * \n-        * @return Array of MetadataSection of metadata units\n-        */\n-        public OMElement toOM() throws MexOMException\n-\t{\n-\t\tOMNamespace mexNamespace = factory.createOMNamespace(namespaceValue,MexConstants.SPEC.NS_PREFIX);\n-\t\tOMElement metadata = factory.createOMElement(MexConstants.SPEC.METADATA, mexNamespace);\n-\n-\t\tIterator sections = metadataSections.iterator();\n-\t\twhile (sections.hasNext()) {\n-\t\t\tMetadataSection aSection = (MetadataSection) sections.next();\n-\t\t\tmetadata.addChild(aSection.toOM());\n-\t\t}\n-\t\tif (attribute != null){\n-\t\t\tmetadata.addAttribute(attribute); //???\n-\t\t}\n-\t\treturn metadata;\n-\t}\n-\t\n-\tpublic void setMetadatSections(List in_metadataSections) {\n-\t\tmetadataSections = in_metadataSections;\n-\t}\n-\t\n-\tpublic void addMetadatSections(List in_metadataSections) {\n-\t\tIterator sections = in_metadataSections.iterator();\n-\t\twhile (sections.hasNext()) {\n-\t\t\taddMetadatSection((MetadataSection) sections.next());\n-\t\t}\n-\t}\n-\n-\tpublic void addMetadatSection(MetadataSection section) {\n-\t\tmetadataSections.add(section);\n-\t}\n-\t\n-       \t\n-\tpublic void setAttribute(OMAttribute in_attribute) {\n-\t\tattribute = in_attribute;\n-\t}\n-\n-  \n-    // check if section contains data matching the output form requested\n-    private boolean matchOutputForm(MetadataSection section,\n-\t\t\tOutputForm outputForm) {\n-\t\tboolean match = (outputForm == null);  // no matching needed in null outputForm is passed\n-\n-\t\tif (!match) {\n-\t\t\tif (outputForm == OutputForm.LOCATION_FORM) {\n-\t\t\t\tmatch = (section.getLocation() != null);\n-\t\t\t} else if (outputForm == OutputForm.REFERENCE_FORM) {\n-\t\t\t\tmatch = (section.getMetadataReference() != null);\n-\t\t\t} else if (outputForm == OutputForm.INLINE_FORM) {\n-\t\t\t\tmatch = (section.getInlineData() != null);\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn match;\n-\t}\n-\t\n+      } catch (AxisFault e) {\n+        throw new MexOMException(e);\n+      }\n+\n+      if (mexElement == null) {\n+        throw new MexOMException(\"Missing expected Metadata element in element passed.\");\n+      }\n+    } else {\n+      mexElement = inElement;\n+    }\n+\n+    OMFactory aFactory = mexElement.getOMFactory();\n+    if (aFactory == null) {\n+      aFactory = factory;\n+    }\n+    Iterator mexSections =\n+      mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n+\n+    if (mexSections == null) {\n+      throw new MexOMException(\"Metadata element does not contain MetadataSection element.\");\n+    }\n+    while (mexSections.hasNext()) {\n+      OMElement aSection = (OMElement) mexSections.next();\n+      MetadataSection metadataSection = new MetadataSection(aFactory, namespaceValue);\n+      addMetadatSection(metadataSection.fromOM(aSection));\n+    }\n+\n+    return this;\n+  }\n+\n+\n+  /**\n+   * @return Array of MetadataSection of metadata units\n+   */\n+  public OMElement toOM() throws MexOMException {\n+    OMNamespace mexNamespace = factory.createOMNamespace(namespaceValue, MexConstants.SPEC.NS_PREFIX);\n+    OMElement metadata = factory.createOMElement(MexConstants.SPEC.METADATA, mexNamespace);\n+\n+    Iterator sections = metadataSections.iterator();\n+    while (sections.hasNext()) {\n+      MetadataSection aSection = (MetadataSection) sections.next();\n+      metadata.addChild(aSection.toOM());\n+    }\n+    if (attribute != null) {\n+      metadata.addAttribute(attribute); //???\n+    }\n+    return metadata;\n+  }\n+\n+  public void setMetadatSections(List in_metadataSections) {\n+    metadataSections = in_metadataSections;\n+  }\n+\n+  public void addMetadatSections(List in_metadataSections) {\n+    Iterator sections = in_metadataSections.iterator();\n+    while (sections.hasNext()) {\n+      addMetadatSection((MetadataSection) sections.next());\n+    }\n+  }\n+\n+  public void addMetadatSection(MetadataSection section) {\n+    metadataSections.add(section);\n+  }\n+\n+\n+  public void setAttribute(OMAttribute in_attribute) {\n+    attribute = in_attribute;\n+  }\n+\n+\n+  // check if section contains data matching the output form requested\n+  private boolean matchOutputForm(MetadataSection section,\n+                                  OutputForm outputForm) {\n+    boolean match = (outputForm == null);  // no matching needed in null outputForm is passed\n+\n+    if (!match) {\n+      if (outputForm == OutputForm.LOCATION_FORM) {\n+        match = (section.getLocation() != null);\n+      } else if (outputForm == OutputForm.REFERENCE_FORM) {\n+        match = (section.getMetadataReference() != null);\n+      } else if (outputForm == OutputForm.INLINE_FORM) {\n+        match = (section.getInlineData() != null);\n+      }\n+    }\n+\n+    return match;\n+  }\n+\n \n }\n",
            "diff_size": 244
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/137/Metadata.java\nindex 31968660944..1da9c1cf583 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/137/Metadata.java\n@@ -45,18 +45,17 @@ import org.wso2.mex.util.MexUtil;\n public class Metadata extends MexOM implements IMexOM {\n \tprivate String namespaceValue = null;\n \tprivate OMFactory factory;\n-\tprivate List  metadataSections = new ArrayList(); \n+\tprivate List metadataSections = new ArrayList(); \n \tprivate OMAttribute attribute = null;\n-\t\n-        /**\n+\n+/**\n \t * Constructor\n \t * @throws MexException \n \t */\n-\n-\tpublic Metadata() throws MexException  {\n+       public Metadata() throws MexException  {\n \t\t\n \t\tthis.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);;\n-\t\tthis.namespaceValue = MexConstants.Spec_2004_09.NS_URI;\n+this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;\n \t}\n \n \t/**\n@@ -65,27 +64,26 @@ public class Metadata extends MexOM implements IMexOM {\n \t * @param namespaceValue\n \t * @throws MexOMException\n \t */\n-\n-\tpublic Metadata(OMFactory defaultFactory, String namespaceValue) throws MexOMException  {\n+public Metadata(OMFactory defaultFactory, String namespaceValue) throws MexOMException {\n \t\tthis.factory = defaultFactory;\n \t\tthis.namespaceValue = namespaceValue;\n \t}\n \n-        /**\n+/**\n          * \n          * @return Array of MetadataSection of metadata units\n          */\n         public MetadataSection[] getMetadatSections() {\n-\t\treturn (MetadataSection[])metadataSections.toArray(new MetadataSection[0]);\n+    return (MetadataSection[])metadataSections.toArray(new MetadataSection[0]);\n \t}\n \n-         /**\n+     /**\n      * \n      * @param dialect\n      * @param identifier\n      * @return Array of MetadataSection for the specified dialect metadata type and identifier  \n      */\n-    public MetadataSection[] getMetadataSection(String dialect, String identifier){\n+public MetadataSection[] getMetadataSection(String dialect, String identifier){\n     \tMetadataSection[] sections = getMetadataSection(dialect, identifier, null);\n     \treturn sections;\n     }\n@@ -103,19 +101,16 @@ public class Metadata extends MexOM implements IMexOM {\n      *\n      */\n     public MetadataSection[] getMetadataSection(String dialect, String identifier, OutputForm form ){\n-        \n-    \tIterator sections = metadataSections.iterator();\n+    Iterator sections = metadataSections.iterator();\n     \tList foundSections = new ArrayList();\n     \twhile (sections.hasNext()){\n     \t\tMetadataSection aSection = (MetadataSection) sections.next();\n-    \t\tif ((dialect == null || dialect.equals(aSection.getDialect())) &&\n-    \t\t\t(identifier == null || dialect.equals(aSection.getIdentifier())) &&\n+    \t\tif ((dialect == null || dialect.equals(aSection.getDialect())) && (identifier == null || dialect.equals(aSection.getIdentifier())) &&\n     \t\t\tmatchOutputForm(aSection, form)){\n     \t\t\tfoundSections.add(aSection);\n-    \t\t}\t\n-    \t\t\n-    \t}\n-    \treturn (MetadataSection[])foundSections.toArray(new MetadataSection[0]);\n+    \t\t}\n+\t\t}\n+return (MetadataSection[])foundSections.toArray(new MetadataSection[0]);\n     }\n     \n     /**\n@@ -125,67 +120,59 @@ public class Metadata extends MexOM implements IMexOM {\n \t * @throws MexOMException\n \t */\n \tpublic Metadata fromOM(OMElement inElement) throws MexOMException {\n-\t\t\t\n-\t\tOMElement mexElement = null;\n-        if (inElement == null ){\n+OMElement mexElement = null;\n+if (inElement == null ){\n         \tthrow new MexOMException(\"Null element passed.\");\n         }\n-        \n-        if (inElement.getLocalName().equals(MexConstants.SPEC.METADATA)){\n-        \tmexElement = inElement;\n+if (inElement.getLocalName().equals(MexConstants.SPEC.METADATA)) {\n+    mexElement = inElement;\n         }\n         if (inElement.getLocalName().equals(\"EndpointReference\")){\n             try {\n-\t    \t  EndpointReference epr = EndpointReferenceHelper.fromOM(inElement);\n-\t\t\t\t\n-\t\t  ArrayList metadata = epr.getMetaData();\n-\t\t  if (metadata != null)\n+    EndpointReference epr = EndpointReferenceHelper.fromOM(inElement);\n+ArrayList metadata = epr.getMetaData();\n+if (metadata != null)\n \t\t      mexElement = (OMElement)metadata.get(0);\n \t\t  else {\n \t\t      ArrayList refParm = epr.getExtensibleElements();\n \t\t      for (int i=0; i<refParm.size(); i++){\n \t\t          OMElement elem = (OMElement)refParm.get(i);\n-\t\t\t  if (elem.getLocalName().equals(MexConstants.SPEC.METADATA)){\n+if (elem.getLocalName().equals(MexConstants.SPEC.METADATA)){\n \t\t\t      mexElement = elem;\n \t\t\t      break;\n \t\t\t   }\n \t\t\t}\n-\t\t\t}\n+\t}\n \t\t} catch (AxisFault e) {\n \t\t   throw new MexOMException(e);\n+        }\n+ if (mexElement == null) {\n+    throw new MexOMException(\"Missing expected Metadata element in element passed.\");\n \t\t}\n-        \t\n-\t        if (mexElement == null) {\n-\t\t    throw new MexOMException(\"Missing expected Metadata element in element passed.\");\n-\t\t}\n-\t   }\n-          else mexElement = inElement;\n+    }\n+else mexElement = inElement;\n         \n \t  OMFactory aFactory = mexElement.getOMFactory();\n \t  if (aFactory == null) {\n \t     aFactory = factory;\n \t   }\n \t   Iterator mexSections = mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n-        \n-           if (mexSections == null){\n-         \tthrow new MexOMException(\"Metadata element does not contain MetadataSection element.\");\n+if (mexSections == null){\n+    throw new MexOMException(\"Metadata element does not contain MetadataSection element.\");\n          }\n-        while (mexSections.hasNext()){\n+while (mexSections.hasNext()){\n         \tOMElement aSection = (OMElement) mexSections.next();\n             MetadataSection metadataSection = new MetadataSection(aFactory, namespaceValue);\n             addMetadatSection(metadataSection.fromOM(aSection)); \n         }\n-        \n-\t\treturn this;\n-\t}\n-\t\n-\t\n-       /**\n+ return this;\n+    }\n+\n+     /**\n         * \n         * @return Array of MetadataSection of metadata units\n         */\n-        public OMElement toOM() throws MexOMException\n-\t{\n+public OMElement toOM() throws MexOMException {\n \t\tOMNamespace mexNamespace = factory.createOMNamespace(namespaceValue,MexConstants.SPEC.NS_PREFIX);\n \t\tOMElement metadata = factory.createOMElement(MexConstants.SPEC.METADATA, mexNamespace);\n \n@@ -214,17 +201,14 @@ public class Metadata extends MexOM implements IMexOM {\n \tpublic void addMetadatSection(MetadataSection section) {\n \t\tmetadataSections.add(section);\n \t}\n-\t\n-       \t\n-\tpublic void setAttribute(OMAttribute in_attribute) {\n-\t\tattribute = in_attribute;\n+\n+public void setAttribute(OMAttribute in_attribute) {\n+    attribute = in_attribute;\n \t}\n \n-  \n-    // check if section contains data matching the output form requested\n-    private boolean matchOutputForm(MetadataSection section,\n-\t\t\tOutputForm outputForm) {\n-\t\tboolean match = (outputForm == null);  // no matching needed in null outputForm is passed\n+// check if section contains data matching the output form requested\n+    private boolean matchOutputForm(MetadataSection section, OutputForm outputForm) {\n+    boolean match = (outputForm == null);  // no matching needed in null outputForm is passed\n \n \t\tif (!match) {\n \t\t\tif (outputForm == OutputForm.LOCATION_FORM) {\n@@ -240,4 +224,4 @@ public class Metadata extends MexOM implements IMexOM {\n \t}\n \t\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 63
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/137/Metadata.java\nindex 31968660944..1149e3aad25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/137/Metadata.java\n@@ -165,9 +165,9 @@ public class Metadata extends MexOM implements IMexOM {\n \t  if (aFactory == null) {\n \t     aFactory = factory;\n \t   }\n-\t   Iterator mexSections = mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n-        \n-           if (mexSections == null){\n+    Iterator mexSections = mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n+\n+\t\t\t\tif (mexSections == null){\n          \tthrow new MexOMException(\"Metadata element does not contain MetadataSection element.\");\n          }\n         while (mexSections.hasNext()){\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/137/Metadata.java\nindex 31968660944..474d73e1648 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/137/Metadata.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/137/Metadata.java\n@@ -165,9 +165,9 @@ public class Metadata extends MexOM implements IMexOM {\n \t  if (aFactory == null) {\n \t     aFactory = factory;\n \t   }\n-\t   Iterator mexSections = mexElement.getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n-        \n-           if (mexSections == null){\n+    Iterator mexSections = mexElement.\n+            getChildrenWithName(new QName(namespaceValue, MexConstants.SPEC.METADATA_SECTION));\n+    if (mexSections == null){\n          \tthrow new MexOMException(\"Metadata element does not contain MetadataSection element.\");\n          }\n         while (mexSections.hasNext()){\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "992",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.runtime.model.impl;\n\nimport java.util.Date;\nimport java.util.Objects;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/992/ProcessInstanceImpl.java\nindex 6db03ffb0e9..db9528b913c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/992/ProcessInstanceImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Date;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/992/ProcessInstanceImpl.java\nindex 6db03ffb0e9..2e1a091c099 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/992/ProcessInstanceImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Date;\n@@ -91,7 +92,7 @@ public class ProcessInstanceImpl extends ApplicationElementImpl implements Proce\n     public String getProcessDefinitionName() {\n         return processDefinitionName;\n     }\n-    \n+\n     public void setId(String id) {\n         this.id = id;\n     }\n@@ -127,7 +128,7 @@ public class ProcessInstanceImpl extends ApplicationElementImpl implements Proce\n     public void setParentId(String parentId) {\n         this.parentId = parentId;\n     }\n-    \n+\n     public void setProcessDefinitionVersion(Integer processDefinitionVersion) {\n         this.processDefinitionVersion = processDefinitionVersion;\n     }\n@@ -149,24 +150,24 @@ public class ProcessInstanceImpl extends ApplicationElementImpl implements Proce\n         }\n         ProcessInstanceImpl that = (ProcessInstanceImpl) o;\n         return Objects.equals(id,\n-                              that.id) &&\n+                that.id) &&\n                 Objects.equals(name,\n-                               that.name) &&\n+                        that.name) &&\n                 Objects.equals(processDefinitionId,\n-                               that.processDefinitionId) &&\n+                        that.processDefinitionId) &&\n                 Objects.equals(processDefinitionKey,\n-                               that.processDefinitionKey) &&\n+                        that.processDefinitionKey) &&\n                 Objects.equals(initiator,\n-                               that.initiator) &&\n+                        that.initiator) &&\n                 Objects.equals(startDate,\n-                               that.startDate) &&\n+                        that.startDate) &&\n                 Objects.equals(businessKey,\n-                               that.businessKey) &&\n+                        that.businessKey) &&\n                 status == that.status &&\n                 Objects.equals(parentId,\n-                               that.parentId) &&\n+                        that.parentId) &&\n                 Objects.equals(processDefinitionVersion,\n-                               that.processDefinitionVersion) &&\n+                        that.processDefinitionVersion) &&\n                 Objects.equals(processDefinitionName,\n                         that.processDefinitionName);\n     }\n@@ -174,17 +175,17 @@ public class ProcessInstanceImpl extends ApplicationElementImpl implements Proce\n     @Override\n     public int hashCode() {\n         return Objects.hash(super.hashCode(),\n-                            id,\n-                            name,\n-                            processDefinitionId,\n-                            processDefinitionKey,\n-                            initiator,\n-                            startDate,\n-                            businessKey,\n-                            status,\n-                            parentId,\n-                            processDefinitionVersion,\n-                            processDefinitionName);\n+                id,\n+                name,\n+                processDefinitionId,\n+                processDefinitionKey,\n+                initiator,\n+                startDate,\n+                businessKey,\n+                status,\n+                parentId,\n+                processDefinitionVersion,\n+                processDefinitionName);\n     }\n \n     @Override\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 413).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 459).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 465).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 493).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/992/ProcessInstanceImpl.java\nindex 6db03ffb0e9..7f0cfaa1643 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/992/ProcessInstanceImpl.java\n@@ -17,190 +17,162 @@ package org.activiti.api.runtime.model.impl;\n \n import java.util.Date;\n import java.util.Objects;\n-\n import org.activiti.api.process.model.ProcessInstance;\n \n+\n public class ProcessInstanceImpl extends ApplicationElementImpl implements ProcessInstance {\n \n-    private String id;\n-    private String name;\n-    private String processDefinitionId;\n-    private String processDefinitionKey;\n-    private String initiator;\n-    private Date startDate;\n-    private String businessKey;\n-    private ProcessInstanceStatus status;\n-    private String parentId;\n-    private Integer processDefinitionVersion;\n-    private String processDefinitionName;\n-\n-    public ProcessInstanceImpl() {\n-    }\n+  private String id;\n \n-    @Override\n-    public String getId() {\n-        return id;\n-    }\n+  private String name;\n \n-    @Override\n-    public String getName() {\n-        return name;\n-    }\n+  private String processDefinitionId;\n \n-    @Override\n-    public Date getStartDate() {\n-        return startDate;\n-    }\n+  private String processDefinitionKey;\n \n-    @Override\n-    public String getInitiator() {\n-        return initiator;\n-    }\n+  private String initiator;\n \n-    @Override\n-    public String getBusinessKey() {\n-        return businessKey;\n-    }\n+  private Date startDate;\n \n-    @Override\n-    public ProcessInstanceStatus getStatus() {\n-        return status;\n-    }\n+  private String businessKey;\n \n-    @Override\n-    public String getProcessDefinitionId() {\n-        return processDefinitionId;\n-    }\n+  private ProcessInstanceStatus status;\n \n-    @Override\n-    public String getProcessDefinitionKey() {\n-        return processDefinitionKey;\n-    }\n+  private String parentId;\n \n-    @Override\n-    public String getParentId() {\n-        return parentId;\n-    }\n+  private Integer processDefinitionVersion;\n \n-    @Override\n-    public Integer getProcessDefinitionVersion() {\n-        return processDefinitionVersion;\n-    }\n+  private String processDefinitionName;\n \n-    @Override\n-    public String getProcessDefinitionName() {\n-        return processDefinitionName;\n-    }\n-    \n-    public void setId(String id) {\n-        this.id = id;\n-    }\n+  public ProcessInstanceImpl() {\n+  }\n \n-    public void setName(String name) {\n-        this.name = name;\n-    }\n+  @Override\n+  public String getId() {\n+    return id;\n+  }\n \n-    public void setProcessDefinitionId(String processDefinitionId) {\n-        this.processDefinitionId = processDefinitionId;\n-    }\n+  @Override\n+  public String getName() {\n+    return name;\n+  }\n \n-    public void setProcessDefinitionKey(String processDefinitionKey) {\n-        this.processDefinitionKey = processDefinitionKey;\n-    }\n+  @Override\n+  public Date getStartDate() {\n+    return startDate;\n+  }\n \n-    public void setInitiator(String initiator) {\n-        this.initiator = initiator;\n-    }\n+  @Override\n+  public String getInitiator() {\n+    return initiator;\n+  }\n \n-    public void setStartDate(Date startDate) {\n-        this.startDate = startDate;\n-    }\n+  @Override\n+  public String getBusinessKey() {\n+    return businessKey;\n+  }\n \n-    public void setBusinessKey(String businessKey) {\n-        this.businessKey = businessKey;\n-    }\n+  @Override\n+  public ProcessInstanceStatus getStatus() {\n+    return status;\n+  }\n \n-    public void setStatus(ProcessInstanceStatus status) {\n-        this.status = status;\n-    }\n+  @Override\n+  public String getProcessDefinitionId() {\n+    return processDefinitionId;\n+  }\n \n-    public void setParentId(String parentId) {\n-        this.parentId = parentId;\n-    }\n-    \n-    public void setProcessDefinitionVersion(Integer processDefinitionVersion) {\n-        this.processDefinitionVersion = processDefinitionVersion;\n-    }\n+  @Override\n+  public String getProcessDefinitionKey() {\n+    return processDefinitionKey;\n+  }\n \n-    public void setProcessDefinitionName(String processDefinitionName) {\n-        this.processDefinitionName = processDefinitionName;\n-    }\n+  @Override\n+  public String getParentId() {\n+    return parentId;\n+  }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        if (!super.equals(o)) {\n-            return false;\n-        }\n-        ProcessInstanceImpl that = (ProcessInstanceImpl) o;\n-        return Objects.equals(id,\n-                              that.id) &&\n-                Objects.equals(name,\n-                               that.name) &&\n-                Objects.equals(processDefinitionId,\n-                               that.processDefinitionId) &&\n-                Objects.equals(processDefinitionKey,\n-                               that.processDefinitionKey) &&\n-                Objects.equals(initiator,\n-                               that.initiator) &&\n-                Objects.equals(startDate,\n-                               that.startDate) &&\n-                Objects.equals(businessKey,\n-                               that.businessKey) &&\n-                status == that.status &&\n-                Objects.equals(parentId,\n-                               that.parentId) &&\n-                Objects.equals(processDefinitionVersion,\n-                               that.processDefinitionVersion) &&\n-                Objects.equals(processDefinitionName,\n-                        that.processDefinitionName);\n-    }\n+  @Override\n+  public Integer getProcessDefinitionVersion() {\n+    return processDefinitionVersion;\n+  }\n \n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(super.hashCode(),\n-                            id,\n-                            name,\n-                            processDefinitionId,\n-                            processDefinitionKey,\n-                            initiator,\n-                            startDate,\n-                            businessKey,\n-                            status,\n-                            parentId,\n-                            processDefinitionVersion,\n-                            processDefinitionName);\n-    }\n+  @Override\n+  public String getProcessDefinitionName() {\n+    return processDefinitionName;\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"ProcessInstance{\" +\n-                \"id='\" + id + '\\'' +\n-                \", name='\" + name + '\\'' +\n-                \", processDefinitionId='\" + processDefinitionId + '\\'' +\n-                \", processDefinitionKey='\" + processDefinitionKey + '\\'' +\n-                \", parentId='\" + parentId + '\\'' +\n-                \", initiator='\" + initiator + '\\'' +\n-                \", startDate=\" + startDate +\n-                \", businessKey='\" + businessKey + '\\'' +\n-                \", status=\" + status +\n-                \", processDefinitionVersion='\" + processDefinitionVersion + '\\'' +\n-                \", processDefinitionName='\" + processDefinitionName + '\\'' +\n-                '}';\n-    }\n-}\n+  public void setId(String id) {\n+    this.id = id;\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  public void setProcessDefinitionId(String processDefinitionId) {\n+    this.processDefinitionId = processDefinitionId;\n+  }\n+\n+  public void setProcessDefinitionKey(String processDefinitionKey) {\n+    this.processDefinitionKey = processDefinitionKey;\n+  }\n+\n+  public void setInitiator(String initiator) {\n+    this.initiator = initiator;\n+  }\n+\n+  public void setStartDate(Date startDate) {\n+    this.startDate = startDate;\n+  }\n+\n+  public void setBusinessKey(String businessKey) {\n+    this.businessKey = businessKey;\n+  }\n+\n+  public void setStatus(ProcessInstanceStatus status) {\n+    this.status = status;\n+  }\n+\n+  public void setParentId(String parentId) {\n+    this.parentId = parentId;\n+  }\n+\n+  public void setProcessDefinitionVersion(Integer processDefinitionVersion) {\n+    this.processDefinitionVersion = processDefinitionVersion;\n+  }\n+\n+  public void setProcessDefinitionName(String processDefinitionName) {\n+    this.processDefinitionName = processDefinitionName;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+\n+    ProcessInstanceImpl that = (ProcessInstanceImpl) o;\n+    return Objects.equals(id, that.id) && Objects.equals(name, that.name) && Objects.equals(processDefinitionId,\n+                                                                                            that.processDefinitionId) && Objects.equals(processDefinitionKey,\n+                                                                                                                                        that.processDefinitionKey) && Objects.equals(initiator, that.initiator) && Objects.equals(startDate, that.startDate) && Objects.equals(businessKey, that.businessKey) && status == that.status && Objects.equals(parentId, that.parentId) && Objects.equals(processDefinitionVersion,\n+                                                                                                                                                                                                                                                                                                                                                                                                    that.processDefinitionVersion) && Objects.equals(processDefinitionName,\n+                                                                                                                                                                                                                                                                                                                                                                                                                                                     that.processDefinitionName);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), id, name, processDefinitionId, processDefinitionKey, initiator, startDate, businessKey, status, parentId, processDefinitionVersion, processDefinitionName);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"ProcessInstance{\" + \"id='\" + id + '\\'' + \", name='\" + name + '\\'' + \", processDefinitionId='\" + processDefinitionId + '\\'' + \", processDefinitionKey='\" + processDefinitionKey + '\\'' + \", parentId='\" + parentId + '\\'' + \", initiator='\" + initiator + '\\'' + \", startDate=\" + startDate + \", businessKey='\" + businessKey + '\\'' + \", status=\" + status + \", processDefinitionVersion='\" + processDefinitionVersion + '\\'' + \", processDefinitionName='\" + processDefinitionName + '\\'' + '}';\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 226
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/992/ProcessInstanceImpl.java\nindex 6db03ffb0e9..db9528b913c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/992/ProcessInstanceImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Date;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/992/ProcessInstanceImpl.java\nindex 6db03ffb0e9..db9528b913c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/992/ProcessInstanceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/992/ProcessInstanceImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Date;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "335",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "final class FauxNamespace implements OMNamespace\n{\n\tprivate final OMContainer parent;\n\tprivate String prefix;\n\tprivate String uri;\n\tprivate OMNamespace namespace;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/335/FauxNamespace.java\nindex 2bb10146c06..6ef24b77bca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/335/FauxNamespace.java\n@@ -25,7 +25,7 @@ import org.genxdm.exceptions.PreCondition;\n  */\n final class FauxNamespace implements OMNamespace\n {\n-\tprivate final OMContainer parent;\n+private final OMContainer parent;\n \tprivate String prefix;\n \tprivate String uri;\n \tprivate OMNamespace namespace;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/335/FauxNamespace.java\nindex 2bb10146c06..b6f1f898d17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/335/FauxNamespace.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.bridge.axiom;\n \n import org.apache.axiom.om.OMContainer;\n@@ -23,87 +24,87 @@ import org.genxdm.exceptions.PreCondition;\n /**\n  * This wrapper class ensures that a namespace node has a parent.\n  */\n-final class FauxNamespace implements OMNamespace\n-{\n-\tprivate final OMContainer parent;\n-\tprivate String prefix;\n-\tprivate String uri;\n-\tprivate OMNamespace namespace;\n-\n-\t// use for namespaces that exist like xmlns, etc.\n-\tpublic FauxNamespace(final String prefix, final String uri, final OMContainer root)\n-\t{\n-\t\tthis.prefix = PreCondition.assertNotNull(prefix, \"prefix\");\n-\t\tthis.uri = PreCondition.assertNotNull(uri, \"uri\");\n-\t\tthis.parent = root;\n-\t}\n-\t\n-\t// use to wrap namespaces so that getParent() works.\n-\tpublic FauxNamespace(final OMNamespace namespace, final OMElement parent)\n-\t{\n-\t    this.namespace = PreCondition.assertNotNull(namespace);\n-\t    this.parent = PreCondition.assertNotNull(parent);\n-\t}\n-\n-\tpublic boolean equals(final String uri, final String prefix)\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.equals(uri, prefix);\n+final class FauxNamespace implements OMNamespace {\n+    private final OMContainer parent;\n+\n+    private String prefix;\n+\n+    private String uri;\n+\n+    private OMNamespace namespace;\n+\n+    // use for namespaces that exist like xmlns, etc.\n+    public FauxNamespace(final String prefix, final String uri, final OMContainer root) {\n+        this.prefix = PreCondition.assertNotNull(prefix, \"prefix\");\n+        this.uri = PreCondition.assertNotNull(uri, \"uri\");\n+        this.parent = root;\n+    }\n+\n+    // use to wrap namespaces so that getParent() works.\n+    public FauxNamespace(final OMNamespace namespace, final OMElement parent) {\n+        this.namespace = PreCondition.assertNotNull(namespace);\n+        this.parent = PreCondition.assertNotNull(parent);\n+    }\n+\n+    public boolean equals(final String uri, final String prefix) {\n+        if (namespace != null) {\n+            return namespace.equals(uri, prefix);\n+        }\n         return (this.uri.equals(uri) &&\n-                (this.prefix == null ? prefix == null :\n-                        this.prefix.equals(prefix)));\n-\t}\n-\t\n-\tpublic boolean equals(Object obj)\n-\t{\n-        if (!(obj instanceof FauxNamespace))\n-        \treturn false;\n-        \n-\t    if (namespace != null)\n-\t        return namespace.equals(obj);\n-\t    FauxNamespace other = (FauxNamespace)obj;\n-\t    if (parent != other.getParent() ) {\n-\t    \treturn false;\n-\t    }\n-\t    \n+            (this.prefix == null ? prefix == null :\n+                this.prefix.equals(prefix)));\n+    }\n+\n+    public boolean equals(Object obj) {\n+        if (!(obj instanceof FauxNamespace)) {\n+            return false;\n+        }\n+\n+        if (namespace != null) {\n+            return namespace.equals(obj);\n+        }\n+        FauxNamespace other = (FauxNamespace) obj;\n+        if (parent != other.getParent()) {\n+            return false;\n+        }\n+\n         String otherPrefix = other.getPrefix();\n         return (uri.equals(other.getNamespaceURI()) &&\n-                (prefix == null ? otherPrefix == null :\n-                        prefix.equals(otherPrefix)));\n-\t}\n-\n-\t@SuppressWarnings(\"deprecation\")\n-\tpublic String getName()\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.getName();\n-\t    return uri;\n-\t}\n-\n-\tpublic String getNamespaceURI()\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.getNamespaceURI();\n-\t\treturn uri;\n-\t}\n-\n-\tpublic OMContainer getParent()\n-\t{\n-\t\treturn parent;\n-\t}\n-\n-\tpublic String getPrefix()\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.getPrefix();\n-\t\treturn prefix;\n-\t}\n-\n-    public int hashCode() \n-    {\n-    \tint parentHash = parent != null ? parent.hashCode() : 0x3f3f3f3f;\n-        if (namespace != null)\n+            (prefix == null ? otherPrefix == null :\n+                prefix.equals(otherPrefix)));\n+    }\n+\n+    @SuppressWarnings(\"deprecation\")\n+    public String getName() {\n+        if (namespace != null) {\n+            return namespace.getName();\n+        }\n+        return uri;\n+    }\n+\n+    public String getNamespaceURI() {\n+        if (namespace != null) {\n+            return namespace.getNamespaceURI();\n+        }\n+        return uri;\n+    }\n+\n+    public OMContainer getParent() {\n+        return parent;\n+    }\n+\n+    public String getPrefix() {\n+        if (namespace != null) {\n+            return namespace.getPrefix();\n+        }\n+        return prefix;\n+    }\n+\n+    public int hashCode() {\n+        int parentHash = parent != null ? parent.hashCode() : 0x3f3f3f3f;\n+        if (namespace != null) {\n             return namespace.hashCode() ^ parentHash;\n+        }\n         return parentHash ^ uri.hashCode() ^ (prefix != null ? prefix.hashCode() : 0);\n     }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/335/FauxNamespace.java\nindex 2bb10146c06..166b39f93a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/335/FauxNamespace.java\n@@ -23,87 +23,85 @@ import org.genxdm.exceptions.PreCondition;\n /**\n  * This wrapper class ensures that a namespace node has a parent.\n  */\n+\n final class FauxNamespace implements OMNamespace\n {\n-\tprivate final OMContainer parent;\n-\tprivate String prefix;\n-\tprivate String uri;\n-\tprivate OMNamespace namespace;\n+    private final OMContainer parent;\n+    private String prefix;\n+    private String uri;\n+    private OMNamespace namespace;\n+\n+    // use for namespaces that exist like xmlns, etc.\n \n-\t// use for namespaces that exist like xmlns, etc.\n-\tpublic FauxNamespace(final String prefix, final String uri, final OMContainer root)\n-\t{\n-\t\tthis.prefix = PreCondition.assertNotNull(prefix, \"prefix\");\n-\t\tthis.uri = PreCondition.assertNotNull(uri, \"uri\");\n-\t\tthis.parent = root;\n-\t}\n-\t\n-\t// use to wrap namespaces so that getParent() works.\n-\tpublic FauxNamespace(final OMNamespace namespace, final OMElement parent)\n-\t{\n-\t    this.namespace = PreCondition.assertNotNull(namespace);\n-\t    this.parent = PreCondition.assertNotNull(parent);\n-\t}\n+    public FauxNamespace(final String prefix, final String uri, final OMContainer root)\n+    {\n+        this.prefix = PreCondition.assertNotNull(prefix, \"prefix\");\n+        this.uri = PreCondition.assertNotNull(uri, \"uri\");\n+        this.parent = root;\n+    }\n+    \n+    // use to wrap namespaces so that getParent() works.\n+\n+    public FauxNamespace(final OMNamespace namespace, final OMElement parent)\n+    {\n+        this.namespace = PreCondition.assertNotNull(namespace);\n+        this.parent = PreCondition.assertNotNull(parent);\n+    }\n \n-\tpublic boolean equals(final String uri, final String prefix)\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.equals(uri, prefix);\n-        return (this.uri.equals(uri) &&\n-                (this.prefix == null ? prefix == null :\n-                        this.prefix.equals(prefix)));\n-\t}\n-\t\n-\tpublic boolean equals(Object obj)\n-\t{\n+    public boolean equals(final String uri, final String prefix)\n+    {\n+        if (namespace != null)\n+            return namespace.equals(uri, prefix);\n+        return (this.uri.equals(uri) && (this.prefix == null ? prefix == null : this.prefix.equals(prefix)));\n+    }\n+\n+    public boolean equals(Object obj)\n+    {\n         if (!(obj instanceof FauxNamespace))\n-        \treturn false;\n-        \n-\t    if (namespace != null)\n-\t        return namespace.equals(obj);\n-\t    FauxNamespace other = (FauxNamespace)obj;\n-\t    if (parent != other.getParent() ) {\n-\t    \treturn false;\n-\t    }\n-\t    \n+            return false;\n+        if (namespace != null)\n+            return namespace.equals(obj);\n+        FauxNamespace other = (FauxNamespace)obj;\n+        if (parent != other.getParent())\n+        {\n+            return false;\n+        }\n         String otherPrefix = other.getPrefix();\n-        return (uri.equals(other.getNamespaceURI()) &&\n-                (prefix == null ? otherPrefix == null :\n-                        prefix.equals(otherPrefix)));\n-\t}\n+        return (uri.equals(other.getNamespaceURI()) && (prefix == null ? otherPrefix == null : prefix.equals(otherPrefix)));\n+    }\n \n-\t@SuppressWarnings(\"deprecation\")\n-\tpublic String getName()\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.getName();\n-\t    return uri;\n-\t}\n+    @SuppressWarnings(\"deprecation\")\n+    public String getName()\n+    {\n+        if (namespace != null)\n+            return namespace.getName();\n+        return uri;\n+    }\n \n-\tpublic String getNamespaceURI()\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.getNamespaceURI();\n-\t\treturn uri;\n-\t}\n+    public String getNamespaceURI()\n+    {\n+        if (namespace != null)\n+            return namespace.getNamespaceURI();\n+        return uri;\n+    }\n \n-\tpublic OMContainer getParent()\n-\t{\n-\t\treturn parent;\n-\t}\n+    public OMContainer getParent()\n+    {\n+        return parent;\n+    }\n \n-\tpublic String getPrefix()\n-\t{\n-\t    if (namespace != null)\n-\t        return namespace.getPrefix();\n-\t\treturn prefix;\n-\t}\n+    public String getPrefix()\n+    {\n+        if (namespace != null)\n+            return namespace.getPrefix();\n+        return prefix;\n+    }\n \n-    public int hashCode() \n+    public int hashCode()\n     {\n-    \tint parentHash = parent != null ? parent.hashCode() : 0x3f3f3f3f;\n+        int parentHash = parent != null ? parent.hashCode() : 0x3f3f3f3f;\n         if (namespace != null)\n             return namespace.hashCode() ^ parentHash;\n         return parentHash ^ uri.hashCode() ^ (prefix != null ? prefix.hashCode() : 0);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/335/FauxNamespace.java\nindex 2bb10146c06..6ef24b77bca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/335/FauxNamespace.java\n@@ -25,7 +25,7 @@ import org.genxdm.exceptions.PreCondition;\n  */\n final class FauxNamespace implements OMNamespace\n {\n-\tprivate final OMContainer parent;\n+private final OMContainer parent;\n \tprivate String prefix;\n \tprivate String uri;\n \tprivate OMNamespace namespace;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/335/FauxNamespace.java\nindex 2bb10146c06..dba98595645 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/335/FauxNamespace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/335/FauxNamespace.java\n@@ -25,7 +25,7 @@ import org.genxdm.exceptions.PreCondition;\n  */\n final class FauxNamespace implements OMNamespace\n {\n-\tprivate final OMContainer parent;\n+    private final OMContainer parent;\n \tprivate String prefix;\n \tprivate String uri;\n \tprivate OMNamespace namespace;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
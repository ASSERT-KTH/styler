{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1750",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1750/PropertyCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1750/PropertyCheckType.java\nindex cdb9b5b7d00..90eaedea932 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1750/PropertyCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1750/PropertyCheckType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.txlog.checktypes;\n \n import java.util.ArrayList;\n@@ -27,74 +28,74 @@ import org.neo4j.kernel.impl.store.record.PropertyBlock;\n import org.neo4j.kernel.impl.store.record.PropertyRecord;\n import org.neo4j.kernel.impl.transaction.command.Command;\n \n-class PropertyCheckType extends CheckType<Command.PropertyCommand,PropertyRecord>\n+class PropertyCheckType extends CheckType<Command.PropertyCommand, PropertyRecord>\n {\n-    PropertyCheckType()\n-    {\n-        super( Command.PropertyCommand.class );\n-    }\n+  PropertyCheckType()\n+  {\n+    super(Command.PropertyCommand.class);\n+  }\n \n-    @Override\n-    public PropertyRecord before( Command.PropertyCommand command )\n-    {\n-        return command.getBefore();\n-    }\n+  @Override\n+  public PropertyRecord before(Command.PropertyCommand command)\n+  {\n+    return command.getBefore();\n+  }\n \n-    @Override\n-    public PropertyRecord after( Command.PropertyCommand command )\n-    {\n-        return command.getAfter();\n-    }\n+  @Override\n+  public PropertyRecord after(Command.PropertyCommand command)\n+  {\n+    return command.getAfter();\n+  }\n+\n+  @Override\n+  protected boolean inUseRecordsEqual(PropertyRecord record1, PropertyRecord record2)\n+  {\n+    return record1.isNodeSet() == record2.isNodeSet() &&\n+        record1.isRelSet() == record2.isRelSet() &&\n+        record1.getNodeId() == record2.getNodeId() &&\n+        record1.getRelId() == record2.getRelId() &&\n+        record1.getNextProp() == record2.getNextProp() &&\n+        record1.getPrevProp() == record2.getPrevProp() &&\n+        blocksEqual(record1, record2);\n+  }\n+\n+  @Override\n+  public String name()\n+  {\n+    return \"property\";\n+  }\n \n-    @Override\n-    protected boolean inUseRecordsEqual( PropertyRecord record1, PropertyRecord record2 )\n+  private static boolean blocksEqual(PropertyRecord r1, PropertyRecord r2)\n+  {\n+    if (r1.size() != r2.size())\n     {\n-        return record1.isNodeSet() == record2.isNodeSet() &&\n-               record1.isRelSet() == record2.isRelSet() &&\n-               record1.getNodeId() == record2.getNodeId() &&\n-               record1.getRelId() == record2.getRelId() &&\n-               record1.getNextProp() == record2.getNextProp() &&\n-               record1.getPrevProp() == record2.getPrevProp() &&\n-               blocksEqual( record1, record2 );\n+      return false;\n     }\n-\n-    @Override\n-    public String name()\n+    List<PropertyBlock> r1Blocks = blocks(r1);\n+    List<PropertyBlock> r2Blocks = blocks(r2);\n+    if (r1Blocks.size() != r2Blocks.size())\n     {\n-        return \"property\";\n+      return false;\n     }\n-\n-    private static boolean blocksEqual( PropertyRecord r1, PropertyRecord r2 )\n+    for (int i = 0; i < r1Blocks.size(); i++)\n     {\n-        if ( r1.size() != r2.size() )\n-        {\n-            return false;\n-        }\n-        List<PropertyBlock> r1Blocks = blocks( r1 );\n-        List<PropertyBlock> r2Blocks = blocks( r2 );\n-        if ( r1Blocks.size() != r2Blocks.size() )\n-        {\n-            return false;\n-        }\n-        for ( int i = 0; i < r1Blocks.size(); i++ )\n-        {\n-            PropertyBlock r1Block = r1Blocks.get( i );\n-            PropertyBlock r2Block = r2Blocks.get( i );\n-            if ( !Arrays.equals( r1Block.getValueBlocks(), r2Block.getValueBlocks() ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      PropertyBlock r1Block = r1Blocks.get(i);\n+      PropertyBlock r2Block = r2Blocks.get(i);\n+      if (!Arrays.equals(r1Block.getValueBlocks(), r2Block.getValueBlocks()))\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n \n-    private static List<PropertyBlock> blocks( PropertyRecord record )\n+  private static List<PropertyBlock> blocks(PropertyRecord record)\n+  {\n+    List<PropertyBlock> result = new ArrayList<>();\n+    for (PropertyBlock block : record)\n     {\n-        List<PropertyBlock> result = new ArrayList<>();\n-        for ( PropertyBlock block : record )\n-        {\n-            result.add( block );\n-        }\n-        return result;\n+      result.add(block);\n     }\n+    return result;\n+  }\n }\n",
            "diff_size": 84
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "59",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1750/PropertyCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1750/PropertyCheckType.java\nindex cdb9b5b7d00..4216342ff25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1750/PropertyCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1750/PropertyCheckType.java\n@@ -49,8 +49,7 @@ class PropertyCheckType extends CheckType<Command.PropertyCommand,PropertyRecord\n     @Override\n     protected boolean inUseRecordsEqual( PropertyRecord record1, PropertyRecord record2 )\n     {\n-        return record1.isNodeSet() == record2.isNodeSet() &&\n-               record1.isRelSet() == record2.isRelSet() &&\n+        return record1.isNodeSet() == record2.isNodeSet() &&record1.isRelSet() == record2.isRelSet() &&\n                record1.getNodeId() == record2.getNodeId() &&\n                record1.getRelId() == record2.getRelId() &&\n                record1.getNextProp() == record2.getNextProp() &&\n@@ -95,6 +94,7 @@ class PropertyCheckType extends CheckType<Command.PropertyCommand,PropertyRecord\n         {\n             result.add( block );\n         }\n-        return result;\n+\n+return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
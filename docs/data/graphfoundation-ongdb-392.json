{
    "project_name": "graphfoundation-ongdb",
    "error_id": "392",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/392/SpecialBuiltInProcedures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/392/SpecialBuiltInProcedures.java\nindex 54a1a5de291..e77d3af9f72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/392/SpecialBuiltInProcedures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/392/SpecialBuiltInProcedures.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.builtinprocs;\n \n import java.lang.management.ManagementFactory;\n@@ -34,21 +35,21 @@ import static org.neo4j.internal.kernel.api.procs.ProcedureSignature.procedureNa\n  */\n public class SpecialBuiltInProcedures implements ThrowingConsumer<Procedures, ProcedureException>\n {\n-    private final String neo4jVersion;\n-    private final String neo4jEdition;\n+  private final String neo4jVersion;\n+  private final String neo4jEdition;\n \n-    public SpecialBuiltInProcedures( String neo4jVersion, String neo4jEdition )\n-    {\n-        this.neo4jVersion = neo4jVersion;\n-        this.neo4jEdition = neo4jEdition;\n-    }\n+  public SpecialBuiltInProcedures(String neo4jVersion, String neo4jEdition)\n+  {\n+    this.neo4jVersion = neo4jVersion;\n+    this.neo4jEdition = neo4jEdition;\n+  }\n \n-    @Override\n-    public void accept( Procedures procs ) throws ProcedureException\n-    {\n-        procs.register( new ListComponentsProcedure( procedureName( \"dbms\", \"components\" ),\n-                neo4jVersion, neo4jEdition ) );\n-        procs.register( new JmxQueryProcedure( procedureName( \"dbms\", \"queryJmx\" ),\n-                ManagementFactory.getPlatformMBeanServer() ) );\n-    }\n+  @Override\n+  public void accept(Procedures procs) throws ProcedureException\n+  {\n+    procs.register(new ListComponentsProcedure(procedureName(\"dbms\", \"components\"),\n+        neo4jVersion, neo4jEdition));\n+    procs.register(new JmxQueryProcedure(procedureName(\"dbms\", \"queryJmx\"),\n+        ManagementFactory.getPlatformMBeanServer()));\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/392/SpecialBuiltInProcedures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/392/SpecialBuiltInProcedures.java\nindex 54a1a5de291..d8fd3e510fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/392/SpecialBuiltInProcedures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/392/SpecialBuiltInProcedures.java\n@@ -48,7 +48,6 @@ public class SpecialBuiltInProcedures implements ThrowingConsumer<Procedures, Pr\n     {\n         procs.register( new ListComponentsProcedure( procedureName( \"dbms\", \"components\" ),\n                 neo4jVersion, neo4jEdition ) );\n-        procs.register( new JmxQueryProcedure( procedureName( \"dbms\", \"queryJmx\" ),\n-                ManagementFactory.getPlatformMBeanServer() ) );\n+procs.register( new JmxQueryProcedure( procedureName( \"dbms\", \"queryJmx\" ), ManagementFactory.getPlatformMBeanServer() ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
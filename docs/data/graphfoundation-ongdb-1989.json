{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1989",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1989/LastCommittedIndexFinder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1989/LastCommittedIndexFinder.java\nindex bc47cf3fa65..b365628904f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1989/LastCommittedIndexFinder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1989/LastCommittedIndexFinder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.tx;\n \n import org.neo4j.cursor.IOCursor;\n@@ -34,50 +35,49 @@ import static org.neo4j.causalclustering.core.state.machines.tx.LogIndexTxHeader\n  */\n public class LastCommittedIndexFinder\n {\n-    private final TransactionIdStore transactionIdStore;\n-    private final LogicalTransactionStore transactionStore;\n-    private final Log log;\n+  private final TransactionIdStore transactionIdStore;\n+  private final LogicalTransactionStore transactionStore;\n+  private final Log log;\n+\n+  public LastCommittedIndexFinder(TransactionIdStore transactionIdStore,\n+                                  LogicalTransactionStore transactionStore, LogProvider logProvider)\n+  {\n+    this.transactionIdStore = transactionIdStore;\n+    this.transactionStore = transactionStore;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    public LastCommittedIndexFinder( TransactionIdStore transactionIdStore,\n-                                     LogicalTransactionStore transactionStore, LogProvider logProvider )\n+  public long getLastCommittedIndex()\n+  {\n+    long lastConsensusIndex;\n+    long lastTxId = transactionIdStore.getLastCommittedTransactionId();\n+    log.info(\"Last transaction id in metadata store %d\", lastTxId);\n+\n+    CommittedTransactionRepresentation lastTx = null;\n+    try (IOCursor<CommittedTransactionRepresentation> transactions =\n+             transactionStore.getTransactions(lastTxId))\n+    {\n+      while (transactions.next())\n+      {\n+        lastTx = transactions.get();\n+      }\n+    } catch (Exception e)\n     {\n-        this.transactionIdStore = transactionIdStore;\n-        this.transactionStore = transactionStore;\n-        this.log = logProvider.getLog( getClass() );\n+      throw new RuntimeException(e);\n     }\n \n-    public long getLastCommittedIndex()\n+    if (lastTx == null)\n     {\n-        long lastConsensusIndex;\n-        long lastTxId = transactionIdStore.getLastCommittedTransactionId();\n-        log.info( \"Last transaction id in metadata store %d\", lastTxId );\n-\n-        CommittedTransactionRepresentation lastTx = null;\n-        try ( IOCursor<CommittedTransactionRepresentation> transactions =\n-                transactionStore.getTransactions( lastTxId ) )\n-        {\n-            while ( transactions.next() )\n-            {\n-                lastTx = transactions.get();\n-            }\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-\n-        if ( lastTx == null )\n-        {\n-            throw new RuntimeException( \"We must have at least one transaction telling us where we are at in the consensus log.\" );\n-        }\n+      throw new RuntimeException(\"We must have at least one transaction telling us where we are at in the consensus log.\");\n+    }\n \n-        log.info( \"Start id of last committed transaction in transaction log %d\", lastTx.getStartEntry().getLastCommittedTxWhenTransactionStarted() );\n-        log.info( \"Last committed transaction id in transaction log %d\", lastTx.getCommitEntry().getTxId() );\n+    log.info(\"Start id of last committed transaction in transaction log %d\", lastTx.getStartEntry().getLastCommittedTxWhenTransactionStarted());\n+    log.info(\"Last committed transaction id in transaction log %d\", lastTx.getCommitEntry().getTxId());\n \n-        byte[] lastHeaderFound = lastTx.getStartEntry().getAdditionalHeader();\n-        lastConsensusIndex = decodeLogIndexFromTxHeader( lastHeaderFound );\n+    byte[] lastHeaderFound = lastTx.getStartEntry().getAdditionalHeader();\n+    lastConsensusIndex = decodeLogIndexFromTxHeader(lastHeaderFound);\n \n-        log.info( \"Last committed consensus log index committed into tx log %d\", lastConsensusIndex );\n-        return lastConsensusIndex;\n-    }\n+    log.info(\"Last committed consensus log index committed into tx log %d\", lastConsensusIndex);\n+    return lastConsensusIndex;\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1989/LastCommittedIndexFinder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1989/LastCommittedIndexFinder.java\nindex bc47cf3fa65..86a537154e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1989/LastCommittedIndexFinder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1989/LastCommittedIndexFinder.java\n@@ -38,9 +38,8 @@ public class LastCommittedIndexFinder\n     private final LogicalTransactionStore transactionStore;\n     private final Log log;\n \n-    public LastCommittedIndexFinder( TransactionIdStore transactionIdStore,\n-                                     LogicalTransactionStore transactionStore, LogProvider logProvider )\n-    {\n+    public LastCommittedIndexFinder( TransactionIdStore transactionIdStore, LogicalTransactionStore transactionStore, LogProvider logProvider )\n+{\n         this.transactionIdStore = transactionIdStore;\n         this.transactionStore = transactionStore;\n         this.log = logProvider.getLog( getClass() );\n@@ -51,10 +50,8 @@ public class LastCommittedIndexFinder\n         long lastConsensusIndex;\n         long lastTxId = transactionIdStore.getLastCommittedTransactionId();\n         log.info( \"Last transaction id in metadata store %d\", lastTxId );\n-\n-        CommittedTransactionRepresentation lastTx = null;\n-        try ( IOCursor<CommittedTransactionRepresentation> transactions =\n-                transactionStore.getTransactions( lastTxId ) )\n+CommittedTransactionRepresentation lastTx = null;\n+        try ( IOCursor<CommittedTransactionRepresentation> transactions = transactionStore.getTransactions( lastTxId ) )\n         {\n             while ( transactions.next() )\n             {\n@@ -76,8 +73,7 @@ public class LastCommittedIndexFinder\n \n         byte[] lastHeaderFound = lastTx.getStartEntry().getAdditionalHeader();\n         lastConsensusIndex = decodeLogIndexFromTxHeader( lastHeaderFound );\n-\n-        log.info( \"Last committed consensus log index committed into tx log %d\", lastConsensusIndex );\n+log.info( \"Last committed consensus log index committed into tx log %d\", lastConsensusIndex );\n         return lastConsensusIndex;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
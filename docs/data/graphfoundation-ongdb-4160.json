{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4160",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "110",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "212",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "220",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4160/DynamicSizeUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4160/DynamicSizeUtil.java\nindex e01fe33fd88..79daff01b57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4160/DynamicSizeUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4160/DynamicSizeUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -31,7 +32,7 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.putUnsignedShort;\n  * - Key pointer in offset array (K*), 2B\n  * - keyValueSize, 1B-4B\n  * - Key tombstone, first bit in keyValueSize\n- *\n+ * <p>\n  * Format of key/value size is dynamic in itself, first byte being:\n  * <pre>\n  * [T,K,V,k,k,k,k,k]\n@@ -41,14 +42,14 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.putUnsignedShort;\n  * If {@code V} is set there is a value size to be read directly after key size.\n  * This first byte can fit key size < 32 and we only need the second byte if key size is larger.\n  * Together with the second byte we can fit key size < 8192.\n- *\n+ * <p>\n  * Byte following key size bytes (second or third byte depending on how many bytes needed for key size):\n  * <pre>\n  * [V,v,v,v,v,v,v,v]\n  * </pre>\n  * If {@code V} is set the next byte contains the higher order bits of the value size.\n  * This first value size byte can fit value size < 128 and with the second byte we can fit value size < 32768.\n- *\n+ * <p>\n  * So in total key/value size has six different looks (not including tombstone being set or not set):\n  * <pre>\n  * One byte key, no value\n@@ -70,200 +71,199 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.putUnsignedShort;\n  * [0,1,1,k,k,k,k,k][0,k,k,k,k,k,k,k][1,v,v,v,v,v,v,v][v,v,v,v,v,v,v,v]\n  * </pre>\n  * This key/value size format is used, both for leaves and internal nodes even though internal nodes can never have values.\n- *\n+ * <p>\n  * The most significant key bit in the second byte (shown as 0) is not needed for the discrete key sizes for our 8k page size\n  * and is to be considered reserved for future use.\n- *\n+ * <p>\n  * Relative layout of key and key_value\n  * KeyOffset points to the exact offset where key entry or key_value entry\n  * can be read.\n  * key entry - [keyValueSize 1B-2B|actualKey]\n  * key_value entry - [keyValueSize 1B-4B|actualKey|actualValue]\n- *\n+ * <p>\n  * Tombstone\n  * First bit in keyValueSize is used as a tombstone, set to 1 if key is dead.\n  */\n class DynamicSizeUtil\n {\n-    static final int SIZE_OFFSET = 2;\n-    static final int SIZE_KEY_SIZE = 2;\n-    static final int SIZE_VALUE_SIZE = 2;\n-    static final int SIZE_TOTAL_OVERHEAD = SIZE_OFFSET + SIZE_KEY_SIZE + SIZE_VALUE_SIZE;\n+  static final int SIZE_OFFSET = 2;\n+  static final int SIZE_KEY_SIZE = 2;\n+  static final int SIZE_VALUE_SIZE = 2;\n+  static final int SIZE_TOTAL_OVERHEAD = SIZE_OFFSET + SIZE_KEY_SIZE + SIZE_VALUE_SIZE;\n \n-    private static final int FLAG_FIRST_BYTE_TOMBSTONE = 0x80;\n-    private static final long FLAG_READ_TOMBSTONE = 0x80000000_00000000L;\n-    // mask for one-byte key size to map to the k's in [_,_,_,k,k,k,k,k]\n-    static final int MASK_ONE_BYTE_KEY_SIZE = 0x1F;\n-    // max two-byte key size to map to the k's in [_,_,_,k,k,k,k,k][_,k,k,k,k,k,k,k]\n-    static final int MAX_TWO_BYTE_KEY_SIZE = 0xFFF;\n-    // mask for one-byte value size to map to the v's in [_,v,v,v,v,v,v,v]\n-    static final int MASK_ONE_BYTE_VALUE_SIZE = 0x7F;\n-    // max two-byte value size to map to the v's in [_,v,v,v,v,v,v,v][v,v,v,v,v,v,v,v]\n-    private static final int MAX_TWO_BYTE_VALUE_SIZE = 0x7FFF;\n-    private static final int FLAG_HAS_VALUE_SIZE = 0x20;\n-    private static final int FLAG_ADDITIONAL_KEY_SIZE = 0x40;\n-    private static final int FLAG_ADDITIONAL_VALUE_SIZE = 0x80;\n-    private static final int SHIFT_LSB_KEY_SIZE = 5;\n-    private static final int SHIFT_LSB_VALUE_SIZE = 7;\n+  private static final int FLAG_FIRST_BYTE_TOMBSTONE = 0x80;\n+  private static final long FLAG_READ_TOMBSTONE = 0x80000000_00000000L;\n+  // mask for one-byte key size to map to the k's in [_,_,_,k,k,k,k,k]\n+  static final int MASK_ONE_BYTE_KEY_SIZE = 0x1F;\n+  // max two-byte key size to map to the k's in [_,_,_,k,k,k,k,k][_,k,k,k,k,k,k,k]\n+  static final int MAX_TWO_BYTE_KEY_SIZE = 0xFFF;\n+  // mask for one-byte value size to map to the v's in [_,v,v,v,v,v,v,v]\n+  static final int MASK_ONE_BYTE_VALUE_SIZE = 0x7F;\n+  // max two-byte value size to map to the v's in [_,v,v,v,v,v,v,v][v,v,v,v,v,v,v,v]\n+  private static final int MAX_TWO_BYTE_VALUE_SIZE = 0x7FFF;\n+  private static final int FLAG_HAS_VALUE_SIZE = 0x20;\n+  private static final int FLAG_ADDITIONAL_KEY_SIZE = 0x40;\n+  private static final int FLAG_ADDITIONAL_VALUE_SIZE = 0x80;\n+  private static final int SHIFT_LSB_KEY_SIZE = 5;\n+  private static final int SHIFT_LSB_VALUE_SIZE = 7;\n \n-    static void putKeyOffset( PageCursor cursor, int keyOffset )\n-    {\n-        putUnsignedShort( cursor, keyOffset );\n-    }\n+  static void putKeyOffset(PageCursor cursor, int keyOffset)\n+  {\n+    putUnsignedShort(cursor, keyOffset);\n+  }\n \n-    static int readKeyOffset( PageCursor cursor )\n-    {\n-        return getUnsignedShort( cursor );\n-    }\n+  static int readKeyOffset(PageCursor cursor)\n+  {\n+    return getUnsignedShort(cursor);\n+  }\n \n-    static void putKeySize( PageCursor cursor, int keySize )\n-    {\n-        putKeyValueSize( cursor, keySize, 0 );\n-    }\n+  static void putKeySize(PageCursor cursor, int keySize)\n+  {\n+    putKeyValueSize(cursor, keySize, 0);\n+  }\n \n-    static void putKeyValueSize( PageCursor cursor, int keySize, int valueSize )\n-    {\n-        boolean hasAdditionalKeySize = keySize > MASK_ONE_BYTE_KEY_SIZE;\n-        boolean hasValueSize = valueSize > 0;\n+  static void putKeyValueSize(PageCursor cursor, int keySize, int valueSize)\n+  {\n+    boolean hasAdditionalKeySize = keySize > MASK_ONE_BYTE_KEY_SIZE;\n+    boolean hasValueSize = valueSize > 0;\n \n-        // Key size\n+    // Key size\n+    {\n+      byte firstByte = (byte) (keySize & MASK_ONE_BYTE_KEY_SIZE); // Least significant 5 bits\n+      if (hasAdditionalKeySize)\n+      {\n+        firstByte |= FLAG_ADDITIONAL_KEY_SIZE;\n+        if (keySize > MAX_TWO_BYTE_KEY_SIZE)\n         {\n-            byte firstByte = (byte) (keySize & MASK_ONE_BYTE_KEY_SIZE); // Least significant 5 bits\n-            if ( hasAdditionalKeySize )\n-            {\n-                firstByte |= FLAG_ADDITIONAL_KEY_SIZE;\n-                if ( keySize > MAX_TWO_BYTE_KEY_SIZE )\n-                {\n-                    throw new IllegalArgumentException(\n-                            format( \"Max supported key size is %d, but tried to store key of size %d\", MAX_TWO_BYTE_KEY_SIZE, keySize ) );\n-                }\n-            }\n-            if ( hasValueSize )\n-            {\n-                firstByte |= FLAG_HAS_VALUE_SIZE;\n-            }\n-            cursor.putByte( firstByte );\n-\n-            if ( hasAdditionalKeySize )\n-            {\n-                // Assuming no key size larger than 4k\n-                cursor.putByte( (byte) (keySize >> SHIFT_LSB_KEY_SIZE) );\n-            }\n+          throw new IllegalArgumentException(\n+              format(\"Max supported key size is %d, but tried to store key of size %d\", MAX_TWO_BYTE_KEY_SIZE, keySize));\n         }\n+      }\n+      if (hasValueSize)\n+      {\n+        firstByte |= FLAG_HAS_VALUE_SIZE;\n+      }\n+      cursor.putByte(firstByte);\n \n-        // Value size\n-        {\n-            if ( hasValueSize )\n-            {\n-                boolean needsAdditionalValueSize = valueSize > MASK_ONE_BYTE_VALUE_SIZE;\n-                byte firstByte = (byte) (valueSize & MASK_ONE_BYTE_VALUE_SIZE); // Least significant 7 bits\n-                if ( needsAdditionalValueSize )\n-                {\n-                    if ( valueSize > MAX_TWO_BYTE_VALUE_SIZE )\n-                    {\n-                        throw new IllegalArgumentException(\n-                                format( \"Max supported value size is %d, but tried to store value of size %d\", MAX_TWO_BYTE_VALUE_SIZE, valueSize ) );\n-                    }\n-                    firstByte |= FLAG_ADDITIONAL_VALUE_SIZE;\n-                }\n-                cursor.putByte( firstByte );\n-\n-                if ( needsAdditionalValueSize )\n-                {\n-                    // Assuming no value size larger than 16k\n-                    cursor.putByte( (byte) (valueSize >> SHIFT_LSB_VALUE_SIZE) );\n-                }\n-            }\n-        }\n+      if (hasAdditionalKeySize)\n+      {\n+        // Assuming no key size larger than 4k\n+        cursor.putByte((byte) (keySize >> SHIFT_LSB_KEY_SIZE));\n+      }\n     }\n \n-    static long readKeyValueSize( PageCursor cursor )\n+    // Value size\n     {\n-        byte firstByte = cursor.getByte();\n-        boolean hasTombstone = hasTombstone( firstByte );\n-        boolean hasAdditionalKeySize = (firstByte & FLAG_ADDITIONAL_KEY_SIZE) != 0;\n-        boolean hasValueSize = (firstByte & FLAG_HAS_VALUE_SIZE) != 0;\n-        int keySizeLsb = firstByte & MASK_ONE_BYTE_KEY_SIZE;\n-        long keySize;\n-        if ( hasAdditionalKeySize )\n+      if (hasValueSize)\n+      {\n+        boolean needsAdditionalValueSize = valueSize > MASK_ONE_BYTE_VALUE_SIZE;\n+        byte firstByte = (byte) (valueSize & MASK_ONE_BYTE_VALUE_SIZE); // Least significant 7 bits\n+        if (needsAdditionalValueSize)\n         {\n-            int keySizeMsb = cursor.getByte() & 0xFF;\n-            keySize = (keySizeMsb << SHIFT_LSB_KEY_SIZE) | keySizeLsb;\n-        }\n-        else\n-        {\n-            keySize = keySizeLsb;\n+          if (valueSize > MAX_TWO_BYTE_VALUE_SIZE)\n+          {\n+            throw new IllegalArgumentException(\n+                format(\"Max supported value size is %d, but tried to store value of size %d\", MAX_TWO_BYTE_VALUE_SIZE, valueSize));\n+          }\n+          firstByte |= FLAG_ADDITIONAL_VALUE_SIZE;\n         }\n+        cursor.putByte(firstByte);\n \n-        long valueSize;\n-        if ( hasValueSize )\n-        {\n-            byte firstValueByte = cursor.getByte();\n-            int valueSizeLsb = firstValueByte & MASK_ONE_BYTE_VALUE_SIZE;\n-            boolean hasAdditionalValueSize = (firstValueByte & FLAG_ADDITIONAL_VALUE_SIZE) != 0;\n-            if ( hasAdditionalValueSize )\n-            {\n-                int valueSizeMsb = cursor.getByte() & 0xFF;\n-                valueSize = (valueSizeMsb << SHIFT_LSB_VALUE_SIZE) | valueSizeLsb;\n-            }\n-            else\n-            {\n-                valueSize = valueSizeLsb;\n-            }\n-        }\n-        else\n+        if (needsAdditionalValueSize)\n         {\n-            valueSize = 0;\n+          // Assuming no value size larger than 16k\n+          cursor.putByte((byte) (valueSize >> SHIFT_LSB_VALUE_SIZE));\n         }\n-\n-        return (hasTombstone ? FLAG_READ_TOMBSTONE : 0) | (keySize << Integer.SIZE) | valueSize;\n+      }\n     }\n+  }\n \n-    static int extractValueSize( long keyValueSize )\n+  static long readKeyValueSize(PageCursor cursor)\n+  {\n+    byte firstByte = cursor.getByte();\n+    boolean hasTombstone = hasTombstone(firstByte);\n+    boolean hasAdditionalKeySize = (firstByte & FLAG_ADDITIONAL_KEY_SIZE) != 0;\n+    boolean hasValueSize = (firstByte & FLAG_HAS_VALUE_SIZE) != 0;\n+    int keySizeLsb = firstByte & MASK_ONE_BYTE_KEY_SIZE;\n+    long keySize;\n+    if (hasAdditionalKeySize)\n     {\n-        return (int) keyValueSize;\n-    }\n-\n-    static int extractKeySize( long keyValueSize )\n+      int keySizeMsb = cursor.getByte() & 0xFF;\n+      keySize = (keySizeMsb << SHIFT_LSB_KEY_SIZE) | keySizeLsb;\n+    } else\n     {\n-        return (int) ((keyValueSize & ~FLAG_READ_TOMBSTONE) >>> Integer.SIZE);\n+      keySize = keySizeLsb;\n     }\n \n-    static int getOverhead( int keySize, int valueSize )\n+    long valueSize;\n+    if (hasValueSize)\n     {\n-        return 1 + (keySize > MASK_ONE_BYTE_KEY_SIZE ? 1 : 0) + (valueSize > 0 ? 1 : 0) + (valueSize > MASK_ONE_BYTE_VALUE_SIZE ? 1 : 0);\n-    }\n-\n-    static boolean extractTombstone( long keyValueSize )\n+      byte firstValueByte = cursor.getByte();\n+      int valueSizeLsb = firstValueByte & MASK_ONE_BYTE_VALUE_SIZE;\n+      boolean hasAdditionalValueSize = (firstValueByte & FLAG_ADDITIONAL_VALUE_SIZE) != 0;\n+      if (hasAdditionalValueSize)\n+      {\n+        int valueSizeMsb = cursor.getByte() & 0xFF;\n+        valueSize = (valueSizeMsb << SHIFT_LSB_VALUE_SIZE) | valueSizeLsb;\n+      } else\n+      {\n+        valueSize = valueSizeLsb;\n+      }\n+    } else\n     {\n-        return (keyValueSize & FLAG_READ_TOMBSTONE) != 0;\n+      valueSize = 0;\n     }\n \n-    /**\n-     * Put a tombstone into key size.\n-     * @param cursor on offset to key size where tombstone should be put.\n-     */\n-    static void putTombstone( PageCursor cursor )\n-    {\n-        int offset = cursor.getOffset();\n-        byte firstByte = cursor.getByte();\n-        firstByte = withTombstoneFlag( firstByte );\n-        cursor.setOffset( offset );\n-        cursor.putByte( firstByte );\n-    }\n+    return (hasTombstone ? FLAG_READ_TOMBSTONE : 0) | (keySize << Integer.SIZE) | valueSize;\n+  }\n \n-    /**\n-     * Check read key size for tombstone.\n-     * @return True if read key size has tombstone.\n-     */\n-    private static boolean hasTombstone( byte firstKeySizeByte )\n-    {\n-        return (firstKeySizeByte & FLAG_FIRST_BYTE_TOMBSTONE) != 0;\n-    }\n+  static int extractValueSize(long keyValueSize)\n+  {\n+    return (int) keyValueSize;\n+  }\n \n-    private static byte withTombstoneFlag( byte firstByte )\n-    {\n-        assert (firstByte & FLAG_FIRST_BYTE_TOMBSTONE) == 0 : \"First key size byte \" + firstByte + \" is too large to fit tombstone.\";\n-        return (byte) (firstByte | FLAG_FIRST_BYTE_TOMBSTONE);\n-    }\n+  static int extractKeySize(long keyValueSize)\n+  {\n+    return (int) ((keyValueSize & ~FLAG_READ_TOMBSTONE) >>> Integer.SIZE);\n+  }\n+\n+  static int getOverhead(int keySize, int valueSize)\n+  {\n+    return 1 + (keySize > MASK_ONE_BYTE_KEY_SIZE ? 1 : 0) + (valueSize > 0 ? 1 : 0) + (valueSize > MASK_ONE_BYTE_VALUE_SIZE ? 1 : 0);\n+  }\n+\n+  static boolean extractTombstone(long keyValueSize)\n+  {\n+    return (keyValueSize & FLAG_READ_TOMBSTONE) != 0;\n+  }\n+\n+  /**\n+   * Put a tombstone into key size.\n+   *\n+   * @param cursor on offset to key size where tombstone should be put.\n+   */\n+  static void putTombstone(PageCursor cursor)\n+  {\n+    int offset = cursor.getOffset();\n+    byte firstByte = cursor.getByte();\n+    firstByte = withTombstoneFlag(firstByte);\n+    cursor.setOffset(offset);\n+    cursor.putByte(firstByte);\n+  }\n+\n+  /**\n+   * Check read key size for tombstone.\n+   *\n+   * @return True if read key size has tombstone.\n+   */\n+  private static boolean hasTombstone(byte firstKeySizeByte)\n+  {\n+    return (firstKeySizeByte & FLAG_FIRST_BYTE_TOMBSTONE) != 0;\n+  }\n+\n+  private static byte withTombstoneFlag(byte firstByte)\n+  {\n+    assert (firstByte & FLAG_FIRST_BYTE_TOMBSTONE) == 0 : \"First key size byte \" + firstByte + \" is too large to fit tombstone.\";\n+    return (byte) (firstByte | FLAG_FIRST_BYTE_TOMBSTONE);\n+  }\n }\n",
            "diff_size": 230
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
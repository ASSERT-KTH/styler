{
    "project_name": "decorators-squad-eo-yaml",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "1142",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 82).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                Matchers.equalTo(0)\n        );\n        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n        MatcherAssert.assertThat(\n                otherValues.iterator().next().asSequence().size(),\n                Matchers.equalTo(0)",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler/32/ReadYamlMappingTest.java\nindex 0d972ef0372..bc07ed0f60b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler/32/ReadYamlMappingTest.java\n@@ -1139,7 +1139,8 @@ public final class ReadYamlMappingTest {\n                 iterator.next().asSequence().size(),\n                 Matchers.equalTo(0)\n         );\n-        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n+        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence(\n+        ).values();\n         MatcherAssert.assertThat(\n                 otherValues.iterator().next().asSequence().size(),\n                 Matchers.equalTo(0)\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/32/ReadYamlMappingTest.java\nindex 0d972ef0372..3557b143c54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/32/ReadYamlMappingTest.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2016-2020, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.eoyaml;\n \n import java.util.ArrayList;\n@@ -53,7 +54,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsYamlMappingWithStringKey(){\n+    public void returnsYamlMappingWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -79,7 +80,7 @@ public final class ReadYamlMappingTest {\n      * ReadYamlMapping can return its keys.\n      */\n     @Test\n-    public void returnsKeys(){\n+    public void returnsKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"zkey: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"bkey: \", 1));\n@@ -111,7 +112,7 @@ public final class ReadYamlMappingTest {\n      * ReadYamlMapping can return its children.\n      */\n     @Test\n-    public void returnsValuesOfStringKeys(){\n+    public void returnsValuesOfStringKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"zkey: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"bkey: \", 1));\n@@ -163,7 +164,7 @@ public final class ReadYamlMappingTest {\n      * @checkstyle ExecutableStatementCount (100 lines)\n      */\n     @Test\n-    public void returnsValuesOfStringAndComplexKeys(){\n+    public void returnsValuesOfStringAndComplexKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -221,7 +222,7 @@ public final class ReadYamlMappingTest {\n      * YamlMapping key.\n      */\n     @Test\n-    public void returnsYamlMappingWithYamlMappingKey(){\n+    public void returnsYamlMappingWithYamlMappingKey() {\n         final YamlMapping key = new RtYamlMappingBuilder()\n             .add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -248,7 +249,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsYamlSequenceWithStringKey(){\n+    public void returnsYamlSequenceWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -268,7 +269,7 @@ public final class ReadYamlMappingTest {\n      * YamlMapping key.\n      */\n     @Test\n-    public void returnsStringWithYamlMappingKey(){\n+    public void returnsStringWithYamlMappingKey() {\n         final YamlMapping key = new RtYamlMappingBuilder()\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n@@ -294,11 +295,11 @@ public final class ReadYamlMappingTest {\n      */\n     @Test\n     @Ignore\n-    public void returnsFoldedStringWithYamlMappingKey(){\n+    public void returnsFoldedStringWithYamlMappingKey() {\n         final YamlMapping key = new RtYamlMappingBuilder()\n-                .add(\"complex1\", \"mapping1\")\n-                .add(\"complex2\", \"mapping2\")\n-                .build();\n+            .add(\"complex1\", \"mapping1\")\n+            .add(\"complex2\", \"mapping2\")\n+            .build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -322,7 +323,7 @@ public final class ReadYamlMappingTest {\n      */\n     @Test\n     @Ignore\n-    public void returnsFoldedStringWithStringKey(){\n+    public void returnsFoldedStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"key:> \", 1));\n@@ -342,11 +343,11 @@ public final class ReadYamlMappingTest {\n      * YamlMapping key.\n      */\n     @Test\n-    public void returnsLiteralStringWithYamlMappingKey(){\n+    public void returnsLiteralStringWithYamlMappingKey() {\n         final YamlMapping key = new RtYamlMappingBuilder()\n-                .add(\"complex1\", \"mapping1\")\n-                .add(\"complex2\", \"mapping2\")\n-                .build();\n+            .add(\"complex1\", \"mapping1\")\n+            .add(\"complex2\", \"mapping2\")\n+            .build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -380,7 +381,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsLiteralStringWithStringKey(){\n+    public void returnsLiteralStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"key:| \", 1));\n@@ -411,7 +412,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsStringWithStringKey(){\n+    public void returnsStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -432,7 +433,7 @@ public final class ReadYamlMappingTest {\n      * Scalar key.\n      */\n     @Test\n-    public void returnsScalarValueWithStringKey(){\n+    public void returnsScalarValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -452,7 +453,7 @@ public final class ReadYamlMappingTest {\n      * Scalar key.\n      */\n     @Test\n-    public void returnsSequenceValueWithStringKey(){\n+    public void returnsSequenceValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -472,7 +473,7 @@ public final class ReadYamlMappingTest {\n      * Scalar key.\n      */\n     @Test\n-    public void returnsMappingValueWithStringKey(){\n+    public void returnsMappingValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -490,7 +491,7 @@ public final class ReadYamlMappingTest {\n      * ReadYamlMapping can return null if value is missing.\n      */\n     @Test\n-    public void returnsNullIfValueIsMissing(){\n+    public void returnsNullIfValueIsMissing() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -1093,8 +1094,8 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  x: 2\", 3));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n         MatcherAssert.assertThat(\n-                map.value(\"a\").asMapping().string(\"x\"),\n-                Matchers.equalTo(\"2\")\n+            map.value(\"a\").asMapping().string(\"x\"),\n+            Matchers.equalTo(\"2\")\n         );\n     }\n \n@@ -1113,8 +1114,8 @@ public final class ReadYamlMappingTest {\n         Collection<YamlNode> values = map.value(\"def\").asSequence().values();\n         YamlNode firstValue = values.iterator().next();\n         MatcherAssert.assertThat(\n-                firstValue.asMapping().value(\"aa\").asMapping().string(\"x\"),\n-                Matchers.equalTo(\"1\")\n+            firstValue.asMapping().value(\"aa\").asMapping().string(\"x\"),\n+            Matchers.equalTo(\"1\")\n         );\n     }\n \n@@ -1132,17 +1133,18 @@ public final class ReadYamlMappingTest {\n         Collection<YamlNode> values = map.value(\"def\").asSequence().values();\n         Iterator<YamlNode> iterator = values.iterator();\n         MatcherAssert.assertThat(\n-                iterator.next().asMapping().keys(),\n-                Matchers.is(Matchers.empty())\n+            iterator.next().asMapping().keys(),\n+            Matchers.is(Matchers.empty())\n         );\n         MatcherAssert.assertThat(\n-                iterator.next().asSequence().size(),\n-                Matchers.equalTo(0)\n+            iterator.next().asSequence().size(),\n+            Matchers.equalTo(0)\n         );\n-        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n+        Collection<YamlNode> otherValues =\n+            map.value(\"ghi\").asSequence().values();\n         MatcherAssert.assertThat(\n-                otherValues.iterator().next().asSequence().size(),\n-                Matchers.equalTo(0)\n+            otherValues.iterator().next().asSequence().size(),\n+            Matchers.equalTo(0)\n         );\n     }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "223",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "297",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "341",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "344",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "525",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "541",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "548",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "561",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "568",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "584",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "600",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "625",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "635",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "651",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "669",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "678",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "691",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "700",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "716",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "737",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "755",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "763",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "776",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "786",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "799",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "807",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "820",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "830",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "858",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "876",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "885",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "898",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "907",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "923",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "944",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "962",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "970",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "983",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "993",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1006",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1014",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1027",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1037",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1085",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1109",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1110",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/32/ReadYamlMappingTest.java\nindex 0d972ef0372..d88140d7022 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/32/ReadYamlMappingTest.java\n@@ -53,7 +53,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsYamlMappingWithStringKey(){\n+    public void returnsYamlMappingWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -79,7 +79,7 @@ public final class ReadYamlMappingTest {\n      * ReadYamlMapping can return its keys.\n      */\n     @Test\n-    public void returnsKeys(){\n+    public void returnsKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"zkey: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"bkey: \", 1));\n@@ -111,7 +111,7 @@ public final class ReadYamlMappingTest {\n      * ReadYamlMapping can return its children.\n      */\n     @Test\n-    public void returnsValuesOfStringKeys(){\n+    public void returnsValuesOfStringKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"zkey: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"bkey: \", 1));\n@@ -139,8 +139,7 @@ public final class ReadYamlMappingTest {\n                 Yaml.createYamlMappingBuilder()\n                     .add(\"bchildkey1\", \"some\")\n                     .add(\"bchildkey2\", \"values\")\n-                    .build()\n-            )\n+                    .build())\n         );\n         MatcherAssert.assertThat(\n             iterator.next(),\n@@ -152,8 +151,7 @@ public final class ReadYamlMappingTest {\n                 Yaml.createYamlSequenceBuilder()\n                     .add(\"seq\")\n                     .add(\"value\")\n-                    .build()\n-            )\n+                    .build())\n         );\n     }\n \n@@ -163,7 +161,7 @@ public final class ReadYamlMappingTest {\n      * @checkstyle ExecutableStatementCount (100 lines)\n      */\n     @Test\n-    public void returnsValuesOfStringAndComplexKeys(){\n+    public void returnsValuesOfStringAndComplexKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -195,8 +193,7 @@ public final class ReadYamlMappingTest {\n             Matchers.equalTo(\n                 Yaml.createYamlMappingBuilder()\n                     .add(\"map\", \"value\")\n-                    .build()\n-            )\n+                    .build())\n         );\n         MatcherAssert.assertThat(\n             iterator.next(),\n@@ -207,8 +204,7 @@ public final class ReadYamlMappingTest {\n             Matchers.equalTo(\n                 Yaml.createYamlSequenceBuilder()\n                     .add(\"singleSeq\")\n-                    .build()\n-            )\n+                    .build())\n         );\n         MatcherAssert.assertThat(\n             iterator.next(),\n@@ -221,10 +217,10 @@ public final class ReadYamlMappingTest {\n      * YamlMapping key.\n      */\n     @Test\n-    public void returnsYamlMappingWithYamlMappingKey(){\n+    public void returnsYamlMappingWithYamlMappingKey() {\n         final YamlMapping key = new RtYamlMappingBuilder()\n             .add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -248,7 +244,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsYamlSequenceWithStringKey(){\n+    public void returnsYamlSequenceWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -268,12 +264,12 @@ public final class ReadYamlMappingTest {\n      * YamlMapping key.\n      */\n     @Test\n-    public void returnsStringWithYamlMappingKey(){\n+    public void returnsStringWithYamlMappingKey() {\n         final YamlMapping key = new RtYamlMappingBuilder()\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -294,12 +290,11 @@ public final class ReadYamlMappingTest {\n      */\n     @Test\n     @Ignore\n-    public void returnsFoldedStringWithYamlMappingKey(){\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-                .add(\"complex1\", \"mapping1\")\n+    public void returnsFoldedStringWithYamlMappingKey() {\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\")\n                 .add(\"complex2\", \"mapping2\")\n                 .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -322,7 +317,7 @@ public final class ReadYamlMappingTest {\n      */\n     @Test\n     @Ignore\n-    public void returnsFoldedStringWithStringKey(){\n+    public void returnsFoldedStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"key:> \", 1));\n@@ -342,12 +337,11 @@ public final class ReadYamlMappingTest {\n      * YamlMapping key.\n      */\n     @Test\n-    public void returnsLiteralStringWithYamlMappingKey(){\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-                .add(\"complex1\", \"mapping1\")\n+    public void returnsLiteralStringWithYamlMappingKey() {\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\")\n                 .add(\"complex2\", \"mapping2\")\n                 .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -380,7 +374,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsLiteralStringWithStringKey(){\n+    public void returnsLiteralStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"key:| \", 1));\n@@ -411,7 +405,7 @@ public final class ReadYamlMappingTest {\n      * String key.\n      */\n     @Test\n-    public void returnsStringWithStringKey(){\n+    public void returnsStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -432,7 +426,7 @@ public final class ReadYamlMappingTest {\n      * Scalar key.\n      */\n     @Test\n-    public void returnsScalarValueWithStringKey(){\n+    public void returnsScalarValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -452,7 +446,7 @@ public final class ReadYamlMappingTest {\n      * Scalar key.\n      */\n     @Test\n-    public void returnsSequenceValueWithStringKey(){\n+    public void returnsSequenceValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -472,7 +466,7 @@ public final class ReadYamlMappingTest {\n      * Scalar key.\n      */\n     @Test\n-    public void returnsMappingValueWithStringKey(){\n+    public void returnsMappingValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -490,7 +484,7 @@ public final class ReadYamlMappingTest {\n      * ReadYamlMapping can return null if value is missing.\n      */\n     @Test\n-    public void returnsNullIfValueIsMissing(){\n+    public void returnsNullIfValueIsMissing() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n@@ -528,8 +522,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(\"notthere\"), Matchers.nullValue());\n+MatcherAssert.assertThat(map.string(\"notthere\"), Matchers.nullValue());\n         MatcherAssert.assertThat(map.string(\n             new PlainStringScalar(\"notthere\")), Matchers.nullValue()\n         );\n@@ -545,15 +538,14 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second:\", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -566,15 +558,14 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second:\", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -590,8 +581,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(\"second\"), Matchers.nullValue());\n+MatcherAssert.assertThat(map.string(\"second\"), Matchers.nullValue());\n         MatcherAssert.assertThat(map.string(\n             new PlainStringScalar(\"second\")), Matchers.nullValue()\n         );\n@@ -607,7 +597,7 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -632,7 +622,7 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  - sequence\", 2));\n@@ -642,8 +632,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -659,8 +648,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.yamlSequence(\"notthere\"), Matchers.nullValue()\n         );\n         MatcherAssert.assertThat(map.yamlSequence(\n@@ -678,7 +666,7 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  some: other\", 2));\n@@ -687,8 +675,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -701,7 +688,7 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  - someOther\", 2));\n@@ -710,8 +697,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -727,8 +713,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.yamlMapping(\"first\"), Matchers.nullValue()\n         );\n         MatcherAssert.assertThat(map.yamlMapping(\n@@ -749,8 +734,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.yamlMapping(\"second\"), Matchers.nullValue()\n         );\n         MatcherAssert.assertThat(map.yamlMapping(\n@@ -768,7 +752,7 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -776,8 +760,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -790,7 +773,7 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -800,8 +783,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - seq\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -814,7 +796,7 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  - sequence\", 2));\n@@ -822,8 +804,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -836,7 +817,7 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  - sequence\", 2));\n@@ -846,8 +827,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -875,8 +855,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.yamlMapping(\"notthere\"), Matchers.nullValue()\n         );\n         MatcherAssert.assertThat(map.yamlMapping(\n@@ -894,7 +873,7 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  some: other\", 2));\n@@ -903,8 +882,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -917,7 +895,7 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  - someOther\", 2));\n@@ -926,8 +904,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -943,8 +920,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.yamlSequence(\"first\"), Matchers.nullValue()\n         );\n         MatcherAssert.assertThat(map.yamlSequence(\n@@ -965,8 +941,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  key2: notSeq\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.yamlSequence(\"second\"), Matchers.nullValue()\n         );\n         MatcherAssert.assertThat(map.yamlSequence(\n@@ -984,7 +959,7 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -992,8 +967,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -1006,7 +980,7 @@ public final class ReadYamlMappingTest {\n             .add(\"complex1\", \"mapping1\")\n             .add(\"complex2\", \"mapping2\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  complex1: mapping1\", 2));\n@@ -1016,8 +990,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  not: seq\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -1030,7 +1003,7 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  - sequence\", 2));\n@@ -1038,8 +1011,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -1052,7 +1024,7 @@ public final class ReadYamlMappingTest {\n             .add(\"sequence\")\n             .add(\"key\")\n             .build();\n-        final List<YamlLine> lines = new ArrayList<>();\n+final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n         lines.add(new RtYamlLine(\"  - sequence\", 2));\n@@ -1062,8 +1034,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  not: seq\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n     }\n \n     /**\n@@ -1092,8 +1063,7 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"a: \", 2));\n         lines.add(new RtYamlLine(\"  x: 2\", 3));\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        MatcherAssert.assertThat(\n-                map.value(\"a\").asMapping().string(\"x\"),\n+        MatcherAssert.assertThat(map.value(\"a\").asMapping().string(\"x\"),\n                 Matchers.equalTo(\"2\")\n         );\n     }\n@@ -1112,8 +1082,7 @@ public final class ReadYamlMappingTest {\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n         Collection<YamlNode> values = map.value(\"def\").asSequence().values();\n         YamlNode firstValue = values.iterator().next();\n-        MatcherAssert.assertThat(\n-                firstValue.asMapping().value(\"aa\").asMapping().string(\"x\"),\n+        MatcherAssert.assertThat(firstValue.asMapping().value(\"aa\").asMapping().string(\"x\"),\n                 Matchers.equalTo(\"1\")\n         );\n     }\n@@ -1131,18 +1100,15 @@ public final class ReadYamlMappingTest {\n         final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n         Collection<YamlNode> values = map.value(\"def\").asSequence().values();\n         Iterator<YamlNode> iterator = values.iterator();\n-        MatcherAssert.assertThat(\n-                iterator.next().asMapping().keys(),\n+        MatcherAssert.assertThat(iterator.next().asMapping().keys(),\n                 Matchers.is(Matchers.empty())\n         );\n-        MatcherAssert.assertThat(\n-                iterator.next().asSequence().size(),\n+        MatcherAssert.assertThat(iterator.next().asSequence().size(),\n                 Matchers.equalTo(0)\n         );\n         Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n-        MatcherAssert.assertThat(\n-                otherValues.iterator().next().asSequence().size(),\n+        MatcherAssert.assertThat(otherValues.iterator().next().asSequence().size(),\n                 Matchers.equalTo(0)\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 105
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "'\"zkey\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'\"bkey\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'\"akey\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "'\"somethingElse\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "'Yaml' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "'\"something\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "'Yaml' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "'\"somethingElse\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "error",
                    "message": "'Yaml' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "'\"something\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "'Yaml' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "245",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "'\"simpleValue\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "314",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "342",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "391",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "413",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "414",
                    "severity": "error",
                    "message": "'\"notthere\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "415",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "416",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "444",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "445",
                    "severity": "error",
                    "message": "'\"notthere\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "446",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "447",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "497",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "498",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "499",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "500",
                    "severity": "error",
                    "message": "'\"somethingElse\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "501",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "502",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "503",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "574",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "575",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "576",
                    "severity": "error",
                    "message": "'\"notthere\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "577",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "578",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "579",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "580",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "608",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "609",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "610",
                    "severity": "error",
                    "message": "'\"notthere\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "611",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "612",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "613",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "614",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "624",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "645",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "678",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "679",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "680",
                    "severity": "error",
                    "message": "'\"second\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "681",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "682",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "683",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "684",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "694",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "720",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "756",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "757",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "758",
                    "severity": "error",
                    "message": "'\"notthere\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "759",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "760",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "761",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "762",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "772",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "795",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "830",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "831",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "832",
                    "severity": "error",
                    "message": "'\"first\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "833",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "834",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "835",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "836",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "858",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "859",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "860",
                    "severity": "error",
                    "message": "'\"second\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "861",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "862",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "863",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "864",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "874",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "896",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "920",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "942",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "993",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "994",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "995",
                    "severity": "error",
                    "message": "'\"notthere\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "996",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "997",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "998",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "999",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1009",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1032",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1067",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1068",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1069",
                    "severity": "error",
                    "message": "'\"first\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1070",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1071",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1072",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1073",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1095",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1096",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1097",
                    "severity": "error",
                    "message": "'\"second\"' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1098",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1099",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1100",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1101",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1111",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1133",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1157",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1179",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1228",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1229",
                    "severity": "error",
                    "message": "'\"a\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1230",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1231",
                    "severity": "error",
                    "message": "'\"2\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1232",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1254",
                    "severity": "error",
                    "message": "'firstValue' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1255",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1256",
                    "severity": "error",
                    "message": "'\"1\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1257",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1278",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1279",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1280",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1281",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1282",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1284",
                    "severity": "error",
                    "message": "'iterator' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1285",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1286",
                    "severity": "error",
                    "message": "'0' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1287",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1291",
                    "severity": "error",
                    "message": "'otherValues' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1292",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1293",
                    "severity": "error",
                    "message": "'0' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1294",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/32/ReadYamlMappingTest.java\nindex 0d972ef0372..91423c13319 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/32/ReadYamlMappingTest.java\n@@ -32,7 +32,6 @@ import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n-\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n import org.junit.Ignore;\n@@ -46,72 +45,96 @@ import org.junit.Test;\n  * @since 1.0.0\n  *\n  */\n+\n+\n public final class ReadYamlMappingTest {\n \n     /**\n      * ReadYamlMapping can return the YamlMapping mapped to a\n      * String key.\n      */\n+\n+\n     @Test\n-    public void returnsYamlMappingWithStringKey(){\n+    public void returnsYamlMappingWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n         lines.add(new RtYamlLine(\"  fourth: some\", 2));\n         lines.add(new RtYamlLine(\"  fifth: values\", 3));\n         lines.add(new RtYamlLine(\"third: &something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         System.out.print(map);\n-        final YamlMapping second = map.yamlMapping(\"second\");\n+        final YamlMapping second = map.yamlMapping(\n+                                       \"second\");\n         MatcherAssert.assertThat(second, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            second, Matchers.instanceOf(YamlMapping.class)\n-        );\n-        MatcherAssert.assertThat(\n-            second.string(\"fifth\"), Matchers.equalTo(\"values\")\n-        );\n-        MatcherAssert.assertThat(\n-            map.string(\"third\"), Matchers.equalTo(\"&something\")\n-        );\n+        MatcherAssert.assertThat(second, Matchers.instanceOf(\n+                                     YamlMapping.class\n+                                 ));\n+        MatcherAssert.assertThat(second.string(\n+                                     \"fifth\"), Matchers.equalTo(\n+                                     \"values\"));\n+        MatcherAssert.assertThat(map.string(\n+                                     \"third\"), Matchers.equalTo(\n+                                     \"&something\"));\n     }\n \n     /**\n      * ReadYamlMapping can return its keys.\n      */\n+\n     @Test\n-    public void returnsKeys(){\n+    public void returnsKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"zkey: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"bkey: \", 1));\n         lines.add(new RtYamlLine(\"  fourth: some\", 2));\n         lines.add(new RtYamlLine(\"  fifth: values\", 3));\n         lines.add(new RtYamlLine(\"akey: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         final Set<YamlNode> keys = map.keys();\n-        MatcherAssert.assertThat(\n-            keys, Matchers.not(Matchers.emptyIterable())\n-        );\n-        MatcherAssert.assertThat(keys.size(), Matchers.equalTo(3));\n+        MatcherAssert.assertThat(keys, Matchers.not(\n+                                     Matchers.emptyIterable()\n+                                 ));\n+        MatcherAssert.assertThat(keys.size(), Matchers.equalTo(\n+                                     3));\n         final Iterator<YamlNode> iterator = keys.iterator();\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"zkey\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"zkey\"\n+    )\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"bkey\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"bkey\"\n+    )\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"akey\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"akey\"\n+    )\n+)\n+);\n     }\n \n     /**\n      * ReadYamlMapping can return its children.\n      */\n+\n     @Test\n-    public void returnsValuesOfStringKeys(){\n+    public void returnsValuesOfStringKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"zkey: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"bkey: \", 1));\n@@ -121,40 +144,42 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"ukey: \", 5));\n         lines.add(new RtYamlLine(\"  - seq\", 6));\n         lines.add(new RtYamlLine(\"  - value\", 7));\n-\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         final Collection<YamlNode> children = map.values();\n-        MatcherAssert.assertThat(\n-            children, Matchers.iterableWithSize(4)\n-        );\n+        MatcherAssert.assertThat(children, Matchers.iterableWithSize(\n+                                     4));\n         System.out.println(children);\n         final Iterator<YamlNode> iterator = children.iterator();\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"somethingElse\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"somethingElse\"\n+    )\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(\n-                Yaml.createYamlMappingBuilder()\n-                    .add(\"bchildkey1\", \"some\")\n-                    .add(\"bchildkey2\", \"values\")\n-                    .build()\n-            )\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    Yaml.createYamlMappingBuilder().add(\"bchildkey1\", \"some\").add(\"bchildkey2\", \"values\").build()\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"something\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"something\"\n+    )\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(\n-                Yaml.createYamlSequenceBuilder()\n-                    .add(\"seq\")\n-                    .add(\"value\")\n-                    .build()\n-            )\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    Yaml.createYamlSequenceBuilder().add(\"seq\").add(\"value\").build()\n+)\n+);\n     }\n \n     /**\n@@ -162,8 +187,9 @@ public final class ReadYamlMappingTest {\n      * String and YamlNode keys.\n      * @checkstyle ExecutableStatementCount (100 lines)\n      */\n+\n     @Test\n-    public void returnsValuesOfStringAndComplexKeys(){\n+    public void returnsValuesOfStringAndComplexKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -178,52 +204,60 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - sequence\", 10));\n         lines.add(new RtYamlLine(\"  - key\", 11));\n         lines.add(new RtYamlLine(\": simpleValue\", 12));\n-\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         System.out.print(map);\n         final Collection<YamlNode> children = map.values();\n-        MatcherAssert.assertThat(\n-            children, Matchers.iterableWithSize(5)\n-        );\n+        MatcherAssert.assertThat(children, Matchers.iterableWithSize(\n+                                     5));\n         final Iterator<YamlNode> iterator = children.iterator();\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"somethingElse\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"somethingElse\"\n+    )\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(\n-                Yaml.createYamlMappingBuilder()\n-                    .add(\"map\", \"value\")\n-                    .build()\n-            )\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    Yaml.createYamlMappingBuilder().add(\"map\", \"value\").build()\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"something\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"something\"\n+    )\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(\n-                Yaml.createYamlSequenceBuilder()\n-                    .add(\"singleSeq\")\n-                    .build()\n-            )\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    Yaml.createYamlSequenceBuilder().add(\"singleSeq\").build()\n+)\n+);\n         MatcherAssert.assertThat(\n-            iterator.next(),\n-            Matchers.equalTo(new PlainStringScalar(\"simpleValue\"))\n-        );\n+iterator.next(),\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"simpleValue\"\n+    )\n+)\n+);\n     }\n \n     /**\n      * ReadYamlMapping can return the YamlMapping mapped to a\n      * YamlMapping key.\n      */\n+\n     @Test\n-    public void returnsYamlMappingWithYamlMappingKey(){\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n+    public void returnsYamlMappingWithYamlMappingKey() {\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -232,47 +266,52 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": \", 4));\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final YamlMapping value = map.yamlMapping(key);\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final YamlMapping value = map.yamlMapping(\n+                                      key);\n         MatcherAssert.assertThat(value, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            value, Matchers.instanceOf(YamlMapping.class)\n-        );\n-        MatcherAssert.assertThat(\n-            value.string(\"map\"), Matchers.equalTo(\"value\")\n-        );\n+        MatcherAssert.assertThat(value, Matchers.instanceOf(\n+                                     YamlMapping.class\n+                                 ));\n+        MatcherAssert.assertThat(value.string(\n+                                     \"map\"), Matchers.equalTo(\n+                                     \"value\"));\n     }\n \n     /**\n      * ReadYamlMapping can return the YamlSequence mapped to a\n      * String key.\n      */\n+\n     @Test\n-    public void returnsYamlSequenceWithStringKey(){\n+    public void returnsYamlSequenceWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final YamlSequence second = map.yamlSequence(\"second\");\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final YamlSequence second = map.yamlSequence(\n+                                        \"second\");\n         MatcherAssert.assertThat(second, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            second, Matchers.instanceOf(YamlSequence.class)\n-        );\n+        MatcherAssert.assertThat(second, Matchers.instanceOf(\n+                                     YamlSequence.class\n+                                 ));\n     }\n \n     /**\n      * ReadYamlMapping can return the YamlMapping mapped to a\n      * YamlMapping key.\n      */\n+\n     @Test\n-    public void returnsStringWithYamlMappingKey(){\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+    public void returnsStringWithYamlMappingKey() {\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -280,25 +319,27 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  complex2: mapping2\", 3));\n         lines.add(new RtYamlLine(\": value\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         System.out.print(map);\n         System.out.println(\">>>\");\n-        final String value = map.string(key);\n+        final String value = map.string(\n+                                 key);\n         MatcherAssert.assertThat(value, Matchers.notNullValue());\n-        MatcherAssert.assertThat(value, Matchers.equalTo(\"value\"));\n+        MatcherAssert.assertThat(value, Matchers.equalTo(\n+                                     \"value\"));\n     }\n \n     /**\n      * ReadYamlMapping can return the folded block string mapped to a\n      * YamlMapping key.\n      */\n+\n     @Test\n     @Ignore\n-    public void returnsFoldedStringWithYamlMappingKey(){\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-                .add(\"complex1\", \"mapping1\")\n-                .add(\"complex2\", \"mapping2\")\n-                .build();\n+    public void returnsFoldedStringWithYamlMappingKey() {\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -307,46 +348,47 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": >\", 4));\n         lines.add(new RtYamlLine(\"  folded block\", 6));\n         lines.add(new RtYamlLine(\"  scalar here\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final String value = map.foldedBlockScalar(key);\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final String value = map.foldedBlockScalar(\n+                                 key);\n         MatcherAssert.assertThat(value, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            value,\n-            Matchers.equalTo(\"folded block scalar here\")\n-        );\n+        MatcherAssert.assertThat(value, Matchers.equalTo(\n+                                     \"folded block scalar here\"));\n     }\n \n     /**\n      * ReadYamlMapping can return the folded block string mapped to a\n      * String key.\n      */\n+\n     @Test\n     @Ignore\n-    public void returnsFoldedStringWithStringKey(){\n+    public void returnsFoldedStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"key:> \", 1));\n         lines.add(new RtYamlLine(\"  folded block\", 2));\n         lines.add(new RtYamlLine(\"  scalar here\", 3));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final String value = map.foldedBlockScalar(\"key\");\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final String value = map.foldedBlockScalar(\n+                                 \"key\");\n         MatcherAssert.assertThat(value, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            value,\n-            Matchers.equalTo(\"folded block scalar here\")\n-        );\n+        MatcherAssert.assertThat(value, Matchers.equalTo(\n+                                     \"folded block scalar here\"));\n     }\n \n     /**\n      * ReadYamlMapping can return the literal block string mapped to a\n      * YamlMapping key.\n      */\n+\n     @Test\n-    public void returnsLiteralStringWithYamlMappingKey(){\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-                .add(\"complex1\", \"mapping1\")\n-                .add(\"complex2\", \"mapping2\")\n-                .build();\n+    public void returnsLiteralStringWithYamlMappingKey() {\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -355,170 +397,200 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\":|\", 4));\n         lines.add(new RtYamlLine(\"  line1\", 6));\n         lines.add(new RtYamlLine(\"  line2\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final Collection<String> literalLines = map.literalBlockScalar(key);\n-        MatcherAssert.assertThat(\n-            literalLines.size(),\n-            Matchers.is(2)\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final Collection<String> literalLines = map.literalBlockScalar(\n+                                                    key);\n+        MatcherAssert.assertThat(literalLines.size(), Matchers.is(\n+                                     2));\n         final Iterator<String> linesIt = literalLines.iterator();\n+        MatcherAssert.assertThat(linesIt.next(), Matchers.equalTo(\n+                                     \"line1\"));\n+        MatcherAssert.assertThat(linesIt.next(), Matchers.equalTo(\n+                                     \"line2\"));\n         MatcherAssert.assertThat(\n-            linesIt.next(),\n-            Matchers.equalTo(\"line1\")\n-        );\n-        MatcherAssert.assertThat(\n-            linesIt.next(),\n-            Matchers.equalTo(\"line2\")\n-        );\n-        MatcherAssert.assertThat(\n-            map.literalBlockScalar(\"notthere\"), Matchers.nullValue()\n-        );\n+map.literalBlockScalar(\n+    \"notthere\"),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping can return the literal block string mapped to a\n      * String key.\n      */\n+\n     @Test\n-    public void returnsLiteralStringWithStringKey(){\n+    public void returnsLiteralStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"key:| \", 1));\n         lines.add(new RtYamlLine(\"  line1\", 2));\n         lines.add(new RtYamlLine(\"  line2\", 3));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final Collection<String> literalLines = map.literalBlockScalar(\"key\");\n-        MatcherAssert.assertThat(\n-            literalLines.size(),\n-            Matchers.is(2)\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final Collection<String> literalLines = map.literalBlockScalar(\n+                                                    \"key\");\n+        MatcherAssert.assertThat(literalLines.size(), Matchers.is(\n+                                     2));\n         final Iterator<String> linesIt = literalLines.iterator();\n+        MatcherAssert.assertThat(linesIt.next(), Matchers.equalTo(\n+                                     \"line1\"));\n+        MatcherAssert.assertThat(linesIt.next(), Matchers.equalTo(\n+                                     \"line2\"));\n         MatcherAssert.assertThat(\n-            linesIt.next(),\n-            Matchers.equalTo(\"line1\")\n-        );\n-        MatcherAssert.assertThat(\n-            linesIt.next(),\n-            Matchers.equalTo(\"line2\")\n-        );\n-        MatcherAssert.assertThat(\n-            map.literalBlockScalar(\"notthere\"), Matchers.nullValue()\n-        );\n+map.literalBlockScalar(\n+    \"notthere\"),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping can return the String mapped to a\n      * String key.\n      */\n+\n     @Test\n-    public void returnsStringWithStringKey(){\n+    public void returnsStringWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         System.out.println(map);\n-        final String third = map.string(\"third\");\n+        final String third = map.string(\n+                                 \"third\");\n         MatcherAssert.assertThat(third, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            third, Matchers.equalTo(\"something\")\n-        );\n+        MatcherAssert.assertThat(third, Matchers.equalTo(\n+                                     \"something\"));\n     }\n \n     /**\n      * ReadYamlMapping can return the Scalar mapped to a\n      * Scalar key.\n      */\n+\n     @Test\n-    public void returnsScalarValueWithStringKey(){\n+    public void returnsScalarValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final YamlNode first = map.value(new PlainStringScalar(\"first\"));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final YamlNode first = map.value(\n+                                   new PlainStringScalar(\n+                                       \"first\"\n+                                   )\n+                               );\n         MatcherAssert.assertThat(first, Matchers.notNullValue());\n         MatcherAssert.assertThat(\n-            first, Matchers.equalTo(new PlainStringScalar(\"somethingElse\"))\n-        );\n+first,\n+Matchers.equalTo(\n+    new PlainStringScalar(\n+        \"somethingElse\"\n+    )\n+)\n+);\n     }\n \n     /**\n      * ReadYamlMapping can return the Sequence mapped to a\n      * Scalar key.\n      */\n+\n     @Test\n-    public void returnsSequenceValueWithStringKey(){\n+    public void returnsSequenceValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final YamlNode second = map.value(new PlainStringScalar(\"second\"));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final YamlNode second = map.value(\n+                                    new PlainStringScalar(\n+                                        \"second\"\n+                                    )\n+                                );\n         MatcherAssert.assertThat(second, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            second, Matchers.instanceOf(YamlSequence.class)\n-        );\n+        MatcherAssert.assertThat(second, Matchers.instanceOf(\n+                                     YamlSequence.class\n+                                 ));\n     }\n \n     /**\n      * ReadYamlMapping can return the Mapping mapped to a\n      * Scalar key.\n      */\n+\n     @Test\n-    public void returnsMappingValueWithStringKey(){\n+    public void returnsMappingValueWithStringKey() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n         lines.add(new RtYamlLine(\"  some: mapping\", 2));\n         lines.add(new RtYamlLine(\"third: something\", 3));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        final YamlNode second = map.value(new PlainStringScalar(\"second\"));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        final YamlNode second = map.value(\n+                                    new PlainStringScalar(\n+                                        \"second\"\n+                                    )\n+                                );\n         MatcherAssert.assertThat(second, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            second, Matchers.instanceOf(YamlMapping.class)\n-        );\n+        MatcherAssert.assertThat(second, Matchers.instanceOf(\n+                                     YamlMapping.class\n+                                 ));\n     }\n \n     /**\n      * ReadYamlMapping can return null if value is missing.\n      */\n+\n     @Test\n-    public void returnsNullIfValueIsMissing(){\n+    public void returnsNullIfValueIsMissing() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second: \", 1));\n         lines.add(new RtYamlLine(\"  some: mapping\", 2));\n         lines.add(new RtYamlLine(\"third: something\", 3));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        MatcherAssert.assertThat(\n-            map.value(new PlainStringScalar(\"notthere\")),\n-            Matchers.nullValue()\n-        );\n-        MatcherAssert.assertThat(\n-            map.string(\"notthere\"),\n-            Matchers.nullValue()\n-        );\n-        MatcherAssert.assertThat(\n-            map.yamlMapping(\"notthere\"),\n-            Matchers.nullValue()\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(\n-            map.yamlSequence(\"notthere\"),\n-            Matchers.nullValue()\n-        );\n+map.value(\n+    new PlainStringScalar(\n+        \"notthere\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n+        MatcherAssert.assertThat(map.string(\n+                                     \"notthere\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(map.yamlMapping(\n+                                     \"notthere\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(map.yamlSequence(\n+                                     \"notthere\"), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.string(...) returns null if the queried\n      * Scalar is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingScalar() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -527,60 +599,68 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(\"notthere\"), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.string(\n-            new PlainStringScalar(\"notthere\")), Matchers.nullValue()\n-        );\n+                                     \"notthere\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.string(\n+    new PlainStringScalar(\n+        \"notthere\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.string(YamlMapping) returns null if the queried\n      * Scalar is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingScalarWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second:\", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.string(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.string(YamlSequence) returns null if the queried\n      * Scalar is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingScalarWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: somethingElse\", 0));\n         lines.add(new RtYamlLine(\"second:\", 1));\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.string(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.string(...) returns null if the queried value\n      * is present but it is not actually a Scalar.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadScalar() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -589,24 +669,29 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(\"second\"), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.string(\n-            new PlainStringScalar(\"second\")), Matchers.nullValue()\n-        );\n+                                     \"second\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.string(\n+    new PlainStringScalar(\n+        \"second\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.string(YamlMapping) returns null if the queried value\n      * is present but it is not actually a Scalar.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadScalarWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -616,22 +701,23 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 5));\n         lines.add(new RtYamlLine(\"  - sequence\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         System.out.print(map);\n         System.out.println(\">>>\");\n-        MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n+        MatcherAssert.assertThat(map.string(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.string(YamlSequence) returns null if the queried value\n      * is present but it is not actually a Scalar.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadScalarWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -641,15 +727,18 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 5));\n         lines.add(new RtYamlLine(\"  - sequence\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.string(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.string(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(...) returns null if the queried\n      * YamlSequence is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingYamlSequence() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -658,26 +747,29 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n-            map.yamlSequence(\"notthere\"), Matchers.nullValue()\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.yamlSequence(\n-            new PlainStringScalar(\"notthere\")), Matchers.nullValue()\n-        );\n+                                     \"notthere\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.yamlSequence(\n+    new PlainStringScalar(\n+        \"notthere\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(...) returns null if the queried\n      * YamlSequence is not present, based on a complex key.\n      */\n+\n     @Test\n     public void returnsNullOnMissingYamlSequenceWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -686,21 +778,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": \", 4));\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlSequence(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(...) returns null if the queried\n      * YamlMapping is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingYamlMappingWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -709,15 +801,18 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": \", 4));\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlMapping(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(String) returns null if the queried\n      * key has a value that is a Scalar.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlMapping_Scalar() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -726,20 +821,26 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n-            map.yamlMapping(\"first\"), Matchers.nullValue()\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.yamlMapping(\n-            new PlainStringScalar(\"first\")), Matchers.nullValue()\n-        );\n+                                     \"first\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.yamlMapping(\n+    new PlainStringScalar(\n+        \"first\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(String) returns null if the queried\n      * key has a value that is a YamlSequence.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlMapping_Sequence() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -748,26 +849,29 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n-            map.yamlMapping(\"second\"), Matchers.nullValue()\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.yamlMapping(\n-            new PlainStringScalar(\"second\")), Matchers.nullValue()\n-        );\n+                                     \"second\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.yamlMapping(\n+    new PlainStringScalar(\n+        \"second\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(YamlNode) returns null if the queried\n      * complex key has a Scalar value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlMapping_ScalarWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -775,21 +879,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  complex2: mapping2\", 3));\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlMapping(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(YamlNode) returns null if the queried\n      * complex key has a YamlSequence value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlMapping_SequenceWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -799,21 +903,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 5));\n         lines.add(new RtYamlLine(\"  - seq\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlMapping(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(YamlNode) returns null if the queried\n      * complex key has a Scalar value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlMapping_ScalarWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -821,21 +925,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - key\", 3));\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlMapping(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(YamlNode) returns null if the queried\n      * complex key has a YamlSequence value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlMapping_SequenceWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -845,20 +949,25 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 5));\n         lines.add(new RtYamlLine(\"  - sequence\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlMapping(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * An empty ReadYamlMapping can be printed.\n      * @throws Exception if something goes wrong\n      */\n+\n     @Test\n     public void printsEmptyYaml() throws Exception {\n         final YamlMapping map = new ReadYamlMapping(\n-            new AllYamlLines(new ArrayList<YamlLine>())\n-        );\n+                                    new AllYamlLines(\n+                                        new ArrayList<YamlLine>()\n+                                    )\n+                                );\n         MatcherAssert.assertThat(map.toString(), Matchers.isEmptyString());\n     }\n \n@@ -866,6 +975,7 @@ public final class ReadYamlMappingTest {\n      * ReadYamlMapping.yamlMapping(...) returns null if the queried\n      * YamlMapping is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingYamlMapping() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -874,26 +984,29 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n-            map.yamlMapping(\"notthere\"), Matchers.nullValue()\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.yamlMapping(\n-            new PlainStringScalar(\"notthere\")), Matchers.nullValue()\n-        );\n+                                     \"notthere\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.yamlMapping(\n+    new PlainStringScalar(\n+        \"notthere\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.yamlMapping(...) returns null if the queried\n      * YamlMapping is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingYamlMappingWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -902,21 +1015,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": \", 4));\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlMapping(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlMapping(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(...) returns null if the queried\n      * YamlSequence is not present.\n      */\n+\n     @Test\n     public void returnsNullOnMissingYamlSequenceWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -925,15 +1038,18 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\": \", 4));\n         lines.add(new RtYamlLine(\"  map: value\", 5));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlSequence(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(String) returns null if the queried\n      * key has a value that is a Scalar.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlSequence_Scalar() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -942,20 +1058,26 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - some\", 2));\n         lines.add(new RtYamlLine(\"  - sequence\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n-            map.yamlSequence(\"first\"), Matchers.nullValue()\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.yamlSequence(\n-            new PlainStringScalar(\"first\")), Matchers.nullValue()\n-        );\n+                                     \"first\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.yamlSequence(\n+    new PlainStringScalar(\n+        \"first\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(String) returns null if the queried\n      * key has a value that is a YamlMapping.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlSequence_Mapping() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -964,26 +1086,29 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  key1: map\", 2));\n         lines.add(new RtYamlLine(\"  key2: notSeq\", 3));\n         lines.add(new RtYamlLine(\"third: something\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(\n-            map.yamlSequence(\"second\"), Matchers.nullValue()\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(map.yamlSequence(\n-            new PlainStringScalar(\"second\")), Matchers.nullValue()\n-        );\n+                                     \"second\"), Matchers.nullValue());\n+        MatcherAssert.assertThat(\n+map.yamlSequence(\n+    new PlainStringScalar(\n+        \"second\"\n+    )\n+),\n+Matchers.nullValue()\n+);\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(YamlNode) returns null if the queried\n      * complex key has a Scalar value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlSequence_ScalarWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -991,21 +1116,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  complex2: mapping2\", 3));\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlSequence(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(YamlNode) returns null if the queried\n      * complex key has a YamlMapping value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlSequence_MappingWithMappingKey() {\n-        final YamlMapping key = new RtYamlMappingBuilder()\n-            .add(\"complex1\", \"mapping1\")\n-            .add(\"complex2\", \"mapping2\")\n-            .build();\n+        final YamlMapping key = new RtYamlMappingBuilder().add(\"complex1\", \"mapping1\").add(\"complex2\", \"mapping2\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -1015,21 +1140,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  some: map\", 5));\n         lines.add(new RtYamlLine(\"  not: seq\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlSequence(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(YamlNode) returns null if the queried\n      * complex key has a Scalar value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlSequence_ScalarWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -1037,21 +1162,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - key\", 3));\n         lines.add(new RtYamlLine(\": scalarValue\", 4));\n         lines.add(new RtYamlLine(\"second: something\", 6));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlSequence(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping.yamlSequence(YamlNode) returns null if the queried\n      * complex key has a YamlMapping value.\n      */\n+\n     @Test\n     public void returnsNullOnMisreadYamlSequence_MappingWithSequenceKey() {\n-        final YamlSequence key = new RtYamlSequenceBuilder()\n-            .add(\"sequence\")\n-            .add(\"key\")\n-            .build();\n+        final YamlSequence key = new RtYamlSequenceBuilder().add(\"sequence\").add(\"key\").build();\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"first: something\", 0));\n         lines.add(new RtYamlLine(\"? \", 1));\n@@ -1061,29 +1186,34 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  some: map\", 5));\n         lines.add(new RtYamlLine(\"  not: seq\", 6));\n         lines.add(new RtYamlLine(\"second: something\", 7));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-\n-        MatcherAssert.assertThat(map.yamlSequence(key), Matchers.nullValue());\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.yamlSequence(\n+                                     key), Matchers.nullValue());\n     }\n \n     /**\n      * ReadYamlMapping returns the correct value\n      * when the key is wrapped in quotes.\n      */\n+\n     @Test\n     public void returnsValueOfStringKeyWithQuotes() {\n         final List<YamlLine> lines = new ArrayList<>();\n         lines.add(new RtYamlLine(\"\\\"a-key\\\": someValue\", 0));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        MatcherAssert.assertThat(\n-            map.string(\"a-key\"),\n-            Matchers.equalTo(\"someValue\")\n-        );\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        MatcherAssert.assertThat(map.string(\n+                                     \"a-key\"), Matchers.equalTo(\n+                                     \"someValue\"));\n     }\n \n     /**\n      * ReadYamlMapping returns the correct value for substring matching of keys.\n      */\n+\n     @Test\n     public void returnsValueOfStringKeys() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -1091,16 +1221,21 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  x: 1\", 1));\n         lines.add(new RtYamlLine(\"a: \", 2));\n         lines.add(new RtYamlLine(\"  x: 2\", 3));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n         MatcherAssert.assertThat(\n-                map.value(\"a\").asMapping().string(\"x\"),\n-                Matchers.equalTo(\"2\")\n-        );\n+map.value(\n+    \"a\").asMapping().string(\"x\"),\n+Matchers.equalTo(\n+    \"2\")\n+);\n     }\n \n     /**\n      * ReadYamlMapping returns the correct value for substring matching of keys.\n      */\n+\n     @Test\n     public void returnsValueOfStringKeysWithDashesAndSpaces() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -1109,18 +1244,23 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"      x: 1\", 2));\n         lines.add(new RtYamlLine(\"  - a:\", 3));\n         lines.add(new RtYamlLine(\"      x: 2\", 4));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        Collection<YamlNode> values = map.value(\"def\").asSequence().values();\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        Collection<YamlNode> values = map.value(\n+                                          \"def\").asSequence().values();\n         YamlNode firstValue = values.iterator().next();\n         MatcherAssert.assertThat(\n-                firstValue.asMapping().value(\"aa\").asMapping().string(\"x\"),\n-                Matchers.equalTo(\"1\")\n-        );\n+firstValue.asMapping().value(\"aa\").asMapping().string(\"x\"),\n+Matchers.equalTo(\n+    \"1\")\n+);\n     }\n \n     /**\n      * ReadYamlMapping returns the correct value for substring matching of keys.\n      */\n+\n     @Test\n     public void dontTurnEmptyMapsAndArraysIntoStrings() {\n         final List<YamlLine> lines = new ArrayList<>();\n@@ -1128,21 +1268,30 @@ public final class ReadYamlMappingTest {\n         lines.add(new RtYamlLine(\"  - {}\", 1));\n         lines.add(new RtYamlLine(\"  - []\", 2));\n         lines.add(new RtYamlLine(\"ghi: []\", 2));\n-        final YamlMapping map = new ReadYamlMapping(new AllYamlLines(lines));\n-        Collection<YamlNode> values = map.value(\"def\").asSequence().values();\n+        final YamlMapping map = new ReadYamlMapping(\n+                                    new AllYamlLines(lines)\n+                                );\n+        Collection<YamlNode> values = map.value(\n+                                          \"def\").asSequence().values();\n         Iterator<YamlNode> iterator = values.iterator();\n         MatcherAssert.assertThat(\n-                iterator.next().asMapping().keys(),\n-                Matchers.is(Matchers.empty())\n-        );\n+iterator.next().asMapping().keys(),\n+Matchers.is(\n+    Matchers.empty()\n+)\n+);\n         MatcherAssert.assertThat(\n-                iterator.next().asSequence().size(),\n-                Matchers.equalTo(0)\n-        );\n-        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n+iterator.next().asSequence().size(),\n+Matchers.equalTo(\n+    0)\n+);\n+        Collection<YamlNode> otherValues = map.value(\n+                                               \"ghi\").asSequence().values();\n         MatcherAssert.assertThat(\n-                otherValues.iterator().next().asSequence().size(),\n-                Matchers.equalTo(0)\n-        );\n+otherValues.iterator().next().asSequence().size(),\n+Matchers.equalTo(\n+    0)\n+);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 657
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_random/32/ReadYamlMappingTest.java\nindex 0d972ef0372..bc07ed0f60b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_random/32/ReadYamlMappingTest.java\n@@ -1139,7 +1139,8 @@ public final class ReadYamlMappingTest {\n                 iterator.next().asSequence().size(),\n                 Matchers.equalTo(0)\n         );\n-        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n+        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence(\n+        ).values();\n         MatcherAssert.assertThat(\n                 otherValues.iterator().next().asSequence().size(),\n                 Matchers.equalTo(0)\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1141",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1141",
                    "column": "85",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/32/ReadYamlMappingTest.java\nindex 0d972ef0372..0496e6bf94a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/32/ReadYamlMappingTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/32/ReadYamlMappingTest.java\n@@ -1138,8 +1138,7 @@ public final class ReadYamlMappingTest {\n         MatcherAssert.assertThat(\n                 iterator.next().asSequence().size(),\n                 Matchers.equalTo(0)\n-        );\n-        Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n+        ); Collection<YamlNode> otherValues = map.value(\"ghi\").asSequence().values();\n         MatcherAssert.assertThat(\n                 otherValues.iterator().next().asSequence().size(),\n                 Matchers.equalTo(0)\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
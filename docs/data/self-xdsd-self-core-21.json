{
    "project_name": "self-xdsd-self-core",
    "error_id": "21",
    "information": {
        "errors": [
            {
                "line": "63",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        );\n        final boolean result = project.repo().webhooks().add(project);\n        if(result) {\n            LOG.debug(\"Webhook successfully created!\");\n        } else {\n            LOG.debug(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/21/SetupWebhook.java\nindex 6ba69ba973d..771b71d98cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/21/SetupWebhook.java\n@@ -60,7 +60,7 @@ public final class SetupWebhook extends Intermediary {\n             + project.repoFullName() + \" at \" + project.provider()\n         );\n         final boolean result = project.repo().webhooks().add(project);\n-        if(result) {\n+        if (result) {\n             LOG.debug(\"Webhook successfully created!\");\n         } else {\n             LOG.debug(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/21/SetupWebhook.java\nindex 6ba69ba973d..b6cc38da7a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/21/SetupWebhook.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.managers;\n \n import com.selfxdsd.api.Event;\n@@ -31,6 +32,7 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * Set up a webhook in the Project's Repo.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.13\n@@ -46,6 +48,7 @@ public final class SetupWebhook extends Intermediary {\n \n     /**\n      * Ctor.\n+     *\n      * @param next The next step to perform.\n      */\n     public SetupWebhook(final Step next) {\n@@ -57,15 +60,15 @@ public final class SetupWebhook extends Intermediary {\n         final Project project = event.project();\n         LOG.debug(\n             \"Setting up webhook for project \"\n-            + project.repoFullName() + \" at \" + project.provider()\n+                + project.repoFullName() + \" at \" + project.provider()\n         );\n         final boolean result = project.repo().webhooks().add(project);\n-        if(result) {\n+        if (result) {\n             LOG.debug(\"Webhook successfully created!\");\n         } else {\n             LOG.debug(\n                 \"There was a problem setting up the webhook. \"\n-                + \"Please see log above.\"\n+                    + \"Please see log above.\"\n             );\n         }\n         this.next().perform(event);\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/21/SetupWebhook.java\nindex 6ba69ba973d..c62e73bb44a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/21/SetupWebhook.java\n@@ -60,7 +60,7 @@ public final class SetupWebhook extends Intermediary {\n             + project.repoFullName() + \" at \" + project.provider()\n         );\n         final boolean result = project.repo().webhooks().add(project);\n-        if(result) {\n+        if (result) {\n             LOG.debug(\"Webhook successfully created!\");\n         } else {\n             LOG.debug(\n@@ -70,4 +70,4 @@ public final class SetupWebhook extends Intermediary {\n         }\n         this.next().perform(event);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/21/SetupWebhook.java\nindex 6ba69ba973d..e5722e8bead 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/21/SetupWebhook.java\n@@ -35,19 +35,23 @@ import org.slf4j.LoggerFactory;\n  * @version $Id$\n  * @since 0.0.13\n  */\n+\n+\n public final class SetupWebhook extends Intermediary {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        SetupWebhook.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SetupWebhook.class);\n \n     /**\n      * Ctor.\n      * @param next The next step to perform.\n      */\n+\n+\n     public SetupWebhook(final Step next) {\n         super(next);\n     }\n@@ -55,19 +59,16 @@ public final class SetupWebhook extends Intermediary {\n     @Override\n     public void perform(final Event event) {\n         final Project project = event.project();\n-        LOG.debug(\n-            \"Setting up webhook for project \"\n-            + project.repoFullName() + \" at \" + project.provider()\n-        );\n+        LOG.debug(\"Setting up webhook for project \"\n++ project.repoFullName() + \" at \"\n++ project.provider());\n         final boolean result = project.repo().webhooks().add(project);\n-        if(result) {\n+        if (result) {\n             LOG.debug(\"Webhook successfully created!\");\n         } else {\n-            LOG.debug(\n-                \"There was a problem setting up the webhook. \"\n-                + \"Please see log above.\"\n-            );\n+            LOG.debug(\"There was a problem setting up the webhook. \"\n+                          + \"Please see log above.\");\n         }\n         this.next().perform(event);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/21/SetupWebhook.java\nindex 6ba69ba973d..771b71d98cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/21/SetupWebhook.java\n@@ -60,7 +60,7 @@ public final class SetupWebhook extends Intermediary {\n             + project.repoFullName() + \" at \" + project.provider()\n         );\n         final boolean result = project.repo().webhooks().add(project);\n-        if(result) {\n+        if (result) {\n             LOG.debug(\"Webhook successfully created!\");\n         } else {\n             LOG.debug(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/21/SetupWebhook.java\nindex 6ba69ba973d..771b71d98cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/21/SetupWebhook.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/21/SetupWebhook.java\n@@ -60,7 +60,7 @@ public final class SetupWebhook extends Intermediary {\n             + project.repoFullName() + \" at \" + project.provider()\n         );\n         final boolean result = project.repo().webhooks().add(project);\n-        if(result) {\n+        if (result) {\n             LOG.debug(\"Webhook successfully created!\");\n         } else {\n             LOG.debug(\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
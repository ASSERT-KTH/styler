{
    "project_name": "neo4j-neo4j",
    "error_id": "1851",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1851/BaseRoutingProcedureInstaller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1851/BaseRoutingProcedureInstaller.java\nindex 6dc9ce7b333..0f74b7f7321 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1851/BaseRoutingProcedureInstaller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1851/BaseRoutingProcedureInstaller.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin.routing;\n \n import java.util.List;\n@@ -27,15 +28,15 @@ import org.neo4j.kernel.api.procedure.GlobalProcedures;\n \n public abstract class BaseRoutingProcedureInstaller\n {\n-    public static final List<String> DEFAULT_NAMESPACE = List.of( \"dbms\", \"routing\" );\n-    private static final List<String> LEGACY_NAMESPACE = List.of( \"dbms\", \"cluster\", \"routing\" );\n+    public static final List<String> DEFAULT_NAMESPACE = List.of(\"dbms\", \"routing\");\n+    private static final List<String> LEGACY_NAMESPACE = List.of(\"dbms\", \"cluster\", \"routing\");\n \n-    public final void install( GlobalProcedures globalProcedures ) throws ProcedureException\n+    public final void install(GlobalProcedures globalProcedures) throws ProcedureException\n     {\n         // make procedure available as with both `dbms.routing` and old `dbms.cluster.routing` namespaces\n-        globalProcedures.register( createProcedure( DEFAULT_NAMESPACE ) );\n-        globalProcedures.register( createProcedure( LEGACY_NAMESPACE ) );\n+        globalProcedures.register(createProcedure(DEFAULT_NAMESPACE));\n+        globalProcedures.register(createProcedure(LEGACY_NAMESPACE));\n     }\n \n-    protected abstract CallableProcedure createProcedure( List<String> namespace );\n+    protected abstract CallableProcedure createProcedure(List<String> namespace);\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1397",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1397/CompiledEquivalenceUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1397/CompiledEquivalenceUtils.java\nindex af86eb5ea73..8802228b0a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1397/CompiledEquivalenceUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1397/CompiledEquivalenceUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.codegen;\n \n import java.lang.reflect.Array;\n@@ -31,437 +32,436 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n \n /**\n  * Helper class for dealing with equivalence an hash code in compiled code.\n- *\n+ * <p>\n  * Note this class contains a lot of duplicated code in order to minimize boxing.\n  */\n public final class CompiledEquivalenceUtils\n {\n-    /**\n-     * Do not instantiate this class\n-     */\n-    private CompiledEquivalenceUtils()\n+  /**\n+   * Do not instantiate this class\n+   */\n+  private CompiledEquivalenceUtils()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  /**\n+   * Checks if two objects are equal according to Cypher semantics\n+   *\n+   * @param lhs the left-hand side to check\n+   * @param rhs the right-hand sid to check\n+   * @return {@code true} if the two objects are equal otherwise {@code false}\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static boolean equals(Object lhs, Object rhs)\n+  {\n+    if (lhs == rhs)\n     {\n-        throw new UnsupportedOperationException(  );\n+      return true;\n+    } else if (lhs == null || rhs == null || lhs == NO_VALUE || rhs == NO_VALUE)\n+    {\n+      return false;\n     }\n \n-    /**\n-     * Checks if two objects are equal according to Cypher semantics\n-     * @param lhs the left-hand side to check\n-     * @param rhs the right-hand sid to check\n-     * @return {@code true} if the two objects are equal otherwise {@code false}\n-     */\n-    @SuppressWarnings( \"unchecked\" )\n-    public static boolean equals( Object lhs, Object rhs )\n-    {\n-        if ( lhs == rhs )\n-        {\n-            return true;\n-        }\n-        else if ( lhs == null || rhs == null || lhs == NO_VALUE || rhs == NO_VALUE )\n-        {\n-            return false;\n-        }\n-\n-        AnyValue lhsValue = lhs instanceof AnyValue ? (AnyValue) lhs : ValueUtils.of( lhs );\n-        AnyValue rhsValue = rhs instanceof AnyValue ? (AnyValue) rhs : ValueUtils.of( rhs );\n+    AnyValue lhsValue = lhs instanceof AnyValue ? (AnyValue) lhs : ValueUtils.of(lhs);\n+    AnyValue rhsValue = rhs instanceof AnyValue ? (AnyValue) rhs : ValueUtils.of(rhs);\n \n-        return lhsValue.equals( rhsValue );\n-    }\n+    return lhsValue.equals(rhsValue);\n+  }\n \n-    /**\n-     * Calculates hash code of a given object\n-     * @param element the element to calculate hash code for\n-     * @return the hash code of the given object\n-     */\n-    @SuppressWarnings( \"unchecked\" )\n-    public static int hashCode( Object element )\n-    {\n-        if ( element == null )\n-        {\n-            return 0;\n-        }\n-        else if ( element instanceof AnyValue )\n-        {\n-            return element.hashCode();\n-        }\n-        else if ( element instanceof Number )\n-        {\n-            return hashCode( ((Number) element).longValue() );\n-        }\n-        else if ( element instanceof Character )\n-        {\n-            return hashCode( (char) element );\n-        }\n-        else if ( element instanceof Boolean )\n-        {\n-            return hashCode( (boolean) element );\n-        }\n-        else if ( element instanceof AnyValue[] )\n-        {\n-            return hashCode( (AnyValue[]) element );\n-        }\n-        else if ( element instanceof Object[] )\n-        {\n-            return hashCode( (Object[]) element );\n-        }\n-        else if ( element instanceof long[] )\n-        {\n-            return hashCode( (long[]) element );\n-        }\n-        else if ( element instanceof double[] )\n-        {\n-            return hashCode( (double[]) element );\n-        }\n-        else if ( element instanceof boolean[] )\n-        {\n-            return hashCode( (boolean[]) element );\n-        }\n-        else if ( element instanceof List<?> )\n-        {\n-            return hashCode( (List<?>) element );\n-        }\n-        else if ( element instanceof Map<?,?> )\n-        {\n-            return hashCode( (Map<String,Object>) element );\n-        }\n-        else if ( element instanceof byte[] )\n-        {\n-            return hashCode( (byte[]) element );\n-        }\n-        else if ( element instanceof short[] )\n-        {\n-            return hashCode( (short[]) element );\n-        }\n-        else if ( element instanceof int[] )\n-        {\n-            return hashCode( (int[]) element );\n-        }\n-        else if ( element instanceof char[] )\n-        {\n-            return hashCode( (char[]) element );\n-        }\n-        else if ( element instanceof float[] )\n-        {\n-            return hashCode( (float[]) element );\n-        }\n-        else\n-        {\n-            return element.hashCode();\n-        }\n+  /**\n+   * Calculates hash code of a given object\n+   *\n+   * @param element the element to calculate hash code for\n+   * @return the hash code of the given object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static int hashCode(Object element)\n+  {\n+    if (element == null)\n+    {\n+      return 0;\n+    } else if (element instanceof AnyValue)\n+    {\n+      return element.hashCode();\n+    } else if (element instanceof Number)\n+    {\n+      return hashCode(((Number) element).longValue());\n+    } else if (element instanceof Character)\n+    {\n+      return hashCode((char) element);\n+    } else if (element instanceof Boolean)\n+    {\n+      return hashCode((boolean) element);\n+    } else if (element instanceof AnyValue[])\n+    {\n+      return hashCode((AnyValue[]) element);\n+    } else if (element instanceof Object[])\n+    {\n+      return hashCode((Object[]) element);\n+    } else if (element instanceof long[])\n+    {\n+      return hashCode((long[]) element);\n+    } else if (element instanceof double[])\n+    {\n+      return hashCode((double[]) element);\n+    } else if (element instanceof boolean[])\n+    {\n+      return hashCode((boolean[]) element);\n+    } else if (element instanceof List<?>)\n+    {\n+      return hashCode((List<?>) element);\n+    } else if (element instanceof Map<?, ?>)\n+    {\n+      return hashCode((Map<String, Object>) element);\n+    } else if (element instanceof byte[])\n+    {\n+      return hashCode((byte[]) element);\n+    } else if (element instanceof short[])\n+    {\n+      return hashCode((short[]) element);\n+    } else if (element instanceof int[])\n+    {\n+      return hashCode((int[]) element);\n+    } else if (element instanceof char[])\n+    {\n+      return hashCode((char[]) element);\n+    } else if (element instanceof float[])\n+    {\n+      return hashCode((float[]) element);\n+    } else\n+    {\n+      return element.hashCode();\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a map\n-     * @param map the element to calculate hash code for\n-     * @return the hash code of the given map\n-     */\n-    public static int hashCode( Map<String,Object> map )\n-    {\n-        int h = 0;\n-        for ( Map.Entry<String,Object> next : map.entrySet() )\n-        {\n-            String k = next.getKey();\n-            Object v = next.getValue();\n-            h += (k == null ? 0 : k.hashCode()) ^ (v == null ? 0 : hashCode( v ));\n-        }\n-        return h;\n+  /**\n+   * Calculate hash code of a map\n+   *\n+   * @param map the element to calculate hash code for\n+   * @return the hash code of the given map\n+   */\n+  public static int hashCode(Map<String, Object> map)\n+  {\n+    int h = 0;\n+    for (Map.Entry<String, Object> next : map.entrySet())\n+    {\n+      String k = next.getKey();\n+      Object v = next.getValue();\n+      h += (k == null ? 0 : k.hashCode()) ^ (v == null ? 0 : hashCode(v));\n     }\n+    return h;\n+  }\n \n-    /**\n-     * Calculate hash code of a long value\n-     * @param value the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( long value )\n-    {\n-        return Long.hashCode( value );\n-    }\n+  /**\n+   * Calculate hash code of a long value\n+   *\n+   * @param value the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(long value)\n+  {\n+    return Long.hashCode(value);\n+  }\n \n-    /**\n-     * Calculate hash code of a boolean value\n-     * @param value the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( boolean value )\n-    {\n-        return Boolean.hashCode( value );\n-    }\n+  /**\n+   * Calculate hash code of a boolean value\n+   *\n+   * @param value the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(boolean value)\n+  {\n+    return Boolean.hashCode(value);\n+  }\n \n-    /**\n-     * Calculate hash code of a char value\n-     * @param value the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( char value )\n-    {\n-        return Character.hashCode( value );\n-    }\n+  /**\n+   * Calculate hash code of a char value\n+   *\n+   * @param value the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(char value)\n+  {\n+    return Character.hashCode(value);\n+  }\n \n-    /**\n-     * Calculate hash code of a char[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( char[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( array[0] );\n-        case 2:\n-            return 31 * hashCode( array[0] ) + hashCode( array[1] );\n-        case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n-        default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a char[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(char[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(array[0]);\n+      case 2:\n+        return 31 * hashCode(array[0]) + hashCode(array[1]);\n+      case 3:\n+        return (31 * hashCode(array[0]) + hashCode(array[1])) * 31 + hashCode(array[2]);\n+      default:\n+        return len * (31 * hashCode(array[0]) + hashCode(array[len / 2]) * 31 + hashCode(array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a list value\n-     * @param list the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( List<?> list )\n-    {\n-        int len = list.size();\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( list.get( 0 ) );\n-        case 2:\n-            return 31 * hashCode( list.get( 0 ) ) + hashCode( list.get( 1 ) );\n-        case 3:\n-            return (31 * hashCode( list.get( 0 ) ) + hashCode( list.get( 1 ) )) * 31  + hashCode( list.get( 2 ) );\n-        default:\n-            return len * (31 * hashCode( list.get( 0 ) ) + hashCode( list.get( len / 2 ) ) * 31 +\n-                          hashCode( list.get( len - 1 ) ));\n-        }\n+  /**\n+   * Calculate hash code of a list value\n+   *\n+   * @param list the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(List<?> list)\n+  {\n+    int len = list.size();\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(list.get(0));\n+      case 2:\n+        return 31 * hashCode(list.get(0)) + hashCode(list.get(1));\n+      case 3:\n+        return (31 * hashCode(list.get(0)) + hashCode(list.get(1))) * 31 + hashCode(list.get(2));\n+      default:\n+        return len * (31 * hashCode(list.get(0)) + hashCode(list.get(len / 2)) * 31 +\n+            hashCode(list.get(len - 1)));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a Object[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( Object[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( array[0] );\n-        case 2:\n-            return 31 * hashCode( array[0] ) + hashCode( array[1] );\n-        case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n-        default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a Object[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(Object[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(array[0]);\n+      case 2:\n+        return 31 * hashCode(array[0]) + hashCode(array[1]);\n+      case 3:\n+        return (31 * hashCode(array[0]) + hashCode(array[1])) * 31 + hashCode(array[2]);\n+      default:\n+        return len * (31 * hashCode(array[0]) + hashCode(array[len / 2]) * 31 + hashCode(array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a AnyValue[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( AnyValue[] array )\n-    {\n-        return Arrays.hashCode( array );\n-    }\n+  /**\n+   * Calculate hash code of a AnyValue[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(AnyValue[] array)\n+  {\n+    return Arrays.hashCode(array);\n+  }\n \n-    /**\n-     * Calculate hash code of a byte[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( byte[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( array[0] );\n-        case 2:\n-            return 31 * hashCode( array[0] ) + hashCode( array[1] );\n-        case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n-        default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a byte[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(byte[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(array[0]);\n+      case 2:\n+        return 31 * hashCode(array[0]) + hashCode(array[1]);\n+      case 3:\n+        return (31 * hashCode(array[0]) + hashCode(array[1])) * 31 + hashCode(array[2]);\n+      default:\n+        return len * (31 * hashCode(array[0]) + hashCode(array[len / 2]) * 31 + hashCode(array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a short[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( short[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( array[0] );\n-        case 2:\n-            return 31 * hashCode( array[0] ) + hashCode( array[1] );\n-        case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n-        default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a short[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(short[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(array[0]);\n+      case 2:\n+        return 31 * hashCode(array[0]) + hashCode(array[1]);\n+      case 3:\n+        return (31 * hashCode(array[0]) + hashCode(array[1])) * 31 + hashCode(array[2]);\n+      default:\n+        return len * (31 * hashCode(array[0]) + hashCode(array[len / 2]) * 31 + hashCode(array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a int[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( int[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( array[0] );\n-        case 2:\n-            return 31 * hashCode( array[0] ) + hashCode( array[1] );\n-        case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n-        default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a int[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(int[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(array[0]);\n+      case 2:\n+        return 31 * hashCode(array[0]) + hashCode(array[1]);\n+      case 3:\n+        return (31 * hashCode(array[0]) + hashCode(array[1])) * 31 + hashCode(array[2]);\n+      default:\n+        return len * (31 * hashCode(array[0]) + hashCode(array[len / 2]) * 31 + hashCode(array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a long[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( long[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( array[0] );\n-        case 2:\n-            return 31 * hashCode( array[0] ) + hashCode( array[1] );\n-        case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n-        default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a long[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(long[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(array[0]);\n+      case 2:\n+        return 31 * hashCode(array[0]) + hashCode(array[1]);\n+      case 3:\n+        return (31 * hashCode(array[0]) + hashCode(array[1])) * 31 + hashCode(array[2]);\n+      default:\n+        return len * (31 * hashCode(array[0]) + hashCode(array[len / 2]) * 31 + hashCode(array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a float[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( float[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( (long) array[0] );\n-        case 2:\n-            return 31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] );\n-        case 3:\n-            return (31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] )) * 31  + hashCode( (long) array[2] );\n-        default:\n-            return len * (31 * hashCode( (long) array[0] ) + hashCode( (long) array[len / 2] ) * 31 +\n-                          hashCode( (long) array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a float[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(float[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode((long) array[0]);\n+      case 2:\n+        return 31 * hashCode((long) array[0]) + hashCode((long) array[1]);\n+      case 3:\n+        return (31 * hashCode((long) array[0]) + hashCode((long) array[1])) * 31 + hashCode((long) array[2]);\n+      default:\n+        return len * (31 * hashCode((long) array[0]) + hashCode((long) array[len / 2]) * 31 +\n+            hashCode((long) array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a double[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( double[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( (long) array[0] );\n-        case 2:\n-            return 31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] );\n-        case 3:\n-            return (31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] )) * 31  + hashCode( (long) array[2] );\n-        default:\n-            return len * (31 * hashCode( (long) array[0] ) + hashCode( (long) array[len / 2] ) * 31 +\n-                          hashCode( (long) array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a double[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(double[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode((long) array[0]);\n+      case 2:\n+        return 31 * hashCode((long) array[0]) + hashCode((long) array[1]);\n+      case 3:\n+        return (31 * hashCode((long) array[0]) + hashCode((long) array[1])) * 31 + hashCode((long) array[2]);\n+      default:\n+        return len * (31 * hashCode((long) array[0]) + hashCode((long) array[len / 2]) * 31 +\n+            hashCode((long) array[len - 1]));\n     }\n+  }\n \n-    /**\n-     * Calculate hash code of a boolean[] value\n-     * @param array the value to compute hash code for\n-     * @return the hash code of the given value\n-     */\n-    public static int hashCode( boolean[] array )\n-    {\n-        int len = array.length;\n-        switch ( len )\n-        {\n-        case 0:\n-            return 42;\n-        case 1:\n-            return hashCode( array[0] );\n-        case 2:\n-            return 31 * hashCode( array[0] ) + hashCode( array[1] );\n-        case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n-        default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n-        }\n+  /**\n+   * Calculate hash code of a boolean[] value\n+   *\n+   * @param array the value to compute hash code for\n+   * @return the hash code of the given value\n+   */\n+  public static int hashCode(boolean[] array)\n+  {\n+    int len = array.length;\n+    switch (len)\n+    {\n+      case 0:\n+        return 42;\n+      case 1:\n+        return hashCode(array[0]);\n+      case 2:\n+        return 31 * hashCode(array[0]) + hashCode(array[1]);\n+      case 3:\n+        return (31 * hashCode(array[0]) + hashCode(array[1])) * 31 + hashCode(array[2]);\n+      default:\n+        return len * (31 * hashCode(array[0]) + hashCode(array[len / 2]) * 31 + hashCode(array[len - 1]));\n     }\n+  }\n \n-    private static Boolean compareArrayAndList( Object array, List<?> list )\n+  private static Boolean compareArrayAndList(Object array, List<?> list)\n+  {\n+    int length = Array.getLength(array);\n+    if (length != list.size())\n     {\n-        int length = Array.getLength( array );\n-        if ( length != list.size() )\n-        {\n-            return false;\n-        }\n-\n-        int i = 0;\n-        for ( Object o : list )\n-        {\n-            if ( !equals( o, Array.get( array, i++ ) ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      return false;\n     }\n \n-    private static boolean mixedFloatEquality( Float a, Double b )\n+    int i = 0;\n+    for (Object o : list)\n     {\n-        return a.doubleValue() == b;\n+      if (!equals(o, Array.get(array, i++)))\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n+\n+  private static boolean mixedFloatEquality(Float a, Double b)\n+  {\n+    return a.doubleValue() == b;\n+  }\n }\n \n",
            "diff_size": 440
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1397/CompiledEquivalenceUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1397/CompiledEquivalenceUtils.java\nindex af86eb5ea73..b8ee60c1e6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1397/CompiledEquivalenceUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1397/CompiledEquivalenceUtils.java\n@@ -41,7 +41,7 @@ public final class CompiledEquivalenceUtils\n      */\n     private CompiledEquivalenceUtils()\n     {\n-        throw new UnsupportedOperationException(  );\n+        throw new UnsupportedOperationException();\n     }\n \n     /**\n@@ -64,8 +64,7 @@ public final class CompiledEquivalenceUtils\n \n         AnyValue lhsValue = lhs instanceof AnyValue ? (AnyValue) lhs : ValueUtils.of( lhs );\n         AnyValue rhsValue = rhs instanceof AnyValue ? (AnyValue) rhs : ValueUtils.of( rhs );\n-\n-        return lhsValue.equals( rhsValue );\n+return lhsValue.equals( rhsValue );\n     }\n \n     /**\n@@ -120,7 +119,7 @@ public final class CompiledEquivalenceUtils\n         {\n             return hashCode( (List<?>) element );\n         }\n-        else if ( element instanceof Map<?,?> )\n+        else if ( element instanceof Map<?, ?> )\n         {\n             return hashCode( (Map<String,Object>) element );\n         }\n@@ -134,7 +133,7 @@ public final class CompiledEquivalenceUtils\n         }\n         else if ( element instanceof int[] )\n         {\n-            return hashCode( (int[]) element );\n+            return hashCode( ( int[]) element );\n         }\n         else if ( element instanceof char[] )\n         {\n@@ -162,9 +161,10 @@ public final class CompiledEquivalenceUtils\n         {\n             String k = next.getKey();\n             Object v = next.getValue();\n-            h += (k == null ? 0 : k.hashCode()) ^ (v == null ? 0 : hashCode( v ));\n+            h += ( k == null ? 0 : k.hashCode()) ^ ( v == null ? 0 : hashCode( v ));\n         }\n-        return h;\n+\n+return h;\n     }\n \n     /**\n@@ -214,9 +214,9 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( array[0] ) + hashCode( array[1] );\n         case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n+            return ( 31 * hashCode( array[0] ) + hashCode( array[1] )) * 31 + hashCode( array[2] );\n         default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n+            return len * ( 31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n         }\n     }\n \n@@ -237,11 +237,10 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( list.get( 0 ) ) + hashCode( list.get( 1 ) );\n         case 3:\n-            return (31 * hashCode( list.get( 0 ) ) + hashCode( list.get( 1 ) )) * 31  + hashCode( list.get( 2 ) );\n+            return ( 31 * hashCode( list.get( 0 ) ) + hashCode( list.get( 1 ) )) * 31 + hashCode( list.get( 2 ) );\n         default:\n-            return len * (31 * hashCode( list.get( 0 ) ) + hashCode( list.get( len / 2 ) ) * 31 +\n-                          hashCode( list.get( len - 1 ) ));\n-        }\n+            return len * ( 31 * hashCode( list.get( 0 ) ) + hashCode( list.get( len / 2 ) ) * 31 + hashCode( list.get( len - 1 ) ));\n+    }\n     }\n \n     /**\n@@ -261,9 +260,9 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( array[0] ) + hashCode( array[1] );\n         case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n+            return ( 31 * hashCode( array[0] ) + hashCode( array[1] )) * 31 + hashCode( array[2] );\n         default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n+            return len * ( 31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n         }\n     }\n \n@@ -294,9 +293,9 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( array[0] ) + hashCode( array[1] );\n         case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n+            return ( 31 * hashCode( array[0] ) + hashCode( array[1] )) * 31 + hashCode( array[2] );\n         default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n+            return len * ( 31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n         }\n     }\n \n@@ -317,9 +316,9 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( array[0] ) + hashCode( array[1] );\n         case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n+            return ( 31 * hashCode( array[0] ) + hashCode( array[1] )) * 31 + hashCode( array[2] );\n         default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n+            return len * ( 31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n         }\n     }\n \n@@ -340,9 +339,9 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( array[0] ) + hashCode( array[1] );\n         case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n+            return ( 31 * hashCode( array[0] ) + hashCode( array[1] )) * 31 + hashCode( array[2] );\n         default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n+            return len * ( 31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n         }\n     }\n \n@@ -363,9 +362,9 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( array[0] ) + hashCode( array[1] );\n         case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n+            return ( 31 * hashCode( array[0] ) + hashCode( array[1] )) * 31 + hashCode( array[2] );\n         default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n+            return len * ( 31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n         }\n     }\n \n@@ -386,11 +385,10 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] );\n         case 3:\n-            return (31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] )) * 31  + hashCode( (long) array[2] );\n+            return ( 31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] )) * 31 + hashCode( (long) array[2] );\n         default:\n-            return len * (31 * hashCode( (long) array[0] ) + hashCode( (long) array[len / 2] ) * 31 +\n-                          hashCode( (long) array[len - 1] ));\n-        }\n+            return len * ( 31 * hashCode( (long) array[0] ) + hashCode( (long) array[len / 2] ) * 31 + hashCode( (long) array[len - 1] ));\n+    }\n     }\n \n     /**\n@@ -410,11 +408,10 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] );\n         case 3:\n-            return (31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] )) * 31  + hashCode( (long) array[2] );\n+            return ( 31 * hashCode( (long) array[0] ) + hashCode( (long) array[1] )) * 31 + hashCode( (long) array[2] );\n         default:\n-            return len * (31 * hashCode( (long) array[0] ) + hashCode( (long) array[len / 2] ) * 31 +\n-                          hashCode( (long) array[len - 1] ));\n-        }\n+            return len * ( 31 * hashCode( (long) array[0] ) + hashCode( (long) array[len / 2] ) * 31 + hashCode( (long) array[len - 1] ));\n+    }\n     }\n \n     /**\n@@ -434,9 +431,9 @@ public final class CompiledEquivalenceUtils\n         case 2:\n             return 31 * hashCode( array[0] ) + hashCode( array[1] );\n         case 3:\n-            return (31 * hashCode( array[0] ) + hashCode( array[1] )) * 31  + hashCode( array[2] );\n+            return ( 31 * hashCode( array[0] ) + hashCode( array[1] )) * 31 + hashCode( array[2] );\n         default:\n-            return len * (31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n+            return len * ( 31 * hashCode( array[0] ) + hashCode( array[len / 2] ) * 31 + hashCode( array[len - 1] ));\n         }\n     }\n \n@@ -463,5 +460,4 @@ public final class CompiledEquivalenceUtils\n     {\n         return a.doubleValue() == b;\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
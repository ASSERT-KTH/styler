{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2214",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2214/RaftLogShippingManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2214/RaftLogShippingManager.java\nindex 6c01339c327..79adefecc41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2214/RaftLogShippingManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2214/RaftLogShippingManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.shipping;\n \n import java.time.Clock;\n@@ -40,140 +41,140 @@ import static java.lang.String.format;\n \n public class RaftLogShippingManager extends LifecycleAdapter implements RaftMembership.Listener\n {\n-    private final Outbound<MemberId, RaftMessages.RaftMessage> outbound;\n-    private final LogProvider logProvider;\n-    private final ReadableRaftLog raftLog;\n-    private final Clock clock;\n-    private final MemberId myself;\n-\n-    private final RaftMembership membership;\n-    private final long retryTimeMillis;\n-    private final int catchupBatchSize;\n-    private final int maxAllowedShippingLag;\n-    private final InFlightCache inFlightCache;\n-\n-    private Map<MemberId,RaftLogShipper> logShippers = new HashMap<>();\n-    private LeaderContext lastLeaderContext;\n-\n-    private boolean running;\n-    private boolean stopped;\n-    private TimerService timerService;\n-\n-    public RaftLogShippingManager( Outbound<MemberId,RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n-                                   ReadableRaftLog raftLog, TimerService timerService,\n-                                   Clock clock, MemberId myself, RaftMembership membership, long retryTimeMillis,\n-                                   int catchupBatchSize, int maxAllowedShippingLag,\n-                                   InFlightCache inFlightCache )\n+  private final Outbound<MemberId, RaftMessages.RaftMessage> outbound;\n+  private final LogProvider logProvider;\n+  private final ReadableRaftLog raftLog;\n+  private final Clock clock;\n+  private final MemberId myself;\n+\n+  private final RaftMembership membership;\n+  private final long retryTimeMillis;\n+  private final int catchupBatchSize;\n+  private final int maxAllowedShippingLag;\n+  private final InFlightCache inFlightCache;\n+\n+  private Map<MemberId, RaftLogShipper> logShippers = new HashMap<>();\n+  private LeaderContext lastLeaderContext;\n+\n+  private boolean running;\n+  private boolean stopped;\n+  private TimerService timerService;\n+\n+  public RaftLogShippingManager(Outbound<MemberId, RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n+                                ReadableRaftLog raftLog, TimerService timerService,\n+                                Clock clock, MemberId myself, RaftMembership membership, long retryTimeMillis,\n+                                int catchupBatchSize, int maxAllowedShippingLag,\n+                                InFlightCache inFlightCache)\n+  {\n+    this.outbound = outbound;\n+    this.logProvider = logProvider;\n+    this.raftLog = raftLog;\n+    this.timerService = timerService;\n+    this.clock = clock;\n+    this.myself = myself;\n+    this.membership = membership;\n+    this.retryTimeMillis = retryTimeMillis;\n+    this.catchupBatchSize = catchupBatchSize;\n+    this.maxAllowedShippingLag = maxAllowedShippingLag;\n+    this.inFlightCache = inFlightCache;\n+    membership.registerListener(this);\n+  }\n+\n+  /**\n+   * Paused when stepping down from leader role.\n+   */\n+  public synchronized void pause()\n+  {\n+    running = false;\n+\n+    logShippers.values().forEach(RaftLogShipper::stop);\n+    logShippers.clear();\n+  }\n+\n+  /**\n+   * Resumed when becoming leader.\n+   */\n+  public synchronized void resume(LeaderContext initialLeaderContext)\n+  {\n+    if (stopped)\n     {\n-        this.outbound = outbound;\n-        this.logProvider = logProvider;\n-        this.raftLog = raftLog;\n-        this.timerService = timerService;\n-        this.clock = clock;\n-        this.myself = myself;\n-        this.membership = membership;\n-        this.retryTimeMillis = retryTimeMillis;\n-        this.catchupBatchSize = catchupBatchSize;\n-        this.maxAllowedShippingLag = maxAllowedShippingLag;\n-        this.inFlightCache = inFlightCache;\n-        membership.registerListener( this );\n+      return;\n     }\n \n-    /**\n-     * Paused when stepping down from leader role.\n-     */\n-    public synchronized void pause()\n-    {\n-        running = false;\n+    running = true;\n \n-        logShippers.values().forEach( RaftLogShipper::stop );\n-        logShippers.clear();\n+    for (MemberId member : membership.replicationMembers())\n+    {\n+      ensureLogShipperRunning(member, initialLeaderContext);\n     }\n \n-    /**\n-     * Resumed when becoming leader.\n-     */\n-    public synchronized void resume( LeaderContext initialLeaderContext )\n-    {\n-        if ( stopped )\n-        {\n-            return;\n-        }\n+    lastLeaderContext = initialLeaderContext;\n+  }\n \n-        running = true;\n+  @Override\n+  public synchronized void stop()\n+  {\n+    pause();\n+    stopped = true;\n+  }\n \n-        for ( MemberId member : membership.replicationMembers() )\n-        {\n-            ensureLogShipperRunning( member, initialLeaderContext );\n-        }\n+  private void ensureLogShipperRunning(MemberId member, LeaderContext leaderContext)\n+  {\n+    RaftLogShipper logShipper = logShippers.get(member);\n+    if (logShipper == null && !member.equals(myself))\n+    {\n+      logShipper = new RaftLogShipper(outbound, logProvider, raftLog, clock, timerService, myself, member,\n+          leaderContext.term, leaderContext.commitIndex, retryTimeMillis, catchupBatchSize,\n+          maxAllowedShippingLag, inFlightCache);\n \n-        lastLeaderContext = initialLeaderContext;\n-    }\n+      logShippers.put(member, logShipper);\n \n-    @Override\n-    public synchronized void stop()\n-    {\n-        pause();\n-        stopped = true;\n+      logShipper.start();\n     }\n+  }\n \n-    private void ensureLogShipperRunning( MemberId member, LeaderContext leaderContext )\n+  public synchronized void handleCommands(Iterable<ShipCommand> shipCommands, LeaderContext leaderContext)\n+  {\n+    for (ShipCommand shipCommand : shipCommands)\n     {\n-        RaftLogShipper logShipper = logShippers.get( member );\n-        if ( logShipper == null && !member.equals( myself ) )\n-        {\n-            logShipper = new RaftLogShipper( outbound, logProvider, raftLog, clock, timerService, myself, member,\n-                    leaderContext.term, leaderContext.commitIndex, retryTimeMillis, catchupBatchSize,\n-                    maxAllowedShippingLag, inFlightCache );\n-\n-            logShippers.put( member, logShipper );\n-\n-            logShipper.start();\n-        }\n+      for (RaftLogShipper logShipper : logShippers.values())\n+      {\n+        shipCommand.applyTo(logShipper, leaderContext);\n+      }\n     }\n \n-    public synchronized void handleCommands( Iterable<ShipCommand> shipCommands, LeaderContext leaderContext )\n+    lastLeaderContext = leaderContext;\n+  }\n+\n+  @Override\n+  public synchronized void onMembershipChanged()\n+  {\n+    if (lastLeaderContext == null || !running)\n     {\n-        for ( ShipCommand shipCommand : shipCommands )\n-        {\n-            for ( RaftLogShipper logShipper : logShippers.values() )\n-            {\n-                shipCommand.applyTo( logShipper, leaderContext );\n-            }\n-        }\n-\n-        lastLeaderContext = leaderContext;\n+      return;\n     }\n \n-    @Override\n-    public synchronized void onMembershipChanged()\n+    HashSet<MemberId> toBeRemoved = new HashSet<>(logShippers.keySet());\n+    toBeRemoved.removeAll(membership.replicationMembers());\n+\n+    for (MemberId member : toBeRemoved)\n     {\n-        if ( lastLeaderContext == null || !running )\n-        {\n-            return;\n-        }\n-\n-        HashSet<MemberId> toBeRemoved = new HashSet<>( logShippers.keySet() );\n-        toBeRemoved.removeAll( membership.replicationMembers() );\n-\n-        for ( MemberId member : toBeRemoved )\n-        {\n-            RaftLogShipper logShipper = logShippers.remove( member );\n-            if ( logShipper != null )\n-            {\n-                logShipper.stop();\n-            }\n-        }\n-\n-        for ( MemberId replicationMember : membership.replicationMembers() )\n-        {\n-            ensureLogShipperRunning( replicationMember, lastLeaderContext );\n-        }\n+      RaftLogShipper logShipper = logShippers.remove(member);\n+      if (logShipper != null)\n+      {\n+        logShipper.stop();\n+      }\n     }\n \n-    @Override\n-    public String toString()\n+    for (MemberId replicationMember : membership.replicationMembers())\n     {\n-        return format( \"RaftLogShippingManager{logShippers=%s, myself=%s}\", logShippers, myself );\n+      ensureLogShipperRunning(replicationMember, lastLeaderContext);\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"RaftLogShippingManager{logShippers=%s, myself=%s}\", logShippers, myself);\n+  }\n }\n",
            "diff_size": 174
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2214/RaftLogShippingManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2214/RaftLogShippingManager.java\nindex 6c01339c327..3b2e2749b65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2214/RaftLogShippingManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2214/RaftLogShippingManager.java\n@@ -59,12 +59,10 @@ public class RaftLogShippingManager extends LifecycleAdapter implements RaftMemb\n     private boolean stopped;\n     private TimerService timerService;\n \n-    public RaftLogShippingManager( Outbound<MemberId,RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n-                                   ReadableRaftLog raftLog, TimerService timerService,\n-                                   Clock clock, MemberId myself, RaftMembership membership, long retryTimeMillis,\n-                                   int catchupBatchSize, int maxAllowedShippingLag,\n+    public RaftLogShippingManager( Outbound<MemberId,RaftMessages.RaftMessage> outbound, LogProvider logProvider, ReadableRaftLog raftLog, TimerService timerService,\n+                                   Clock clock, MemberId myself, RaftMembership membership, long retryTimeMillis, int catchupBatchSize, int maxAllowedShippingLag,\n                                    InFlightCache inFlightCache )\n-    {\n+{\n         this.outbound = outbound;\n         this.logProvider = logProvider;\n         this.raftLog = raftLog;\n@@ -101,8 +99,7 @@ public class RaftLogShippingManager extends LifecycleAdapter implements RaftMemb\n         }\n \n         running = true;\n-\n-        for ( MemberId member : membership.replicationMembers() )\n+for ( MemberId member : membership.replicationMembers() )\n         {\n             ensureLogShipperRunning( member, initialLeaderContext );\n         }\n@@ -123,12 +120,9 @@ public class RaftLogShippingManager extends LifecycleAdapter implements RaftMemb\n         if ( logShipper == null && !member.equals( myself ) )\n         {\n             logShipper = new RaftLogShipper( outbound, logProvider, raftLog, clock, timerService, myself, member,\n-                    leaderContext.term, leaderContext.commitIndex, retryTimeMillis, catchupBatchSize,\n-                    maxAllowedShippingLag, inFlightCache );\n-\n-            logShippers.put( member, logShipper );\n-\n-            logShipper.start();\n+                    leaderContext.term, leaderContext.commitIndex, retryTimeMillis, catchupBatchSize, maxAllowedShippingLag, inFlightCache );\n+logShippers.put( member, logShipper );\n+logShipper.start();\n         }\n     }\n \n@@ -155,8 +149,7 @@ public class RaftLogShippingManager extends LifecycleAdapter implements RaftMemb\n \n         HashSet<MemberId> toBeRemoved = new HashSet<>( logShippers.keySet() );\n         toBeRemoved.removeAll( membership.replicationMembers() );\n-\n-        for ( MemberId member : toBeRemoved )\n+for ( MemberId member : toBeRemoved )\n         {\n             RaftLogShipper logShipper = logShippers.remove( member );\n             if ( logShipper != null )\n@@ -176,4 +169,4 @@ public class RaftLogShippingManager extends LifecycleAdapter implements RaftMemb\n     {\n         return format( \"RaftLogShippingManager{logShippers=%s, myself=%s}\", logShippers, myself );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "910",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/910/StorageEngineFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/910/StorageEngineFactory.java\nindex 6be14bc91e7..5c945a6f163 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/910/StorageEngineFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/910/StorageEngineFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.io.IOException;\n@@ -57,88 +58,99 @@ public interface StorageEngineFactory\n     /**\n      * Returns a {@link StoreVersionCheck} which can provide both configured and existing store versions\n      * and means of checking upgradability between them.\n+     *\n      * @return StoreVersionCheck to check store version as well as upgradability to other versions.\n      */\n-    StoreVersionCheck versionCheck( FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, PageCache pageCache, LogService logService,\n-            PageCacheTracer pageCacheTracer );\n+    StoreVersionCheck versionCheck(FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, PageCache pageCache, LogService logService,\n+                                   PageCacheTracer pageCacheTracer);\n \n-    StoreVersion versionInformation( String storeVersion );\n+    StoreVersion versionInformation(String storeVersion);\n \n     /**\n      * Returns a {@link StoreMigrationParticipant} which will be able to participate in a store migration.\n+     *\n      * @return StoreMigrationParticipant for migration.\n      */\n-    List<StoreMigrationParticipant> migrationParticipants( FileSystemAbstraction fs, Config config, PageCache pageCache,\n-            JobScheduler jobScheduler, LogService logService, PageCacheTracer cacheTracer, MemoryTracker memoryTracker );\n+    List<StoreMigrationParticipant> migrationParticipants(FileSystemAbstraction fs, Config config, PageCache pageCache,\n+                                                          JobScheduler jobScheduler, LogService logService, PageCacheTracer cacheTracer,\n+                                                          MemoryTracker memoryTracker);\n \n     /**\n      * Instantiates a {@link StorageEngine} where all dependencies can be retrieved from the supplied {@code dependencyResolver}.\n      *\n      * @return the instantiated {@link StorageEngine}.\n      */\n-    StorageEngine instantiate( FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, PageCache pageCache, TokenHolders tokenHolders,\n-            SchemaState schemaState, ConstraintRuleAccessor constraintSemantics, IndexConfigCompleter indexConfigCompleter, LockService lockService,\n-            IdGeneratorFactory idGeneratorFactory, IdController idController, DatabaseHealth databaseHealth,\n-            LogProvider logProvider, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, PageCacheTracer cacheTracer, boolean createStoreIfNotExists,\n-            MemoryTracker memoryTracker );\n+    StorageEngine instantiate(FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, PageCache pageCache, TokenHolders tokenHolders,\n+                              SchemaState schemaState, ConstraintRuleAccessor constraintSemantics, IndexConfigCompleter indexConfigCompleter,\n+                              LockService lockService,\n+                              IdGeneratorFactory idGeneratorFactory, IdController idController, DatabaseHealth databaseHealth,\n+                              LogProvider logProvider, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, PageCacheTracer cacheTracer,\n+                              boolean createStoreIfNotExists,\n+                              MemoryTracker memoryTracker);\n \n     /**\n      * Lists files of a specific storage location.\n-     * @param fileSystem {@link FileSystemAbstraction} this storage is on.\n+     *\n+     * @param fileSystem     {@link FileSystemAbstraction} this storage is on.\n      * @param databaseLayout {@link DatabaseLayout} pointing out its location.\n      * @return a {@link List} of {@link Path} instances for the storage files.\n      * @throws IOException if there was no storage in this location.\n      */\n-    List<Path> listStorageFiles( FileSystemAbstraction fileSystem, DatabaseLayout databaseLayout ) throws IOException;\n+    List<Path> listStorageFiles(FileSystemAbstraction fileSystem, DatabaseLayout databaseLayout) throws IOException;\n \n     /**\n      * Check if a store described by provided database layout exists in provided file system\n-     * @param fileSystem store file system\n+     *\n+     * @param fileSystem     store file system\n      * @param databaseLayout store database layout\n-     * @param pageCache page cache to open store with\n+     * @param pageCache      page cache to open store with\n      * @return true of store exist, false otherwise\n      */\n-    boolean storageExists( FileSystemAbstraction fileSystem, DatabaseLayout databaseLayout, PageCache pageCache );\n+    boolean storageExists(FileSystemAbstraction fileSystem, DatabaseLayout databaseLayout, PageCache pageCache);\n \n     /**\n      * Instantiates a read-only {@link TransactionIdStore} to be used outside of a {@link StorageEngine}.\n+     *\n      * @return the read-only {@link TransactionIdStore}.\n      * @throws IOException on I/O error or if the store doesn't exist.\n      */\n-    TransactionIdStore readOnlyTransactionIdStore( FileSystemAbstraction filySystem, DatabaseLayout databaseLayout,\n-            PageCache pageCache, PageCursorTracer pageCursorTracer ) throws IOException;\n+    TransactionIdStore readOnlyTransactionIdStore(FileSystemAbstraction filySystem, DatabaseLayout databaseLayout,\n+                                                  PageCache pageCache, PageCursorTracer pageCursorTracer) throws IOException;\n \n     /**\n      * Instantiates a read-only {@link LogVersionRepository} to be used outside of a {@link StorageEngine}.\n+     *\n      * @return the read-only {@link LogVersionRepository}.\n      * @throws IOException on I/O error or if the store doesn't exist.\n      */\n-    LogVersionRepository readOnlyLogVersionRepository( DatabaseLayout databaseLayout, PageCache pageCache, PageCursorTracer cursorTracer ) throws IOException;\n+    LogVersionRepository readOnlyLogVersionRepository(DatabaseLayout databaseLayout, PageCache pageCache, PageCursorTracer cursorTracer) throws IOException;\n \n     /**\n      * Instantiates a fully functional {@link MetadataProvider}, which is a union of {@link TransactionIdStore}\n      * and {@link LogVersionRepository}.\n+     *\n      * @return a fully functional {@link MetadataProvider}.\n      * @throws IOException on I/O error or if the store doesn't exist.\n      */\n-    MetadataProvider transactionMetaDataStore( FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, PageCache pageCache,\n-            PageCacheTracer cacheTracer ) throws IOException;\n+    MetadataProvider transactionMetaDataStore(FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, PageCache pageCache,\n+                                              PageCacheTracer cacheTracer) throws IOException;\n \n-    StoreId storeId( DatabaseLayout databaseLayout, PageCache pageCache, PageCursorTracer cursorTracer ) throws IOException;\n+    StoreId storeId(DatabaseLayout databaseLayout, PageCache pageCache, PageCursorTracer cursorTracer) throws IOException;\n \n-    SchemaRuleMigrationAccess schemaRuleMigrationAccess( FileSystemAbstraction fs, PageCache pageCache, Config config, DatabaseLayout databaseLayout,\n-            LogService logService, String recordFormats, PageCacheTracer cacheTracer, PageCursorTracer cursorTracer, MemoryTracker memoryTracker );\n+    SchemaRuleMigrationAccess schemaRuleMigrationAccess(FileSystemAbstraction fs, PageCache pageCache, Config config, DatabaseLayout databaseLayout,\n+                                                        LogService logService, String recordFormats, PageCacheTracer cacheTracer, PageCursorTracer cursorTracer,\n+                                                        MemoryTracker memoryTracker);\n \n     /**\n      * Asks this storage engine about the state of a specific store before opening it. If this specific store is missing optional or\n      * even perhaps mandatory files in order to properly open it, this is the place to report that.\n      *\n-     * @param fs {@link FileSystemAbstraction} to use for file operations.\n+     * @param fs             {@link FileSystemAbstraction} to use for file operations.\n      * @param databaseLayout {@link DatabaseLayout} for the location of the database in the file system.\n-     * @param pageCache {@link PageCache} for any data reading needs.\n+     * @param pageCache      {@link PageCache} for any data reading needs.\n      * @return the state of the storage files.\n      */\n-    StorageFilesState checkRecoveryRequired( FileSystemAbstraction fs, DatabaseLayout databaseLayout, PageCache pageCache );\n+    StorageFilesState checkRecoveryRequired(FileSystemAbstraction fs, DatabaseLayout databaseLayout, PageCache pageCache);\n \n     /**\n      * @return a {@link CommandReaderFactory} capable of handing out {@link CommandReader} for specific versions. Generally kernel will take care\n@@ -152,7 +164,7 @@ public interface StorageEngineFactory\n      *     <li>For COMMAND log entries: 1B command type - managed by storage</li>\n      *     <li>For COMMAND log entries: command data... - managed by storage</li>\n      * </ol>\n-     *\n+     * <p>\n      * Although currently it's more like this:\n      *\n      * <ol>\n@@ -165,11 +177,12 @@ public interface StorageEngineFactory\n \n     /**\n      * Selects a {@link StorageEngineFactory} among the candidates. How it's done or which it selects isn't important a.t.m.\n+     *\n      * @return the selected {@link StorageEngineFactory}.\n      * @throws IllegalStateException if there were no candidates.\n      */\n     static StorageEngineFactory selectStorageEngine()\n     {\n-        return Iterables.single( Services.loadAll( StorageEngineFactory.class ) );\n+        return Iterables.single(Services.loadAll(StorageEngineFactory.class));\n     }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
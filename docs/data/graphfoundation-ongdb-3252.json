{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3252",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3252/ShiroCaffeineCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3252/ShiroCaffeineCache.java\nindex f27355b7490..5181bca5bae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3252/ShiroCaffeineCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3252/ShiroCaffeineCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import com.github.benmanes.caffeine.cache.Caffeine;\n@@ -34,141 +35,141 @@ import java.util.concurrent.Executor;\n import java.util.concurrent.ForkJoinPool;\n import java.util.concurrent.TimeUnit;\n \n-class ShiroCaffeineCache<K, V> implements Cache<K,V>\n+class ShiroCaffeineCache<K, V> implements Cache<K, V>\n {\n-    private final com.github.benmanes.caffeine.cache.Cache<K,V> caffCache;\n-\n-    ShiroCaffeineCache( Ticker ticker, long ttl, int maxCapacity, boolean useTTL )\n+  private final com.github.benmanes.caffeine.cache.Cache<K, V> caffCache;\n+\n+  ShiroCaffeineCache(Ticker ticker, long ttl, int maxCapacity, boolean useTTL)\n+  {\n+    this(ticker, ForkJoinPool.commonPool(), ttl, maxCapacity, useTTL);\n+  }\n+\n+  ShiroCaffeineCache(Ticker ticker, Executor maintenanceExecutor, long ttl, int maxCapacity, boolean useTTL)\n+  {\n+    Caffeine<Object, Object> builder = Caffeine.newBuilder()\n+        .maximumSize(maxCapacity)\n+        .executor(maintenanceExecutor);\n+    if (useTTL)\n+    {\n+      if (ttl <= 0)\n+      {\n+        throw new IllegalArgumentException(\"TTL must be larger than zero.\");\n+      }\n+      builder.ticker(ticker).expireAfterWrite(ttl, TimeUnit.MILLISECONDS);\n+    }\n+    caffCache = builder.build();\n+  }\n+\n+  @Override\n+  public V get(K key) throws CacheException\n+  {\n+    return caffCache.getIfPresent(key);\n+  }\n+\n+  @Override\n+  public V put(K key, V value) throws CacheException\n+  {\n+    return caffCache.asMap().put(key, value);\n+  }\n+\n+  @Override\n+  public V remove(K key) throws CacheException\n+  {\n+    return caffCache.asMap().remove(key);\n+  }\n+\n+  @Override\n+  public void clear() throws CacheException\n+  {\n+    caffCache.invalidateAll();\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return caffCache.asMap().size();\n+  }\n+\n+  @Override\n+  public Set<K> keys()\n+  {\n+    return caffCache.asMap().keySet();\n+  }\n+\n+  @Override\n+  public Collection<V> values()\n+  {\n+    return caffCache.asMap().values();\n+  }\n+\n+  static class Manager implements CacheManager\n+  {\n+    private final Map<String, Cache<?, ?>> caches;\n+    private final Ticker ticker;\n+    private final long ttl;\n+    private final int maxCapacity;\n+    private boolean useTTL;\n+\n+    Manager(Ticker ticker, long ttl, int maxCapacity, boolean useTTL)\n     {\n-        this( ticker, ForkJoinPool.commonPool(), ttl, maxCapacity, useTTL );\n+      this.ticker = ticker;\n+      this.ttl = ttl;\n+      this.maxCapacity = maxCapacity;\n+      this.useTTL = useTTL;\n+      caches = new HashMap<>();\n     }\n \n-    ShiroCaffeineCache( Ticker ticker, Executor maintenanceExecutor, long ttl, int maxCapacity, boolean useTTL )\n+    @Override\n+    public <K, V> Cache<K, V> getCache(String s) throws CacheException\n     {\n-        Caffeine<Object,Object> builder = Caffeine.newBuilder()\n-                                                  .maximumSize( maxCapacity )\n-                                                  .executor( maintenanceExecutor );\n-        if ( useTTL )\n-        {\n-            if ( ttl <= 0 )\n-            {\n-                throw new IllegalArgumentException( \"TTL must be larger than zero.\" );\n-            }\n-            builder.ticker( ticker ).expireAfterWrite( ttl, TimeUnit.MILLISECONDS );\n-        }\n-        caffCache = builder.build();\n+      //noinspection unchecked\n+      return (Cache<K, V>) caches.computeIfAbsent(s,\n+          ignored -> useTTL && ttl <= 0 ? new NullCache() : new ShiroCaffeineCache<K, V>(ticker, ttl, maxCapacity, useTTL));\n     }\n+  }\n \n+  private static class NullCache<K, V> implements Cache<K, V>\n+  {\n     @Override\n-    public V get( K key ) throws CacheException\n+    public V get(K key) throws CacheException\n     {\n-        return caffCache.getIfPresent( key );\n+      return null;\n     }\n \n     @Override\n-    public V put( K key, V value ) throws CacheException\n+    public V put(K key, V value) throws CacheException\n     {\n-        return caffCache.asMap().put( key, value );\n+      return null;\n     }\n \n     @Override\n-    public V remove( K key ) throws CacheException\n+    public V remove(K key) throws CacheException\n     {\n-        return caffCache.asMap().remove( key );\n+      return null;\n     }\n \n     @Override\n     public void clear() throws CacheException\n     {\n-        caffCache.invalidateAll();\n+\n     }\n \n     @Override\n     public int size()\n     {\n-        return caffCache.asMap().size();\n+      return 0;\n     }\n \n     @Override\n     public Set<K> keys()\n     {\n-        return caffCache.asMap().keySet();\n+      return Collections.emptySet();\n     }\n \n     @Override\n     public Collection<V> values()\n     {\n-        return caffCache.asMap().values();\n-    }\n-\n-    static class Manager implements CacheManager\n-    {\n-        private final Map<String,Cache<?,?>> caches;\n-        private final Ticker ticker;\n-        private final long ttl;\n-        private final int maxCapacity;\n-        private boolean useTTL;\n-\n-        Manager( Ticker ticker, long ttl, int maxCapacity, boolean useTTL )\n-        {\n-            this.ticker = ticker;\n-            this.ttl = ttl;\n-            this.maxCapacity = maxCapacity;\n-            this.useTTL = useTTL;\n-            caches = new HashMap<>();\n-        }\n-\n-        @Override\n-        public <K, V> Cache<K,V> getCache( String s ) throws CacheException\n-        {\n-            //noinspection unchecked\n-            return (Cache<K,V>) caches.computeIfAbsent( s,\n-                    ignored -> useTTL && ttl <= 0 ? new NullCache() : new ShiroCaffeineCache<K,V>( ticker, ttl, maxCapacity, useTTL ) );\n-        }\n-    }\n-\n-    private static class NullCache<K, V> implements Cache<K, V>\n-    {\n-        @Override\n-        public V get( K key ) throws CacheException\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public V put( K key, V value ) throws CacheException\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public V remove( K key ) throws CacheException\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public void clear() throws CacheException\n-        {\n-\n-        }\n-\n-        @Override\n-        public int size()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public Set<K> keys()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public Collection<V> values()\n-        {\n-            return Collections.emptySet();\n-        }\n+      return Collections.emptySet();\n     }\n+  }\n }\n",
            "diff_size": 180
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3252/ShiroCaffeineCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3252/ShiroCaffeineCache.java\nindex f27355b7490..b6bf3848add 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3252/ShiroCaffeineCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3252/ShiroCaffeineCache.java\n@@ -34,7 +34,7 @@ import java.util.concurrent.Executor;\n import java.util.concurrent.ForkJoinPool;\n import java.util.concurrent.TimeUnit;\n \n-class ShiroCaffeineCache<K, V> implements Cache<K,V>\n+class ShiroCaffeineCache<K,V> implements Cache<K,V>\n {\n     private final com.github.benmanes.caffeine.cache.Cache<K,V> caffCache;\n \n@@ -45,10 +45,9 @@ class ShiroCaffeineCache<K, V> implements Cache<K,V>\n \n     ShiroCaffeineCache( Ticker ticker, Executor maintenanceExecutor, long ttl, int maxCapacity, boolean useTTL )\n     {\n-        Caffeine<Object,Object> builder = Caffeine.newBuilder()\n-                                                  .maximumSize( maxCapacity )\n+        Caffeine<Object,Object> builder = Caffeine.newBuilder().maximumSize( maxCapacity )\n                                                   .executor( maintenanceExecutor );\n-        if ( useTTL )\n+if ( useTTL )\n         {\n             if ( ttl <= 0 )\n             {\n@@ -56,7 +55,8 @@ class ShiroCaffeineCache<K, V> implements Cache<K,V>\n             }\n             builder.ticker( ticker ).expireAfterWrite( ttl, TimeUnit.MILLISECONDS );\n         }\n-        caffCache = builder.build();\n+\n+caffCache = builder.build();\n     }\n \n     @Override\n@@ -103,7 +103,7 @@ class ShiroCaffeineCache<K, V> implements Cache<K,V>\n \n     static class Manager implements CacheManager\n     {\n-        private final Map<String,Cache<?,?>> caches;\n+        private final Map<String,Cache<?, ?>> caches;\n         private final Ticker ticker;\n         private final long ttl;\n         private final int maxCapacity;\n@@ -119,15 +119,15 @@ class ShiroCaffeineCache<K, V> implements Cache<K,V>\n         }\n \n         @Override\n-        public <K, V> Cache<K,V> getCache( String s ) throws CacheException\n+        public <K,V> Cache<K,V> getCache( String s ) throws CacheException\n         {\n             //noinspection unchecked\n             return (Cache<K,V>) caches.computeIfAbsent( s,\n                     ignored -> useTTL && ttl <= 0 ? new NullCache() : new ShiroCaffeineCache<K,V>( ticker, ttl, maxCapacity, useTTL ) );\n-        }\n+    }\n     }\n \n-    private static class NullCache<K, V> implements Cache<K, V>\n+    private static class NullCache<K,V> implements Cache<K, V>\n     {\n         @Override\n         public V get( K key ) throws CacheException\n@@ -150,8 +150,7 @@ class ShiroCaffeineCache<K, V> implements Cache<K,V>\n         @Override\n         public void clear() throws CacheException\n         {\n-\n-        }\n+}\n \n         @Override\n         public int size()\n@@ -171,4 +170,4 @@ class ShiroCaffeineCache<K, V> implements Cache<K,V>\n             return Collections.emptySet();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
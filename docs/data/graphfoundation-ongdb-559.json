{
    "project_name": "graphfoundation-ongdb",
    "error_id": "559",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/559/FunctionVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/559/FunctionVisitor.java\nindex f60137857bc..a284906a0f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/559/FunctionVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/559/FunctionVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import java.lang.annotation.Annotation;\n@@ -41,84 +42,84 @@ import org.neo4j.tooling.procedure.validators.AllowedTypesValidator;\n public class FunctionVisitor<T extends Annotation>\n {\n \n-    private final ElementVisitor<Stream<CompilationMessage>,Void> parameterVisitor;\n-    private final Elements elements;\n-    private final ElementVisitor<Stream<CompilationMessage>,Void> classVisitor;\n-    private final Function<T,Optional<String>> customNameExtractor;\n-    private final Class<T> annotationType;\n-    private final AllowedTypesValidator allowedTypesValidator;\n+  private final ElementVisitor<Stream<CompilationMessage>, Void> parameterVisitor;\n+  private final Elements elements;\n+  private final ElementVisitor<Stream<CompilationMessage>, Void> classVisitor;\n+  private final Function<T, Optional<String>> customNameExtractor;\n+  private final Class<T> annotationType;\n+  private final AllowedTypesValidator allowedTypesValidator;\n \n-    public FunctionVisitor( Class<T> annotationType, Types types, Elements elements, TypeMirrorUtils typeMirrorUtils,\n-            Function<T,Optional<String>> customNameExtractor, boolean ignoresWarnings )\n-    {\n-        this.customNameExtractor = customNameExtractor;\n-        this.annotationType = annotationType;\n-        this.classVisitor = new ExtensionClassVisitor( types, elements, ignoresWarnings );\n-        this.parameterVisitor = new ParameterVisitor( new ParameterTypeVisitor( types, typeMirrorUtils ) );\n-        this.elements = elements;\n-        this.allowedTypesValidator = new AllowedTypesValidator( typeMirrorUtils, types );\n-    }\n+  public FunctionVisitor(Class<T> annotationType, Types types, Elements elements, TypeMirrorUtils typeMirrorUtils,\n+                         Function<T, Optional<String>> customNameExtractor, boolean ignoresWarnings)\n+  {\n+    this.customNameExtractor = customNameExtractor;\n+    this.annotationType = annotationType;\n+    this.classVisitor = new ExtensionClassVisitor(types, elements, ignoresWarnings);\n+    this.parameterVisitor = new ParameterVisitor(new ParameterTypeVisitor(types, typeMirrorUtils));\n+    this.elements = elements;\n+    this.allowedTypesValidator = new AllowedTypesValidator(typeMirrorUtils, types);\n+  }\n \n-    public Stream<CompilationMessage> validateEnclosingClass( ExecutableElement method )\n-    {\n-        return classVisitor.visit( method.getEnclosingElement() );\n-    }\n+  public Stream<CompilationMessage> validateEnclosingClass(ExecutableElement method)\n+  {\n+    return classVisitor.visit(method.getEnclosingElement());\n+  }\n \n-    public Stream<CompilationMessage> validateParameters( List<? extends VariableElement> parameters )\n-    {\n-        return parameters.stream().flatMap( parameterVisitor::visit );\n-    }\n+  public Stream<CompilationMessage> validateParameters(List<? extends VariableElement> parameters)\n+  {\n+    return parameters.stream().flatMap(parameterVisitor::visit);\n+  }\n \n-    public Stream<CompilationMessage> validateName( ExecutableElement method )\n+  public Stream<CompilationMessage> validateName(ExecutableElement method)\n+  {\n+    Optional<String> customName = customNameExtractor.apply(method.getAnnotation(annotationType));\n+    if (customName.isPresent())\n     {\n-        Optional<String> customName = customNameExtractor.apply( method.getAnnotation( annotationType ) );\n-        if ( customName.isPresent() )\n-        {\n-            if ( isInRootNamespace( customName.get() ) )\n-            {\n-                return Stream.of( rootNamespaceError( method, customName.get() ) );\n-            }\n-            return Stream.empty();\n-        }\n-\n-        PackageElement namespace = elements.getPackageOf( method );\n-        if ( namespace == null )\n-        {\n-            return Stream.of( rootNamespaceError( method ) );\n-        }\n-        return Stream.empty();\n+      if (isInRootNamespace(customName.get()))\n+      {\n+        return Stream.of(rootNamespaceError(method, customName.get()));\n+      }\n+      return Stream.empty();\n     }\n \n-    public Stream<CompilationMessage> validateReturnType( ExecutableElement method )\n+    PackageElement namespace = elements.getPackageOf(method);\n+    if (namespace == null)\n     {\n-        TypeMirror returnType = method.getReturnType();\n-        if ( !allowedTypesValidator.test( returnType ) )\n-        {\n-            return Stream.of( new ReturnTypeError( method,\n-                    \"Unsupported return type <%s> of function defined in <%s#%s>.\", returnType,\n-                    method.getEnclosingElement(), method.getSimpleName() ) );\n-        }\n-        return Stream.empty();\n+      return Stream.of(rootNamespaceError(method));\n     }\n+    return Stream.empty();\n+  }\n \n-    private boolean isInRootNamespace( String name )\n+  public Stream<CompilationMessage> validateReturnType(ExecutableElement method)\n+  {\n+    TypeMirror returnType = method.getReturnType();\n+    if (!allowedTypesValidator.test(returnType))\n     {\n-        return !name.contains( \".\" ) || name.split( \"\\\\.\" )[0].isEmpty();\n+      return Stream.of(new ReturnTypeError(method,\n+          \"Unsupported return type <%s> of function defined in <%s#%s>.\", returnType,\n+          method.getEnclosingElement(), method.getSimpleName()));\n     }\n+    return Stream.empty();\n+  }\n \n-    private FunctionInRootNamespaceError rootNamespaceError( ExecutableElement method, String name )\n-    {\n-        return new FunctionInRootNamespaceError( method,\n-                \"Function <%s> cannot be defined in the root namespace. Valid name example: com.acme.my_function\",\n-                name );\n-    }\n+  private boolean isInRootNamespace(String name)\n+  {\n+    return !name.contains(\".\") || name.split(\"\\\\.\")[0].isEmpty();\n+  }\n \n-    private FunctionInRootNamespaceError rootNamespaceError( ExecutableElement method )\n-    {\n-        return new FunctionInRootNamespaceError( method,\n-                \"Function defined in <%s#%s> cannot be defined in the root namespace. \" +\n-                        \"Valid name example: com.acme.my_function\", method.getEnclosingElement().getSimpleName(),\n-                method.getSimpleName() );\n-    }\n+  private FunctionInRootNamespaceError rootNamespaceError(ExecutableElement method, String name)\n+  {\n+    return new FunctionInRootNamespaceError(method,\n+        \"Function <%s> cannot be defined in the root namespace. Valid name example: com.acme.my_function\",\n+        name);\n+  }\n+\n+  private FunctionInRootNamespaceError rootNamespaceError(ExecutableElement method)\n+  {\n+    return new FunctionInRootNamespaceError(method,\n+        \"Function defined in <%s#%s> cannot be defined in the root namespace. \" +\n+            \"Valid name example: com.acme.my_function\", method.getEnclosingElement().getSimpleName(),\n+        method.getSimpleName());\n+  }\n \n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 246).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/559/FunctionVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/559/FunctionVisitor.java\nindex f60137857bc..6c5a55af416 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/559/FunctionVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/559/FunctionVisitor.java\n@@ -40,7 +40,6 @@ import org.neo4j.tooling.procedure.validators.AllowedTypesValidator;\n \n public class FunctionVisitor<T extends Annotation>\n {\n-\n     private final ElementVisitor<Stream<CompilationMessage>,Void> parameterVisitor;\n     private final Elements elements;\n     private final ElementVisitor<Stream<CompilationMessage>,Void> classVisitor;\n@@ -48,8 +47,7 @@ public class FunctionVisitor<T extends Annotation>\n     private final Class<T> annotationType;\n     private final AllowedTypesValidator allowedTypesValidator;\n \n-    public FunctionVisitor( Class<T> annotationType, Types types, Elements elements, TypeMirrorUtils typeMirrorUtils,\n-            Function<T,Optional<String>> customNameExtractor, boolean ignoresWarnings )\n+    public FunctionVisitor( Class<T> annotationType, Types types, Elements elements, TypeMirrorUtils typeMirrorUtils, Function<T,Optional<String>> customNameExtractor, boolean ignoresWarnings )\n     {\n         this.customNameExtractor = customNameExtractor;\n         this.annotationType = annotationType;\n@@ -78,7 +76,8 @@ public class FunctionVisitor<T extends Annotation>\n             {\n                 return Stream.of( rootNamespaceError( method, customName.get() ) );\n             }\n-            return Stream.empty();\n+\n+return Stream.empty();\n         }\n \n         PackageElement namespace = elements.getPackageOf( method );\n@@ -86,7 +85,8 @@ public class FunctionVisitor<T extends Annotation>\n         {\n             return Stream.of( rootNamespaceError( method ) );\n         }\n-        return Stream.empty();\n+\n+return Stream.empty();\n     }\n \n     public Stream<CompilationMessage> validateReturnType( ExecutableElement method )\n@@ -94,11 +94,11 @@ public class FunctionVisitor<T extends Annotation>\n         TypeMirror returnType = method.getReturnType();\n         if ( !allowedTypesValidator.test( returnType ) )\n         {\n-            return Stream.of( new ReturnTypeError( method,\n-                    \"Unsupported return type <%s> of function defined in <%s#%s>.\", returnType,\n+            return Stream.of( new ReturnTypeError( method, \"Unsupported return type <%s> of function defined in <%s#%s>.\", returnType,\n                     method.getEnclosingElement(), method.getSimpleName() ) );\n         }\n-        return Stream.empty();\n+\n+return Stream.empty();\n     }\n \n     private boolean isInRootNamespace( String name )\n@@ -108,17 +108,11 @@ public class FunctionVisitor<T extends Annotation>\n \n     private FunctionInRootNamespaceError rootNamespaceError( ExecutableElement method, String name )\n     {\n-        return new FunctionInRootNamespaceError( method,\n-                \"Function <%s> cannot be defined in the root namespace. Valid name example: com.acme.my_function\",\n-                name );\n+        return new FunctionInRootNamespaceError( method, \"Function <%s> cannot be defined in the root namespace. Valid name example: com.acme.my_function\", name );\n     }\n \n     private FunctionInRootNamespaceError rootNamespaceError( ExecutableElement method )\n     {\n-        return new FunctionInRootNamespaceError( method,\n-                \"Function defined in <%s#%s> cannot be defined in the root namespace. \" +\n-                        \"Valid name example: com.acme.my_function\", method.getEnclosingElement().getSimpleName(),\n-                method.getSimpleName() );\n+        return new FunctionInRootNamespaceError( method, \"Function defined in <%s#%s> cannot be defined in the root namespace. \" + \"Valid name example: com.acme.my_function\", method.getEnclosingElement().getSimpleName(), method.getSimpleName() );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1254",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1254/DelegatingPropertyKeyTokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1254/DelegatingPropertyKeyTokenHolder.java\nindex c1f986ea3d7..fd98dec8f8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1254/DelegatingPropertyKeyTokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1254/DelegatingPropertyKeyTokenHolder.java\n@@ -17,20 +17,21 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import org.neo4j.storageengine.api.Token;\n \n public class DelegatingPropertyKeyTokenHolder extends DelegatingTokenHolder<Token> implements PropertyKeyTokenHolder\n {\n-    public DelegatingPropertyKeyTokenHolder( TokenCreator tokenCreator )\n-    {\n-        super( tokenCreator, new Token.Factory() );\n-    }\n+  public DelegatingPropertyKeyTokenHolder(TokenCreator tokenCreator)\n+  {\n+    super(tokenCreator, new Token.Factory());\n+  }\n \n-    @Override\n-    protected String tokenType()\n-    {\n-        return \"PropertyKey\";\n-    }\n+  @Override\n+  protected String tokenType()\n+  {\n+    return \"PropertyKey\";\n+  }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1254/DelegatingPropertyKeyTokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1254/DelegatingPropertyKeyTokenHolder.java\nindex c1f986ea3d7..658ca9f5015 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1254/DelegatingPropertyKeyTokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1254/DelegatingPropertyKeyTokenHolder.java\n@@ -33,4 +33,4 @@ public class DelegatingPropertyKeyTokenHolder extends DelegatingTokenHolder<Toke\n     {\n         return \"PropertyKey\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1254/DelegatingPropertyKeyTokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1254/DelegatingPropertyKeyTokenHolder.java\nindex c1f986ea3d7..781b0e2d956 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1254/DelegatingPropertyKeyTokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1254/DelegatingPropertyKeyTokenHolder.java\n@@ -21,11 +21,12 @@ package org.neo4j.kernel.impl.core;\n \n import org.neo4j.storageengine.api.Token;\n \n-public class DelegatingPropertyKeyTokenHolder extends DelegatingTokenHolder<Token> implements PropertyKeyTokenHolder\n+public class DelegatingPropertyKeyTokenHolder extends DelegatingTokenHolder<Token>\n+implements PropertyKeyTokenHolder\n {\n     public DelegatingPropertyKeyTokenHolder( TokenCreator tokenCreator )\n     {\n-        super( tokenCreator, new Token.Factory() );\n+        super( tokenCreator, new Token. Factory() );\n     }\n \n     @Override\n@@ -33,4 +34,4 @@ public class DelegatingPropertyKeyTokenHolder extends DelegatingTokenHolder<Toke\n     {\n         return \"PropertyKey\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
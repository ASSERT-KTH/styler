{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1333",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1333/ReadableChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1333/ReadableChannel.java\nindex eb3be02b17b..7f417b5ae49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1333/ReadableChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1333/ReadableChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.io.Closeable;\n@@ -28,56 +29,56 @@ import java.io.IOException;\n  */\n public interface ReadableChannel extends Closeable\n {\n-    /**\n-     * @return the next {@code byte} in this channel.\n-     * @throws IOException I/O error from channel.\n-     * @throws ReadPastEndException if not enough data was available.\n-     */\n-    byte get() throws IOException;\n+  /**\n+   * @return the next {@code byte} in this channel.\n+   * @throws IOException          I/O error from channel.\n+   * @throws ReadPastEndException if not enough data was available.\n+   */\n+  byte get() throws IOException;\n \n-    /**\n-     * @return the next {@code short} in this channel.\n-     * @throws IOException I/O error from channel.\n-     * @throws ReadPastEndException if not enough data was available.\n-     */\n-    short getShort() throws IOException;\n+  /**\n+   * @return the next {@code short} in this channel.\n+   * @throws IOException          I/O error from channel.\n+   * @throws ReadPastEndException if not enough data was available.\n+   */\n+  short getShort() throws IOException;\n \n-    /**\n-     * @return the next {@code int} in this channel.\n-     * @throws IOException I/O error from channel.\n-     * @throws ReadPastEndException if not enough data was available.\n-     */\n-    int getInt() throws IOException;\n+  /**\n+   * @return the next {@code int} in this channel.\n+   * @throws IOException          I/O error from channel.\n+   * @throws ReadPastEndException if not enough data was available.\n+   */\n+  int getInt() throws IOException;\n \n-    /**\n-     * @return the next {@code long} in this channel.\n-     * @throws IOException I/O error from channel.\n-     * @throws ReadPastEndException if not enough data was available.\n-     */\n-    long getLong() throws IOException;\n+  /**\n+   * @return the next {@code long} in this channel.\n+   * @throws IOException          I/O error from channel.\n+   * @throws ReadPastEndException if not enough data was available.\n+   */\n+  long getLong() throws IOException;\n \n-    /**\n-     * @return the next {@code float} in this channel.\n-     * @throws IOException I/O error from channel.\n-     * @throws ReadPastEndException if not enough data was available.\n-     */\n-    float getFloat() throws IOException;\n+  /**\n+   * @return the next {@code float} in this channel.\n+   * @throws IOException          I/O error from channel.\n+   * @throws ReadPastEndException if not enough data was available.\n+   */\n+  float getFloat() throws IOException;\n \n-    /**\n-     * @return the next {@code double} in this channel.\n-     * @throws IOException I/O error from channel.\n-     * @throws ReadPastEndException if not enough data was available.\n-     */\n-    double getDouble() throws IOException;\n+  /**\n+   * @return the next {@code double} in this channel.\n+   * @throws IOException          I/O error from channel.\n+   * @throws ReadPastEndException if not enough data was available.\n+   */\n+  double getDouble() throws IOException;\n \n-    /**\n-     * Reads the next {@code length} bytes from this channel and puts them into {@code bytes}.\n-     * Will throw {@link ArrayIndexOutOfBoundsException} if {@code length} exceeds the length of {@code bytes}.\n-     *\n-     * @param bytes {@code byte[]} to put read bytes into.\n-     * @param length number of bytes to read from the channel.\n-     * @throws IOException I/O error from channel.\n-     * @throws ReadPastEndException if not enough data was available.\n-     */\n-    void get( byte[] bytes, int length ) throws IOException;\n+  /**\n+   * Reads the next {@code length} bytes from this channel and puts them into {@code bytes}.\n+   * Will throw {@link ArrayIndexOutOfBoundsException} if {@code length} exceeds the length of {@code bytes}.\n+   *\n+   * @param bytes  {@code byte[]} to put read bytes into.\n+   * @param length number of bytes to read from the channel.\n+   * @throws IOException          I/O error from channel.\n+   * @throws ReadPastEndException if not enough data was available.\n+   */\n+  void get(byte[] bytes, int length) throws IOException;\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1333/ReadableChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1333/ReadableChannel.java\nindex eb3be02b17b..9c5f85378d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1333/ReadableChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1333/ReadableChannel.java\n@@ -80,4 +80,4 @@ public interface ReadableChannel extends Closeable\n      * @throws ReadPastEndException if not enough data was available.\n      */\n     void get( byte[] bytes, int length ) throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2269",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2269/BackupRecoveryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2269/BackupRecoveryService.java\nindex 254409132c9..1d15c6cb99c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2269/BackupRecoveryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2269/BackupRecoveryService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.nio.file.Path;\n@@ -32,12 +33,12 @@ import static org.neo4j.backup.impl.BackupProtocolService.startTemporaryDb;\n \n class BackupRecoveryService\n {\n-    public void recoverWithDatabase( Path targetDirectory, PageCache pageCache, Config config )\n-    {\n-        Map<String,String> configParams = config.getRaw();\n-        configParams.put( GraphDatabaseSettings.logical_logs_location.name(), targetDirectory.toString() );\n-        configParams.put( GraphDatabaseSettings.pagecache_warmup_enabled.name(), Settings.FALSE );\n-        GraphDatabaseAPI targetDb = startTemporaryDb( targetDirectory, pageCache, configParams );\n-        targetDb.shutdown();\n-    }\n+  public void recoverWithDatabase(Path targetDirectory, PageCache pageCache, Config config)\n+  {\n+    Map<String, String> configParams = config.getRaw();\n+    configParams.put(GraphDatabaseSettings.logical_logs_location.name(), targetDirectory.toString());\n+    configParams.put(GraphDatabaseSettings.pagecache_warmup_enabled.name(), Settings.FALSE);\n+    GraphDatabaseAPI targetDb = startTemporaryDb(targetDirectory, pageCache, configParams);\n+    targetDb.shutdown();\n+  }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2269/BackupRecoveryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2269/BackupRecoveryService.java\nindex 254409132c9..6555335c21a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2269/BackupRecoveryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2269/BackupRecoveryService.java\n@@ -40,4 +40,4 @@ class BackupRecoveryService\n         GraphDatabaseAPI targetDb = startTemporaryDb( targetDirectory, pageCache, configParams );\n         targetDb.shutdown();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
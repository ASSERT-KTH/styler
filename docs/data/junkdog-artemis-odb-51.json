{
    "project_name": "junkdog-artemis-odb",
    "error_id": "51",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class ReflectionCacheGenerator extends Generator {\n\t@Override\n\tpublic String generate (TreeLogger logger, GeneratorContext context, String typeName) throws UnableToCompleteException {\n\t\tTypeOracle oracle = context.getTypeOracle();\n\t\tassert (oracle != null);\n\t\tJClassType type = oracle.findType(typeName);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/51/ReflectionCacheGenerator.java\nindex 2458772e5ec..14827f22d49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/51/ReflectionCacheGenerator.java\n@@ -26,8 +26,9 @@ import static com.google.gwt.core.ext.TreeLogger.*;\n \n public class ReflectionCacheGenerator extends Generator {\n \t@Override\n-\tpublic String generate (TreeLogger logger, GeneratorContext context, String typeName) throws UnableToCompleteException {\n-\t\tTypeOracle oracle = context.getTypeOracle();\n+\tpublic String generate (TreeLogger logger, GeneratorContext context, String typeName)\n+throws UnableToCompleteException {\n+\t\t\tTypeOracle oracle = context.getTypeOracle();\n \t\tassert (oracle != null);\n \t\tJClassType type = oracle.findType(typeName);\n \t\tif (type == null) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/51/ReflectionCacheGenerator.java\nindex 2458772e5ec..3b84ce9f2fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/51/ReflectionCacheGenerator.java\n@@ -1,12 +1,12 @@\n /*******************************************************************************\n  * Copyright 2011 See AUTHORS file.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -22,25 +22,27 @@ import com.google.gwt.core.ext.TreeLogger;\n import com.google.gwt.core.ext.UnableToCompleteException;\n import com.google.gwt.core.ext.typeinfo.JClassType;\n import com.google.gwt.core.ext.typeinfo.TypeOracle;\n+\n import static com.google.gwt.core.ext.TreeLogger.*;\n \n public class ReflectionCacheGenerator extends Generator {\n-\t@Override\n-\tpublic String generate (TreeLogger logger, GeneratorContext context, String typeName) throws UnableToCompleteException {\n-\t\tTypeOracle oracle = context.getTypeOracle();\n-\t\tassert (oracle != null);\n-\t\tJClassType type = oracle.findType(typeName);\n-\t\tif (type == null) {\n-\t\t\tlogger.log(ERROR, \"Couldn't find type '\" + typeName + \"'\");\n-\t\t\tthrow new UnableToCompleteException();\n-\t\t}\n+    @Override\n+    public String generate(TreeLogger logger, GeneratorContext context, String typeName)\n+            throws UnableToCompleteException {\n+        TypeOracle oracle = context.getTypeOracle();\n+        assert (oracle != null);\n+        JClassType type = oracle.findType(typeName);\n+        if (type == null) {\n+            logger.log(ERROR, \"Couldn't find type '\" + typeName + \"'\");\n+            throw new UnableToCompleteException();\n+        }\n \n-\t\tif (type.isInterface() == null) {\n-\t\t\tlogger.log(ERROR, \"Type '\" + typeName + \"' must be an interface\");\n-\t\t\tthrow new UnableToCompleteException();\n-\t\t}\n+        if (type.isInterface() == null) {\n+            logger.log(ERROR, \"Type '\" + typeName + \"' must be an interface\");\n+            throw new UnableToCompleteException();\n+        }\n \n-\t\tReflectionCacheSourceCreator source = new ReflectionCacheSourceCreator(logger, context, type);\n-\t\treturn source.create();\n-\t}\n+        ReflectionCacheSourceCreator source = new ReflectionCacheSourceCreator(logger, context, type);\n+        return source.create();\n+    }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/51/ReflectionCacheGenerator.java\nindex 2458772e5ec..633c689400b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/51/ReflectionCacheGenerator.java\n@@ -43,4 +43,4 @@ public class ReflectionCacheGenerator extends Generator {\n \t\tReflectionCacheSourceCreator source = new ReflectionCacheSourceCreator(logger, context, type);\n \t\treturn source.create();\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/51/ReflectionCacheGenerator.java\nindex 2458772e5ec..3a593c465ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/51/ReflectionCacheGenerator.java\n@@ -25,22 +25,25 @@ import com.google.gwt.core.ext.typeinfo.TypeOracle;\n import static com.google.gwt.core.ext.TreeLogger.*;\n \n public class ReflectionCacheGenerator extends Generator {\n-\t@Override\n-\tpublic String generate (TreeLogger logger, GeneratorContext context, String typeName) throws UnableToCompleteException {\n-\t\tTypeOracle oracle = context.getTypeOracle();\n-\t\tassert (oracle != null);\n-\t\tJClassType type = oracle.findType(typeName);\n-\t\tif (type == null) {\n-\t\t\tlogger.log(ERROR, \"Couldn't find type '\" + typeName + \"'\");\n-\t\t\tthrow new UnableToCompleteException();\n-\t\t}\n+ @Override\n+ public String generate(TreeLogger logger,\n+GeneratorContext context, String typeName) throws UnableToCompleteException {\n+  TypeOracle oracle = context.getTypeOracle();\n+  assert(oracle != null);\n \n-\t\tif (type.isInterface() == null) {\n-\t\t\tlogger.log(ERROR, \"Type '\" + typeName + \"' must be an interface\");\n-\t\t\tthrow new UnableToCompleteException();\n-\t\t}\n+  JClassType type = oracle.findType(typeName);\n+  if (type == null) {\n+   logger.log(ERROR, \"Couldn't find type '\" + typeName + \"'\");\n+   throw new UnableToCompleteException();\n+  }\n \n-\t\tReflectionCacheSourceCreator source = new ReflectionCacheSourceCreator(logger, context, type);\n-\t\treturn source.create();\n-\t}\n-}\n+  if (type.isInterface() == null) {\n+   logger.log(ERROR, \"Type '\" + typeName + \"' must be an interface\");\n+   throw new UnableToCompleteException();\n+  }\n+\n+  ReflectionCacheSourceCreator source = new ReflectionCacheSourceCreator(logger, context, type);\n+  return source.create();\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/51/ReflectionCacheGenerator.java\nindex 2458772e5ec..14827f22d49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/51/ReflectionCacheGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/51/ReflectionCacheGenerator.java\n@@ -26,8 +26,9 @@ import static com.google.gwt.core.ext.TreeLogger.*;\n \n public class ReflectionCacheGenerator extends Generator {\n \t@Override\n-\tpublic String generate (TreeLogger logger, GeneratorContext context, String typeName) throws UnableToCompleteException {\n-\t\tTypeOracle oracle = context.getTypeOracle();\n+\tpublic String generate (TreeLogger logger, GeneratorContext context, String typeName)\n+throws UnableToCompleteException {\n+\t\t\tTypeOracle oracle = context.getTypeOracle();\n \t\tassert (oracle != null);\n \t\tJClassType type = oracle.findType(typeName);\n \t\tif (type == null) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_three_grams"
    ]
}
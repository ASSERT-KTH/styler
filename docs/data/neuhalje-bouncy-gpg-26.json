{
    "project_name": "neuhalje-bouncy-gpg",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n\nimport static java.util.Objects.requireNonNull;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/26/KeySpecBuilder.java\nindex fe348c2db9c..f416f72a160 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/26/KeySpecBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/26/KeySpecBuilder.java\nindex fe348c2db9c..f416f72a160 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/26/KeySpecBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/26/KeySpecBuilder.java\nindex fe348c2db9c..73eae1428f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/26/KeySpecBuilder.java\n@@ -37,7 +37,8 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n   @Override\n   public WithDetailedConfiguration withKeyFlags(KeyFlag... flags) {\n     int val = 0;\n-    for (final KeyFlag f : flags) {\n+\n+for (final KeyFlag f : flags) {\n       val |= f.getFlag();\n     }\n     this.hashedSubPackets.setKeyFlags(false, val);\n@@ -69,20 +70,18 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n     @Override\n     public KeySpec withDefaultAlgorithms() {\n-      hashedSubPackets\n-          .setPreferredCompressionAlgorithms(false,\n+      hashedSubPackets.setPreferredCompressionAlgorithms(false,\n               PGPCompressionAlgorithms.recommendedAlgorithmIds());\n-      hashedSubPackets\n+hashedSubPackets\n           .setPreferredSymmetricAlgorithms(false,\n               PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n-      hashedSubPackets\n+hashedSubPackets\n           .setPreferredHashAlgorithms(false, PGPHashAlgorithms.recommendedAlgorithmIds());\n       hashedSubPackets.setFeature(false, Features.FEATURE_MODIFICATION_DETECTION);\n \n       return new KeySpec(\n           KeySpecBuilder.this.type,\n-          KeySpecBuilder.this.hashedSubPackets,\n-          false);\n+          KeySpecBuilder.this.hashedSubPackets, false);\n     }\n   }\n \n@@ -92,7 +91,10 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n     public WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n         PGPSymmetricEncryptionAlgorithms... algorithms) {\n       int[] ids = new int[algorithms.length];\n-      for (int i = 0; i < ids.length; i++) {\n+\n+for (int i = 0; i < ids.length;\n+\n+i++) {\n         ids[i] = algorithms[i].getAlgorithmId();\n       }\n       KeySpecBuilder.this.hashedSubPackets.setPreferredSymmetricAlgorithms(false, ids);\n@@ -103,7 +105,8 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n     public WithPreferredHashAlgorithms withDefaultSymmetricAlgorithms() {\n       KeySpecBuilder.this.hashedSubPackets.setPreferredSymmetricAlgorithms(false,\n           PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n-      return new WithPreferredHashAlgorithmsImpl();\n+\n+return new WithPreferredHashAlgorithmsImpl();\n     }\n \n     @Override\n@@ -114,7 +117,8 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n           PGPCompressionAlgorithms.recommendedAlgorithmIds());\n       hashedSubPackets.setPreferredHashAlgorithms(false,\n           PGPHashAlgorithms.recommendedAlgorithmIds());\n-      return new WithFeaturesImpl();\n+\n+return new WithFeaturesImpl();\n     }\n   }\n \n@@ -124,7 +128,10 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n     public WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n         PGPHashAlgorithms... algorithms) {\n       int[] ids = new int[algorithms.length];\n-      for (int i = 0; i < ids.length; i++) {\n+\n+for (int i = 0; i < ids.length;\n+\n+i++) {\n         ids[i] = algorithms[i].getAlgorithmId();\n       }\n       KeySpecBuilder.this.hashedSubPackets.setPreferredHashAlgorithms(false, ids);\n@@ -135,7 +142,8 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n     public WithPreferredCompressionAlgorithms withDefaultHashAlgorithms() {\n       KeySpecBuilder.this.hashedSubPackets.setPreferredHashAlgorithms(false,\n           PGPHashAlgorithms.recommendedAlgorithmIds());\n-      return new WithPreferredCompressionAlgorithmsImpl();\n+\n+return new WithPreferredCompressionAlgorithmsImpl();\n     }\n   }\n \n@@ -145,7 +153,10 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n     public WithFeatures withPreferredCompressionAlgorithms(\n         PGPCompressionAlgorithms... algorithms) {\n       int[] ids = new int[algorithms.length];\n-      for (int i = 0; i < ids.length; i++) {\n+\n+for (int i = 0; i < ids.length;\n+\n+i++) {\n         ids[i] = algorithms[i].getAlgorithmId();\n       }\n       KeySpecBuilder.this.hashedSubPackets.setPreferredCompressionAlgorithms(false, ids);\n@@ -156,7 +167,8 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n     public WithFeatures withDefaultCompressionAlgorithms() {\n       KeySpecBuilder.this.hashedSubPackets.setPreferredCompressionAlgorithms(false,\n           PGPCompressionAlgorithms.recommendedAlgorithmIds());\n-      return new WithFeaturesImpl();\n+\n+return new WithFeaturesImpl();\n     }\n   }\n \n@@ -172,8 +184,7 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n     public KeySpec done() {\n       return new KeySpec(\n           KeySpecBuilder.this.type,\n-          hashedSubPackets,\n-          false);\n+          hashedSubPackets, false);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "column": "7",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "column": "7",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "column": "7",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/26/KeySpecBuilder.java\nindex fe348c2db9c..e7bed31d2e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/26/KeySpecBuilder.java\n@@ -16,7 +16,6 @@\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n-\n import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.Feature;\n import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.PGPCompressionAlgorithms;\n import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.PGPHashAlgorithms;\n@@ -25,6 +24,7 @@ import name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation.type.\n import org.bouncycastle.bcpg.sig.Features;\n import org.bouncycastle.openpgp.PGPSignatureSubpacketGenerator;\n \n+\n public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n   private KeyType type;\n@@ -37,6 +37,7 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n   @Override\n   public WithDetailedConfiguration withKeyFlags(KeyFlag... flags) {\n     int val = 0;\n+\n     for (final KeyFlag f : flags) {\n       val |= f.getFlag();\n     }\n@@ -46,12 +47,11 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n   @Override\n   public WithDetailedConfiguration withDefaultKeyFlags() {\n-    return withKeyFlags(\n-        KeyFlag.CERTIFY_OTHER,\n-        KeyFlag.SIGN_DATA,\n-        KeyFlag.ENCRYPT_COMMS,\n-        KeyFlag.ENCRYPT_STORAGE,\n-        KeyFlag.AUTHENTICATION);\n+    return withKeyFlags(KeyFlag.CERTIFY_OTHER,\n+                        KeyFlag.SIGN_DATA,\n+                        KeyFlag.ENCRYPT_COMMS,\n+                        KeyFlag.ENCRYPT_STORAGE,\n+                        KeyFlag.AUTHENTICATION);\n   }\n \n   @Override\n@@ -69,30 +69,22 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n     @Override\n     public KeySpec withDefaultAlgorithms() {\n-      hashedSubPackets\n-          .setPreferredCompressionAlgorithms(false,\n-              PGPCompressionAlgorithms.recommendedAlgorithmIds());\n-      hashedSubPackets\n-          .setPreferredSymmetricAlgorithms(false,\n-              PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n-      hashedSubPackets\n-          .setPreferredHashAlgorithms(false, PGPHashAlgorithms.recommendedAlgorithmIds());\n+      hashedSubPackets.setPreferredCompressionAlgorithms(false, PGPCompressionAlgorithms.recommendedAlgorithmIds());\n+      hashedSubPackets.setPreferredSymmetricAlgorithms(false, PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n+      hashedSubPackets.setPreferredHashAlgorithms(false, PGPHashAlgorithms.recommendedAlgorithmIds());\n       hashedSubPackets.setFeature(false, Features.FEATURE_MODIFICATION_DETECTION);\n-\n-      return new KeySpec(\n-          KeySpecBuilder.this.type,\n-          KeySpecBuilder.this.hashedSubPackets,\n-          false);\n+      return new KeySpec(KeySpecBuilder.this.type, KeySpecBuilder.this.hashedSubPackets, false);\n     }\n   }\n \n   class WithPreferredSymmetricAlgorithmsImpl implements WithPreferredSymmetricAlgorithms {\n \n     @Override\n-    public WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n-        PGPSymmetricEncryptionAlgorithms... algorithms) {\n+    public WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(PGPSymmetricEncryptionAlgorithms... algorithms) {\n       int[] ids = new int[algorithms.length];\n-      for (int i = 0; i < ids.length; i++) {\n+\n+      for(int i = 0;i < ids.length;\n+i++) {\n         ids[i] = algorithms[i].getAlgorithmId();\n       }\n       KeySpecBuilder.this.hashedSubPackets.setPreferredSymmetricAlgorithms(false, ids);\n@@ -101,19 +93,15 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n     @Override\n     public WithPreferredHashAlgorithms withDefaultSymmetricAlgorithms() {\n-      KeySpecBuilder.this.hashedSubPackets.setPreferredSymmetricAlgorithms(false,\n-          PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n+      KeySpecBuilder.this.hashedSubPackets.setPreferredSymmetricAlgorithms(false, PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n       return new WithPreferredHashAlgorithmsImpl();\n     }\n \n     @Override\n     public WithFeatures withDefaultAlgorithms() {\n-      hashedSubPackets.setPreferredSymmetricAlgorithms(false,\n-          PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n-      hashedSubPackets.setPreferredCompressionAlgorithms(false,\n-          PGPCompressionAlgorithms.recommendedAlgorithmIds());\n-      hashedSubPackets.setPreferredHashAlgorithms(false,\n-          PGPHashAlgorithms.recommendedAlgorithmIds());\n+      hashedSubPackets.setPreferredSymmetricAlgorithms(false, PGPSymmetricEncryptionAlgorithms.recommendedAlgorithmIds());\n+      hashedSubPackets.setPreferredCompressionAlgorithms(false, PGPCompressionAlgorithms.recommendedAlgorithmIds());\n+      hashedSubPackets.setPreferredHashAlgorithms(false, PGPHashAlgorithms.recommendedAlgorithmIds());\n       return new WithFeaturesImpl();\n     }\n   }\n@@ -121,10 +109,11 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n   class WithPreferredHashAlgorithmsImpl implements WithPreferredHashAlgorithms {\n \n     @Override\n-    public WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n-        PGPHashAlgorithms... algorithms) {\n+    public WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(PGPHashAlgorithms... algorithms) {\n       int[] ids = new int[algorithms.length];\n-      for (int i = 0; i < ids.length; i++) {\n+\n+      for(int i = 0;i < ids.length;\n+i++) {\n         ids[i] = algorithms[i].getAlgorithmId();\n       }\n       KeySpecBuilder.this.hashedSubPackets.setPreferredHashAlgorithms(false, ids);\n@@ -133,8 +122,7 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n     @Override\n     public WithPreferredCompressionAlgorithms withDefaultHashAlgorithms() {\n-      KeySpecBuilder.this.hashedSubPackets.setPreferredHashAlgorithms(false,\n-          PGPHashAlgorithms.recommendedAlgorithmIds());\n+      KeySpecBuilder.this.hashedSubPackets.setPreferredHashAlgorithms(false, PGPHashAlgorithms.recommendedAlgorithmIds());\n       return new WithPreferredCompressionAlgorithmsImpl();\n     }\n   }\n@@ -142,10 +130,11 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n   class WithPreferredCompressionAlgorithmsImpl implements WithPreferredCompressionAlgorithms {\n \n     @Override\n-    public WithFeatures withPreferredCompressionAlgorithms(\n-        PGPCompressionAlgorithms... algorithms) {\n+    public WithFeatures withPreferredCompressionAlgorithms(PGPCompressionAlgorithms... algorithms) {\n       int[] ids = new int[algorithms.length];\n-      for (int i = 0; i < ids.length; i++) {\n+\n+      for(int i = 0;i < ids.length;\n+i++) {\n         ids[i] = algorithms[i].getAlgorithmId();\n       }\n       KeySpecBuilder.this.hashedSubPackets.setPreferredCompressionAlgorithms(false, ids);\n@@ -154,8 +143,7 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n     @Override\n     public WithFeatures withDefaultCompressionAlgorithms() {\n-      KeySpecBuilder.this.hashedSubPackets.setPreferredCompressionAlgorithms(false,\n-          PGPCompressionAlgorithms.recommendedAlgorithmIds());\n+      KeySpecBuilder.this.hashedSubPackets.setPreferredCompressionAlgorithms(false, PGPCompressionAlgorithms.recommendedAlgorithmIds());\n       return new WithFeaturesImpl();\n     }\n   }\n@@ -170,10 +158,7 @@ public class KeySpecBuilder implements KeySpecBuilderInterface {\n \n     @Override\n     public KeySpec done() {\n-      return new KeySpec(\n-          KeySpecBuilder.this.type,\n-          hashedSubPackets,\n-          false);\n+      return new KeySpec(KeySpecBuilder.this.type, hashedSubPackets, false);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/26/KeySpecBuilder.java\nindex fe348c2db9c..f416f72a160 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/26/KeySpecBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'bouncycastle' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/26/KeySpecBuilder.java\nindex fe348c2db9c..f568195190f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/26/KeySpecBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/26/KeySpecBuilder.java\n@@ -13,7 +13,9 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n+\n+package name.neuhalfen.projects.crypto.\n+bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
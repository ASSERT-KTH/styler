{
    "project_name": "neo4j-neo4j",
    "error_id": "2069",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2069/CursorPropertyAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2069/CursorPropertyAccessor.java\nindex 47b948242f8..19b5c1bb1db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2069/CursorPropertyAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2069/CursorPropertyAccessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.neo4j.common.EntityType;\n@@ -39,7 +40,7 @@ class CursorPropertyAccessor implements NodePropertyAccessor, AutoCloseable\n     private final PropertyCursor propertyCursor;\n     private final Read read;\n \n-    CursorPropertyAccessor( NodeCursor nodeCursor, PropertyCursor propertyCursor, Read read )\n+    CursorPropertyAccessor(NodeCursor nodeCursor, PropertyCursor propertyCursor, Read read)\n     {\n         this.nodeCursor = nodeCursor;\n         this.propertyCursor = propertyCursor;\n@@ -49,19 +50,19 @@ class CursorPropertyAccessor implements NodePropertyAccessor, AutoCloseable\n     @Override\n     public void close()\n     {\n-        IOUtils.closeAllSilently( propertyCursor, nodeCursor );\n+        IOUtils.closeAllSilently(propertyCursor, nodeCursor);\n     }\n \n     @Override\n-    public Value getNodePropertyValue( long nodeId, int propertyKeyId, PageCursorTracer cursorTracer ) throws EntityNotFoundException\n+    public Value getNodePropertyValue(long nodeId, int propertyKeyId, PageCursorTracer cursorTracer) throws EntityNotFoundException\n     {\n-        read.singleNode( nodeId, nodeCursor );\n-        if ( !nodeCursor.next() )\n+        read.singleNode(nodeId, nodeCursor);\n+        if (!nodeCursor.next())\n         {\n-            throw new EntityNotFoundException( EntityType.NODE, nodeId );\n+            throw new EntityNotFoundException(EntityType.NODE, nodeId);\n         }\n \n-        nodeCursor.properties( propertyCursor );\n-        return propertyCursor.seekProperty( propertyKeyId ) ? propertyCursor.propertyValue() : Values.NO_VALUE;\n+        nodeCursor.properties(propertyCursor);\n+        return propertyCursor.seekProperty(propertyKeyId) ? propertyCursor.propertyValue() : Values.NO_VALUE;\n     }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2069/CursorPropertyAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2069/CursorPropertyAccessor.java\nindex 47b948242f8..9c91c028b67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2069/CursorPropertyAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2069/CursorPropertyAccessor.java\n@@ -64,4 +64,4 @@ class CursorPropertyAccessor implements NodePropertyAccessor, AutoCloseable\n         nodeCursor.properties( propertyCursor );\n         return propertyCursor.seekProperty( propertyKeyId ) ? propertyCursor.propertyValue() : Values.NO_VALUE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1693",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1693/Aggregator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1693/Aggregator.java\nindex fb8b36ded68..19dff95ba4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1693/Aggregator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1693/Aggregator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.helpers.progress;\n \n import java.util.ArrayList;\n@@ -30,57 +31,57 @@ import static java.util.concurrent.atomic.AtomicLongFieldUpdater.newUpdater;\n \n final class Aggregator\n {\n-    private final Map<ProgressListener,State> states = new HashMap<>();\n+    private final Map<ProgressListener, State> states = new HashMap<>();\n     private final Indicator indicator;\n-    @SuppressWarnings( \"unused\"/*accessed through updater*/ )\n+    @SuppressWarnings(\"unused\"/*accessed through updater*/)\n     private volatile long progress;\n-    @SuppressWarnings( \"unused\"/*accessed through updater*/ )\n+    @SuppressWarnings(\"unused\"/*accessed through updater*/)\n     private volatile int last;\n-    private static final AtomicLongFieldUpdater<Aggregator> PROGRESS_UPDATER = newUpdater( Aggregator.class, \"progress\" );\n+    private static final AtomicLongFieldUpdater<Aggregator> PROGRESS_UPDATER = newUpdater(Aggregator.class, \"progress\");\n     private static final AtomicIntegerFieldUpdater<Aggregator> LAST_UPDATER =\n-            AtomicIntegerFieldUpdater.newUpdater( Aggregator.class, \"last\" );\n+      AtomicIntegerFieldUpdater.newUpdater(Aggregator.class, \"last\");\n     private volatile long totalCount;\n \n-    Aggregator( Indicator indicator )\n+    Aggregator(Indicator indicator)\n     {\n         this.indicator = indicator;\n     }\n \n-    synchronized void add( ProgressListener progress, long totalCount )\n+    synchronized void add(ProgressListener progress, long totalCount)\n     {\n-        states.put( progress, State.INIT );\n+        states.put(progress, State.INIT);\n         this.totalCount += totalCount;\n     }\n \n     synchronized ProgressMonitorFactory.Completer initialize()\n     {\n-        indicator.startProcess( totalCount );\n-        if ( states.isEmpty() )\n+        indicator.startProcess(totalCount);\n+        if (states.isEmpty())\n         {\n-            indicator.progress( 0, indicator.reportResolution() );\n+            indicator.progress(0, indicator.reportResolution());\n             indicator.completeProcess();\n         }\n \n-        List<ProgressListener> progressesToClose = new ArrayList<>( states.keySet() );\n-        return () -> progressesToClose.forEach( ProgressListener::done );\n+        List<ProgressListener> progressesToClose = new ArrayList<>(states.keySet());\n+        return () -> progressesToClose.forEach(ProgressListener::done);\n     }\n \n-    void update( long delta )\n+    void update(long delta)\n     {\n-        long progress = PROGRESS_UPDATER.addAndGet( this, delta );\n+        long progress = PROGRESS_UPDATER.addAndGet(this, delta);\n         int current = (int) ((progress * indicator.reportResolution()) / totalCount);\n-        updateTo( current );\n+        updateTo(current);\n     }\n \n-    private void updateTo( int to )\n+    private void updateTo(int to)\n     {\n-        for ( int last = this.last; to > last; last = this.last )\n+        for (int last = this.last; to > last; last = this.last)\n         {\n-            if ( LAST_UPDATER.compareAndSet( this, last, to ) )\n+            if (LAST_UPDATER.compareAndSet(this, last, to))\n             {\n-                synchronized ( this )\n+                synchronized (this)\n                 {\n-                    indicator.progress( last, to );\n+                    indicator.progress(last, to);\n                 }\n             }\n         }\n@@ -88,23 +89,23 @@ final class Aggregator\n \n     void updateRemaining()\n     {\n-        updateTo( indicator.reportResolution() );\n+        updateTo(indicator.reportResolution());\n     }\n \n-    synchronized void start( ProgressListener.MultiPartProgressListener part )\n+    synchronized void start(ProgressListener.MultiPartProgressListener part)\n     {\n-        if ( states.put( part, State.LIVE ) == State.INIT )\n+        if (states.put(part, State.LIVE) == State.INIT)\n         {\n-            indicator.startPart( part.part, part.totalCount );\n+            indicator.startPart(part.part, part.totalCount);\n         }\n     }\n \n-    synchronized void complete( ProgressListener.MultiPartProgressListener part )\n+    synchronized void complete(ProgressListener.MultiPartProgressListener part)\n     {\n-        if ( states.remove( part ) != null )\n+        if (states.remove(part) != null)\n         {\n-            indicator.completePart( part.part );\n-            if ( states.isEmpty() )\n+            indicator.completePart(part.part);\n+            if (states.isEmpty())\n             {\n                 indicator.completeProcess();\n                 updateRemaining();\n@@ -112,14 +113,14 @@ final class Aggregator\n         }\n     }\n \n-    synchronized void signalFailure( Throwable e )\n+    synchronized void signalFailure(Throwable e)\n     {\n-        indicator.failure( e );\n+        indicator.failure(e);\n     }\n \n     void done()\n     {\n-        states.keySet().forEach( ProgressListener::done );\n+        states.keySet().forEach(ProgressListener::done);\n     }\n \n     enum State\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
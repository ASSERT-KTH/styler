{
    "project_name": "graphfoundation-ongdb",
    "error_id": "618",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "82",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/618/RebuildFromLogs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/618/RebuildFromLogs.java\nindex 1672601c3ff..35a1b8fea82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/618/RebuildFromLogs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/618/RebuildFromLogs.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.rebuild;\n \n import java.io.File;\n@@ -74,211 +75,210 @@ import static org.neo4j.storageengine.api.TransactionApplicationMode.EXTERNAL;\n  */\n class RebuildFromLogs\n {\n-    private static final String UP_TO_TX_ID = \"tx\";\n+  private static final String UP_TO_TX_ID = \"tx\";\n \n-    private final FileSystemAbstraction fs;\n+  private final FileSystemAbstraction fs;\n+\n+  RebuildFromLogs(FileSystemAbstraction fs)\n+  {\n+    this.fs = fs;\n+  }\n \n-    RebuildFromLogs( FileSystemAbstraction fs )\n+  public static void main(String[] args) throws Exception, InconsistentStoreException\n+  {\n+    if (args == null)\n     {\n-        this.fs = fs;\n+      printUsage();\n+      return;\n     }\n-\n-    public static void main( String[] args ) throws Exception, InconsistentStoreException\n+    Args params = Args.parse(args);\n+    @SuppressWarnings(\"boxing\")\n+    long txId = params.getNumber(UP_TO_TX_ID, BASE_TX_ID).longValue();\n+    List<String> orphans = params.orphans();\n+    args = orphans.toArray(new String[orphans.size()]);\n+    if (args.length != 2)\n     {\n-        if ( args == null )\n-        {\n-            printUsage();\n-            return;\n-        }\n-        Args params = Args.parse( args );\n-        @SuppressWarnings( \"boxing\" )\n-        long txId = params.getNumber( UP_TO_TX_ID, BASE_TX_ID ).longValue();\n-        List<String> orphans = params.orphans();\n-        args = orphans.toArray( new String[orphans.size()] );\n-        if ( args.length != 2 )\n-        {\n-            printUsage( \"Exactly two positional arguments expected: \" +\n-                        \"<source dir with logs> <target dir for graphdb>, got \" + args.length );\n-            System.exit( -1 );\n-            return;\n-        }\n-        File source = new File( args[0] );\n-        File target = new File( args[1] );\n-        if ( !source.isDirectory() )\n-        {\n-            printUsage( source + \" is not a directory\" );\n-            System.exit( -1 );\n-            return;\n-        }\n-        if ( target.exists() )\n-        {\n-            if ( target.isDirectory() )\n-            {\n-                if ( directoryContainsDb( target.toPath() ) )\n-                {\n-                    printUsage( \"target graph database already exists\" );\n-                    System.exit( -1 );\n-                    return;\n-                }\n-                System.err.println( \"WARNING: the directory \" + target + \" already exists\" );\n-            }\n-            else\n-            {\n-                printUsage( target + \" is a file\" );\n-                System.exit( -1 );\n-                return;\n-            }\n-        }\n-\n-        try ( FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction() )\n+      printUsage(\"Exactly two positional arguments expected: \" +\n+          \"<source dir with logs> <target dir for graphdb>, got \" + args.length);\n+      System.exit(-1);\n+      return;\n+    }\n+    File source = new File(args[0]);\n+    File target = new File(args[1]);\n+    if (!source.isDirectory())\n+    {\n+      printUsage(source + \" is not a directory\");\n+      System.exit(-1);\n+      return;\n+    }\n+    if (target.exists())\n+    {\n+      if (target.isDirectory())\n+      {\n+        if (directoryContainsDb(target.toPath()))\n         {\n-            new RebuildFromLogs( fileSystem ).rebuild( source, target, txId );\n+          printUsage(\"target graph database already exists\");\n+          System.exit(-1);\n+          return;\n         }\n+        System.err.println(\"WARNING: the directory \" + target + \" already exists\");\n+      } else\n+      {\n+        printUsage(target + \" is a file\");\n+        System.exit(-1);\n+        return;\n+      }\n     }\n \n-    private static boolean directoryContainsDb( Path path )\n+    try (FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction())\n     {\n-        return Files.exists( path.resolve( MetaDataStore.DEFAULT_NAME ) );\n+      new RebuildFromLogs(fileSystem).rebuild(source, target, txId);\n     }\n+  }\n+\n+  private static boolean directoryContainsDb(Path path)\n+  {\n+    return Files.exists(path.resolve(MetaDataStore.DEFAULT_NAME));\n+  }\n \n-    public void rebuild( File source, File target, long txId ) throws Exception, InconsistentStoreException\n+  public void rebuild(File source, File target, long txId) throws Exception, InconsistentStoreException\n+  {\n+    try (PageCache pageCache = StandalonePageCacheFactory.createPageCache(fs))\n     {\n-        try ( PageCache pageCache = StandalonePageCacheFactory.createPageCache( fs ) )\n-        {\n-            LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( source, fs ).build();\n-            long highestVersion = logFiles.getHighestLogVersion();\n-            if ( highestVersion < 0 )\n-            {\n-                printUsage( \"Inconsistent number of log files found in \" + source );\n-                return;\n-            }\n+      LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder(source, fs).build();\n+      long highestVersion = logFiles.getHighestLogVersion();\n+      if (highestVersion < 0)\n+      {\n+        printUsage(\"Inconsistent number of log files found in \" + source);\n+        return;\n+      }\n \n-            long lastTxId;\n-            try ( TransactionApplier applier = new TransactionApplier( fs, target, pageCache ) )\n-            {\n-                lastTxId = applier.applyTransactionsFrom( source, txId );\n-            }\n+      long lastTxId;\n+      try (TransactionApplier applier = new TransactionApplier(fs, target, pageCache))\n+      {\n+        lastTxId = applier.applyTransactionsFrom(source, txId);\n+      }\n \n-            // set last tx id in neostore otherwise the db is not usable\n-            MetaDataStore.setRecord( pageCache, new File( target, MetaDataStore.DEFAULT_NAME ),\n-                    MetaDataStore.Position.LAST_TRANSACTION_ID, lastTxId );\n+      // set last tx id in neostore otherwise the db is not usable\n+      MetaDataStore.setRecord(pageCache, new File(target, MetaDataStore.DEFAULT_NAME),\n+          MetaDataStore.Position.LAST_TRANSACTION_ID, lastTxId);\n \n-            checkConsistency( target, pageCache );\n-        }\n+      checkConsistency(target, pageCache);\n     }\n+  }\n \n-    void checkConsistency( File target, PageCache pageCache ) throws Exception, InconsistentStoreException\n+  void checkConsistency(File target, PageCache pageCache) throws Exception, InconsistentStoreException\n+  {\n+    try (ConsistencyChecker checker = new ConsistencyChecker(target, pageCache))\n     {\n-        try ( ConsistencyChecker checker = new ConsistencyChecker( target, pageCache ) )\n-        {\n-            checker.checkConsistency();\n-        }\n+      checker.checkConsistency();\n     }\n+  }\n \n-    private static void printUsage( String... msgLines )\n+  private static void printUsage(String... msgLines)\n+  {\n+    for (String line : msgLines)\n     {\n-        for ( String line : msgLines )\n-        {\n-            System.err.println( line );\n-        }\n-        System.err.println( Args.jarUsage( RebuildFromLogs.class,\n-                \"[-full] <source dir with logs> <target dir for graphdb>\" ) );\n-        System.err.println( \"WHERE:   <source dir>  is the path for where transactions to rebuild from are stored\" );\n-        System.err.println( \"         <target dir>  is the path for where to create the new graph database\" );\n-        System.err.println( \"         -tx       --  to rebuild the store up to a given transaction\" );\n+      System.err.println(line);\n     }\n+    System.err.println(Args.jarUsage(RebuildFromLogs.class,\n+        \"[-full] <source dir with logs> <target dir for graphdb>\"));\n+    System.err.println(\"WHERE:   <source dir>  is the path for where transactions to rebuild from are stored\");\n+    System.err.println(\"         <target dir>  is the path for where to create the new graph database\");\n+    System.err.println(\"         -tx       --  to rebuild the store up to a given transaction\");\n+  }\n \n-    private static class TransactionApplier implements AutoCloseable\n-    {\n-        private final GraphDatabaseAPI graphdb;\n-        private final FileSystemAbstraction fs;\n-        private final TransactionCommitProcess commitProcess;\n-\n-        TransactionApplier( FileSystemAbstraction fs, File dbDirectory, PageCache pageCache )\n-        {\n-            this.fs = fs;\n-            this.graphdb = startTemporaryDb( dbDirectory.getAbsoluteFile(), pageCache );\n-            this.commitProcess = graphdb.getDependencyResolver().resolveDependency( TransactionCommitProcess.class );\n-        }\n+  private static class TransactionApplier implements AutoCloseable\n+  {\n+    private final GraphDatabaseAPI graphdb;\n+    private final FileSystemAbstraction fs;\n+    private final TransactionCommitProcess commitProcess;\n \n-        long applyTransactionsFrom( File sourceDir, long upToTxId ) throws Exception\n-        {\n-            LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( sourceDir, fs ).build();\n-            int startVersion = 0;\n-            ReaderLogVersionBridge versionBridge = new ReaderLogVersionBridge( logFiles );\n-            PhysicalLogVersionedStoreChannel startingChannel = logFiles.openForVersion( startVersion );\n-            ReadableLogChannel channel = new ReadAheadLogChannel( startingChannel, versionBridge );\n-            long txId = BASE_TX_ID;\n-            TransactionQueue queue = new TransactionQueue( 10_000,\n-                    ( tx, last ) -> commitProcess.commit( tx, NULL, EXTERNAL ) );\n-            LogEntryReader<ReadableClosablePositionAwareChannel> entryReader = new VersionAwareLogEntryReader<>();\n-            try ( IOCursor<CommittedTransactionRepresentation> cursor =\n-                    new PhysicalTransactionCursor<>( channel, entryReader ) )\n-            {\n-                while ( cursor.next() )\n-                {\n-                    txId = cursor.get().getCommitEntry().getTxId();\n-                    TransactionRepresentation transaction = cursor.get().getTransactionRepresentation();\n-                    queue.queue( new TransactionToApply( transaction, txId ) );\n-                    if ( upToTxId != BASE_TX_ID && upToTxId == txId )\n-                    {\n-                        break;\n-                    }\n-                }\n-            }\n-            queue.empty();\n-            return txId;\n-        }\n+    TransactionApplier(FileSystemAbstraction fs, File dbDirectory, PageCache pageCache)\n+    {\n+      this.fs = fs;\n+      this.graphdb = startTemporaryDb(dbDirectory.getAbsoluteFile(), pageCache);\n+      this.commitProcess = graphdb.getDependencyResolver().resolveDependency(TransactionCommitProcess.class);\n+    }\n \n-        @Override\n-        public void close()\n+    long applyTransactionsFrom(File sourceDir, long upToTxId) throws Exception\n+    {\n+      LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder(sourceDir, fs).build();\n+      int startVersion = 0;\n+      ReaderLogVersionBridge versionBridge = new ReaderLogVersionBridge(logFiles);\n+      PhysicalLogVersionedStoreChannel startingChannel = logFiles.openForVersion(startVersion);\n+      ReadableLogChannel channel = new ReadAheadLogChannel(startingChannel, versionBridge);\n+      long txId = BASE_TX_ID;\n+      TransactionQueue queue = new TransactionQueue(10_000,\n+          (tx, last) -> commitProcess.commit(tx, NULL, EXTERNAL));\n+      LogEntryReader<ReadableClosablePositionAwareChannel> entryReader = new VersionAwareLogEntryReader<>();\n+      try (IOCursor<CommittedTransactionRepresentation> cursor =\n+               new PhysicalTransactionCursor<>(channel, entryReader))\n+      {\n+        while (cursor.next())\n         {\n-            graphdb.shutdown();\n+          txId = cursor.get().getCommitEntry().getTxId();\n+          TransactionRepresentation transaction = cursor.get().getTransactionRepresentation();\n+          queue.queue(new TransactionToApply(transaction, txId));\n+          if (upToTxId != BASE_TX_ID && upToTxId == txId)\n+          {\n+            break;\n+          }\n         }\n+      }\n+      queue.empty();\n+      return txId;\n     }\n \n-    private static class ConsistencyChecker implements AutoCloseable\n+    @Override\n+    public void close()\n     {\n-        private final GraphDatabaseAPI graphdb;\n-        private final LabelScanStore labelScanStore;\n-        private final Config tuningConfiguration = Config.defaults();\n-        private final IndexProviderMap indexes;\n+      graphdb.shutdown();\n+    }\n+  }\n \n-        ConsistencyChecker( File dbDirectory, PageCache pageCache )\n-        {\n-            this.graphdb = startTemporaryDb( dbDirectory.getAbsoluteFile(), pageCache );\n-            DependencyResolver resolver = graphdb.getDependencyResolver();\n-            this.labelScanStore = resolver.resolveDependency( LabelScanStore.class );\n-            this.indexes = resolver.resolveDependency( IndexProviderMap.class );\n-        }\n+  private static class ConsistencyChecker implements AutoCloseable\n+  {\n+    private final GraphDatabaseAPI graphdb;\n+    private final LabelScanStore labelScanStore;\n+    private final Config tuningConfiguration = Config.defaults();\n+    private final IndexProviderMap indexes;\n \n-        private void checkConsistency() throws ConsistencyCheckIncompleteException, InconsistentStoreException\n-        {\n-            StoreAccess nativeStores = new StoreAccess( graphdb.getDependencyResolver()\n-                    .resolveDependency( RecordStorageEngine.class ).testAccessNeoStores() ).initialize();\n-            DirectStoreAccess stores = new DirectStoreAccess( nativeStores, labelScanStore, indexes );\n-            FullCheck fullCheck = new FullCheck( tuningConfiguration, ProgressMonitorFactory.textual( System.err ),\n-                    Statistics.NONE, ConsistencyCheckService.defaultConsistencyCheckThreadsNumber() );\n+    ConsistencyChecker(File dbDirectory, PageCache pageCache)\n+    {\n+      this.graphdb = startTemporaryDb(dbDirectory.getAbsoluteFile(), pageCache);\n+      DependencyResolver resolver = graphdb.getDependencyResolver();\n+      this.labelScanStore = resolver.resolveDependency(LabelScanStore.class);\n+      this.indexes = resolver.resolveDependency(IndexProviderMap.class);\n+    }\n \n-            ConsistencySummaryStatistics summaryStatistics =\n-                    fullCheck.execute( stores, FormattedLog.toOutputStream( System.err ) );\n-            if ( !summaryStatistics.isConsistent() )\n-            {\n-                throw new InconsistentStoreException( summaryStatistics );\n-            }\n+    private void checkConsistency() throws ConsistencyCheckIncompleteException, InconsistentStoreException\n+    {\n+      StoreAccess nativeStores = new StoreAccess(graphdb.getDependencyResolver()\n+          .resolveDependency(RecordStorageEngine.class).testAccessNeoStores()).initialize();\n+      DirectStoreAccess stores = new DirectStoreAccess(nativeStores, labelScanStore, indexes);\n+      FullCheck fullCheck = new FullCheck(tuningConfiguration, ProgressMonitorFactory.textual(System.err),\n+          Statistics.NONE, ConsistencyCheckService.defaultConsistencyCheckThreadsNumber());\n \n-        }\n+      ConsistencySummaryStatistics summaryStatistics =\n+          fullCheck.execute(stores, FormattedLog.toOutputStream(System.err));\n+      if (!summaryStatistics.isConsistent())\n+      {\n+        throw new InconsistentStoreException(summaryStatistics);\n+      }\n \n-        @Override\n-        public void close()\n-        {\n-            graphdb.shutdown();\n-        }\n     }\n \n-    static GraphDatabaseAPI startTemporaryDb( File targetDirectory, PageCache pageCache )\n+    @Override\n+    public void close()\n     {\n-        GraphDatabaseFactory factory = ExternallyManagedPageCache.graphDatabaseFactoryWithPageCache( pageCache );\n-        return (GraphDatabaseAPI) factory.newEmbeddedDatabaseBuilder( targetDirectory ).newGraphDatabase();\n+      graphdb.shutdown();\n     }\n+  }\n+\n+  static GraphDatabaseAPI startTemporaryDb(File targetDirectory, PageCache pageCache)\n+  {\n+    GraphDatabaseFactory factory = ExternallyManagedPageCache.graphDatabaseFactoryWithPageCache(pageCache);\n+    return (GraphDatabaseAPI) factory.newEmbeddedDatabaseBuilder(targetDirectory).newGraphDatabase();\n+  }\n }\n",
            "diff_size": 246
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "256",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/618/RebuildFromLogs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/618/RebuildFromLogs.java\nindex 1672601c3ff..9aebf9f4286 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/618/RebuildFromLogs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/618/RebuildFromLogs.java\n@@ -75,8 +75,7 @@ import static org.neo4j.storageengine.api.TransactionApplicationMode.EXTERNAL;\n class RebuildFromLogs\n {\n     private static final String UP_TO_TX_ID = \"tx\";\n-\n-    private final FileSystemAbstraction fs;\n+private final FileSystemAbstraction fs;\n \n     RebuildFromLogs( FileSystemAbstraction fs )\n     {\n@@ -90,19 +89,20 @@ class RebuildFromLogs\n             printUsage();\n             return;\n         }\n-        Args params = Args.parse( args );\n+\n+Args params = Args.parse( args );\n         @SuppressWarnings( \"boxing\" )\n         long txId = params.getNumber( UP_TO_TX_ID, BASE_TX_ID ).longValue();\n         List<String> orphans = params.orphans();\n         args = orphans.toArray( new String[orphans.size()] );\n         if ( args.length != 2 )\n         {\n-            printUsage( \"Exactly two positional arguments expected: \" +\n-                        \"<source dir with logs> <target dir for graphdb>, got \" + args.length );\n-            System.exit( -1 );\n+            printUsage( \"Exactly two positional arguments expected: \" + \"<source dir with logs> <target dir for graphdb>, got \" + args.length );\n+System.exit( -1 );\n             return;\n         }\n-        File source = new File( args[0] );\n+\n+File source = new File( args[0] );\n         File target = new File( args[1] );\n         if ( !source.isDirectory() )\n         {\n@@ -110,7 +110,8 @@ class RebuildFromLogs\n             System.exit( -1 );\n             return;\n         }\n-        if ( target.exists() )\n+\n+if ( target.exists() )\n         {\n             if ( target.isDirectory() )\n             {\n@@ -160,10 +161,8 @@ class RebuildFromLogs\n             }\n \n             // set last tx id in neostore otherwise the db is not usable\n-            MetaDataStore.setRecord( pageCache, new File( target, MetaDataStore.DEFAULT_NAME ),\n-                    MetaDataStore.Position.LAST_TRANSACTION_ID, lastTxId );\n-\n-            checkConsistency( target, pageCache );\n+            MetaDataStore.setRecord( pageCache, new File( target, MetaDataStore.DEFAULT_NAME ), MetaDataStore.Position.LAST_TRANSACTION_ID, lastTxId );\n+checkConsistency( target, pageCache );\n         }\n     }\n \n@@ -181,9 +180,8 @@ class RebuildFromLogs\n         {\n             System.err.println( line );\n         }\n-        System.err.println( Args.jarUsage( RebuildFromLogs.class,\n-                \"[-full] <source dir with logs> <target dir for graphdb>\" ) );\n-        System.err.println( \"WHERE:   <source dir>  is the path for where transactions to rebuild from are stored\" );\n+        System.err.println( Args.jarUsage( RebuildFromLogs.class, \"[-full] <source dir with logs> <target dir for graphdb>\" ) );\n+System.err.println( \"WHERE:   <source dir>  is the path for where transactions to rebuild from are stored\" );\n         System.err.println( \"         <target dir>  is the path for where to create the new graph database\" );\n         System.err.println( \"         -tx       --  to rebuild the store up to a given transaction\" );\n     }\n@@ -211,9 +209,8 @@ class RebuildFromLogs\n             long txId = BASE_TX_ID;\n             TransactionQueue queue = new TransactionQueue( 10_000,\n                     ( tx, last ) -> commitProcess.commit( tx, NULL, EXTERNAL ) );\n-            LogEntryReader<ReadableClosablePositionAwareChannel> entryReader = new VersionAwareLogEntryReader<>();\n-            try ( IOCursor<CommittedTransactionRepresentation> cursor =\n-                    new PhysicalTransactionCursor<>( channel, entryReader ) )\n+LogEntryReader<ReadableClosablePositionAwareChannel> entryReader = new VersionAwareLogEntryReader<>();\n+            try ( IOCursor<CommittedTransactionRepresentation> cursor = new PhysicalTransactionCursor<>( channel, entryReader ) )\n             {\n                 while ( cursor.next() )\n                 {\n@@ -254,20 +251,15 @@ class RebuildFromLogs\n \n         private void checkConsistency() throws ConsistencyCheckIncompleteException, InconsistentStoreException\n         {\n-            StoreAccess nativeStores = new StoreAccess( graphdb.getDependencyResolver()\n-                    .resolveDependency( RecordStorageEngine.class ).testAccessNeoStores() ).initialize();\n-            DirectStoreAccess stores = new DirectStoreAccess( nativeStores, labelScanStore, indexes );\n-            FullCheck fullCheck = new FullCheck( tuningConfiguration, ProgressMonitorFactory.textual( System.err ),\n-                    Statistics.NONE, ConsistencyCheckService.defaultConsistencyCheckThreadsNumber() );\n-\n-            ConsistencySummaryStatistics summaryStatistics =\n-                    fullCheck.execute( stores, FormattedLog.toOutputStream( System.err ) );\n-            if ( !summaryStatistics.isConsistent() )\n+            StoreAccess nativeStores = new StoreAccess( graphdb.getDependencyResolver().resolveDependency( RecordStorageEngine.class ).testAccessNeoStores() ).initialize();\n+DirectStoreAccess stores = new DirectStoreAccess( nativeStores, labelScanStore, indexes );\n+            FullCheck fullCheck = new FullCheck( tuningConfiguration, ProgressMonitorFactory.textual( System.err ), Statistics.NONE, ConsistencyCheckService.defaultConsistencyCheckThreadsNumber() );\n+ConsistencySummaryStatistics summaryStatistics = fullCheck.execute( stores, FormattedLog.toOutputStream( System.err ) );\n+if ( !summaryStatistics.isConsistent() )\n             {\n                 throw new InconsistentStoreException( summaryStatistics );\n             }\n-\n-        }\n+    }\n \n         @Override\n         public void close()\n@@ -281,4 +273,4 @@ class RebuildFromLogs\n         GraphDatabaseFactory factory = ExternallyManagedPageCache.graphDatabaseFactoryWithPageCache( pageCache );\n         return (GraphDatabaseAPI) factory.newEmbeddedDatabaseBuilder( targetDirectory ).newGraphDatabase();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
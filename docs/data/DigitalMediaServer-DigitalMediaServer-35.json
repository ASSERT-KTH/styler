{
    "project_name": "DigitalMediaServer-DigitalMediaServer",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "warning",
                "message": "Line is longer than 140 characters (found 154).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n\t@Override\n\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n\n\t\tTreePath path = tree.getPathForRow(row);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/styler/35/CheckTreeCellRenderer.java\nindex b2de43621e4..2e5ec79aac2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/styler/35/CheckTreeCellRenderer.java\n@@ -22,8 +22,9 @@ public class CheckTreeCellRenderer extends JPanel implements TreeCellRenderer {\n \t}\n \n \t@Override\n-\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n-\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected,\n+\tboolean expanded, boolean leaf, int row, boolean hasFocus) {\n+\t\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n \n \t\tTreePath path = tree.getPathForRow(row);\n \t\tif (path != null) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/intellij/35/CheckTreeCellRenderer.java\nindex b2de43621e4..555e76af97b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/intellij/35/CheckTreeCellRenderer.java\n@@ -8,34 +8,35 @@ import javax.swing.tree.TreeCellRenderer;\n import javax.swing.tree.TreePath;\n \n public class CheckTreeCellRenderer extends JPanel implements TreeCellRenderer {\n-\tprivate static final long serialVersionUID = 5762499761493341720L;\n-\tprivate CheckTreeSelectionModel selectionModel;\n-\tprivate TreeCellRenderer delegate;\n-\tprivate TristateCheckBox checkBox = new TristateCheckBox();\n+    private static final long serialVersionUID = 5762499761493341720L;\n+    private CheckTreeSelectionModel selectionModel;\n+    private TreeCellRenderer delegate;\n+    private TristateCheckBox checkBox = new TristateCheckBox();\n \n-\tpublic CheckTreeCellRenderer(TreeCellRenderer delegate, CheckTreeSelectionModel selectionModel) {\n-\t\tthis.delegate = delegate;\n-\t\tthis.selectionModel = selectionModel;\n-\t\tsetLayout(new BorderLayout());\n-\t\tsetOpaque(false);\n-\t\tcheckBox.setOpaque(false);\n-\t}\n+    public CheckTreeCellRenderer(TreeCellRenderer delegate, CheckTreeSelectionModel selectionModel) {\n+        this.delegate = delegate;\n+        this.selectionModel = selectionModel;\n+        setLayout(new BorderLayout());\n+        setOpaque(false);\n+        checkBox.setOpaque(false);\n+    }\n \n-\t@Override\n-\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n-\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+    @Override\n+    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row,\n+                                                  boolean hasFocus) {\n+        Component renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n \n-\t\tTreePath path = tree.getPathForRow(row);\n-\t\tif (path != null) {\n-\t\t\tif (selectionModel.isPathSelected(path, true)) {\n-\t\t\t\tcheckBox.setState(TristateCheckBox.SELECTED);\n-\t\t\t} else {\n-\t\t\t\tcheckBox.setState(selectionModel.isPartiallySelected(path) ? null : TristateCheckBox.NOT_SELECTED);\n-\t\t\t}\n-\t\t}\n-\t\tremoveAll();\n-\t\tadd(checkBox, BorderLayout.WEST);\n-\t\tadd(renderer, BorderLayout.CENTER);\n-\t\treturn this;\n-\t}\n+        TreePath path = tree.getPathForRow(row);\n+        if (path != null) {\n+            if (selectionModel.isPathSelected(path, true)) {\n+                checkBox.setState(TristateCheckBox.SELECTED);\n+            } else {\n+                checkBox.setState(selectionModel.isPartiallySelected(path) ? null : TristateCheckBox.NOT_SELECTED);\n+            }\n+        }\n+        removeAll();\n+        add(checkBox, BorderLayout.WEST);\n+        add(renderer, BorderLayout.CENTER);\n+        return this;\n+    }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/naturalize/35/CheckTreeCellRenderer.java\nindex b2de43621e4..30fd57b84d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/naturalize/35/CheckTreeCellRenderer.java\n@@ -38,4 +38,4 @@ public class CheckTreeCellRenderer extends JPanel implements TreeCellRenderer {\n \t\tadd(renderer, BorderLayout.CENTER);\n \t\treturn this;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/codebuff/35/CheckTreeCellRenderer.java\nindex b2de43621e4..e5524f59f0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/codebuff/35/CheckTreeCellRenderer.java\n@@ -7,35 +7,43 @@ import javax.swing.JTree;\n import javax.swing.tree.TreeCellRenderer;\n import javax.swing.tree.TreePath;\n \n+\n public class CheckTreeCellRenderer extends JPanel implements TreeCellRenderer {\n-\tprivate static final long serialVersionUID = 5762499761493341720L;\n-\tprivate CheckTreeSelectionModel selectionModel;\n-\tprivate TreeCellRenderer delegate;\n-\tprivate TristateCheckBox checkBox = new TristateCheckBox();\n \n-\tpublic CheckTreeCellRenderer(TreeCellRenderer delegate, CheckTreeSelectionModel selectionModel) {\n-\t\tthis.delegate = delegate;\n-\t\tthis.selectionModel = selectionModel;\n-\t\tsetLayout(new BorderLayout());\n-\t\tsetOpaque(false);\n-\t\tcheckBox.setOpaque(false);\n-\t}\n+ private static final long serialVersionUID = 5762499761493341720L;\n+ private CheckTreeSelectionModel selectionModel;\n+ private TreeCellRenderer delegate;\n+ private TristateCheckBox checkBox = new TristateCheckBox();\n \n-\t@Override\n-\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n-\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+ public CheckTreeCellRenderer(TreeCellRenderer delegate, CheckTreeSelectionModel selectionModel) {\n+  this.delegate = delegate;\n+  this.selectionModel = selectionModel;\n+  setLayout(new BorderLayout());\n+  setOpaque(false);\n+  checkBox.setOpaque(false);\n+ }\n \n-\t\tTreePath path = tree.getPathForRow(row);\n-\t\tif (path != null) {\n-\t\t\tif (selectionModel.isPathSelected(path, true)) {\n-\t\t\t\tcheckBox.setState(TristateCheckBox.SELECTED);\n-\t\t\t} else {\n-\t\t\t\tcheckBox.setState(selectionModel.isPartiallySelected(path) ? null : TristateCheckBox.NOT_SELECTED);\n-\t\t\t}\n-\t\t}\n-\t\tremoveAll();\n-\t\tadd(checkBox, BorderLayout.WEST);\n-\t\tadd(renderer, BorderLayout.CENTER);\n-\t\treturn this;\n-\t}\n-}\n+ @Override\n+ public Component getTreeCellRendererComponent(\n+  JTree tree,\n+  Object value,\n+  boolean selected,\n+  boolean expanded,\n+  boolean leaf,\n+  int row, boolean hasFocus\n+ ) {\n+  Component renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+  TreePath path = tree.getPathForRow(row);\n+  if (path != null) {\n+   if (selectionModel.isPathSelected(path, true)) {\n+    checkBox.setState(TristateCheckBox.SELECTED);\n+   } else {\n+    checkBox.setState(selectionModel.isPartiallySelected(path) ? null : TristateCheckBox.NOT_SELECTED);\n+   }\n+  }\n+  removeAll();\n+  add(checkBox, BorderLayout.WEST);\n+  add(renderer, BorderLayout.CENTER);\n+  return this;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/styler_random/35/CheckTreeCellRenderer.java\nindex b2de43621e4..2e5ec79aac2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/styler_random/35/CheckTreeCellRenderer.java\n@@ -22,8 +22,9 @@ public class CheckTreeCellRenderer extends JPanel implements TreeCellRenderer {\n \t}\n \n \t@Override\n-\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n-\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected,\n+\tboolean expanded, boolean leaf, int row, boolean hasFocus) {\n+\t\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n \n \t\tTreePath path = tree.getPathForRow(row);\n \t\tif (path != null) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 276).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "25",
                    "column": "154",
                    "severity": "warning",
                    "message": "'{' at column 151 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/styler_three_grams/35/CheckTreeCellRenderer.java\nindex b2de43621e4..20c1c761ef2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/35/CheckTreeCellRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/styler_three_grams/35/CheckTreeCellRenderer.java\n@@ -22,8 +22,7 @@ public class CheckTreeCellRenderer extends JPanel implements TreeCellRenderer {\n \t}\n \n \t@Override\n-\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n-\t\tComponent renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+\tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) { Componentrenderer renderer = delegate.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n \n \t\tTreePath path = tree.getPathForRow(row);\n \t\tif (path != null) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
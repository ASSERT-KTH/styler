{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "694",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyRequestType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/694/PolicyEngineProxyNoOpImpl.java\nindex a3adff5e366..5e469a5404e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/694/PolicyEngineProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/694/PolicyEngineProxyNoOpImpl.java\nindex a3adff5e366..62b7e542146 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/694/PolicyEngineProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -36,22 +37,21 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author Jon Hoppesch\n  */\n public class PolicyEngineProxyNoOpImpl implements PolicyEngineProxy {\n-    private static final Logger LOG = LoggerFactory.getLogger(PolicyEngineProxyNoOpImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(PolicyEngineProxyNoOpImpl.class);\n \n-    @Override\n-    public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n-        LOG.trace(\"Begin PolicyEngineNoOpImpl.checkPolicy\");\n-        CheckPolicyResponseType checkPolicyResponse = new CheckPolicyResponseType();\n-        ResponseType response = new ResponseType();\n-        ResultType result = new ResultType();\n-        result.setDecision(DecisionType.PERMIT);\n-        response.getResult().add(result);\n-        checkPolicyResponse.setResponse(response);\n-        LOG.trace(\"End PolicyEngineNoOpImpl.checkPolicy\");\n-        return checkPolicyResponse;\n-    }\n+  @Override\n+  public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n+    LOG.trace(\"Begin PolicyEngineNoOpImpl.checkPolicy\");\n+    CheckPolicyResponseType checkPolicyResponse = new CheckPolicyResponseType();\n+    ResponseType response = new ResponseType();\n+    ResultType result = new ResultType();\n+    result.setDecision(DecisionType.PERMIT);\n+    response.getResult().add(result);\n+    checkPolicyResponse.setResponse(response);\n+    LOG.trace(\"End PolicyEngineNoOpImpl.checkPolicy\");\n+    return checkPolicyResponse;\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/694/PolicyEngineProxyNoOpImpl.java\nindex a3adff5e366..9f47a389a56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/694/PolicyEngineProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -52,6 +53,7 @@ public class PolicyEngineProxyNoOpImpl implements PolicyEngineProxy {\n         response.getResult().add(result);\n         checkPolicyResponse.setResponse(response);\n         LOG.trace(\"End PolicyEngineNoOpImpl.checkPolicy\");\n-        return checkPolicyResponse;\n+\n+return checkPolicyResponse;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/694/PolicyEngineProxyNoOpImpl.java\nindex a3adff5e366..809e2b72ed6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/694/PolicyEngineProxyNoOpImpl.java\n@@ -39,9 +39,13 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Jon Hoppesch\n  */\n+\n+\n public class PolicyEngineProxyNoOpImpl implements PolicyEngineProxy {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(PolicyEngineProxyNoOpImpl.class);\n \n+\n     @Override\n     public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n         LOG.trace(\"Begin PolicyEngineNoOpImpl.checkPolicy\");\n@@ -54,4 +58,5 @@ public class PolicyEngineProxyNoOpImpl implements PolicyEngineProxy {\n         LOG.trace(\"End PolicyEngineNoOpImpl.checkPolicy\");\n         return checkPolicyResponse;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/694/PolicyEngineProxyNoOpImpl.java\nindex a3adff5e366..0d80cd339f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/694/PolicyEngineProxyNoOpImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n-\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyRequestType;\n import gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyResponseType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/694/PolicyEngineProxyNoOpImpl.java\nindex a3adff5e366..5e469a5404e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/694/PolicyEngineProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/694/PolicyEngineProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
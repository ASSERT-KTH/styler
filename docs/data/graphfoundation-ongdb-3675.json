{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3675",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "11",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3675/StringEncoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3675/StringEncoder.java\nindex b95e44f162e..2f16b346fdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3675/StringEncoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3675/StringEncoder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache.idmapping.string;\n \n import java.util.Arrays;\n@@ -26,156 +27,151 @@ import static java.lang.Math.max;\n /**\n  * Encodes String into a long with very small chance of collision, i.e. two different Strings encoded into\n  * the same long value.\n- *\n+ * <p>\n  * Assumes a single thread making all calls to {@link #encode(Object)}.\n  */\n public class StringEncoder implements Encoder\n {\n-    private static long UPPER_INT_MASK = 0x00000000_FFFFFFFFL;\n-    private static final int FOURTH_BYTE = 0x000000FF;\n+  private static long UPPER_INT_MASK = 0x00000000_FFFFFFFFL;\n+  private static final int FOURTH_BYTE = 0x000000FF;\n+\n+  // fixed values\n+  private final int numCodes;\n+  private static final int encodingThreshold = 7;\n \n-    // fixed values\n-    private final int numCodes;\n-    private static final int encodingThreshold = 7;\n+  // data changing over time, potentially with each encoding\n+  private final byte[] reMap = new byte[256];\n+  private int numChars;\n \n-    // data changing over time, potentially with each encoding\n-    private final byte[] reMap = new byte[256];\n-    private int numChars;\n+  public StringEncoder()\n+  {\n+    this(2);\n+  }\n \n-    public StringEncoder()\n+  public StringEncoder(int codingStrength)\n+  {\n+    numCodes = codingStrength > 2 ? codingStrength : 2;\n+    Arrays.fill(reMap, (byte) -1);\n+  }\n+\n+  @Override\n+  public long encode(Object s)\n+  {\n+    int[] val = encodeInt((String) s);\n+    return (long) val[0] << 32 | val[1] & UPPER_INT_MASK;\n+  }\n+\n+  private int[] encodeInt(String s)\n+  {\n+    // construct bytes from string\n+    int inputLength = s.length();\n+    byte[] bytes = new byte[inputLength];\n+    for (int i = 0; i < inputLength; i++)\n     {\n-        this( 2 );\n+      bytes[i] = (byte) ((s.charAt(i)) % 127);\n     }\n-\n-    public StringEncoder( int codingStrength )\n+    reMap(bytes, inputLength);\n+    // encode\n+    if (inputLength <= encodingThreshold)\n     {\n-        numCodes = codingStrength > 2 ? codingStrength : 2;\n-        Arrays.fill( reMap, (byte)-1 );\n+      return simplestCode(bytes, inputLength);\n     }\n-\n-    @Override\n-    public long encode( Object s )\n+    int[] codes = new int[numCodes];\n+    for (int i = 0; i < numCodes; )\n     {\n-        int[] val = encodeInt( (String) s );\n-        return (long) val[0] << 32 | val[1] & UPPER_INT_MASK;\n+      codes[i] = getCode(bytes, inputLength, 1);\n+      codes[i + 1] = getCode(bytes, inputLength, inputLength - 1);\n+      i += 2;\n     }\n-\n-    private int[] encodeInt( String s )\n+    int carryOver = lengthEncoder(inputLength) << 1;\n+    int temp = 0;\n+    for (int i = 0; i < numCodes; i++)\n     {\n-        // construct bytes from string\n-        int inputLength = s.length();\n-        byte[] bytes = new byte[inputLength];\n-        for ( int i = 0; i < inputLength; i++ )\n-        {\n-            bytes[i] = (byte) ((s.charAt( i )) % 127);\n-        }\n-        reMap( bytes, inputLength );\n-        // encode\n-        if ( inputLength <= encodingThreshold )\n-        {\n-            return simplestCode( bytes, inputLength );\n-        }\n-        int[] codes = new int[numCodes];\n-        for ( int i = 0; i < numCodes; )\n-        {\n-            codes[i] = getCode( bytes, inputLength, 1 );\n-            codes[i + 1] = getCode( bytes, inputLength, inputLength - 1 );\n-            i += 2;\n-        }\n-        int carryOver = lengthEncoder( inputLength ) << 1;\n-        int temp = 0;\n-        for ( int i = 0; i < numCodes; i++ )\n-        {\n-            temp = codes[i] & FOURTH_BYTE;\n-            codes[i] = codes[i] >>> 8 | carryOver << 24;\n-            carryOver = temp;\n-        }\n-        return codes;\n+      temp = codes[i] & FOURTH_BYTE;\n+      codes[i] = codes[i] >>> 8 | carryOver << 24;\n+      carryOver = temp;\n     }\n+    return codes;\n+  }\n \n-    private int lengthEncoder( int length )\n+  private int lengthEncoder(int length)\n+  {\n+    if (length < 32)\n     {\n-        if ( length < 32 )\n-        {\n-            return length;\n-        }\n-        else if ( length <= 96 )\n-        {\n-            return length >> 1;\n-        }\n-        else if ( length <= 324 )\n-        {\n-            return length >> 2;\n-        }\n-        else if ( length <= 580 )\n-        {\n-            return length >> 3;\n-        }\n-        else if ( length <= 836 )\n-        {\n-            return length >> 4;\n-        }\n-        else\n-        {\n-            return 127;\n-        }\n+      return length;\n+    } else if (length <= 96)\n+    {\n+      return length >> 1;\n+    } else if (length <= 324)\n+    {\n+      return length >> 2;\n+    } else if (length <= 580)\n+    {\n+      return length >> 3;\n+    } else if (length <= 836)\n+    {\n+      return length >> 4;\n+    } else\n+    {\n+      return 127;\n     }\n+  }\n \n-    private void reMap( byte[] bytes, int inputLength )\n+  private void reMap(byte[] bytes, int inputLength)\n+  {\n+    for (int i = 0; i < inputLength; i++)\n     {\n-        for ( int i = 0; i < inputLength; i++ )\n+      if (reMap[bytes[i]] == -1)\n+      {\n+        synchronized (this)\n         {\n-            if ( reMap[bytes[i]] == -1 )\n-            {\n-                synchronized ( this )\n-                {\n-                    if ( reMap[bytes[i]] == -1 )\n-                    {\n-                        reMap[bytes[i]] = (byte) (numChars++ % 256);\n-                    }\n-                }\n-            }\n-            bytes[i] = reMap[bytes[i]];\n+          if (reMap[bytes[i]] == -1)\n+          {\n+            reMap[bytes[i]] = (byte) (numChars++ % 256);\n+          }\n         }\n+      }\n+      bytes[i] = reMap[bytes[i]];\n     }\n+  }\n \n-    private int[] simplestCode( byte[] bytes, int inputLength )\n+  private int[] simplestCode(byte[] bytes, int inputLength)\n+  {\n+    int[] codes = new int[] {0, 0};\n+    codes[0] = max(inputLength, 1) << 25;\n+    codes[1] = 0;\n+    for (int i = 0; i < 3 && i < inputLength; i++)\n     {\n-        int[] codes = new int[]{0, 0};\n-        codes[0] = max( inputLength, 1 ) << 25;\n-        codes[1] = 0;\n-        for ( int i = 0; i < 3 && i < inputLength; i++ )\n-        {\n-            codes[0] = codes[0] | bytes[i] << ((2 - i) * 8);\n-        }\n-        for ( int i = 3; i < 7 && i < inputLength; i++ )\n-        {\n-            codes[1] = codes[1] | (bytes[i]) << ((6 - i) * 8);\n-        }\n-        return codes;\n+      codes[0] = codes[0] | bytes[i] << ((2 - i) * 8);\n     }\n-\n-    private int getCode( byte[] bytes, int inputLength, int order )\n+    for (int i = 3; i < 7 && i < inputLength; i++)\n     {\n-        long code = 0;\n-        int size = inputLength;\n-        for ( int i = 0; i < size; i++ )\n-        {\n-            //code += (((long)bytes[(i*order) % size]) << (i % 7)*8);\n-            long val = bytes[(i * order) % size];\n-            for ( int k = 1; k <= i; k++ )\n-            {\n-                long prev = val;\n-                val = (val << 4) + prev;//% Integer.MAX_VALUE;\n-            }\n-            code += val;\n-        }\n-        return (int) code;\n+      codes[1] = codes[1] | (bytes[i]) << ((6 - i) * 8);\n     }\n+    return codes;\n+  }\n \n-    @Override\n-    public String toString()\n+  private int getCode(byte[] bytes, int inputLength, int order)\n+  {\n+    long code = 0;\n+    int size = inputLength;\n+    for (int i = 0; i < size; i++)\n     {\n-        return getClass().getSimpleName() + \"[\" + numCodes + \"]\";\n+      //code += (((long)bytes[(i*order) % size]) << (i % 7)*8);\n+      long val = bytes[(i * order) % size];\n+      for (int k = 1; k <= i; k++)\n+      {\n+        long prev = val;\n+        val = (val << 4) + prev;//% Integer.MAX_VALUE;\n+      }\n+      code += val;\n     }\n+    return (int) code;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return getClass().getSimpleName() + \"[\" + numCodes + \"]\";\n+  }\n }\n",
            "diff_size": 185
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3675/StringEncoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3675/StringEncoder.java\nindex b95e44f162e..9e71a6f8d53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3675/StringEncoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3675/StringEncoder.java\n@@ -49,7 +49,7 @@ public class StringEncoder implements Encoder\n \n     public StringEncoder( int codingStrength )\n     {\n-        numCodes = codingStrength > 2 ? codingStrength : 2;\n+        numCodes = codingStrength> 2 ? codingStrength : 2;\n         Arrays.fill( reMap, (byte)-1 );\n     }\n \n@@ -67,9 +67,10 @@ public class StringEncoder implements Encoder\n         byte[] bytes = new byte[inputLength];\n         for ( int i = 0; i < inputLength; i++ )\n         {\n-            bytes[i] = (byte) ((s.charAt( i )) % 127);\n+            bytes[i] = (byte) ((s.charAt( i )) % 127 );\n         }\n-        reMap( bytes, inputLength );\n+\n+reMap( bytes, inputLength );\n         // encode\n         if ( inputLength <= encodingThreshold )\n         {\n@@ -90,7 +91,8 @@ public class StringEncoder implements Encoder\n             codes[i] = codes[i] >>> 8 | carryOver << 24;\n             carryOver = temp;\n         }\n-        return codes;\n+\n+return codes;\n     }\n \n     private int lengthEncoder( int length )\n@@ -131,11 +133,12 @@ public class StringEncoder implements Encoder\n                 {\n                     if ( reMap[bytes[i]] == -1 )\n                     {\n-                        reMap[bytes[i]] = (byte) (numChars++ % 256);\n+                        reMap[bytes[i]] = (byte) (numChars++ % 256 );\n                     }\n                 }\n             }\n-            bytes[i] = reMap[bytes[i]];\n+\n+bytes[i] = reMap[bytes[i]];\n         }\n     }\n \n@@ -146,13 +149,14 @@ public class StringEncoder implements Encoder\n         codes[1] = 0;\n         for ( int i = 0; i < 3 && i < inputLength; i++ )\n         {\n-            codes[0] = codes[0] | bytes[i] << ((2 - i) * 8);\n+            codes[0] = codes[0] | bytes[i] << (( 2 - i) * 8 );\n         }\n         for ( int i = 3; i < 7 && i < inputLength; i++ )\n         {\n-            codes[1] = codes[1] | (bytes[i]) << ((6 - i) * 8);\n+            codes[1] = codes[1] | (bytes[i]) << (( 6 - i) * 8 );\n         }\n-        return codes;\n+\n+return codes;\n     }\n \n     private int getCode( byte[] bytes, int inputLength, int order )\n@@ -162,7 +166,7 @@ public class StringEncoder implements Encoder\n         for ( int i = 0; i < size; i++ )\n         {\n             //code += (((long)bytes[(i*order) % size]) << (i % 7)*8);\n-            long val = bytes[(i * order) % size];\n+            long val = bytes[( i * order) % size];\n             for ( int k = 1; k <= i; k++ )\n             {\n                 long prev = val;\n@@ -170,7 +174,7 @@ public class StringEncoder implements Encoder\n             }\n             code += val;\n         }\n-        return (int) code;\n+        return ( int) code;\n     }\n \n     @Override\n@@ -178,4 +182,4 @@ public class StringEncoder implements Encoder\n     {\n         return getClass().getSimpleName() + \"[\" + numCodes + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
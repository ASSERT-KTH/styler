{
    "project_name": "open-eid-digidoc4j",
    "error_id": "90",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "43",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "   */\n  public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n    logger.debug(\"File name: \" + fileName +\n        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n    try {\n      DigestDocument document = new DigestDocument();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "column": "43",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "column": "43",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/90/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/90/DigestDataFile.java\nindex d71b7670c50..8abf14a5c7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/90/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/90/DigestDataFile.java\n@@ -19,9 +19,9 @@ public class DigestDataFile extends DataFile {\n    * Creates digest based data file.\n    * In other words only the content's digest (not the content itself) is provided.\n    *\n-   * @param fileName name of the file\n+   * @param fileName        name of the file\n    * @param digestAlgorithm algorithm of the digest\n-   * @param digest digest of the file contents\n+   * @param digest          digest of the file contents\n    */\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n     logger.debug(\"File name: \" + fileName +\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/90/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/90/DigestDataFile.java\nindex d71b7670c50..c02c4ebeff9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/90/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/90/DigestDataFile.java\n@@ -24,9 +24,8 @@ public class DigestDataFile extends DataFile {\n    * @param digest digest of the file contents\n    */\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n-    try {\n+    logger.debug(\"File name: \" + fileName + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n       document.addDigest(digestAlgorithm.getDssDigestAlgorithm(), Base64.encodeBase64String(digest));\n@@ -38,8 +37,7 @@ public class DigestDataFile extends DataFile {\n     }\n   }\n \n-\n-  public String getContentType() {\n+public String getContentType() {\n     return contentType;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/90/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/90/DigestDataFile.java\nindex d71b7670c50..d0d15902663 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/90/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/90/DigestDataFile.java\n@@ -5,14 +5,13 @@ import org.apache.commons.codec.binary.Base64;\n import org.digidoc4j.exceptions.InvalidDataFileException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.Arrays;\n \n+\n public class DigestDataFile extends DataFile {\n \n   private static final Logger logger = LoggerFactory.getLogger(DigestDataFile.class);\n   private static final String HASHCODE_CONTENT_TYPE = \"HASHCODE\";\n-\n   private String contentType = null;\n \n   /**\n@@ -23,9 +22,9 @@ public class DigestDataFile extends DataFile {\n    * @param digestAlgorithm algorithm of the digest\n    * @param digest digest of the file contents\n    */\n+\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n@@ -42,4 +41,5 @@ public class DigestDataFile extends DataFile {\n   public String getContentType() {\n     return contentType;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "column": "43",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "column": "43",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
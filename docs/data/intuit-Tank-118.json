{
    "project_name": "intuit-Tank",
    "error_id": "118",
    "information": {
        "errors": [
            {
                "line": "107",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    }\n    \n\tprivate List<String> getList(String key) {\n\t\tList<String> strings;\n    \tList<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n        return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "108",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/118/InstanceDescriptionDefaults.java\nindex ce4020fd7b6..ea6b46af507 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/118/InstanceDescriptionDefaults.java\n@@ -103,8 +103,8 @@ public class InstanceDescriptionDefaults {\n     String get(String key) {\n         return config.getString(key, defaultInstance != null ? defaultInstance.getString(key) : null);\n     }\n-    \n-\tprivate List<String> getList(String key) {\n+\n+    private List<String> getList(String key) {\n \t\tList<String> strings;\n     \tList<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n         return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/118/InstanceDescriptionDefaults.java\nindex ce4020fd7b6..085499b2f80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/118/InstanceDescriptionDefaults.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.vm.settings;\n \n /*\n@@ -23,91 +24,91 @@ import org.apache.commons.configuration.HierarchicalConfiguration;\n \n /**\n  * InstanceDescription\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class InstanceDescriptionDefaults {\n \n-    private HierarchicalConfiguration config;\n-    private HierarchicalConfiguration defaultInstance;\n-\n-    public InstanceDescriptionDefaults(HierarchicalConfiguration config, HierarchicalConfiguration defaultInstance) {\n-        this.config = config;\n-        this.defaultInstance = defaultInstance;\n-    }\n-\n-    /**\n-     * @return the location\n-     */\n-    public String getLocation() {\n-        return get(\"location\");\n-    }\n-\n-    /**\n-     * @return the securityGroup\n-     */\n-    public String getSecurityGroup() {\n-        return get(\"security-group\");\n-    }\n-\n-    /**\n-     * @return the securityGroup\n-     */\n-    public List<String> getSubnetIds() {\n-        return getList(\"vpc-subnet\");\n-    }\n-    /**\n-     * @return the securityGroup\n-     */\n-    public List<String> getSecurityGroupIds() {\n-        return getList(\"security-group-ids\");\n-    }\n-    \n-    /**\n-     * @return the securityGroup\n-     */\n-    public String getIamRole() {\n-        return get(\"iam-role\");\n-    }\n-\n-    /**\n-     * @return the securityGroup\n-     */\n-    public String getZone() {\n-        return get(\"zone\");\n-    }\n-\n-    /**\n-     * @return the keypair\n-     */\n-    public String getKeypair() {\n-        return get(\"keypair\");\n-    }\n-    \n-    /**\n-     * @return the VPC\n-     */\n-    public Boolean isVPC() {\n-        return Boolean.valueOf(get(\"vpc\"));\n-    }\n-    \n-    /**\n-     * @return the VPC\n-     */\n-    public String getTenancy() {\n-        return get(\"Tenancy\");\n-    }\n-\n-\n-    String get(String key) {\n-        return config.getString(key, defaultInstance != null ? defaultInstance.getString(key) : null);\n-    }\n-    \n-\tprivate List<String> getList(String key) {\n-\t\tList<String> strings;\n-    \tList<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n-        return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n-    }\n+  private HierarchicalConfiguration config;\n+  private HierarchicalConfiguration defaultInstance;\n+\n+  public InstanceDescriptionDefaults(HierarchicalConfiguration config, HierarchicalConfiguration defaultInstance) {\n+    this.config = config;\n+    this.defaultInstance = defaultInstance;\n+  }\n+\n+  /**\n+   * @return the location\n+   */\n+  public String getLocation() {\n+    return get(\"location\");\n+  }\n+\n+  /**\n+   * @return the securityGroup\n+   */\n+  public String getSecurityGroup() {\n+    return get(\"security-group\");\n+  }\n+\n+  /**\n+   * @return the securityGroup\n+   */\n+  public List<String> getSubnetIds() {\n+    return getList(\"vpc-subnet\");\n+  }\n+\n+  /**\n+   * @return the securityGroup\n+   */\n+  public List<String> getSecurityGroupIds() {\n+    return getList(\"security-group-ids\");\n+  }\n+\n+  /**\n+   * @return the securityGroup\n+   */\n+  public String getIamRole() {\n+    return get(\"iam-role\");\n+  }\n+\n+  /**\n+   * @return the securityGroup\n+   */\n+  public String getZone() {\n+    return get(\"zone\");\n+  }\n+\n+  /**\n+   * @return the keypair\n+   */\n+  public String getKeypair() {\n+    return get(\"keypair\");\n+  }\n+\n+  /**\n+   * @return the VPC\n+   */\n+  public Boolean isVPC() {\n+    return Boolean.valueOf(get(\"vpc\"));\n+  }\n+\n+  /**\n+   * @return the VPC\n+   */\n+  public String getTenancy() {\n+    return get(\"Tenancy\");\n+  }\n+\n+\n+  String get(String key) {\n+    return config.getString(key, defaultInstance != null ? defaultInstance.getString(key) : null);\n+  }\n+\n+  private List<String> getList(String key) {\n+    List<String> strings;\n+    List<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n+    return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n+  }\n \n }\n",
            "diff_size": 84
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/118/InstanceDescriptionDefaults.java\nindex ce4020fd7b6..d6e25ca6a8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/118/InstanceDescriptionDefaults.java\n@@ -98,16 +98,14 @@ public class InstanceDescriptionDefaults {\n     public String getTenancy() {\n         return get(\"Tenancy\");\n     }\n-\n-\n-    String get(String key) {\n+String get(String key) {\n         return config.getString(key, defaultInstance != null ? defaultInstance.getString(key) : null);\n     }\n-    \n-\tprivate List<String> getList(String key) {\n-\t\tList<String> strings;\n-    \tList<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n-        return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n+\n+private List<String> getList(String key) {\n+    List<String> strings;\n+List<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n+return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/118/InstanceDescriptionDefaults.java\nindex ce4020fd7b6..577a677be70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/118/InstanceDescriptionDefaults.java\n@@ -16,9 +16,10 @@ package com.intuit.tank.vm.settings;\n  * #L%\n  */\n \n+\n+\n import java.util.List;\n import java.util.stream.Collectors;\n-\n import org.apache.commons.configuration.HierarchicalConfiguration;\n \n /**\n@@ -27,6 +28,8 @@ import org.apache.commons.configuration.HierarchicalConfiguration;\n  * @author dangleton\n  * \n  */\n+\n+\n public class InstanceDescriptionDefaults {\n \n     private HierarchicalConfiguration config;\n@@ -40,6 +43,8 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the location\n      */\n+\n+\n     public String getLocation() {\n         return get(\"location\");\n     }\n@@ -47,6 +52,8 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the securityGroup\n      */\n+\n+\n     public String getSecurityGroup() {\n         return get(\"security-group\");\n     }\n@@ -54,12 +61,16 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the securityGroup\n      */\n+\n+\n     public List<String> getSubnetIds() {\n         return getList(\"vpc-subnet\");\n     }\n     /**\n      * @return the securityGroup\n      */\n+\n+\n     public List<String> getSecurityGroupIds() {\n         return getList(\"security-group-ids\");\n     }\n@@ -67,6 +78,8 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the securityGroup\n      */\n+\n+\n     public String getIamRole() {\n         return get(\"iam-role\");\n     }\n@@ -74,6 +87,8 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the securityGroup\n      */\n+\n+\n     public String getZone() {\n         return get(\"zone\");\n     }\n@@ -81,6 +96,8 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the keypair\n      */\n+\n+\n     public String getKeypair() {\n         return get(\"keypair\");\n     }\n@@ -88,6 +105,8 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the VPC\n      */\n+\n+\n     public Boolean isVPC() {\n         return Boolean.valueOf(get(\"vpc\"));\n     }\n@@ -95,19 +114,20 @@ public class InstanceDescriptionDefaults {\n     /**\n      * @return the VPC\n      */\n+\n+\n     public String getTenancy() {\n         return get(\"Tenancy\");\n     }\n \n-\n     String get(String key) {\n         return config.getString(key, defaultInstance != null ? defaultInstance.getString(key) : null);\n     }\n-    \n-\tprivate List<String> getList(String key) {\n-\t\tList<String> strings;\n-    \tList<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n-        return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n+\n+    private List<String> getList(String key) {\n+        List<String> strings;\n+        List<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n+        return list.stream().map(object-> object != null ? object.toString() : null).collect(Collectors.toList());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "108",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/118/InstanceDescriptionDefaults.java\nindex ce4020fd7b6..ea6b46af507 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/118/InstanceDescriptionDefaults.java\n@@ -103,8 +103,8 @@ public class InstanceDescriptionDefaults {\n     String get(String key) {\n         return config.getString(key, defaultInstance != null ? defaultInstance.getString(key) : null);\n     }\n-    \n-\tprivate List<String> getList(String key) {\n+\n+    private List<String> getList(String key) {\n \t\tList<String> strings;\n     \tList<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n         return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "107",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/118/InstanceDescriptionDefaults.java\nindex ce4020fd7b6..bcb51e4086c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/118/InstanceDescriptionDefaults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/118/InstanceDescriptionDefaults.java\n@@ -103,8 +103,7 @@ public class InstanceDescriptionDefaults {\n     String get(String key) {\n         return config.getString(key, defaultInstance != null ? defaultInstance.getString(key) : null);\n     }\n-    \n-\tprivate List<String> getList(String key) {\n+    private List<String> getList(String key) {\n \t\tList<String> strings;\n     \tList<Object> list = config.getList(key, defaultInstance != null ? defaultInstance.getList(key) : null);\n         return list.stream().map(object -> object != null ? object.toString() : null).collect(Collectors.toList());\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
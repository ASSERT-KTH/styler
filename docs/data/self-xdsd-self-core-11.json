{
    "project_name": "self-xdsd-self-core",
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "122",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        }\n        final Commit commit;\n        if(jsonObject != null){\n            LOG.debug(String.format(\"Commit [%s] found!\", ref));\n            commit = new GitlabCommit(\n                commitUri,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/11/GitlabCommits.java\nindex 4f06e025b15..71f887143d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/11/GitlabCommits.java\n@@ -119,7 +119,7 @@ final class GitlabCommits implements Commits {\n                 );\n         }\n         final Commit commit;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             LOG.debug(String.format(\"Commit [%s] found!\", ref));\n             commit = new GitlabCommit(\n                 commitUri,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/11/GitlabCommits.java\nindex 4f06e025b15..096045288dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/11/GitlabCommits.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core;\n \n import com.selfxdsd.api.Collaborators;\n@@ -37,6 +38,7 @@ import java.util.Iterator;\n \n /**\n  * Commits in a Gitlab Repo.\n+ *\n  * @author Ali Fellahi (fellahi.ali@gmail.com)\n  * @version $Id$\n  * @since 0.0.44\n@@ -73,10 +75,10 @@ final class GitlabCommits implements Commits {\n     /**\n      * Ctor.\n      *\n-     * @param resources Gitlab's JSON Resources.\n-     * @param commitsUri Commits base URI.\n+     * @param resources     Gitlab's JSON Resources.\n+     * @param commitsUri    Commits base URI.\n      * @param collaborators Repo collaborators.\n-     * @param storage Storage.\n+     * @param storage       Storage.\n      */\n     GitlabCommits(\n         final JsonResources resources,\n@@ -94,7 +96,7 @@ final class GitlabCommits implements Commits {\n     public Commit getCommit(final String ref) {\n         LOG.debug(\n             \"Getting commit [\" + ref + \"] from [\"\n-            + this.commitsUri + \"...\"\n+                + this.commitsUri + \"...\"\n         );\n         final URI commitUri = URI.create(\n             this.commitsUri.toString() + \"/\" + ref\n@@ -111,15 +113,15 @@ final class GitlabCommits implements Commits {\n             default:\n                 LOG.error(\n                     \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n+                        + \"Received status code: \" + resource.statusCode() + \".\"\n                 );\n                 throw new IllegalStateException(\n                     \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n+                        + \"Received status code: \" + resource.statusCode() + \".\"\n                 );\n         }\n         final Commit commit;\n-        if(jsonObject != null){\n+        if (jsonObject != null) {\n             LOG.debug(String.format(\"Commit [%s] found!\", ref));\n             commit = new GitlabCommit(\n                 commitUri,\n@@ -155,8 +157,8 @@ final class GitlabCommits implements Commits {\n         } else {\n             throw new IllegalStateException(\n                 \"Fetch repo commits returned \" + resource.statusCode()\n-                + \", expected 200 OK. URI is [\" + this.commitsUri.toString()\n-                + \"].\"\n+                    + \", expected 200 OK. URI is [\" + this.commitsUri.toString()\n+                    + \"].\"\n             );\n         }\n         return latest;\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/11/GitlabCommits.java\nindex 4f06e025b15..18a0021552f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/11/GitlabCommits.java\n@@ -119,7 +119,7 @@ final class GitlabCommits implements Commits {\n                 );\n         }\n         final Commit commit;\n-        if(jsonObject != null){\n+        if (jsonObject != null) {\n             LOG.debug(String.format(\"Commit [%s] found!\", ref));\n             commit = new GitlabCommit(\n                 commitUri,\n@@ -146,7 +146,7 @@ final class GitlabCommits implements Commits {\n                     this.commitsUri.toString()\n                         + \"/\"\n                         + json.getString(\"short_id\")\n-                ),\n+    ),\n                 json,\n                 this.collaborators,\n                 this.storage,\n@@ -168,4 +168,4 @@ final class GitlabCommits implements Commits {\n             \"You cannot iterate over all the Commits in a Repo.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 38, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 38, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/11/GitlabCommits.java\nindex 4f06e025b15..26414eb17bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/11/GitlabCommits.java\n@@ -29,7 +29,6 @@ import com.selfxdsd.api.Resource;\n import com.selfxdsd.api.storage.Storage;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.json.JsonObject;\n import java.net.HttpURLConnection;\n import java.net.URI;\n@@ -41,33 +40,43 @@ import java.util.Iterator;\n  * @version $Id$\n  * @since 0.0.44\n  */\n+\n+\n final class GitlabCommits implements Commits {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        GitlabCommits.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GitlabCommits.class);\n \n     /**\n      * Gitlab repo Commits base uri.\n      */\n+\n+\n     private final URI commitsUri;\n \n     /**\n      * Gitlab's JSON Resources.\n      */\n+\n+\n     private final JsonResources resources;\n \n     /**\n      * Repo collaborators.\n      */\n+\n+\n     private final Collaborators collaborators;\n \n     /**\n      * Self storage, in case we want to store something.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -78,6 +87,8 @@ final class GitlabCommits implements Commits {\n      * @param collaborators Repo collaborators.\n      * @param storage Storage.\n      */\n+\n+\n     GitlabCommits(\n         final JsonResources resources,\n         final URI commitsUri,\n@@ -92,35 +103,35 @@ final class GitlabCommits implements Commits {\n \n     @Override\n     public Commit getCommit(final String ref) {\n-        LOG.debug(\n-            \"Getting commit [\" + ref + \"] from [\"\n-            + this.commitsUri + \"...\"\n-        );\n-        final URI commitUri = URI.create(\n-            this.commitsUri.toString() + \"/\" + ref\n-        );\n+        LOG.debug(\"Getting commit [\"\n+                      + ref + \"] from [\"\n+                      + this.commitsUri + \"...\");\n+        final URI commitUri = URI.create(this.commitsUri.toString() + \"/\"\n++ ref);\n         final Resource resource = this.resources.get(commitUri);\n         final JsonObject jsonObject;\n-        switch (resource.statusCode()) {\n-            case HttpURLConnection.HTTP_OK:\n-                jsonObject = resource.asJsonObject();\n-                break;\n-            case HttpURLConnection.HTTP_NOT_FOUND:\n-                jsonObject = null;\n-                break;\n-            default:\n-                LOG.error(\n-                    \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n-                );\n-                throw new IllegalStateException(\n-                    \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n-                );\n+        switch(resource.statusCode()) {\n+                                      case HttpURLConnection.HTTP_OK:\n+                                      jsonObject = resource.asJsonObject();\n+                                      break;\n+                                      case HttpURLConnection.HTTP_NOT_FOUND:\n+            jsonObject = null;\n+            break;\n+                                      default:\n+            LOG.error(\"Could not get the commit \"\n+                      + ref + \". \"\n++ \"Received status code: \"\n+                          + resource.statusCode() + \".\");\n+            throw new IllegalStateException(\"Could not get the commit \"\n+                                            + ref + \". \"\n++ \"Received status code: \"\n+                                                + resource.statusCode() + \".\");\n         }\n         final Commit commit;\n-        if(jsonObject != null){\n-            LOG.debug(String.format(\"Commit [%s] found!\", ref));\n+        if (jsonObject != null) {\n+            LOG.debug(\n+                String.format(\"Commit [%s] found!\", ref)\n+            );\n             commit = new GitlabCommit(\n                 commitUri,\n                 jsonObject,\n@@ -129,7 +140,8 @@ final class GitlabCommits implements Commits {\n                 this.resources\n             );\n         } else {\n-            LOG.debug(\"Commit [\" + ref + \"] not found, returning null.\");\n+            LOG.debug(\"Commit [\"\n+                          + ref + \"] not found, returning null.\");\n             commit = null;\n         }\n         return commit;\n@@ -142,30 +154,23 @@ final class GitlabCommits implements Commits {\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n             final JsonObject json = resource.asJsonArray().getJsonObject(0);\n             latest = new GitlabCommit(\n-                URI.create(\n-                    this.commitsUri.toString()\n-                        + \"/\"\n-                        + json.getString(\"short_id\")\n-                ),\n+                URI.create(this.commitsUri.toString() + \"/\"\n++ json.getString(\"short_id\")),\n                 json,\n                 this.collaborators,\n                 this.storage,\n                 this.resources\n             );\n         } else {\n-            throw new IllegalStateException(\n-                \"Fetch repo commits returned \" + resource.statusCode()\n-                + \", expected 200 OK. URI is [\" + this.commitsUri.toString()\n-                + \"].\"\n-            );\n+            throw new IllegalStateException(\"Fetch repo commits returned \"\n+                                                + resource.statusCode() + \", expected 200 OK. URI is [\"\n+                                                + this.commitsUri.toString() + \"].\");\n         }\n         return latest;\n     }\n \n     @Override\n     public Iterator<Commit> iterator() {\n-        throw new UnsupportedOperationException(\n-            \"You cannot iterate over all the Commits in a Repo.\"\n-        );\n+        throw new UnsupportedOperationException(\"You cannot iterate over all the Commits in a Repo.\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/11/GitlabCommits.java\nindex 4f06e025b15..71f887143d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/11/GitlabCommits.java\n@@ -119,7 +119,7 @@ final class GitlabCommits implements Commits {\n                 );\n         }\n         final Commit commit;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             LOG.debug(String.format(\"Commit [%s] found!\", ref));\n             commit = new GitlabCommit(\n                 commitUri,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/11/GitlabCommits.java\nindex 4f06e025b15..71f887143d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/11/GitlabCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/11/GitlabCommits.java\n@@ -119,7 +119,7 @@ final class GitlabCommits implements Commits {\n                 );\n         }\n         final Commit commit;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             LOG.debug(String.format(\"Commit [%s] found!\", ref));\n             commit = new GitlabCommit(\n                 commitUri,\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
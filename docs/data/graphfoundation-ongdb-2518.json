{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2518",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2518/ClusterMember.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2518/ClusterMember.java\nindex dbc01203e88..13d26b22ef4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2518/ClusterMember.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2518/ClusterMember.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster.member;\n \n import java.net.URI;\n@@ -32,142 +33,141 @@ import org.neo4j.kernel.impl.store.StoreId;\n \n public class ClusterMember\n {\n-    private final InstanceId instanceId;\n-    private final Map<String, URI> roles;\n-    private final StoreId storeId;\n-    private final boolean alive;\n-\n-    public ClusterMember( InstanceId instanceId )\n-    {\n-        this( instanceId, Collections.emptyMap(), StoreId.DEFAULT, true );\n-    }\n-\n-    public ClusterMember( InstanceId instanceId, Map<String,URI> roles, StoreId storeId, boolean alive )\n-    {\n-        this.instanceId = instanceId;\n-        this.roles = roles;\n-        this.storeId = storeId;\n-        this.alive = alive;\n-    }\n-\n-    public InstanceId getInstanceId()\n-    {\n-        return instanceId;\n-    }\n-\n-    public URI getHAUri()\n-    {\n-        URI haURI = roles.get( HighAvailabilityModeSwitcher.MASTER );\n-        if ( haURI == null )\n-        {\n-            haURI = roles.get( HighAvailabilityModeSwitcher.SLAVE );\n-        }\n-        return haURI;\n-    }\n-\n-    public String getHARole()\n-    {\n-        if ( roles.containsKey( HighAvailabilityModeSwitcher.MASTER ) )\n-        {\n-            return HighAvailabilityModeSwitcher.MASTER;\n-        }\n-        if ( roles.containsKey( HighAvailabilityModeSwitcher.SLAVE ) )\n-        {\n-            return HighAvailabilityModeSwitcher.SLAVE;\n-        }\n-        return HighAvailabilityModeSwitcher.UNKNOWN;\n-    }\n-\n-    public boolean hasRole( String role )\n-    {\n-        return roles.containsKey( role );\n-    }\n-\n-    public Iterable<String> getRoles()\n-    {\n-        return roles.keySet();\n-    }\n-\n-    public Iterable<URI> getRoleURIs()\n-    {\n-        return roles.values();\n-    }\n-\n-    public StoreId getStoreId()\n-    {\n-        return storeId;\n-    }\n-\n-    public boolean isAlive()\n-    {\n-        return alive;\n-    }\n-\n-    ClusterMember availableAs( String role, URI roleUri, StoreId storeId )\n-    {\n-        Map<String, URI> copy = new HashMap<>( roles );\n-        if ( role.equals( HighAvailabilityModeSwitcher.MASTER ) )\n-        {\n-            copy.remove( HighAvailabilityModeSwitcher.SLAVE );\n-        }\n-        else if ( role.equals( HighAvailabilityModeSwitcher.SLAVE ) )\n-        {\n-            copy.remove( HighAvailabilityModeSwitcher.MASTER );\n-            copy.remove( OnlineBackupKernelExtension.BACKUP );\n-        }\n-        copy.put( role, roleUri );\n-        return new ClusterMember( this.instanceId, copy, storeId, this.alive );\n-    }\n-\n-    ClusterMember unavailable()\n-    {\n-        return new ClusterMember( this.instanceId, Collections.emptyMap(), storeId, this.alive );\n-    }\n-\n-    ClusterMember unavailableAs( String role )\n-    {\n-        return new ClusterMember( this.instanceId, MapUtil.copyAndRemove( roles, role ), this.storeId, this.alive );\n-    }\n-\n-    ClusterMember alive()\n-    {\n-        return new ClusterMember( this.instanceId, roles, storeId, true );\n-    }\n-\n-    ClusterMember failed()\n-    {\n-        return new ClusterMember( this.instanceId, roles, storeId, false );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"ClusterMember{\" +\n-               \"instanceId=\" + instanceId +\n-               \", roles=\" + roles +\n-               \", storeId=\" + storeId +\n-               \", alive=\" + alive +\n-               '}';\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        ClusterMember that = (ClusterMember) o;\n-        return instanceId.equals( that.instanceId );\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        return instanceId.hashCode();\n+  private final InstanceId instanceId;\n+  private final Map<String, URI> roles;\n+  private final StoreId storeId;\n+  private final boolean alive;\n+\n+  public ClusterMember(InstanceId instanceId)\n+  {\n+    this(instanceId, Collections.emptyMap(), StoreId.DEFAULT, true);\n+  }\n+\n+  public ClusterMember(InstanceId instanceId, Map<String, URI> roles, StoreId storeId, boolean alive)\n+  {\n+    this.instanceId = instanceId;\n+    this.roles = roles;\n+    this.storeId = storeId;\n+    this.alive = alive;\n+  }\n+\n+  public InstanceId getInstanceId()\n+  {\n+    return instanceId;\n+  }\n+\n+  public URI getHAUri()\n+  {\n+    URI haURI = roles.get(HighAvailabilityModeSwitcher.MASTER);\n+    if (haURI == null)\n+    {\n+      haURI = roles.get(HighAvailabilityModeSwitcher.SLAVE);\n+    }\n+    return haURI;\n+  }\n+\n+  public String getHARole()\n+  {\n+    if (roles.containsKey(HighAvailabilityModeSwitcher.MASTER))\n+    {\n+      return HighAvailabilityModeSwitcher.MASTER;\n+    }\n+    if (roles.containsKey(HighAvailabilityModeSwitcher.SLAVE))\n+    {\n+      return HighAvailabilityModeSwitcher.SLAVE;\n+    }\n+    return HighAvailabilityModeSwitcher.UNKNOWN;\n+  }\n+\n+  public boolean hasRole(String role)\n+  {\n+    return roles.containsKey(role);\n+  }\n+\n+  public Iterable<String> getRoles()\n+  {\n+    return roles.keySet();\n+  }\n+\n+  public Iterable<URI> getRoleURIs()\n+  {\n+    return roles.values();\n+  }\n+\n+  public StoreId getStoreId()\n+  {\n+    return storeId;\n+  }\n+\n+  public boolean isAlive()\n+  {\n+    return alive;\n+  }\n+\n+  ClusterMember availableAs(String role, URI roleUri, StoreId storeId)\n+  {\n+    Map<String, URI> copy = new HashMap<>(roles);\n+    if (role.equals(HighAvailabilityModeSwitcher.MASTER))\n+    {\n+      copy.remove(HighAvailabilityModeSwitcher.SLAVE);\n+    } else if (role.equals(HighAvailabilityModeSwitcher.SLAVE))\n+    {\n+      copy.remove(HighAvailabilityModeSwitcher.MASTER);\n+      copy.remove(OnlineBackupKernelExtension.BACKUP);\n+    }\n+    copy.put(role, roleUri);\n+    return new ClusterMember(this.instanceId, copy, storeId, this.alive);\n+  }\n+\n+  ClusterMember unavailable()\n+  {\n+    return new ClusterMember(this.instanceId, Collections.emptyMap(), storeId, this.alive);\n+  }\n+\n+  ClusterMember unavailableAs(String role)\n+  {\n+    return new ClusterMember(this.instanceId, MapUtil.copyAndRemove(roles, role), this.storeId, this.alive);\n+  }\n+\n+  ClusterMember alive()\n+  {\n+    return new ClusterMember(this.instanceId, roles, storeId, true);\n+  }\n+\n+  ClusterMember failed()\n+  {\n+    return new ClusterMember(this.instanceId, roles, storeId, false);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"ClusterMember{\" +\n+        \"instanceId=\" + instanceId +\n+        \", roles=\" + roles +\n+        \", storeId=\" + storeId +\n+        \", alive=\" + alive +\n+        '}';\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n     }\n+    ClusterMember that = (ClusterMember) o;\n+    return instanceId.equals(that.instanceId);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return instanceId.hashCode();\n+  }\n }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2518/ClusterMember.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2518/ClusterMember.java\nindex dbc01203e88..23fc77e1100 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2518/ClusterMember.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2518/ClusterMember.java\n@@ -33,7 +33,7 @@ import org.neo4j.kernel.impl.store.StoreId;\n public class ClusterMember\n {\n     private final InstanceId instanceId;\n-    private final Map<String, URI> roles;\n+    private final Map<String,URI> roles;\n     private final StoreId storeId;\n     private final boolean alive;\n \n@@ -62,7 +62,8 @@ public class ClusterMember\n         {\n             haURI = roles.get( HighAvailabilityModeSwitcher.SLAVE );\n         }\n-        return haURI;\n+\n+return haURI;\n     }\n \n     public String getHARole()\n@@ -71,11 +72,13 @@ public class ClusterMember\n         {\n             return HighAvailabilityModeSwitcher.MASTER;\n         }\n-        if ( roles.containsKey( HighAvailabilityModeSwitcher.SLAVE ) )\n+\n+if ( roles.containsKey( HighAvailabilityModeSwitcher.SLAVE ) )\n         {\n             return HighAvailabilityModeSwitcher.SLAVE;\n         }\n-        return HighAvailabilityModeSwitcher.UNKNOWN;\n+\n+return HighAvailabilityModeSwitcher.UNKNOWN;\n     }\n \n     public boolean hasRole( String role )\n@@ -105,7 +108,7 @@ public class ClusterMember\n \n     ClusterMember availableAs( String role, URI roleUri, StoreId storeId )\n     {\n-        Map<String, URI> copy = new HashMap<>( roles );\n+        Map<String,URI> copy = new HashMap<>( roles );\n         if ( role.equals( HighAvailabilityModeSwitcher.MASTER ) )\n         {\n             copy.remove( HighAvailabilityModeSwitcher.SLAVE );\n@@ -142,12 +145,7 @@ public class ClusterMember\n     @Override\n     public String toString()\n     {\n-        return \"ClusterMember{\" +\n-               \"instanceId=\" + instanceId +\n-               \", roles=\" + roles +\n-               \", storeId=\" + storeId +\n-               \", alive=\" + alive +\n-               '}';\n+        return \"ClusterMember{\" + \"instanceId=\" + instanceId + \", roles=\" + roles + \", storeId=\" + storeId + \", alive=\" + alive + '}';\n     }\n \n     @Override\n@@ -157,11 +155,13 @@ public class ClusterMember\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        ClusterMember that = (ClusterMember) o;\n+\n+ClusterMember that = (ClusterMember) o;\n         return instanceId.equals( that.instanceId );\n     }\n \n@@ -170,4 +170,4 @@ public class ClusterMember\n     {\n         return instanceId.hashCode();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
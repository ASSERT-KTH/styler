{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "190",
    "information": {
        "errors": [
            {
                "line": "422",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   */\n  // [TARGET listSubscriptionsAsync(ListOption...)]\n  public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n    // [START listSubscriptionsAsync]\n    Future<AsyncPage<Subscription>> future =\n        pubsub.listSubscriptionsAsync(ListOption.pageSize(100));",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "422",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/190/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/190/PubSubSnippets.java\nindex 142e2993bbf..5f8657679bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/190/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/190/PubSubSnippets.java\n@@ -419,7 +419,8 @@ public class PubSubSnippets {\n    * Example of asynchronously listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptionsAsync(ListOption...)]\n-  public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n+  public Page<Subscription> listSubscriptionsAsync()\n+      throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsAsync]\n     Future<AsyncPage<Subscription>> future =\n         pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n@@ -799,7 +800,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+                                                 String ackId2)\n+      throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMoreMessagesAsync]\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n@@ -832,7 +834,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+                                                String ackId2)\n+      throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "422",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/190/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/190/PubSubSnippets.java\nindex 142e2993bbf..bed175d9519 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/190/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/190/PubSubSnippets.java\n@@ -172,7 +172,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public boolean deleteTopicAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START deleteTopicAsync]\n+  // [START deleteTopicAsync]\n     Future<Boolean> future = pubsub.deleteTopicAsync(topicName);\n     // ...\n     boolean deleted = future.get();\n@@ -205,7 +205,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public String publishOneMessageAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START publishOneMessage]\n+  // [START publishOneMessage]\n     Message message = Message.of(\"payload\");\n     Future<String> future = pubsub.publishAsync(topicName, message);\n     // ...\n@@ -236,7 +236,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public List<String> publishMessageListAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START publishMessageListAsync]\n+  // [START publishMessageListAsync]\n     List<Message> messages = new LinkedList<>();\n     messages.add(Message.of(\"payload1\"));\n     messages.add(Message.of(\"payload2\"));\n@@ -268,7 +268,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public List<String> publishMessagesAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START publishMessagesAsync]\n+  // [START publishMessagesAsync]\n     Message message1 = Message.of(\"payload1\");\n     Message message2 = Message.of(\"payload2\");\n     Future<List<String>> future = pubsub.publishAsync(topicName, message1, message2);\n@@ -300,7 +300,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Subscription createSubscriptionAsync(String topicName, String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START createSubscriptionAsync]\n+  // [START createSubscriptionAsync]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n     Future<Subscription> future = pubsub.createAsync(subscriptionInfo);\n     // ...\n@@ -343,7 +343,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"https://www.example.com/push\"]\n   public void replacePushConfigAsync(String subscriptionName, String endpoint)\n       throws ExecutionException, InterruptedException {\n-    // [START replacePushConfigAsync]\n+  // [START replacePushConfigAsync]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, pushConfig);\n     // ...\n@@ -359,7 +359,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public void replacePushConfigToPullAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START replacePushConfigToPullAsync]\n+  // [START replacePushConfigToPullAsync]\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, null);\n     // ...\n     future.get();\n@@ -388,7 +388,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Subscription getSubscriptionAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START getSubscriptionAsync]\n+  // [START getSubscriptionAsync]\n     Future<Subscription> future = pubsub.getSubscriptionAsync(subscriptionName);\n     // ...\n     Subscription subscription = future.get();\n@@ -423,7 +423,7 @@ public class PubSubSnippets {\n     // [START listSubscriptionsAsync]\n     Future<AsyncPage<Subscription>> future =\n         pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n-    // ...\n+// ...\n     AsyncPage<Subscription> subscriptions = future.get();\n     Iterator<Subscription> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n@@ -459,10 +459,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START listSubscriptionsForTopicAsync]\n+  // [START listSubscriptionsForTopicAsync]\n     Future<AsyncPage<SubscriptionId>> future =\n         pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n-    // ...\n+// ...\n     AsyncPage<SubscriptionId> subscriptions = future.get();\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n@@ -497,7 +497,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public boolean deleteSubscriptionAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START deleteSubscriptionAsync]\n+  // [START deleteSubscriptionAsync]\n     Future<Boolean> future = pubsub.deleteSubscriptionAsync(subscriptionName);\n     // ...\n     boolean deleted = future.get();\n@@ -522,7 +522,9 @@ public class PubSubSnippets {\n     while (messages.hasNext()) {\n       ReceivedMessage message = messages.next();\n       // do something with message and ack/nack it\n-      message.ack(); // or message.nack()\n+      message.ack();\n+\n+// or message.nack()\n     }\n     // [END pull]\n   }\n@@ -541,7 +543,9 @@ public class PubSubSnippets {\n     while (messages.hasNext()) {\n       ReceivedMessage message = messages.next();\n       // do something with message and ack/nack it\n-      message.ack(); // or message.nack()\n+      message.ack();\n+\n+// or message.nack()\n     }\n     // [END pullAsync]\n   }\n@@ -588,7 +592,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message_ack_id\"]\n   public void ackOneMessageAsync(String subscriptionName, String ackId)\n       throws ExecutionException, InterruptedException {\n-    // [START ackOneMessageAsync]\n+  // [START ackOneMessageAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId);\n     // ...\n     future.get();\n@@ -617,7 +621,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void ackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START ackMoreMessagesAsync]\n+  // [START ackMoreMessagesAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n     future.get();\n@@ -649,7 +653,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void ackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START ackMessageListAsync]\n+  // [START ackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n@@ -679,7 +683,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message_ack_id\"]\n   public void nackOneMessageAsync(String subscriptionName, String ackId)\n       throws ExecutionException, InterruptedException {\n-    // [START nackOneMessageAsync]\n+  // [START nackOneMessageAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId);\n     // ...\n     future.get();\n@@ -708,7 +712,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void nackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START nackMoreMessagesAsync]\n+  // [START nackMoreMessagesAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n     future.get();\n@@ -740,7 +744,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void nackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START nackMessageListAsync]\n+  // [START nackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n@@ -770,10 +774,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"message_ack_id\"]\n   public void modifyAckDeadlineOneMessageAsync(String subscriptionName, String ackId)\n       throws ExecutionException, InterruptedException {\n-    // [START modifyAckDeadlineOneMessageAsync]\n+  // [START modifyAckDeadlineOneMessageAsync]\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n-    // ...\n+// ...\n     future.get();\n     // [END modifyAckDeadlineOneMessageAsync]\n   }\n@@ -800,10 +804,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1,\n       String ackId2) throws ExecutionException, InterruptedException {\n-    // [START modifyAckDeadlineMoreMessagesAsync]\n+  // [START modifyAckDeadlineMoreMessagesAsync]\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n-    // ...\n+// ...\n     future.get();\n     // [END modifyAckDeadlineMoreMessagesAsync]\n   }\n@@ -833,13 +837,13 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1,\n       String ackId2) throws ExecutionException, InterruptedException {\n-    // [START modifyAckDeadlineMessageListAsync]\n+  // [START modifyAckDeadlineMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackIds);\n-    // ...\n+// ...\n     future.get();\n     // [END modifyAckDeadlineMessageListAsync]\n   }\n@@ -866,7 +870,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Policy getTopicPolicyAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START getTopicPolicyAsync]\n+  // [START getTopicPolicyAsync]\n     Future<Policy> future = pubsub.getTopicPolicyAsync(topicName);\n     // ...\n     Policy policy = future.get();\n@@ -900,7 +904,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Policy replaceTopicPolicyAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START replaceTopicPolicyAsync]\n+  // [START replaceTopicPolicyAsync]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n     Policy updatedPolicy = policy.toBuilder()\n         .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n@@ -933,7 +937,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public List<Boolean> testTopicPermissionsAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START testTopicPermissionsAsync]\n+  // [START testTopicPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.topics.get\");\n     Future<List<Boolean>> future = pubsub.testTopicPermissionsAsync(topicName, permissions);\n@@ -965,7 +969,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Policy getSubscriptionPolicyAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START getSubscriptionPolicyAsync]\n+  // [START getSubscriptionPolicyAsync]\n     Future<Policy> future = pubsub.getSubscriptionPolicyAsync(subscriptionName);\n     // ...\n     Policy policy = future.get();\n@@ -999,14 +1003,14 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Policy replaceSubscriptionPolicyAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START replaceSubscriptionPolicyAsync]\n+  // [START replaceSubscriptionPolicyAsync]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n     Policy updatedPolicy = policy.toBuilder()\n         .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n         .build();\n     Future<Policy> future =\n         pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n-    // ...\n+// ...\n     updatedPolicy = future.get();\n     // [END replaceSubscriptionPolicyAsync]\n     return updatedPolicy;\n@@ -1023,7 +1027,7 @@ public class PubSubSnippets {\n     permissions.add(\"pubsub.subscriptions.get\");\n     List<Boolean> testedPermissions =\n         pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n-    // [END testSubscriptionPermissions]\n+// [END testSubscriptionPermissions]\n     return testedPermissions;\n   }\n \n@@ -1035,14 +1039,14 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START testSubscriptionPermissionsAsync]\n+  // [START testSubscriptionPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n     Future<List<Boolean>> future =\n         pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n-    // ...\n+// ...\n     List<Boolean> testedPermissions = future.get();\n     // [END testSubscriptionPermissionsAsync]\n     return testedPermissions;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "221",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "253",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "286",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "319",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "364",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "380",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "411",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "446",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "448",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "468",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "484",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "486",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "524",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "587",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "593",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "594",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "622",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "652",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "685",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "716",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "746",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "779",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "810",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "812",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "840",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "842",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "873",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "878",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "907",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "929",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "941",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "944",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "973",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1007",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1029",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1041",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1044",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1062",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1074",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1078",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/190/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/190/PubSubSnippets.java\nindex 142e2993bbf..5460b7d1f74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/190/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/190/PubSubSnippets.java\n@@ -38,7 +38,6 @@ import com.google.cloud.pubsub.SubscriptionId;\n import com.google.cloud.pubsub.SubscriptionInfo;\n import com.google.cloud.pubsub.Topic;\n import com.google.cloud.pubsub.TopicInfo;\n-\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n@@ -46,6 +45,7 @@ import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n+\n public class PubSubSnippets {\n \n   private final PubSub pubsub;\n@@ -59,6 +59,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET create(TopicInfo)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic createTopic(String topicName) {\n     // [START createTopic]\n     TopicInfo topicInfo = TopicInfo.of(topicName);\n@@ -72,6 +73,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET createAsync(TopicInfo)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic createTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START createTopicAsync]\n     TopicInfo topicInfo = TopicInfo.of(topicName);\n@@ -87,11 +89,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopic(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic getTopic(String topicName) {\n     // [START getTopic]\n     Topic topic = pubsub.getTopic(topicName);\n     if (topic == null) {\n       // topic was not found\n+\n     }\n     // [END getTopic]\n     return topic;\n@@ -102,6 +106,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic getTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START getTopicAsync]\n     Future<Topic> future = pubsub.getTopicAsync(topicName);\n@@ -109,6 +114,7 @@ public class PubSubSnippets {\n     Topic topic = future.get();\n     if (topic == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicAsync]\n     return topic;\n@@ -118,6 +124,7 @@ public class PubSubSnippets {\n    * Example of listing topics, specifying the page size.\n    */\n   // [TARGET listTopics(ListOption...)]\n+\n   public Page<Topic> listTopics() {\n     // [START listTopics]\n     Page<Topic> topics = pubsub.listTopics(ListOption.pageSize(100));\n@@ -134,6 +141,7 @@ public class PubSubSnippets {\n    * Example of asynchronously listing topics, specifying the page size.\n    */\n   // [TARGET listTopicsAsync(ListOption...)]\n+\n   public Page<Topic> listTopicsAsync() throws ExecutionException, InterruptedException {\n     // [START listTopicsAsync]\n     Future<AsyncPage<Topic>> future = pubsub.listTopicsAsync(ListOption.pageSize(100));\n@@ -153,13 +161,16 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteTopic(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public boolean deleteTopic(String topicName) {\n     // [START deleteTopic]\n     boolean deleted = pubsub.deleteTopic(topicName);\n     if (deleted) {\n       // the topic was deleted\n+\n     } else {\n       // the topic was not found\n+\n     }\n     // [END deleteTopic]\n     return deleted;\n@@ -170,16 +181,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteTopicAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n-  public boolean deleteTopicAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public boolean deleteTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START deleteTopicAsync]\n     Future<Boolean> future = pubsub.deleteTopicAsync(topicName);\n     // ...\n     boolean deleted = future.get();\n     if (deleted) {\n       // the topic was deleted\n+\n     } else {\n       // the topic was not found\n+\n     }\n     // [END deleteTopicAsync]\n     return deleted;\n@@ -190,6 +203,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET publish(String, Message)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public String publishOneMessage(String topicName) {\n     // [START publishOneMessage]\n     Message message = Message.of(\"payload\");\n@@ -203,8 +217,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET publishAsync(String, Message)]\n   // [VARIABLE \"my_topic_name\"]\n-  public String publishOneMessageAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public String publishOneMessageAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START publishOneMessage]\n     Message message = Message.of(\"payload\");\n     Future<String> future = pubsub.publishAsync(topicName, message);\n@@ -219,6 +233,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET publish(String, Iterable)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public List<String> publishMessageList(String topicName) {\n     // [START publishOneMessageAsync]\n     List<Message> messages = new LinkedList<>();\n@@ -234,8 +249,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET publishAsync(String, Iterable)]\n   // [VARIABLE \"my_topic_name\"]\n-  public List<String> publishMessageListAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<String> publishMessageListAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START publishMessageListAsync]\n     List<Message> messages = new LinkedList<>();\n     messages.add(Message.of(\"payload1\"));\n@@ -252,6 +267,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET publish(String, Message, Message...)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public List<String> publishMessages(String topicName) {\n     // [START publishMessages]\n     Message message1 = Message.of(\"payload1\");\n@@ -266,8 +282,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET publishAsync(String, Message, Message...)]\n   // [VARIABLE \"my_topic_name\"]\n-  public List<String> publishMessagesAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<String> publishMessagesAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START publishMessagesAsync]\n     Message message1 = Message.of(\"payload1\");\n     Message message2 = Message.of(\"payload2\");\n@@ -284,6 +300,7 @@ public class PubSubSnippets {\n   // [TARGET create(SubscriptionInfo)]\n   // [VARIABLE \"my_topic_name\"]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Subscription createSubscription(String topicName, String subscriptionName) {\n     // [START createSubscription]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n@@ -298,8 +315,8 @@ public class PubSubSnippets {\n   // [TARGET createAsync(SubscriptionInfo)]\n   // [VARIABLE \"my_topic_name\"]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Subscription createSubscriptionAsync(String topicName, String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Subscription createSubscriptionAsync(String topicName, String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START createSubscriptionAsync]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n     Future<Subscription> future = pubsub.createAsync(subscriptionInfo);\n@@ -315,6 +332,7 @@ public class PubSubSnippets {\n   // [TARGET replacePushConfig(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"https://www.example.com/push\"]\n+\n   public void replacePushConfig(String subscriptionName, String endpoint) {\n     // [START replacePushConfig]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n@@ -328,6 +346,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET replacePushConfig(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void replacePushConfigToPull(String subscriptionName) {\n     // [START replacePushConfigToPull]\n     pubsub.replacePushConfig(subscriptionName, null);\n@@ -341,8 +360,8 @@ public class PubSubSnippets {\n   // [TARGET replacePushConfigAsync(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"https://www.example.com/push\"]\n-  public void replacePushConfigAsync(String subscriptionName, String endpoint)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void replacePushConfigAsync(String subscriptionName, String endpoint) throws ExecutionException, InterruptedException {\n     // [START replacePushConfigAsync]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, pushConfig);\n@@ -357,8 +376,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET replacePushConfigAsync(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public void replacePushConfigToPullAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void replacePushConfigToPullAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START replacePushConfigToPullAsync]\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, null);\n     // ...\n@@ -371,11 +390,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscription(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Subscription getSubscription(String subscriptionName) {\n     // [START getSubscription]\n     Subscription subscription = pubsub.getSubscription(subscriptionName);\n     if (subscription == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscription]\n     return subscription;\n@@ -386,14 +407,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Subscription getSubscriptionAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Subscription getSubscriptionAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START getSubscriptionAsync]\n     Future<Subscription> future = pubsub.getSubscriptionAsync(subscriptionName);\n     // ...\n     Subscription subscription = future.get();\n     if (subscription == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionAsync]\n     return subscription;\n@@ -403,6 +425,7 @@ public class PubSubSnippets {\n    * Example of listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptions(ListOption...)]\n+\n   public Page<Subscription> listSubscriptions() {\n     // [START listSubscriptions]\n     Page<Subscription> subscriptions = pubsub.listSubscriptions(ListOption.pageSize(100));\n@@ -419,10 +442,10 @@ public class PubSubSnippets {\n    * Example of asynchronously listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptionsAsync(ListOption...)]\n+\n   public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsAsync]\n-    Future<AsyncPage<Subscription>> future =\n-        pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n+    Future<AsyncPage<Subscription>> future = pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n     // ...\n     AsyncPage<Subscription> subscriptions = future.get();\n     Iterator<Subscription> subscriptionIterator = subscriptions.iterateAll();\n@@ -439,10 +462,10 @@ public class PubSubSnippets {\n    */\n   // [TARGET listSubscriptions(String, ListOption...)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Page<SubscriptionId> listSubscriptionsForTopic(String topicName) {\n     // [START listSubscriptionsForTopic]\n-    Page<SubscriptionId> subscriptions =\n-        pubsub.listSubscriptions(topicName, ListOption.pageSize(100));\n+    Page<SubscriptionId> subscriptions = pubsub.listSubscriptions(topicName, ListOption.pageSize(100));\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n       SubscriptionId subscription = subscriptionIterator.next();\n@@ -457,11 +480,10 @@ public class PubSubSnippets {\n    */\n   // [TARGET listSubscriptionsAsync(String, ListOption...)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsForTopicAsync]\n-    Future<AsyncPage<SubscriptionId>> future =\n-        pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n+    Future<AsyncPage<SubscriptionId>> future = pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n     // ...\n     AsyncPage<SubscriptionId> subscriptions = future.get();\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n@@ -478,13 +500,16 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteSubscription(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public boolean deleteSubscription(String subscriptionName) {\n     // [START deleteSubscription]\n     boolean deleted = pubsub.deleteSubscription(subscriptionName);\n     if (deleted) {\n       // the subscription was deleted\n+\n     } else {\n       // the subscription was not found\n+\n     }\n     // [END deleteSubscription]\n     return deleted;\n@@ -495,16 +520,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteSubscriptionAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public boolean deleteSubscriptionAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public boolean deleteSubscriptionAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START deleteSubscriptionAsync]\n     Future<Boolean> future = pubsub.deleteSubscriptionAsync(subscriptionName);\n     // ...\n     boolean deleted = future.get();\n     if (deleted) {\n       // the subscription was deleted\n+\n     } else {\n       // the subscription was not found\n+\n     }\n     // [END deleteSubscriptionAsync]\n     return deleted;\n@@ -515,6 +542,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET pull(String, int)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void pull(String subscriptionName) {\n     // [START pull]\n     Iterator<ReceivedMessage> messages = pubsub.pull(subscriptionName, 100);\n@@ -532,6 +560,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET pullAsync(String, int)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void pullAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START pullAsync]\n     Future<Iterator<ReceivedMessage>> future = pubsub.pullAsync(subscriptionName, 100);\n@@ -551,16 +580,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET pullAsync(String, MessageProcessor, PullOption...)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void pullWithMessageConsumer(String subscriptionName) throws Exception {\n     // [START pullWithMessageConsumer]\n     MessageProcessor callback = new MessageProcessor() {\n-      @Override\n-      public void process(Message message) throws Exception {\n+@Override\n+public void process(Message message) throws Exception {\n         // Ack deadline is renewed until this method returns\n         // Message is acked if this method returns successfully\n         // Message is nacked if this method throws an exception\n-      }\n-    };\n+\n+}\n+};\n     PubSub.MessageConsumer consumer = pubsub.pullAsync(subscriptionName, callback);\n     // ...\n     // Stop pulling\n@@ -574,6 +605,7 @@ public class PubSubSnippets {\n   // [TARGET ack(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n+\n   public void ackOneMessage(String subscriptionName, String ackId) {\n     // [START ackOneMessage]\n     pubsub.ack(subscriptionName, ackId);\n@@ -586,8 +618,8 @@ public class PubSubSnippets {\n   // [TARGET ackAsync(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n-  public void ackOneMessageAsync(String subscriptionName, String ackId)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void ackOneMessageAsync(String subscriptionName, String ackId) throws ExecutionException, InterruptedException {\n     // [START ackOneMessageAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId);\n     // ...\n@@ -602,6 +634,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void ackMoreMessages(String subscriptionName, String ackId1, String ackId2) {\n     // [START ackMoreMessages]\n     pubsub.ack(subscriptionName, ackId1, ackId2);\n@@ -615,8 +648,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void ackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void ackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START ackMoreMessagesAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n@@ -631,6 +664,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void ackMessageList(String subscriptionName, String ackId1, String ackId2) {\n     // [START ackMessageList]\n     List<String> ackIds = new LinkedList<>();\n@@ -647,8 +681,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void ackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void ackMessageListAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START ackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n@@ -665,6 +699,7 @@ public class PubSubSnippets {\n   // [TARGET nack(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n+\n   public void nackOneMessage(String subscriptionName, String ackId) {\n     // [START nackOneMessage]\n     pubsub.nack(subscriptionName, ackId);\n@@ -677,8 +712,8 @@ public class PubSubSnippets {\n   // [TARGET nackAsync(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n-  public void nackOneMessageAsync(String subscriptionName, String ackId)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void nackOneMessageAsync(String subscriptionName, String ackId) throws ExecutionException, InterruptedException {\n     // [START nackOneMessageAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId);\n     // ...\n@@ -693,6 +728,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void nackMoreMessages(String subscriptionName, String ackId1, String ackId2) {\n     // [START nackMoreMessages]\n     pubsub.nack(subscriptionName, ackId1, ackId2);\n@@ -706,8 +742,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void nackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void nackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START nackMoreMessagesAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n@@ -722,6 +758,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void nackMessageList(String subscriptionName, String ackId1, String ackId2) {\n     // [START nackMessageList]\n     List<String> ackIds = new LinkedList<>();\n@@ -738,8 +775,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void nackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void nackMessageListAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START nackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n@@ -756,6 +793,7 @@ public class PubSubSnippets {\n   // [TARGET modifyAckDeadline(String, int, TimeUnit, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n+\n   public void modifyAckDeadlineOneMessage(String subscriptionName, String ackId) {\n     // [START modifyAckDeadlineOneMessage]\n     pubsub.modifyAckDeadline(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n@@ -768,11 +806,10 @@ public class PubSubSnippets {\n   // [TARGET modifyAckDeadlineAsync(String, int, TimeUnit, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n-  public void modifyAckDeadlineOneMessageAsync(String subscriptionName, String ackId)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void modifyAckDeadlineOneMessageAsync(String subscriptionName, String ackId) throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineOneMessageAsync]\n-    Future<Void> future =\n-        pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n+    Future<Void> future = pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n     // ...\n     future.get();\n     // [END modifyAckDeadlineOneMessageAsync]\n@@ -785,6 +822,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void modifyAckDeadlineMoreMessages(String subscriptionName, String ackId1, String ackId2) {\n     // [START modifyAckDeadline]\n     pubsub.modifyAckDeadline(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n@@ -798,11 +836,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+\n+  public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMoreMessagesAsync]\n-    Future<Void> future =\n-        pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n+    Future<Void> future = pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n     // ...\n     future.get();\n     // [END modifyAckDeadlineMoreMessagesAsync]\n@@ -815,6 +852,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void modifyAckDeadlineMessageList(String subscriptionName, String ackId1, String ackId2) {\n     // [START modifyAckDeadlineMessageList]\n     List<String> ackIds = new LinkedList<>();\n@@ -831,14 +869,13 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+\n+  public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n-    Future<Void> future =\n-        pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackIds);\n+    Future<Void> future = pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackIds);\n     // ...\n     future.get();\n     // [END modifyAckDeadlineMessageListAsync]\n@@ -849,11 +886,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicPolicy(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Policy getTopicPolicy(String topicName) {\n     // [START getTopicPolicy]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n     if (policy == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicPolicy]\n     return policy;\n@@ -864,14 +903,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicPolicyAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Policy getTopicPolicyAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy getTopicPolicyAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START getTopicPolicyAsync]\n     Future<Policy> future = pubsub.getTopicPolicyAsync(topicName);\n     // ...\n     Policy policy = future.get();\n     if (policy == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicPolicyAsync]\n     return policy;\n@@ -882,12 +922,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceTopicPolicy(String, Policy)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Policy replaceTopicPolicy(String topicName) {\n     // [START replaceTopicPolicy]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     updatedPolicy = pubsub.replaceTopicPolicy(topicName, updatedPolicy);\n     // [END replaceTopicPolicy]\n     return updatedPolicy;\n@@ -898,13 +937,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceTopicPolicyAsync(String, Policy)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Policy replaceTopicPolicyAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy replaceTopicPolicyAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START replaceTopicPolicyAsync]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     Future<Policy> future = pubsub.replaceTopicPolicyAsync(topicName, updatedPolicy);\n     // ...\n     updatedPolicy = future.get();\n@@ -917,6 +954,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET testTopicPermissions(String, List)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public List<Boolean> testTopicPermissions(String topicName) {\n     // [START testTopicPermissions]\n     List<String> permissions = new LinkedList<>();\n@@ -931,8 +969,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET testTopicPermissionsAsync(String, List)]\n   // [VARIABLE \"my_topic_name\"]\n-  public List<Boolean> testTopicPermissionsAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<Boolean> testTopicPermissionsAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START testTopicPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.topics.get\");\n@@ -948,11 +986,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionPolicy(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Policy getSubscriptionPolicy(String subscriptionName) {\n     // [START getSubscriptionPolicy]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n     if (policy == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionPolicy]\n     return policy;\n@@ -963,14 +1003,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionPolicyAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Policy getSubscriptionPolicyAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy getSubscriptionPolicyAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START getSubscriptionPolicyAsync]\n     Future<Policy> future = pubsub.getSubscriptionPolicyAsync(subscriptionName);\n     // ...\n     Policy policy = future.get();\n     if (policy == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionPolicyAsync]\n     return policy;\n@@ -981,12 +1022,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceSubscriptionPolicy(String, Policy)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Policy replaceSubscriptionPolicy(String subscriptionName) {\n     // [START replaceSubscriptionPolicy]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     updatedPolicy = pubsub.replaceSubscriptionPolicy(subscriptionName, updatedPolicy);\n     // [END replaceSubscriptionPolicy]\n     return updatedPolicy;\n@@ -997,15 +1037,12 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceSubscriptionPolicyAsync(String, Policy)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Policy replaceSubscriptionPolicyAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy replaceSubscriptionPolicyAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START replaceSubscriptionPolicyAsync]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n-    Future<Policy> future =\n-        pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n+    Future<Policy> future = pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n     // ...\n     updatedPolicy = future.get();\n     // [END replaceSubscriptionPolicyAsync]\n@@ -1017,12 +1054,12 @@ public class PubSubSnippets {\n    */\n   // [TARGET testSubscriptionPermissions(String, List)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public List<Boolean> testSubscriptionPermissions(String subscriptionName) {\n     // [START testSubscriptionPermissions]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n-    List<Boolean> testedPermissions =\n-        pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n+    List<Boolean> testedPermissions = pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n     // [END testSubscriptionPermissions]\n     return testedPermissions;\n   }\n@@ -1033,16 +1070,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET testSubscriptionPermissionsAsync(String, List)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START testSubscriptionPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n-    Future<List<Boolean>> future =\n-        pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n+    Future<List<Boolean>> future = pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n     // ...\n     List<Boolean> testedPermissions = future.get();\n     // [END testSubscriptionPermissionsAsync]\n     return testedPermissions;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 140
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "422",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "422",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "700",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.converter.child.multi.instance;\n\nimport static java.util.Arrays.asList;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/700/MultiInstanceParser.java\nindex e02d5a936c7..f372bf2e3c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/700/MultiInstanceParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static java.util.Arrays.asList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/700/MultiInstanceParser.java\nindex e02d5a936c7..194dd302d87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/700/MultiInstanceParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static java.util.Arrays.asList;\n@@ -33,12 +34,12 @@ public class MultiInstanceParser extends BaseChildElementParser {\n \n     public MultiInstanceParser() {\n         this(asList(new LoopCardinalityParser(),\n-            new MultiInstanceDataInputParser(),\n-            new MultiInstanceInputDataItemParser(),\n-            new MultiInstanceCompletionConditionParser(),\n-            new LoopDataOutputRefParser(),\n-            new MultiInstanceOutputDataItemParser(),\n-            new MultiInstanceAttributesParser()\n+                new MultiInstanceDataInputParser(),\n+                new MultiInstanceInputDataItemParser(),\n+                new MultiInstanceCompletionConditionParser(),\n+                new LoopDataOutputRefParser(),\n+                new MultiInstanceOutputDataItemParser(),\n+                new MultiInstanceAttributesParser()\n         ));\n     }\n \n@@ -65,15 +66,15 @@ public class MultiInstanceParser extends BaseChildElementParser {\n     }\n \n     private void parseMultiInstanceProperties(XMLStreamReader xtr,\n-        MultiInstanceLoopCharacteristics multiInstanceDef) {\n+                                              MultiInstanceLoopCharacteristics multiInstanceDef) {\n         boolean readyWithMultiInstance = false;\n         try {\n             do {\n                 ElementParser<MultiInstanceLoopCharacteristics> matchingParser = multiInstanceElementParsers\n-                    .stream()\n-                    .filter(elementParser -> elementParser.canParseCurrentElement(xtr))\n-                    .findFirst()\n-                    .orElse(null);\n+                        .stream()\n+                        .filter(elementParser -> elementParser.canParseCurrentElement(xtr))\n+                        .findFirst()\n+                        .orElse(null);\n                 if (matchingParser != null) {\n                     matchingParser.setInformation(xtr, multiInstanceDef);\n                 }\n@@ -86,7 +87,7 @@ public class MultiInstanceParser extends BaseChildElementParser {\n             } while (!readyWithMultiInstance && xtr.hasNext());\n         } catch (Exception e) {\n             LOGGER.warn(\"Error parsing multi instance definition\",\n-                        e);\n+                    e);\n         }\n     }\n \n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/700/MultiInstanceParser.java\nindex e02d5a936c7..cd127b1a7a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/700/MultiInstanceParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static java.util.Arrays.asList;\n@@ -33,13 +34,12 @@ public class MultiInstanceParser extends BaseChildElementParser {\n \n     public MultiInstanceParser() {\n         this(asList(new LoopCardinalityParser(),\n-            new MultiInstanceDataInputParser(),\n-            new MultiInstanceInputDataItemParser(),\n-            new MultiInstanceCompletionConditionParser(),\n-            new LoopDataOutputRefParser(),\n-            new MultiInstanceOutputDataItemParser(),\n-            new MultiInstanceAttributesParser()\n-        ));\n+                new MultiInstanceDataInputParser(),\n+                new MultiInstanceInputDataItemParser(),\n+                new MultiInstanceCompletionConditionParser(),\n+                new LoopDataOutputRefParser(),\n+                new MultiInstanceOutputDataItemParser(),\n+                new MultiInstanceAttributesParser()));\n     }\n \n     public MultiInstanceParser(List<ElementParser<MultiInstanceLoopCharacteristics>> multiInstanceElementParsers) {\n@@ -53,24 +53,21 @@ public class MultiInstanceParser extends BaseChildElementParser {\n     public void parseChildElement(XMLStreamReader xtr,\n                                   BaseElement parentElement,\n                                   BpmnModel model) throws Exception {\n-        if (!(parentElement instanceof Activity)) {\n+  if (!(parentElement instanceof Activity)) {\n             return;\n         }\n         MultiInstanceLoopCharacteristics multiInstanceDef = new MultiInstanceLoopCharacteristics();\n         BpmnXMLUtil.addXMLLocation(multiInstanceDef, xtr);\n \n         parseMultiInstanceProperties(xtr, multiInstanceDef);\n-\n-        ((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n+((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n     }\n \n-    private void parseMultiInstanceProperties(XMLStreamReader xtr,\n-        MultiInstanceLoopCharacteristics multiInstanceDef) {\n-        boolean readyWithMultiInstance = false;\n+    private void parseMultiInstanceProperties(XMLStreamReader xtr, MultiInstanceLoopCharacteristics multiInstanceDef) {\n+  boolean readyWithMultiInstance = false;\n         try {\n             do {\n-                ElementParser<MultiInstanceLoopCharacteristics> matchingParser = multiInstanceElementParsers\n-                    .stream()\n+                ElementParser<MultiInstanceLoopCharacteristics> matchingParser = multiInstanceElementParsers.stream()\n                     .filter(elementParser -> elementParser.canParseCurrentElement(xtr))\n                     .findFirst()\n                     .orElse(null);\n@@ -85,9 +82,8 @@ public class MultiInstanceParser extends BaseChildElementParser {\n                 }\n             } while (!readyWithMultiInstance && xtr.hasNext());\n         } catch (Exception e) {\n-            LOGGER.warn(\"Error parsing multi instance definition\",\n-                        e);\n-        }\n+            LOGGER.warn(\"Error parsing multi instance definition\", e);\n+    }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 277).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/700/MultiInstanceParser.java\nindex e02d5a936c7..29d37616595 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/700/MultiInstanceParser.java\n@@ -16,7 +16,6 @@\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static java.util.Arrays.asList;\n-\n import java.util.List;\n import javax.xml.stream.XMLStreamReader;\n import org.activiti.bpmn.converter.child.BaseChildElementParser;\n@@ -27,67 +26,52 @@ import org.activiti.bpmn.model.BaseElement;\n import org.activiti.bpmn.model.BpmnModel;\n import org.activiti.bpmn.model.MultiInstanceLoopCharacteristics;\n \n-public class MultiInstanceParser extends BaseChildElementParser {\n-\n-    private final List<ElementParser<MultiInstanceLoopCharacteristics>> multiInstanceElementParsers;\n \n-    public MultiInstanceParser() {\n-        this(asList(new LoopCardinalityParser(),\n-            new MultiInstanceDataInputParser(),\n-            new MultiInstanceInputDataItemParser(),\n-            new MultiInstanceCompletionConditionParser(),\n-            new LoopDataOutputRefParser(),\n-            new MultiInstanceOutputDataItemParser(),\n-            new MultiInstanceAttributesParser()\n-        ));\n-    }\n+public class MultiInstanceParser extends BaseChildElementParser {\n \n-    public MultiInstanceParser(List<ElementParser<MultiInstanceLoopCharacteristics>> multiInstanceElementParsers) {\n-        this.multiInstanceElementParsers = multiInstanceElementParsers;\n-    }\n+  private final List<ElementParser<MultiInstanceLoopCharacteristics>> multiInstanceElementParsers;\n \n-    public String getElementName() {\n-        return ELEMENT_MULTIINSTANCE;\n-    }\n+  public MultiInstanceParser() {\n+    this(asList(new LoopCardinalityParser(), new MultiInstanceDataInputParser(), new MultiInstanceInputDataItemParser(), new MultiInstanceCompletionConditionParser(), new LoopDataOutputRefParser(), new MultiInstanceOutputDataItemParser(), new MultiInstanceAttributesParser()));\n+  }\n \n-    public void parseChildElement(XMLStreamReader xtr,\n-                                  BaseElement parentElement,\n-                                  BpmnModel model) throws Exception {\n-        if (!(parentElement instanceof Activity)) {\n-            return;\n-        }\n-        MultiInstanceLoopCharacteristics multiInstanceDef = new MultiInstanceLoopCharacteristics();\n-        BpmnXMLUtil.addXMLLocation(multiInstanceDef, xtr);\n+  public MultiInstanceParser(List<ElementParser<MultiInstanceLoopCharacteristics>> multiInstanceElementParsers) {\n+    this.multiInstanceElementParsers = multiInstanceElementParsers;\n+  }\n \n-        parseMultiInstanceProperties(xtr, multiInstanceDef);\n+  public String getElementName() {\n+    return ELEMENT_MULTIINSTANCE;\n+  }\n \n-        ((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n+  public void parseChildElement(XMLStreamReader xtr, BaseElement parentElement, BpmnModel model) throws Exception {\n+    if (!(parentElement instanceof Activity)) {\n+      return;\n     }\n \n-    private void parseMultiInstanceProperties(XMLStreamReader xtr,\n-        MultiInstanceLoopCharacteristics multiInstanceDef) {\n-        boolean readyWithMultiInstance = false;\n-        try {\n-            do {\n-                ElementParser<MultiInstanceLoopCharacteristics> matchingParser = multiInstanceElementParsers\n-                    .stream()\n-                    .filter(elementParser -> elementParser.canParseCurrentElement(xtr))\n-                    .findFirst()\n-                    .orElse(null);\n-                if (matchingParser != null) {\n-                    matchingParser.setInformation(xtr, multiInstanceDef);\n-                }\n-                if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n-                    readyWithMultiInstance = true;\n-                }\n-                if (xtr.hasNext()) {\n-                    xtr.next();\n-                }\n-            } while (!readyWithMultiInstance && xtr.hasNext());\n-        } catch (Exception e) {\n-            LOGGER.warn(\"Error parsing multi instance definition\",\n-                        e);\n+    MultiInstanceLoopCharacteristics multiInstanceDef = new MultiInstanceLoopCharacteristics();\n+    BpmnXMLUtil.addXMLLocation(multiInstanceDef, xtr);\n+    parseMultiInstanceProperties(xtr, multiInstanceDef);\n+    ((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n+  }\n+\n+  private void parseMultiInstanceProperties(XMLStreamReader xtr, MultiInstanceLoopCharacteristics multiInstanceDef) {\n+    boolean readyWithMultiInstance = false;\n+    try {\n+      do {\n+        ElementParser<MultiInstanceLoopCharacteristics> matchingParser = multiInstanceElementParsers.stream().filter(elementParser -> elementParser.canParseCurrentElement(xtr)).findFirst().orElse(null);\n+        if (matchingParser != null) {\n+          matchingParser.setInformation(xtr, multiInstanceDef);\n         }\n+        if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n+          readyWithMultiInstance = true;\n+        }\n+        if (xtr.hasNext()) {\n+          xtr.next();\n+        }\n+      } while (!readyWithMultiInstance && xtr.hasNext());\n+    } catch (Exception e) {\n+      LOGGER.warn(\"Error parsing multi instance definition\",\n+                  e);\n     }\n-\n-}\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 69
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/700/MultiInstanceParser.java\nindex e02d5a936c7..f372bf2e3c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/700/MultiInstanceParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static java.util.Arrays.asList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/700/MultiInstanceParser.java\nindex e02d5a936c7..f372bf2e3c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/700/MultiInstanceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/700/MultiInstanceParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static java.util.Arrays.asList;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
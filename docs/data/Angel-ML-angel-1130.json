{
    "project_name": "Angel-ML-angel",
    "error_id": "1130",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1130/TDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1130/TDoubleMatrix.java\nindex 538d755c5c1..2043f198039 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1130/TDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1130/TDoubleMatrix.java\n@@ -80,4 +80,4 @@ public abstract class TDoubleMatrix extends TMatrix {\n     return getTDoubleVector(rowId);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1130/TDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1130/TDoubleMatrix.java\nindex 538d755c5c1..8f33f3f89b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1130/TDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1130/TDoubleMatrix.java\n@@ -23,6 +23,7 @@ import com.tencent.angel.ml.math.TVector;\n /**\n  * The double matrix.\n  */\n+\n public abstract class TDoubleMatrix extends TMatrix {\n \n   /**\n@@ -31,6 +32,7 @@ public abstract class TDoubleMatrix extends TMatrix {\n    * @param row the row\n    * @param col the col\n    */\n+\n   public TDoubleMatrix(int row, int col) {\n     super(row, col);\n   }\n@@ -42,6 +44,7 @@ public abstract class TDoubleMatrix extends TMatrix {\n    * @param colId the col id\n    * @param value the value\n    */\n+\n   public abstract void inc(int rowId, int colId, double value);\n \n   /**\n@@ -49,6 +52,7 @@ public abstract class TDoubleMatrix extends TMatrix {\n    *\n    * @param other the other\n    */\n+\n   public abstract void plusBy(TDoubleMatrix other);\n \n   /**\n@@ -56,6 +60,7 @@ public abstract class TDoubleMatrix extends TMatrix {\n    *\n    * @param other the other\n    */\n+\n   public abstract void plusBy(TDoubleVector other);\n \n   /**\n@@ -65,6 +70,7 @@ public abstract class TDoubleMatrix extends TMatrix {\n    * @param colId the col id\n    * @return the value\n    */\n+\n   public abstract double get(int rowId, int colId);\n \n   /**\n@@ -73,6 +79,7 @@ public abstract class TDoubleMatrix extends TMatrix {\n    * @param rowId the row id\n    * @return the vector\n    */\n+\n   public abstract TDoubleVector getTDoubleVector(int rowId);\n \n   @Override\n@@ -80,4 +87,4 @@ public abstract class TDoubleMatrix extends TMatrix {\n     return getTDoubleVector(rowId);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
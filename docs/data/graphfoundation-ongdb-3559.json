{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3559",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3559/ElectionContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3559/ElectionContextImpl.java\nindex 347b90aaf2b..cbe9e7712b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3559/ElectionContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3559/ElectionContextImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context;\n \n import java.util.ArrayList;\n@@ -49,358 +50,357 @@ import static org.neo4j.helpers.collection.Iterables.filter;\n import static org.neo4j.helpers.collection.Iterables.map;\n \n public class ElectionContextImpl\n-        extends AbstractContextImpl\n-        implements ElectionContext, HeartbeatListener\n+    extends AbstractContextImpl\n+    implements ElectionContext, HeartbeatListener\n {\n-    private final ClusterContext clusterContext;\n-    private final HeartbeatContext heartbeatContext;\n+  private final ClusterContext clusterContext;\n+  private final HeartbeatContext heartbeatContext;\n+\n+  private final List<ElectionRole> roles;\n+  private final Map<String, Election> elections;\n+  private final ElectionCredentialsProvider electionCredentialsProvider;\n+\n+  ElectionContextImpl(org.neo4j.cluster.InstanceId me, CommonContextState commonState,\n+                      LogProvider logging,\n+                      Timeouts timeouts, Iterable<ElectionRole> roles, ClusterContext clusterContext,\n+                      HeartbeatContext heartbeatContext, ElectionCredentialsProvider electionCredentialsProvider)\n+  {\n+    super(me, commonState, logging, timeouts);\n+    this.electionCredentialsProvider = electionCredentialsProvider;\n+    this.roles = new ArrayList<>(asList(roles));\n+    this.elections = new HashMap<>();\n+    this.clusterContext = clusterContext;\n+    this.heartbeatContext = heartbeatContext;\n+\n+    heartbeatContext.addHeartbeatListener(this);\n+  }\n+\n+  ElectionContextImpl(InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts,\n+                      ClusterContext clusterContext, HeartbeatContext heartbeatContext, List<ElectionRole> roles,\n+                      Map<String, Election> elections, ElectionCredentialsProvider electionCredentialsProvider)\n+  {\n+    super(me, commonState, logging, timeouts);\n+    this.clusterContext = clusterContext;\n+    this.heartbeatContext = heartbeatContext;\n+    this.roles = roles;\n+    this.elections = elections;\n+    this.electionCredentialsProvider = electionCredentialsProvider;\n+\n+    heartbeatContext.addHeartbeatListener(this);\n+  }\n+\n+  @Override\n+  public void created()\n+  {\n+    for (ElectionRole role : roles)\n+    {\n+      // Elect myself for all roles\n+      clusterContext.elected(role.getName(), clusterContext.getMyId(), clusterContext.getMyId(), 1);\n+    }\n+  }\n+\n+  @Override\n+  public List<ElectionRole> getPossibleRoles()\n+  {\n+    return roles;\n+  }\n+\n+  /*\n+   * Removes all roles from the provided node. This is expected to be the first call when receiving a demote\n+   * message for a node, since it is the way to ensure that election will happen for each role that node had\n+   */\n+  @Override\n+  public void nodeFailed(org.neo4j.cluster.InstanceId node)\n+  {\n+    Iterable<String> rolesToDemote = getRoles(node);\n+    for (String role : rolesToDemote)\n+    {\n+      clusterContext.getConfiguration().removeElected(role);\n+    }\n+  }\n+\n+  @Override\n+  public Iterable<String> getRoles(org.neo4j.cluster.InstanceId server)\n+  {\n+    return clusterContext.getConfiguration().getRolesOf(server);\n+  }\n+\n+  public ClusterContext getClusterContext()\n+  {\n+    return clusterContext;\n+  }\n+\n+  public HeartbeatContext getHeartbeatContext()\n+  {\n+    return heartbeatContext;\n+  }\n+\n+  @Override\n+  public boolean isElectionProcessInProgress(String role)\n+  {\n+    return elections.containsKey(role);\n+  }\n+\n+  @Override\n+  public void startElectionProcess(String role)\n+  {\n+    clusterContext.getLog(getClass()).info(\"Doing elections for role \" + role);\n+    if (!clusterContext.getMyId().equals(clusterContext.getLastElector()))\n+    {\n+      clusterContext.setLastElector(clusterContext.getMyId());\n+    }\n+    elections.put(role, new Election(new DefaultWinnerStrategy(clusterContext)));\n+  }\n+\n+  @Override\n+  public boolean voted(String role, org.neo4j.cluster.InstanceId suggestedNode,\n+                       ElectionCredentials suggestionCredentials, long electionVersion)\n+  {\n+    if (!isElectionProcessInProgress(role) ||\n+        (electionVersion != -1 && electionVersion < clusterContext.getLastElectorVersion()))\n+    {\n+      return false;\n+    }\n+    Map<org.neo4j.cluster.InstanceId, Vote> votes = elections.get(role).getVotes();\n+    votes.put(suggestedNode, new Vote(suggestedNode, suggestionCredentials));\n+    return true;\n+  }\n+\n+  @Override\n+  public org.neo4j.cluster.InstanceId getElectionWinner(String role)\n+  {\n+    Election election = elections.get(role);\n+    if (election == null || election.getVotes().size() != getNeededVoteCount())\n+    {\n+      return null;\n+    }\n+\n+    elections.remove(role);\n+\n+    return election.pickWinner();\n+  }\n+\n+  @Override\n+  public ElectionCredentials getCredentialsForRole(String role)\n+  {\n+    return electionCredentialsProvider.getCredentials(role);\n+  }\n+\n+  @Override\n+  public int getVoteCount(String role)\n+  {\n+    Election election = elections.get(role);\n+    if (election != null)\n+    {\n+      Map<org.neo4j.cluster.InstanceId, Vote> voteList = election.getVotes();\n+      if (voteList == null)\n+      {\n+        return 0;\n+      }\n+\n+      return voteList.size();\n+    } else\n+    {\n+      return 0;\n+    }\n+  }\n+\n+  @Override\n+  public int getNeededVoteCount()\n+  {\n+    return clusterContext.getConfiguration().getMembers().size() - heartbeatContext.getFailed().size();\n+    // TODO increment election epoch\n+  }\n+\n+  @Override\n+  public void forgetElection(String role)\n+  {\n+    elections.remove(role);\n+    clusterContext.setLastElectorVersion(clusterContext.getLastElectorVersion() + 1);\n+  }\n+\n+  @Override\n+  public Iterable<String> getRolesRequiringElection()\n+  {\n+    return filter(role -> clusterContext.getConfiguration().getElected(role) == null,\n+        map(ElectionRole::getName, roles));\n+  }\n+\n+  @Override\n+  public boolean electionOk()\n+  {\n+    int total = clusterContext.getConfiguration().getMembers().size();\n+    int available = total - heartbeatContext.getFailed().size();\n+    return isQuorum(available, total);\n+  }\n \n-    private final List<ElectionRole> roles;\n-    private final Map<String, Election> elections;\n-    private final ElectionCredentialsProvider electionCredentialsProvider;\n+  @Override\n+  public boolean isInCluster()\n+  {\n+    return clusterContext.isInCluster();\n+  }\n \n-    ElectionContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState,\n-                         LogProvider logging,\n-                         Timeouts timeouts, Iterable<ElectionRole> roles, ClusterContext clusterContext,\n-                         HeartbeatContext heartbeatContext, ElectionCredentialsProvider electionCredentialsProvider )\n-    {\n-        super( me, commonState, logging, timeouts );\n-        this.electionCredentialsProvider = electionCredentialsProvider;\n-        this.roles = new ArrayList<>( asList( roles ) );\n-        this.elections = new HashMap<>();\n-        this.clusterContext = clusterContext;\n-        this.heartbeatContext = heartbeatContext;\n-\n-        heartbeatContext.addHeartbeatListener( this );\n-    }\n+  @Override\n+  public Iterable<org.neo4j.cluster.InstanceId> getAlive()\n+  {\n+    return heartbeatContext.getAlive();\n+  }\n \n-    ElectionContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts,\n-                         ClusterContext clusterContext, HeartbeatContext heartbeatContext, List<ElectionRole> roles,\n-                         Map<String, Election> elections, ElectionCredentialsProvider electionCredentialsProvider )\n-    {\n-        super( me, commonState, logging, timeouts );\n-        this.clusterContext = clusterContext;\n-        this.heartbeatContext = heartbeatContext;\n-        this.roles = roles;\n-        this.elections = elections;\n-        this.electionCredentialsProvider = electionCredentialsProvider;\n-\n-        heartbeatContext.addHeartbeatListener( this );\n-    }\n+  @Override\n+  public org.neo4j.cluster.InstanceId getMyId()\n+  {\n+    return clusterContext.getMyId();\n+  }\n+\n+  @Override\n+  public boolean isElector()\n+  {\n+    // Only the first *alive* server should try elections. Everyone else waits\n+    // This also takes into account the instances reported by the cluster join response as failed, to\n+    // cover for the case where we just joined and our suspicions are not reliable yet.\n+    List<org.neo4j.cluster.InstanceId> aliveInstances = asList(getAlive());\n+    aliveInstances.removeAll(getFailed());\n+    Collections.sort(aliveInstances);\n+    // Either we are the first one or the only one\n+    return aliveInstances.indexOf(getMyId()) == 0 || aliveInstances.isEmpty();\n+  }\n \n-    @Override\n-    public void created()\n-    {\n-        for ( ElectionRole role : roles )\n-        {\n-            // Elect myself for all roles\n-            clusterContext.elected( role.getName(), clusterContext.getMyId(), clusterContext.getMyId(), 1 );\n-        }\n-    }\n+  @Override\n+  public boolean isFailed(org.neo4j.cluster.InstanceId key)\n+  {\n+    return heartbeatContext.getFailed().contains(key);\n+  }\n \n-    @Override\n-    public List<ElectionRole> getPossibleRoles()\n-    {\n-        return roles;\n-    }\n+  @Override\n+  public org.neo4j.cluster.InstanceId getElected(String roleName)\n+  {\n+    return clusterContext.getConfiguration().getElected(roleName);\n+  }\n \n-    /*\n-     * Removes all roles from the provided node. This is expected to be the first call when receiving a demote\n-     * message for a node, since it is the way to ensure that election will happen for each role that node had\n-     */\n-    @Override\n-    public void nodeFailed( org.neo4j.cluster.InstanceId node )\n-    {\n-        Iterable<String> rolesToDemote = getRoles( node );\n-        for ( String role : rolesToDemote )\n-        {\n-            clusterContext.getConfiguration().removeElected( role );\n-        }\n-    }\n+  @Override\n+  public boolean hasCurrentlyElectedVoted(String role, org.neo4j.cluster.InstanceId currentElected)\n+  {\n+    return elections.containsKey(role) && elections.get(role).getVotes().containsKey(currentElected);\n+  }\n \n-    @Override\n-    public Iterable<String> getRoles( org.neo4j.cluster.InstanceId server )\n-    {\n-        return clusterContext.getConfiguration().getRolesOf( server );\n-    }\n+  @Override\n+  public Set<InstanceId> getFailed()\n+  {\n+    return heartbeatContext.getFailed();\n+  }\n \n-    public ClusterContext getClusterContext()\n-    {\n-        return clusterContext;\n-    }\n+  public ElectionContextImpl snapshot(CommonContextState commonStateSnapshot, LogProvider logging, Timeouts timeouts,\n+                                      ClusterContextImpl snapshotClusterContext,\n+                                      HeartbeatContextImpl snapshotHeartbeatContext,\n+                                      ElectionCredentialsProvider credentialsProvider)\n \n-    public HeartbeatContext getHeartbeatContext()\n+  {\n+    Map<String, Election> electionsSnapshot = new HashMap<>();\n+    for (Map.Entry<String, Election> election : elections.entrySet())\n     {\n-        return heartbeatContext;\n+      electionsSnapshot.put(election.getKey(), election.getValue().snapshot());\n     }\n \n-    @Override\n-    public boolean isElectionProcessInProgress( String role )\n-    {\n-        return elections.containsKey( role );\n-    }\n+    return new ElectionContextImpl(me, commonStateSnapshot, logging, timeouts, snapshotClusterContext,\n+        snapshotHeartbeatContext, new ArrayList<>(roles), electionsSnapshot, credentialsProvider);\n+  }\n \n-    @Override\n-    public void startElectionProcess( String role )\n-    {\n-        clusterContext.getLog( getClass() ).info( \"Doing elections for role \" + role );\n-        if ( !clusterContext.getMyId().equals( clusterContext.getLastElector() ) )\n-        {\n-            clusterContext.setLastElector( clusterContext.getMyId() );\n-        }\n-        elections.put( role, new Election( new DefaultWinnerStrategy( clusterContext ) ) );\n-    }\n+  private static class Election\n+  {\n+    private final WinnerStrategy winnerStrategy;\n+    private final Map<org.neo4j.cluster.InstanceId, Vote> votes;\n \n-    @Override\n-    public boolean voted( String role, org.neo4j.cluster.InstanceId suggestedNode,\n-                          ElectionCredentials suggestionCredentials, long electionVersion )\n+    private Election(WinnerStrategy winnerStrategy)\n     {\n-        if ( !isElectionProcessInProgress( role ) ||\n-                (electionVersion != -1 && electionVersion < clusterContext.getLastElectorVersion() ) )\n-        {\n-            return false;\n-        }\n-        Map<org.neo4j.cluster.InstanceId, Vote> votes = elections.get( role ).getVotes();\n-        votes.put( suggestedNode, new Vote( suggestedNode, suggestionCredentials ) );\n-        return true;\n+      this.winnerStrategy = winnerStrategy;\n+      this.votes = new HashMap<>();\n     }\n \n-    @Override\n-    public org.neo4j.cluster.InstanceId getElectionWinner( String role )\n+    private Election(WinnerStrategy winnerStrategy, HashMap<InstanceId, Vote> votes)\n     {\n-        Election election = elections.get( role );\n-        if ( election == null || election.getVotes().size() != getNeededVoteCount() )\n-        {\n-            return null;\n-        }\n-\n-        elections.remove( role );\n-\n-        return election.pickWinner();\n+      this.votes = votes;\n+      this.winnerStrategy = winnerStrategy;\n     }\n \n-    @Override\n-    public ElectionCredentials getCredentialsForRole( String role )\n+    public Map<InstanceId, Vote> getVotes()\n     {\n-        return electionCredentialsProvider.getCredentials( role );\n+      return votes;\n     }\n \n-    @Override\n-    public int getVoteCount( String role )\n+    public InstanceId pickWinner()\n     {\n-        Election election = elections.get( role );\n-        if ( election != null )\n-        {\n-            Map<org.neo4j.cluster.InstanceId, Vote> voteList = election.getVotes();\n-            if ( voteList == null )\n-            {\n-                return 0;\n-            }\n-\n-            return voteList.size();\n-        }\n-        else\n-        {\n-            return 0;\n-        }\n+      return winnerStrategy.pickWinner(votes.values());\n     }\n \n-    @Override\n-    public int getNeededVoteCount()\n+    public Election snapshot()\n     {\n-        return clusterContext.getConfiguration().getMembers().size() - heartbeatContext.getFailed().size();\n-        // TODO increment election epoch\n+      return new Election(winnerStrategy, new HashMap<>(votes));\n     }\n+  }\n \n-    @Override\n-    public void forgetElection( String role )\n-    {\n-        elections.remove( role );\n-        clusterContext.setLastElectorVersion( clusterContext.getLastElectorVersion() + 1 );\n-    }\n+  @Override\n+  public ClusterMessage.VersionedConfigurationStateChange newConfigurationStateChange()\n+  {\n+    ClusterMessage.VersionedConfigurationStateChange result = new ClusterMessage\n+        .VersionedConfigurationStateChange();\n+    result.setElector(clusterContext.getMyId());\n+    result.setVersion(clusterContext.getLastElectorVersion());\n+    return result;\n+  }\n \n-    @Override\n-    public Iterable<String> getRolesRequiringElection()\n-    {\n-        return filter( role -> clusterContext.getConfiguration().getElected( role ) == null,\n-                map( ElectionRole::getName, roles ) );\n-    }\n+  @Override\n+  public VoteRequest voteRequestForRole(ElectionRole role)\n+  {\n+    return new VoteRequest(role.getName(), clusterContext.getLastElectorVersion());\n+  }\n \n-    @Override\n-    public boolean electionOk()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        int total = clusterContext.getConfiguration().getMembers().size();\n-        int available = total - heartbeatContext.getFailed().size();\n-        return isQuorum( available, total );\n+      return true;\n     }\n-\n-    @Override\n-    public boolean isInCluster()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return clusterContext.isInCluster();\n+      return false;\n     }\n \n-    @Override\n-    public Iterable<org.neo4j.cluster.InstanceId> getAlive()\n-    {\n-        return heartbeatContext.getAlive();\n-    }\n+    ElectionContextImpl that = (ElectionContextImpl) o;\n \n-    @Override\n-    public org.neo4j.cluster.InstanceId getMyId()\n+    if (elections != null ? !elections.equals(that.elections) : that.elections != null)\n     {\n-        return clusterContext.getMyId();\n+      return false;\n     }\n+    return roles != null ? roles.equals(that.roles) : that.roles == null;\n+  }\n \n-    @Override\n-    public boolean isElector()\n-    {\n-        // Only the first *alive* server should try elections. Everyone else waits\n-        // This also takes into account the instances reported by the cluster join response as failed, to\n-        // cover for the case where we just joined and our suspicions are not reliable yet.\n-        List<org.neo4j.cluster.InstanceId> aliveInstances = asList( getAlive() );\n-        aliveInstances.removeAll( getFailed() );\n-        Collections.sort( aliveInstances );\n-        // Either we are the first one or the only one\n-        return aliveInstances.indexOf( getMyId() ) == 0 || aliveInstances.isEmpty();\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = roles != null ? roles.hashCode() : 0;\n+    result = 31 * result + (elections != null ? elections.hashCode() : 0);\n+    return result;\n+  }\n \n-    @Override\n-    public boolean isFailed( org.neo4j.cluster.InstanceId key )\n+  @Override\n+  public void failed(org.neo4j.cluster.InstanceId server)\n+  {\n+    for (Map.Entry<String, Election> ongoingElection : elections.entrySet())\n     {\n-        return heartbeatContext.getFailed().contains( key );\n+      ongoingElection.getValue().getVotes().remove(server);\n     }\n+  }\n \n-    @Override\n-    public org.neo4j.cluster.InstanceId getElected( String roleName )\n-    {\n-        return clusterContext.getConfiguration().getElected( roleName );\n-    }\n+  @Override\n+  public void alive(org.neo4j.cluster.InstanceId server)\n+  {\n+    // Not needed\n+  }\n \n-    @Override\n-    public boolean hasCurrentlyElectedVoted( String role, org.neo4j.cluster.InstanceId currentElected )\n-    {\n-        return elections.containsKey( role ) && elections.get(role).getVotes().containsKey( currentElected );\n-    }\n-\n-    @Override\n-    public Set<InstanceId> getFailed()\n-    {\n-        return heartbeatContext.getFailed();\n-    }\n-\n-    public ElectionContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging, Timeouts timeouts,\n-                                         ClusterContextImpl snapshotClusterContext,\n-                                         HeartbeatContextImpl snapshotHeartbeatContext,\n-                                         ElectionCredentialsProvider credentialsProvider )\n-\n-    {\n-        Map<String,Election> electionsSnapshot = new HashMap<>();\n-        for ( Map.Entry<String,Election> election : elections.entrySet() )\n-        {\n-            electionsSnapshot.put( election.getKey(), election.getValue().snapshot() );\n-        }\n-\n-        return new ElectionContextImpl( me, commonStateSnapshot, logging, timeouts, snapshotClusterContext,\n-                snapshotHeartbeatContext, new ArrayList<>( roles ), electionsSnapshot, credentialsProvider );\n-    }\n-\n-    private static class Election\n-    {\n-        private final WinnerStrategy winnerStrategy;\n-        private final Map<org.neo4j.cluster.InstanceId,Vote> votes;\n-\n-        private Election( WinnerStrategy winnerStrategy )\n-        {\n-            this.winnerStrategy = winnerStrategy;\n-            this.votes = new HashMap<>();\n-        }\n-\n-        private Election( WinnerStrategy winnerStrategy, HashMap<InstanceId,Vote> votes )\n-        {\n-            this.votes = votes;\n-            this.winnerStrategy = winnerStrategy;\n-        }\n-\n-        public Map<InstanceId,Vote> getVotes()\n-        {\n-            return votes;\n-        }\n-\n-        public InstanceId pickWinner()\n-        {\n-            return winnerStrategy.pickWinner( votes.values() );\n-        }\n-\n-        public Election snapshot()\n-        {\n-            return new Election( winnerStrategy, new HashMap<>( votes ) );\n-        }\n-    }\n-\n-    @Override\n-    public ClusterMessage.VersionedConfigurationStateChange newConfigurationStateChange()\n-    {\n-        ClusterMessage.VersionedConfigurationStateChange result = new ClusterMessage\n-                .VersionedConfigurationStateChange();\n-        result.setElector( clusterContext.getMyId() );\n-        result.setVersion( clusterContext.getLastElectorVersion() );\n-        return result;\n-    }\n-\n-    @Override\n-    public VoteRequest voteRequestForRole( ElectionRole role )\n-    {\n-        return new VoteRequest( role.getName(), clusterContext.getLastElectorVersion() );\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        ElectionContextImpl that = (ElectionContextImpl) o;\n-\n-        if ( elections != null ? !elections.equals( that.elections ) : that.elections != null )\n-        {\n-            return false;\n-        }\n-        return roles != null ? roles.equals( that.roles ) : that.roles == null;\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        int result = roles != null ? roles.hashCode() : 0;\n-        result = 31 * result + (elections != null ? elections.hashCode() : 0);\n-        return result;\n-    }\n-\n-    @Override\n-    public void failed( org.neo4j.cluster.InstanceId server )\n-    {\n-        for ( Map.Entry<String, Election> ongoingElection : elections.entrySet() )\n-        {\n-            ongoingElection.getValue().getVotes().remove( server );\n-        }\n-    }\n-\n-    @Override\n-    public void alive( org.neo4j.cluster.InstanceId server )\n-    {\n-        // Not needed\n-    }\n-\n-    public static List<Vote> removeBlankVotes( Collection<Vote> voteList )\n-    {\n-        return asList( filter( item ->\n-                !(item.getCredentials() instanceof NotElectableElectionCredentials), voteList ) );\n-    }\n+  public static List<Vote> removeBlankVotes(Collection<Vote> voteList)\n+  {\n+    return asList(filter(item ->\n+        !(item.getCredentials() instanceof NotElectableElectionCredentials), voteList));\n+  }\n }\n",
            "diff_size": 507
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 293).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3559/ElectionContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3559/ElectionContextImpl.java\nindex 347b90aaf2b..fe67767cd2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3559/ElectionContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3559/ElectionContextImpl.java\n@@ -48,22 +48,19 @@ import static org.neo4j.helpers.collection.Iterables.asList;\n import static org.neo4j.helpers.collection.Iterables.filter;\n import static org.neo4j.helpers.collection.Iterables.map;\n \n-public class ElectionContextImpl\n-        extends AbstractContextImpl\n-        implements ElectionContext, HeartbeatListener\n+public class ElectionContextImpl extends AbstractContextImpl implements ElectionContext, HeartbeatListener\n {\n     private final ClusterContext clusterContext;\n     private final HeartbeatContext heartbeatContext;\n \n     private final List<ElectionRole> roles;\n-    private final Map<String, Election> elections;\n+    private final Map<String,Election> elections;\n     private final ElectionCredentialsProvider electionCredentialsProvider;\n \n-    ElectionContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState,\n-                         LogProvider logging,\n+    ElectionContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState, LogProvider logging,\n                          Timeouts timeouts, Iterable<ElectionRole> roles, ClusterContext clusterContext,\n                          HeartbeatContext heartbeatContext, ElectionCredentialsProvider electionCredentialsProvider )\n-    {\n+{\n         super( me, commonState, logging, timeouts );\n         this.electionCredentialsProvider = electionCredentialsProvider;\n         this.roles = new ArrayList<>( asList( roles ) );\n@@ -74,10 +71,8 @@ public class ElectionContextImpl\n         heartbeatContext.addHeartbeatListener( this );\n     }\n \n-    ElectionContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts,\n-                         ClusterContext clusterContext, HeartbeatContext heartbeatContext, List<ElectionRole> roles,\n-                         Map<String, Election> elections, ElectionCredentialsProvider electionCredentialsProvider )\n-    {\n+    ElectionContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts, ClusterContext clusterContext, HeartbeatContext heartbeatContext, List<ElectionRole> roles, Map<String,Election> elections, ElectionCredentialsProvider electionCredentialsProvider )\n+{\n         super( me, commonState, logging, timeouts );\n         this.clusterContext = clusterContext;\n         this.heartbeatContext = heartbeatContext;\n@@ -152,15 +147,13 @@ public class ElectionContextImpl\n     }\n \n     @Override\n-    public boolean voted( String role, org.neo4j.cluster.InstanceId suggestedNode,\n-                          ElectionCredentials suggestionCredentials, long electionVersion )\n-    {\n-        if ( !isElectionProcessInProgress( role ) ||\n-                (electionVersion != -1 && electionVersion < clusterContext.getLastElectorVersion() ) )\n+    public boolean voted( String role, org.neo4j.cluster.InstanceId suggestedNode, ElectionCredentials suggestionCredentials, long electionVersion )\n+{\n+        if ( !isElectionProcessInProgress( role ) || ( electionVersion != -1 && electionVersion < clusterContext.getLastElectorVersion() ) )\n         {\n             return false;\n         }\n-        Map<org.neo4j.cluster.InstanceId, Vote> votes = elections.get( role ).getVotes();\n+        Map<org.neo4j.cluster.InstanceId,Vote> votes = elections.get( role ).getVotes();\n         votes.put( suggestedNode, new Vote( suggestedNode, suggestionCredentials ) );\n         return true;\n     }\n@@ -175,8 +168,7 @@ public class ElectionContextImpl\n         }\n \n         elections.remove( role );\n-\n-        return election.pickWinner();\n+return election.pickWinner();\n     }\n \n     @Override\n@@ -191,7 +183,7 @@ public class ElectionContextImpl\n         Election election = elections.get( role );\n         if ( election != null )\n         {\n-            Map<org.neo4j.cluster.InstanceId, Vote> voteList = election.getVotes();\n+            Map<org.neo4j.cluster.InstanceId,Vote> voteList = election.getVotes();\n             if ( voteList == null )\n             {\n                 return 0;\n@@ -289,12 +281,10 @@ public class ElectionContextImpl\n         return heartbeatContext.getFailed();\n     }\n \n-    public ElectionContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging, Timeouts timeouts,\n-                                         ClusterContextImpl snapshotClusterContext,\n+    public ElectionContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging, Timeouts timeouts, ClusterContextImpl snapshotClusterContext,\n                                          HeartbeatContextImpl snapshotHeartbeatContext,\n                                          ElectionCredentialsProvider credentialsProvider )\n-\n-    {\n+{\n         Map<String,Election> electionsSnapshot = new HashMap<>();\n         for ( Map.Entry<String,Election> election : elections.entrySet() )\n         {\n@@ -341,9 +331,8 @@ public class ElectionContextImpl\n     @Override\n     public ClusterMessage.VersionedConfigurationStateChange newConfigurationStateChange()\n     {\n-        ClusterMessage.VersionedConfigurationStateChange result = new ClusterMessage\n-                .VersionedConfigurationStateChange();\n-        result.setElector( clusterContext.getMyId() );\n+        ClusterMessage.VersionedConfigurationStateChange result = new ClusterMessage.VersionedConfigurationStateChange();\n+result.setElector( clusterContext.getMyId() );\n         result.setVersion( clusterContext.getLastElectorVersion() );\n         return result;\n     }\n@@ -361,7 +350,8 @@ public class ElectionContextImpl\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -372,21 +362,22 @@ public class ElectionContextImpl\n         {\n             return false;\n         }\n-        return roles != null ? roles.equals( that.roles ) : that.roles == null;\n+\n+return roles != null ? roles.equals( that.roles ) : that.roles == null;\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = roles != null ? roles.hashCode() : 0;\n-        result = 31 * result + (elections != null ? elections.hashCode() : 0);\n+        result = 31 * result + (elections != null ? elections.hashCode() : 0 );\n         return result;\n     }\n \n     @Override\n     public void failed( org.neo4j.cluster.InstanceId server )\n     {\n-        for ( Map.Entry<String, Election> ongoingElection : elections.entrySet() )\n+        for ( Map.Entry<String,Election> ongoingElection : elections.entrySet() )\n         {\n             ongoingElection.getValue().getVotes().remove( server );\n         }\n@@ -400,7 +391,6 @@ public class ElectionContextImpl\n \n     public static List<Vote> removeBlankVotes( Collection<Vote> voteList )\n     {\n-        return asList( filter( item ->\n-                !(item.getCredentials() instanceof NotElectableElectionCredentials), voteList ) );\n+        return asList( filter( item -> !(item.getCredentials() instanceof NotElectableElectionCredentials), voteList ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 283).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 293).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "51",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "150",
                    "column": "78",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "164",
                    "column": "30",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "255",
                    "column": "56",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "273",
                    "column": "45",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 260).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "285",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "291",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "350",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "368",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "375",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3559/ElectionContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3559/ElectionContextImpl.java\nindex 347b90aaf2b..9f8db2d9077 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3559/ElectionContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3559/ElectionContextImpl.java\n@@ -26,7 +26,6 @@ import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-\n import org.neo4j.cluster.InstanceId;\n import org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.DefaultWinnerStrategy;\n import org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.Vote;\n@@ -42,27 +41,23 @@ import org.neo4j.cluster.protocol.heartbeat.HeartbeatContext;\n import org.neo4j.cluster.protocol.heartbeat.HeartbeatListener;\n import org.neo4j.cluster.timeout.Timeouts;\n import org.neo4j.logging.LogProvider;\n-\n import static org.neo4j.cluster.util.Quorums.isQuorum;\n+\n import static org.neo4j.helpers.collection.Iterables.asList;\n+\n import static org.neo4j.helpers.collection.Iterables.filter;\n+\n import static org.neo4j.helpers.collection.Iterables.map;\n \n-public class ElectionContextImpl\n-        extends AbstractContextImpl\n-        implements ElectionContext, HeartbeatListener\n+public class ElectionContextImpl extends AbstractContextImpl implements ElectionContext, HeartbeatListener\n {\n     private final ClusterContext clusterContext;\n     private final HeartbeatContext heartbeatContext;\n-\n     private final List<ElectionRole> roles;\n-    private final Map<String, Election> elections;\n+    private final Map<String,Election> elections;\n     private final ElectionCredentialsProvider electionCredentialsProvider;\n \n-    ElectionContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState,\n-                         LogProvider logging,\n-                         Timeouts timeouts, Iterable<ElectionRole> roles, ClusterContext clusterContext,\n-                         HeartbeatContext heartbeatContext, ElectionCredentialsProvider electionCredentialsProvider )\n+    ElectionContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts, Iterable<ElectionRole> roles, ClusterContext clusterContext, HeartbeatContext heartbeatContext, ElectionCredentialsProvider electionCredentialsProvider )\n     {\n         super( me, commonState, logging, timeouts );\n         this.electionCredentialsProvider = electionCredentialsProvider;\n@@ -70,13 +65,10 @@ public class ElectionContextImpl\n         this.elections = new HashMap<>();\n         this.clusterContext = clusterContext;\n         this.heartbeatContext = heartbeatContext;\n-\n         heartbeatContext.addHeartbeatListener( this );\n     }\n \n-    ElectionContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts,\n-                         ClusterContext clusterContext, HeartbeatContext heartbeatContext, List<ElectionRole> roles,\n-                         Map<String, Election> elections, ElectionCredentialsProvider electionCredentialsProvider )\n+    ElectionContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts, ClusterContext clusterContext, HeartbeatContext heartbeatContext, List<ElectionRole> roles, Map<String,Election> elections, ElectionCredentialsProvider electionCredentialsProvider )\n     {\n         super( me, commonState, logging, timeouts );\n         this.clusterContext = clusterContext;\n@@ -84,14 +76,13 @@ public class ElectionContextImpl\n         this.roles = roles;\n         this.elections = elections;\n         this.electionCredentialsProvider = electionCredentialsProvider;\n-\n         heartbeatContext.addHeartbeatListener( this );\n     }\n \n     @Override\n     public void created()\n     {\n-        for ( ElectionRole role : roles )\n+        for( ElectionRole role : roles)\n         {\n             // Elect myself for all roles\n             clusterContext.elected( role.getName(), clusterContext.getMyId(), clusterContext.getMyId(), 1 );\n@@ -108,11 +99,12 @@ public class ElectionContextImpl\n      * Removes all roles from the provided node. This is expected to be the first call when receiving a demote\n      * message for a node, since it is the way to ensure that election will happen for each role that node had\n      */\n+\n     @Override\n     public void nodeFailed( org.neo4j.cluster.InstanceId node )\n     {\n         Iterable<String> rolesToDemote = getRoles( node );\n-        for ( String role : rolesToDemote )\n+        for( String role : rolesToDemote)\n         {\n             clusterContext.getConfiguration().removeElected( role );\n         }\n@@ -144,23 +136,23 @@ public class ElectionContextImpl\n     public void startElectionProcess( String role )\n     {\n         clusterContext.getLog( getClass() ).info( \"Doing elections for role \" + role );\n-        if ( !clusterContext.getMyId().equals( clusterContext.getLastElector() ) )\n+        if ( ! clusterContext.getMyId().equals( clusterContext.getLastElector() ) )\n         {\n             clusterContext.setLastElector( clusterContext.getMyId() );\n         }\n+\n         elections.put( role, new Election( new DefaultWinnerStrategy( clusterContext ) ) );\n     }\n \n     @Override\n-    public boolean voted( String role, org.neo4j.cluster.InstanceId suggestedNode,\n-                          ElectionCredentials suggestionCredentials, long electionVersion )\n+    public boolean voted( String role, org.neo4j.cluster.InstanceId suggestedNode, ElectionCredentials suggestionCredentials, long electionVersion )\n     {\n-        if ( !isElectionProcessInProgress( role ) ||\n-                (electionVersion != -1 && electionVersion < clusterContext.getLastElectorVersion() ) )\n+        if ( ! isElectionProcessInProgress( role )|| ( electionVersion != - 1&& electionVersion < clusterContext.getLastElectorVersion()) )\n         {\n             return false;\n         }\n-        Map<org.neo4j.cluster.InstanceId, Vote> votes = elections.get( role ).getVotes();\n+\n+        Map<org.neo4j.cluster.InstanceId,Vote> votes = elections.get( role ).getVotes();\n         votes.put( suggestedNode, new Vote( suggestedNode, suggestionCredentials ) );\n         return true;\n     }\n@@ -169,13 +161,12 @@ public class ElectionContextImpl\n     public org.neo4j.cluster.InstanceId getElectionWinner( String role )\n     {\n         Election election = elections.get( role );\n-        if ( election == null || election.getVotes().size() != getNeededVoteCount() )\n+        if ( election == null|| election.getVotes().size() != getNeededVoteCount() )\n         {\n             return null;\n         }\n \n         elections.remove( role );\n-\n         return election.pickWinner();\n     }\n \n@@ -191,7 +182,7 @@ public class ElectionContextImpl\n         Election election = elections.get( role );\n         if ( election != null )\n         {\n-            Map<org.neo4j.cluster.InstanceId, Vote> voteList = election.getVotes();\n+            Map<org.neo4j.cluster.InstanceId,Vote> voteList = election.getVotes();\n             if ( voteList == null )\n             {\n                 return 0;\n@@ -222,8 +213,7 @@ public class ElectionContextImpl\n     @Override\n     public Iterable<String> getRolesRequiringElection()\n     {\n-        return filter( role -> clusterContext.getConfiguration().getElected( role ) == null,\n-                map( ElectionRole::getName, roles ) );\n+        return filter( role -> clusterContext.getConfiguration().getElected( role ) == null, map( ElectionRole::getName, roles ) );\n     }\n \n     @Override\n@@ -262,7 +252,7 @@ public class ElectionContextImpl\n         aliveInstances.removeAll( getFailed() );\n         Collections.sort( aliveInstances );\n         // Either we are the first one or the only one\n-        return aliveInstances.indexOf( getMyId() ) == 0 || aliveInstances.isEmpty();\n+        return aliveInstances.indexOf( getMyId() ) == 0|| aliveInstances.isEmpty();\n     }\n \n     @Override\n@@ -280,7 +270,7 @@ public class ElectionContextImpl\n     @Override\n     public boolean hasCurrentlyElectedVoted( String role, org.neo4j.cluster.InstanceId currentElected )\n     {\n-        return elections.containsKey( role ) && elections.get(role).getVotes().containsKey( currentElected );\n+        return elections.containsKey( role )&& elections.get( role ).getVotes().containsKey( currentElected );\n     }\n \n     @Override\n@@ -289,20 +279,16 @@ public class ElectionContextImpl\n         return heartbeatContext.getFailed();\n     }\n \n-    public ElectionContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging, Timeouts timeouts,\n-                                         ClusterContextImpl snapshotClusterContext,\n-                                         HeartbeatContextImpl snapshotHeartbeatContext,\n-                                         ElectionCredentialsProvider credentialsProvider )\n-\n+    public ElectionContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging, Timeouts timeouts, ClusterContextImpl snapshotClusterContext, HeartbeatContextImpl snapshotHeartbeatContext, ElectionCredentialsProvider credentialsProvider )\n     {\n         Map<String,Election> electionsSnapshot = new HashMap<>();\n-        for ( Map.Entry<String,Election> election : elections.entrySet() )\n+        for( Map.Entry<String,Election> election : elections.entrySet()\n+        )\n         {\n             electionsSnapshot.put( election.getKey(), election.getValue().snapshot() );\n         }\n \n-        return new ElectionContextImpl( me, commonStateSnapshot, logging, timeouts, snapshotClusterContext,\n-                snapshotHeartbeatContext, new ArrayList<>( roles ), electionsSnapshot, credentialsProvider );\n+        return new ElectionContextImpl( me, commonStateSnapshot, logging, timeouts, snapshotClusterContext, snapshotHeartbeatContext, new ArrayList<>( roles ), electionsSnapshot, credentialsProvider );\n     }\n \n     private static class Election\n@@ -341,8 +327,7 @@ public class ElectionContextImpl\n     @Override\n     public ClusterMessage.VersionedConfigurationStateChange newConfigurationStateChange()\n     {\n-        ClusterMessage.VersionedConfigurationStateChange result = new ClusterMessage\n-                .VersionedConfigurationStateChange();\n+        ClusterMessage.VersionedConfigurationStateChange result = new ClusterMessage. VersionedConfigurationStateChange();\n         result.setElector( clusterContext.getMyId() );\n         result.setVersion( clusterContext.getLastElectorVersion() );\n         return result;\n@@ -361,17 +346,18 @@ public class ElectionContextImpl\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+        if ( o == null|| getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         ElectionContextImpl that = (ElectionContextImpl) o;\n-\n-        if ( elections != null ? !elections.equals( that.elections ) : that.elections != null )\n+        if ( elections != null ? ! elections.equals( that.elections ) : that.elections != null )\n         {\n             return false;\n         }\n+\n         return roles != null ? roles.equals( that.roles ) : that.roles == null;\n     }\n \n@@ -379,14 +365,15 @@ public class ElectionContextImpl\n     public int hashCode()\n     {\n         int result = roles != null ? roles.hashCode() : 0;\n-        result = 31 * result + (elections != null ? elections.hashCode() : 0);\n+        result = 31* result + ( elections != null ? elections.hashCode() : 0);\n         return result;\n     }\n \n     @Override\n     public void failed( org.neo4j.cluster.InstanceId server )\n     {\n-        for ( Map.Entry<String, Election> ongoingElection : elections.entrySet() )\n+        for( Map.Entry<String,Election> ongoingElection : elections.entrySet()\n+        )\n         {\n             ongoingElection.getValue().getVotes().remove( server );\n         }\n@@ -400,7 +387,6 @@ public class ElectionContextImpl\n \n     public static List<Vote> removeBlankVotes( Collection<Vote> voteList )\n     {\n-        return asList( filter( item ->\n-                !(item.getCredentials() instanceof NotElectableElectionCredentials), voteList ) );\n+        return asList( filter( item -> ! ( item.getCredentials() instanceof NotElectableElectionCredentials), voteList ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
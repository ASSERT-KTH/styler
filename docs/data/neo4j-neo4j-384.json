{
    "project_name": "neo4j-neo4j",
    "error_id": "384",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/384/RecordIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/384/RecordIdIterator.java\nindex ce9064a9564..3b2a69cd03f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/384/RecordIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/384/RecordIdIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -41,25 +42,25 @@ public interface RecordIdIterator\n      */\n     LongIterator nextBatch();\n \n-    static RecordIdIterator backwards( long lowIncluded, long highExcluded, Configuration config )\n+    static RecordIdIterator backwards(long lowIncluded, long highExcluded, Configuration config)\n     {\n-        return new Backwards( lowIncluded, highExcluded, config );\n+        return new Backwards(lowIncluded, highExcluded, config);\n     }\n \n-    static RecordIdIterator forwards( long lowIncluded, long highExcluded, Configuration config )\n+    static RecordIdIterator forwards(long lowIncluded, long highExcluded, Configuration config)\n     {\n-        return new Forwards( lowIncluded, highExcluded, config );\n+        return new Forwards(lowIncluded, highExcluded, config);\n     }\n \n-    static RecordIdIterator allIn( RecordStore<? extends AbstractBaseRecord> store, Configuration config )\n+    static RecordIdIterator allIn(RecordStore<? extends AbstractBaseRecord> store, Configuration config)\n     {\n-        return forwards( store.getNumberOfReservedLowIds(), store.getHighId(), config );\n+        return forwards(store.getNumberOfReservedLowIds(), store.getHighId(), config);\n     }\n \n-    static RecordIdIterator allInReversed( RecordStore<? extends AbstractBaseRecord> store,\n-            Configuration config )\n+    static RecordIdIterator allInReversed(RecordStore<? extends AbstractBaseRecord> store,\n+                                          Configuration config)\n     {\n-        return backwards( store.getNumberOfReservedLowIds(), store.getHighId(), config );\n+        return backwards(store.getNumberOfReservedLowIds(), store.getHighId(), config);\n     }\n \n     class Forwards implements RecordIdIterator\n@@ -69,7 +70,7 @@ public interface RecordIdIterator\n         private final int batchSize;\n         private long startId;\n \n-        public Forwards( long lowIncluded, long highExcluded, Configuration config )\n+        public Forwards(long lowIncluded, long highExcluded, Configuration config)\n         {\n             this.lowIncluded = lowIncluded;\n             this.highExcluded = highExcluded;\n@@ -80,21 +81,21 @@ public interface RecordIdIterator\n         @Override\n         public LongIterator nextBatch()\n         {\n-            if ( startId >= highExcluded )\n+            if (startId >= highExcluded)\n             {\n                 return null;\n             }\n \n-            long endId = min( highExcluded, findRoofId( startId ) );\n-            final LongIterator result = range( startId, endId - 1 /*excluded*/ );\n+            long endId = min(highExcluded, findRoofId(startId));\n+            final LongIterator result = range(startId, endId - 1 /*excluded*/);\n             startId = endId;\n             return result;\n         }\n \n-        private long findRoofId( long floorId )\n+        private long findRoofId(long floorId)\n         {\n             int rest = (int) (floorId % batchSize);\n-            return max( rest == 0 ? floorId + batchSize : floorId + batchSize - rest, lowIncluded );\n+            return max(rest == 0 ? floorId + batchSize : floorId + batchSize - rest, lowIncluded);\n         }\n \n         @Override\n@@ -111,7 +112,7 @@ public interface RecordIdIterator\n         private final int batchSize;\n         private long endId;\n \n-        public Backwards( long lowIncluded, long highExcluded, Configuration config )\n+        public Backwards(long lowIncluded, long highExcluded, Configuration config)\n         {\n             this.lowIncluded = lowIncluded;\n             this.highExcluded = highExcluded;\n@@ -122,21 +123,21 @@ public interface RecordIdIterator\n         @Override\n         public LongIterator nextBatch()\n         {\n-            if ( endId <= lowIncluded )\n+            if (endId <= lowIncluded)\n             {\n                 return null;\n             }\n \n-            long startId = findFloorId( endId );\n-            final LongIterator result = range( startId, endId - 1 /*excluded*/ );\n-            endId = max( lowIncluded, startId );\n+            long startId = findFloorId(endId);\n+            final LongIterator result = range(startId, endId - 1 /*excluded*/);\n+            endId = max(lowIncluded, startId);\n             return result;\n         }\n \n-        private long findFloorId( long roofId )\n+        private long findFloorId(long roofId)\n         {\n             int rest = (int) (roofId % batchSize);\n-            return max( rest == 0 ? roofId - batchSize : roofId - rest, lowIncluded );\n+            return max(rest == 0 ? roofId - batchSize : roofId - rest, lowIncluded);\n         }\n \n         @Override\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/384/RecordIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/384/RecordIdIterator.java\nindex ce9064a9564..09e4ce83a1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/384/RecordIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/384/RecordIdIterator.java\n@@ -145,4 +145,4 @@ public interface RecordIdIterator\n             return \"]\" + highExcluded + \"-\" + lowIncluded + \"]\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
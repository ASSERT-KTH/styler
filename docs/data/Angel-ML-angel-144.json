{
    "project_name": "Angel-ML-angel",
    "error_id": "144",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/144/MatrixFilesMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/144/MatrixFilesMeta.java\nindex bfc71d3ac00..c4cf88d9987 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/144/MatrixFilesMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/144/MatrixFilesMeta.java\n@@ -94,20 +94,20 @@ public class MatrixFilesMeta {\n   /**\n    * Create a MatrixFilesMeta\n    *\n-   * @param matrixId matrix id\n+   * @param matrixId   matrix id\n    * @param matrixName matrix name\n-   * @param rowType row type\n-   * @param row row number\n-   * @param col cloumn number\n-   * @param blockRow row number in a block\n-   * @param blockCol column number in a block\n-   * @param options other matrix parameters\n-   * @param partMetas partition meta\n+   * @param rowType    row type\n+   * @param row        row number\n+   * @param col        cloumn number\n+   * @param blockRow   row number in a block\n+   * @param blockCol   column number in a block\n+   * @param options    other matrix parameters\n+   * @param partMetas  partition meta\n    */\n   public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType,\n-      int row, long col, int blockRow, long blockCol,\n-      Map<String, String> options,\n-      Map<Integer, MatrixPartitionMeta> partMetas) {\n+                         int row, long col, int blockRow, long blockCol,\n+                         Map<String, String> options,\n+                         Map<Integer, MatrixPartitionMeta> partMetas) {\n     this.matrixId = matrixId;\n     this.matrixName = matrixName;\n     this.formatClassName = formatClassName;\n@@ -123,17 +123,18 @@ public class MatrixFilesMeta {\n   /**\n    * Create a MatrixFilesMeta\n    *\n-   * @param matrixId matrix id\n+   * @param matrixId   matrix id\n    * @param matrixName matrix name\n-   * @param rowType row type\n-   * @param row row number\n-   * @param col cloumn number\n-   * @param blockRow row number in a block\n-   * @param blockCol column number in a block\n-   * @param options other matrix parameters\n+   * @param rowType    row type\n+   * @param row        row number\n+   * @param col        cloumn number\n+   * @param blockRow   row number in a block\n+   * @param blockCol   column number in a block\n+   * @param options    other matrix parameters\n    */\n   public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType,\n-      int row, long col, int blockRow, long blockCol, Map<String, String> options) {\n+                         int row, long col, int blockRow, long blockCol,\n+                         Map<String, String> options) {\n     this(matrixId, matrixName, formatClassName, rowType, row, col, blockRow, blockCol,\n         options,\n         new ConcurrentSkipListMap<>());\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/144/MatrixFilesMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/144/MatrixFilesMeta.java\nindex bfc71d3ac00..a8eec2e8d24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/144/MatrixFilesMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/144/MatrixFilesMeta.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.model.output.format;\n \n import com.tencent.angel.utils.StringUtils;\n@@ -104,8 +103,7 @@ public class MatrixFilesMeta {\n    * @param options other matrix parameters\n    * @param partMetas partition meta\n    */\n-  public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType,\n-      int row, long col, int blockRow, long blockCol,\n+  public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType, int row, long col, int blockRow, long blockCol,\n       Map<String, String> options,\n       Map<Integer, MatrixPartitionMeta> partMetas) {\n     this.matrixId = matrixId;\n@@ -132,11 +130,8 @@ public class MatrixFilesMeta {\n    * @param blockCol column number in a block\n    * @param options other matrix parameters\n    */\n-  public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType,\n-      int row, long col, int blockRow, long blockCol, Map<String, String> options) {\n-    this(matrixId, matrixName, formatClassName, rowType, row, col, blockRow, blockCol,\n-        options,\n-        new ConcurrentSkipListMap<>());\n+  public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType, int row, long col, int blockRow, long blockCol, Map<String, String> options) {\n+  this(matrixId, matrixName, formatClassName, rowType, row, col, blockRow, blockCol, options, new ConcurrentSkipListMap<>());\n   }\n \n   /**\n@@ -529,4 +524,4 @@ public class MatrixFilesMeta {\n     }\n     return sb.toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "537",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 302).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/144/MatrixFilesMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/144/MatrixFilesMeta.java\nindex bfc71d3ac00..b786cc01e2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/144/MatrixFilesMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/144/MatrixFilesMeta.java\n@@ -22,7 +22,6 @@ import com.tencent.angel.utils.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.codehaus.jettison.json.JSONObject;\n-\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n@@ -35,6 +34,7 @@ import java.util.concurrent.ConcurrentSkipListMap;\n /**\n  * Model meta file, it includes matrix properties and partition meta\n  */\n+\n public class MatrixFilesMeta {\n \n   private static final Log LOG = LogFactory.getLog(MatrixFilesMeta.class);\n@@ -89,6 +89,7 @@ public class MatrixFilesMeta {\n   private Map<Integer, MatrixPartitionMeta> partMetas;\n \n   public static final String FEATURE_INDEX_RANGE_START = \"feature.index.range.start\";\n+\n   public static final String FEATURE_INDEX_RANGE_END = \"feature.index.range.end\";\n \n   /**\n@@ -104,10 +105,8 @@ public class MatrixFilesMeta {\n    * @param options other matrix parameters\n    * @param partMetas partition meta\n    */\n-  public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType,\n-      int row, long col, int blockRow, long blockCol,\n-      Map<String, String> options,\n-      Map<Integer, MatrixPartitionMeta> partMetas) {\n+\n+  public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType, int row, long col, int blockRow, long blockCol, Map<String, String> options, Map<Integer, MatrixPartitionMeta> partMetas) {\n     this.matrixId = matrixId;\n     this.matrixName = matrixName;\n     this.formatClassName = formatClassName;\n@@ -132,16 +131,19 @@ public class MatrixFilesMeta {\n    * @param blockCol column number in a block\n    * @param options other matrix parameters\n    */\n-  public MatrixFilesMeta(int matrixId, String matrixName, String formatClassName, int rowType,\n-      int row, long col, int blockRow, long blockCol, Map<String, String> options) {\n-    this(matrixId, matrixName, formatClassName, rowType, row, col, blockRow, blockCol,\n-        options,\n-        new ConcurrentSkipListMap<>());\n+\n+  public MatrixFilesMeta(int matrixId,\n+                         String matrixName,\n+                         String formatClassName, int rowType, int row,\n+                         long col, int blockRow,\n+                         long blockCol, Map<String, String> options) {\n+    this(matrixId, matrixName, formatClassName, rowType, row, col, blockRow, blockCol, options, new ConcurrentSkipListMap<>());\n   }\n \n   /**\n    * Create a empty MatrixFilesMeta\n    */\n+\n   public MatrixFilesMeta() {\n     this(-1, \"\", \"\", -1, -1, -1, -1, -1, new HashMap<>(), new ConcurrentSkipListMap<>());\n   }\n@@ -151,6 +153,7 @@ public class MatrixFilesMeta {\n    *\n    * @param meta server matrix meta\n    */\n+\n   public void merge(PSMatrixFilesMeta meta) {\n     partMetas.putAll(meta.getPartMetas());\n   }\n@@ -230,6 +233,7 @@ public class MatrixFilesMeta {\n         jsonMap.put(partEntry.getKey(), parJsonOnbect);\n       }\n       jsonObject.put(\"partMetas\", jsonMap);\n+\n       byte[] b = jsonObject.toString().getBytes(\"utf-8\");\n       output.writeInt(b.length);\n       output.write(b);\n@@ -284,6 +288,7 @@ public class MatrixFilesMeta {\n    *\n    * @return matrix id\n    */\n+\n   public int getMatrixId() {\n     return matrixId;\n   }\n@@ -293,6 +298,7 @@ public class MatrixFilesMeta {\n    *\n    * @param matrixId matrix id\n    */\n+\n   public void setMatrixId(int matrixId) {\n     this.matrixId = matrixId;\n   }\n@@ -302,6 +308,7 @@ public class MatrixFilesMeta {\n    *\n    * @return row type\n    */\n+\n   public int getRowType() {\n     return rowType;\n   }\n@@ -311,6 +318,7 @@ public class MatrixFilesMeta {\n    *\n    * @param rowType row type\n    */\n+\n   public void setRowType(int rowType) {\n     this.rowType = rowType;\n   }\n@@ -320,6 +328,7 @@ public class MatrixFilesMeta {\n    *\n    * @return row number of matrix\n    */\n+\n   public int getRow() {\n     return row;\n   }\n@@ -329,6 +338,7 @@ public class MatrixFilesMeta {\n    *\n    * @param row row number of matrix\n    */\n+\n   public void setRow(int row) {\n     this.row = row;\n   }\n@@ -338,6 +348,7 @@ public class MatrixFilesMeta {\n    *\n    * @return row number in matrix block\n    */\n+\n   public int getBlockRow() {\n     return blockRow;\n   }\n@@ -347,6 +358,7 @@ public class MatrixFilesMeta {\n    *\n    * @param blockRow row number in matrix block\n    */\n+\n   public void setBlockRow(int blockRow) {\n     this.blockRow = blockRow;\n   }\n@@ -356,6 +368,7 @@ public class MatrixFilesMeta {\n    *\n    * @return column number of matrix\n    */\n+\n   public long getCol() {\n     return col;\n   }\n@@ -365,6 +378,7 @@ public class MatrixFilesMeta {\n    *\n    * @param col column number of matrix\n    */\n+\n   public void setCol(long col) {\n     this.col = col;\n   }\n@@ -374,6 +388,7 @@ public class MatrixFilesMeta {\n    *\n    * @return column number in matrix block\n    */\n+\n   public long getBlockCol() {\n     return blockCol;\n   }\n@@ -383,6 +398,7 @@ public class MatrixFilesMeta {\n    *\n    * @param blockCol column number in matrix block\n    */\n+\n   public void setBlockCol(long blockCol) {\n     this.blockCol = blockCol;\n   }\n@@ -392,6 +408,7 @@ public class MatrixFilesMeta {\n    *\n    * @return matrix name\n    */\n+\n   public String getMatrixName() {\n     return matrixName;\n   }\n@@ -401,6 +418,7 @@ public class MatrixFilesMeta {\n    *\n    * @param matrixName matrix name\n    */\n+\n   public void setMatrixName(String matrixName) {\n     this.matrixName = matrixName;\n   }\n@@ -410,6 +428,7 @@ public class MatrixFilesMeta {\n    *\n    * @return format class name\n    */\n+\n   public String getFormatClassName() {\n     return formatClassName;\n   }\n@@ -419,6 +438,7 @@ public class MatrixFilesMeta {\n    *\n    * @param formatClassName format class name\n    */\n+\n   public void setFormatClassName(String formatClassName) {\n     this.formatClassName = formatClassName;\n   }\n@@ -428,6 +448,7 @@ public class MatrixFilesMeta {\n    *\n    * @return matrix other parameters\n    */\n+\n   public Map<String, String> getOptions() {\n     return options;\n   }\n@@ -437,6 +458,7 @@ public class MatrixFilesMeta {\n    *\n    * @param options matrix other parameters\n    */\n+\n   public void setOptions(Map<String, String> options) {\n     this.options = options;\n   }\n@@ -446,6 +468,7 @@ public class MatrixFilesMeta {\n    *\n    * @return matrix partition meta\n    */\n+\n   public Map<Integer, MatrixPartitionMeta> getPartMetas() {\n     return partMetas;\n   }\n@@ -456,6 +479,7 @@ public class MatrixFilesMeta {\n    * @param partId partition index\n    * @return Model partition meta\n    */\n+\n   public MatrixPartitionMeta getPartMeta(int partId) {\n     return partMetas.get(partId);\n   }\n@@ -465,6 +489,7 @@ public class MatrixFilesMeta {\n    *\n    * @return feature index range start\n    */\n+\n   public long getFeatureIndexStart() {\n     if (options.containsKey(FEATURE_INDEX_RANGE_START)) {\n       return Long.valueOf(options.get(FEATURE_INDEX_RANGE_START));\n@@ -478,6 +503,7 @@ public class MatrixFilesMeta {\n    *\n    * @return feature index range end\n    */\n+\n   public long getFeatureIndexEnd() {\n     if (options.containsKey(FEATURE_INDEX_RANGE_END)) {\n       return Long.valueOf(options.get(FEATURE_INDEX_RANGE_END));\n@@ -491,6 +517,7 @@ public class MatrixFilesMeta {\n    *\n    * @param start feature index range start\n    */\n+\n   public void setFeatureIndexStart(long start) {\n     options.put(FEATURE_INDEX_RANGE_START, String.valueOf(start));\n   }\n@@ -500,16 +527,14 @@ public class MatrixFilesMeta {\n    *\n    * @param end feature index range end\n    */\n+\n   public void setFeatureIndexEnd(long end) {\n     options.put(FEATURE_INDEX_RANGE_END, String.valueOf(end));\n   }\n \n   @Override\n   public String toString() {\n-    return \"MatrixFilesMeta{\" + \"matrixId=\" + matrixId + \", rowType=\" + rowType + \", row=\" + row\n-        + \", blockRow=\" + blockRow + \", col=\" + col + \", blockCol=\" + blockCol + \", matrixName='\"\n-        + matrixName + '\\'' + \", options=[\" + StringUtils.join(\";\", options) + \"], partMetas=[\"\n-        + partMetasString() + \"]}\";\n+    return \"MatrixFilesMeta{\" + \"matrixId=\" + matrixId + \", rowType=\" + rowType + \", row=\" + row + \", blockRow=\" + blockRow + \", col=\" + col + \", blockCol=\" + blockCol + \", matrixName='\" + matrixName + '\\'' + \", options=[\" + StringUtils.join(\";\", options) + \"], partMetas=[\" + partMetasString() + \"]}\";\n   }\n \n   private String partMetasString() {\n@@ -529,4 +554,5 @@ public class MatrixFilesMeta {\n     }\n     return sb.toString();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
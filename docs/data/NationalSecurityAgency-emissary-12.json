{
    "project_name": "NationalSecurityAgency-emissary",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "65",
                "column": "28",
                "severity": "warning",
                "message": "'}' at column 28 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n    /** This class is not meant to be instantiated. */\n    private HtmlEscaper() {}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "65",
                    "column": "28",
                    "severity": "warning",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/12/HtmlEscaper.java\nindex f3502378eb6..44d74638169 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/12/HtmlEscaper.java\n@@ -14,7 +14,7 @@ public class HtmlEscaper {\n \n     /**\n      * encode greater than, less than, and ampersand characters in a byte arroy.\n-     * \n+     *\n      * @param theData input bytes\n      * @return a copy of the input byte array with specific characters encoded.\n      */\n@@ -53,7 +53,7 @@ public class HtmlEscaper {\n \n     /**\n      * Escape html string\n-     * \n+     *\n      * @param s the input string\n      * @return the escaped string\n      */\n@@ -61,6 +61,9 @@ public class HtmlEscaper {\n         return new String(escapeHtml(s.getBytes()));\n     }\n \n-    /** This class is not meant to be instantiated. */\n-    private HtmlEscaper() {}\n+    /**\n+     * This class is not meant to be instantiated.\n+     */\n+    private HtmlEscaper() {\n+    }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/12/HtmlEscaper.java\nindex f3502378eb6..25791b4df4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/12/HtmlEscaper.java\n@@ -62,5 +62,6 @@ public class HtmlEscaper {\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private HtmlEscaper() {}\n-}\n+    private HtmlEscaper() {\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "column": "28",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "column": "24",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "column": "28",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "column": "24",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/12/HtmlEscaper.java\nindex f3502378eb6..7c4a716699d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/12/HtmlEscaper.java\n@@ -6,10 +6,14 @@ import java.io.IOException;\n /**\n  * Methods for dealing with escaped HTML as bytes and strings\n  */\n+\n+\n public class HtmlEscaper {\n \n     private static final byte[] LT_BYTES = \"&lt;\".getBytes();\n+\n     private static final byte[] GT_BYTES = \"&gt;\".getBytes();\n+\n     private static final byte[] AMPERSAND_BYTES = \"&amp;\".getBytes();\n \n     /**\n@@ -18,36 +22,35 @@ public class HtmlEscaper {\n      * @param theData input bytes\n      * @return a copy of the input byte array with specific characters encoded.\n      */\n+\n     public static byte[] escapeHtml(final byte[] theData) {\n         ByteArrayOutputStream output = null;\n         byte[] escaped = null;\n-\n         try {\n             output = new ByteArrayOutputStream(theData.length);\n-\n             for (int i = 0; i < theData.length; i++) {\n                 if (theData[i] == '<') {\n                     output.write(LT_BYTES);\n                 } else if (theData[i] == '>') {\n                     output.write(GT_BYTES);\n                 } else if (theData[i] == '&') {\n-                    output.write(AMPERSAND_BYTES);\n-                } else {\n-                    output.write(theData[i]);\n-                }\n+                           output.write(AMPERSAND_BYTES);\n+                       } else {\n+                           output.write(theData[i]);\n+                       }\n             }\n             escaped = output.toByteArray();\n-\n         } catch (IOException iox) {\n             /* dont care */\n+\n         } finally {\n             try {\n                 output.close();\n             } catch (IOException e) {\n                 /* dont care */\n+\n             }\n         }\n-\n         return escaped;\n     }\n \n@@ -57,10 +60,15 @@ public class HtmlEscaper {\n      * @param s the input string\n      * @return the escaped string\n      */\n+\n+\n     public static String escapeHtml(final String s) {\n         return new String(escapeHtml(s.getBytes()));\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private HtmlEscaper() {}\n-}\n+\n+    private HtmlEscaper() {\n+\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "65",
                    "column": "28",
                    "severity": "warning",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_random/12/HtmlEscaper.java\nindex f3502378eb6..bd79f91d6b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/12/HtmlEscaper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_random/12/HtmlEscaper.java\n@@ -63,4 +63,5 @@ public class HtmlEscaper {\n \n     /** This class is not meant to be instantiated. */\n     private HtmlEscaper() {}\n+\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "65",
                    "column": "28",
                    "severity": "warning",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
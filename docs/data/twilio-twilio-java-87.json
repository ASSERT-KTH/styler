{
    "project_name": "twilio-twilio-java",
    "error_id": "87",
    "information": {
        "errors": [
            {
                "line": "274",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/87/TaskReader.java\nindex 8d61a8b49b3..f9dba690eef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/87/TaskReader.java\n@@ -271,7 +271,7 @@ public class TaskReader extends Reader<Task> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/87/TaskReader.java\nindex 8d61a8b49b3..8093d14e2b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/87/TaskReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.taskrouter.v1.workspace;\n@@ -271,7 +271,7 @@ public class TaskReader extends Reader<Task> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/87/TaskReader.java\nindex 8d61a8b49b3..af4a7c23e1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/87/TaskReader.java\n@@ -19,7 +19,6 @@ import com.twilio.http.Request;\n import com.twilio.http.Response;\n import com.twilio.http.TwilioRestClient;\n import com.twilio.rest.Domains;\n-\n import java.util.List;\n \n public class TaskReader extends Reader<Task> {\n@@ -39,6 +38,8 @@ public class TaskReader extends Reader<Task> {\n      *\n      * @param pathWorkspaceSid The SID of the Workspace with the Tasks to read\n      */\n+\n+\n     public TaskReader(final String pathWorkspaceSid) {\n         this.pathWorkspaceSid = pathWorkspaceSid;\n     }\n@@ -50,6 +51,8 @@ public class TaskReader extends Reader<Task> {\n      * @param priority The priority value of the Tasks to read\n      * @return this\n      */\n+\n+\n     public TaskReader setPriority(final Integer priority) {\n         this.priority = priority;\n         return this;\n@@ -64,6 +67,8 @@ public class TaskReader extends Reader<Task> {\n      *                         the specified assignment_status\n      * @return this\n      */\n+\n+\n     public TaskReader setAssignmentStatus(final List<String> assignmentStatus) {\n         this.assignmentStatus = assignmentStatus;\n         return this;\n@@ -78,6 +83,8 @@ public class TaskReader extends Reader<Task> {\n      *                         the specified assignment_status\n      * @return this\n      */\n+\n+\n     public TaskReader setAssignmentStatus(final String assignmentStatus) {\n         return setAssignmentStatus(Promoter.listOfOne(assignmentStatus));\n     }\n@@ -89,6 +96,8 @@ public class TaskReader extends Reader<Task> {\n      * @param workflowSid The SID of the Workflow with the Tasks to read\n      * @return this\n      */\n+\n+\n     public TaskReader setWorkflowSid(final String workflowSid) {\n         this.workflowSid = workflowSid;\n         return this;\n@@ -101,6 +110,8 @@ public class TaskReader extends Reader<Task> {\n      * @param workflowName The friendly name of the Workflow with the Tasks to read\n      * @return this\n      */\n+\n+\n     public TaskReader setWorkflowName(final String workflowName) {\n         this.workflowName = workflowName;\n         return this;\n@@ -113,6 +124,8 @@ public class TaskReader extends Reader<Task> {\n      * @param taskQueueSid The SID of the TaskQueue with the Tasks to read\n      * @return this\n      */\n+\n+\n     public TaskReader setTaskQueueSid(final String taskQueueSid) {\n         this.taskQueueSid = taskQueueSid;\n         return this;\n@@ -126,6 +139,8 @@ public class TaskReader extends Reader<Task> {\n      *                      read\n      * @return this\n      */\n+\n+\n     public TaskReader setTaskQueueName(final String taskQueueName) {\n         this.taskQueueName = taskQueueName;\n         return this;\n@@ -138,6 +153,8 @@ public class TaskReader extends Reader<Task> {\n      * @param evaluateTaskAttributes The task attributes of the Tasks to read\n      * @return this\n      */\n+\n+\n     public TaskReader setEvaluateTaskAttributes(final String evaluateTaskAttributes) {\n         this.evaluateTaskAttributes = evaluateTaskAttributes;\n         return this;\n@@ -155,6 +172,8 @@ public class TaskReader extends Reader<Task> {\n      * @param ordering Controls the order of the Tasks returned\n      * @return this\n      */\n+\n+\n     public TaskReader setOrdering(final String ordering) {\n         this.ordering = ordering;\n         return this;\n@@ -167,6 +186,8 @@ public class TaskReader extends Reader<Task> {\n      * @param hasAddons Whether to read Tasks with addons\n      * @return this\n      */\n+\n+\n     public TaskReader setHasAddons(final Boolean hasAddons) {\n         this.hasAddons = hasAddons;\n         return this;\n@@ -178,6 +199,7 @@ public class TaskReader extends Reader<Task> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Task ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Task> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -189,13 +211,14 @@ public class TaskReader extends Reader<Task> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Task ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Task> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.TASKROUTER.toString(),\n-            \"/v1/Workspaces/\" + this.pathWorkspaceSid + \"/Tasks\"\n+                              HttpMethod.GET,\n+                              Domains.TASKROUTER.toString(),\n+                              \"/v1/Workspaces/\" + this.pathWorkspaceSid + \"/Tasks\"\n         );\n \n         addQueryParams(request);\n@@ -209,14 +232,12 @@ public class TaskReader extends Reader<Task> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Task ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Task> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Task> getPage(final String targetUrl,\n+                              final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -227,13 +248,11 @@ public class TaskReader extends Reader<Task> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Task> nextPage(final Page<Task> page,\n                                final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.TASKROUTER.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.TASKROUTER.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -244,13 +263,11 @@ public class TaskReader extends Reader<Task> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Task> previousPage(final Page<Task> page,\n                                    final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.TASKROUTER.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.TASKROUTER.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -261,9 +278,11 @@ public class TaskReader extends Reader<Task> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Task> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Task> pageForRequest(final TwilioRestClient client,\n+                                      final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Task read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -271,15 +290,11 @@ public class TaskReader extends Reader<Task> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"tasks\",\n-            response.getContent(),\n-            Task.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"tasks\", response.getContent(), Task.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -287,6 +302,8 @@ public class TaskReader extends Reader<Task> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (priority != null) {\n             request.addQueryParam(\"Priority\", priority.toString());\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/87/TaskReader.java\nindex 8d61a8b49b3..f9dba690eef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/87/TaskReader.java\n@@ -271,7 +271,7 @@ public class TaskReader extends Reader<Task> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/87/TaskReader.java\nindex 8d61a8b49b3..47258d1c484 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/87/TaskReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/87/TaskReader.java\n@@ -271,7 +271,8 @@ public class TaskReader extends Reader<Task> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
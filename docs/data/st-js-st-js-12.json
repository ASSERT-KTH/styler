{
    "project_name": "st-js-st-js",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "90",
                "severity": "error",
                "message": "Line is longer than 145 characters (found 214).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t@Test\n\tpublic void testForEachInWithIterable() {\n\t\tassertCodeContains(Statements22_ForEachIterable.class, \"for (var iterator$oneOfTheString = myStringList.iterator(); iterator$oneOfTheString.hasNext(); ) { var oneOfTheString = iterator$oneOfTheString.next(); }\");\n\t}\n\n\t@Test",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/12/StatementsGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/12/StatementsGeneratorTest.java\nindex 48d6533ddfc..58cb12e31fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/12/StatementsGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/12/StatementsGeneratorTest.java\n@@ -8,157 +8,158 @@ import org.stjs.generator.utils.AbstractStjsTest;\n import org.stjs.generator.JavascriptFileGenerationException;\r\n \r\n public class StatementsGeneratorTest extends AbstractStjsTest {\r\n-\t@Test\r\n-\tpublic void testFor() {\r\n-\t\tassertCodeContains(Statements1.class, \"for (var i = 0; i < 10; i++) {\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForEach() {\r\n-\t\t// XXX this is not exactly correct as arg here is the index not the value\r\n-\t\tassertCodeContains(Statements2.class, \"for (var arg in args) {\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testWhile() {\r\n-\t\tassertCodeContains(Statements3.class, \"while(i < 5) {\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testSwitch() {\r\n-\t\tassertCodeContains(Statements4.class, \"switch(i)\");\r\n-\t\tassertCodeContains(Statements4.class, \"case 1: break;\");\r\n-\t\tassertCodeContains(Statements4.class, \"default: break\");\r\n-\t}\r\n-\r\n-\t@Test(expected = JavascriptFileGenerationException.class)\r\n-\tpublic void testArray1() {\r\n-\t\tgenerate(Statements5.class);\r\n-\t}\r\n-\r\n-\t@Test(expected = JavascriptFileGenerationException.class)\r\n-\tpublic void testArray2() {\r\n-\t\t// java array creation is forbidden\r\n-\t\tgenerate(Statements6.class);\r\n-\t}\r\n-\r\n-\t@Ignore\r\n-\t// comments are currenly disabled\r\n-\tpublic void testLineComment() {\r\n-\t\tassertCodeContains(Statements7.class, \"//line comment\");\r\n-\t}\r\n-\r\n-\t@Ignore\r\n-\t// comments are currenly disabled\r\n-\tpublic void testBlockComment() {\r\n-\t\tassertCodeContains(Statements8.class, \"/* * block comment */\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testJavadocCommentMethod() {\r\n-\t\tassertCodeContains(Statements8b.class, \"/** * javadoc comment */\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testJavadocCommentClass() {\r\n-\t\tassertCodeContains(Statements8c.class, \"/** *javadoc comment */\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testJavadocCommentField() {\r\n-\t\tassertCodeContains(Statements8d.class, \"/** * javadoc comment */\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testLiterals() {\r\n-\t\t// \"abc\", \"\\\"\", \"'\", 'a', '\\'', 1D, 2f, 1l);\r\n-\t\tassertCodeContains(Statements9.class, \"\\\"abc\\\", \\\"\\\\\\\"\\\", \\\"'\\\", 'a', '\\\\'', 1.0, 2.0, 1\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testInstanceof() {\r\n-\t\tassertCodeContains(Statements10.class, \"stjs.isInstanceOf(arg.constructor, Statements10)\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForEachArrayOneLine() {\r\n-\t\tassertCodeContains(Statements11.class, \"if (!(a).hasOwnProperty(i)) continue;parseInt\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForEachInWithIterable() {\r\n-\t\tassertCodeContains(Statements22_ForEachIterable.class, \"for (var iterator$oneOfTheString = myStringList.iterator(); iterator$oneOfTheString.hasNext(); ) { var oneOfTheString = iterator$oneOfTheString.next(); }\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForEachArrayBlock() {\r\n-\t\tassertCodeContains(Statements12.class, \"if (!(a).hasOwnProperty(i)) continue;var x\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForEachArrayWithCast() {\r\n-\t\tassertCodeContains(Statements12b.class, \"if (!(a).hasOwnProperty(i)) continue;\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForEachMapBlock() {\r\n-\t\tassertCodeDoesNotContain(Statements13.class, \"hasOwnProperty\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testStaticInitializer() {\r\n-\t\tassertCodeContains(Statements14.class, \"{\" + //\r\n-\t\t\t\t\"Statements14.instance = new Statements14();\" + //\r\n-\t\t\t\t\"var n = Statements14.instance.method();\" + //\r\n-\t\t\t\t\"}\");\r\n-\t}\r\n-\r\n-\t@Test(expected = JavascriptFileGenerationException.class)\r\n-\tpublic void testInstanceInitializer() {\r\n-\t\tgenerate(Statements15.class);\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testStaticInitializerContainment() {\r\n-\t\t// We must do the weird (Number).intValue() because for some reason the execution returns the\r\n-\t\t// integer 2 when run from eclipse, but return the double 2.0 when run from maven...\r\n-\t\tassertEquals(2, ((Number) execute(Statements16.class)).intValue());\r\n-\t}\r\n-\r\n-\t@Test(expected = JavascriptFileGenerationException.class)\r\n-\tpublic void testSynchronizedBlock() {\r\n-\t\t// synchronized not supported\r\n-\t\tgenerate(Statements17.class);\r\n-\t}\r\n-\r\n-\t@Test(expected = JavascriptFileGenerationException.class)\r\n-\tpublic void testAssert() {\r\n-\t\t// assert not supported\r\n-\t\tgenerate(Statements18.class);\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testCatch() {\r\n-\t\tassertCodeContains(Statements19.class, \"catch(e){throw new RuntimeException(e);}\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForDoubleInit() {\r\n-\t\tassertCodeContains(Statements20.class, \"for(var i = 0, j = 1; i < 10; ++i){}\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForDoubleInit2() {\r\n-\t\tassertCodeContains(Statements20b.class, \"for( i = 0, j = 1; i < 10; ++i){}\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testForNoInit() {\r\n-\t\tassertCodeContains(Statements20c.class, \"for(; i < 10; ++i){}\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testStaticBlock() {\r\n-\t\tassertCodeContains(Statements21.class, \"new (stjs.extend(function Statements21$1(){}\");\r\n-\t}\r\n+    @Test\r\n+    public void testFor() {\r\n+        assertCodeContains(Statements1.class, \"for (var i = 0; i < 10; i++) {\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForEach() {\r\n+        // XXX this is not exactly correct as arg here is the index not the value\r\n+        assertCodeContains(Statements2.class, \"for (var arg in args) {\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testWhile() {\r\n+        assertCodeContains(Statements3.class, \"while(i < 5) {\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testSwitch() {\r\n+        assertCodeContains(Statements4.class, \"switch(i)\");\r\n+        assertCodeContains(Statements4.class, \"case 1: break;\");\r\n+        assertCodeContains(Statements4.class, \"default: break\");\r\n+    }\r\n+\r\n+    @Test(expected = JavascriptFileGenerationException.class)\r\n+    public void testArray1() {\r\n+        generate(Statements5.class);\r\n+    }\r\n+\r\n+    @Test(expected = JavascriptFileGenerationException.class)\r\n+    public void testArray2() {\r\n+        // java array creation is forbidden\r\n+        generate(Statements6.class);\r\n+    }\r\n+\r\n+    @Ignore\r\n+    // comments are currenly disabled\r\n+    public void testLineComment() {\r\n+        assertCodeContains(Statements7.class, \"//line comment\");\r\n+    }\r\n+\r\n+    @Ignore\r\n+    // comments are currenly disabled\r\n+    public void testBlockComment() {\r\n+        assertCodeContains(Statements8.class, \"/* * block comment */\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testJavadocCommentMethod() {\r\n+        assertCodeContains(Statements8b.class, \"/** * javadoc comment */\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testJavadocCommentClass() {\r\n+        assertCodeContains(Statements8c.class, \"/** *javadoc comment */\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testJavadocCommentField() {\r\n+        assertCodeContains(Statements8d.class, \"/** * javadoc comment */\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testLiterals() {\r\n+        // \"abc\", \"\\\"\", \"'\", 'a', '\\'', 1D, 2f, 1l);\r\n+        assertCodeContains(Statements9.class, \"\\\"abc\\\", \\\"\\\\\\\"\\\", \\\"'\\\", 'a', '\\\\'', 1.0, 2.0, 1\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testInstanceof() {\r\n+        assertCodeContains(Statements10.class, \"stjs.isInstanceOf(arg.constructor, Statements10)\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForEachArrayOneLine() {\r\n+        assertCodeContains(Statements11.class, \"if (!(a).hasOwnProperty(i)) continue;parseInt\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForEachInWithIterable() {\r\n+        assertCodeContains(Statements22_ForEachIterable.class,\r\n+            \"for (var iterator$oneOfTheString = myStringList.iterator(); iterator$oneOfTheString.hasNext(); ) { var oneOfTheString = iterator$oneOfTheString.next(); }\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForEachArrayBlock() {\r\n+        assertCodeContains(Statements12.class, \"if (!(a).hasOwnProperty(i)) continue;var x\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForEachArrayWithCast() {\r\n+        assertCodeContains(Statements12b.class, \"if (!(a).hasOwnProperty(i)) continue;\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForEachMapBlock() {\r\n+        assertCodeDoesNotContain(Statements13.class, \"hasOwnProperty\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testStaticInitializer() {\r\n+        assertCodeContains(Statements14.class, \"{\" + //\r\n+            \"Statements14.instance = new Statements14();\" + //\r\n+            \"var n = Statements14.instance.method();\" + //\r\n+            \"}\");\r\n+    }\r\n+\r\n+    @Test(expected = JavascriptFileGenerationException.class)\r\n+    public void testInstanceInitializer() {\r\n+        generate(Statements15.class);\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testStaticInitializerContainment() {\r\n+        // We must do the weird (Number).intValue() because for some reason the execution returns the\r\n+        // integer 2 when run from eclipse, but return the double 2.0 when run from maven...\r\n+        assertEquals(2, ((Number) execute(Statements16.class)).intValue());\r\n+    }\r\n+\r\n+    @Test(expected = JavascriptFileGenerationException.class)\r\n+    public void testSynchronizedBlock() {\r\n+        // synchronized not supported\r\n+        generate(Statements17.class);\r\n+    }\r\n+\r\n+    @Test(expected = JavascriptFileGenerationException.class)\r\n+    public void testAssert() {\r\n+        // assert not supported\r\n+        generate(Statements18.class);\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testCatch() {\r\n+        assertCodeContains(Statements19.class, \"catch(e){throw new RuntimeException(e);}\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForDoubleInit() {\r\n+        assertCodeContains(Statements20.class, \"for(var i = 0, j = 1; i < 10; ++i){}\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForDoubleInit2() {\r\n+        assertCodeContains(Statements20b.class, \"for( i = 0, j = 1; i < 10; ++i){}\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testForNoInit() {\r\n+        assertCodeContains(Statements20c.class, \"for(; i < 10; ++i){}\");\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testStaticBlock() {\r\n+        assertCodeContains(Statements21.class, \"new (stjs.extend(function Statements21$1(){}\");\r\n+    }\r\n }\r\n",
            "diff_size": 154
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/12/StatementsGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/12/StatementsGeneratorTest.java\nindex 48d6533ddfc..393cc6126e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/12/StatementsGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/12/StatementsGeneratorTest.java\n@@ -161,4 +161,4 @@ public class StatementsGeneratorTest extends AbstractStjsTest {\n \tpublic void testStaticBlock() {\r\n \t\tassertCodeContains(Statements21.class, \"new (stjs.extend(function Statements21$1(){}\");\r\n \t}\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
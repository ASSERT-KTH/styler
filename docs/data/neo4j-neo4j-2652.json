{
    "project_name": "neo4j-neo4j",
    "error_id": "2652",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "221",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "283",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "155",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2652/BlockStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2652/BlockStorage.java\nindex 64af8a0e533..18314612902 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2652/BlockStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2652/BlockStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.eclipse.collections.api.list.MutableList;\n@@ -56,12 +57,12 @@ import static org.neo4j.kernel.impl.index.schema.BlockStorage.Cancellation.NOT_C\n class BlockStorage<KEY, VALUE> implements Closeable\n {\n     static final int BLOCK_HEADER_SIZE = Long.BYTES  // blockSize\n-                                       + Long.BYTES; // entryCount\n+      + Long.BYTES; // entryCount\n \n-    private final Layout<KEY,VALUE> layout;\n+    private final Layout<KEY, VALUE> layout;\n     private final FileSystemAbstraction fs;\n-    private final MutableList<BlockEntry<KEY,VALUE>> bufferedEntries;\n-    private final Comparator<BlockEntry<KEY,VALUE>> comparator;\n+    private final MutableList<BlockEntry<KEY, VALUE>> bufferedEntries;\n+    private final Comparator<BlockEntry<KEY, VALUE>> comparator;\n     private final StoreChannel storeChannel;\n     private final Monitor monitor;\n     private final int blockSize;\n@@ -73,8 +74,8 @@ class BlockStorage<KEY, VALUE> implements Closeable\n     private boolean doneAdding;\n     private long entryCount;\n \n-    BlockStorage( Layout<KEY,VALUE> layout, ByteBufferFactory bufferFactory, FileSystemAbstraction fs, Path blockFile, Monitor monitor,\n-            MemoryTracker memoryTracker ) throws IOException\n+    BlockStorage(Layout<KEY, VALUE> layout, ByteBufferFactory bufferFactory, FileSystemAbstraction fs, Path blockFile, Monitor monitor,\n+                 MemoryTracker memoryTracker) throws IOException\n     {\n         this.layout = layout;\n         this.fs = fs;\n@@ -84,32 +85,32 @@ class BlockStorage<KEY, VALUE> implements Closeable\n         this.memoryTracker = memoryTracker;\n         this.bufferedEntries = Lists.mutable.empty();\n         this.bufferFactory = bufferFactory;\n-        this.comparator = ( e0, e1 ) -> layout.compare( e0.key(), e1.key() );\n-        this.storeChannel = fs.write( blockFile );\n+        this.comparator = (e0, e1) -> layout.compare(e0.key(), e1.key());\n+        this.storeChannel = fs.write(blockFile);\n         resetBufferedEntries();\n     }\n \n-    public void add( KEY key, VALUE value ) throws IOException\n+    public void add(KEY key, VALUE value) throws IOException\n     {\n-        Preconditions.checkState( !doneAdding, \"Cannot add more after done adding\" );\n+        Preconditions.checkState(!doneAdding, \"Cannot add more after done adding\");\n \n-        int entrySize = BlockEntry.entrySize( layout, key, value );\n+        int entrySize = BlockEntry.entrySize(layout, key, value);\n \n-        if ( currentBufferSize + entrySize > blockSize )\n+        if (currentBufferSize + entrySize > blockSize)\n         {\n             // append buffer to file and clear buffers\n             flushAndResetBuffer();\n             numberOfBlocksInCurrentFile++;\n         }\n \n-        bufferedEntries.add( new BlockEntry<>( key, value ) );\n+        bufferedEntries.add(new BlockEntry<>(key, value));\n         currentBufferSize += entrySize;\n-        monitor.entryAdded( entrySize );\n+        monitor.entryAdded(entrySize);\n     }\n \n     void doneAdding() throws IOException\n     {\n-        if ( !bufferedEntries.isEmpty() )\n+        if (!bufferedEntries.isEmpty())\n         {\n             flushAndResetBuffer();\n             numberOfBlocksInCurrentFile++;\n@@ -126,21 +127,20 @@ class BlockStorage<KEY, VALUE> implements Closeable\n \n     private void flushAndResetBuffer() throws IOException\n     {\n-        bufferedEntries.sortThis( comparator );\n+        bufferedEntries.sortThis(comparator);\n \n-        ListBasedBlockEntryCursor<KEY,VALUE> entries = new ListBasedBlockEntryCursor<>( bufferedEntries );\n-        ByteBuffer byteBuffer = bufferFactory.acquireThreadLocalBuffer( memoryTracker );\n+        ListBasedBlockEntryCursor<KEY, VALUE> entries = new ListBasedBlockEntryCursor<>(bufferedEntries);\n+        ByteBuffer byteBuffer = bufferFactory.acquireThreadLocalBuffer(memoryTracker);\n         try\n         {\n-            writeBlock( storeChannel, entries, blockSize, bufferedEntries.size(), NOT_CANCELLABLE, count -> entryCount += count, byteBuffer );\n-        }\n-        finally\n+            writeBlock(storeChannel, entries, blockSize, bufferedEntries.size(), NOT_CANCELLABLE, count -> entryCount += count, byteBuffer);\n+        } finally\n         {\n             bufferFactory.releaseThreadLocalBuffer();\n         }\n \n         // Append to file\n-        monitor.blockFlushed( bufferedEntries.size(), currentBufferSize, storeChannel.position() );\n+        monitor.blockFlushed(bufferedEntries.size(), currentBufferSize, storeChannel.position());\n         resetBufferedEntries();\n     }\n \n@@ -150,44 +150,44 @@ class BlockStorage<KEY, VALUE> implements Closeable\n      * merge iterations are needed and we start over again.\n      * When source only contain a single block we are finished and the extra file is deleted and {@link #blockFile} contains the result with a single sorted\n      * block.\n-     *\n+     * <p>\n      * See {@link #performSingleMerge(int, BlockReader, StoreChannel, Cancellation, ScopedBuffer[], ByteBuffer)} for further details.\n      *\n-     * @param mergeFactor See {@link #performSingleMerge(int, BlockReader, StoreChannel, Cancellation, ScopedBuffer[], ByteBuffer)}.\n+     * @param mergeFactor  See {@link #performSingleMerge(int, BlockReader, StoreChannel, Cancellation, ScopedBuffer[], ByteBuffer)}.\n      * @param cancellation Injected so that this merge can be cancelled, if an external request to do that comes in.\n-     * A cancelled merge will leave the same end state file/channel-wise, just not quite completed, which is fine because the merge\n-     * was cancelled meaning that the result will not be used for anything other than deletion.\n+     *                     A cancelled merge will leave the same end state file/channel-wise, just not quite completed, which is fine because the merge\n+     *                     was cancelled meaning that the result will not be used for anything other than deletion.\n      * @throws IOException If something goes wrong when reading from file.\n      */\n-    public void merge( int mergeFactor, Cancellation cancellation ) throws IOException\n+    public void merge(int mergeFactor, Cancellation cancellation) throws IOException\n     {\n-        monitor.mergeStarted( entryCount, calculateNumberOfEntriesWrittenDuringMerges( entryCount, numberOfBlocksInCurrentFile, mergeFactor ) );\n+        monitor.mergeStarted(entryCount, calculateNumberOfEntriesWrittenDuringMerges(entryCount, numberOfBlocksInCurrentFile, mergeFactor));\n         Path sourceFile = blockFile;\n-        Path tempFile = blockFile.resolveSibling( blockFile.getFileName() + \".b\" );\n+        Path tempFile = blockFile.resolveSibling(blockFile.getFileName() + \".b\");\n         Path targetFile = tempFile;\n         int bufferSize = bufferFactory.bufferSize();\n \n-        try ( var mergeBufferAllocator = bufferFactory.newLocalAllocator();\n-              var writeBuffer = mergeBufferAllocator.allocate( bufferSize, memoryTracker );\n-              var readBuffers = new CompositeScopedBuffer( mergeFactor, bufferSize, mergeBufferAllocator, memoryTracker ) )\n+        try (var mergeBufferAllocator = bufferFactory.newLocalAllocator();\n+             var writeBuffer = mergeBufferAllocator.allocate(bufferSize, memoryTracker);\n+             var readBuffers = new CompositeScopedBuffer(mergeFactor, bufferSize, mergeBufferAllocator, memoryTracker))\n         {\n-            while ( numberOfBlocksInCurrentFile > 1 )\n+            while (numberOfBlocksInCurrentFile > 1)\n             {\n                 // Perform one complete merge iteration, merging all blocks from source into target.\n                 // After this step, target will contain fewer blocks than source, but may need another merge iteration.\n-                try ( BlockReader<KEY,VALUE> reader = reader( sourceFile );\n-                      StoreChannel targetChannel = fs.write( targetFile ) )\n+                try (BlockReader<KEY, VALUE> reader = reader(sourceFile);\n+                     StoreChannel targetChannel = fs.write(targetFile))\n                 {\n                     long blocksMergedSoFar = 0;\n                     long blocksInMergedFile = 0;\n-                    while ( !cancellation.cancelled() && blocksMergedSoFar < numberOfBlocksInCurrentFile )\n+                    while (!cancellation.cancelled() && blocksMergedSoFar < numberOfBlocksInCurrentFile)\n                     {\n-                        blocksMergedSoFar += performSingleMerge( mergeFactor, reader, targetChannel, cancellation, readBuffers.getScopedBuffers(),\n-                                writeBuffer.getBuffer() );\n+                        blocksMergedSoFar += performSingleMerge(mergeFactor, reader, targetChannel, cancellation, readBuffers.getScopedBuffers(),\n+                          writeBuffer.getBuffer());\n                         blocksInMergedFile++;\n                     }\n                     numberOfBlocksInCurrentFile = blocksInMergedFile;\n-                    monitor.mergeIterationFinished( blocksMergedSoFar, blocksInMergedFile );\n+                    monitor.mergeIterationFinished(blocksMergedSoFar, blocksInMergedFile);\n                 }\n \n                 // Flip and restore the channels\n@@ -195,17 +195,15 @@ class BlockStorage<KEY, VALUE> implements Closeable\n                 sourceFile = targetFile;\n                 targetFile = tmpSourceFile;\n             }\n-        }\n-        finally\n+        } finally\n         {\n-            if ( sourceFile == blockFile )\n+            if (sourceFile == blockFile)\n             {\n-                fs.deleteFile( tempFile );\n-            }\n-            else\n+                fs.deleteFile(tempFile);\n+            } else\n             {\n-                fs.deleteFile( blockFile );\n-                fs.renameFile( tempFile, blockFile );\n+                fs.deleteFile(blockFile);\n+                fs.renameFile(tempFile, blockFile);\n             }\n         }\n     }\n@@ -214,16 +212,16 @@ class BlockStorage<KEY, VALUE> implements Closeable\n      * Calculates number of entries that will be written, given an entry count, number of blocks and a merge factor.\n      * During merge entries are merged and written, potentially multiple times depending on number of blocks and merge factor.\n      *\n-     * @param entryCount number of entries to merge.\n+     * @param entryCount     number of entries to merge.\n      * @param numberOfBlocks number of blocks that these entries exist in.\n-     * @param mergeFactor the merge factor to use when merging.\n+     * @param mergeFactor    the merge factor to use when merging.\n      * @return number of entries written in total when merging these entries, which exists in the given number of blocks,\n      * merged with the given merge factor.\n      */\n-    static long calculateNumberOfEntriesWrittenDuringMerges( long entryCount, long numberOfBlocks, int mergeFactor )\n+    static long calculateNumberOfEntriesWrittenDuringMerges(long entryCount, long numberOfBlocks, int mergeFactor)\n     {\n         int singleMerges = 0;\n-        for ( long blocks = numberOfBlocks; blocks > 1; blocks = (long) ceil( (double) blocks / mergeFactor ) )\n+        for (long blocks = numberOfBlocks; blocks > 1; blocks = (long) ceil((double) blocks / mergeFactor))\n         {\n             singleMerges++;\n         }\n@@ -234,198 +232,198 @@ class BlockStorage<KEY, VALUE> implements Closeable\n      * Merge some number of blocks, how many is decided by mergeFactor, into a single sorted block. This is done by opening {@link BlockEntryReader} on each\n      * block that we want to merge and give them to a {@link MergingBlockEntryReader}. The {@link BlockEntryReader}s are pulled from a {@link BlockReader}\n      * that iterate over Blocks in file in sequential order.\n-     *\n+     * <p>\n      * {@link MergingBlockEntryReader} pull head from each {@link BlockEntryReader} and hand them out in sorted order, making the multiple entry readers look\n      * like a single large and sorted entry reader.\n-     *\n+     * <p>\n      * The large block resulting from the merge is written down to targetChannel by calling\n      * {@link #writeBlock(StoreChannel, BlockEntryCursor, long, long, Cancellation, IntConsumer, ByteBuffer)}.\n      *\n-     * @param mergeFactor How many blocks to merge at the same time. Influence how much memory will be used because each merge block will have it's own\n-     * {@link ByteBuffer} that they read from.\n-     * @param reader The {@link BlockReader} to pull blocks / {@link BlockEntryReader}s from.\n+     * @param mergeFactor   How many blocks to merge at the same time. Influence how much memory will be used because each merge block will have it's own\n+     *                      {@link ByteBuffer} that they read from.\n+     * @param reader        The {@link BlockReader} to pull blocks / {@link BlockEntryReader}s from.\n      * @param targetChannel The {@link StoreChannel} to write the merge result to. Result will be appended to current position.\n-     * @param cancellation Injected so that this merge can be cancelled, if an external request to do that comes in.\n-     * @param readBuffers buffers for all block readers.\n-     * @param writeBuffer buffer for writing merged blocks.\n+     * @param cancellation  Injected so that this merge can be cancelled, if an external request to do that comes in.\n+     * @param readBuffers   buffers for all block readers.\n+     * @param writeBuffer   buffer for writing merged blocks.\n      * @return The number of blocks that where merged, most often this will be equal to mergeFactor but can be less if there are fewer blocks left in source.\n      * @throws IOException If something goes wrong when reading from file.\n      */\n-    private int performSingleMerge( int mergeFactor, BlockReader<KEY,VALUE> reader, StoreChannel targetChannel, Cancellation cancellation,\n-            ScopedBuffer[] readBuffers, ByteBuffer writeBuffer ) throws IOException\n+    private int performSingleMerge(int mergeFactor, BlockReader<KEY, VALUE> reader, StoreChannel targetChannel, Cancellation cancellation,\n+                                   ScopedBuffer[] readBuffers, ByteBuffer writeBuffer) throws IOException\n     {\n-        try ( MergingBlockEntryReader<KEY,VALUE> merger = new MergingBlockEntryReader<>( layout ) )\n+        try (MergingBlockEntryReader<KEY, VALUE> merger = new MergingBlockEntryReader<>(layout))\n         {\n             long blockSize = 0;\n             long entryCount = 0;\n             int blocksMerged = 0;\n-            for ( int i = 0; i < mergeFactor; i++ )\n+            for (int i = 0; i < mergeFactor; i++)\n             {\n                 readBuffers[i].getBuffer().clear();\n-                BlockEntryReader<KEY,VALUE> source = reader.nextBlock( readBuffers[i] );\n-                if ( source != null )\n+                BlockEntryReader<KEY, VALUE> source = reader.nextBlock(readBuffers[i]);\n+                if (source != null)\n                 {\n                     blockSize += source.blockSize();\n                     entryCount += source.entryCount();\n                     blocksMerged++;\n-                    merger.addSource( source );\n-                }\n-                else\n+                    merger.addSource(source);\n+                } else\n                 {\n                     break;\n                 }\n             }\n \n             writeBuffer.clear();\n-            writeBlock( targetChannel, merger, blockSize, entryCount, cancellation, monitor::entriesMerged, writeBuffer );\n-            monitor.mergedBlocks( blockSize, entryCount, blocksMerged );\n+            writeBlock(targetChannel, merger, blockSize, entryCount, cancellation, monitor::entriesMerged, writeBuffer);\n+            monitor.mergedBlocks(blockSize, entryCount, blocksMerged);\n             return blocksMerged;\n         }\n     }\n \n-    private void writeBlock( StoreChannel targetChannel, BlockEntryCursor<KEY,VALUE> blockEntryCursor, long blockSize, long entryCount,\n-            Cancellation cancellation, IntConsumer entryCountReporter, ByteBuffer byteBuffer ) throws IOException\n+    private void writeBlock(StoreChannel targetChannel, BlockEntryCursor<KEY, VALUE> blockEntryCursor, long blockSize, long entryCount,\n+                            Cancellation cancellation, IntConsumer entryCountReporter, ByteBuffer byteBuffer) throws IOException\n     {\n-        writeHeader( byteBuffer, blockSize, entryCount );\n-        long actualDataSize = writeEntries( targetChannel, byteBuffer, layout, blockEntryCursor, cancellation, entryCountReporter );\n-        writeLastEntriesWithPadding( targetChannel, byteBuffer, blockSize - actualDataSize );\n+        writeHeader(byteBuffer, blockSize, entryCount);\n+        long actualDataSize = writeEntries(targetChannel, byteBuffer, layout, blockEntryCursor, cancellation, entryCountReporter);\n+        writeLastEntriesWithPadding(targetChannel, byteBuffer, blockSize - actualDataSize);\n     }\n \n-    private static void writeHeader( ByteBuffer byteBuffer, long blockSize, long entryCount )\n+    private static void writeHeader(ByteBuffer byteBuffer, long blockSize, long entryCount)\n     {\n-        byteBuffer.putLong( blockSize );\n-        byteBuffer.putLong( entryCount );\n+        byteBuffer.putLong(blockSize);\n+        byteBuffer.putLong(entryCount);\n     }\n \n-    private static <KEY, VALUE> long writeEntries( StoreChannel targetChannel, ByteBuffer byteBuffer, Layout<KEY,VALUE> layout,\n-            BlockEntryCursor<KEY,VALUE> blockEntryCursor, Cancellation cancellation, IntConsumer entryCountReporter ) throws IOException\n+    private static <KEY, VALUE> long writeEntries(StoreChannel targetChannel, ByteBuffer byteBuffer, Layout<KEY, VALUE> layout,\n+                                                  BlockEntryCursor<KEY, VALUE> blockEntryCursor, Cancellation cancellation, IntConsumer entryCountReporter)\n+      throws IOException\n     {\n         // Loop over block entries\n         long actualDataSize = BLOCK_HEADER_SIZE;\n-        ByteArrayPageCursor pageCursor = new ByteArrayPageCursor( byteBuffer );\n+        ByteArrayPageCursor pageCursor = new ByteArrayPageCursor(byteBuffer);\n         int entryCountToReport = 0;\n-        while ( blockEntryCursor.next() )\n+        while (blockEntryCursor.next())\n         {\n             KEY key = blockEntryCursor.key();\n             VALUE value = blockEntryCursor.value();\n-            int entrySize = BlockEntry.entrySize( layout, key, value );\n+            int entrySize = BlockEntry.entrySize(layout, key, value);\n             actualDataSize += entrySize;\n             entryCountToReport++;\n \n-            if ( byteBuffer.remaining() < entrySize )\n+            if (byteBuffer.remaining() < entrySize)\n             {\n                 // First check if this merge have been cancelled, if so just break here, it's fine.\n-                if ( cancellation.cancelled() )\n+                if (cancellation.cancelled())\n                 {\n                     break;\n                 }\n \n                 // flush and reset + DON'T PAD!!!\n                 byteBuffer.flip();\n-                targetChannel.writeAll( byteBuffer );\n+                targetChannel.writeAll(byteBuffer);\n                 byteBuffer.clear();\n-                entryCountReporter.accept( entryCountToReport );\n+                entryCountReporter.accept(entryCountToReport);\n                 entryCountToReport = 0;\n             }\n \n-            BlockEntry.write( pageCursor, layout, key, value );\n+            BlockEntry.write(pageCursor, layout, key, value);\n         }\n-        if ( entryCountToReport > 0 )\n+        if (entryCountToReport > 0)\n         {\n-            entryCountReporter.accept( entryCountToReport );\n+            entryCountReporter.accept(entryCountToReport);\n         }\n         return actualDataSize;\n     }\n \n-    private static void writeLastEntriesWithPadding( StoreChannel channel, ByteBuffer byteBuffer, long padding ) throws IOException\n+    private static void writeLastEntriesWithPadding(StoreChannel channel, ByteBuffer byteBuffer, long padding) throws IOException\n     {\n         boolean didWrite;\n         do\n         {\n-            int toPadThisTime = (int) Math.min( byteBuffer.remaining(), padding );\n+            int toPadThisTime = (int) Math.min(byteBuffer.remaining(), padding);\n             byte[] padArray = new byte[toPadThisTime];\n-            byteBuffer.put( padArray );\n+            byteBuffer.put(padArray);\n             padding -= toPadThisTime;\n             didWrite = byteBuffer.position() > 0;\n-            if ( didWrite )\n+            if (didWrite)\n             {\n                 byteBuffer.flip();\n-                channel.writeAll( byteBuffer );\n+                channel.writeAll(byteBuffer);\n                 byteBuffer.clear();\n             }\n         }\n-        while ( didWrite );\n+        while (didWrite);\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        IOUtils.closeAll( storeChannel );\n-        fs.deleteFile( blockFile );\n+        IOUtils.closeAll(storeChannel);\n+        fs.deleteFile(blockFile);\n     }\n \n-    BlockReader<KEY,VALUE> reader() throws IOException\n+    BlockReader<KEY, VALUE> reader() throws IOException\n     {\n-        return reader( blockFile );\n+        return reader(blockFile);\n     }\n \n-    private BlockReader<KEY,VALUE> reader( Path file ) throws IOException\n+    private BlockReader<KEY, VALUE> reader(Path file) throws IOException\n     {\n-        return new BlockReader<>( fs, file, layout );\n+        return new BlockReader<>(fs, file, layout);\n     }\n \n     public interface Monitor\n     {\n-        void entryAdded( int entrySize );\n+        void entryAdded(int entrySize);\n \n-        void blockFlushed( long keyCount, int numberOfBytes, long positionAfterFlush );\n+        void blockFlushed(long keyCount, int numberOfBytes, long positionAfterFlush);\n \n         /**\n-         * @param entryCount number of entries there are in this block storage.\n+         * @param entryCount                     number of entries there are in this block storage.\n          * @param totalEntriesToWriteDuringMerge total entries that will be written, even accounting for that entries may need to be\n-         * written multiple times back and forth.\n+         *                                       written multiple times back and forth.\n          */\n-        void mergeStarted( long entryCount, long totalEntriesToWriteDuringMerge );\n+        void mergeStarted(long entryCount, long totalEntriesToWriteDuringMerge);\n \n         /**\n          * @param entries number of entries merged since last call. The sum of this value from all calls to this method\n-         * will in the end match the value provided in {@link #mergeStarted(long, long)}.\n+         *                will in the end match the value provided in {@link #mergeStarted(long, long)}.\n          */\n-        void entriesMerged( int entries );\n+        void entriesMerged(int entries);\n \n-        void mergeIterationFinished( long numberOfBlocksBefore, long numberOfBlocksAfter );\n+        void mergeIterationFinished(long numberOfBlocksBefore, long numberOfBlocksAfter);\n \n-        void mergedBlocks( long resultingBlockSize, long resultingEntryCount, long numberOfBlocks );\n+        void mergedBlocks(long resultingBlockSize, long resultingEntryCount, long numberOfBlocks);\n \n         class Adapter implements Monitor\n         {\n             @Override\n-            public void entryAdded( int entrySize )\n+            public void entryAdded(int entrySize)\n             {   // no-op\n             }\n \n             @Override\n-            public void blockFlushed( long keyCount, int numberOfBytes, long positionAfterFlush )\n+            public void blockFlushed(long keyCount, int numberOfBytes, long positionAfterFlush)\n             {   // no-op\n             }\n \n             @Override\n-            public void mergeStarted( long entryCount, long totalEntriesToWriteDuringMerge )\n+            public void mergeStarted(long entryCount, long totalEntriesToWriteDuringMerge)\n             {   // no-op\n             }\n \n             @Override\n-            public void entriesMerged( int entries )\n+            public void entriesMerged(int entries)\n             {   // no-op\n             }\n \n             @Override\n-            public void mergeIterationFinished( long numberOfBlocksBefore, long numberOfBlocksAfter )\n+            public void mergeIterationFinished(long numberOfBlocksBefore, long numberOfBlocksAfter)\n             {   // no-op\n             }\n \n             @Override\n-            public void mergedBlocks( long resultingBlockSize, long resultingEntryCount, long numberOfBlocks )\n+            public void mergedBlocks(long resultingBlockSize, long resultingEntryCount, long numberOfBlocks)\n             {   // no-op\n             }\n         }\n@@ -434,45 +432,45 @@ class BlockStorage<KEY, VALUE> implements Closeable\n         {\n             private final Monitor actual;\n \n-            Delegate( Monitor actual )\n+            Delegate(Monitor actual)\n             {\n                 this.actual = actual;\n             }\n \n             @Override\n-            public void entryAdded( int entrySize )\n+            public void entryAdded(int entrySize)\n             {\n-                actual.entryAdded( entrySize );\n+                actual.entryAdded(entrySize);\n             }\n \n             @Override\n-            public void blockFlushed( long keyCount, int numberOfBytes, long positionAfterFlush )\n+            public void blockFlushed(long keyCount, int numberOfBytes, long positionAfterFlush)\n             {\n-                actual.blockFlushed( keyCount, numberOfBytes, positionAfterFlush );\n+                actual.blockFlushed(keyCount, numberOfBytes, positionAfterFlush);\n             }\n \n             @Override\n-            public void mergeStarted( long entryCount, long totalEntriesToWriteDuringMerge )\n+            public void mergeStarted(long entryCount, long totalEntriesToWriteDuringMerge)\n             {\n-                actual.mergeStarted( entryCount, totalEntriesToWriteDuringMerge );\n+                actual.mergeStarted(entryCount, totalEntriesToWriteDuringMerge);\n             }\n \n             @Override\n-            public void entriesMerged( int entries )\n+            public void entriesMerged(int entries)\n             {\n-                actual.entriesMerged( entries );\n+                actual.entriesMerged(entries);\n             }\n \n             @Override\n-            public void mergeIterationFinished( long numberOfBlocksBefore, long numberOfBlocksAfter )\n+            public void mergeIterationFinished(long numberOfBlocksBefore, long numberOfBlocksAfter)\n             {\n-                actual.mergeIterationFinished( numberOfBlocksBefore, numberOfBlocksAfter );\n+                actual.mergeIterationFinished(numberOfBlocksBefore, numberOfBlocksAfter);\n             }\n \n             @Override\n-            public void mergedBlocks( long resultingBlockSize, long resultingEntryCount, long numberOfBlocks )\n+            public void mergedBlocks(long resultingBlockSize, long resultingEntryCount, long numberOfBlocks)\n             {\n-                actual.mergedBlocks( resultingBlockSize, resultingEntryCount, numberOfBlocks );\n+                actual.mergedBlocks(resultingBlockSize, resultingEntryCount, numberOfBlocks);\n             }\n         }\n \n@@ -491,12 +489,12 @@ class BlockStorage<KEY, VALUE> implements Closeable\n     {\n         private final ScopedBuffer[] scopedBuffers;\n \n-        CompositeScopedBuffer( int numberOfBuffers, int bufferSize, Allocator allocator, MemoryTracker memoryTracker )\n+        CompositeScopedBuffer(int numberOfBuffers, int bufferSize, Allocator allocator, MemoryTracker memoryTracker)\n         {\n             scopedBuffers = new ScopedBuffer[numberOfBuffers];\n-            for ( int i = 0; i < scopedBuffers.length; i++ )\n+            for (int i = 0; i < scopedBuffers.length; i++)\n             {\n-                scopedBuffers[i] = allocator.allocate( bufferSize, memoryTracker );\n+                scopedBuffers[i] = allocator.allocate(bufferSize, memoryTracker);\n             }\n         }\n \n@@ -508,7 +506,7 @@ class BlockStorage<KEY, VALUE> implements Closeable\n         @Override\n         public void close()\n         {\n-            IOUtils.closeAllSilently( scopedBuffers );\n+            IOUtils.closeAllSilently(scopedBuffers);\n         }\n     }\n }\n",
            "diff_size": 136
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
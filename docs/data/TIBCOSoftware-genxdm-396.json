{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "396",
    "information": {
        "errors": [
            {
                "line": "43",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    protected final NodeDynamicContext<N> origContext;\n\n\t/**\n\t * wrap around an existing ExprContext\n\t */\n\tprotected DelegateExprContext(final NodeDynamicContext<N> context)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "44",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/396/DelegateExprContext.java\nindex 9186ed95105..7556a81dd20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/396/DelegateExprContext.java\n@@ -40,10 +40,10 @@ public abstract class DelegateExprContext<N>\n {\r\n     protected final NodeDynamicContext<N> origContext;\r\n \r\n-\t/**\r\n+/**\r\n \t * wrap around an existing ExprContext\r\n \t */\r\n-\tprotected DelegateExprContext(final NodeDynamicContext<N> context)\r\n+ protected DelegateExprContext(final NodeDynamicContext<N> context)\r\n \t{\r\n \t\torigContext = context;\r\n \t}\r\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/396/DelegateExprContext.java\nindex 9186ed95105..6be90049a4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/396/DelegateExprContext.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.expressions;\r\n \r\n import javax.xml.namespace.QName;\r\n@@ -29,41 +30,39 @@ import org.genxdm.xpath.v10.NodeVariant;\n /**\r\n  * an abstract base class for ExprContext classes that override some methods of an\r\n  * existing ExprContext, and delegate the rest of them to that existing ExprContest.\r\n- * \r\n+ *\r\n  * <p>Note that the position and size from the context are *not* implemented or delegated here, because\r\n  * the only reason to override this class is to provide new definitions of those\r\n  * values!\r\n  * </p>\r\n  */\r\n-public abstract class DelegateExprContext<N> \r\n-    implements NodeDynamicContext<N>\r\n-{\r\n+public abstract class DelegateExprContext<N>\r\n+    implements NodeDynamicContext<N> {\r\n     protected final NodeDynamicContext<N> origContext;\r\n \r\n-\t/**\r\n-\t * wrap around an existing ExprContext\r\n-\t */\r\n-\tprotected DelegateExprContext(final NodeDynamicContext<N> context)\r\n-\t{\r\n-\t\torigContext = context;\r\n-\t}\r\n+    /**\r\n+     * wrap around an existing ExprContext\r\n+     */\r\n+    protected DelegateExprContext(final NodeDynamicContext<N> context) {\r\n+        origContext = context;\r\n+    }\r\n \r\n-\tpublic ExtensionContext getExtensionContext(final String namespace) {\r\n-\t\treturn origContext.getExtensionContext(namespace);\r\n-\t}\r\n+    public ExtensionContext getExtensionContext(final String namespace) {\r\n+        return origContext.getExtensionContext(namespace);\r\n+    }\r\n \r\n-\tpublic NodeVariant<N> getVariableValue(final QName name) {\r\n-\t\treturn origContext.getVariableValue(name);\r\n-\t}\r\n+    public NodeVariant<N> getVariableValue(final QName name) {\r\n+        return origContext.getVariableValue(name);\r\n+    }\r\n \r\n-\t@Override\r\n-\tpublic boolean getInheritAttributes() {\r\n-\t\treturn origContext.getInheritAttributes();\r\n-\t}\r\n+    @Override\r\n+    public boolean getInheritAttributes() {\r\n+        return origContext.getInheritAttributes();\r\n+    }\r\n \r\n-\t@Override\r\n-\tpublic boolean getInheritNamespaces() {\r\n-\t\treturn origContext.getInheritNamespaces();\r\n-\t}\r\n+    @Override\r\n+    public boolean getInheritNamespaces() {\r\n+        return origContext.getInheritNamespaces();\r\n+    }\r\n \r\n }\r\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/396/DelegateExprContext.java\nindex 9186ed95105..4770b04bce7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/396/DelegateExprContext.java\n@@ -36,34 +36,33 @@ import org.genxdm.xpath.v10.NodeVariant;\n  * </p>\r\n  */\r\n public abstract class DelegateExprContext<N> \r\n-    implements NodeDynamicContext<N>\r\n+    implements NodeDynamicContext<N>\n {\r\n-    protected final NodeDynamicContext<N> origContext;\r\n-\r\n-\t/**\r\n+    protected final NodeDynamicContext<N> origContext;\n+\n+/**\r\n \t * wrap around an existing ExprContext\r\n \t */\r\n \tprotected DelegateExprContext(final NodeDynamicContext<N> context)\r\n-\t{\r\n-\t\torigContext = context;\r\n-\t}\r\n+\t{\n+    origContext = context;\n+    }\r\n \r\n-\tpublic ExtensionContext getExtensionContext(final String namespace) {\r\n-\t\treturn origContext.getExtensionContext(namespace);\r\n-\t}\r\n+\tpublic ExtensionContext getExtensionContext(final String namespace) {\n+    return origContext.getExtensionContext(namespace);\n+    }\r\n \r\n-\tpublic NodeVariant<N> getVariableValue(final QName name) {\r\n-\t\treturn origContext.getVariableValue(name);\r\n-\t}\r\n+\tpublic NodeVariant<N> getVariableValue(final QName name) {\n+    return origContext.getVariableValue(name);\n+    }\r\n \r\n \t@Override\r\n-\tpublic boolean getInheritAttributes() {\r\n-\t\treturn origContext.getInheritAttributes();\r\n-\t}\r\n+\tpublic boolean getInheritAttributes() {\n+    return origContext.getInheritAttributes();\n+    }\r\n \r\n \t@Override\r\n-\tpublic boolean getInheritNamespaces() {\r\n-\t\treturn origContext.getInheritNamespaces();\r\n-\t}\r\n-\r\n-}\r\n+\tpublic boolean getInheritNamespaces() {\n+    return origContext.getInheritNamespaces();\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/396/DelegateExprContext.java\nindex 9186ed95105..013080732a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/396/DelegateExprContext.java\n@@ -18,12 +18,11 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.expressions;\r\n-\r\n-import javax.xml.namespace.QName;\r\n-\r\n-import org.genxdm.xpath.v10.NodeDynamicContext;\r\n-import org.genxdm.xpath.v10.ExtensionContext;\r\n+package org.genxdm.processor.xpath.v10.expressions;\n+\n+import javax.xml.namespace.QName;\n+import org.genxdm.xpath.v10.NodeDynamicContext;\n+import org.genxdm.xpath.v10.ExtensionContext;\n import org.genxdm.xpath.v10.NodeVariant;\r\n \r\n /**\r\n@@ -34,36 +33,40 @@ import org.genxdm.xpath.v10.NodeVariant;\n  * the only reason to override this class is to provide new definitions of those\r\n  * values!\r\n  * </p>\r\n- */\r\n-public abstract class DelegateExprContext<N> \r\n-    implements NodeDynamicContext<N>\r\n-{\r\n+ */\n+\n+public abstract class DelegateExprContext<N> implements NodeDynamicContext<N>\n+{\n     protected final NodeDynamicContext<N> origContext;\r\n \r\n-\t/**\r\n-\t * wrap around an existing ExprContext\r\n-\t */\r\n-\tprotected DelegateExprContext(final NodeDynamicContext<N> context)\r\n-\t{\r\n-\t\torigContext = context;\r\n-\t}\r\n-\r\n-\tpublic ExtensionContext getExtensionContext(final String namespace) {\r\n-\t\treturn origContext.getExtensionContext(namespace);\r\n-\t}\r\n-\r\n-\tpublic NodeVariant<N> getVariableValue(final QName name) {\r\n-\t\treturn origContext.getVariableValue(name);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean getInheritAttributes() {\r\n-\t\treturn origContext.getInheritAttributes();\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean getInheritNamespaces() {\r\n-\t\treturn origContext.getInheritNamespaces();\r\n-\t}\r\n-\r\n-}\r\n+    /**\r\n+     * wrap around an existing ExprContext\r\n+     */\n+\n+    protected DelegateExprContext(final NodeDynamicContext<N> context)\n+    {\n+        origContext = context;\n+    }\n+\n+    public ExtensionContext getExtensionContext(final String namespace)\n+    {\n+        return origContext.getExtensionContext(namespace);\n+    }\n+\n+    public NodeVariant<N> getVariableValue(final QName name)\n+    {\n+        return origContext.getVariableValue(name);\n+    }\n+\n+    @Override\n+    public boolean getInheritAttributes()\n+    {\n+        return origContext.getInheritAttributes();\n+    }\n+\n+    @Override\n+    public boolean getInheritNamespaces()\n+    {\n+        return origContext.getInheritNamespaces();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/396/DelegateExprContext.java\nindex 9186ed95105..7556a81dd20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/396/DelegateExprContext.java\n@@ -40,10 +40,10 @@ public abstract class DelegateExprContext<N>\n {\r\n     protected final NodeDynamicContext<N> origContext;\r\n \r\n-\t/**\r\n+/**\r\n \t * wrap around an existing ExprContext\r\n \t */\r\n-\tprotected DelegateExprContext(final NodeDynamicContext<N> context)\r\n+ protected DelegateExprContext(final NodeDynamicContext<N> context)\r\n \t{\r\n \t\torigContext = context;\r\n \t}\r\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "44",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/396/DelegateExprContext.java\nindex 9186ed95105..337dd90bfaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/396/DelegateExprContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/396/DelegateExprContext.java\n@@ -40,10 +40,10 @@ public abstract class DelegateExprContext<N>\n {\r\n     protected final NodeDynamicContext<N> origContext;\r\n \r\n-\t/**\r\n+    /**\r\n \t * wrap around an existing ExprContext\r\n \t */\r\n-\tprotected DelegateExprContext(final NodeDynamicContext<N> context)\r\n+ protected DelegateExprContext(final NodeDynamicContext<N> context)\r\n \t{\r\n \t\torigContext = context;\r\n \t}\r\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
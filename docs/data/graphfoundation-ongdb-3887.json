{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3887",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3887/DateSchemaKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3887/DateSchemaKey.java\nindex 7eafbbb2b71..e975d04ffe1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3887/DateSchemaKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3887/DateSchemaKey.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.values.storable.DateValue;\n@@ -29,56 +30,56 @@ import static java.lang.String.format;\n  */\n class DateSchemaKey extends NativeSchemaKey<DateSchemaKey>\n {\n-    static final int SIZE =\n-            Long.BYTES + /* epochDay */\n-            Long.BYTES;  /* entityId */\n+  static final int SIZE =\n+      Long.BYTES + /* epochDay */\n+          Long.BYTES;  /* entityId */\n \n-    long epochDay;\n+  long epochDay;\n \n-    @Override\n-    public Value asValue()\n-    {\n-        return DateValue.epochDate( epochDay );\n-    }\n+  @Override\n+  public Value asValue()\n+  {\n+    return DateValue.epochDate(epochDay);\n+  }\n \n-    @Override\n-    void initValueAsLowest()\n-    {\n-        epochDay = Long.MIN_VALUE;\n-    }\n+  @Override\n+  void initValueAsLowest()\n+  {\n+    epochDay = Long.MIN_VALUE;\n+  }\n \n-    @Override\n-    void initValueAsHighest()\n-    {\n-        epochDay = Long.MAX_VALUE;\n-    }\n+  @Override\n+  void initValueAsHighest()\n+  {\n+    epochDay = Long.MAX_VALUE;\n+  }\n \n-    @Override\n-    public int compareValueTo( DateSchemaKey other )\n-    {\n-        return Long.compare( epochDay, other.epochDay );\n-    }\n+  @Override\n+  public int compareValueTo(DateSchemaKey other)\n+  {\n+    return Long.compare(epochDay, other.epochDay);\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return format( \"value=%s,entityId=%d,epochDay=%d\", asValue(), getEntityId(), epochDay );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"value=%s,entityId=%d,epochDay=%d\", asValue(), getEntityId(), epochDay);\n+  }\n \n-    @Override\n-    public void writeDate( long epochDay )\n-    {\n-        this.epochDay = epochDay;\n-    }\n+  @Override\n+  public void writeDate(long epochDay)\n+  {\n+    this.epochDay = epochDay;\n+  }\n \n-    @Override\n-    protected Value assertCorrectType( Value value )\n+  @Override\n+  protected Value assertCorrectType(Value value)\n+  {\n+    if (!(value instanceof DateValue))\n     {\n-        if ( !(value instanceof DateValue) )\n-        {\n-            throw new IllegalArgumentException(\n-                    \"Key layout does only support DateValue, tried to create key from \" + value );\n-        }\n-        return value;\n+      throw new IllegalArgumentException(\n+          \"Key layout does only support DateValue, tried to create key from \" + value);\n     }\n+    return value;\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3887/DateSchemaKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3887/DateSchemaKey.java\nindex 7eafbbb2b71..d1e6deeaeb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3887/DateSchemaKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3887/DateSchemaKey.java\n@@ -29,11 +29,10 @@ import static java.lang.String.format;\n  */\n class DateSchemaKey extends NativeSchemaKey<DateSchemaKey>\n {\n-    static final int SIZE =\n-            Long.BYTES + /* epochDay */\n-            Long.BYTES;  /* entityId */\n-\n-    long epochDay;\n+    static final int SIZE = Long.BYTES + /* epochDay */\n+            Long.BYTES;\n+/* entityId */\n+long epochDay;\n \n     @Override\n     public Value asValue()\n@@ -74,11 +73,11 @@ class DateSchemaKey extends NativeSchemaKey<DateSchemaKey>\n     @Override\n     protected Value assertCorrectType( Value value )\n     {\n-        if ( !(value instanceof DateValue) )\n+        if ( !( value instanceof DateValue) )\n         {\n-            throw new IllegalArgumentException(\n-                    \"Key layout does only support DateValue, tried to create key from \" + value );\n+            throw new IllegalArgumentException( \"Key layout does only support DateValue, tried to create key from \" + value );\n         }\n-        return value;\n+\n+return value;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
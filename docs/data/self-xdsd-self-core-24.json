{
    "project_name": "self-xdsd-self-core",
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "94",
                "column": "23",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "                @Override\n                public JsonObject get() {\n                    if(this.json == null) {\n                        final Resource resource = resources.get(issueUri);\n                        switch (resource.statusCode()) {\n                            case HttpURLConnection.HTTP_OK:",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/24/GithubIssue.java\nindex 9548de60b91..9d6d642a352 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/24/GithubIssue.java\n@@ -91,7 +91,7 @@ final class GithubIssue implements Issue {\n \n                 @Override\n                 public JsonObject get() {\n-                    if(this.json == null) {\n+                    if (this.json == null) {\n                         final Resource resource = resources.get(issueUri);\n                         switch (resource.statusCode()) {\n                             case HttpURLConnection.HTTP_OK:\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/24/GithubIssue.java\nindex 9548de60b91..afca1915930 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/24/GithubIssue.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core;\n \n import com.selfxdsd.api.*;\n@@ -36,6 +37,7 @@ import java.util.function.Supplier;\n \n /**\n  * An Issue in a Github repository.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.1\n@@ -71,8 +73,9 @@ final class GithubIssue implements Issue {\n \n     /**\n      * Ctor.\n-     * @param issueUri Issue URI.\n-     * @param storage Self's Storage.\n+     *\n+     * @param issueUri  Issue URI.\n+     * @param storage   Self's Storage.\n      * @param resources JSON Resources.\n      */\n     GithubIssue(\n@@ -91,7 +94,7 @@ final class GithubIssue implements Issue {\n \n                 @Override\n                 public JsonObject get() {\n-                    if(this.json == null) {\n+                    if (this.json == null) {\n                         final Resource resource = resources.get(issueUri);\n                         switch (resource.statusCode()) {\n                             case HttpURLConnection.HTTP_OK:\n@@ -100,9 +103,9 @@ final class GithubIssue implements Issue {\n                             default:\n                                 throw new IllegalStateException(\n                                     \"Could not get the issue [\"\n-                                    + issueUri.toString() + \"]. \"\n-                                    + \"Received status code: \"\n-                                    + resource.statusCode()\n+                                        + issueUri.toString() + \"]. \"\n+                                        + \"Received status code: \"\n+                                        + resource.statusCode()\n                                 );\n                         }\n                     }\n@@ -116,9 +119,10 @@ final class GithubIssue implements Issue {\n \n     /**\n      * Ctor.\n-     * @param issueUri Issues base URI.\n-     * @param json Supplier of Json Issue as returned by Github's API.\n-     * @param storage Storage.\n+     *\n+     * @param issueUri  Issues base URI.\n+     * @param json      Supplier of Json Issue as returned by Github's API.\n+     * @param storage   Storage.\n      * @param resources Github's JSON Resources.\n      */\n     GithubIssue(\n@@ -183,7 +187,7 @@ final class GithubIssue implements Issue {\n         final boolean assigned;\n         LOG.debug(\n             \"Assigning user \" + username + \" to Issue [\"\n-            + this.issueUri.toString() + \"]...\"\n+                + this.issueUri.toString() + \"]...\"\n         );\n         final Resource resource = this.resources.post(\n             URI.create(this.issueUri + \"/assignees\"),\n@@ -201,7 +205,7 @@ final class GithubIssue implements Issue {\n         } else {\n             LOG.debug(\n                 \"Problem while assigning user \" + username + \". \"\n-                + \"Expected 201 CREATED, but got \" + resource.statusCode()\n+                    + \"Expected 201 CREATED, but got \" + resource.statusCode()\n             );\n             assigned = false;\n         }\n@@ -213,7 +217,7 @@ final class GithubIssue implements Issue {\n         final boolean unassigned;\n         LOG.debug(\n             \"Unassigning user \" + username + \" from Issue [\"\n-            + this.issueUri.toString() + \"]...\"\n+                + this.issueUri.toString() + \"]...\"\n         );\n         final Resource resource = this.resources.delete(\n             URI.create(this.issueUri + \"/assignees\"),\n@@ -231,7 +235,7 @@ final class GithubIssue implements Issue {\n         } else {\n             LOG.debug(\n                 \"Problem while unassigning user \" + username + \". \"\n-                + \"Expected 200 OK, but got \" + resource.statusCode()\n+                    + \"Expected 200 OK, but got \" + resource.statusCode()\n             );\n             unassigned = false;\n         }\n@@ -264,12 +268,12 @@ final class GithubIssue implements Issue {\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n             LOG.debug(\n                 \"Issue [\" + this.issueUri.toString() + \"] \"\n-                + \"successfully closed.\"\n+                    + \"successfully closed.\"\n             );\n         } else {\n             LOG.error(\n                 \"Problem while closing Issue [\" + this.issueUri.toString()\n-                + \"]. Expected 200 OK, received \" + resource.statusCode()\n+                    + \"]. Expected 200 OK, received \" + resource.statusCode()\n             );\n         }\n     }\n@@ -288,12 +292,12 @@ final class GithubIssue implements Issue {\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n             LOG.debug(\n                 \"Issue [\" + this.issueUri.toString() + \"] \"\n-                + \"successfully reopened.\"\n+                    + \"successfully reopened.\"\n             );\n         } else {\n             LOG.error(\n                 \"Problem while reopening Issue [\" + this.issueUri.toString()\n-                + \"]. Expected 200 OK, received \" + resource.statusCode()\n+                    + \"]. Expected 200 OK, received \" + resource.statusCode()\n             );\n         }\n     }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/24/GithubIssue.java\nindex 9548de60b91..673d8cbb7cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/24/GithubIssue.java\n@@ -91,7 +91,7 @@ final class GithubIssue implements Issue {\n \n                 @Override\n                 public JsonObject get() {\n-                    if(this.json == null) {\n+                    if (this.json == null) {\n                         final Resource resource = resources.get(issueUri);\n                         switch (resource.statusCode()) {\n                             case HttpURLConnection.HTTP_OK:\n@@ -321,4 +321,4 @@ final class GithubIssue implements Issue {\n             this.resources\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 16, expected is 27, indentation should be the same level as line 98.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'object def' child has incorrect indentation level 27, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 31, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'switch' has incorrect indentation level 35, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 65, expected level should be one of the following: 24, 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 69, expected level should be one of the following: 28, 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 69, expected level should be one of the following: 28, 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 65, expected level should be one of the following: 24, 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 39, expected level should be one of the following: 28, 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 35, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 31, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "260",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "263",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "264",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "283",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/24/GithubIssue.java\nindex 9548de60b91..b678a2a7240 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/24/GithubIssue.java\n@@ -26,7 +26,6 @@ import com.selfxdsd.api.*;\n import com.selfxdsd.api.storage.Storage;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.json.Json;\n import javax.json.JsonObject;\n import javax.json.JsonValue;\n@@ -40,33 +39,43 @@ import java.util.function.Supplier;\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n final class GithubIssue implements Issue {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        GithubIssue.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GithubIssue.class);\n \n     /**\n      * Issue base uri.\n      */\n+\n+\n     private final URI issueUri;\n \n     /**\n      * Supplier of Issue JSON as returned by Github's API.\n      */\n+\n+\n     private final Supplier<JsonObject> json;\n \n     /**\n      * Self storage, in case we want to store something.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Github's JSON Resources.\n      */\n+\n+\n     private final JsonResources resources;\n \n     /**\n@@ -75,43 +84,37 @@ final class GithubIssue implements Issue {\n      * @param storage Self's Storage.\n      * @param resources JSON Resources.\n      */\n-    GithubIssue(\n-        final URI issueUri,\n-        final Storage storage,\n-        final JsonResources resources\n-    ) {\n-        this(\n-            issueUri,\n-            new Supplier<>() {\n+\n+\n+    GithubIssue(final URI issueUri, final Storage storage,\n+                final JsonResources resources) {\n+        this(issueUri, new Supplier<>() {\n \n                 /**\n                  * Cached json. Make sure to read it from the API only once.\n                  */\n-                private JsonObject json;\n-\n-                @Override\n-                public JsonObject get() {\n-                    if(this.json == null) {\n-                        final Resource resource = resources.get(issueUri);\n-                        switch (resource.statusCode()) {\n-                            case HttpURLConnection.HTTP_OK:\n-                                this.json = resource.asJsonObject();\n-                                break;\n-                            default:\n-                                throw new IllegalStateException(\n-                                    \"Could not get the issue [\"\n-                                    + issueUri.toString() + \"]. \"\n-                                    + \"Received status code: \"\n-                                    + resource.statusCode()\n-                                );\n-                        }\n-                    }\n-                    return this.json;\n-                }\n-            },\n-            storage,\n-            resources\n-        );\n+\n+\n+                           private JsonObject json;\n+\n+                           @Override\n+                           public JsonObject get() {\n+                               if (this.json == null) {\n+                                   final Resource resource = resources.get(issueUri);\n+                                   switch(resource.statusCode()) {\n+                                                                 case HttpURLConnection.HTTP_OK:\n+                                                                     this.json = resource.asJsonObject();\n+                                                                     break;\n+                                                                 default:\n+                                       throw new IllegalStateException(\"Could not get the issue [\"\n+                                                                           + issueUri.toString() + \"]. \"\n+                                                                           + \"Received status code: \"\n++ resource.statusCode());\n+                                   }\n+                               }\n+                               return this.json;\n+                           }\n+                       }, storage, resources);\n     }\n \n     /**\n@@ -121,6 +124,8 @@ final class GithubIssue implements Issue {\n      * @param storage Storage.\n      * @param resources Github's JSON Resources.\n      */\n+\n+\n     GithubIssue(\n         final URI issueUri,\n         final Supplier<JsonObject> json,\n@@ -150,10 +155,9 @@ final class GithubIssue implements Issue {\n \n     @Override\n     public String repoFullName() {\n-        final String[] parts = this.json.get().getString(\"url\").substring(\n-            \"https://api.github.com/repos/\".length()\n-        ).split(\"/\");\n-        return parts[0] + \"/\" + parts[1];\n+        final String[] parts = this.json.get().getString(\"url\").substring(\"https://api.github.com/repos/\".length()).split(\"/\");\n+        return parts[ 0 ] + \"/\"\n++ parts[ 1 ];\n     }\n \n     @Override\n@@ -181,28 +185,25 @@ final class GithubIssue implements Issue {\n     @Override\n     public boolean assign(final String username) {\n         final boolean assigned;\n-        LOG.debug(\n-            \"Assigning user \" + username + \" to Issue [\"\n-            + this.issueUri.toString() + \"]...\"\n-        );\n+        LOG.debug(\"Assigning user \"\n+                      + username + \" to Issue [\"\n+                      + this.issueUri.toString() + \"]...\");\n         final Resource resource = this.resources.post(\n             URI.create(this.issueUri + \"/assignees\"),\n-            Json.createObjectBuilder()\n-                .add(\n-                    \"assignees\",\n-                    Json.createArrayBuilder()\n-                        .add(username)\n-                        .build()\n-                ).build()\n+            Json.createObjectBuilder().add(\n+                                      \"assignees\",\n+                                      Json.createArrayBuilder().add(username).build()\n+                                  ).build()\n         );\n         if (resource.statusCode() == HttpURLConnection.HTTP_CREATED) {\n-            LOG.debug(\"User \" + username + \" assigned successfully!\");\n+            LOG.debug(\"User \"\n+                          + username + \" assigned successfully!\");\n             assigned = true;\n         } else {\n-            LOG.debug(\n-                \"Problem while assigning user \" + username + \". \"\n-                + \"Expected 201 CREATED, but got \" + resource.statusCode()\n-            );\n+            LOG.debug(\"Problem while assigning user \"\n+                          + username + \". \"\n+                          + \"Expected 201 CREATED, but got \"\n++ resource.statusCode());\n             assigned = false;\n         }\n         return assigned;\n@@ -211,28 +212,25 @@ final class GithubIssue implements Issue {\n     @Override\n     public boolean unassign(final String username) {\n         final boolean unassigned;\n-        LOG.debug(\n-            \"Unassigning user \" + username + \" from Issue [\"\n-            + this.issueUri.toString() + \"]...\"\n-        );\n+        LOG.debug(\"Unassigning user \"\n+                      + username + \" from Issue [\"\n+                      + this.issueUri.toString() + \"]...\");\n         final Resource resource = this.resources.delete(\n             URI.create(this.issueUri + \"/assignees\"),\n-            Json.createObjectBuilder()\n-                .add(\n-                    \"assignees\",\n-                    Json.createArrayBuilder()\n-                        .add(username)\n-                        .build()\n-                ).build()\n+            Json.createObjectBuilder().add(\n+                                      \"assignees\",\n+                                      Json.createArrayBuilder().add(username).build()\n+                                  ).build()\n         );\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n-            LOG.debug(\"User \" + username + \" unassigned successfully!\");\n+            LOG.debug(\"User \"\n+                          + username + \" unassigned successfully!\");\n             unassigned = true;\n         } else {\n-            LOG.debug(\n-                \"Problem while unassigning user \" + username + \". \"\n-                + \"Expected 200 OK, but got \" + resource.statusCode()\n-            );\n+            LOG.debug(\"Problem while unassigning user \"\n+                          + username + \". \"\n+                          + \"Expected 200 OK, but got \"\n++ resource.statusCode());\n             unassigned = false;\n         }\n         return unassigned;\n@@ -245,56 +243,44 @@ final class GithubIssue implements Issue {\n \n     @Override\n     public Comments comments() {\n-        return new DoNotRepeat(\n-            new GithubIssueComments(this.issueUri, this.resources)\n-        );\n+        return new DoNotRepeat(new GithubIssueComments(this.issueUri, this.resources));\n     }\n \n     @Override\n     public void close() {\n-        LOG.debug(\n-            \"Cosing Issue [\" + this.issueUri.toString() + \"]...\"\n-        );\n+        LOG.debug(\"Cosing Issue [\"\n+                      + this.issueUri.toString() + \"]...\");\n         final Resource resource = this.resources.patch(\n             this.issueUri,\n-            Json.createObjectBuilder()\n-                .add(\"state\", \"closed\")\n-                .build()\n+            Json.createObjectBuilder().add(\"state\", \"closed\").build()\n         );\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n-            LOG.debug(\n-                \"Issue [\" + this.issueUri.toString() + \"] \"\n-                + \"successfully closed.\"\n-            );\n+            LOG.debug(\"Issue [\"\n+                                             + this.issueUri.toString() + \"] \"\n++ \"successfully closed.\");\n         } else {\n-            LOG.error(\n-                \"Problem while closing Issue [\" + this.issueUri.toString()\n-                + \"]. Expected 200 OK, received \" + resource.statusCode()\n-            );\n+            LOG.error(\"Problem while closing Issue [\"\n+                                             + this.issueUri.toString() + \"]. Expected 200 OK, received \"\n++ resource.statusCode());\n         }\n     }\n \n     @Override\n     public void reopen() {\n-        LOG.debug(\n-            \"Reopening Issue [\" + this.issueUri.toString() + \"]...\"\n-        );\n+        LOG.debug(\"Reopening Issue [\"\n+                      + this.issueUri.toString() + \"]...\");\n         final Resource resource = this.resources.patch(\n             this.issueUri,\n-            Json.createObjectBuilder()\n-                .add(\"state\", \"open\")\n-                .build()\n+            Json.createObjectBuilder().add(\"state\", \"open\").build()\n         );\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n-            LOG.debug(\n-                \"Issue [\" + this.issueUri.toString() + \"] \"\n-                + \"successfully reopened.\"\n-            );\n+            LOG.debug(\"Issue [\"\n+                                             + this.issueUri.toString() + \"] \"\n++ \"successfully reopened.\");\n         } else {\n-            LOG.error(\n-                \"Problem while reopening Issue [\" + this.issueUri.toString()\n-                + \"]. Expected 200 OK, received \" + resource.statusCode()\n-            );\n+            LOG.error(\"Problem while reopening Issue [\"\n+                                             + this.issueUri.toString() + \"]. Expected 200 OK, received \"\n++ resource.statusCode());\n         }\n     }\n \n@@ -305,8 +291,8 @@ final class GithubIssue implements Issue {\n \n     @Override\n     public boolean isPullRequest() {\n-        return this.json.get().getString(\"html_url\")\n-            .endsWith(\"/pull/\" + this.issueId());\n+        return this.json.get().getString(\"html_url\").endsWith(\"/pull/\"\n+                                                                  + this.issueId());\n     }\n \n     @Override\n@@ -321,4 +307,4 @@ final class GithubIssue implements Issue {\n             this.resources\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 121
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/24/GithubIssue.java\nindex 9548de60b91..9d6d642a352 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/24/GithubIssue.java\n@@ -91,7 +91,7 @@ final class GithubIssue implements Issue {\n \n                 @Override\n                 public JsonObject get() {\n-                    if(this.json == null) {\n+                    if (this.json == null) {\n                         final Resource resource = resources.get(issueUri);\n                         switch (resource.statusCode()) {\n                             case HttpURLConnection.HTTP_OK:\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/24/GithubIssue.java\nindex 9548de60b91..9d6d642a352 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/24/GithubIssue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/24/GithubIssue.java\n@@ -91,7 +91,7 @@ final class GithubIssue implements Issue {\n \n                 @Override\n                 public JsonObject get() {\n-                    if(this.json == null) {\n+                    if (this.json == null) {\n                         final Resource resource = resources.get(issueUri);\n                         switch (resource.statusCode()) {\n                             case HttpURLConnection.HTTP_OK:\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4106",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4106/NonStreamingBatchOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4106/NonStreamingBatchOperations.java\nindex 3bde0bcec5e..9ea495b83ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4106/NonStreamingBatchOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4106/NonStreamingBatchOperations.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.batch;\n \n import java.io.IOException;\n@@ -35,36 +36,35 @@ import org.neo4j.server.web.WebServer;\n public class NonStreamingBatchOperations extends BatchOperations\n {\n \n-    private BatchOperationResults results;\n+  private BatchOperationResults results;\n \n-    public NonStreamingBatchOperations( WebServer webServer )\n-    {\n-        super( webServer );\n-    }\n+  public NonStreamingBatchOperations(WebServer webServer)\n+  {\n+    super(webServer);\n+  }\n \n-    public BatchOperationResults performBatchJobs( UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req,\n-            InputStream body ) throws IOException, ServletException\n-    {\n-        results = new BatchOperationResults();\n-        parseAndPerform( uriInfo, httpHeaders, req, body, results.getLocations() );\n-        return results;\n-    }\n+  public BatchOperationResults performBatchJobs(UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req,\n+                                                InputStream body) throws IOException, ServletException\n+  {\n+    results = new BatchOperationResults();\n+    parseAndPerform(uriInfo, httpHeaders, req, body, results.getLocations());\n+    return results;\n+  }\n \n-    @Override\n-    protected void invoke( String method, String path, String body, Integer id, URI targetUri,\n-            InternalJettyServletRequest req, InternalJettyServletResponse res ) throws IOException, ServletException\n-    {\n-        webServer.invokeDirectly( targetUri.getPath(), req, res );\n+  @Override\n+  protected void invoke(String method, String path, String body, Integer id, URI targetUri,\n+                        InternalJettyServletRequest req, InternalJettyServletResponse res) throws IOException, ServletException\n+  {\n+    webServer.invokeDirectly(targetUri.getPath(), req, res);\n \n-        String resultBody = res.getOutputStream().toString();\n-        if ( is2XXStatusCode( res.getStatus() ) )\n-        {\n-            results.addOperationResult( path, id, resultBody, res.getHeader( \"Location\" ) );\n-        }\n-        else\n-        {\n-            throw new BatchOperationFailedException( res.getStatus(), resultBody, null );\n-        }\n+    String resultBody = res.getOutputStream().toString();\n+    if (is2XXStatusCode(res.getStatus()))\n+    {\n+      results.addOperationResult(path, id, resultBody, res.getHeader(\"Location\"));\n+    } else\n+    {\n+      throw new BatchOperationFailedException(res.getStatus(), resultBody, null);\n     }\n+  }\n \n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4106/NonStreamingBatchOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4106/NonStreamingBatchOperations.java\nindex 3bde0bcec5e..9cb37f8921e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4106/NonStreamingBatchOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4106/NonStreamingBatchOperations.java\n@@ -34,7 +34,6 @@ import org.neo4j.server.web.WebServer;\n \n public class NonStreamingBatchOperations extends BatchOperations\n {\n-\n     private BatchOperationResults results;\n \n     public NonStreamingBatchOperations( WebServer webServer )\n@@ -44,7 +43,7 @@ public class NonStreamingBatchOperations extends BatchOperations\n \n     public BatchOperationResults performBatchJobs( UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req,\n             InputStream body ) throws IOException, ServletException\n-    {\n+{\n         results = new BatchOperationResults();\n         parseAndPerform( uriInfo, httpHeaders, req, body, results.getLocations() );\n         return results;\n@@ -53,10 +52,9 @@ public class NonStreamingBatchOperations extends BatchOperations\n     @Override\n     protected void invoke( String method, String path, String body, Integer id, URI targetUri,\n             InternalJettyServletRequest req, InternalJettyServletResponse res ) throws IOException, ServletException\n-    {\n+{\n         webServer.invokeDirectly( targetUri.getPath(), req, res );\n-\n-        String resultBody = res.getOutputStream().toString();\n+String resultBody = res.getOutputStream().toString();\n         if ( is2XXStatusCode( res.getStatus() ) )\n         {\n             results.addOperationResult( path, id, resultBody, res.getHeader( \"Location\" ) );\n@@ -66,5 +64,4 @@ public class NonStreamingBatchOperations extends BatchOperations\n             throw new BatchOperationFailedException( res.getStatus(), resultBody, null );\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4106/NonStreamingBatchOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4106/NonStreamingBatchOperations.java\nindex 3bde0bcec5e..e9adea11cad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4106/NonStreamingBatchOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4106/NonStreamingBatchOperations.java\n@@ -26,7 +26,6 @@ import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.UriInfo;\n-\n import org.neo4j.server.rest.domain.BatchOperationFailedException;\n import org.neo4j.server.rest.web.InternalJettyServletRequest;\n import org.neo4j.server.rest.web.InternalJettyServletResponse;\n@@ -34,7 +33,6 @@ import org.neo4j.server.web.WebServer;\n \n public class NonStreamingBatchOperations extends BatchOperations\n {\n-\n     private BatchOperationResults results;\n \n     public NonStreamingBatchOperations( WebServer webServer )\n@@ -42,8 +40,7 @@ public class NonStreamingBatchOperations extends BatchOperations\n         super( webServer );\n     }\n \n-    public BatchOperationResults performBatchJobs( UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req,\n-            InputStream body ) throws IOException, ServletException\n+    public BatchOperationResults performBatchJobs( UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req, InputStream body ) throws IOException, ServletException\n     {\n         results = new BatchOperationResults();\n         parseAndPerform( uriInfo, httpHeaders, req, body, results.getLocations() );\n@@ -51,11 +48,9 @@ public class NonStreamingBatchOperations extends BatchOperations\n     }\n \n     @Override\n-    protected void invoke( String method, String path, String body, Integer id, URI targetUri,\n-            InternalJettyServletRequest req, InternalJettyServletResponse res ) throws IOException, ServletException\n+    protected void invoke( String method, String path, String body, Integer id, URI targetUri, InternalJettyServletRequest req, InternalJettyServletResponse res ) throws IOException, ServletException\n     {\n         webServer.invokeDirectly( targetUri.getPath(), req, res );\n-\n         String resultBody = res.getOutputStream().toString();\n         if ( is2XXStatusCode( res.getStatus() ) )\n         {\n@@ -66,5 +61,4 @@ public class NonStreamingBatchOperations extends BatchOperations\n             throw new BatchOperationFailedException( res.getStatus(), resultBody, null );\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
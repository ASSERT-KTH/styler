{
    "project_name": "eclipse-kura",
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "57",
                "column": "50",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "        wifiAccessPoint.setFrequency(this.frequency);\n        wifiAccessPoint.setHardwareAddress(this.hardwareAddress);\n        wifiAccessPoint.setMode(WifiMode.MASTER);\t\t\t\t// FIME - is this right? - always MASTER - or maybe\n        // AD-HOC too?\n        wifiAccessPoint.setRsnSecurity(this.rsn.getWifiSecurityFlags());\n        wifiAccessPoint.setStrength(this.strength);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "87",
                    "column": "28",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/17/IWAPParser.java\nindex 440eff682fc..65527e1dd95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/17/IWAPParser.java\n@@ -54,7 +54,8 @@ class IWAPParser {\n         wifiAccessPoint.setBitrate(this.bitrate);\n         wifiAccessPoint.setFrequency(this.frequency);\n         wifiAccessPoint.setHardwareAddress(this.hardwareAddress);\n-        wifiAccessPoint.setMode(WifiMode.MASTER);\t\t\t\t// FIME - is this right? - always MASTER - or maybe\n+        wifiAccessPoint.setMode(WifiMode.MASTER);\n+        // FIME - is this right? - always MASTER - or maybe\n         // AD-HOC too?\n         wifiAccessPoint.setRsnSecurity(this.rsn.getWifiSecurityFlags());\n         wifiAccessPoint.setStrength(this.strength);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/17/IWAPParser.java\nindex 440eff682fc..046c75a09a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/17/IWAPParser.java\n@@ -54,7 +54,7 @@ class IWAPParser {\n         wifiAccessPoint.setBitrate(this.bitrate);\n         wifiAccessPoint.setFrequency(this.frequency);\n         wifiAccessPoint.setHardwareAddress(this.hardwareAddress);\n-        wifiAccessPoint.setMode(WifiMode.MASTER);\t\t\t\t// FIME - is this right? - always MASTER - or maybe\n+        wifiAccessPoint.setMode(WifiMode.MASTER);                // FIME - is this right? - always MASTER - or maybe\n         // AD-HOC too?\n         wifiAccessPoint.setRsnSecurity(this.rsn.getWifiSecurityFlags());\n         wifiAccessPoint.setStrength(this.strength);\n@@ -66,10 +66,8 @@ class IWAPParser {\n     }\n \n     /**\n-     * @param propLine\n-     *            A trimmed line from iw scan.\n-     * @throws Exception\n-     *             Something went wrong for this AP.\n+     * @param propLine A trimmed line from iw scan.\n+     * @throws Exception Something went wrong for this AP.\n      */\n     public void parsePropLine(String propLine) throws Exception {\n \n@@ -83,7 +81,7 @@ class IWAPParser {\n \n         } else if (propLine.startsWith(\"freq:\")) {\n             StringTokenizer st = new StringTokenizer(propLine, \" \");\n-            st.nextToken();\t// eat freq:\n+            st.nextToken();    // eat freq:\n             this.frequency = Long.parseLong(st.nextToken());\n \n         } else if (propLine.startsWith(\"SSID: \")) {\n@@ -103,7 +101,7 @@ class IWAPParser {\n                 this.bitrate = new ArrayList<>();\n             }\n             String[] rateStrings = propLine.replaceFirst(\"Supported rates: \", \"\").replaceAll(\"\\\\*\", \"\").trim()\n-                    .split(\" \");\n+                .split(\" \");\n             for (String rateString : rateStrings) {\n                 this.bitrate.add((long) (Float.parseFloat(rateString) * 1000000));\n             }\n@@ -115,7 +113,7 @@ class IWAPParser {\n             }\n \n             String[] rateStrings = propLine.replaceFirst(\"Extended supported rates: \", \"\").replaceAll(\"\\\\*\", \"\").trim()\n-                    .split(\" \");\n+                .split(\" \");\n             for (String rateString : rateStrings) {\n                 this.bitrate.add((long) (Float.parseFloat(rateString) * 1000000));\n             }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/17/IWAPParser.java\nindex 440eff682fc..f4fba259126 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/17/IWAPParser.java\n@@ -54,7 +54,9 @@ class IWAPParser {\n         wifiAccessPoint.setBitrate(this.bitrate);\n         wifiAccessPoint.setFrequency(this.frequency);\n         wifiAccessPoint.setHardwareAddress(this.hardwareAddress);\n-        wifiAccessPoint.setMode(WifiMode.MASTER);\t\t\t\t// FIME - is this right? - always MASTER - or maybe\n+        wifiAccessPoint.setMode(WifiMode.MASTER);\n+\n+// FIME - is this right? - always MASTER - or maybe\n         // AD-HOC too?\n         wifiAccessPoint.setRsnSecurity(this.rsn.getWifiSecurityFlags());\n         wifiAccessPoint.setStrength(this.strength);\n@@ -83,7 +85,9 @@ class IWAPParser {\n \n         } else if (propLine.startsWith(\"freq:\")) {\n             StringTokenizer st = new StringTokenizer(propLine, \" \");\n-            st.nextToken();\t// eat freq:\n+            st.nextToken();\n+\n+// eat freq:\n             this.frequency = Long.parseLong(st.nextToken());\n \n         } else if (propLine.startsWith(\"SSID: \")) {\n@@ -144,4 +148,4 @@ class IWAPParser {\n             logger.debug(\"Ignoring line in scan result: {}\", propLine);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/17/IWAPParser.java\nindex 440eff682fc..bfd73be6953 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/17/IWAPParser.java\n@@ -15,7 +15,6 @@ package org.eclipse.kura.linux.net.util;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.StringTokenizer;\n-\n import org.eclipse.kura.core.net.WifiAccessPointImpl;\n import org.eclipse.kura.core.net.util.NetworkUtil;\n import org.eclipse.kura.net.wifi.WifiAccessPoint;\n@@ -26,6 +25,7 @@ import org.slf4j.LoggerFactory;\n /**\n  * Consumes AP property lines from iw scan command.\n  */\n+\n class IWAPParser {\n \n     private static final Logger logger = LoggerFactory.getLogger(IWAPParser.class);\n@@ -54,11 +54,12 @@ class IWAPParser {\n         wifiAccessPoint.setBitrate(this.bitrate);\n         wifiAccessPoint.setFrequency(this.frequency);\n         wifiAccessPoint.setHardwareAddress(this.hardwareAddress);\n-        wifiAccessPoint.setMode(WifiMode.MASTER);\t\t\t\t// FIME - is this right? - always MASTER - or maybe\n+        wifiAccessPoint.setMode(WifiMode.MASTER);               // FIME - is this right? - always MASTER - or maybe\n         // AD-HOC too?\n         wifiAccessPoint.setRsnSecurity(this.rsn.getWifiSecurityFlags());\n         wifiAccessPoint.setStrength(this.strength);\n         wifiAccessPoint.setWpaSecurity(this.wpa.getWifiSecurityFlags());\n+\n         if (this.capabilities != null && !this.capabilities.isEmpty()) {\n             wifiAccessPoint.setCapabilities(this.capabilities);\n         }\n@@ -71,77 +72,69 @@ class IWAPParser {\n      * @throws Exception\n      *             Something went wrong for this AP.\n      */\n-    public void parsePropLine(String propLine) throws Exception {\n \n+    public void parsePropLine(String propLine) throws Exception {\n         if (this.securityParser != null) {\n             // We're parsing a section right now\n             boolean done = this.securityParser.parsePropLine(propLine);\n-\n             if (done) {\n                 this.securityParser = null;\n             }\n-\n         } else if (propLine.startsWith(\"freq:\")) {\n             StringTokenizer st = new StringTokenizer(propLine, \" \");\n-            st.nextToken();\t// eat freq:\n+            st.nextToken(); // eat freq:\n             this.frequency = Long.parseLong(st.nextToken());\n-\n         } else if (propLine.startsWith(\"SSID: \")) {\n-            this.ssid = propLine.substring(5).trim();\n-\n+                   this.ssid = propLine.substring(5).trim();\n         } else if (propLine.startsWith(\"RSN:\")) {\n-            this.securityParser = this.rsn;\n-            parsePropLine(propLine);\n-\n-        } else if (propLine.startsWith(\"WPA:\")) {\n-            this.securityParser = this.wpa;\n-            parsePropLine(propLine);\n-\n-        } else if (propLine.startsWith(\"Supported rates: \")) {\n+                   this.securityParser = this.rsn;\n+                   parsePropLine(propLine);\n+               } else if (propLine.startsWith(\"WPA:\")) {\n+                   this.securityParser = this.wpa;\n+                   parsePropLine(propLine);\n+               } else if (propLine.startsWith(\"Supported rates: \")) {\n             // Supported rates: 1.0* 2.0* 5.5* 11.0* 18.0 24.0 36.0 54.0\n-            if (this.bitrate == null) {\n-                this.bitrate = new ArrayList<>();\n-            }\n-            String[] rateStrings = propLine.replaceFirst(\"Supported rates: \", \"\").replaceAll(\"\\\\*\", \"\").trim()\n-                    .split(\" \");\n-            for (String rateString : rateStrings) {\n-                this.bitrate.add((long) (Float.parseFloat(rateString) * 1000000));\n-            }\n-\n-        } else if (propLine.startsWith(\"Extended supported rates: \")) {\n+                          if (this.bitrate == null) {\n+                              this.bitrate = new ArrayList<>();\n+                          }\n+\n+                          String[] rateStrings = propLine.replaceFirst(\"Supported rates: \", \"\").replaceAll(\"\\\\*\", \"\").trim().split(\" \");\n+                          for (String rateString : rateStrings) {\n+                              this.bitrate.add((long) (Float.parseFloat(rateString) * 1000000));\n+                          }\n+               } else if (propLine.startsWith(\"Extended supported rates: \")) {\n             // Extended supported rates: 6.0 9.0 12.0 48.0\n-            if (this.bitrate == null) {\n-                this.bitrate = new ArrayList<>();\n-            }\n-\n-            String[] rateStrings = propLine.replaceFirst(\"Extended supported rates: \", \"\").replaceAll(\"\\\\*\", \"\").trim()\n-                    .split(\" \");\n-            for (String rateString : rateStrings) {\n-                this.bitrate.add((long) (Float.parseFloat(rateString) * 1000000));\n-            }\n-\n-        } else if (propLine.startsWith(\"signal:\")) {\n+                          if (this.bitrate == null) {\n+                              this.bitrate = new ArrayList<>();\n+                          }\n+\n+                          String[] rateStrings = propLine.replaceFirst(\"Extended supported rates: \", \"\").replaceAll(\"\\\\*\", \"\").trim().split(\" \");\n+                          for (String rateString : rateStrings) {\n+                              this.bitrate.add((long) (Float.parseFloat(rateString) * 1000000));\n+                          }\n+                      } else if (propLine.startsWith(\"signal:\")) {\n             // signal: -56.00 dBm\n-            StringTokenizer st = new StringTokenizer(propLine, \" \");\n-            st.nextToken(); // eat signal:\n-            final String strengthRaw = st.nextToken();\n-            if (strengthRaw.contains(\"/\")) {\n+                          StringTokenizer st = new StringTokenizer(propLine, \" \");\n+                          st.nextToken(); // eat signal:\n+\n+                          final String strengthRaw = st.nextToken();\n+                          if (strengthRaw.contains(\"/\")) {\n                 // Could also be of format 39/100\n-                final String[] parts = strengthRaw.split(\"/\");\n-                this.strength = (int) Float.parseFloat(parts[0]);\n-                this.strength = SignalStrengthConversion.getRssi(this.strength);\n-            } else {\n-                this.strength = Math.abs((int) Float.parseFloat(strengthRaw));\n-            }\n-        } else if (propLine.startsWith(\"capability:\")) {\n-            this.capabilities = new ArrayList<>();\n-            String newLine = propLine.substring(\"capability:\".length()).trim();\n-            StringTokenizer st = new StringTokenizer(newLine, \" \");\n-            while (st.hasMoreTokens()) {\n-                this.capabilities.add(st.nextToken());\n-            }\n-        } else {\n-            logger.debug(\"Ignoring line in scan result: {}\", propLine);\n-        }\n+                              final String[] parts = strengthRaw.split(\"/\");\n+                              this.strength = (int) Float.parseFloat(parts[0]);\n+                              this.strength = SignalStrengthConversion.getRssi(this.strength);\n+                          } else {\n+                              this.strength = Math.abs((int) Float.parseFloat(strengthRaw));\n+                          }\n+                      } else if (propLine.startsWith(\"capability:\")) {\n+                                 this.capabilities = new ArrayList<>();\n+                                 String newLine = propLine.substring(\"capability:\".length()).trim();\n+                                 StringTokenizer st = new StringTokenizer(newLine, \" \");\n+                                 while (st.hasMoreTokens()) {\n+                                     this.capabilities.add(st.nextToken());\n+                                 }\n+                      } else {\n+                                 logger.debug(\"Ignoring line in scan result: {}\", propLine);\n+                             }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 63
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "87",
                    "column": "28",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/17/IWAPParser.java\nindex 440eff682fc..65527e1dd95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/17/IWAPParser.java\n@@ -54,7 +54,8 @@ class IWAPParser {\n         wifiAccessPoint.setBitrate(this.bitrate);\n         wifiAccessPoint.setFrequency(this.frequency);\n         wifiAccessPoint.setHardwareAddress(this.hardwareAddress);\n-        wifiAccessPoint.setMode(WifiMode.MASTER);\t\t\t\t// FIME - is this right? - always MASTER - or maybe\n+        wifiAccessPoint.setMode(WifiMode.MASTER);\n+        // FIME - is this right? - always MASTER - or maybe\n         // AD-HOC too?\n         wifiAccessPoint.setRsnSecurity(this.rsn.getWifiSecurityFlags());\n         wifiAccessPoint.setStrength(this.strength);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "88",
                    "column": "28",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/17/IWAPParser.java\nindex 440eff682fc..976cf9a625c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/17/IWAPParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/17/IWAPParser.java\n@@ -54,7 +54,9 @@ class IWAPParser {\n         wifiAccessPoint.setBitrate(this.bitrate);\n         wifiAccessPoint.setFrequency(this.frequency);\n         wifiAccessPoint.setHardwareAddress(this.hardwareAddress);\n-        wifiAccessPoint.setMode(WifiMode.MASTER);\t\t\t\t// FIME - is this right? - always MASTER - or maybe\n+        wifiAccessPoint.setMode(WifiMode.MASTER);\n+\n+        // FIME - is this right? - always MASTER - or maybe\n         // AD-HOC too?\n         wifiAccessPoint.setRsnSecurity(this.rsn.getWifiSecurityFlags());\n         wifiAccessPoint.setStrength(this.strength);\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
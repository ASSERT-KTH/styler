{
    "project_name": "Angel-ML-angel",
    "error_id": "284",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/284/PSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/284/PSRequest.java\nindex 56af847e473..d522ebc9697 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/284/PSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/284/PSRequest.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.ps.server.data.request;\n \n import com.tencent.angel.ps.ParameterServerId;\n@@ -21,6 +22,7 @@ import io.netty.buffer.ByteBuf;\n \n public abstract class PSRequest extends Request {\n   private ParameterServerId psId;\n+\n   /**\n    * Create a new Request.\n    *\n@@ -35,17 +37,20 @@ public abstract class PSRequest extends Request {\n     return psId;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+  public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(psId.getIndex());\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     psId = new ParameterServerId(buf.readInt());\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+  public int bufferLen() {\n     return 4 + super.bufferLen();\n   }\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/284/PSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/284/PSRequest.java\nindex 56af847e473..124aa393817 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/284/PSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/284/PSRequest.java\n@@ -35,17 +35,20 @@ public abstract class PSRequest extends Request {\n     return psId;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(psId.getIndex());\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     psId = new ParameterServerId(buf.readInt());\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+public int bufferLen() {\n     return 4 + super.bufferLen();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/284/PSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/284/PSRequest.java\nindex 56af847e473..880d266b4c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/284/PSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/284/PSRequest.java\n@@ -20,12 +20,14 @@ import com.tencent.angel.ps.ParameterServerId;\n import io.netty.buffer.ByteBuf;\n \n public abstract class PSRequest extends Request {\n+\n   private ParameterServerId psId;\n   /**\n    * Create a new Request.\n    *\n    * @param userRequestId user request id\n    */\n+\n   public PSRequest(int userRequestId, ParameterServerId psId) {\n     super(userRequestId, new RequestContext());\n     this.psId = psId;\n@@ -35,17 +37,21 @@ public abstract class PSRequest extends Request {\n     return psId;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+  public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(psId.getIndex());\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     psId = new ParameterServerId(buf.readInt());\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+  public int bufferLen() {\n     return 4 + super.bufferLen();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
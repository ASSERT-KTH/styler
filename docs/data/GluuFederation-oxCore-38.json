{
    "project_name": "GluuFederation-oxCore",
    "error_id": "38",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    public static final String LDAP_DEFAULT_PROPERTIES_FILE = \"gluu-ldap.properties\";\n\n\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n\n\tprivate Properties ldapConnectionProperties;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/38/LdapEntryManagerFactory.java\nindex bed93de6e4f..a7f96c7d717 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/38/LdapEntryManagerFactory.java\n@@ -24,7 +24,7 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     public static final String LDAP_DEFAULT_PROPERTIES_FILE = \"gluu-ldap.properties\";\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n \n \tprivate Properties ldapConnectionProperties;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/38/LdapEntryManagerFactory.java\nindex bed93de6e4f..fc47ae829ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/38/LdapEntryManagerFactory.java\n@@ -24,9 +24,9 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     public static final String LDAP_DEFAULT_PROPERTIES_FILE = \"gluu-ldap.properties\";\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n \n-\tprivate Properties ldapConnectionProperties;\n+    private Properties ldapConnectionProperties;\n \n     @Override\n     public String getPersistenceType() {\n@@ -35,27 +35,27 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     @Override\n     public HashMap<String, String> getConfigurationFileNames() {\n-    \tHashMap<String, String> confs = new HashMap<String, String>();\n-    \tconfs.put(\"ldap\", LDAP_DEFAULT_PROPERTIES_FILE);\n+        HashMap<String, String> confs = new HashMap<String, String>();\n+        confs.put(\"ldap\", LDAP_DEFAULT_PROPERTIES_FILE);\n \n-    \treturn confs;\n+        return confs;\n     }\n \n     @Override\n     public LdapEntryManager createEntryManager(Properties conf) {\n-    \tthis.ldapConnectionProperties = PropertiesHelper.filterProperties(conf, \"ldap\");\n+        this.ldapConnectionProperties = PropertiesHelper.filterProperties(conf, \"ldap\");\n \n-    \tLdapConnectionProvider connectionProvider = new LdapConnectionProvider(this.ldapConnectionProperties);\n+        LdapConnectionProvider connectionProvider = new LdapConnectionProvider(this.ldapConnectionProperties);\n         if (!connectionProvider.isCreated()) {\n             throw new ConfigurationException(\n-                    String.format(\"Failed to create LDAP connection pool! Result code: '%s'\", connectionProvider.getCreationResultCode()));\n+                String.format(\"Failed to create LDAP connection pool! Result code: '%s'\", connectionProvider.getCreationResultCode()));\n         }\n         LOG.debug(\"Created connectionProvider '{}' with code '{}'\", connectionProvider, connectionProvider.getCreationResultCode());\n \n         LdapConnectionProvider bindConnectionProvider = new LdapAuthConnectionProvider(this.ldapConnectionProperties);\n         if (!bindConnectionProvider.isCreated()) {\n             throw new ConfigurationException(\n-                    String.format(\"Failed to create LDAP bind connection pool! Result code: '%s'\", bindConnectionProvider.getCreationResultCode()));\n+                String.format(\"Failed to create LDAP bind connection pool! Result code: '%s'\", bindConnectionProvider.getCreationResultCode()));\n         }\n         LOG.debug(\"Created bindConnectionProvider '{}' with code '{}'\", bindConnectionProvider, bindConnectionProvider.getCreationResultCode());\n \n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/38/LdapEntryManagerFactory.java\nindex bed93de6e4f..e07163029a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/38/LdapEntryManagerFactory.java\n@@ -24,18 +24,18 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     public static final String LDAP_DEFAULT_PROPERTIES_FILE = \"gluu-ldap.properties\";\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n+private static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n \n \tprivate Properties ldapConnectionProperties;\n \n-    @Override\n+@Override\n     public String getPersistenceType() {\n         return \"ldap\";\n     }\n \n     @Override\n     public HashMap<String, String> getConfigurationFileNames() {\n-    \tHashMap<String, String> confs = new HashMap<String, String>();\n+    HashMap<String, String> confs = new HashMap<String, String>();\n     \tconfs.put(\"ldap\", LDAP_DEFAULT_PROPERTIES_FILE);\n \n     \treturn confs;\n@@ -43,10 +43,10 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     @Override\n     public LdapEntryManager createEntryManager(Properties conf) {\n-    \tthis.ldapConnectionProperties = PropertiesHelper.filterProperties(conf, \"ldap\");\n+    this.ldapConnectionProperties = PropertiesHelper.filterProperties(conf, \"ldap\");\n \n     \tLdapConnectionProvider connectionProvider = new LdapConnectionProvider(this.ldapConnectionProperties);\n-        if (!connectionProvider.isCreated()) {\n+if (!connectionProvider.isCreated()) {\n             throw new ConfigurationException(\n                     String.format(\"Failed to create LDAP connection pool! Result code: '%s'\", connectionProvider.getCreationResultCode()));\n         }\n@@ -65,4 +65,4 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n         return ldapEntryManager;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/38/LdapEntryManagerFactory.java\nindex bed93de6e4f..e3f5103c296 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/38/LdapEntryManagerFactory.java\n@@ -2,9 +2,7 @@ package org.gluu.persist.ldap.impl;\n \n import java.util.HashMap;\n import java.util.Properties;\n-\n import javax.enterprise.context.ApplicationScoped;\n-\n import org.gluu.persist.PersistenceEntryManagerFactory;\n import org.gluu.persist.exception.operation.ConfigurationException;\n import org.gluu.persist.ldap.operation.impl.LdapAuthConnectionProvider;\n@@ -19,14 +17,14 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Yuriy Movchan Date: 02/02/2018\n  */\n+\n+\n @ApplicationScoped\n public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     public static final String LDAP_DEFAULT_PROPERTIES_FILE = \"gluu-ldap.properties\";\n-\n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n-\n-\tprivate Properties ldapConnectionProperties;\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n+    private Properties ldapConnectionProperties;\n \n     @Override\n     public String getPersistenceType() {\n@@ -35,34 +33,33 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     @Override\n     public HashMap<String, String> getConfigurationFileNames() {\n-    \tHashMap<String, String> confs = new HashMap<String, String>();\n-    \tconfs.put(\"ldap\", LDAP_DEFAULT_PROPERTIES_FILE);\n-\n-    \treturn confs;\n+        HashMap<String, String> confs = new HashMap<String, String>();\n+        confs.put(\"ldap\", LDAP_DEFAULT_PROPERTIES_FILE);\n+        return confs;\n     }\n \n     @Override\n     public LdapEntryManager createEntryManager(Properties conf) {\n-    \tthis.ldapConnectionProperties = PropertiesHelper.filterProperties(conf, \"ldap\");\n+        this.ldapConnectionProperties = PropertiesHelper.filterProperties(conf, \"ldap\");\n \n-    \tLdapConnectionProvider connectionProvider = new LdapConnectionProvider(this.ldapConnectionProperties);\n+        LdapConnectionProvider connectionProvider = new LdapConnectionProvider(this.ldapConnectionProperties);\n         if (!connectionProvider.isCreated()) {\n-            throw new ConfigurationException(\n-                    String.format(\"Failed to create LDAP connection pool! Result code: '%s'\", connectionProvider.getCreationResultCode()));\n+            throw new ConfigurationException(String.format(\"Failed to create LDAP connection pool! Result code: '%s'\",\n+                connectionProvider.getCreationResultCode()));\n         }\n+\n         LOG.debug(\"Created connectionProvider '{}' with code '{}'\", connectionProvider, connectionProvider.getCreationResultCode());\n \n         LdapConnectionProvider bindConnectionProvider = new LdapAuthConnectionProvider(this.ldapConnectionProperties);\n         if (!bindConnectionProvider.isCreated()) {\n-            throw new ConfigurationException(\n-                    String.format(\"Failed to create LDAP bind connection pool! Result code: '%s'\", bindConnectionProvider.getCreationResultCode()));\n+            throw new ConfigurationException(String.format(\"Failed to create LDAP bind connection pool! Result code: '%s'\", bindConnectionProvider.getCreationResultCode()));\n         }\n+\n         LOG.debug(\"Created bindConnectionProvider '{}' with code '{}'\", bindConnectionProvider, bindConnectionProvider.getCreationResultCode());\n \n         LdapEntryManager ldapEntryManager = new LdapEntryManager(new LdapOperationsServiceImpl(connectionProvider, bindConnectionProvider));\n         LOG.info(\"Created LdapEntryManager: {}\", ldapEntryManager.getOperationService());\n-\n         return ldapEntryManager;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/38/LdapEntryManagerFactory.java\nindex bed93de6e4f..a7f96c7d717 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/38/LdapEntryManagerFactory.java\n@@ -24,7 +24,7 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     public static final String LDAP_DEFAULT_PROPERTIES_FILE = \"gluu-ldap.properties\";\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n \n \tprivate Properties ldapConnectionProperties;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/38/LdapEntryManagerFactory.java\nindex bed93de6e4f..a7f96c7d717 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/38/LdapEntryManagerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/38/LdapEntryManagerFactory.java\n@@ -24,7 +24,7 @@ public class LdapEntryManagerFactory implements PersistenceEntryManagerFactory {\n \n     public static final String LDAP_DEFAULT_PROPERTIES_FILE = \"gluu-ldap.properties\";\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapEntryManager.class);\n \n \tprivate Properties ldapConnectionProperties;\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
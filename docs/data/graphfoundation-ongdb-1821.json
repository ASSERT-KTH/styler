{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1821",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1821/LuceneAllEntriesIndexAccessorReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1821/LuceneAllEntriesIndexAccessorReader.java\nindex d07b9b28fe2..c40bae6e00b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1821/LuceneAllEntriesIndexAccessorReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1821/LuceneAllEntriesIndexAccessorReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.reader;\n \n import org.apache.lucene.document.Document;\n@@ -29,43 +30,43 @@ import static org.neo4j.kernel.api.impl.schema.LuceneDocumentStructure.getNodeId\n \n public class LuceneAllEntriesIndexAccessorReader implements BoundedIterable<Long>\n {\n-    private final BoundedIterable<Document> documents;\n+  private final BoundedIterable<Document> documents;\n \n-    public LuceneAllEntriesIndexAccessorReader( BoundedIterable<Document> documents )\n-    {\n-        this.documents = documents;\n-    }\n+  public LuceneAllEntriesIndexAccessorReader(BoundedIterable<Document> documents)\n+  {\n+    this.documents = documents;\n+  }\n \n-    @Override\n-    public long maxCount()\n-    {\n-        return documents.maxCount();\n-    }\n+  @Override\n+  public long maxCount()\n+  {\n+    return documents.maxCount();\n+  }\n \n-    @Override\n-    public Iterator<Long> iterator()\n+  @Override\n+  public Iterator<Long> iterator()\n+  {\n+    Iterator<Document> iterator = documents.iterator();\n+    return new Iterator<Long>()\n     {\n-        Iterator<Document> iterator = documents.iterator();\n-        return new Iterator<Long>()\n-        {\n-            @Override\n-            public boolean hasNext()\n-            {\n-                return iterator.hasNext();\n-            }\n+      @Override\n+      public boolean hasNext()\n+      {\n+        return iterator.hasNext();\n+      }\n \n-            @Override\n-            public Long next()\n-            {\n-                return getNodeId( iterator.next() );\n-            }\n-        };\n-    }\n+      @Override\n+      public Long next()\n+      {\n+        return getNodeId(iterator.next());\n+      }\n+    };\n+  }\n \n-    @Override\n-    public void close() throws Exception\n-    {\n-        documents.close();\n-    }\n+  @Override\n+  public void close() throws Exception\n+  {\n+    documents.close();\n+  }\n \n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1821/LuceneAllEntriesIndexAccessorReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1821/LuceneAllEntriesIndexAccessorReader.java\nindex d07b9b28fe2..127e159d5c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1821/LuceneAllEntriesIndexAccessorReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1821/LuceneAllEntriesIndexAccessorReader.java\n@@ -67,5 +67,4 @@ public class LuceneAllEntriesIndexAccessorReader implements BoundedIterable<Long\n     {\n         documents.close();\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
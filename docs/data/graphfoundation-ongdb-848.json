{
    "project_name": "graphfoundation-ongdb",
    "error_id": "848",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/848/StoreFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/848/StoreFile.java\nindex e90586cc60a..c6906d507e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/848/StoreFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/848/StoreFile.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.io.File;\n@@ -31,121 +32,121 @@ import org.neo4j.kernel.impl.storemigration.StoreFileType;\n \n public enum StoreFile\n {\n-    // all store files in Neo4j\n-    NODE_STORE( StoreFactory.NODE_STORE_NAME ),\n-\n-    NODE_LABEL_STORE( StoreFactory.NODE_LABELS_STORE_NAME ),\n-\n-    PROPERTY_STORE( StoreFactory.PROPERTY_STORE_NAME ),\n-\n-    PROPERTY_ARRAY_STORE( StoreFactory.PROPERTY_ARRAYS_STORE_NAME ),\n-\n-    PROPERTY_STRING_STORE( StoreFactory.PROPERTY_STRINGS_STORE_NAME ),\n-\n-    PROPERTY_KEY_TOKEN_STORE( StoreFactory.PROPERTY_KEY_TOKEN_STORE_NAME ),\n-\n-    PROPERTY_KEY_TOKEN_NAMES_STORE( StoreFactory.PROPERTY_KEY_TOKEN_NAMES_STORE_NAME ),\n-\n-    RELATIONSHIP_STORE( StoreFactory.RELATIONSHIP_STORE_NAME ),\n+  // all store files in Neo4j\n+  NODE_STORE(StoreFactory.NODE_STORE_NAME),\n \n-    RELATIONSHIP_GROUP_STORE( StoreFactory.RELATIONSHIP_GROUP_STORE_NAME ),\n+  NODE_LABEL_STORE(StoreFactory.NODE_LABELS_STORE_NAME),\n \n-    RELATIONSHIP_TYPE_TOKEN_STORE( StoreFactory.RELATIONSHIP_TYPE_TOKEN_STORE_NAME ),\n+  PROPERTY_STORE(StoreFactory.PROPERTY_STORE_NAME),\n \n-    RELATIONSHIP_TYPE_TOKEN_NAMES_STORE( StoreFactory.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE_NAME ),\n+  PROPERTY_ARRAY_STORE(StoreFactory.PROPERTY_ARRAYS_STORE_NAME),\n \n-    LABEL_TOKEN_STORE( StoreFactory.LABEL_TOKEN_STORE_NAME ),\n+  PROPERTY_STRING_STORE(StoreFactory.PROPERTY_STRINGS_STORE_NAME),\n \n-    LABEL_TOKEN_NAMES_STORE( StoreFactory.LABEL_TOKEN_NAMES_STORE_NAME ),\n+  PROPERTY_KEY_TOKEN_STORE(StoreFactory.PROPERTY_KEY_TOKEN_STORE_NAME),\n \n-    SCHEMA_STORE( StoreFactory.SCHEMA_STORE_NAME ),\n+  PROPERTY_KEY_TOKEN_NAMES_STORE(StoreFactory.PROPERTY_KEY_TOKEN_NAMES_STORE_NAME),\n \n-    COUNTS_STORE_LEFT( StoreFactory.COUNTS_STORE + CountsTracker.LEFT, false )\n-            {\n-                @Override\n-                public boolean isOptional()\n-                {\n-                    return true;\n-                }\n-            },\n-    COUNTS_STORE_RIGHT( StoreFactory.COUNTS_STORE + CountsTracker.RIGHT, false )\n-            {\n-                @Override\n-                public boolean isOptional()\n-                {\n-                    return true;\n-                }\n-            },\n+  RELATIONSHIP_STORE(StoreFactory.RELATIONSHIP_STORE_NAME),\n \n-    NEO_STORE( \"\" );\n+  RELATIONSHIP_GROUP_STORE(StoreFactory.RELATIONSHIP_GROUP_STORE_NAME),\n \n-    private final String storeFileNamePart;\n-    private final boolean recordStore;\n+  RELATIONSHIP_TYPE_TOKEN_STORE(StoreFactory.RELATIONSHIP_TYPE_TOKEN_STORE_NAME),\n \n-    StoreFile( String storeFileNamePart )\n-    {\n-        this( storeFileNamePart, true );\n-    }\n+  RELATIONSHIP_TYPE_TOKEN_NAMES_STORE(StoreFactory.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE_NAME),\n \n-    StoreFile( String storeFileNamePart, boolean recordStore )\n-    {\n-        this.storeFileNamePart = storeFileNamePart;\n-        this.recordStore = recordStore;\n-    }\n+  LABEL_TOKEN_STORE(StoreFactory.LABEL_TOKEN_STORE_NAME),\n \n-    public String fileName( StoreFileType type )\n-    {\n-        return type.augment( MetaDataStore.DEFAULT_NAME + storeFileNamePart );\n-    }\n+  LABEL_TOKEN_NAMES_STORE(StoreFactory.LABEL_TOKEN_NAMES_STORE_NAME),\n \n-    public String storeFileName()\n-    {\n-        return fileName( StoreFileType.STORE );\n-    }\n+  SCHEMA_STORE(StoreFactory.SCHEMA_STORE_NAME),\n \n-    public String fileNamePart()\n-    {\n-        return storeFileNamePart;\n-    }\n-\n-    public boolean isRecordStore()\n-    {\n-        return recordStore;\n-    }\n-\n-    public static Iterable<StoreFile> currentStoreFiles()\n-    {\n-        return Iterables.iterable( values() );\n-    }\n-\n-    /**\n-     * Performs a file operation on a database's store files from one directory\n-     * to another. Remember that in the case of {@link FileOperation#MOVE moving files}, the way that's done is to\n-     * just rename files (the standard way of moving with JDK6) from and to must be on the same disk partition.\n-     *\n-     * @param fromDirectory directory that hosts the database files.\n-     * @param toDirectory directory to receive the database files.\n-     * @throws IOException if any of the operations fail for any reason.\n-     */\n-    public static void fileOperation( FileOperation operation, FileSystemAbstraction fs, File fromDirectory,\n-            File toDirectory, Iterable<StoreFile> files,\n-            boolean allowSkipNonExistentFiles, ExistingTargetStrategy existingTargetStrategy,\n-            StoreFileType... types ) throws IOException\n-    {\n-        // TODO: change the order of files to handle failure conditions properly\n-        for ( StoreFile storeFile : files )\n+  COUNTS_STORE_LEFT(StoreFactory.COUNTS_STORE + CountsTracker.LEFT, false)\n+      {\n+        @Override\n+        public boolean isOptional()\n         {\n-            for ( StoreFileType type : types )\n-            {\n-                String fileName = storeFile.fileName( type );\n-                operation.perform( fs, fileName,\n-                        fromDirectory, allowSkipNonExistentFiles, toDirectory, existingTargetStrategy );\n-            }\n+          return true;\n         }\n-    }\n-\n-    public boolean isOptional()\n+      },\n+  COUNTS_STORE_RIGHT(StoreFactory.COUNTS_STORE + CountsTracker.RIGHT, false)\n+      {\n+        @Override\n+        public boolean isOptional()\n+        {\n+          return true;\n+        }\n+      },\n+\n+  NEO_STORE(\"\");\n+\n+  private final String storeFileNamePart;\n+  private final boolean recordStore;\n+\n+  StoreFile(String storeFileNamePart)\n+  {\n+    this(storeFileNamePart, true);\n+  }\n+\n+  StoreFile(String storeFileNamePart, boolean recordStore)\n+  {\n+    this.storeFileNamePart = storeFileNamePart;\n+    this.recordStore = recordStore;\n+  }\n+\n+  public String fileName(StoreFileType type)\n+  {\n+    return type.augment(MetaDataStore.DEFAULT_NAME + storeFileNamePart);\n+  }\n+\n+  public String storeFileName()\n+  {\n+    return fileName(StoreFileType.STORE);\n+  }\n+\n+  public String fileNamePart()\n+  {\n+    return storeFileNamePart;\n+  }\n+\n+  public boolean isRecordStore()\n+  {\n+    return recordStore;\n+  }\n+\n+  public static Iterable<StoreFile> currentStoreFiles()\n+  {\n+    return Iterables.iterable(values());\n+  }\n+\n+  /**\n+   * Performs a file operation on a database's store files from one directory\n+   * to another. Remember that in the case of {@link FileOperation#MOVE moving files}, the way that's done is to\n+   * just rename files (the standard way of moving with JDK6) from and to must be on the same disk partition.\n+   *\n+   * @param fromDirectory directory that hosts the database files.\n+   * @param toDirectory   directory to receive the database files.\n+   * @throws IOException if any of the operations fail for any reason.\n+   */\n+  public static void fileOperation(FileOperation operation, FileSystemAbstraction fs, File fromDirectory,\n+                                   File toDirectory, Iterable<StoreFile> files,\n+                                   boolean allowSkipNonExistentFiles, ExistingTargetStrategy existingTargetStrategy,\n+                                   StoreFileType... types) throws IOException\n+  {\n+    // TODO: change the order of files to handle failure conditions properly\n+    for (StoreFile storeFile : files)\n     {\n-        return false;\n+      for (StoreFileType type : types)\n+      {\n+        String fileName = storeFile.fileName(type);\n+        operation.perform(fs, fileName,\n+            fromDirectory, allowSkipNonExistentFiles, toDirectory, existingTargetStrategy);\n+      }\n     }\n+  }\n+\n+  public boolean isOptional()\n+  {\n+    return false;\n+  }\n }\n",
            "diff_size": 175
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,003).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/848/StoreFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/848/StoreFile.java\nindex e90586cc60a..1bbef70e395 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/848/StoreFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/848/StoreFile.java\n@@ -32,52 +32,21 @@ import org.neo4j.kernel.impl.storemigration.StoreFileType;\n public enum StoreFile\n {\n     // all store files in Neo4j\n-    NODE_STORE( StoreFactory.NODE_STORE_NAME ),\n-\n-    NODE_LABEL_STORE( StoreFactory.NODE_LABELS_STORE_NAME ),\n-\n-    PROPERTY_STORE( StoreFactory.PROPERTY_STORE_NAME ),\n-\n-    PROPERTY_ARRAY_STORE( StoreFactory.PROPERTY_ARRAYS_STORE_NAME ),\n-\n-    PROPERTY_STRING_STORE( StoreFactory.PROPERTY_STRINGS_STORE_NAME ),\n-\n-    PROPERTY_KEY_TOKEN_STORE( StoreFactory.PROPERTY_KEY_TOKEN_STORE_NAME ),\n-\n-    PROPERTY_KEY_TOKEN_NAMES_STORE( StoreFactory.PROPERTY_KEY_TOKEN_NAMES_STORE_NAME ),\n-\n-    RELATIONSHIP_STORE( StoreFactory.RELATIONSHIP_STORE_NAME ),\n-\n-    RELATIONSHIP_GROUP_STORE( StoreFactory.RELATIONSHIP_GROUP_STORE_NAME ),\n-\n-    RELATIONSHIP_TYPE_TOKEN_STORE( StoreFactory.RELATIONSHIP_TYPE_TOKEN_STORE_NAME ),\n-\n-    RELATIONSHIP_TYPE_TOKEN_NAMES_STORE( StoreFactory.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE_NAME ),\n-\n-    LABEL_TOKEN_STORE( StoreFactory.LABEL_TOKEN_STORE_NAME ),\n-\n-    LABEL_TOKEN_NAMES_STORE( StoreFactory.LABEL_TOKEN_NAMES_STORE_NAME ),\n-\n-    SCHEMA_STORE( StoreFactory.SCHEMA_STORE_NAME ),\n-\n-    COUNTS_STORE_LEFT( StoreFactory.COUNTS_STORE + CountsTracker.LEFT, false )\n-            {\n+    NODE_STORE( StoreFactory.NODE_STORE_NAME ), NODE_LABEL_STORE( StoreFactory.NODE_LABELS_STORE_NAME ), PROPERTY_STORE( StoreFactory.PROPERTY_STORE_NAME ), PROPERTY_ARRAY_STORE( StoreFactory.PROPERTY_ARRAYS_STORE_NAME ), PROPERTY_STRING_STORE( StoreFactory.PROPERTY_STRINGS_STORE_NAME ), PROPERTY_KEY_TOKEN_STORE( StoreFactory.PROPERTY_KEY_TOKEN_STORE_NAME ), PROPERTY_KEY_TOKEN_NAMES_STORE( StoreFactory.PROPERTY_KEY_TOKEN_NAMES_STORE_NAME ), RELATIONSHIP_STORE( StoreFactory.RELATIONSHIP_STORE_NAME ), RELATIONSHIP_GROUP_STORE( StoreFactory.RELATIONSHIP_GROUP_STORE_NAME ), RELATIONSHIP_TYPE_TOKEN_STORE( StoreFactory.RELATIONSHIP_TYPE_TOKEN_STORE_NAME ), RELATIONSHIP_TYPE_TOKEN_NAMES_STORE( StoreFactory.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE_NAME ), LABEL_TOKEN_STORE( StoreFactory.LABEL_TOKEN_STORE_NAME ), LABEL_TOKEN_NAMES_STORE( StoreFactory.LABEL_TOKEN_NAMES_STORE_NAME ), SCHEMA_STORE( StoreFactory.SCHEMA_STORE_NAME ), COUNTS_STORE_LEFT( StoreFactory.COUNTS_STORE + CountsTracker.LEFT, false )\n+{\n                 @Override\n                 public boolean isOptional()\n                 {\n                     return true;\n                 }\n-            },\n-    COUNTS_STORE_RIGHT( StoreFactory.COUNTS_STORE + CountsTracker.RIGHT, false )\n-            {\n+            }, COUNTS_STORE_RIGHT( StoreFactory.COUNTS_STORE + CountsTracker.RIGHT, false )\n+{\n                 @Override\n                 public boolean isOptional()\n                 {\n                     return true;\n                 }\n-            },\n-\n-    NEO_STORE( \"\" );\n+            }, NEO_STORE( \"\" );\n \n     private final String storeFileNamePart;\n     private final boolean recordStore;\n@@ -131,7 +100,7 @@ public enum StoreFile\n             File toDirectory, Iterable<StoreFile> files,\n             boolean allowSkipNonExistentFiles, ExistingTargetStrategy existingTargetStrategy,\n             StoreFileType... types ) throws IOException\n-    {\n+{\n         // TODO: change the order of files to handle failure conditions properly\n         for ( StoreFile storeFile : files )\n         {\n@@ -140,7 +109,7 @@ public enum StoreFile\n                 String fileName = storeFile.fileName( type );\n                 operation.perform( fs, fileName,\n                         fromDirectory, allowSkipNonExistentFiles, toDirectory, existingTargetStrategy );\n-            }\n+    }\n         }\n     }\n \n@@ -148,4 +117,4 @@ public enum StoreFile\n     {\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "981",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/981/PartitionGetRowResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/981/PartitionGetRowResult.java\nindex 96b8aff69f9..4f5f61499be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/981/PartitionGetRowResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/981/PartitionGetRowResult.java\n@@ -24,7 +24,7 @@ import io.netty.buffer.ByteBuf;\n /**\n  * The result of partition get row.\n  */\n-public class PartitionGetRowResult implements Serialize{\n+public class PartitionGetRowResult implements Serialize {\n   private ServerRow rowSplit;\n \n   /**\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/981/PartitionGetRowResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/981/PartitionGetRowResult.java\nindex 96b8aff69f9..609c0c86cb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/981/PartitionGetRowResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/981/PartitionGetRowResult.java\n@@ -24,7 +24,7 @@ import io.netty.buffer.ByteBuf;\n /**\n  * The result of partition get row.\n  */\n-public class PartitionGetRowResult implements Serialize{\n+public class PartitionGetRowResult implements Serialize {\n   private ServerRow rowSplit;\n \n   /**\n@@ -114,4 +114,4 @@ public class PartitionGetRowResult implements Serialize{\n   public void setRowSplit(ServerRow rowSplit) {\n     this.rowSplit = rowSplit;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/981/PartitionGetRowResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/981/PartitionGetRowResult.java\nindex 96b8aff69f9..081221dd16b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/981/PartitionGetRowResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/981/PartitionGetRowResult.java\n@@ -24,7 +24,9 @@ import io.netty.buffer.ByteBuf;\n /**\n  * The result of partition get row.\n  */\n-public class PartitionGetRowResult implements Serialize{\n+\n+public class PartitionGetRowResult implements Serialize {\n+\n   private ServerRow rowSplit;\n \n   /**\n@@ -32,6 +34,7 @@ public class PartitionGetRowResult implements Serialize{\n    *\n    * @param rowSplit the row split\n    */\n+\n   public PartitionGetRowResult(ServerRow rowSplit) {\n     this.rowSplit = rowSplit;\n   }\n@@ -39,6 +42,7 @@ public class PartitionGetRowResult implements Serialize{\n   /**\n    * Creates a new partition result by default.\n    */\n+\n   public PartitionGetRowResult() {\n     this(null);\n   }\n@@ -65,6 +69,7 @@ public class PartitionGetRowResult implements Serialize{\n           rowSplit = new ServerDenseDoubleRow();\n           break;\n         }\n+\n         case T_DOUBLE_SPARSE: {\n           rowSplit = new ServerSparseDoubleRow();\n           break;\n@@ -84,11 +89,11 @@ public class PartitionGetRowResult implements Serialize{\n           rowSplit = new ServerDenseFloatRow();\n           break;\n         }\n+\n         default:\n           break;\n       }\n     }\n-\n     rowSplit.deserialize(buf);\n   }\n \n@@ -102,6 +107,7 @@ public class PartitionGetRowResult implements Serialize{\n    *\n    * @return the row split\n    */\n+\n   public ServerRow getRowSplit() {\n     return rowSplit;\n   }\n@@ -111,7 +117,8 @@ public class PartitionGetRowResult implements Serialize{\n    *\n    * @param rowSplit the row split\n    */\n+\n   public void setRowSplit(ServerRow rowSplit) {\n     this.rowSplit = rowSplit;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
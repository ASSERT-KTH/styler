{
    "project_name": "seedstack-business",
    "error_id": "82",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.utils;\n\nimport static org.seedstack.shed.reflect.ClassPredicates.classIsDescendantOf;\nimport static org.seedstack.shed.reflect.ClassPredicates.classIsInterface;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/82/PluginUtils.java\nindex 84c8f8425b1..9eee0751dcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/82/PluginUtils.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.utils;\n \n import static org.seedstack.shed.reflect.ClassPredicates.classIsDescendantOf;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/82/PluginUtils.java\nindex 84c8f8425b1..3a4750e06fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/82/PluginUtils.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.utils;\n \n import static org.seedstack.shed.reflect.ClassPredicates.classIsDescendantOf;\n@@ -41,7 +42,7 @@ public final class PluginUtils {\n      * @param classpathScanRequestBuilder the Nuun classpath scan request builder.\n      * @param interfaces                  the interfaces.\n      * @return a map where the key is an interface and the value is a specification matching descendants of this\n-     *     interface.\n+     * interface.\n      */\n     @SuppressWarnings(\"unchecked\")\n     public static <T extends Class<?>> Map<T, Predicate<? extends T>> classpathRequestForDescendantTypesOf(\n@@ -101,7 +102,8 @@ public final class PluginUtils {\n      * @see BindingUtils#resolveBindingDefinitions(Class, Class, Class[])\n      */\n     public static <T> Map<Key<T>, Class<? extends T>> associateInterfaceToImplementations(Class<T> anInterface,\n-            Collection<Class<? extends T>> implementations, boolean overridingMode) {\n+                                                                                          Collection<Class<? extends T>> implementations,\n+                                                                                          boolean overridingMode) {\n         return BindingUtils.resolveBindingDefinitions(anInterface, implementations.stream()\n                 .filter(overridingMode ? isOverridingImplementation() : isOverridingImplementation().negate())\n                 .collect(Collectors.toList()));\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/82/PluginUtils.java\nindex 84c8f8425b1..9d43a217e83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/82/PluginUtils.java\n@@ -29,8 +29,7 @@ import org.slf4j.LoggerFactory;\n public final class PluginUtils {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(PluginUtils.class);\n-\n-    private PluginUtils() {\n+private PluginUtils() {\n         // no instantiation allowed\n     }\n \n@@ -44,9 +43,8 @@ public final class PluginUtils {\n      *     interface.\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public static <T extends Class<?>> Map<T, Predicate<? extends T>> classpathRequestForDescendantTypesOf(\n-            ClasspathScanRequestBuilder classpathScanRequestBuilder, Collection<T> interfaces) {\n-        Map<T, Predicate<? extends T>> specsByInterface = new HashMap<>();\n+    public static <T extends Class<?>> Map<T, Predicate<? extends T>> classpathRequestForDescendantTypesOf(ClasspathScanRequestBuilder classpathScanRequestBuilder, Collection<T> interfaces) {\n+    Map<T, Predicate<? extends T>> specsByInterface = new HashMap<>();\n         for (T anInterface : interfaces) {\n             LOGGER.trace(\"Request implementations of: {}\", anInterface.getName());\n             Predicate<Class<?>> p = classIsDescendantOf(anInterface).and(classIsInterface().negate())\n@@ -74,15 +72,13 @@ public final class PluginUtils {\n      * @see BindingUtils#resolveBindingDefinitions(Class, Class, Class[])\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public static <T extends Class> Map<Key<T>, ? extends T> associateInterfacesToImplementations(\n-            InitContext initContext, Collection<T> interfaces, Map<T, Predicate<? extends T>> specsByInterface,\n+    public static <T extends Class> Map<Key<T>, ? extends T> associateInterfacesToImplementations(InitContext initContext, Collection<T> interfaces, Map<T, Predicate<? extends T>> specsByInterface,\n             boolean overridingMode) {\n-        Map<Key<T>, ? extends T> keyMap = new HashMap<>();\n+    Map<Key<T>, ? extends T> keyMap = new HashMap<>();\n         for (T anInterface : interfaces) {\n             keyMap.putAll(associateInterfaceToImplementations(anInterface, initContext.scannedTypesByPredicate()\n                     .get(specsByInterface.get(anInterface)), overridingMode));\n-\n-        }\n+    }\n         return keyMap;\n     }\n \n@@ -100,9 +96,8 @@ public final class PluginUtils {\n      * @return the map of interface/implementation to bind\n      * @see BindingUtils#resolveBindingDefinitions(Class, Class, Class[])\n      */\n-    public static <T> Map<Key<T>, Class<? extends T>> associateInterfaceToImplementations(Class<T> anInterface,\n-            Collection<Class<? extends T>> implementations, boolean overridingMode) {\n-        return BindingUtils.resolveBindingDefinitions(anInterface, implementations.stream()\n+    public static <T> Map<Key<T>, Class<? extends T>> associateInterfaceToImplementations(Class<T> anInterface, Collection<Class<? extends T>> implementations, boolean overridingMode) {\n+    return BindingUtils.resolveBindingDefinitions(anInterface, implementations.stream()\n                 .filter(overridingMode ? isOverridingImplementation() : isOverridingImplementation().negate())\n                 .collect(Collectors.toList()));\n     }\n@@ -114,4 +109,4 @@ public final class PluginUtils {\n                 .find(Overriding.class)\n                 .isPresent();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/82/PluginUtils.java\nindex 84c8f8425b1..9eee0751dcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/82/PluginUtils.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.utils;\n \n import static org.seedstack.shed.reflect.ClassPredicates.classIsDescendantOf;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/82/PluginUtils.java\nindex 84c8f8425b1..9eee0751dcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/82/PluginUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/82/PluginUtils.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.utils;\n \n import static org.seedstack.shed.reflect.ClassPredicates.classIsDescendantOf;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "881",
    "information": {
        "errors": [
            {
                "line": "60",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        //TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row));\n\n        double [] delta = new double[col];\n        for(int i = 0; i < col; i++) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/881/PSFTestTask.java\nindex 3500dace3ba..ec2f87fd2b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/881/PSFTestTask.java\n@@ -57,8 +57,7 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         TVector row = ((GetRowResult) client.get(func)).getRow();//client.getRow(0);\n         //TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row));\n-\n+          + \" pull use time=\" + (System.currentTimeMillis()- startTs )+ \", sum of row 0=\" + sum((DenseDoubleVector)row));\n         double [] delta = new double[col];\n         for(int i = 0; i < col; i++) {\n           delta[i] = 1.0;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/881/PSFTestTask.java\nindex 3500dace3ba..700379dafa3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/881/PSFTestTask.java\n@@ -38,15 +38,19 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+  public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+  public void preProcess(TaskContext taskContext) {\n+  }\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n+  @Override\n+  public void run(TaskContext taskContext) throws AngelException {\n     int col = conf.getInt(\"col\", 100000000);\n-    try{\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"psf_test\");\n       Pull func = new Pull(client.getMatrixId(), 0);\n       //Pull func1 = new Pull(client.getMatrixId(), 1);\n@@ -57,10 +61,11 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         TVector row = ((GetRowResult) client.get(func)).getRow();//client.getRow(0);\n         //TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row));\n+            + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" +\n+            sum((DenseDoubleVector) row));\n \n-        double [] delta = new double[col];\n-        for(int i = 0; i < col; i++) {\n+        double[] delta = new double[col];\n+        for (int i = 0; i < col; i++) {\n           delta[i] = 1.0;\n         }\n         DenseDoubleVector deltaV = new DenseDoubleVector(col, delta);\n@@ -86,9 +91,9 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n   }\n \n   private double sum(DenseDoubleVector row) {\n-    double [] data = row.getValues();\n+    double[] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n \n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/881/PSFTestTask.java\nindex 3500dace3ba..09ce05c4682 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/881/PSFTestTask.java\n@@ -31,38 +31,41 @@ import org.apache.commons.logging.LogFactory;\n /**\n  * Created by payniexiao on 2017/7/18.\n  */\n+\n public class PSFTestTask extends BaseTask<Long, Long, Long> {\n+\n   private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n \n   public PSFTestTask(TaskContext taskContext) {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+  public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+  public void preProcess(TaskContext taskContext) {}\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n+  @Override\n+  public void run(TaskContext taskContext) throws AngelException {\n     int col = conf.getInt(\"col\", 100000000);\n-    try{\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"psf_test\");\n       Pull func = new Pull(client.getMatrixId(), 0);\n       //Pull func1 = new Pull(client.getMatrixId(), 1);\n-\n       while (taskContext.getEpoch() < 100) {\n         //taskContext.globalSync(client.getMatrixId());\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();//client.getRow(0);\n         //TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row));\n-\n-        double [] delta = new double[col];\n-        for(int i = 0; i < col; i++) {\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector) row));\n+        double[] delta = new double[col];\n+        for (int i = 0; i < col; i++) {\n           delta[i] = 1.0;\n         }\n+\n         DenseDoubleVector deltaV = new DenseDoubleVector(col, delta);\n         deltaV.setMatrixId(client.getMatrixId());\n         deltaV.setRowId(0);\n@@ -74,7 +77,6 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         //DenseDoubleVector deltaV1 = new DenseDoubleVector(col, delta1);\n         //deltaV1.setMatrixId(client.getMatrixId());\n         //deltaV1.setRowId(1);\n-\n         client.increment(deltaV);\n         //client.increment(deltaV1);\n         client.clock().get();\n@@ -86,12 +88,12 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n   }\n \n   private double sum(DenseDoubleVector row) {\n-    double [] data = row.getValues();\n+    double[] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n-\n     return ret;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/881/PSFTestTask.java\nindex 3500dace3ba..ec2f87fd2b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/881/PSFTestTask.java\n@@ -57,8 +57,7 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         TVector row = ((GetRowResult) client.get(func)).getRow();//client.getRow(0);\n         //TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row));\n-\n+          + \" pull use time=\" + (System.currentTimeMillis()- startTs )+ \", sum of row 0=\" + sum((DenseDoubleVector)row));\n         double [] delta = new double[col];\n         for(int i = 0; i < col; i++) {\n           delta[i] = 1.0;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/881/PSFTestTask.java\nindex 3500dace3ba..9e6b81e3f00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/881/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/881/PSFTestTask.java\n@@ -56,10 +56,9 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();//client.getRow(0);\n         //TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()+\" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row));\n \n-        double [] delta = new double[col];\n+      double [] delta = new double[col];\n         for(int i = 0; i < col; i++) {\n           delta[i] = 1.0;\n         }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
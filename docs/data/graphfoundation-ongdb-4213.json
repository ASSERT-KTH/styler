{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4213",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "174",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4213/ProcedureJarLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4213/ProcedureJarLoader.java\nindex 8a0ec600c11..05585691ce8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4213/ProcedureJarLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4213/ProcedureJarLoader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.io.File;\n@@ -46,194 +47,190 @@ import org.neo4j.logging.Log;\n  */\n public class ProcedureJarLoader\n {\n-    private final ReflectiveProcedureCompiler compiler;\n-    private final Log log;\n-\n-    ProcedureJarLoader( ReflectiveProcedureCompiler compiler, Log log )\n+  private final ReflectiveProcedureCompiler compiler;\n+  private final Log log;\n+\n+  ProcedureJarLoader(ReflectiveProcedureCompiler compiler, Log log)\n+  {\n+    this.compiler = compiler;\n+    this.log = log;\n+  }\n+\n+  public Callables loadProceduresFromDir(File root) throws IOException, KernelException\n+  {\n+    if (root == null || !root.exists())\n     {\n-        this.compiler = compiler;\n-        this.log = log;\n+      return Callables.empty();\n     }\n \n-    public Callables loadProceduresFromDir( File root ) throws IOException, KernelException\n-    {\n-        if ( root == null || !root.exists() )\n-        {\n-            return Callables.empty();\n-        }\n-\n-        Callables out = new Callables();\n+    Callables out = new Callables();\n \n-        File[] dirListing = root.listFiles( ( dir, name ) -> name.endsWith( \".jar\" ) );\n+    File[] dirListing = root.listFiles((dir, name) -> name.endsWith(\".jar\"));\n \n-        if ( dirListing == null )\n-        {\n-            return Callables.empty();\n-        }\n+    if (dirListing == null)\n+    {\n+      return Callables.empty();\n+    }\n \n-        if ( !allJarFilesAreValidZipFiles( Stream.of( dirListing ) ) )\n-        {\n-            throw new ZipException( \"Some jar procedure files are invalid, see log for details.\" );\n-        }\n+    if (!allJarFilesAreValidZipFiles(Stream.of(dirListing)))\n+    {\n+      throw new ZipException(\"Some jar procedure files are invalid, see log for details.\");\n+    }\n \n-        URL[] jarFilesURLs = Stream.of( dirListing ).map( this::toURL ).toArray( URL[]::new );\n+    URL[] jarFilesURLs = Stream.of(dirListing).map(this::toURL).toArray(URL[]::new);\n \n-        URLClassLoader loader = new URLClassLoader( jarFilesURLs, this.getClass().getClassLoader() );\n+    URLClassLoader loader = new URLClassLoader(jarFilesURLs, this.getClass().getClassLoader());\n \n-        for ( URL jarFile : jarFilesURLs )\n-        {\n-            loadProcedures( jarFile, loader, out );\n-        }\n-        return out;\n+    for (URL jarFile : jarFilesURLs)\n+    {\n+      loadProcedures(jarFile, loader, out);\n     }\n+    return out;\n+  }\n \n-    private boolean allJarFilesAreValidZipFiles( Stream<File> jarFiles )\n+  private boolean allJarFilesAreValidZipFiles(Stream<File> jarFiles)\n+  {\n+    return jarFiles.allMatch(jarFile ->\n     {\n-        return jarFiles.allMatch( jarFile ->\n-        {\n-            try\n-            {\n-                new ZipFile( jarFile ).close();\n-                return true;\n-            }\n-            catch ( IOException e )\n-            {\n-                log.error( String.format( \"Plugin jar file: %s corrupted.\", jarFile ) );\n-                return false;\n-            }\n-        } );\n+      try\n+      {\n+        new ZipFile(jarFile).close();\n+        return true;\n+      } catch (IOException e)\n+      {\n+        log.error(String.format(\"Plugin jar file: %s corrupted.\", jarFile));\n+        return false;\n+      }\n+    });\n+  }\n+\n+  private Callables loadProcedures(URL jar, ClassLoader loader, Callables target)\n+      throws IOException, KernelException\n+  {\n+    RawIterator<Class<?>, IOException> classes = listClassesIn(jar, loader);\n+    while (classes.hasNext())\n+    {\n+      Class<?> next = classes.next();\n+      target.addAllProcedures(compiler.compileProcedure(next, null, false));\n+      target.addAllFunctions(compiler.compileFunction(next, false));\n+      target.addAllAggregationFunctions(compiler.compileAggregationFunction(next));\n     }\n+    return target;\n+  }\n \n-    private Callables loadProcedures( URL jar, ClassLoader loader, Callables target )\n-            throws IOException, KernelException\n+  private URL toURL(File f)\n+  {\n+    try\n     {\n-        RawIterator<Class<?>,IOException> classes = listClassesIn( jar, loader );\n-        while ( classes.hasNext() )\n-        {\n-            Class<?> next = classes.next();\n-            target.addAllProcedures( compiler.compileProcedure( next, null, false ) );\n-            target.addAllFunctions( compiler.compileFunction( next, false ) );\n-            target.addAllAggregationFunctions( compiler.compileAggregationFunction( next ) );\n-        }\n-        return target;\n+      return f.toURI().toURL();\n+    } catch (MalformedURLException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private URL toURL( File f )\n+  private RawIterator<Class<?>, IOException> listClassesIn(URL jar, ClassLoader loader) throws IOException\n+  {\n+    ZipInputStream zip = new ZipInputStream(jar.openStream());\n+\n+    return new PrefetchingRawIterator<Class<?>, IOException>()\n     {\n+      @Override\n+      protected Class<?> fetchNextOrNull() throws IOException\n+      {\n         try\n         {\n-            return f.toURI().toURL();\n-        }\n-        catch ( MalformedURLException e )\n+          while (true)\n+          {\n+            ZipEntry nextEntry = zip.getNextEntry();\n+            if (nextEntry == null)\n+            {\n+              zip.close();\n+              return null;\n+            }\n+\n+            String name = nextEntry.getName();\n+            if (name.endsWith(\".class\"))\n+            {\n+              String className =\n+                  name.substring(0, name.length() - \".class\".length()).replace('/', '.');\n+\n+              try\n+              {\n+                Class<?> aClass = loader.loadClass(className);\n+                // We do getDeclaredMethods to trigger NoClassDefErrors, which loadClass above does\n+                // not do.\n+                // This way, even if some of the classes in a jar cannot be loaded, we still check\n+                // the others.\n+                aClass.getDeclaredMethods();\n+                return aClass;\n+              } catch (UnsatisfiedLinkError | NoClassDefFoundError | Exception e)\n+              {\n+                log.warn(\"Failed to load `%s` from plugin jar `%s`: %s\", className, jar.getFile(),\n+                    e.getMessage());\n+              }\n+            }\n+          }\n+        } catch (IOException | RuntimeException e)\n         {\n-            throw new RuntimeException( e );\n+          zip.close();\n+          throw e;\n         }\n-    }\n+      }\n+    };\n+  }\n \n-    private RawIterator<Class<?>,IOException> listClassesIn( URL jar, ClassLoader loader ) throws IOException\n-    {\n-        ZipInputStream zip = new ZipInputStream( jar.openStream() );\n+  public static class Callables\n+  {\n+    private final List<CallableProcedure> procedures = new ArrayList<>();\n+    private final List<CallableUserFunction> functions = new ArrayList<>();\n+    private final List<CallableUserAggregationFunction> aggregationFunctions = new ArrayList<>();\n \n-        return new PrefetchingRawIterator<Class<?>,IOException>()\n-        {\n-            @Override\n-            protected Class<?> fetchNextOrNull() throws IOException\n-            {\n-                try\n-                {\n-                    while ( true )\n-                    {\n-                        ZipEntry nextEntry = zip.getNextEntry();\n-                        if ( nextEntry == null )\n-                        {\n-                            zip.close();\n-                            return null;\n-                        }\n-\n-                        String name = nextEntry.getName();\n-                        if ( name.endsWith( \".class\" ) )\n-                        {\n-                            String className =\n-                                    name.substring( 0, name.length() - \".class\".length() ).replace( '/', '.' );\n-\n-                            try\n-                            {\n-                                Class<?> aClass = loader.loadClass( className );\n-                                // We do getDeclaredMethods to trigger NoClassDefErrors, which loadClass above does\n-                                // not do.\n-                                // This way, even if some of the classes in a jar cannot be loaded, we still check\n-                                // the others.\n-                                aClass.getDeclaredMethods();\n-                                return aClass;\n-                            }\n-                            catch ( UnsatisfiedLinkError | NoClassDefFoundError | Exception e )\n-                            {\n-                                log.warn( \"Failed to load `%s` from plugin jar `%s`: %s\", className, jar.getFile(),\n-                                        e.getMessage() );\n-                            }\n-                        }\n-                    }\n-                }\n-                catch ( IOException | RuntimeException e )\n-                {\n-                    zip.close();\n-                    throw e;\n-                }\n-            }\n-        };\n+    public void add(CallableProcedure proc)\n+    {\n+      procedures.add(proc);\n     }\n \n-    public static class Callables\n+    public void add(CallableUserFunction func)\n     {\n-        private final List<CallableProcedure> procedures = new ArrayList<>();\n-        private final List<CallableUserFunction> functions = new ArrayList<>();\n-        private final List<CallableUserAggregationFunction> aggregationFunctions = new ArrayList<>();\n-\n-        public void add( CallableProcedure proc )\n-        {\n-            procedures.add( proc );\n-        }\n-\n-        public void add( CallableUserFunction func )\n-        {\n-            functions.add( func );\n-        }\n+      functions.add(func);\n+    }\n \n-        public List<CallableProcedure> procedures()\n-        {\n-            return procedures;\n-        }\n+    public List<CallableProcedure> procedures()\n+    {\n+      return procedures;\n+    }\n \n-        public List<CallableUserFunction> functions()\n-        {\n-            return functions;\n-        }\n+    public List<CallableUserFunction> functions()\n+    {\n+      return functions;\n+    }\n \n-        public List<CallableUserAggregationFunction> aggregationFunctions()\n-        {\n-            return aggregationFunctions;\n-        }\n+    public List<CallableUserAggregationFunction> aggregationFunctions()\n+    {\n+      return aggregationFunctions;\n+    }\n \n-        void addAllProcedures( List<CallableProcedure> callableProcedures )\n-        {\n-            procedures.addAll( callableProcedures );\n-        }\n+    void addAllProcedures(List<CallableProcedure> callableProcedures)\n+    {\n+      procedures.addAll(callableProcedures);\n+    }\n \n-        void addAllFunctions( List<CallableUserFunction> callableFunctions )\n-        {\n-            functions.addAll( callableFunctions );\n-        }\n+    void addAllFunctions(List<CallableUserFunction> callableFunctions)\n+    {\n+      functions.addAll(callableFunctions);\n+    }\n \n-        public void addAllAggregationFunctions( List<CallableUserAggregationFunction> callableFunctions )\n-        {\n-            aggregationFunctions.addAll( callableFunctions );\n-        }\n+    public void addAllAggregationFunctions(List<CallableUserAggregationFunction> callableFunctions)\n+    {\n+      aggregationFunctions.addAll(callableFunctions);\n+    }\n \n-        private static Callables EMPTY = new Callables();\n+    private static Callables EMPTY = new Callables();\n \n-        public static Callables empty()\n-        {\n-            return EMPTY;\n-        }\n+    public static Callables empty()\n+    {\n+      return EMPTY;\n     }\n+  }\n }\n",
            "diff_size": 222
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
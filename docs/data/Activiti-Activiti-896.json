{
    "project_name": "Activiti-Activiti",
    "error_id": "896",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine;\n\n/**\n * Runtime exception indicating the requested class was not found or an error occurred while loading the class.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/896/ActivitiClassLoadingException.java\nindex 11c3280f830..37d1ec1a757 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/896/ActivitiClassLoadingException.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine;\n \n /**\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/896/ActivitiClassLoadingException.java\nindex 11c3280f830..ce050bc83cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/896/ActivitiClassLoadingException.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine;\n \n /**\n@@ -20,27 +21,27 @@ package org.activiti.engine;\n  */\n public class ActivitiClassLoadingException extends ActivitiException {\n \n-  private static final long serialVersionUID = 1L;\n-  protected String className;\n+    private static final long serialVersionUID = 1L;\n+    protected String className;\n \n-  public ActivitiClassLoadingException(String className, Throwable cause) {\n-    super(getExceptionMessageMessage(className, cause), cause);\n-    this.className = className;\n-  }\n+    public ActivitiClassLoadingException(String className, Throwable cause) {\n+        super(getExceptionMessageMessage(className, cause), cause);\n+        this.className = className;\n+    }\n \n-  /**\n-   * Returns the name of the class this exception is related to.\n-   */\n-  public String getClassName() {\n-    return className;\n-  }\n+    /**\n+     * Returns the name of the class this exception is related to.\n+     */\n+    public String getClassName() {\n+        return className;\n+    }\n \n-  private static String getExceptionMessageMessage(String className, Throwable cause) {\n-    if (cause instanceof ClassNotFoundException) {\n-      return \"Class not found: \" + className;\n-    } else {\n-      return \"Could not load class: \" + className;\n+    private static String getExceptionMessageMessage(String className, Throwable cause) {\n+        if (cause instanceof ClassNotFoundException) {\n+            return \"Class not found: \" + className;\n+        } else {\n+            return \"Could not load class: \" + className;\n+        }\n     }\n-  }\n \n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/896/ActivitiClassLoadingException.java\nindex 11c3280f830..771775956c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/896/ActivitiClassLoadingException.java\n@@ -18,19 +18,22 @@ package org.activiti.engine;\n /**\n  * Runtime exception indicating the requested class was not found or an error occurred while loading the class.\n  */\n+\n public class ActivitiClassLoadingException extends ActivitiException {\n \n   private static final long serialVersionUID = 1L;\n   protected String className;\n \n   public ActivitiClassLoadingException(String className, Throwable cause) {\n-    super(getExceptionMessageMessage(className, cause), cause);\n+    super(getExceptionMessageMessage(className, cause),\n+          cause);\n     this.className = className;\n   }\n \n   /**\n    * Returns the name of the class this exception is related to.\n    */\n+\n   public String getClassName() {\n     return className;\n   }\n@@ -42,5 +45,4 @@ public class ActivitiClassLoadingException extends ActivitiException {\n       return \"Could not load class: \" + className;\n     }\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/896/ActivitiClassLoadingException.java\nindex 11c3280f830..37d1ec1a757 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/896/ActivitiClassLoadingException.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine;\n \n /**\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/896/ActivitiClassLoadingException.java\nindex 11c3280f830..37d1ec1a757 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/896/ActivitiClassLoadingException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/896/ActivitiClassLoadingException.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine;\n \n /**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
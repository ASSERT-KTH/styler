{
    "project_name": "Angel-ML-angel",
    "error_id": "696",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/696/InitNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/696/InitNeighbor.java\nindex b148877dc0d..3e7f64fd79e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/696/InitNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/696/InitNeighbor.java\n@@ -46,12 +46,10 @@ public class InitNeighbor extends UpdateFunc {\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     PartInitNeighborParam param = (PartInitNeighborParam) partParam;\n     ServerMatrix matrix = psContext.getMatrixStorageManager().getMatrix(partParam.getMatrixId());\n-    RowBasedPartition part = (RowBasedPartition) matrix\n-        .getPartition(partParam.getPartKey().getPartitionId());\n+    RowBasedPartition part = (RowBasedPartition) matrix.getPartition(partParam.getPartKey().getPartitionId());\n     ServerLongAnyRow row = (ServerLongAnyRow) part.getRow(0);\n \n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param\n-        .getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n+    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param.getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n \n     row.startWrite();\n     try {\n@@ -63,4 +61,4 @@ public class InitNeighbor extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/696/InitNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/696/InitNeighbor.java\nindex b148877dc0d..5257ce83ba2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/696/InitNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/696/InitNeighbor.java\n@@ -29,11 +29,13 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Init node neighbors for long type node id\n  */\n+\n public class InitNeighbor extends UpdateFunc {\n \n   /**\n    * Create a new UpdateParam\n    */\n+\n   public InitNeighbor(InitNeighborParam param) {\n     super(param);\n   }\n@@ -46,13 +48,9 @@ public class InitNeighbor extends UpdateFunc {\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     PartInitNeighborParam param = (PartInitNeighborParam) partParam;\n     ServerMatrix matrix = psContext.getMatrixStorageManager().getMatrix(partParam.getMatrixId());\n-    RowBasedPartition part = (RowBasedPartition) matrix\n-        .getPartition(partParam.getPartKey().getPartitionId());\n+    RowBasedPartition part = (RowBasedPartition) matrix.getPartition(partParam.getPartKey().getPartitionId());\n     ServerLongAnyRow row = (ServerLongAnyRow) part.getRow(0);\n-\n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param\n-        .getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n-\n+    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param.getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n     row.startWrite();\n     try {\n       while (iter.hasNext()) {\n@@ -63,4 +61,5 @@ public class InitNeighbor extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
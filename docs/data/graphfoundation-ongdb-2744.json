{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2744",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2744/LogFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2744/LogFile.java\nindex a45ee39f068..70ea0bd5bc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2744/LogFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2744/LogFile.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.files;\n \n import java.io.IOException;\n@@ -34,44 +35,44 @@ import org.neo4j.kernel.impl.transaction.log.ReadableLogChannel;\n  */\n public interface LogFile\n {\n-    interface LogFileVisitor\n-    {\n-        boolean visit( ReadableClosablePositionAwareChannel channel ) throws IOException;\n-    }\n+  interface LogFileVisitor\n+  {\n+    boolean visit(ReadableClosablePositionAwareChannel channel) throws IOException;\n+  }\n \n-    /**\n-     * @return {@link FlushableChannel} capable of appending data to this log.\n-     */\n-    FlushablePositionAwareChannel getWriter();\n+  /**\n+   * @return {@link FlushableChannel} capable of appending data to this log.\n+   */\n+  FlushablePositionAwareChannel getWriter();\n \n-    /**\n-     * Opens a {@link ReadableLogChannel reader} at the desired {@link LogPosition}, capable of reading log entries\n-     * from that position and onwards, through physical log versions.\n-     *\n-     * @param position {@link LogPosition} to position the returned reader at.\n-     * @return {@link ReadableClosableChannel} capable of reading log data, starting from {@link LogPosition position}.\n-     * @throws IOException on I/O error.\n-     */\n-    ReadableLogChannel getReader( LogPosition position ) throws IOException;\n+  /**\n+   * Opens a {@link ReadableLogChannel reader} at the desired {@link LogPosition}, capable of reading log entries\n+   * from that position and onwards, through physical log versions.\n+   *\n+   * @param position {@link LogPosition} to position the returned reader at.\n+   * @return {@link ReadableClosableChannel} capable of reading log data, starting from {@link LogPosition position}.\n+   * @throws IOException on I/O error.\n+   */\n+  ReadableLogChannel getReader(LogPosition position) throws IOException;\n \n-    /**\n-     * Opens a {@link ReadableLogChannel reader} at the desired {@link LogPosition}, capable of reading log entries\n-     * from that position and onwards, with the given {@link LogVersionBridge}.\n-     *\n-     * @param position {@link LogPosition} to position the returned reader at.\n-     * @param logVersionBridge {@link LogVersionBridge} how to bridge log versions.\n-     * @return {@link ReadableClosableChannel} capable of reading log data, starting from {@link LogPosition position}.\n-     * @throws IOException on I/O error.\n-     */\n-    ReadableLogChannel getReader( LogPosition position, LogVersionBridge logVersionBridge ) throws IOException;\n+  /**\n+   * Opens a {@link ReadableLogChannel reader} at the desired {@link LogPosition}, capable of reading log entries\n+   * from that position and onwards, with the given {@link LogVersionBridge}.\n+   *\n+   * @param position         {@link LogPosition} to position the returned reader at.\n+   * @param logVersionBridge {@link LogVersionBridge} how to bridge log versions.\n+   * @return {@link ReadableClosableChannel} capable of reading log data, starting from {@link LogPosition position}.\n+   * @throws IOException on I/O error.\n+   */\n+  ReadableLogChannel getReader(LogPosition position, LogVersionBridge logVersionBridge) throws IOException;\n \n-    void accept( LogFileVisitor visitor, LogPosition startingFromPosition ) throws IOException;\n+  void accept(LogFileVisitor visitor, LogPosition startingFromPosition) throws IOException;\n \n-    /**\n-     * @return {@code true} if a rotation is needed.\n-     * @throws IOException on I/O error.\n-     */\n-    boolean rotationNeeded();\n+  /**\n+   * @return {@code true} if a rotation is needed.\n+   * @throws IOException on I/O error.\n+   */\n+  boolean rotationNeeded();\n \n-    void rotate() throws IOException;\n+  void rotate() throws IOException;\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2744/LogFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2744/LogFile.java\nindex a45ee39f068..c08739b88fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2744/LogFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2744/LogFile.java\n@@ -74,4 +74,4 @@ public interface LogFile\n     boolean rotationNeeded();\n \n     void rotate() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
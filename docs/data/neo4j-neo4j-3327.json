{
    "project_name": "neo4j-neo4j",
    "error_id": "3327",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3327/PageCacheStresser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3327/PageCacheStresser.java\nindex 9b5b8fac2d1..037e15c2f15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3327/PageCacheStresser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3327/PageCacheStresser.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.stress;\n \n import org.eclipse.collections.api.factory.Sets;\n@@ -60,70 +61,70 @@ public class PageCacheStresser\n \n     private final Path workingDirectory;\n \n-    public PageCacheStresser( int maxPages, int numberOfThreads, Path workingDirectory )\n+    public PageCacheStresser(int maxPages, int numberOfThreads, Path workingDirectory)\n     {\n         this.maxPages = maxPages;\n         this.numberOfThreads = numberOfThreads;\n         this.workingDirectory = workingDirectory;\n     }\n \n-    public void stress( PageCache pageCache, PageCacheTracer cacheTracer, Condition condition ) throws Exception\n+    public void stress(PageCache pageCache, PageCacheTracer cacheTracer, Condition condition) throws Exception\n     {\n-        Path file = Files.createTempFile( workingDirectory, \"pagecacheundertest\", \".bin\" );\n+        Path file = Files.createTempFile(workingDirectory, \"pagecacheundertest\", \".bin\");\n \n         int cachePageSize = pageCache.pageSize();\n-        RecordFormat format = new RecordFormat( numberOfThreads, cachePageSize );\n+        RecordFormat format = new RecordFormat(numberOfThreads, cachePageSize);\n         int filePageSize = format.getFilePageSize();\n \n-        try ( PagedFile pagedFile = pageCache.map( file, filePageSize, Sets.immutable.of( StandardOpenOption.DELETE_ON_CLOSE ) ) )\n+        try (PagedFile pagedFile = pageCache.map(file, filePageSize, Sets.immutable.of(StandardOpenOption.DELETE_ON_CLOSE)))\n         {\n-            List<RecordStresser> recordStressers = prepare( condition, pagedFile, format, cacheTracer );\n-            verifyResults( format, pagedFile, recordStressers, cacheTracer );\n-            execute( recordStressers );\n-            verifyResults( format, pagedFile, recordStressers, cacheTracer );\n+            List<RecordStresser> recordStressers = prepare(condition, pagedFile, format, cacheTracer);\n+            verifyResults(format, pagedFile, recordStressers, cacheTracer);\n+            execute(recordStressers);\n+            verifyResults(format, pagedFile, recordStressers, cacheTracer);\n         }\n     }\n \n-    private List<RecordStresser> prepare( Condition condition, PagedFile pagedFile, RecordFormat format, PageCacheTracer cacheTracer )\n+    private List<RecordStresser> prepare(Condition condition, PagedFile pagedFile, RecordFormat format, PageCacheTracer cacheTracer)\n     {\n-        int maxRecords = Math.multiplyExact( maxPages, format.getRecordsPerPage() );\n+        int maxRecords = Math.multiplyExact(maxPages, format.getRecordsPerPage());\n         TinyLockManager locks = new TinyLockManager();\n \n         List<RecordStresser> recordStressers = new LinkedList<>();\n-        for ( int threadId = 0; threadId < numberOfThreads; threadId++ )\n+        for (int threadId = 0; threadId < numberOfThreads; threadId++)\n         {\n-            recordStressers.add( new RecordStresser( pagedFile, condition, maxRecords, format, threadId, locks, cacheTracer ) );\n+            recordStressers.add(new RecordStresser(pagedFile, condition, maxRecords, format, threadId, locks, cacheTracer));\n         }\n         return recordStressers;\n     }\n \n-    private void execute( List<RecordStresser> recordStressers ) throws InterruptedException, ExecutionException\n+    private void execute(List<RecordStresser> recordStressers) throws InterruptedException, ExecutionException\n     {\n-        ExecutorService executorService = Executors.newFixedThreadPool( numberOfThreads, r ->\n+        ExecutorService executorService = Executors.newFixedThreadPool(numberOfThreads, r ->\n         {\n-            Thread thread = Executors.defaultThreadFactory().newThread( r );\n-            thread.setDaemon( true );\n+            Thread thread = Executors.defaultThreadFactory().newThread(r);\n+            thread.setDaemon(true);\n             return thread;\n-        } );\n-        List<Future<Void>> futures = executorService.invokeAll( recordStressers );\n-        Futures.getAllResults( futures );\n+        });\n+        List<Future<Void>> futures = executorService.invokeAll(recordStressers);\n+        Futures.getAllResults(futures);\n         executorService.shutdown();\n-        assertTrue( executorService.awaitTermination( 10, TimeUnit.SECONDS ) );\n+        assertTrue(executorService.awaitTermination(10, TimeUnit.SECONDS));\n     }\n \n-    private void verifyResults( RecordFormat format, PagedFile pagedFile, List<RecordStresser> recordStressers, PageCacheTracer cacheTracer )\n-            throws IOException\n+    private void verifyResults(RecordFormat format, PagedFile pagedFile, List<RecordStresser> recordStressers, PageCacheTracer cacheTracer)\n+      throws IOException\n     {\n-        for ( RecordStresser stresser : recordStressers )\n+        for (RecordStresser stresser : recordStressers)\n         {\n             stresser.verifyCounts();\n         }\n-        try ( PageCursorTracer cursorTracer = cacheTracer.createPageCursorTracer( PAGE_CACHE_STRESSER );\n-              PageCursor cursor = pagedFile.io( 0, PagedFile.PF_SHARED_READ_LOCK, cursorTracer ) )\n+        try (PageCursorTracer cursorTracer = cacheTracer.createPageCursorTracer(PAGE_CACHE_STRESSER);\n+             PageCursor cursor = pagedFile.io(0, PagedFile.PF_SHARED_READ_LOCK, cursorTracer))\n         {\n-            while ( cursor.next() )\n+            while (cursor.next())\n             {\n-                format.verifyCheckSums( cursor );\n+                format.verifyCheckSums(cursor);\n             }\n         }\n     }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3327/PageCacheStresser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3327/PageCacheStresser.java\nindex 9b5b8fac2d1..cf152772932 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3327/PageCacheStresser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3327/PageCacheStresser.java\n@@ -127,4 +127,4 @@ public class PageCacheStresser\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
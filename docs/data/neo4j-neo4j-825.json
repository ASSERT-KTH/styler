{
    "project_name": "neo4j-neo4j",
    "error_id": "825",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/825/TokenScanValueIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/825/TokenScanValueIndexProgressor.java\nindex 4e0ca166bef..bb2a239097f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/825/TokenScanValueIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/825/TokenScanValueIndexProgressor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -31,50 +32,49 @@ import org.neo4j.kernel.api.index.IndexProgressor;\n /**\n  * {@link IndexProgressor} which steps over multiple {@link TokenScanValue} and for each\n  * iterate over each set bit, returning actual entity ids, i.e. {@code entityIdRange+bitOffset}.\n- *\n  */\n public class TokenScanValueIndexProgressor extends TokenScanValueIndexAccessor implements IndexProgressor, Resource\n {\n     private final EntityTokenClient client;\n     private final IndexOrder indexOrder;\n \n-    TokenScanValueIndexProgressor( Seeker<TokenScanKey,TokenScanValue> cursor, EntityTokenClient client, IndexOrder indexOrder )\n+    TokenScanValueIndexProgressor(Seeker<TokenScanKey, TokenScanValue> cursor, EntityTokenClient client, IndexOrder indexOrder)\n     {\n-        super( cursor );\n+        super(cursor);\n         this.client = client;\n         this.indexOrder = indexOrder;\n     }\n \n     /**\n-     *  Progress through the index until the next accepted entry.\n+     * Progress through the index until the next accepted entry.\n+     * <p>\n+     * Progress the cursor to the current {@link TokenScanValue}, if this is not accepted by the client or if current\n+     * value has been exhausted it continues to the next {@link TokenScanValue} by progressing the {@link Seeker}.\n      *\n-     *  Progress the cursor to the current {@link TokenScanValue}, if this is not accepted by the client or if current\n-     *  value has been exhausted it continues to the next {@link TokenScanValue} by progressing the {@link Seeker}.\n      * @return <code>true</code> if it found an accepted entry, <code>false</code> otherwise\n      */\n     @Override\n     public boolean next()\n     {\n-        for ( ; ; )\n+        for (; ; )\n         {\n-            while ( bits != 0 )\n+            while (bits != 0)\n             {\n                 long idForClient;\n-                if ( indexOrder != IndexOrder.DESCENDING )\n+                if (indexOrder != IndexOrder.DESCENDING)\n                 {\n                     // The next idForClient can be found at the next 1-bit from the right.\n-                    int delta = Long.numberOfTrailingZeros( bits );\n+                    int delta = Long.numberOfTrailingZeros(bits);\n \n                     // We switch that bit to zero, so that we don't find it again the next time.\n                     // First, create a mask where that bit is zero (easiest by subtracting 1) and then &\n                     // it with bits.\n                     bits &= bits - 1;\n                     idForClient = baseEntityId + delta;\n-                }\n-                else\n+                } else\n                 {\n                     // The next idForClient can be found at the next 1-bit from the left.\n-                    int delta = Long.numberOfLeadingZeros( bits );\n+                    int delta = Long.numberOfLeadingZeros(bits);\n \n                     // We switch that bit to zero, so that we don't find it again the next time.\n                     // First, create a mask where only set bit is set (easiest by bitshifting the number one),\n@@ -84,21 +84,20 @@ public class TokenScanValueIndexProgressor extends TokenScanValueIndexAccessor i\n                     idForClient = (baseEntityId + Long.SIZE) - 1 - delta;\n                 }\n \n-                if ( client.acceptEntity( idForClient, null ) )\n+                if (client.acceptEntity(idForClient, null))\n                 {\n                     return true;\n                 }\n             }\n             try\n             {\n-                if ( !cursor.next() )\n+                if (!cursor.next())\n                 {\n                     return false;\n                 }\n-            }\n-            catch ( IOException e )\n+            } catch (IOException e)\n             {\n-                throw new UncheckedIOException( e );\n+                throw new UncheckedIOException(e);\n             }\n \n             TokenScanKey key = cursor.key();\n@@ -106,7 +105,7 @@ public class TokenScanValueIndexProgressor extends TokenScanValueIndexAccessor i\n             bits = cursor.value().bits;\n \n             //noinspection AssertWithSideEffects\n-            assert keysInOrder( key, indexOrder );\n+            assert keysInOrder(key, indexOrder);\n         }\n     }\n \n@@ -114,7 +113,7 @@ public class TokenScanValueIndexProgressor extends TokenScanValueIndexAccessor i\n     public void close()\n     {\n         super.close();\n-        if ( client instanceof AutoCloseablePlus )\n+        if (client instanceof AutoCloseablePlus)\n         {\n             ((AutoCloseablePlus) client).close();\n         }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/825/TokenScanValueIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/825/TokenScanValueIndexProgressor.java\nindex 4e0ca166bef..cf77ddad1ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/825/TokenScanValueIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/825/TokenScanValueIndexProgressor.java\n@@ -119,4 +119,4 @@ public class TokenScanValueIndexProgressor extends TokenScanValueIndexAccessor i\n             ((AutoCloseablePlus) client).close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
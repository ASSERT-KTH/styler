{
    "project_name": "neo4j-neo4j",
    "error_id": "2155",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "58",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2155/MuninnWritePageCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2155/MuninnWritePageCursor.java\nindex cce46b8d940..ffbeb330db5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2155/MuninnWritePageCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2155/MuninnWritePageCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import java.io.IOException;\n@@ -28,46 +29,44 @@ import org.neo4j.io.pagecache.tracing.cursor.context.VersionContextSupplier;\n \n final class MuninnWritePageCursor extends MuninnPageCursor\n {\n-    MuninnWritePageCursor( long victimPage, PageCursorTracer pageCursorTracer,\n-            VersionContextSupplier versionContextSupplier )\n+    MuninnWritePageCursor(long victimPage, PageCursorTracer pageCursorTracer,\n+                          VersionContextSupplier versionContextSupplier)\n     {\n-        super( victimPage, pageCursorTracer, versionContextSupplier );\n+        super(victimPage, pageCursorTracer, versionContextSupplier);\n     }\n \n     @Override\n     protected void unpinCurrentPage()\n     {\n         long pageRef = pinnedPageRef;\n-        if ( pageRef != 0 )\n+        if (pageRef != 0)\n         {\n             pinEvent.done();\n             // Mark the page as dirty *after* our write access, to make sure it's dirty even if it was concurrently\n             // flushed. Unlocking the write-locked page will mark it as dirty for us.\n-            if ( eagerFlush )\n+            if (eagerFlush)\n             {\n-                eagerlyFlushAndUnlockPage( pageRef );\n-            }\n-            else\n+                eagerlyFlushAndUnlockPage(pageRef);\n+            } else\n             {\n-                pagedFile.unlockWrite( pageRef );\n+                pagedFile.unlockWrite(pageRef);\n             }\n         }\n         clearPageCursorState();\n     }\n \n-    private void eagerlyFlushAndUnlockPage( long pageRef )\n+    private void eagerlyFlushAndUnlockPage(long pageRef)\n     {\n-        long flushStamp = pagedFile.unlockWriteAndTryTakeFlushLock( pageRef );\n-        if ( flushStamp != 0 )\n+        long flushStamp = pagedFile.unlockWriteAndTryTakeFlushLock(pageRef);\n+        if (flushStamp != 0)\n         {\n             boolean success = false;\n             try\n             {\n-                success = pagedFile.flushLockedPage( pageRef, loadPlainCurrentPageId() );\n-            }\n-            finally\n+                success = pagedFile.flushLockedPage(pageRef, loadPlainCurrentPageId());\n+            } finally\n             {\n-                pagedFile.unlockFlush( pageRef, flushStamp, success );\n+                pagedFile.unlockFlush(pageRef, flushStamp, success);\n             }\n         }\n     }\n@@ -77,47 +76,46 @@ final class MuninnWritePageCursor extends MuninnPageCursor\n     {\n         unpinCurrentPage();\n         long lastPageId = assertPagedFileStillMappedAndGetIdOfLastPage();\n-        if ( nextPageId < 0 )\n+        if (nextPageId < 0)\n         {\n-            storeCurrentPageId( UNBOUND_PAGE_ID );\n+            storeCurrentPageId(UNBOUND_PAGE_ID);\n             return false;\n         }\n-        if ( nextPageId > lastPageId )\n+        if (nextPageId > lastPageId)\n         {\n-            if ( noGrow )\n+            if (noGrow)\n             {\n-                storeCurrentPageId( UNBOUND_PAGE_ID );\n+                storeCurrentPageId(UNBOUND_PAGE_ID);\n                 return false;\n-            }\n-            else\n+            } else\n             {\n-                pagedFile.increaseLastPageIdTo( nextPageId );\n+                pagedFile.increaseLastPageIdTo(nextPageId);\n             }\n         }\n-        storeCurrentPageId( nextPageId );\n+        storeCurrentPageId(nextPageId);\n         nextPageId++;\n         long filePageId = loadPlainCurrentPageId();\n-        pinEvent = tracer.beginPin( true, filePageId, swapper );\n-        pin( filePageId );\n+        pinEvent = tracer.beginPin(true, filePageId, swapper);\n+        pin(filePageId);\n         return true;\n     }\n \n     @Override\n-    protected boolean tryLockPage( long pageRef )\n+    protected boolean tryLockPage(long pageRef)\n     {\n-        return pagedFile.tryWriteLock( pageRef );\n+        return pagedFile.tryWriteLock(pageRef);\n     }\n \n     @Override\n-    protected void unlockPage( long pageRef )\n+    protected void unlockPage(long pageRef)\n     {\n-        pagedFile.unlockWrite( pageRef );\n+        pagedFile.unlockWrite(pageRef);\n     }\n \n     @Override\n-    protected void pinCursorToPage( long pageRef, long filePageId, PageSwapper swapper ) throws FileIsNotMappedException\n+    protected void pinCursorToPage(long pageRef, long filePageId, PageSwapper swapper) throws FileIsNotMappedException\n     {\n-        reset( pageRef );\n+        reset(pageRef);\n         // Check if we've been racing with unmapping. We want to do this before\n         // we make any changes to the contents of the page, because once all\n         // files have been unmapped, the page cache can be closed. And when\n@@ -126,14 +124,14 @@ final class MuninnWritePageCursor extends MuninnPageCursor\n         // after the reset() call, which means that if we throw, the cursor will\n         // be closed and the page lock will be released.\n         assertPagedFileStillMappedAndGetIdOfLastPage();\n-        pagedFile.incrementUsage( pageRef );\n-        pagedFile.setLastModifiedTxId( pageRef, versionContextSupplier.getVersionContext().committingTransactionId() );\n+        pagedFile.incrementUsage(pageRef);\n+        pagedFile.setLastModifiedTxId(pageRef, versionContextSupplier.getVersionContext().committingTransactionId());\n     }\n \n     @Override\n-    protected void convertPageFaultLock( long pageRef )\n+    protected void convertPageFaultLock(long pageRef)\n     {\n-        pagedFile.unlockExclusiveAndTakeWriteLock( pageRef );\n+        pagedFile.unlockExclusiveAndTakeWriteLock(pageRef);\n     }\n \n     @Override\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
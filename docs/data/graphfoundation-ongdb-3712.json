{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3712",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3712/HaRequestTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3712/HaRequestTypes.java\nindex 0c12dc52085..bb5fe511eed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3712/HaRequestTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3712/HaRequestTypes.java\n@@ -17,38 +17,39 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import org.neo4j.com.RequestType;\n \n public interface HaRequestTypes\n {\n-    enum Type\n-    {\n-        // Order here is vital since it represents the request type (byte) ordinal which is communicated\n-        // as part of the HA protocol.\n-        ALLOCATE_IDS,\n-        CREATE_RELATIONSHIP_TYPE,\n-        ACQUIRE_EXCLUSIVE_LOCK,\n-        ACQUIRE_SHARED_LOCK,\n-        COMMIT,\n-        PULL_UPDATES,\n-        END_LOCK_SESSION,\n-        HANDSHAKE,\n-        COPY_STORE,\n-        COPY_TRANSACTIONS,\n-        NEW_LOCK_SESSION,\n-        PUSH_TRANSACTIONS,\n-        CREATE_PROPERTY_KEY,\n-        CREATE_LABEL;\n+  enum Type\n+  {\n+    // Order here is vital since it represents the request type (byte) ordinal which is communicated\n+    // as part of the HA protocol.\n+    ALLOCATE_IDS,\n+    CREATE_RELATIONSHIP_TYPE,\n+    ACQUIRE_EXCLUSIVE_LOCK,\n+    ACQUIRE_SHARED_LOCK,\n+    COMMIT,\n+    PULL_UPDATES,\n+    END_LOCK_SESSION,\n+    HANDSHAKE,\n+    COPY_STORE,\n+    COPY_TRANSACTIONS,\n+    NEW_LOCK_SESSION,\n+    PUSH_TRANSACTIONS,\n+    CREATE_PROPERTY_KEY,\n+    CREATE_LABEL;\n \n-        public boolean is( RequestType type )\n-        {\n-            return type.id() == ordinal();\n-        }\n+    public boolean is(RequestType type)\n+    {\n+      return type.id() == ordinal();\n     }\n+  }\n \n-    RequestType type( Type type );\n+  RequestType type(Type type);\n \n-    RequestType type( byte id );\n+  RequestType type(byte id);\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 232).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3712/HaRequestTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3712/HaRequestTypes.java\nindex 0c12dc52085..d361d6f27eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3712/HaRequestTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3712/HaRequestTypes.java\n@@ -27,19 +27,7 @@ public interface HaRequestTypes\n     {\n         // Order here is vital since it represents the request type (byte) ordinal which is communicated\n         // as part of the HA protocol.\n-        ALLOCATE_IDS,\n-        CREATE_RELATIONSHIP_TYPE,\n-        ACQUIRE_EXCLUSIVE_LOCK,\n-        ACQUIRE_SHARED_LOCK,\n-        COMMIT,\n-        PULL_UPDATES,\n-        END_LOCK_SESSION,\n-        HANDSHAKE,\n-        COPY_STORE,\n-        COPY_TRANSACTIONS,\n-        NEW_LOCK_SESSION,\n-        PUSH_TRANSACTIONS,\n-        CREATE_PROPERTY_KEY,\n+        ALLOCATE_IDS, CREATE_RELATIONSHIP_TYPE, ACQUIRE_EXCLUSIVE_LOCK, ACQUIRE_SHARED_LOCK, COMMIT, PULL_UPDATES, END_LOCK_SESSION, HANDSHAKE, COPY_STORE, COPY_TRANSACTIONS, NEW_LOCK_SESSION, PUSH_TRANSACTIONS, CREATE_PROPERTY_KEY,\n         CREATE_LABEL;\n \n         public boolean is( RequestType type )\n@@ -49,6 +37,5 @@ public interface HaRequestTypes\n     }\n \n     RequestType type( Type type );\n-\n-    RequestType type( byte id );\n-}\n+RequestType type( byte id );\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
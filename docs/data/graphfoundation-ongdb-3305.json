{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3305",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "115",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "146",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "6",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3305/ServerBootstrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3305/ServerBootstrapper.java\nindex e4439970a5c..27b15777b91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3305/ServerBootstrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3305/ServerBootstrapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server;\n \n import sun.misc.Signal;\n@@ -48,187 +49,182 @@ import static org.neo4j.commandline.Util.neo4jVersion;\n \n public abstract class ServerBootstrapper implements Bootstrapper\n {\n-    public static final int OK = 0;\n-    private static final int WEB_SERVER_STARTUP_ERROR_CODE = 1;\n-    private static final int GRAPH_DATABASE_STARTUP_ERROR_CODE = 2;\n-    private static final String SIGTERM = \"TERM\";\n-    private static final String SIGINT = \"INT\";\n-\n-    private volatile NeoServer server;\n-    private Thread shutdownHook;\n-    private GraphDatabaseDependencies dependencies = GraphDatabaseDependencies.newDependencies();\n-    // in case we have errors loading/validating the configuration log to stdout\n-    private Log log = FormattedLogProvider.toOutputStream( System.out ).getLog( getClass() );\n-    private String serverAddress = \"unknown address\";\n-\n-    public static int start( Bootstrapper boot, String... argv )\n+  public static final int OK = 0;\n+  private static final int WEB_SERVER_STARTUP_ERROR_CODE = 1;\n+  private static final int GRAPH_DATABASE_STARTUP_ERROR_CODE = 2;\n+  private static final String SIGTERM = \"TERM\";\n+  private static final String SIGINT = \"INT\";\n+\n+  private volatile NeoServer server;\n+  private Thread shutdownHook;\n+  private GraphDatabaseDependencies dependencies = GraphDatabaseDependencies.newDependencies();\n+  // in case we have errors loading/validating the configuration log to stdout\n+  private Log log = FormattedLogProvider.toOutputStream(System.out).getLog(getClass());\n+  private String serverAddress = \"unknown address\";\n+\n+  public static int start(Bootstrapper boot, String... argv)\n+  {\n+    ServerCommandLineArgs args = ServerCommandLineArgs.parse(argv);\n+\n+    if (args.version())\n     {\n-        ServerCommandLineArgs args = ServerCommandLineArgs.parse( argv );\n-\n-        if ( args.version() )\n-        {\n-            System.out.println( \"neo4j \" + neo4jVersion() );\n-            return 0;\n-        }\n-\n-        if ( args.homeDir() == null )\n-        {\n-            throw new ServerStartupException( \"Argument --home-dir is required and was not provided.\" );\n-        }\n-\n-        return boot.start( args.homeDir(), args.configFile(), args.configOverrides() );\n+      System.out.println(\"neo4j \" + neo4jVersion());\n+      return 0;\n     }\n \n-    @Override\n-    public final int start( File homeDir, Optional<File> configFile, Map<String, String> configOverrides )\n+    if (args.homeDir() == null)\n     {\n-        addShutdownHook();\n-        installSignalHandlers();\n-        try\n-        {\n-            // Create config file from arguments\n-            Config config = Config.builder()\n-                    .withFile( configFile )\n-                    .withSettings( configOverrides )\n-                    .withHome(homeDir)\n-                    .withValidators( configurationValidators() )\n-                    .withServerDefaults().build();\n-\n-            LogProvider userLogProvider = setupLogging( config );\n-            dependencies = dependencies.userLogProvider( userLogProvider );\n-            log = userLogProvider.getLog( getClass() );\n-            config.setLogger( log );\n-\n-            serverAddress =  config.httpConnectors().stream()\n-                    .filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) )\n-                    .findFirst()\n-                    .map( connector -> config.get( connector.listen_address ).toString() )\n-                    .orElse( serverAddress );\n-\n-            checkCompatibility();\n-\n-            server = createNeoServer( config, dependencies, userLogProvider );\n-            server.start();\n-\n-            return OK;\n-        }\n-        catch ( ServerStartupException e )\n-        {\n-            e.describeTo( log );\n-            return WEB_SERVER_STARTUP_ERROR_CODE;\n-        }\n-        catch ( TransactionFailureException tfe )\n-        {\n-            String locationMsg = (server == null) ? \"\" :\n-                    \" Another process may be using database location \" + server.getDatabase().getLocation();\n-            log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ) + locationMsg, tfe );\n-            return GRAPH_DATABASE_STARTUP_ERROR_CODE;\n-        }\n-        catch ( Exception e )\n-        {\n-            log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ), e );\n-            return WEB_SERVER_STARTUP_ERROR_CODE;\n-        }\n+      throw new ServerStartupException(\"Argument --home-dir is required and was not provided.\");\n     }\n \n-    @Override\n-    public int stop()\n-    {\n-        String location = \"unknown location\";\n-        try\n-        {\n-            if ( server != null )\n-            {\n-                server.stop();\n-            }\n-\n-            removeShutdownHook();\n-\n-            return 0;\n-        }\n-        catch ( Exception e )\n-        {\n-            log.error( \"Failed to cleanly shutdown Neo Server on port [%s], database [%s]. Reason [%s] \",\n-                    serverAddress, location, e.getMessage(), e );\n-            return 1;\n-        }\n-    }\n+    return boot.start(args.homeDir(), args.configFile(), args.configOverrides());\n+  }\n \n-    public boolean isRunning()\n+  @Override\n+  public final int start(File homeDir, Optional<File> configFile, Map<String, String> configOverrides)\n+  {\n+    addShutdownHook();\n+    installSignalHandlers();\n+    try\n     {\n-        return server != null && server.getDatabase() != null && server.getDatabase().isRunning();\n-    }\n-\n-    public NeoServer getServer()\n+      // Create config file from arguments\n+      Config config = Config.builder()\n+          .withFile(configFile)\n+          .withSettings(configOverrides)\n+          .withHome(homeDir)\n+          .withValidators(configurationValidators())\n+          .withServerDefaults().build();\n+\n+      LogProvider userLogProvider = setupLogging(config);\n+      dependencies = dependencies.userLogProvider(userLogProvider);\n+      log = userLogProvider.getLog(getClass());\n+      config.setLogger(log);\n+\n+      serverAddress = config.httpConnectors().stream()\n+          .filter(c -> Encryption.NONE.equals(c.encryptionLevel()))\n+          .findFirst()\n+          .map(connector -> config.get(connector.listen_address).toString())\n+          .orElse(serverAddress);\n+\n+      checkCompatibility();\n+\n+      server = createNeoServer(config, dependencies, userLogProvider);\n+      server.start();\n+\n+      return OK;\n+    } catch (ServerStartupException e)\n     {\n-        return server;\n-    }\n-\n-    protected abstract NeoServer createNeoServer( Config config, GraphDatabaseDependencies dependencies,\n-                                                  LogProvider userLogProvider );\n-\n-    @Nonnull\n-    protected abstract Collection<ConfigurationValidator> configurationValidators();\n-\n-    private static LogProvider setupLogging( Config config )\n+      e.describeTo(log);\n+      return WEB_SERVER_STARTUP_ERROR_CODE;\n+    } catch (TransactionFailureException tfe)\n     {\n-        LogProvider userLogProvider = FormattedLogProvider.withoutRenderingContext()\n-                            .withZoneId( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() )\n-                            .withDefaultLogLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) )\n-                            .toOutputStream( System.out );\n-        JULBridge.resetJUL();\n-        Logger.getLogger( \"\" ).setLevel( Level.WARNING );\n-        JULBridge.forwardTo( userLogProvider );\n-        JettyLogBridge.setLogProvider( userLogProvider );\n-        return userLogProvider;\n-    }\n-\n-    // Exit gracefully if possible\n-    private void installSignalHandlers()\n+      String locationMsg = (server == null) ? \"\" :\n+          \" Another process may be using database location \" + server.getDatabase().getLocation();\n+      log.error(format(\"Failed to start Neo4j on %s.\", serverAddress) + locationMsg, tfe);\n+      return GRAPH_DATABASE_STARTUP_ERROR_CODE;\n+    } catch (Exception e)\n     {\n-        installSignalHandler( SIGTERM ); // SIGTERM is invoked when system service is stopped\n-        installSignalHandler( SIGINT ); // SIGINT is invoked when user hits ctrl-c  when running `neo4j console`\n+      log.error(format(\"Failed to start Neo4j on %s.\", serverAddress), e);\n+      return WEB_SERVER_STARTUP_ERROR_CODE;\n     }\n+  }\n \n-    private void installSignalHandler( String sig )\n+  @Override\n+  public int stop()\n+  {\n+    String location = \"unknown location\";\n+    try\n     {\n-        try\n-        {\n-            // System.exit() will trigger the shutdown hook\n-            Signal.handle( new Signal( sig ), signal -> System.exit( 0 ) );\n-        }\n-        catch ( Throwable e )\n-        {\n-            // Happens on IBM JDK with IllegalArgumentException: Signal already used by VM: INT\n-            log.warn( \"Unable to install signal handler. Exit code may not be 0 on graceful shutdown.\", e );\n-        }\n-    }\n+      if (server != null)\n+      {\n+        server.stop();\n+      }\n \n-    private void addShutdownHook()\n+      removeShutdownHook();\n+\n+      return 0;\n+    } catch (Exception e)\n     {\n-        shutdownHook = new Thread( () -> {\n-            log.info( \"Neo4j Server shutdown initiated by request\" );\n-            if ( server != null )\n-            {\n-                server.stop();\n-            }\n-        } );\n-        Runtime.getRuntime().addShutdownHook( shutdownHook );\n+      log.error(\"Failed to cleanly shutdown Neo Server on port [%s], database [%s]. Reason [%s] \",\n+          serverAddress, location, e.getMessage(), e);\n+      return 1;\n     }\n-\n-    private void removeShutdownHook()\n+  }\n+\n+  public boolean isRunning()\n+  {\n+    return server != null && server.getDatabase() != null && server.getDatabase().isRunning();\n+  }\n+\n+  public NeoServer getServer()\n+  {\n+    return server;\n+  }\n+\n+  protected abstract NeoServer createNeoServer(Config config, GraphDatabaseDependencies dependencies,\n+                                               LogProvider userLogProvider);\n+\n+  @Nonnull\n+  protected abstract Collection<ConfigurationValidator> configurationValidators();\n+\n+  private static LogProvider setupLogging(Config config)\n+  {\n+    LogProvider userLogProvider = FormattedLogProvider.withoutRenderingContext()\n+        .withZoneId(config.get(GraphDatabaseSettings.db_timezone).getZoneId())\n+        .withDefaultLogLevel(config.get(GraphDatabaseSettings.store_internal_log_level))\n+        .toOutputStream(System.out);\n+    JULBridge.resetJUL();\n+    Logger.getLogger(\"\").setLevel(Level.WARNING);\n+    JULBridge.forwardTo(userLogProvider);\n+    JettyLogBridge.setLogProvider(userLogProvider);\n+    return userLogProvider;\n+  }\n+\n+  // Exit gracefully if possible\n+  private void installSignalHandlers()\n+  {\n+    installSignalHandler(SIGTERM); // SIGTERM is invoked when system service is stopped\n+    installSignalHandler(SIGINT); // SIGINT is invoked when user hits ctrl-c  when running `neo4j console`\n+  }\n+\n+  private void installSignalHandler(String sig)\n+  {\n+    try\n+    {\n+      // System.exit() will trigger the shutdown hook\n+      Signal.handle(new Signal(sig), signal -> System.exit(0));\n+    } catch (Throwable e)\n     {\n-        if ( shutdownHook != null )\n-        {\n-            if ( !Runtime.getRuntime().removeShutdownHook( shutdownHook ) )\n-            {\n-                log.warn( \"Unable to remove shutdown hook\" );\n-            }\n-        }\n+      // Happens on IBM JDK with IllegalArgumentException: Signal already used by VM: INT\n+      log.warn(\"Unable to install signal handler. Exit code may not be 0 on graceful shutdown.\", e);\n     }\n-\n-    private void checkCompatibility()\n+  }\n+\n+  private void addShutdownHook()\n+  {\n+    shutdownHook = new Thread(() -> {\n+      log.info(\"Neo4j Server shutdown initiated by request\");\n+      if (server != null)\n+      {\n+        server.stop();\n+      }\n+    });\n+    Runtime.getRuntime().addShutdownHook(shutdownHook);\n+  }\n+\n+  private void removeShutdownHook()\n+  {\n+    if (shutdownHook != null)\n     {\n-        new JvmChecker( log, new JvmMetadataRepository() ).checkJvmCompatibilityAndIssueWarning();\n+      if (!Runtime.getRuntime().removeShutdownHook(shutdownHook))\n+      {\n+        log.warn(\"Unable to remove shutdown hook\");\n+      }\n     }\n+  }\n+\n+  private void checkCompatibility()\n+  {\n+    new JvmChecker(log, new JvmMetadataRepository()).checkJvmCompatibilityAndIssueWarning();\n+  }\n }\n",
            "diff_size": 269
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 272).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3305/ServerBootstrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3305/ServerBootstrapper.java\nindex e4439970a5c..d949cb3f5e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3305/ServerBootstrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3305/ServerBootstrapper.java\n@@ -64,8 +64,7 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     public static int start( Bootstrapper boot, String... argv )\n     {\n         ServerCommandLineArgs args = ServerCommandLineArgs.parse( argv );\n-\n-        if ( args.version() )\n+if ( args.version() )\n         {\n             System.out.println( \"neo4j \" + neo4jVersion() );\n             return 0;\n@@ -80,37 +79,26 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     }\n \n     @Override\n-    public final int start( File homeDir, Optional<File> configFile, Map<String, String> configOverrides )\n+    public final int start( File homeDir, Optional<File> configFile, Map<String,String> configOverrides )\n     {\n         addShutdownHook();\n         installSignalHandlers();\n         try\n         {\n             // Create config file from arguments\n-            Config config = Config.builder()\n-                    .withFile( configFile )\n+            Config config = Config.builder().withFile( configFile )\n                     .withSettings( configOverrides )\n-                    .withHome(homeDir)\n-                    .withValidators( configurationValidators() )\n-                    .withServerDefaults().build();\n-\n-            LogProvider userLogProvider = setupLogging( config );\n+                    .withHome(homeDir).withValidators( configurationValidators() ).withServerDefaults().build();\n+LogProvider userLogProvider = setupLogging( config );\n             dependencies = dependencies.userLogProvider( userLogProvider );\n             log = userLogProvider.getLog( getClass() );\n             config.setLogger( log );\n-\n-            serverAddress =  config.httpConnectors().stream()\n-                    .filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) )\n-                    .findFirst()\n-                    .map( connector -> config.get( connector.listen_address ).toString() )\n-                    .orElse( serverAddress );\n-\n-            checkCompatibility();\n+serverAddress = config.httpConnectors().stream().filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) ).findFirst().map( connector -> config.get( connector.listen_address ).toString() ).orElse( serverAddress );\n+checkCompatibility();\n \n             server = createNeoServer( config, dependencies, userLogProvider );\n             server.start();\n-\n-            return OK;\n+return OK;\n         }\n         catch ( ServerStartupException e )\n         {\n@@ -119,9 +107,8 @@ public abstract class ServerBootstrapper implements Bootstrapper\n         }\n         catch ( TransactionFailureException tfe )\n         {\n-            String locationMsg = (server == null) ? \"\" :\n-                    \" Another process may be using database location \" + server.getDatabase().getLocation();\n-            log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ) + locationMsg, tfe );\n+            String locationMsg = (server == null ) ? \"\" : \" Another process may be using database location \" + server.getDatabase().getLocation();\n+log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ) + locationMsg, tfe );\n             return GRAPH_DATABASE_STARTUP_ERROR_CODE;\n         }\n         catch ( Exception e )\n@@ -143,14 +130,13 @@ public abstract class ServerBootstrapper implements Bootstrapper\n             }\n \n             removeShutdownHook();\n-\n-            return 0;\n+return 0;\n         }\n         catch ( Exception e )\n         {\n             log.error( \"Failed to cleanly shutdown Neo Server on port [%s], database [%s]. Reason [%s] \",\n                     serverAddress, location, e.getMessage(), e );\n-            return 1;\n+return 1;\n         }\n     }\n \n@@ -164,19 +150,15 @@ public abstract class ServerBootstrapper implements Bootstrapper\n         return server;\n     }\n \n-    protected abstract NeoServer createNeoServer( Config config, GraphDatabaseDependencies dependencies,\n-                                                  LogProvider userLogProvider );\n+    protected abstract NeoServer createNeoServer( Config config, GraphDatabaseDependencies dependencies, LogProvider userLogProvider );\n \n-    @Nonnull\n+@Nonnull\n     protected abstract Collection<ConfigurationValidator> configurationValidators();\n \n     private static LogProvider setupLogging( Config config )\n     {\n-        LogProvider userLogProvider = FormattedLogProvider.withoutRenderingContext()\n-                            .withZoneId( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() )\n-                            .withDefaultLogLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) )\n-                            .toOutputStream( System.out );\n-        JULBridge.resetJUL();\n+        LogProvider userLogProvider = FormattedLogProvider.withoutRenderingContext().withZoneId( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() ).withDefaultLogLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) ).toOutputStream( System.out );\n+JULBridge.resetJUL();\n         Logger.getLogger( \"\" ).setLevel( Level.WARNING );\n         JULBridge.forwardTo( userLogProvider );\n         JettyLogBridge.setLogProvider( userLogProvider );\n@@ -206,7 +188,8 @@ public abstract class ServerBootstrapper implements Bootstrapper\n \n     private void addShutdownHook()\n     {\n-        shutdownHook = new Thread( () -> {\n+        shutdownHook = new Thread( () ->\n+{\n             log.info( \"Neo4j Server shutdown initiated by request\" );\n             if ( server != null )\n             {\n@@ -231,4 +214,4 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     {\n         new JvmChecker( log, new JvmMetadataRepository() ).checkJvmCompatibilityAndIssueWarning();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 228).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "column": "30",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "140",
                    "column": "61",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 272).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3305/ServerBootstrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3305/ServerBootstrapper.java\nindex e4439970a5c..bd0dd1c9dee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3305/ServerBootstrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3305/ServerBootstrapper.java\n@@ -20,7 +20,6 @@\n package org.neo4j.server;\n \n import sun.misc.Signal;\n-\n import java.io.File;\n import java.util.Collection;\n import java.util.Map;\n@@ -28,7 +27,6 @@ import java.util.Optional;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import javax.annotation.Nonnull;\n-\n import org.neo4j.graphdb.TransactionFailureException;\n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n import org.neo4j.kernel.GraphDatabaseDependencies;\n@@ -42,8 +40,8 @@ import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n import org.neo4j.server.logging.JULBridge;\n import org.neo4j.server.logging.JettyLogBridge;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.commandline.Util.neo4jVersion;\n \n public abstract class ServerBootstrapper implements Bootstrapper\n@@ -53,7 +51,6 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     private static final int GRAPH_DATABASE_STARTUP_ERROR_CODE = 2;\n     private static final String SIGTERM = \"TERM\";\n     private static final String SIGINT = \"INT\";\n-\n     private volatile NeoServer server;\n     private Thread shutdownHook;\n     private GraphDatabaseDependencies dependencies = GraphDatabaseDependencies.newDependencies();\n@@ -64,7 +61,6 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     public static int start( Bootstrapper boot, String... argv )\n     {\n         ServerCommandLineArgs args = ServerCommandLineArgs.parse( argv );\n-\n         if ( args.version() )\n         {\n             System.out.println( \"neo4j \" + neo4jVersion() );\n@@ -80,36 +76,22 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     }\n \n     @Override\n-    public final int start( File homeDir, Optional<File> configFile, Map<String, String> configOverrides )\n+    public final int start( File homeDir, Optional<File> configFile, Map<String,String> configOverrides )\n     {\n         addShutdownHook();\n         installSignalHandlers();\n         try\n         {\n             // Create config file from arguments\n-            Config config = Config.builder()\n-                    .withFile( configFile )\n-                    .withSettings( configOverrides )\n-                    .withHome(homeDir)\n-                    .withValidators( configurationValidators() )\n-                    .withServerDefaults().build();\n-\n+            Config config = Config.builder().withFile( configFile ).withSettings( configOverrides ).withHome( homeDir ).withValidators( configurationValidators() ).withServerDefaults().build();\n             LogProvider userLogProvider = setupLogging( config );\n             dependencies = dependencies.userLogProvider( userLogProvider );\n             log = userLogProvider.getLog( getClass() );\n             config.setLogger( log );\n-\n-            serverAddress =  config.httpConnectors().stream()\n-                    .filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) )\n-                    .findFirst()\n-                    .map( connector -> config.get( connector.listen_address ).toString() )\n-                    .orElse( serverAddress );\n-\n+            serverAddress = config.httpConnectors().stream().filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) ).findFirst().map( connector -> config.get( connector.listen_address ).toString() ).orElse( serverAddress );\n             checkCompatibility();\n-\n             server = createNeoServer( config, dependencies, userLogProvider );\n             server.start();\n-\n             return OK;\n         }\n         catch ( ServerStartupException e )\n@@ -117,18 +99,19 @@ public abstract class ServerBootstrapper implements Bootstrapper\n             e.describeTo( log );\n             return WEB_SERVER_STARTUP_ERROR_CODE;\n         }\n-        catch ( TransactionFailureException tfe )\n-        {\n-            String locationMsg = (server == null) ? \"\" :\n-                    \" Another process may be using database location \" + server.getDatabase().getLocation();\n-            log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ) + locationMsg, tfe );\n-            return GRAPH_DATABASE_STARTUP_ERROR_CODE;\n-        }\n-        catch ( Exception e )\n-        {\n-            log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ), e );\n-            return WEB_SERVER_STARTUP_ERROR_CODE;\n-        }\n+\n+            catch ( TransactionFailureException tfe )\n+            {\n+                String locationMsg = ( server == null) ? \"\" : \" Another process may be using database location \" + server.getDatabase().getLocation();\n+                log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ) + locationMsg, tfe );\n+                return GRAPH_DATABASE_STARTUP_ERROR_CODE;\n+            }\n+\n+            catch ( Exception e )\n+            {\n+                log.error( format( \"Failed to start Neo4j on %s.\", serverAddress ), e );\n+                return WEB_SERVER_STARTUP_ERROR_CODE;\n+            }\n     }\n \n     @Override\n@@ -143,20 +126,18 @@ public abstract class ServerBootstrapper implements Bootstrapper\n             }\n \n             removeShutdownHook();\n-\n             return 0;\n         }\n         catch ( Exception e )\n         {\n-            log.error( \"Failed to cleanly shutdown Neo Server on port [%s], database [%s]. Reason [%s] \",\n-                    serverAddress, location, e.getMessage(), e );\n+            log.error( \"Failed to cleanly shutdown Neo Server on port [%s], database [%s]. Reason [%s] \", serverAddress, location, e.getMessage(), e );\n             return 1;\n         }\n     }\n \n     public boolean isRunning()\n     {\n-        return server != null && server.getDatabase() != null && server.getDatabase().isRunning();\n+        return server != null&& server.getDatabase() != null&& server.getDatabase().isRunning();\n     }\n \n     public NeoServer getServer()\n@@ -164,18 +145,16 @@ public abstract class ServerBootstrapper implements Bootstrapper\n         return server;\n     }\n \n-    protected abstract NeoServer createNeoServer( Config config, GraphDatabaseDependencies dependencies,\n-                                                  LogProvider userLogProvider );\n+    protected abstract NeoServer createNeoServer( Config config, GraphDatabaseDependencies dependencies, LogProvider userLogProvider )\n+    ;\n \n     @Nonnull\n-    protected abstract Collection<ConfigurationValidator> configurationValidators();\n+    protected abstract Collection<ConfigurationValidator> configurationValidators()\n+    ;\n \n     private static LogProvider setupLogging( Config config )\n     {\n-        LogProvider userLogProvider = FormattedLogProvider.withoutRenderingContext()\n-                            .withZoneId( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() )\n-                            .withDefaultLogLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) )\n-                            .toOutputStream( System.out );\n+        LogProvider userLogProvider = FormattedLogProvider.withoutRenderingContext().withZoneId( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() ).withDefaultLogLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) ).toOutputStream( System.out );\n         JULBridge.resetJUL();\n         Logger.getLogger( \"\" ).setLevel( Level.WARNING );\n         JULBridge.forwardTo( userLogProvider );\n@@ -184,6 +163,7 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     }\n \n     // Exit gracefully if possible\n+\n     private void installSignalHandlers()\n     {\n         installSignalHandler( SIGTERM ); // SIGTERM is invoked when system service is stopped\n@@ -206,13 +186,14 @@ public abstract class ServerBootstrapper implements Bootstrapper\n \n     private void addShutdownHook()\n     {\n-        shutdownHook = new Thread( () -> {\n-            log.info( \"Neo4j Server shutdown initiated by request\" );\n-            if ( server != null )\n-            {\n-                server.stop();\n-            }\n-        } );\n+        shutdownHook = new Thread( () ->\n+                                   {\n+                                       log.info( \"Neo4j Server shutdown initiated by request\" );\n+                                       if ( server != null )\n+                                       {\n+                                           server.stop();\n+                                       }\n+                                   } );\n         Runtime.getRuntime().addShutdownHook( shutdownHook );\n     }\n \n@@ -220,7 +201,7 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     {\n         if ( shutdownHook != null )\n         {\n-            if ( !Runtime.getRuntime().removeShutdownHook( shutdownHook ) )\n+            if ( ! Runtime.getRuntime().removeShutdownHook( shutdownHook ) )\n             {\n                 log.warn( \"Unable to remove shutdown hook\" );\n             }\n@@ -231,4 +212,4 @@ public abstract class ServerBootstrapper implements Bootstrapper\n     {\n         new JvmChecker( log, new JvmMetadataRepository() ).checkJvmCompatibilityAndIssueWarning();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
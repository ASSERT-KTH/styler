{
    "project_name": "neo4j-neo4j",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/14/CommandCreationLocking.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/14/CommandCreationLocking.java\nindex 244389348f1..c24278a1933 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/14/CommandCreationLocking.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/14/CommandCreationLocking.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.neo4j.lock.LockTracer;\n@@ -26,41 +27,41 @@ import org.neo4j.storageengine.api.txstate.ReadableTransactionState;\n \n class CommandCreationLocking\n {\n-    public void acquireRelationshipCreationLock( ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer,\n-            long sourceNode, long targetNode )\n+    public void acquireRelationshipCreationLock(ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer,\n+                                                long sourceNode, long targetNode)\n     {\n-        lockGroupAndDegrees( txState, locker, lockTracer, sourceNode, targetNode );\n+        lockGroupAndDegrees(txState, locker, lockTracer, sourceNode, targetNode);\n     }\n \n-    public void acquireRelationshipDeletionLock( ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer,\n-            long sourceNode, long targetNode, long relationship )\n+    public void acquireRelationshipDeletionLock(ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer,\n+                                                long sourceNode, long targetNode, long relationship)\n     {\n-        lockGroupAndDegrees( txState, locker, lockTracer, sourceNode, targetNode );\n-        locker.acquireExclusive( lockTracer, ResourceTypes.RELATIONSHIP_DELETE, relationship );\n+        lockGroupAndDegrees(txState, locker, lockTracer, sourceNode, targetNode);\n+        locker.acquireExclusive(lockTracer, ResourceTypes.RELATIONSHIP_DELETE, relationship);\n     }\n \n-    public void acquireNodeDeletionLock( ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer, long node )\n+    public void acquireNodeDeletionLock(ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer, long node)\n     {\n-        locker.acquireExclusive( lockTracer, ResourceTypes.NODE_RELATIONSHIP_GROUP_DELETE, node );\n-        locker.acquireExclusive( lockTracer, ResourceTypes.NODE, node );\n-        locker.acquireExclusive( lockTracer, ResourceTypes.DEGREES, node );\n+        locker.acquireExclusive(lockTracer, ResourceTypes.NODE_RELATIONSHIP_GROUP_DELETE, node);\n+        locker.acquireExclusive(lockTracer, ResourceTypes.NODE, node);\n+        locker.acquireExclusive(lockTracer, ResourceTypes.DEGREES, node);\n     }\n \n-    private static void lockGroupAndDegrees( ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer, long sourceNode, long targetNode )\n+    private static void lockGroupAndDegrees(ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer, long sourceNode, long targetNode)\n     {\n-        lockGroupAndDegrees( txState, locker, lockTracer, Math.min( sourceNode, targetNode ) );\n-        if ( sourceNode != targetNode )\n+        lockGroupAndDegrees(txState, locker, lockTracer, Math.min(sourceNode, targetNode));\n+        if (sourceNode != targetNode)\n         {\n-            lockGroupAndDegrees( txState, locker, lockTracer, Math.max( sourceNode, targetNode ) );\n+            lockGroupAndDegrees(txState, locker, lockTracer, Math.max(sourceNode, targetNode));\n         }\n     }\n \n-    private static void lockGroupAndDegrees( ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer, long node )\n+    private static void lockGroupAndDegrees(ReadableTransactionState txState, ResourceLocker locker, LockTracer lockTracer, long node)\n     {\n-        if ( !txState.nodeIsAddedInThisTx( node ) )\n+        if (!txState.nodeIsAddedInThisTx(node))\n         {\n-            locker.acquireShared( lockTracer, ResourceTypes.NODE_RELATIONSHIP_GROUP_DELETE, node );\n-            locker.acquireShared( lockTracer, ResourceTypes.DEGREES, node );\n+            locker.acquireShared(lockTracer, ResourceTypes.NODE_RELATIONSHIP_GROUP_DELETE, node);\n+            locker.acquireShared(lockTracer, ResourceTypes.DEGREES, node);\n         }\n     }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
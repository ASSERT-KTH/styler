{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1470",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1470/RecordFormatPropertyConfigurator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1470/RecordFormatPropertyConfigurator.java\nindex 6e99b7bdc60..d01e7acbb2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1470/RecordFormatPropertyConfigurator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1470/RecordFormatPropertyConfigurator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format;\n \n import java.util.Map;\n@@ -39,50 +40,50 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.string_block_size;\n  */\n public class RecordFormatPropertyConfigurator\n {\n-    private final RecordFormats recordFormats;\n-    private final Config config;\n+  private final RecordFormats recordFormats;\n+  private final Config config;\n \n-    public RecordFormatPropertyConfigurator( RecordFormats recordFormats, Config config )\n-    {\n-        this.recordFormats = recordFormats;\n-        this.config = config;\n-    }\n+  public RecordFormatPropertyConfigurator(RecordFormats recordFormats, Config config)\n+  {\n+    this.recordFormats = recordFormats;\n+    this.config = config;\n+  }\n \n-    private static void configureIntegerSetting( Config config, Setting<Integer> setting,\n-            int fullBlockSize, int headerSize, Map<String,String> formatConfig )\n+  private static void configureIntegerSetting(Config config, Setting<Integer> setting,\n+                                              int fullBlockSize, int headerSize, Map<String, String> formatConfig)\n+  {\n+    Integer defaultValue = Integer.parseInt(setting.getDefaultValue());\n+    int propertyValue = config.get(setting);\n+    if (propertyValue == defaultValue)\n     {\n-        Integer defaultValue = Integer.parseInt( setting.getDefaultValue() );\n-        int propertyValue = config.get( setting );\n-        if ( propertyValue == defaultValue )\n+      int updatedBlockSize = fullBlockSize - headerSize;\n+      if (updatedBlockSize != propertyValue)\n+      {\n+        if (updatedBlockSize < MINIMAL_BLOCK_SIZE)\n         {\n-            int updatedBlockSize = fullBlockSize - headerSize;\n-            if ( updatedBlockSize != propertyValue )\n-            {\n-                if ( updatedBlockSize < MINIMAL_BLOCK_SIZE )\n-                {\n-                    throw new IllegalArgumentException( \"Block size should be bigger then \" + MINIMAL_BLOCK_SIZE );\n-                }\n-                addFormatSetting( formatConfig, setting, updatedBlockSize );\n-            }\n+          throw new IllegalArgumentException(\"Block size should be bigger then \" + MINIMAL_BLOCK_SIZE);\n         }\n+        addFormatSetting(formatConfig, setting, updatedBlockSize);\n+      }\n     }\n+  }\n \n-    private static void addFormatSetting( Map<String,String> configMap, Setting setting, int value )\n-    {\n-        configMap.put( setting.name(), String.valueOf( value ) );\n-    }\n+  private static void addFormatSetting(Map<String, String> configMap, Setting setting, int value)\n+  {\n+    configMap.put(setting.name(), String.valueOf(value));\n+  }\n \n-    public void configure()\n-    {\n-        Map<String,String> formatConfig = MapUtil.stringMap();\n-        int headerSize = recordFormats.dynamic().getRecordHeaderSize();\n+  public void configure()\n+  {\n+    Map<String, String> formatConfig = MapUtil.stringMap();\n+    int headerSize = recordFormats.dynamic().getRecordHeaderSize();\n \n-        configureIntegerSetting( config, string_block_size, DEFAULT_BLOCK_SIZE, headerSize, formatConfig );\n-        configureIntegerSetting( config, array_block_size, DEFAULT_BLOCK_SIZE, headerSize, formatConfig );\n-        configureIntegerSetting( config, label_block_size, DEFAULT_LABEL_BLOCK_SIZE, headerSize, formatConfig );\n-        if ( !formatConfig.isEmpty() )\n-        {\n-            config.augment( formatConfig );\n-        }\n+    configureIntegerSetting(config, string_block_size, DEFAULT_BLOCK_SIZE, headerSize, formatConfig);\n+    configureIntegerSetting(config, array_block_size, DEFAULT_BLOCK_SIZE, headerSize, formatConfig);\n+    configureIntegerSetting(config, label_block_size, DEFAULT_LABEL_BLOCK_SIZE, headerSize, formatConfig);\n+    if (!formatConfig.isEmpty())\n+    {\n+      config.augment(formatConfig);\n     }\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1470/RecordFormatPropertyConfigurator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1470/RecordFormatPropertyConfigurator.java\nindex 6e99b7bdc60..1e9110e67ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1470/RecordFormatPropertyConfigurator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1470/RecordFormatPropertyConfigurator.java\n@@ -48,8 +48,7 @@ public class RecordFormatPropertyConfigurator\n         this.config = config;\n     }\n \n-    private static void configureIntegerSetting( Config config, Setting<Integer> setting,\n-            int fullBlockSize, int headerSize, Map<String,String> formatConfig )\n+    private static void configureIntegerSetting( Config config, Setting<Integer> setting, int fullBlockSize, int headerSize, Map<String,String> formatConfig )\n     {\n         Integer defaultValue = Integer.parseInt( setting.getDefaultValue() );\n         int propertyValue = config.get( setting );\n@@ -62,7 +61,8 @@ public class RecordFormatPropertyConfigurator\n                 {\n                     throw new IllegalArgumentException( \"Block size should be bigger then \" + MINIMAL_BLOCK_SIZE );\n                 }\n-                addFormatSetting( formatConfig, setting, updatedBlockSize );\n+\n+addFormatSetting( formatConfig, setting, updatedBlockSize );\n             }\n         }\n     }\n@@ -85,4 +85,4 @@ public class RecordFormatPropertyConfigurator\n             config.augment( formatConfig );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
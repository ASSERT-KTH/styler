{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3208",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3208/TransitionalTxManagementKernelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3208/TransitionalTxManagementKernelTransaction.java\nindex 59c7ad6f475..c1c69446920 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3208/TransitionalTxManagementKernelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3208/TransitionalTxManagementKernelTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import java.util.concurrent.TimeUnit;\n@@ -31,95 +32,91 @@ import org.neo4j.kernel.impl.factory.GraphDatabaseFacade;\n \n class TransitionalTxManagementKernelTransaction\n {\n-    private final GraphDatabaseFacade db;\n-    private final KernelTransaction.Type type;\n-    private final LoginContext loginContext;\n-    private long customTransactionTimeout;\n-    private final ThreadToStatementContextBridge bridge;\n+  private final GraphDatabaseFacade db;\n+  private final KernelTransaction.Type type;\n+  private final LoginContext loginContext;\n+  private long customTransactionTimeout;\n+  private final ThreadToStatementContextBridge bridge;\n \n-    private InternalTransaction tx;\n-    private KernelTransaction suspendedTransaction;\n+  private InternalTransaction tx;\n+  private KernelTransaction suspendedTransaction;\n \n-    TransitionalTxManagementKernelTransaction( GraphDatabaseFacade db, KernelTransaction.Type type,\n-            LoginContext loginContext, long customTransactionTimeout, ThreadToStatementContextBridge bridge )\n-    {\n-        this.db = db;\n-        this.type = type;\n-        this.loginContext = loginContext;\n-        this.customTransactionTimeout = customTransactionTimeout;\n-        this.bridge = bridge;\n-        this.tx = startTransaction();\n-    }\n+  TransitionalTxManagementKernelTransaction(GraphDatabaseFacade db, KernelTransaction.Type type,\n+                                            LoginContext loginContext, long customTransactionTimeout, ThreadToStatementContextBridge bridge)\n+  {\n+    this.db = db;\n+    this.type = type;\n+    this.loginContext = loginContext;\n+    this.customTransactionTimeout = customTransactionTimeout;\n+    this.bridge = bridge;\n+    this.tx = startTransaction();\n+  }\n \n-    void suspendSinceTransactionsAreStillThreadBound()\n-    {\n-        assert suspendedTransaction == null : \"Can't suspend the transaction if it already is suspended.\";\n-        suspendedTransaction = bridge.getTopLevelTransactionBoundToThisThread( true );\n-        bridge.unbindTransactionFromCurrentThread();\n-    }\n+  void suspendSinceTransactionsAreStillThreadBound()\n+  {\n+    assert suspendedTransaction == null : \"Can't suspend the transaction if it already is suspended.\";\n+    suspendedTransaction = bridge.getTopLevelTransactionBoundToThisThread(true);\n+    bridge.unbindTransactionFromCurrentThread();\n+  }\n \n-    void resumeSinceTransactionsAreStillThreadBound()\n-    {\n-        assert suspendedTransaction != null : \"Can't resume the transaction if it has not first been suspended.\";\n-        bridge.bindTransactionToCurrentThread( suspendedTransaction );\n-        suspendedTransaction = null;\n-    }\n+  void resumeSinceTransactionsAreStillThreadBound()\n+  {\n+    assert suspendedTransaction != null : \"Can't resume the transaction if it has not first been suspended.\";\n+    bridge.bindTransactionToCurrentThread(suspendedTransaction);\n+    suspendedTransaction = null;\n+  }\n \n-    public void terminate()\n-    {\n-        tx.terminate();\n-    }\n+  public void terminate()\n+  {\n+    tx.terminate();\n+  }\n \n-    public void rollback()\n+  public void rollback()\n+  {\n+    try\n     {\n-        try\n-        {\n-            KernelTransaction kernelTransactionBoundToThisThread = bridge.getKernelTransactionBoundToThisThread( false );\n-            kernelTransactionBoundToThisThread.failure();\n-            kernelTransactionBoundToThisThread.close();\n-        }\n-        catch ( TransactionFailureException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        finally\n-        {\n-            bridge.unbindTransactionFromCurrentThread();\n-        }\n-    }\n-\n-    public void commit()\n+      KernelTransaction kernelTransactionBoundToThisThread = bridge.getKernelTransactionBoundToThisThread(false);\n+      kernelTransactionBoundToThisThread.failure();\n+      kernelTransactionBoundToThisThread.close();\n+    } catch (TransactionFailureException e)\n     {\n-        try\n-        {\n-            KernelTransaction kernelTransactionBoundToThisThread = bridge.getKernelTransactionBoundToThisThread( true );\n-            kernelTransactionBoundToThisThread.success();\n-            kernelTransactionBoundToThisThread.close();\n-        }\n-        catch ( TransactionFailureException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        finally\n-        {\n-            bridge.unbindTransactionFromCurrentThread();\n-        }\n-    }\n-\n-    void closeTransactionForPeriodicCommit()\n+      throw new RuntimeException(e);\n+    } finally\n     {\n-        tx.close();\n+      bridge.unbindTransactionFromCurrentThread();\n     }\n+  }\n \n-    void reopenAfterPeriodicCommit()\n+  public void commit()\n+  {\n+    try\n     {\n-        tx = startTransaction();\n-    }\n-\n-    private InternalTransaction startTransaction()\n+      KernelTransaction kernelTransactionBoundToThisThread = bridge.getKernelTransactionBoundToThisThread(true);\n+      kernelTransactionBoundToThisThread.success();\n+      kernelTransactionBoundToThisThread.close();\n+    } catch (TransactionFailureException e)\n     {\n-        return customTransactionTimeout > GraphDatabaseSettings.UNSPECIFIED_TIMEOUT ?\n-               db.beginTransaction( type, loginContext, customTransactionTimeout, TimeUnit.MILLISECONDS ) :\n-               db.beginTransaction( type, loginContext );\n+      throw new RuntimeException(e);\n+    } finally\n+    {\n+      bridge.unbindTransactionFromCurrentThread();\n     }\n+  }\n+\n+  void closeTransactionForPeriodicCommit()\n+  {\n+    tx.close();\n+  }\n+\n+  void reopenAfterPeriodicCommit()\n+  {\n+    tx = startTransaction();\n+  }\n+\n+  private InternalTransaction startTransaction()\n+  {\n+    return customTransactionTimeout > GraphDatabaseSettings.UNSPECIFIED_TIMEOUT ?\n+        db.beginTransaction(type, loginContext, customTransactionTimeout, TimeUnit.MILLISECONDS) :\n+        db.beginTransaction(type, loginContext);\n+  }\n }\n",
            "diff_size": 102
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "column": "40",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3208/TransitionalTxManagementKernelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3208/TransitionalTxManagementKernelTransaction.java\nindex 59c7ad6f475..6d43b701068 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3208/TransitionalTxManagementKernelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3208/TransitionalTxManagementKernelTransaction.java\n@@ -118,8 +118,6 @@ class TransitionalTxManagementKernelTransaction\n \n     private InternalTransaction startTransaction()\n     {\n-        return customTransactionTimeout > GraphDatabaseSettings.UNSPECIFIED_TIMEOUT ?\n-               db.beginTransaction( type, loginContext, customTransactionTimeout, TimeUnit.MILLISECONDS ) :\n-               db.beginTransaction( type, loginContext );\n+        return customTransactionTimeout> GraphDatabaseSettings.UNSPECIFIED_TIMEOUT ? db.beginTransaction( type, loginContext, customTransactionTimeout, TimeUnit.MILLISECONDS ) : db.beginTransaction( type, loginContext );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "348",
    "information": {
        "errors": [
            {
                "line": "53",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * Sets the value of the '{@link org.eclipse.wst.wsdl.binding.soap.SOAPAddress#getLocationURI <em>Location URI</em>}' attribute.\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @param value the new value of the '<em>Location URI</em>' attribute.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/348/SOAPAddress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/348/SOAPAddress.java\nindex f4d9d1b1520..31692283dcd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/348/SOAPAddress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/348/SOAPAddress.java\n@@ -8,6 +8,7 @@\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n+\n package org.eclipse.wst.wsdl.binding.soap;\n \n \n@@ -26,12 +27,11 @@ import org.eclipse.wst.wsdl.ExtensibilityElement;\n  * </ul>\n  * </p>\n  *\n- * @see org.eclipse.wst.wsdl.binding.soap.SOAPPackage#getSOAPAddress()\n  * @model superTypes=\"org.eclipse.wst.wsdl.ExtensibilityElement org.eclipse.wst.wsdl.binding.soap.ISOAPAddress\"\n  * @generated\n+ * @see org.eclipse.wst.wsdl.binding.soap.SOAPPackage#getSOAPAddress()\n  */\n-public interface SOAPAddress extends ExtensibilityElement, javax.wsdl.extensions.soap.SOAPAddress\n-{\n+public interface SOAPAddress extends ExtensibilityElement, javax.wsdl.extensions.soap.SOAPAddress {\n \n   /**\n    * Returns the value of the '<em><b>Location URI</b></em>' attribute.\n@@ -41,11 +41,12 @@ public interface SOAPAddress extends ExtensibilityElement, javax.wsdl.extensions\n    * there really should be more of a description here...\n    * </p>\n    * <!-- end-user-doc -->\n+   *\n    * @return the value of the '<em>Location URI</em>' attribute.\n-   * @see #setLocationURI(String)\n-   * @see org.eclipse.wst.wsdl.binding.soap.SOAPPackage#getSOAPAddress_LocationURI()\n    * @model\n    * @generated\n+   * @see #setLocationURI(String)\n+   * @see org.eclipse.wst.wsdl.binding.soap.SOAPPackage#getSOAPAddress_LocationURI()\n    */\n   String getLocationURI();\n \n@@ -53,9 +54,10 @@ public interface SOAPAddress extends ExtensibilityElement, javax.wsdl.extensions\n    * Sets the value of the '{@link org.eclipse.wst.wsdl.binding.soap.SOAPAddress#getLocationURI <em>Location URI</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @param value the new value of the '<em>Location URI</em>' attribute.\n-   * @see #getLocationURI()\n    * @generated\n+   * @see #getLocationURI()\n    */\n   void setLocationURI(String value);\n \n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
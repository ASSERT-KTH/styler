{
    "project_name": "neo4j-neo4j",
    "error_id": "425",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/425/GrabAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/425/GrabAllocator.java\nindex 8440d71b389..bbe2755494b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/425/GrabAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/425/GrabAllocator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.mem;\n \n import org.neo4j.internal.unsafe.UnsafeUtil;\n@@ -43,13 +44,13 @@ public final class GrabAllocator implements MemoryAllocator\n      * given alignment size.\n      *\n      * @param expectedMaxMemory The maximum amount of memory that this memory manager is expected to allocate. The\n-     * actual amount of memory used can end up greater than this value, if some of it gets wasted on alignment padding.\n-     * @param memoryTracker memory usage tracker\n+     *                          actual amount of memory used can end up greater than this value, if some of it gets wasted on alignment padding.\n+     * @param memoryTracker     memory usage tracker\n      */\n-    GrabAllocator( long expectedMaxMemory, MemoryTracker memoryTracker )\n+    GrabAllocator(long expectedMaxMemory, MemoryTracker memoryTracker)\n     {\n-        this.grabs = new Grabs( expectedMaxMemory, memoryTracker );\n-        this.cleanable = globalCleaner.register( this, new GrabsDeallocator( grabs ) );\n+        this.grabs = new Grabs(expectedMaxMemory, memoryTracker);\n+        this.cleanable = globalCleaner.register(this, new GrabsDeallocator(grabs));\n     }\n \n     @Override\n@@ -65,9 +66,9 @@ public final class GrabAllocator implements MemoryAllocator\n     }\n \n     @Override\n-    public synchronized long allocateAligned( long bytes, long alignment )\n+    public synchronized long allocateAligned(long bytes, long alignment)\n     {\n-        return grabs.allocateAligned( bytes, alignment );\n+        return grabs.allocateAligned(bytes, alignment);\n     }\n \n     @Override\n@@ -84,16 +85,16 @@ public final class GrabAllocator implements MemoryAllocator\n         private final MemoryTracker memoryTracker;\n         private long nextPointer;\n \n-        Grab( Grab next, long size, MemoryTracker memoryTracker )\n+        Grab(Grab next, long size, MemoryTracker memoryTracker)\n         {\n             this.next = next;\n-            this.address = UnsafeUtil.allocateMemory( size, memoryTracker );\n+            this.address = UnsafeUtil.allocateMemory(size, memoryTracker);\n             this.limit = address + size;\n             this.memoryTracker = memoryTracker;\n             nextPointer = address;\n         }\n \n-        Grab( Grab next, long address, long limit, long nextPointer, MemoryTracker memoryTracker )\n+        Grab(Grab next, long address, long limit, long nextPointer, MemoryTracker memoryTracker)\n         {\n             this.next = next;\n             this.address = address;\n@@ -102,40 +103,40 @@ public final class GrabAllocator implements MemoryAllocator\n             this.memoryTracker = memoryTracker;\n         }\n \n-        private static long nextAligned( long pointer, long alignment )\n+        private static long nextAligned(long pointer, long alignment)\n         {\n-            if ( alignment == 1 )\n+            if (alignment == 1)\n             {\n                 return pointer;\n             }\n             long off = pointer % alignment;\n-            if ( off == 0 )\n+            if (off == 0)\n             {\n                 return pointer;\n             }\n             return pointer + (alignment - off);\n         }\n \n-        long allocate( long bytes, long alignment )\n+        long allocate(long bytes, long alignment)\n         {\n-            long allocation = nextAligned( nextPointer, alignment );\n+            long allocation = nextAligned(nextPointer, alignment);\n             nextPointer = allocation + bytes;\n             return allocation;\n         }\n \n         void free()\n         {\n-            UnsafeUtil.free( address, limit - address, memoryTracker );\n+            UnsafeUtil.free(address, limit - address, memoryTracker);\n         }\n \n-        boolean canAllocate( long bytes, long alignment )\n+        boolean canAllocate(long bytes, long alignment)\n         {\n-            return nextAligned( nextPointer, alignment ) + bytes <= limit;\n+            return nextAligned(nextPointer, alignment) + bytes <= limit;\n         }\n \n-        Grab setNext( Grab grab )\n+        Grab setNext(Grab grab)\n         {\n-            return new Grab( grab, address, limit, nextPointer, memoryTracker );\n+            return new Grab(grab, address, limit, nextPointer, memoryTracker);\n         }\n \n         @Override\n@@ -144,7 +145,7 @@ public final class GrabAllocator implements MemoryAllocator\n             long size = limit - address;\n             long reserve = nextPointer > limit ? 0 : limit - nextPointer;\n             double use = (1.0 - reserve / ((double) size)) * 100.0;\n-            return String.format( \"Grab[size = %d bytes, reserve = %d bytes, use = %5.2f %%]\", size, reserve, use );\n+            return String.format(\"Grab[size = %d bytes, reserve = %d bytes, use = %5.2f %%]\", size, reserve, use);\n         }\n     }\n \n@@ -153,13 +154,13 @@ public final class GrabAllocator implements MemoryAllocator\n         /**\n          * The amount of memory, in bytes, to grab in each Grab.\n          */\n-        private static final long GRAB_SIZE = getInteger( GrabAllocator.class, \"GRAB_SIZE\", (int) kibiBytes( 512 ) );\n+        private static final long GRAB_SIZE = getInteger(GrabAllocator.class, \"GRAB_SIZE\", (int) kibiBytes(512));\n \n         private final MemoryTracker memoryTracker;\n         private long expectedMaxMemory;\n         private Grab head;\n \n-        Grabs( long expectedMaxMemory, MemoryTracker memoryTracker )\n+        Grabs(long expectedMaxMemory, MemoryTracker memoryTracker)\n         {\n             this.expectedMaxMemory = expectedMaxMemory;\n             this.memoryTracker = memoryTracker;\n@@ -169,7 +170,7 @@ public final class GrabAllocator implements MemoryAllocator\n         {\n             long sum = 0;\n             Grab grab = head;\n-            while ( grab != null )\n+            while (grab != null)\n             {\n                 sum += grab.nextPointer - grab.address;\n                 grab = grab.next;\n@@ -181,18 +182,18 @@ public final class GrabAllocator implements MemoryAllocator\n         {\n             Grab grab = head;\n             long availableInCurrentGrab = 0;\n-            if ( grab != null )\n+            if (grab != null)\n             {\n                 availableInCurrentGrab = grab.limit - grab.nextPointer;\n             }\n-            return Math.max( expectedMaxMemory, 0L ) + availableInCurrentGrab;\n+            return Math.max(expectedMaxMemory, 0L) + availableInCurrentGrab;\n         }\n \n         public void close()\n         {\n             Grab current = head;\n \n-            while ( current != null )\n+            while (current != null)\n             {\n                 current.free();\n                 current = current.next;\n@@ -200,51 +201,51 @@ public final class GrabAllocator implements MemoryAllocator\n             head = null;\n         }\n \n-        long allocateAligned( long bytes, long alignment )\n+        long allocateAligned(long bytes, long alignment)\n         {\n-            if ( alignment <= 0 )\n+            if (alignment <= 0)\n             {\n-                throw new IllegalArgumentException( \"Invalid alignment: \" + alignment + \". Alignment must be positive.\" );\n+                throw new IllegalArgumentException(\"Invalid alignment: \" + alignment + \". Alignment must be positive.\");\n             }\n-            long grabSize = Math.min( GRAB_SIZE, expectedMaxMemory );\n+            long grabSize = Math.min(GRAB_SIZE, expectedMaxMemory);\n             long maxAllocationSize = bytes + alignment - 1;\n-            if ( maxAllocationSize > GRAB_SIZE )\n+            if (maxAllocationSize > GRAB_SIZE)\n             {\n                 // This is a huge allocation. Put it in its own grab and keep any existing grab at the head.\n                 grabSize = bytes;\n                 Grab nextGrab = head == null ? null : head.next;\n-                Grab allocationGrab = new Grab( nextGrab, grabSize, memoryTracker );\n-                if ( !allocationGrab.canAllocate( bytes, alignment ) )\n+                Grab allocationGrab = new Grab(nextGrab, grabSize, memoryTracker);\n+                if (!allocationGrab.canAllocate(bytes, alignment))\n                 {\n                     allocationGrab.free();\n                     grabSize = maxAllocationSize;\n-                    allocationGrab = new Grab( nextGrab, grabSize, memoryTracker );\n+                    allocationGrab = new Grab(nextGrab, grabSize, memoryTracker);\n                 }\n-                long allocation = allocationGrab.allocate( bytes, alignment );\n-                head = head == null ? allocationGrab : head.setNext( allocationGrab );\n+                long allocation = allocationGrab.allocate(bytes, alignment);\n+                head = head == null ? allocationGrab : head.setNext(allocationGrab);\n                 expectedMaxMemory -= bytes;\n                 return allocation;\n             }\n \n-            if ( head == null || !head.canAllocate( bytes, alignment ) )\n+            if (head == null || !head.canAllocate(bytes, alignment))\n             {\n-                if ( grabSize < maxAllocationSize )\n+                if (grabSize < maxAllocationSize)\n                 {\n                     grabSize = bytes;\n-                    Grab grab = new Grab( head, grabSize, memoryTracker );\n-                    if ( grab.canAllocate( bytes, alignment ) )\n+                    Grab grab = new Grab(head, grabSize, memoryTracker);\n+                    if (grab.canAllocate(bytes, alignment))\n                     {\n                         expectedMaxMemory -= grabSize;\n                         head = grab;\n-                        return head.allocate( bytes, alignment );\n+                        return head.allocate(bytes, alignment);\n                     }\n                     grab.free();\n                     grabSize = maxAllocationSize;\n                 }\n-                head = new Grab( head, grabSize, memoryTracker );\n+                head = new Grab(head, grabSize, memoryTracker);\n                 expectedMaxMemory -= grabSize;\n             }\n-            return head.allocate( bytes, alignment );\n+            return head.allocate(bytes, alignment);\n         }\n     }\n \n@@ -257,7 +258,7 @@ public final class GrabAllocator implements MemoryAllocator\n     {\n         private final Grabs grabs;\n \n-        GrabsDeallocator( Grabs grabs )\n+        GrabsDeallocator(Grabs grabs)\n         {\n             this.grabs = grabs;\n         }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/425/GrabAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/425/GrabAllocator.java\nindex 8440d71b389..93a94f8f935 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/425/GrabAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/425/GrabAllocator.java\n@@ -268,4 +268,4 @@ public final class GrabAllocator implements MemoryAllocator\n             grabs.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "230",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/230/NodeRecordFormatV3_0_0.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/230/NodeRecordFormatV3_0_0.java\nindex c0da749cebf..952eab717cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/230/NodeRecordFormatV3_0_0.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/230/NodeRecordFormatV3_0_0.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.highlimit.v300;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -26,80 +27,80 @@ import org.neo4j.kernel.impl.store.record.Record;\n /**\n  * LEGEND:\n  * V: variable between 3B-8B\n- *\n+ * <p>\n  * Record format:\n  * 1B   header\n  * VB   first relationship\n  * VB   first property\n  * 5B   labels\n- *\n+ * <p>\n  * => 12B-22B\n  */\n public class NodeRecordFormatV3_0_0 extends BaseHighLimitRecordFormatV3_0_0<NodeRecord>\n {\n-    public static final int RECORD_SIZE = 16;\n+  public static final int RECORD_SIZE = 16;\n \n-    private static final long NULL_LABELS = Record.NO_LABELS_FIELD.intValue();\n-    private static final int DENSE_NODE_BIT       = 0b0000_1000;\n-    private static final int HAS_RELATIONSHIP_BIT = 0b0001_0000;\n-    private static final int HAS_PROPERTY_BIT     = 0b0010_0000;\n-    private static final int HAS_LABELS_BIT       = 0b0100_0000;\n+  private static final long NULL_LABELS = Record.NO_LABELS_FIELD.intValue();\n+  private static final int DENSE_NODE_BIT = 0b0000_1000;\n+  private static final int HAS_RELATIONSHIP_BIT = 0b0001_0000;\n+  private static final int HAS_PROPERTY_BIT = 0b0010_0000;\n+  private static final int HAS_LABELS_BIT = 0b0100_0000;\n \n-    public NodeRecordFormatV3_0_0()\n-    {\n-        this( RECORD_SIZE );\n-    }\n+  public NodeRecordFormatV3_0_0()\n+  {\n+    this(RECORD_SIZE);\n+  }\n \n-    private NodeRecordFormatV3_0_0( int recordSize )\n-    {\n-        super( fixedRecordSize( recordSize ), 0 );\n-    }\n+  private NodeRecordFormatV3_0_0(int recordSize)\n+  {\n+    super(fixedRecordSize(recordSize), 0);\n+  }\n \n-    @Override\n-    public NodeRecord newRecord()\n-    {\n-        return new NodeRecord( -1 );\n-    }\n+  @Override\n+  public NodeRecord newRecord()\n+  {\n+    return new NodeRecord(-1);\n+  }\n \n-    @Override\n-    protected void doReadInternal( NodeRecord record, PageCursor cursor, int recordSize, long headerByte,\n-            boolean inUse )\n-    {\n-        // Interpret the header byte\n-        boolean dense = has( headerByte, DENSE_NODE_BIT );\n+  @Override\n+  protected void doReadInternal(NodeRecord record, PageCursor cursor, int recordSize, long headerByte,\n+                                boolean inUse)\n+  {\n+    // Interpret the header byte\n+    boolean dense = has(headerByte, DENSE_NODE_BIT);\n \n-        // Now read the rest of the data. The adapter will take care of moving the cursor over to the\n-        // other unit when we've exhausted the first one.\n-        long nextRel = decodeCompressedReference( cursor, headerByte, HAS_RELATIONSHIP_BIT, NULL );\n-        long nextProp = decodeCompressedReference( cursor, headerByte, HAS_PROPERTY_BIT, NULL );\n-        long labelField = decodeCompressedReference( cursor, headerByte, HAS_LABELS_BIT, NULL_LABELS );\n-        record.initialize( inUse, nextProp, dense, nextRel, labelField );\n-    }\n+    // Now read the rest of the data. The adapter will take care of moving the cursor over to the\n+    // other unit when we've exhausted the first one.\n+    long nextRel = decodeCompressedReference(cursor, headerByte, HAS_RELATIONSHIP_BIT, NULL);\n+    long nextProp = decodeCompressedReference(cursor, headerByte, HAS_PROPERTY_BIT, NULL);\n+    long labelField = decodeCompressedReference(cursor, headerByte, HAS_LABELS_BIT, NULL_LABELS);\n+    record.initialize(inUse, nextProp, dense, nextRel, labelField);\n+  }\n \n-    @Override\n-    public int requiredDataLength( NodeRecord record )\n-    {\n-        return  length( record.getNextRel(), NULL ) +\n-                length( record.getNextProp(), NULL ) +\n-                length( record.getLabelField(), NULL_LABELS );\n-    }\n+  @Override\n+  public int requiredDataLength(NodeRecord record)\n+  {\n+    return length(record.getNextRel(), NULL) +\n+        length(record.getNextProp(), NULL) +\n+        length(record.getLabelField(), NULL_LABELS);\n+  }\n \n-    @Override\n-    protected byte headerBits( NodeRecord record )\n-    {\n-        byte header = 0;\n-        header = set( header, DENSE_NODE_BIT, record.isDense() );\n-        header = set( header, HAS_RELATIONSHIP_BIT, record.getNextRel(), NULL );\n-        header = set( header, HAS_PROPERTY_BIT, record.getNextProp(), NULL );\n-        header = set( header, HAS_LABELS_BIT, record.getLabelField(), NULL_LABELS );\n-        return header;\n-    }\n+  @Override\n+  protected byte headerBits(NodeRecord record)\n+  {\n+    byte header = 0;\n+    header = set(header, DENSE_NODE_BIT, record.isDense());\n+    header = set(header, HAS_RELATIONSHIP_BIT, record.getNextRel(), NULL);\n+    header = set(header, HAS_PROPERTY_BIT, record.getNextProp(), NULL);\n+    header = set(header, HAS_LABELS_BIT, record.getLabelField(), NULL_LABELS);\n+    return header;\n+  }\n \n-    @Override\n-    protected void doWriteInternal( NodeRecord record, PageCursor cursor )\n-    {\n-        encode( cursor, record.getNextRel(), NULL );\n-        encode( cursor, record.getNextProp(), NULL );\n-        encode( cursor, record.getLabelField(), NULL_LABELS );\n-    }\n+  @Override\n+  protected void doWriteInternal(NodeRecord record, PageCursor cursor)\n+  {\n+    encode(cursor, record.getNextRel(), NULL);\n+    encode(cursor, record.getNextProp(), NULL);\n+    encode(cursor, record.getLabelField(), NULL_LABELS);\n+  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/230/NodeRecordFormatV3_0_0.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/230/NodeRecordFormatV3_0_0.java\nindex c0da749cebf..dff590a1853 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/230/NodeRecordFormatV3_0_0.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/230/NodeRecordFormatV3_0_0.java\n@@ -40,10 +40,10 @@ public class NodeRecordFormatV3_0_0 extends BaseHighLimitRecordFormatV3_0_0<Node\n     public static final int RECORD_SIZE = 16;\n \n     private static final long NULL_LABELS = Record.NO_LABELS_FIELD.intValue();\n-    private static final int DENSE_NODE_BIT       = 0b0000_1000;\n+    private static final int DENSE_NODE_BIT = 0b0000_1000;\n     private static final int HAS_RELATIONSHIP_BIT = 0b0001_0000;\n-    private static final int HAS_PROPERTY_BIT     = 0b0010_0000;\n-    private static final int HAS_LABELS_BIT       = 0b0100_0000;\n+    private static final int HAS_PROPERTY_BIT = 0b0010_0000;\n+    private static final int HAS_LABELS_BIT = 0b0100_0000;\n \n     public NodeRecordFormatV3_0_0()\n     {\n@@ -79,9 +79,7 @@ public class NodeRecordFormatV3_0_0 extends BaseHighLimitRecordFormatV3_0_0<Node\n     @Override\n     public int requiredDataLength( NodeRecord record )\n     {\n-        return  length( record.getNextRel(), NULL ) +\n-                length( record.getNextProp(), NULL ) +\n-                length( record.getLabelField(), NULL_LABELS );\n+        return length( record.getNextRel(), NULL ) + length( record.getNextProp(), NULL ) + length( record.getLabelField(), NULL_LABELS );\n     }\n \n     @Override\n@@ -102,4 +100,4 @@ public class NodeRecordFormatV3_0_0 extends BaseHighLimitRecordFormatV3_0_0<Node\n         encode( cursor, record.getNextProp(), NULL );\n         encode( cursor, record.getLabelField(), NULL_LABELS );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
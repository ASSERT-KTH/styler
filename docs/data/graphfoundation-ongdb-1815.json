{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1815",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1815/StoreChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1815/StoreChannel.java\nindex d9a3d2d2ae5..ef1ac087c3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1815/StoreChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1815/StoreChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.fs;\n \n import java.io.Flushable;\n@@ -30,49 +31,50 @@ import java.nio.channels.ScatteringByteChannel;\n import java.nio.channels.SeekableByteChannel;\n \n public interface StoreChannel\n-        extends Flushable, SeekableByteChannel, GatheringByteChannel, ScatteringByteChannel, InterruptibleChannel\n+    extends Flushable, SeekableByteChannel, GatheringByteChannel, ScatteringByteChannel, InterruptibleChannel\n {\n-    /**\n-     * Attempts to acquire an exclusive lock on this channel's file.\n-     * @return A lock object representing the newly-acquired lock, or null if the lock could not be acquired.\n-     * @throws IOException If an I/O error occurs.\n-     * @throws java.nio.channels.ClosedChannelException if the channel is closed.\n-     */\n-    FileLock tryLock() throws IOException;\n+  /**\n+   * Attempts to acquire an exclusive lock on this channel's file.\n+   *\n+   * @return A lock object representing the newly-acquired lock, or null if the lock could not be acquired.\n+   * @throws IOException                              If an I/O error occurs.\n+   * @throws java.nio.channels.ClosedChannelException if the channel is closed.\n+   */\n+  FileLock tryLock() throws IOException;\n \n-    /**\n-     * Same as #write(), except this method will write the full contents of the buffer in chunks if the OS fails to\n-     * write it all at once.\n-     */\n-    void writeAll( ByteBuffer src, long position ) throws IOException;\n+  /**\n+   * Same as #write(), except this method will write the full contents of the buffer in chunks if the OS fails to\n+   * write it all at once.\n+   */\n+  void writeAll(ByteBuffer src, long position) throws IOException;\n \n-    /**\n-     * Same as #write(), except this method will write the full contents of the buffer in chunks if the OS fails to\n-     * write it all at once.\n-     */\n-    void writeAll( ByteBuffer src ) throws IOException;\n+  /**\n+   * Same as #write(), except this method will write the full contents of the buffer in chunks if the OS fails to\n+   * write it all at once.\n+   */\n+  void writeAll(ByteBuffer src) throws IOException;\n \n-    /**\n-     * @see java.nio.channels.FileChannel#read(java.nio.ByteBuffer, long)\n-     */\n-    int read( ByteBuffer dst, long position ) throws IOException;\n+  /**\n+   * @see java.nio.channels.FileChannel#read(java.nio.ByteBuffer, long)\n+   */\n+  int read(ByteBuffer dst, long position) throws IOException;\n \n-    /**\n-     * Try to Read a sequence of bytes from channel into the given buffer, till the buffer will be full.\n-     * In case if end of channel will be reached during reading {@link IllegalStateException} will be thrown.\n-     *\n-     * @param dst destination buffer.\n-     * @throws IOException if an I/O exception occurs.\n-     * @throws IllegalStateException if end of stream reached during reading.\n-     * @see ReadableByteChannel#read(ByteBuffer)\n-     */\n-    void readAll( ByteBuffer dst ) throws IOException;\n+  /**\n+   * Try to Read a sequence of bytes from channel into the given buffer, till the buffer will be full.\n+   * In case if end of channel will be reached during reading {@link IllegalStateException} will be thrown.\n+   *\n+   * @param dst destination buffer.\n+   * @throws IOException           if an I/O exception occurs.\n+   * @throws IllegalStateException if end of stream reached during reading.\n+   * @see ReadableByteChannel#read(ByteBuffer)\n+   */\n+  void readAll(ByteBuffer dst) throws IOException;\n \n-    void force( boolean metaData ) throws IOException;\n+  void force(boolean metaData) throws IOException;\n \n-    @Override\n-    StoreChannel position( long newPosition ) throws IOException;\n+  @Override\n+  StoreChannel position(long newPosition) throws IOException;\n \n-    @Override\n-    StoreChannel truncate( long size ) throws IOException;\n+  @Override\n+  StoreChannel truncate(long size) throws IOException;\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1815/StoreChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1815/StoreChannel.java\nindex d9a3d2d2ae5..fb130406347 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1815/StoreChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1815/StoreChannel.java\n@@ -29,8 +29,7 @@ import java.nio.channels.ReadableByteChannel;\n import java.nio.channels.ScatteringByteChannel;\n import java.nio.channels.SeekableByteChannel;\n \n-public interface StoreChannel\n-        extends Flushable, SeekableByteChannel, GatheringByteChannel, ScatteringByteChannel, InterruptibleChannel\n+public interface StoreChannel extends Flushable, SeekableByteChannel, GatheringByteChannel, ScatteringByteChannel, InterruptibleChannel\n {\n     /**\n      * Attempts to acquire an exclusive lock on this channel's file.\n@@ -75,4 +74,4 @@ public interface StoreChannel\n \n     @Override\n     StoreChannel truncate( long size ) throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1815/StoreChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1815/StoreChannel.java\nindex d9a3d2d2ae5..bc6bece1679 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1815/StoreChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1815/StoreChannel.java\n@@ -29,8 +29,7 @@ import java.nio.channels.ReadableByteChannel;\n import java.nio.channels.ScatteringByteChannel;\n import java.nio.channels.SeekableByteChannel;\n \n-public interface StoreChannel\n-        extends Flushable, SeekableByteChannel, GatheringByteChannel, ScatteringByteChannel, InterruptibleChannel\n+public interface StoreChannel extends Flushable, SeekableByteChannel, GatheringByteChannel, ScatteringByteChannel, InterruptibleChannel\n {\n     /**\n      * Attempts to acquire an exclusive lock on this channel's file.\n@@ -38,24 +37,24 @@ public interface StoreChannel\n      * @throws IOException If an I/O error occurs.\n      * @throws java.nio.channels.ClosedChannelException if the channel is closed.\n      */\n-    FileLock tryLock() throws IOException;\n+    FileLock tryLock() throws IOException ;\n \n     /**\n      * Same as #write(), except this method will write the full contents of the buffer in chunks if the OS fails to\n      * write it all at once.\n      */\n-    void writeAll( ByteBuffer src, long position ) throws IOException;\n+    void writeAll( ByteBuffer src, long position ) throws IOException ;\n \n     /**\n      * Same as #write(), except this method will write the full contents of the buffer in chunks if the OS fails to\n      * write it all at once.\n      */\n-    void writeAll( ByteBuffer src ) throws IOException;\n+    void writeAll( ByteBuffer src ) throws IOException ;\n \n     /**\n      * @see java.nio.channels.FileChannel#read(java.nio.ByteBuffer, long)\n      */\n-    int read( ByteBuffer dst, long position ) throws IOException;\n+    int read( ByteBuffer dst, long position ) throws IOException ;\n \n     /**\n      * Try to Read a sequence of bytes from channel into the given buffer, till the buffer will be full.\n@@ -66,13 +65,8 @@ public interface StoreChannel\n      * @throws IllegalStateException if end of stream reached during reading.\n      * @see ReadableByteChannel#read(ByteBuffer)\n      */\n-    void readAll( ByteBuffer dst ) throws IOException;\n-\n-    void force( boolean metaData ) throws IOException;\n-\n-    @Override\n-    StoreChannel position( long newPosition ) throws IOException;\n-\n-    @Override\n-    StoreChannel truncate( long size ) throws IOException;\n-}\n+    void readAll( ByteBuffer dst ) throws IOException ;\n+    void force( boolean metaData ) throws IOException ;\n+    @Override StoreChannel position( long newPosition ) throws IOException ;\n+    @Override StoreChannel truncate( long size ) throws IOException ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
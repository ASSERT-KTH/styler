{
    "project_name": "neuhalje-bouncy-gpg",
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n\nimport static java.util.Objects.requireNonNull;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/16/KeyFlag.java\nindex 1003612b110..35ae2c977fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/16/KeyFlag.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/16/KeyFlag.java\nindex 1003612b110..cdf35da1631 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/16/KeyFlag.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n@@ -45,7 +46,7 @@ import org.bouncycastle.openpgp.PGPSignatureSubpacketVector;\n  * decision is left wholly up to the implementation; the authors of this\n  * document do not claim any special wisdom on the issue and realize\n  * that accepted opinion may change.\n- *\n+ * <p>\n  * The \"split key\" (0x10) and \"group key\" (0x80) flags are placed on a\n  * self-signature only; they are meaningless on a certification\n  * signature.  They SHOULD be placed only on a direct-key signature\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/16/KeyFlag.java\nindex 1003612b110..a5dba3ec7a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/16/KeyFlag.java\n@@ -113,4 +113,4 @@ public enum KeyFlag {\n     }\n     return fromInteger(aggregatedKeyFlags);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "84",
                    "column": "19",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "column": "48",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'\"PMD.LawOfDemeter\"' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/16/KeyFlag.java\nindex 1003612b110..f7e47c2df74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/16/KeyFlag.java\n@@ -16,7 +16,6 @@\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n-\n import java.util.EnumSet;\n import java.util.Iterator;\n import java.util.Set;\n@@ -55,8 +54,11 @@ import org.bouncycastle.openpgp.PGPSignatureSubpacketVector;\n  *\n  * @see KeyFlags\n  */\n+\n+\n public enum KeyFlag {\n \n+\n   CERTIFY_OTHER(KeyFlags.CERTIFY_OTHER),\n   SIGN_DATA(KeyFlags.SIGN_DATA),\n   ENCRYPT_COMMS(KeyFlags.ENCRYPT_COMMS),\n@@ -66,27 +68,28 @@ public enum KeyFlag {\n   SHARED(KeyFlags.SHARED),\n   ;\n \n+\n   private final int flag;\n \n   KeyFlag(int flag) {\n     this.flag = flag;\n   }\n \n+\n   public static Set<KeyFlag> fromInteger(int bitmask) {\n     final Set<KeyFlag> flags = EnumSet.noneOf(KeyFlag.class);\n     int identifiedFlags = 0;\n \n     for (final KeyFlag f : KeyFlag.values()) {\n-      if ((bitmask & f.flag) != 0) {\n+      if ((bitmask& f.flag) != 0) {\n         flags.add(f);\n         identifiedFlags |= f.flag;\n       }\n     }\n-\n     if (identifiedFlags != bitmask) {\n-      final int unknownFlags = ~identifiedFlags & bitmask;\n-      throw new IllegalArgumentException(\n-          \"Could not identify the following KeyFlags: 0b\" + Long.toBinaryString(unknownFlags));\n+      final int unknownFlags = ~identifiedFlags& bitmask;\n+\n+      throw new IllegalArgumentException(\"Could not identify the following KeyFlags: 0b\" + Long.toBinaryString(unknownFlags));\n     }\n     return flags;\n   }\n@@ -95,22 +98,23 @@ public enum KeyFlag {\n     return flag;\n   }\n \n-\n-  @SuppressWarnings({\"PMD.LawOfDemeter\"})\n+  @SuppressWarnings({\n+    \"PMD.LawOfDemeter\"})\n   public static Set<KeyFlag> extractPublicKeyFlags(PGPPublicKey publicKey) {\n     requireNonNull(publicKey, \"publicKey must not be null\");\n-\n     int aggregatedKeyFlags = 0;\n \n     final Iterator<PGPSignature> directKeySignatures = publicKey.getSignatures();\n \n     while (directKeySignatures.hasNext()) {\n       final PGPSignature signature = directKeySignatures.next();\n+\n       final PGPSignatureSubpacketVector hashedSubPackets = signature.getHashedSubPackets();\n \n       final int keyFlags = hashedSubPackets.getKeyFlags();\n+\n       aggregatedKeyFlags |= keyFlags;\n     }\n     return fromInteger(aggregatedKeyFlags);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/16/KeyFlag.java\nindex 1003612b110..35ae2c977fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/16/KeyFlag.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'bouncycastle' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/16/KeyFlag.java\nindex 1003612b110..5764cf2888c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/16/KeyFlag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/16/KeyFlag.java\n@@ -13,7 +13,9 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n+\n+package name.neuhalfen.projects.crypto.\n+bouncycastle.openpgp.keys.generation;\n \n import static java.util.Objects.requireNonNull;\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1490",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1490/FailedIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1490/FailedIndexProxy.java\nindex 6d581974695..5e4992e7f48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1490/FailedIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1490/FailedIndexProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.io.File;\n@@ -34,72 +35,72 @@ import static org.neo4j.helpers.collection.Iterators.emptyResourceIterator;\n \n public class FailedIndexProxy extends AbstractSwallowingIndexProxy\n {\n-    protected final IndexPopulator populator;\n-    private final String indexUserDescription;\n-    private final IndexCountsRemover indexCountsRemover;\n-    private final Log log;\n+  protected final IndexPopulator populator;\n+  private final String indexUserDescription;\n+  private final IndexCountsRemover indexCountsRemover;\n+  private final Log log;\n \n-    FailedIndexProxy( IndexMeta indexMeta,\n-            String indexUserDescription,\n-            IndexPopulator populator,\n-            IndexPopulationFailure populationFailure,\n-            IndexCountsRemover indexCountsRemover,\n-            LogProvider logProvider )\n-    {\n-        super( indexMeta, populationFailure );\n-        this.populator = populator;\n-        this.indexUserDescription = indexUserDescription;\n-        this.indexCountsRemover = indexCountsRemover;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  FailedIndexProxy(IndexMeta indexMeta,\n+                   String indexUserDescription,\n+                   IndexPopulator populator,\n+                   IndexPopulationFailure populationFailure,\n+                   IndexCountsRemover indexCountsRemover,\n+                   LogProvider logProvider)\n+  {\n+    super(indexMeta, populationFailure);\n+    this.populator = populator;\n+    this.indexUserDescription = indexUserDescription;\n+    this.indexCountsRemover = indexCountsRemover;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    @Override\n-    public void drop() throws IOException\n-    {\n-        indexCountsRemover.remove();\n-        String message = \"FailedIndexProxy#drop index on \" + indexUserDescription + \" dropped due to:\\n\" +\n-                     getPopulationFailure().asString();\n-        log.info( message );\n-        populator.drop();\n-    }\n+  @Override\n+  public void drop() throws IOException\n+  {\n+    indexCountsRemover.remove();\n+    String message = \"FailedIndexProxy#drop index on \" + indexUserDescription + \" dropped due to:\\n\" +\n+        getPopulationFailure().asString();\n+    log.info(message);\n+    populator.drop();\n+  }\n \n-    @Override\n-    public InternalIndexState getState()\n-    {\n-        return InternalIndexState.FAILED;\n-    }\n+  @Override\n+  public InternalIndexState getState()\n+  {\n+    return InternalIndexState.FAILED;\n+  }\n \n-    @Override\n-    public boolean awaitStoreScanCompleted() throws IndexPopulationFailedKernelException\n-    {\n-        throw failureCause();\n-    }\n+  @Override\n+  public boolean awaitStoreScanCompleted() throws IndexPopulationFailedKernelException\n+  {\n+    throw failureCause();\n+  }\n \n-    private IndexPopulationFailedKernelException failureCause()\n-    {\n-        return getPopulationFailure().asIndexPopulationFailure( getDescriptor().schema(), indexUserDescription );\n-    }\n+  private IndexPopulationFailedKernelException failureCause()\n+  {\n+    return getPopulationFailure().asIndexPopulationFailure(getDescriptor().schema(), indexUserDescription);\n+  }\n \n-    @Override\n-    public void activate()\n-    {\n-        throw new UnsupportedOperationException( \"Cannot activate a failed index.\" );\n-    }\n+  @Override\n+  public void activate()\n+  {\n+    throw new UnsupportedOperationException(\"Cannot activate a failed index.\");\n+  }\n \n-    @Override\n-    public void validate() throws IndexPopulationFailedKernelException\n-    {\n-        throw failureCause();\n-    }\n+  @Override\n+  public void validate() throws IndexPopulationFailedKernelException\n+  {\n+    throw failureCause();\n+  }\n \n-    @Override\n-    public void validateBeforeCommit( Value[] tuple )\n-    {\n-    }\n+  @Override\n+  public void validateBeforeCommit(Value[] tuple)\n+  {\n+  }\n \n-    @Override\n-    public ResourceIterator<File> snapshotFiles()\n-    {\n-        return emptyResourceIterator();\n-    }\n+  @Override\n+  public ResourceIterator<File> snapshotFiles()\n+  {\n+    return emptyResourceIterator();\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1490/FailedIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1490/FailedIndexProxy.java\nindex 6d581974695..35e335aaf48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1490/FailedIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1490/FailedIndexProxy.java\n@@ -57,9 +57,8 @@ public class FailedIndexProxy extends AbstractSwallowingIndexProxy\n     public void drop() throws IOException\n     {\n         indexCountsRemover.remove();\n-        String message = \"FailedIndexProxy#drop index on \" + indexUserDescription + \" dropped due to:\\n\" +\n-                     getPopulationFailure().asString();\n-        log.info( message );\n+        String message = \"FailedIndexProxy#drop index on \" + indexUserDescription + \" dropped due to:\\n\" + getPopulationFailure().asString();\n+log.info( message );\n         populator.drop();\n     }\n \n@@ -102,4 +101,4 @@ public class FailedIndexProxy extends AbstractSwallowingIndexProxy\n     {\n         return emptyResourceIterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1315",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1315/HighlyAvailableGraphDatabaseFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1315/HighlyAvailableGraphDatabaseFactory.java\nindex 6e9a4e84311..ccefdc8028f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1315/HighlyAvailableGraphDatabaseFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1315/HighlyAvailableGraphDatabaseFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.factory;\n \n import java.io.File;\n@@ -39,42 +40,42 @@ import static java.util.Arrays.asList;\n  */\n public class HighlyAvailableGraphDatabaseFactory extends GraphDatabaseFactory\n {\n-    public HighlyAvailableGraphDatabaseFactory()\n-    {\n-        super( highlyAvailableFactoryState() );\n-    }\n+  public HighlyAvailableGraphDatabaseFactory()\n+  {\n+    super(highlyAvailableFactoryState());\n+  }\n \n-    private static GraphDatabaseFactoryState highlyAvailableFactoryState()\n-    {\n-        GraphDatabaseFactoryState state = new GraphDatabaseFactoryState();\n-        state.addSettingsClasses( asList( ClusterSettings.class, HaSettings.class ) );\n-        return state;\n-    }\n+  private static GraphDatabaseFactoryState highlyAvailableFactoryState()\n+  {\n+    GraphDatabaseFactoryState state = new GraphDatabaseFactoryState();\n+    state.addSettingsClasses(asList(ClusterSettings.class, HaSettings.class));\n+    return state;\n+  }\n \n-    @Override\n-    protected GraphDatabaseBuilder.DatabaseCreator createDatabaseCreator(\n-            final File storeDir, final GraphDatabaseFactoryState state )\n+  @Override\n+  protected GraphDatabaseBuilder.DatabaseCreator createDatabaseCreator(\n+      final File storeDir, final GraphDatabaseFactoryState state)\n+  {\n+    return new GraphDatabaseBuilder.DatabaseCreator()\n     {\n-        return new GraphDatabaseBuilder.DatabaseCreator()\n-        {\n-            @Override\n-            public GraphDatabaseService newDatabase( Map<String,String> config )\n-            {\n-                return newDatabase( Config.defaults( config ) );\n-            }\n+      @Override\n+      public GraphDatabaseService newDatabase(Map<String, String> config)\n+      {\n+        return newDatabase(Config.defaults(config));\n+      }\n \n-            @Override\n-            public GraphDatabaseService newDatabase( Config config )\n-            {\n-                config.augment( GraphDatabaseFacadeFactory.Configuration.ephemeral, \"false\" );\n-                return new HighlyAvailableGraphDatabase( storeDir, config, state.databaseDependencies() );\n-            }\n-        };\n-    }\n+      @Override\n+      public GraphDatabaseService newDatabase(Config config)\n+      {\n+        config.augment(GraphDatabaseFacadeFactory.Configuration.ephemeral, \"false\");\n+        return new HighlyAvailableGraphDatabase(storeDir, config, state.databaseDependencies());\n+      }\n+    };\n+  }\n \n-    @Override\n-    public String getEdition()\n-    {\n-        return Edition.enterprise.toString();\n-    }\n+  @Override\n+  public String getEdition()\n+  {\n+    return Edition.enterprise.toString();\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1315/HighlyAvailableGraphDatabaseFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1315/HighlyAvailableGraphDatabaseFactory.java\nindex 6e9a4e84311..f6a7d5195a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1315/HighlyAvailableGraphDatabaseFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1315/HighlyAvailableGraphDatabaseFactory.java\n@@ -52,8 +52,7 @@ public class HighlyAvailableGraphDatabaseFactory extends GraphDatabaseFactory\n     }\n \n     @Override\n-    protected GraphDatabaseBuilder.DatabaseCreator createDatabaseCreator(\n-            final File storeDir, final GraphDatabaseFactoryState state )\n+    protected GraphDatabaseBuilder.DatabaseCreator createDatabaseCreator( final File storeDir, final GraphDatabaseFactoryState state )\n     {\n         return new GraphDatabaseBuilder.DatabaseCreator()\n         {\n@@ -77,4 +76,4 @@ public class HighlyAvailableGraphDatabaseFactory extends GraphDatabaseFactory\n     {\n         return Edition.enterprise.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
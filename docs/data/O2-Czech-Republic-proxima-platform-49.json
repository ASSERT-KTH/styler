{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "49",
    "information": {
        "errors": [
            {
                "line": "55",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    ModelGenerator generator =\n        new ModelGenerator(\n            javaPackage, className, new File(config), new File(targetOutputDir.getAbsolutePath()));\n\n    try {\n      generator.generate();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/49/CompileMojo.java\nindex 7006f6d6651..97bf289e654 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/49/CompileMojo.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.maven;\n \n import cz.o2.proxima.generator.ModelGenerator;\n@@ -29,13 +30,17 @@ import org.apache.maven.project.MavenProject;\n @Mojo(name = \"compile\", defaultPhase = LifecyclePhase.GENERATE_SOURCES)\n public class CompileMojo extends AbstractMojo {\n \n-  @Parameter private String outputDir;\n+  @Parameter\n+  private String outputDir;\n \n-  @Parameter private String config;\n+  @Parameter\n+  private String config;\n \n-  @Parameter private String javaPackage;\n+  @Parameter\n+  private String javaPackage;\n \n-  @Parameter private String className = \"Model\";\n+  @Parameter\n+  private String className = \"Model\";\n \n   @Parameter(defaultValue = \"${project}\")\n   private MavenProject project;\n@@ -52,7 +57,8 @@ public class CompileMojo extends AbstractMojo {\n \n     ModelGenerator generator =\n         new ModelGenerator(\n-            javaPackage, className, new File(config), new File(targetOutputDir.getAbsolutePath()));\n+            javaPackage, className, new File(config),\n+            new File(targetOutputDir.getAbsolutePath()));\n \n     try {\n       generator.generate();\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/49/CompileMojo.java\nindex 7006f6d6651..2702d180741 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/49/CompileMojo.java\n@@ -53,8 +53,7 @@ public class CompileMojo extends AbstractMojo {\n     ModelGenerator generator =\n         new ModelGenerator(\n             javaPackage, className, new File(config), new File(targetOutputDir.getAbsolutePath()));\n-\n-    try {\n+try {\n       generator.generate();\n       project.addCompileSourceRoot(targetOutputDir.getCanonicalPath());\n     } catch (Exception ex) {\n@@ -64,8 +63,7 @@ public class CompileMojo extends AbstractMojo {\n \n   private void validate() throws MojoFailureException {\n     if (outputDir == null || config == null || javaPackage == null) {\n-      throw new MojoFailureException(\n-          \"Missing required parameter `outputDir', \" + \"`config' or `javaPackage'\");\n+      throw new MojoFailureException(\"Missing required parameter `outputDir', \" + \"`config' or `javaPackage'\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "column": "13",
                    "severity": "error",
                    "message": "WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "42",
                    "column": "28",
                    "severity": "error",
                    "message": "WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "column": "26",
                    "severity": "error",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/49/CompileMojo.java\nindex 7006f6d6651..23920045772 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/49/CompileMojo.java\n@@ -26,7 +26,9 @@ import org.apache.maven.plugins.annotations.Parameter;\n import org.apache.maven.project.MavenProject;\n \n /** A MOJO for compiling config file to java classes. */\n-@Mojo(name = \"compile\", defaultPhase = LifecyclePhase.GENERATE_SOURCES)\n+\n+\n+@Mojo(name =\"compile\", defaultPhase = LifecyclePhase.GENERATE_SOURCES)\n public class CompileMojo extends AbstractMojo {\n \n   @Parameter private String outputDir;\n@@ -37,23 +39,16 @@ public class CompileMojo extends AbstractMojo {\n \n   @Parameter private String className = \"Model\";\n \n-  @Parameter(defaultValue = \"${project}\")\n-  private MavenProject project;\n+  @Parameter(defaultValue =\"${project}\") private MavenProject project;\n \n   @Override\n   public void execute() throws MojoExecutionException, MojoFailureException {\n-\n     validate();\n-\n     File targetOutputDir = new File(outputDir);\n     if (!targetOutputDir.isAbsolute()) {\n       targetOutputDir = new File(new File(project.getBasedir(), \"target\"), outputDir);\n     }\n-\n-    ModelGenerator generator =\n-        new ModelGenerator(\n-            javaPackage, className, new File(config), new File(targetOutputDir.getAbsolutePath()));\n-\n+    ModelGenerator generator = new ModelGenerator(javaPackage, className, new File(config), new File(targetOutputDir.getAbsolutePath()));\n     try {\n       generator.generate();\n       project.addCompileSourceRoot(targetOutputDir.getCanonicalPath());\n@@ -63,9 +58,8 @@ public class CompileMojo extends AbstractMojo {\n   }\n \n   private void validate() throws MojoFailureException {\n-    if (outputDir == null || config == null || javaPackage == null) {\n-      throw new MojoFailureException(\n-          \"Missing required parameter `outputDir', \" + \"`config' or `javaPackage'\");\n+    if (outputDir == null|| config == null|| javaPackage == null) {\n+      throw new MojoFailureException(\"Missing required parameter `outputDir', \" + \"`config' or `javaPackage'\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/49/CompileMojo.java\nindex 7006f6d6651..87ab1bb11ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/49/CompileMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/49/CompileMojo.java\n@@ -52,9 +52,11 @@ public class CompileMojo extends AbstractMojo {\n \n     ModelGenerator generator =\n         new ModelGenerator(\n-            javaPackage, className, new File(config), new File(targetOutputDir.getAbsolutePath()));\n+            javaPackage,\n+            className, new File(config),\n+            new File(targetOutputDir.getAbsolutePath()));\n \n-    try {\n+      try {\n       generator.generate();\n       project.addCompileSourceRoot(targetOutputDir.getCanonicalPath());\n     } catch (Exception ex) {\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
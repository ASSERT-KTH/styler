{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "180",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 385).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    Assert.assertEquals(\n        \"{\\\"content\\\":[\\\"c1\\\",\\\"c2\\\"],\\\"pageable\\\":{\\\"offset\\\":2,\\\"pageNumber\\\":1,\\\"pageSize\\\":2,\\\"paged\\\":true,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"unpaged\\\":false},\\\"empty\\\":false,\\\"first\\\":false,\\\"last\\\":true,\\\"number\\\":1,\\\"numberOfElements\\\":2,\\\"size\\\":2,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"totalElements\\\":4,\\\"totalPages\\\":2}\",\n        Json.mapper().writeValueAsString(page));\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 385).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 385).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/180/TestPageResponseTypeProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/180/TestPageResponseTypeProcessor.java\nindex db517f57536..fa78115416a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/180/TestPageResponseTypeProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/180/TestPageResponseTypeProcessor.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.swagger.generator.springdata;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 385).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/180/TestPageResponseTypeProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/180/TestPageResponseTypeProcessor.java\nindex db517f57536..3f4c7a1b3cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/180/TestPageResponseTypeProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/180/TestPageResponseTypeProcessor.java\n@@ -46,4 +46,4 @@ public class TestPageResponseTypeProcessor {\n         \"{\\\"content\\\":[\\\"c1\\\",\\\"c2\\\"],\\\"pageable\\\":{\\\"offset\\\":2,\\\"pageNumber\\\":1,\\\"pageSize\\\":2,\\\"paged\\\":true,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"unpaged\\\":false},\\\"empty\\\":false,\\\"first\\\":false,\\\"last\\\":true,\\\"number\\\":1,\\\"numberOfElements\\\":2,\\\"size\\\":2,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"totalElements\\\":4,\\\"totalPages\\\":2}\",\n         Json.mapper().writeValueAsString(page));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 385).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 424).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "column": "381",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/180/TestPageResponseTypeProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/180/TestPageResponseTypeProcessor.java\nindex db517f57536..f718610c8a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/180/TestPageResponseTypeProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/180/TestPageResponseTypeProcessor.java\n@@ -43,7 +43,7 @@ public class TestPageResponseTypeProcessor {\n     Page<?> page = Json.mapper().readValue(json, Page.class);\n \n     Assert.assertEquals(\n-        \"{\\\"content\\\":[\\\"c1\\\",\\\"c2\\\"],\\\"pageable\\\":{\\\"offset\\\":2,\\\"pageNumber\\\":1,\\\"pageSize\\\":2,\\\"paged\\\":true,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"unpaged\\\":false},\\\"empty\\\":false,\\\"first\\\":false,\\\"last\\\":true,\\\"number\\\":1,\\\"numberOfElements\\\":2,\\\"size\\\":2,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"totalElements\\\":4,\\\"totalPages\\\":2}\",\n-        Json.mapper().writeValueAsString(page));\n+\n+    \"{\\\"content\\\":[\\\"c1\\\",\\\"c2\\\"],\\\"pageable\\\":{\\\"offset\\\":2,\\\"pageNumber\\\":1,\\\"pageSize\\\":2,\\\"paged\\\":true,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"unpaged\\\":false},\\\"empty\\\":false,\\\"first\\\":false,\\\"last\\\":true,\\\"number\\\":1,\\\"numberOfElements\\\":2,\\\"size\\\":2,\\\"sort\\\":{\\\"empty\\\":true,\\\"sorted\\\":false,\\\"unsorted\\\":true},\\\"totalElements\\\":4,\\\"totalPages\\\":2}\" , Json .mapper().writeValueAsString(page));\n   }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
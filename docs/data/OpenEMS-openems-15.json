{
    "project_name": "OpenEMS-openems",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "98",
                "column": "44",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "\t@Override\n\tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n\t\treturn new ModbusSlaveTable( //\n\t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n\t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n\t\t);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/15/VirtualSubtractMeter.java\nindex f8be08bb65b..1ffee4d1146 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/15/VirtualSubtractMeter.java\n@@ -95,7 +95,7 @@ public class VirtualSubtractMeter extends AbstractOpenemsComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "98",
                    "column": "32",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/15/VirtualSubtractMeter.java\nindex f8be08bb65b..1bbf2ad8f7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/15/VirtualSubtractMeter.java\n@@ -26,79 +26,79 @@ import io.openems.edge.meter.api.VirtualMeter;\n \n @Designate(ocd = Config.class, factory = true)\n @Component(name = \"Meter.Virtual.Symmetric.Subtract\", //\n-\t\timmediate = true, //\n-\t\tconfigurationPolicy = ConfigurationPolicy.REQUIRE //\n+    immediate = true, //\n+    configurationPolicy = ConfigurationPolicy.REQUIRE //\n ) //\n public class VirtualSubtractMeter extends AbstractOpenemsComponent\n-\t\timplements VirtualMeter, SymmetricMeter, OpenemsComponent, ModbusSlave {\n-\n-\tprivate final ChannelManager channelManager = new ChannelManager(this);\n-\n-\t@Reference\n-\tprotected ConfigurationAdmin cm;\n-\n-\t@Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MANDATORY)\n-\tprivate OpenemsComponent minuend;\n-\n-\t@Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MULTIPLE)\n-\tprivate List<OpenemsComponent> subtrahends;\n-\n-\tprivate Config config;\n-\n-\tpublic VirtualSubtractMeter() {\n-\t\tsuper(//\n-\t\t\t\tOpenemsComponent.ChannelId.values(), //\n-\t\t\t\tSymmetricMeter.ChannelId.values() //\n-\t\t);\n-\t}\n-\n-\t@Activate\n-\tvoid activate(ComponentContext context, Config config) throws OpenemsNamedException {\n-\t\tsuper.activate(context, config.id(), config.alias(), config.enabled());\n-\t\tthis.config = config;\n-\n-\t\t// update filter for 'minuend'\n-\t\tif (OpenemsComponent.updateReferenceFilter(this.cm, this.servicePid(), \"minuend\", config.minuend_id())) {\n-\t\t\treturn;\n-\t\t}\n-\n-\t\t// update filter for 'subtrahends'\n-\t\tif (OpenemsComponent.updateReferenceFilter(this.cm, this.servicePid(), \"subtrahends\",\n-\t\t\t\tconfig.subtrahends_ids())) {\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tthis.channelManager.activate(this.minuend, this.subtrahends);\n-\t}\n-\n-\t@Deactivate\n-\tprotected void deactivate() {\n-\t\tthis.channelManager.deactivate();\n-\n-\t\tsuper.deactivate();\n-\t}\n-\n-\t@Override\n-\tpublic MeterType getMeterType() {\n-\t\treturn this.config.type();\n-\t}\n-\n-\t@Override\n-\tpublic String debugLog() {\n-\t\treturn \"L:\" + this.getActivePower().asString();\n-\t}\n-\n-\t@Override\n-\tpublic boolean addToSum() {\n-\t\treturn this.config.addToSum();\n-\t}\n-\n-\t@Override\n-\tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n-\t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n-\t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n-\t\t);\n-\t}\n+    implements VirtualMeter, SymmetricMeter, OpenemsComponent, ModbusSlave {\n+\n+  private final ChannelManager channelManager = new ChannelManager(this);\n+\n+  @Reference\n+  protected ConfigurationAdmin cm;\n+\n+  @Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MANDATORY)\n+  private OpenemsComponent minuend;\n+\n+  @Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MULTIPLE)\n+  private List<OpenemsComponent> subtrahends;\n+\n+  private Config config;\n+\n+  public VirtualSubtractMeter() {\n+    super(//\n+        OpenemsComponent.ChannelId.values(), //\n+        SymmetricMeter.ChannelId.values() //\n+    );\n+  }\n+\n+  @Activate\n+  void activate(ComponentContext context, Config config) throws OpenemsNamedException {\n+    super.activate(context, config.id(), config.alias(), config.enabled());\n+    this.config = config;\n+\n+    // update filter for 'minuend'\n+    if (OpenemsComponent.updateReferenceFilter(this.cm, this.servicePid(), \"minuend\", config.minuend_id())) {\n+      return;\n+    }\n+\n+    // update filter for 'subtrahends'\n+    if (OpenemsComponent.updateReferenceFilter(this.cm, this.servicePid(), \"subtrahends\",\n+        config.subtrahends_ids())) {\n+      return;\n+    }\n+\n+    this.channelManager.activate(this.minuend, this.subtrahends);\n+  }\n+\n+  @Deactivate\n+  protected void deactivate() {\n+    this.channelManager.deactivate();\n+\n+    super.deactivate();\n+  }\n+\n+  @Override\n+  public MeterType getMeterType() {\n+    return this.config.type();\n+  }\n+\n+  @Override\n+  public String debugLog() {\n+    return \"L:\" + this.getActivePower().asString();\n+  }\n+\n+  @Override\n+  public boolean addToSum() {\n+    return this.config.addToSum();\n+  }\n+\n+  @Override\n+  public ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n+    return new ModbusSlaveTable( //\n+        OpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n+        SymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n+    );\n+  }\n \n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/naturalize/15/VirtualSubtractMeter.java\nindex f8be08bb65b..71a9016debd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/naturalize/15/VirtualSubtractMeter.java\n@@ -95,10 +95,10 @@ public class VirtualSubtractMeter extends AbstractOpenemsComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/15/VirtualSubtractMeter.java\nindex f8be08bb65b..1ffee4d1146 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/15/VirtualSubtractMeter.java\n@@ -95,7 +95,7 @@ public class VirtualSubtractMeter extends AbstractOpenemsComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/15/VirtualSubtractMeter.java\nindex f8be08bb65b..1ffee4d1146 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/15/VirtualSubtractMeter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/15/VirtualSubtractMeter.java\n@@ -95,7 +95,7 @@ public class VirtualSubtractMeter extends AbstractOpenemsComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
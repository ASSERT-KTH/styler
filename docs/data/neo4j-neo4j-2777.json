{
    "project_name": "neo4j-neo4j",
    "error_id": "2777",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2777/HasLabelSubscriber.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2777/HasLabelSubscriber.java\nindex bd09257e4c0..2928ddb2fdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2777/HasLabelSubscriber.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2777/HasLabelSubscriber.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.neo4j.io.pagecache.tracing.cursor.PageCursorTracer;\n@@ -37,7 +38,7 @@ class HasLabelSubscriber implements RecordSubscriber<DynamicRecord>\n     private final DynamicArrayStore labelStore;\n     private final PageCursorTracer cursorTracer;\n \n-    HasLabelSubscriber( int label, DynamicArrayStore labelStore, PageCursorTracer cursorTracer )\n+    HasLabelSubscriber(int label, DynamicArrayStore labelStore, PageCursorTracer cursorTracer)\n     {\n         this.label = label;\n         this.labelStore = labelStore;\n@@ -50,71 +51,69 @@ class HasLabelSubscriber implements RecordSubscriber<DynamicRecord>\n     }\n \n     @Override\n-    public boolean onRecord( DynamicRecord record )\n+    public boolean onRecord(DynamicRecord record)\n     {\n-        if ( !record.inUse() )\n+        if (!record.inUse())\n         {\n             return true;\n         }\n-        labelStore.ensureHeavy( record, cursorTracer );\n+        labelStore.ensureHeavy(record, cursorTracer);\n \n-        if ( firstRecord )\n+        if (firstRecord)\n         {\n             firstRecord = false;\n-            return processFirstRecord( record.getData() );\n-        }\n-        else\n+            return processFirstRecord(record.getData());\n+        } else\n         {\n-            return processRecord( record.getData() );\n+            return processRecord(record.getData());\n         }\n     }\n \n-    private boolean processFirstRecord( byte[] data )\n+    private boolean processFirstRecord(byte[] data)\n     {\n-        assert ShortArray.typeOf( data[0] ) == ShortArray.LONG;\n+        assert ShortArray.typeOf(data[0]) == ShortArray.LONG;\n         requiredBits = data[2];\n-        bits = Bits.bitsFromBytes( data, 3 );\n+        bits = Bits.bitsFromBytes(data, 3);\n         int totalNumberOfBits = (data.length - 3) * 8;\n         int numberOfCompleteLabels = totalNumberOfBits / requiredBits;\n         remainingBits = totalNumberOfBits - numberOfCompleteLabels * requiredBits;\n-        return findLabel( (data.length - 3) * 8 / requiredBits, true );\n+        return findLabel((data.length - 3) * 8 / requiredBits, true);\n     }\n \n-    private boolean processRecord( byte[] data )\n+    private boolean processRecord(byte[] data)\n     {\n         int totalNumberOfBits = remainingBits + (data.length) * 8;\n         int numberOfCompleteLabels = totalNumberOfBits / requiredBits;\n-        computeBits( data, totalNumberOfBits, numberOfCompleteLabels );\n-        return findLabel( numberOfCompleteLabels, false );\n+        computeBits(data, totalNumberOfBits, numberOfCompleteLabels);\n+        return findLabel(numberOfCompleteLabels, false);\n     }\n \n-    private void computeBits( byte[] data, int totalNumberOfBits, int numberOfCompleteLabels )\n+    private void computeBits(byte[] data, int totalNumberOfBits, int numberOfCompleteLabels)\n     {\n-        if ( remainingBits > 0 )\n+        if (remainingBits > 0)\n         {\n-            Bits newBits = Bits.bits( (int) Math.ceil( (totalNumberOfBits + remainingBits) / 8.0 ) );\n-            newBits.put( bits.getLong( remainingBits ), remainingBits );\n-            newBits.put( data, 0, data.length );\n+            Bits newBits = Bits.bits((int) Math.ceil((totalNumberOfBits + remainingBits) / 8.0));\n+            newBits.put(bits.getLong(remainingBits), remainingBits);\n+            newBits.put(data, 0, data.length);\n             bits = newBits;\n-        }\n-        else\n+        } else\n         {\n-            bits = Bits.bitsFromBytes( data );\n+            bits = Bits.bitsFromBytes(data);\n         }\n         remainingBits = totalNumberOfBits - numberOfCompleteLabels * requiredBits;\n     }\n \n-    private boolean findLabel( int numberOfCompleteLabels, boolean skipFirst )\n+    private boolean findLabel(int numberOfCompleteLabels, boolean skipFirst)\n     {\n-        for ( int i = 0; i < numberOfCompleteLabels; i++ )\n+        for (int i = 0; i < numberOfCompleteLabels; i++)\n         {\n-            long foundLabel = bits.getLong( requiredBits );\n+            long foundLabel = bits.getLong(requiredBits);\n             //first item of the first record is the node id\n-            if ( skipFirst && i == 0 )\n+            if (skipFirst && i == 0)\n             {\n                 continue;\n             }\n-            if ( foundLabel == label )\n+            if (foundLabel == label)\n             {\n                 found = true;\n                 return false;\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
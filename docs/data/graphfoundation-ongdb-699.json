{
    "project_name": "graphfoundation-ongdb",
    "error_id": "699",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/699/ProtocolInstaller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/699/ProtocolInstaller.java\nindex ab9f35bee63..9c7843f7217 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/699/ProtocolInstaller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/699/ProtocolInstaller.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol;\n \n import io.netty.channel.Channel;\n@@ -29,50 +30,50 @@ import org.neo4j.causalclustering.protocol.Protocol.ApplicationProtocol;\n \n public interface ProtocolInstaller<O extends ProtocolInstaller.Orientation>\n {\n-    abstract class Factory<O extends ProtocolInstaller.Orientation, I extends ProtocolInstaller<O>>\n-    {\n-        private final ApplicationProtocol applicationProtocol;\n-        private final Function<List<ModifierProtocolInstaller<O>>,I> constructor;\n+  abstract class Factory<O extends ProtocolInstaller.Orientation, I extends ProtocolInstaller<O>>\n+  {\n+    private final ApplicationProtocol applicationProtocol;\n+    private final Function<List<ModifierProtocolInstaller<O>>, I> constructor;\n \n-        protected Factory( ApplicationProtocol applicationProtocol, Function<List<ModifierProtocolInstaller<O>>,I> constructor )\n-        {\n-            this.applicationProtocol = applicationProtocol;\n-            this.constructor = constructor;\n-        }\n+    protected Factory(ApplicationProtocol applicationProtocol, Function<List<ModifierProtocolInstaller<O>>, I> constructor)\n+    {\n+      this.applicationProtocol = applicationProtocol;\n+      this.constructor = constructor;\n+    }\n \n-        I create( List<ModifierProtocolInstaller<O>> modifiers )\n-        {\n-            return constructor.apply( modifiers );\n-        }\n+    I create(List<ModifierProtocolInstaller<O>> modifiers)\n+    {\n+      return constructor.apply(modifiers);\n+    }\n \n-        public ApplicationProtocol applicationProtocol()\n-        {\n-            return applicationProtocol;\n-        }\n+    public ApplicationProtocol applicationProtocol()\n+    {\n+      return applicationProtocol;\n     }\n+  }\n \n-    void install( Channel channel ) throws Exception;\n+  void install(Channel channel) throws Exception;\n \n-    /**\n-     * For testing\n-     */\n-    ApplicationProtocol applicationProtocol();\n+  /**\n+   * For testing\n+   */\n+  ApplicationProtocol applicationProtocol();\n \n-    /**\n-     * For testing\n-     */\n-    Collection<Collection<Protocol.ModifierProtocol>> modifiers();\n+  /**\n+   * For testing\n+   */\n+  Collection<Collection<Protocol.ModifierProtocol>> modifiers();\n \n-    interface Orientation\n+  interface Orientation\n+  {\n+    interface Server extends Orientation\n     {\n-        interface Server extends Orientation\n-        {\n-            String INBOUND = \"inbound\";\n-        }\n+      String INBOUND = \"inbound\";\n+    }\n \n-        interface Client extends Orientation\n-        {\n-            String OUTBOUND = \"outbound\";\n-        }\n+    interface Client extends Orientation\n+    {\n+      String OUTBOUND = \"outbound\";\n     }\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/699/ProtocolInstaller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/699/ProtocolInstaller.java\nindex ab9f35bee63..92e3d19fe76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/699/ProtocolInstaller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/699/ProtocolInstaller.java\n@@ -75,4 +75,4 @@ public interface ProtocolInstaller<O extends ProtocolInstaller.Orientation>\n             String OUTBOUND = \"outbound\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2574",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2574/Writer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2574/Writer.java\nindex 511dafa83d9..686cf8b9377 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2574/Writer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2574/Writer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.Closeable;\n@@ -27,45 +28,45 @@ import java.io.UncheckedIOException;\n  * into a {@link GBPTree}. After all modifications have taken place the writer must be {@link #close() closed},\n  * typically using try-with-resource clause.\n  *\n- * @param <KEY> type of keys\n+ * @param <KEY>   type of keys\n  * @param <VALUE> type of values\n  */\n-public interface Writer<KEY,VALUE> extends Closeable\n+public interface Writer<KEY, VALUE> extends Closeable\n {\n     /**\n      * Associate given {@code key} with given {@code value}.\n      * Any existing {@code value} associated with {@code key} will be overwritten.\n      *\n-     * @param key key to associate with value\n+     * @param key   key to associate with value\n      * @param value value to associate with key\n      * @throws UncheckedIOException on index access error.\n      */\n-    void put( KEY key, VALUE value );\n+    void put(KEY key, VALUE value);\n \n     /**\n      * If the {@code key} doesn't already exist in the index the {@code key} will be added and the {@code value}\n      * associated with it.\n      * If the {@code key} already exists then its existing {@code value} will be merged with the given {@code value}, using the {@link ValueMerger}.\n      *\n-     * @param key key for which to merge values.\n-     * @param value value to merge with currently associated value for the {@code key}.\n+     * @param key         key for which to merge values.\n+     * @param value       value to merge with currently associated value for the {@code key}.\n      * @param valueMerger {@link ValueMerger} to consult if key already exists.\n      * @throws UncheckedIOException on index access error.\n      * @see ValueMerger#merge(Object, Object, Object, Object)\n      */\n-    void merge( KEY key, VALUE value, ValueMerger<KEY,VALUE> valueMerger );\n+    void merge(KEY key, VALUE value, ValueMerger<KEY, VALUE> valueMerger);\n \n     /**\n      * If the {@code key} already exists then its existing {@code value} will be merged with the given {@code value}, using the {@link ValueMerger}.\n      * If the {@code key} doesn't exist then no changes will be made and {@code false} will be returned.\n      *\n-     * @param key key for which to merge values.\n-     * @param value value to merge with currently associated value for the {@code key}.\n+     * @param key         key for which to merge values.\n+     * @param value       value to merge with currently associated value for the {@code key}.\n      * @param valueMerger {@link ValueMerger} to consult if key already exists.\n      * @throws UncheckedIOException on index access error.\n      * @see ValueMerger#merge(Object, Object, Object, Object)\n      */\n-    void mergeIfExists( KEY key, VALUE value, ValueMerger<KEY,VALUE> valueMerger );\n+    void mergeIfExists(KEY key, VALUE value, ValueMerger<KEY, VALUE> valueMerger);\n \n     /**\n      * Removes a key, returning it's associated value, if found.\n@@ -74,5 +75,5 @@ public interface Writer<KEY,VALUE> extends Closeable\n      * @return value which was associated with the remove key, if found, otherwise {@code null}.\n      * @throws UncheckedIOException on index access error.\n      */\n-    VALUE remove( KEY key );\n+    VALUE remove(KEY key);\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2574/Writer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2574/Writer.java\nindex 511dafa83d9..489424b302c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2574/Writer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2574/Writer.java\n@@ -75,4 +75,4 @@ public interface Writer<KEY,VALUE> extends Closeable\n      * @throws UncheckedIOException on index access error.\n      */\n     VALUE remove( KEY key );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
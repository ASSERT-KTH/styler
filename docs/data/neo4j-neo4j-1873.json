{
    "project_name": "neo4j-neo4j",
    "error_id": "1873",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "122",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "147",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1873/SessionExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1873/SessionExtension.java\nindex 1555993ccea..1c0e8f00839 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1873/SessionExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1873/SessionExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.runtime;\n \n import org.junit.jupiter.api.extension.AfterEachCallback;\n@@ -72,19 +73,19 @@ public class SessionExtension implements BeforeEachCallback, AfterEachCallback\n \n     public SessionExtension()\n     {\n-        this( TestDatabaseManagementServiceBuilder::new );\n+        this(TestDatabaseManagementServiceBuilder::new);\n     }\n \n-    public SessionExtension( Supplier<TestDatabaseManagementServiceBuilder> builderFactory )\n+    public SessionExtension(Supplier<TestDatabaseManagementServiceBuilder> builderFactory)\n     {\n         this.builderFactory = builderFactory;\n     }\n \n-    public BoltStateMachine newMachine( BoltProtocolVersion version, BoltChannel boltChannel )\n+    public BoltStateMachine newMachine(BoltProtocolVersion version, BoltChannel boltChannel)\n     {\n         assertTestStarted();\n-        BoltStateMachine machine = boltFactory.newStateMachine( version, boltChannel );\n-        runningMachines.add( machine );\n+        BoltStateMachine machine = boltFactory.newStateMachine(version, boltChannel);\n+        runningMachines.add(machine);\n         return machine;\n     }\n \n@@ -98,53 +99,52 @@ public class SessionExtension implements BeforeEachCallback, AfterEachCallback\n     {\n         assertTestStarted();\n         DependencyResolver resolver = gdb.getDependencyResolver();\n-        Config config = resolver.resolveDependency( Config.class );\n-        return config.get( GraphDatabaseSettings.default_database );\n+        Config config = resolver.resolveDependency(Config.class);\n+        return config.get(GraphDatabaseSettings.default_database);\n     }\n \n     public DatabaseIdRepository databaseIdRepository()\n     {\n         assertTestStarted();\n         var resolver = gdb.getDependencyResolver();\n-        var databaseManager = resolver.resolveDependency( DatabaseManager.class );\n+        var databaseManager = resolver.resolveDependency(DatabaseManager.class);\n         return databaseManager.databaseIdRepository();\n     }\n \n     @Override\n-    public void beforeEach( ExtensionContext extensionContext )\n+    public void beforeEach(ExtensionContext extensionContext)\n     {\n-        managementService = builderFactory.get().impermanent().setConfig( GraphDatabaseSettings.auth_enabled, authEnabled ).build();\n-        gdb = (GraphDatabaseAPI) managementService.database( GraphDatabaseSettings.DEFAULT_DATABASE_NAME );\n+        managementService = builderFactory.get().impermanent().setConfig(GraphDatabaseSettings.auth_enabled, authEnabled).build();\n+        gdb = (GraphDatabaseAPI) managementService.database(GraphDatabaseSettings.DEFAULT_DATABASE_NAME);\n         DependencyResolver resolver = gdb.getDependencyResolver();\n-        Authentication authentication = authentication( resolver.resolveDependency( AuthManager.class ) );\n-        Config config = resolver.resolveDependency( Config.class );\n+        Authentication authentication = authentication(resolver.resolveDependency(AuthManager.class));\n+        Config config = resolver.resolveDependency(Config.class);\n         SystemNanoClock clock = Clocks.nanoClock();\n         DefaultDatabaseResolver defaultDatabaseResolver =\n-                new CommunityDefaultDatabaseResolver( config, () -> managementService.database( GraphDatabaseSettings.SYSTEM_DATABASE_NAME ) );\n-        BoltGraphDatabaseManagementServiceSPI databaseManagementService = new BoltKernelDatabaseManagementServiceProvider( managementService,\n-                new Monitors(), clock, ofSeconds( 30 ) );\n+          new CommunityDefaultDatabaseResolver(config, () -> managementService.database(GraphDatabaseSettings.SYSTEM_DATABASE_NAME));\n+        BoltGraphDatabaseManagementServiceSPI databaseManagementService = new BoltKernelDatabaseManagementServiceProvider(managementService,\n+          new Monitors(), clock, ofSeconds(30));\n         boltFactory = new BoltStateMachineFactoryImpl(\n-                databaseManagementService,\n-                authentication,\n-                clock,\n-                config,\n-                NullLogService.getInstance(),\n-                defaultDatabaseResolver\n+          databaseManagementService,\n+          authentication,\n+          clock,\n+          config,\n+          NullLogService.getInstance(),\n+          defaultDatabaseResolver\n         );\n     }\n \n     @Override\n-    public void afterEach( ExtensionContext extensionContext )\n+    public void afterEach(ExtensionContext extensionContext)\n     {\n         try\n         {\n-            if ( runningMachines != null )\n+            if (runningMachines != null)\n             {\n-                IOUtils.closeAll( runningMachines );\n+                IOUtils.closeAll(runningMachines);\n                 runningMachines.clear();\n             }\n-        }\n-        catch ( Throwable e )\n+        } catch (Throwable e)\n         {\n             e.printStackTrace();\n         }\n@@ -154,34 +154,34 @@ public class SessionExtension implements BeforeEachCallback, AfterEachCallback\n \n     private void assertTestStarted()\n     {\n-        if ( boltFactory == null || gdb == null )\n+        if (boltFactory == null || gdb == null)\n         {\n-            throw new IllegalStateException( \"Cannot access test environment before test is running.\" );\n+            throw new IllegalStateException(\"Cannot access test environment before test is running.\");\n         }\n     }\n \n-    private static Authentication authentication( AuthManager authManager )\n+    private static Authentication authentication(AuthManager authManager)\n     {\n-        return new BasicAuthentication( authManager );\n+        return new BasicAuthentication(authManager);\n     }\n \n     public long lastClosedTxId()\n     {\n-        return gdb.getDependencyResolver().resolveDependency( TransactionIdStore.class ).getLastClosedTransactionId();\n+        return gdb.getDependencyResolver().resolveDependency(TransactionIdStore.class).getLastClosedTransactionId();\n     }\n \n-    public URL putTmpFile( String prefix, String suffix, String contents ) throws IOException\n+    public URL putTmpFile(String prefix, String suffix, String contents) throws IOException\n     {\n-        Path tempFile = Files.createTempFile( prefix, suffix );\n+        Path tempFile = Files.createTempFile(prefix, suffix);\n         tempFile.toFile().deleteOnExit();\n-        try ( PrintWriter out = new PrintWriter( Files.newOutputStream( tempFile ), false, StandardCharsets.UTF_8 ) )\n+        try (PrintWriter out = new PrintWriter(Files.newOutputStream(tempFile), false, StandardCharsets.UTF_8))\n         {\n-            out.println( contents);\n+            out.println(contents);\n         }\n         return tempFile.toUri().toURL();\n     }\n \n-    public SessionExtension withAuthEnabled( boolean authEnabled )\n+    public SessionExtension withAuthEnabled(boolean authEnabled)\n     {\n         this.authEnabled = authEnabled;\n         return this;\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
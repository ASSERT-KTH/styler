{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1620",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1620/BatchOperationResults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1620/BatchOperationResults.java\nindex 6043d8a3de6..be317c537c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1620/BatchOperationResults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1620/BatchOperationResults.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.batch;\n \n import java.io.StringWriter;\n@@ -36,70 +37,69 @@ import org.neo4j.server.rest.domain.JsonHelper;\n  */\n public class BatchOperationResults\n {\n-    private static final String CLOSING_BRACKET = \"]\";\n-    private static final String OPENING_BRACKET = \"[\";\n-    private static final String OPENING_CURLY = \"{\";\n-    private static final String CLOSING_CURLY = \"}\";\n-    private static final String COMMA = \",\";\n+  private static final String CLOSING_BRACKET = \"]\";\n+  private static final String OPENING_BRACKET = \"[\";\n+  private static final String OPENING_CURLY = \"{\";\n+  private static final String CLOSING_CURLY = \"}\";\n+  private static final String COMMA = \",\";\n \n-    private StringWriter results = new StringWriter();\n-    private boolean firstResult = true;\n-    private Map<Integer, String> locations = new HashMap<>();\n+  private StringWriter results = new StringWriter();\n+  private boolean firstResult = true;\n+  private Map<Integer, String> locations = new HashMap<>();\n \n-    public BatchOperationResults()\n-    {\n-        results.append( OPENING_BRACKET );\n-    }\n+  public BatchOperationResults()\n+  {\n+    results.append(OPENING_BRACKET);\n+  }\n \n-    public void addOperationResult( String from, Integer id, String body, String location )\n+  public void addOperationResult(String from, Integer id, String body, String location)\n+  {\n+    if (firstResult)\n     {\n-        if ( firstResult )\n-        {\n-            firstResult = false;\n-        }\n-        else\n-        {\n-            results.append( ',' );\n-        }\n-\n-        results.append( OPENING_CURLY );\n-\n-        if ( id != null )\n-        {\n-            results.append( \"\\\"id\\\":\" )\n-                    .append( id.toString() )\n-                    .append( COMMA );\n-        }\n-\n-        if ( location != null )\n-        {\n-            locations.put( id, location );\n-            results.append( \"\\\"location\\\":\" )\n-                    .append( JsonHelper.createJsonFrom( location ) )\n-                    .append( COMMA );\n-        }\n-\n-        if ( body != null && body.length() != 0 )\n-        {\n-            results.append( \"\\\"body\\\":\" )\n-                    .append( body )\n-                    .append( COMMA );\n-        }\n+      firstResult = false;\n+    } else\n+    {\n+      results.append(',');\n+    }\n \n-        results.append( \"\\\"from\\\":\" )\n-                .append( JsonHelper.createJsonFrom( from ) );\n+    results.append(OPENING_CURLY);\n \n-        results.append( CLOSING_CURLY );\n+    if (id != null)\n+    {\n+      results.append(\"\\\"id\\\":\")\n+          .append(id.toString())\n+          .append(COMMA);\n     }\n \n-    public Map<Integer, String> getLocations()\n+    if (location != null)\n     {\n-        return locations;\n+      locations.put(id, location);\n+      results.append(\"\\\"location\\\":\")\n+          .append(JsonHelper.createJsonFrom(location))\n+          .append(COMMA);\n     }\n \n-    public String toJSON()\n+    if (body != null && body.length() != 0)\n     {\n-        results.append( CLOSING_BRACKET );\n-        return results.toString();\n+      results.append(\"\\\"body\\\":\")\n+          .append(body)\n+          .append(COMMA);\n     }\n+\n+    results.append(\"\\\"from\\\":\")\n+        .append(JsonHelper.createJsonFrom(from));\n+\n+    results.append(CLOSING_CURLY);\n+  }\n+\n+  public Map<Integer, String> getLocations()\n+  {\n+    return locations;\n+  }\n+\n+  public String toJSON()\n+  {\n+    results.append(CLOSING_BRACKET);\n+    return results.toString();\n+  }\n }\n",
            "diff_size": 81
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1620/BatchOperationResults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1620/BatchOperationResults.java\nindex 6043d8a3de6..13e3b2058c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1620/BatchOperationResults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1620/BatchOperationResults.java\n@@ -44,7 +44,7 @@ public class BatchOperationResults\n \n     private StringWriter results = new StringWriter();\n     private boolean firstResult = true;\n-    private Map<Integer, String> locations = new HashMap<>();\n+    private Map<Integer,String> locations = new HashMap<>();\n \n     public BatchOperationResults()\n     {\n@@ -63,36 +63,28 @@ public class BatchOperationResults\n         }\n \n         results.append( OPENING_CURLY );\n-\n-        if ( id != null )\n+if ( id != null )\n         {\n-            results.append( \"\\\"id\\\":\" )\n-                    .append( id.toString() )\n-                    .append( COMMA );\n+            results.append( \"\\\"id\\\":\" ).append( id.toString() ).append( COMMA );\n         }\n \n         if ( location != null )\n         {\n             locations.put( id, location );\n-            results.append( \"\\\"location\\\":\" )\n-                    .append( JsonHelper.createJsonFrom( location ) )\n-                    .append( COMMA );\n+            results.append( \"\\\"location\\\":\" ).append( JsonHelper.createJsonFrom( location ) ).append( COMMA );\n         }\n \n         if ( body != null && body.length() != 0 )\n         {\n-            results.append( \"\\\"body\\\":\" )\n-                    .append( body )\n+            results.append( \"\\\"body\\\":\" ).append( body )\n                     .append( COMMA );\n         }\n \n-        results.append( \"\\\"from\\\":\" )\n-                .append( JsonHelper.createJsonFrom( from ) );\n-\n-        results.append( CLOSING_CURLY );\n+        results.append( \"\\\"from\\\":\" ).append( JsonHelper.createJsonFrom( from ) );\n+results.append( CLOSING_CURLY );\n     }\n \n-    public Map<Integer, String> getLocations()\n+    public Map<Integer,String> getLocations()\n     {\n         return locations;\n     }\n@@ -102,4 +94,4 @@ public class BatchOperationResults\n         results.append( CLOSING_BRACKET );\n         return results.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
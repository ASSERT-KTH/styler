{
    "project_name": "EMResearch-EMB",
    "error_id": "89",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Implementing classes must provide confidence values with the SuggestedReplacement objects returned by orderSuggestions\n */\npublic interface SuggestionsRanker extends SuggestionsOrderer {\n  /**",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/89/SuggestionsRanker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/89/SuggestionsRanker.java\nindex f746b675ca5..57b579e266d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/89/SuggestionsRanker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/89/SuggestionsRanker.java\n@@ -29,11 +29,12 @@ import java.util.List;\n  * Implementing classes must provide confidence values with the SuggestedReplacement objects returned by orderSuggestions\n  */\n public interface SuggestionsRanker extends SuggestionsOrderer {\n-  /**\n-   * Model output should have been calibrated using a precision-recall curve evaluation, so that\n-   * a threshold for confidence values with sufficiently high precision for auto correction is known\n-   * @param rankedSuggestions suggestions returned by orderSuggestions\n-   * @return if confidence is high enough for auto correction\n-   */\n-  boolean shouldAutoCorrect(List<SuggestedReplacement> rankedSuggestions);\n+    /**\n+     * Model output should have been calibrated using a precision-recall curve evaluation, so that\n+     * a threshold for confidence values with sufficiently high precision for auto correction is known\n+     *\n+     * @param rankedSuggestions suggestions returned by orderSuggestions\n+     * @return if confidence is high enough for auto correction\n+     */\n+    boolean shouldAutoCorrect(List<SuggestedReplacement> rankedSuggestions);\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/89/SuggestionsRanker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/89/SuggestionsRanker.java\nindex f746b675ca5..df6189d844f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/89/SuggestionsRanker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/89/SuggestionsRanker.java\n@@ -36,4 +36,4 @@ public interface SuggestionsRanker extends SuggestionsOrderer {\n    * @return if confidence is high enough for auto correction\n    */\n   boolean shouldAutoCorrect(List<SuggestedReplacement> rankedSuggestions);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/89/SuggestionsRanker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/89/SuggestionsRanker.java\nindex f746b675ca5..8ef8d8c06c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/89/SuggestionsRanker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/89/SuggestionsRanker.java\n@@ -22,12 +22,13 @@\n package org.languagetool.rules.spelling.suggestions;\n \n import org.languagetool.rules.SuggestedReplacement;\n-\n import java.util.List;\n \n /**\n  * Implementing classes must provide confidence values with the SuggestedReplacement objects returned by orderSuggestions\n  */\n+\n+\n public interface SuggestionsRanker extends SuggestionsOrderer {\n   /**\n    * Model output should have been calibrated using a precision-recall curve evaluation, so that\n@@ -35,5 +36,5 @@ public interface SuggestionsRanker extends SuggestionsOrderer {\n    * @param rankedSuggestions suggestions returned by orderSuggestions\n    * @return if confidence is high enough for auto correction\n    */\n-  boolean shouldAutoCorrect(List<SuggestedReplacement> rankedSuggestions);\n-}\n+    boolean shouldAutoCorrect(List<SuggestedReplacement> rankedSuggestions);\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
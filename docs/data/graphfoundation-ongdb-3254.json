{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3254",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3254/ReplicatedTokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3254/ReplicatedTokenHolder.java\nindex 3c5b771732c..1cba8c221d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3254/ReplicatedTokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3254/ReplicatedTokenHolder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.token;\n \n import java.util.ArrayList;\n@@ -45,127 +46,124 @@ import org.neo4j.storageengine.api.lock.ResourceLocker;\n \n abstract class ReplicatedTokenHolder<TOKEN extends Token> implements TokenHolder<TOKEN>\n {\n-    protected final Dependencies dependencies;\n-\n-    private final Replicator replicator;\n-    private final TokenRegistry<TOKEN> tokenRegistry;\n-    private final IdGeneratorFactory idGeneratorFactory;\n-    private final IdType tokenIdType;\n-    private final TokenType type;\n-\n-    // TODO: Clean up all the resolving, which now happens every time with special selection strategies.\n-    ReplicatedTokenHolder( TokenRegistry<TOKEN> tokenRegistry, Replicator replicator,\n-                           IdGeneratorFactory idGeneratorFactory, IdType tokenIdType,\n-                           Dependencies dependencies, TokenType type )\n+  protected final Dependencies dependencies;\n+\n+  private final Replicator replicator;\n+  private final TokenRegistry<TOKEN> tokenRegistry;\n+  private final IdGeneratorFactory idGeneratorFactory;\n+  private final IdType tokenIdType;\n+  private final TokenType type;\n+\n+  // TODO: Clean up all the resolving, which now happens every time with special selection strategies.\n+  ReplicatedTokenHolder(TokenRegistry<TOKEN> tokenRegistry, Replicator replicator,\n+                        IdGeneratorFactory idGeneratorFactory, IdType tokenIdType,\n+                        Dependencies dependencies, TokenType type)\n+  {\n+    this.replicator = replicator;\n+    this.tokenRegistry = tokenRegistry;\n+    this.idGeneratorFactory = idGeneratorFactory;\n+    this.tokenIdType = tokenIdType;\n+    this.type = type;\n+    this.dependencies = dependencies;\n+  }\n+\n+  @Override\n+  public void setInitialTokens(List<TOKEN> tokens) throws NonUniqueTokenException\n+  {\n+    tokenRegistry.setInitialTokens(tokens);\n+  }\n+\n+  @Override\n+  public void addToken(TOKEN token) throws NonUniqueTokenException\n+  {\n+    tokenRegistry.addToken(token);\n+  }\n+\n+  @Override\n+  public int getOrCreateId(String tokenName)\n+  {\n+    Integer tokenId = tokenRegistry.getId(tokenName);\n+    if (tokenId != null)\n     {\n-        this.replicator = replicator;\n-        this.tokenRegistry = tokenRegistry;\n-        this.idGeneratorFactory = idGeneratorFactory;\n-        this.tokenIdType = tokenIdType;\n-        this.type = type;\n-        this.dependencies = dependencies;\n+      return tokenId;\n     }\n \n-    @Override\n-    public void setInitialTokens( List<TOKEN> tokens ) throws NonUniqueTokenException\n-    {\n-        tokenRegistry.setInitialTokens( tokens );\n-    }\n+    return requestToken(tokenName);\n+  }\n \n-    @Override\n-    public void addToken( TOKEN token ) throws NonUniqueTokenException\n+  private int requestToken(String tokenName)\n+  {\n+    ReplicatedTokenRequest tokenRequest = new ReplicatedTokenRequest(type, tokenName, createCommands(tokenName));\n+    try\n     {\n-        tokenRegistry.addToken( token );\n-    }\n-\n-    @Override\n-    public int getOrCreateId( String tokenName )\n+      Future<Object> future = replicator.replicate(tokenRequest, true);\n+      return (int) future.get();\n+    } catch (InterruptedException e)\n     {\n-        Integer tokenId = tokenRegistry.getId( tokenName );\n-        if ( tokenId != null )\n-        {\n-            return tokenId;\n-        }\n-\n-        return requestToken( tokenName );\n-    }\n-\n-    private int requestToken( String tokenName )\n+      throw new org.neo4j.graphdb.TransactionFailureException(\"Could not create token\", e);\n+    } catch (ExecutionException e)\n     {\n-        ReplicatedTokenRequest tokenRequest = new ReplicatedTokenRequest( type, tokenName, createCommands( tokenName ) );\n-        try\n-        {\n-            Future<Object> future = replicator.replicate( tokenRequest, true );\n-            return (int) future.get();\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            throw new org.neo4j.graphdb.TransactionFailureException( \"Could not create token\", e );\n-        }\n-        catch ( ExecutionException e )\n-        {\n-            throw new IllegalStateException( e );\n-        }\n+      throw new IllegalStateException(e);\n     }\n-\n-    private byte[] createCommands( String tokenName )\n+  }\n+\n+  private byte[] createCommands(String tokenName)\n+  {\n+    StorageEngine storageEngine = dependencies.resolveDependency(StorageEngine.class);\n+    Collection<StorageCommand> commands = new ArrayList<>();\n+    TransactionState txState = new TxState();\n+    int tokenId = Math.toIntExact(idGeneratorFactory.get(tokenIdType).nextId());\n+    createToken(txState, tokenName, tokenId);\n+    try (StorageStatement statement = storageEngine.storeReadLayer().newStatement())\n     {\n-        StorageEngine storageEngine = dependencies.resolveDependency( StorageEngine.class );\n-        Collection<StorageCommand> commands = new ArrayList<>();\n-        TransactionState txState = new TxState();\n-        int tokenId = Math.toIntExact( idGeneratorFactory.get( tokenIdType ).nextId() );\n-        createToken( txState, tokenName, tokenId );\n-        try ( StorageStatement statement = storageEngine.storeReadLayer().newStatement() )\n-        {\n-            storageEngine.createCommands( commands, txState, statement, ResourceLocker.NONE, Long.MAX_VALUE );\n-        }\n-        catch ( CreateConstraintFailureException | TransactionFailureException | ConstraintValidationException e )\n-        {\n-            throw new RuntimeException( \"Unable to create token '\" + tokenName + \"'\", e );\n-        }\n-\n-        return ReplicatedTokenRequestSerializer.commandBytes( commands );\n-    }\n-\n-    protected abstract void createToken( TransactionState txState, String tokenName, int tokenId );\n-\n-    @Override\n-    public TOKEN getTokenById( int id ) throws TokenNotFoundException\n+      storageEngine.createCommands(commands, txState, statement, ResourceLocker.NONE, Long.MAX_VALUE);\n+    } catch (CreateConstraintFailureException | TransactionFailureException | ConstraintValidationException e)\n     {\n-        TOKEN result = getTokenByIdOrNull( id );\n-        if ( result == null )\n-        {\n-            throw new TokenNotFoundException( \"Token for id \" + id );\n-        }\n-        return result;\n+      throw new RuntimeException(\"Unable to create token '\" + tokenName + \"'\", e);\n     }\n \n-    @Override\n-    public TOKEN getTokenByIdOrNull( int id )\n-    {\n-        return tokenRegistry.getToken( id );\n-    }\n+    return ReplicatedTokenRequestSerializer.commandBytes(commands);\n+  }\n \n-    @Override\n-    public int getIdByName( String name )\n-    {\n-        Integer id = tokenRegistry.getId( name );\n-        if ( id == null )\n-        {\n-            return NO_ID;\n-        }\n-        return id;\n-    }\n+  protected abstract void createToken(TransactionState txState, String tokenName, int tokenId);\n \n-    @Override\n-    public Iterable<TOKEN> getAllTokens()\n+  @Override\n+  public TOKEN getTokenById(int id) throws TokenNotFoundException\n+  {\n+    TOKEN result = getTokenByIdOrNull(id);\n+    if (result == null)\n     {\n-        return tokenRegistry.allTokens();\n+      throw new TokenNotFoundException(\"Token for id \" + id);\n     }\n-\n-    @Override\n-    public int size()\n+    return result;\n+  }\n+\n+  @Override\n+  public TOKEN getTokenByIdOrNull(int id)\n+  {\n+    return tokenRegistry.getToken(id);\n+  }\n+\n+  @Override\n+  public int getIdByName(String name)\n+  {\n+    Integer id = tokenRegistry.getId(name);\n+    if (id == null)\n     {\n-        return tokenRegistry.size();\n+      return NO_ID;\n     }\n+    return id;\n+  }\n+\n+  @Override\n+  public Iterable<TOKEN> getAllTokens()\n+  {\n+    return tokenRegistry.allTokens();\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return tokenRegistry.size();\n+  }\n }\n",
            "diff_size": 170
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3254/ReplicatedTokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3254/ReplicatedTokenHolder.java\nindex 3c5b771732c..899d8995303 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3254/ReplicatedTokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3254/ReplicatedTokenHolder.java\n@@ -54,10 +54,9 @@ abstract class ReplicatedTokenHolder<TOKEN extends Token> implements TokenHolder\n     private final TokenType type;\n \n     // TODO: Clean up all the resolving, which now happens every time with special selection strategies.\n-    ReplicatedTokenHolder( TokenRegistry<TOKEN> tokenRegistry, Replicator replicator,\n-                           IdGeneratorFactory idGeneratorFactory, IdType tokenIdType,\n+    ReplicatedTokenHolder( TokenRegistry<TOKEN> tokenRegistry, Replicator replicator, IdGeneratorFactory idGeneratorFactory, IdType tokenIdType,\n                            Dependencies dependencies, TokenType type )\n-    {\n+{\n         this.replicator = replicator;\n         this.tokenRegistry = tokenRegistry;\n         this.idGeneratorFactory = idGeneratorFactory;\n@@ -96,7 +95,7 @@ abstract class ReplicatedTokenHolder<TOKEN extends Token> implements TokenHolder\n         try\n         {\n             Future<Object> future = replicator.replicate( tokenRequest, true );\n-            return (int) future.get();\n+            return ( int) future.get();\n         }\n         catch ( InterruptedException e )\n         {\n@@ -137,7 +136,8 @@ abstract class ReplicatedTokenHolder<TOKEN extends Token> implements TokenHolder\n         {\n             throw new TokenNotFoundException( \"Token for id \" + id );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     @Override\n@@ -154,7 +154,8 @@ abstract class ReplicatedTokenHolder<TOKEN extends Token> implements TokenHolder\n         {\n             return NO_ID;\n         }\n-        return id;\n+\n+return id;\n     }\n \n     @Override\n@@ -168,4 +169,4 @@ abstract class ReplicatedTokenHolder<TOKEN extends Token> implements TokenHolder\n     {\n         return tokenRegistry.size();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
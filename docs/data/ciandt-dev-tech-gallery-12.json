{
    "project_name": "ciandt-dev-tech-gallery",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "85",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    validateInputs(skill, user);\n\n    final Technology technology = skill.getTechnology().get();//techService.getTechnologyById(skill.getTechnology().get);\n    final TechGalleryUser techUser = userService.getUserByGoogleId(user.getUserId());\n    final Skill skillEntity = skillDao.findByUserAndTechnology(techUser, technology);\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/12/SkillServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/12/SkillServiceImpl.java\nindex fc462d054af..4ae85faee6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/12/SkillServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/12/SkillServiceImpl.java\n@@ -30,7 +30,6 @@ import java.util.logging.Logger;\n  * Services for Skill Endpoint requests.\n  *\n  * @author Felipe Goncalves de Castro\n- *\n  */\n public class SkillServiceImpl implements SkillService {\n \n@@ -46,23 +45,27 @@ public class SkillServiceImpl implements SkillService {\n   private static SkillServiceImpl instance;\n   SkillDAO skillDao = SkillDAOImpl.getInstance();\n \n-  /** Technology service. */\n+  /**\n+   * Technology service.\n+   */\n   TechnologyService techService = TechnologyServiceImpl.getInstance();\n-  /** tech gallery user service. */\n+  /**\n+   * tech gallery user service.\n+   */\n   UserServiceTG userService = UserServiceTGImpl.getInstance();\n \n   /*\n    * Constructors --------------------------------------------\n    */\n-  private SkillServiceImpl() {}\n+  private SkillServiceImpl() {\n+  }\n \n   /**\n    * Singleton method for the service.\n    *\n+   * @return SkillServiceImpl instance.\n    * @author <a href=\"mailto:joaom@ciandt.com\"> Jo\u00e3o Felipe de Medeiros Moreira </a>\n    * @since 07/10/2015\n-   *\n-   * @return SkillServiceImpl instance.\n    */\n   public static SkillServiceImpl getInstance() {\n     if (instance == null) {\n@@ -82,7 +85,8 @@ public class SkillServiceImpl implements SkillService {\n \n     validateInputs(skill, user);\n \n-    final Technology technology = skill.getTechnology().get();//techService.getTechnologyById(skill.getTechnology().get);\n+    final Technology technology =\n+        skill.getTechnology().get();//techService.getTechnologyById(skill.getTechnology().get);\n     final TechGalleryUser techUser = userService.getUserByGoogleId(user.getUserId());\n     final Skill skillEntity = skillDao.findByUserAndTechnology(techUser, technology);\n \n@@ -104,11 +108,10 @@ public class SkillServiceImpl implements SkillService {\n    * Validate inputs of SkillResponse.\n    *\n    * @param skill inputs to be validate\n-   * @param user info about user from google\n-   *\n-   * @throws BadRequestException for the validations.\n+   * @param user  info about user from google\n+   * @throws BadRequestException          for the validations.\n    * @throws InternalServerErrorException in case something goes wrong\n-   * @throws NotFoundException in case the information are not founded\n+   * @throws NotFoundException            in case the information are not founded\n    */\n   private void validateInputs(Skill skill, User user)\n       throws BadRequestException, NotFoundException, InternalServerErrorException {\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/12/SkillServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/12/SkillServiceImpl.java\nindex fc462d054af..323d6415da4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/12/SkillServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/12/SkillServiceImpl.java\n@@ -82,7 +82,8 @@ public class SkillServiceImpl implements SkillService {\n \n     validateInputs(skill, user);\n \n-    final Technology technology = skill.getTechnology().get();//techService.getTechnologyById(skill.getTechnology().get);\n+    final Technology technology = skill.getTechnology().get();\n+//techService.getTechnologyById(skill.getTechnology().get);\n     final TechGalleryUser techUser = userService.getUserByGoogleId(user.getUserId());\n     final Skill skillEntity = skillDao.findByUserAndTechnology(techUser, technology);\n \n@@ -135,12 +136,12 @@ public class SkillServiceImpl implements SkillService {\n     if (skill.getTechnology() == null) {\n       throw new BadRequestException(ValidationMessageEnums.TECHNOLOGY_ID_CANNOT_BLANK.message());\n     }\n+\n /*\n     final Technology technology = techService.getTechnologyById(skill.getTechnology());\n     if (technology == null) {\n       throw new BadRequestException(ValidationMessageEnums.TECHNOLOGY_NOT_EXIST.message());\n     }*/\n-\n   }\n \n   private Skill addNewSkill(Skill skill, TechGalleryUser techUser, Technology technology) {\n@@ -220,4 +221,4 @@ public class SkillServiceImpl implements SkillService {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/12/SkillServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/12/SkillServiceImpl.java\nindex fc462d054af..6eaad4ddb19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/12/SkillServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/12/SkillServiceImpl.java\n@@ -5,10 +5,8 @@ import com.google.api.server.spi.response.InternalServerErrorException;\n import com.google.api.server.spi.response.NotFoundException;\n import com.google.appengine.api.oauth.OAuthRequestException;\n import com.google.appengine.api.users.User;\n-\n import com.googlecode.objectify.Key;\n import com.googlecode.objectify.Ref;\n-\n import com.ciandt.techgallery.persistence.dao.SkillDAO;\n import com.ciandt.techgallery.persistence.dao.impl.SkillDAOImpl;\n import com.ciandt.techgallery.persistence.model.Skill;\n@@ -22,7 +20,6 @@ import com.ciandt.techgallery.service.model.Response;\n import com.ciandt.techgallery.service.model.SkillResponse;\n import com.ciandt.techgallery.service.util.SkillConverter;\n import com.ciandt.techgallery.utils.i18n.I18n;\n-\n import java.util.Date;\n import java.util.logging.Logger;\n \n@@ -32,28 +29,37 @@ import java.util.logging.Logger;\n  * @author Felipe Goncalves de Castro\n  *\n  */\n+\n+\n public class SkillServiceImpl implements SkillService {\n \n   /*\n    * Constants --------------------------------------------\n    */\n+\n   private static final Logger log = Logger.getLogger(SkillServiceImpl.class.getName());\n+\n   private static final I18n i18n = I18n.getInstance();\n \n   /*\n    * Attributes --------------------------------------------\n    */\n+\n   private static SkillServiceImpl instance;\n+\n   SkillDAO skillDao = SkillDAOImpl.getInstance();\n \n   /** Technology service. */\n+\n   TechnologyService techService = TechnologyServiceImpl.getInstance();\n   /** tech gallery user service. */\n+\n   UserServiceTG userService = UserServiceTGImpl.getInstance();\n \n   /*\n    * Constructors --------------------------------------------\n    */\n+\n   private SkillServiceImpl() {}\n \n   /**\n@@ -64,6 +70,7 @@ public class SkillServiceImpl implements SkillService {\n    *\n    * @return SkillServiceImpl instance.\n    */\n+\n   public static SkillServiceImpl getInstance() {\n     if (instance == null) {\n       instance = new SkillServiceImpl();\n@@ -74,14 +81,12 @@ public class SkillServiceImpl implements SkillService {\n   /*\n    * Methods --------------------------------------------\n    */\n+\n   @Override\n   public Skill addOrUpdateSkill(Skill skill, User user)\n-      throws InternalServerErrorException, BadRequestException, NotFoundException {\n-\n+    throws InternalServerErrorException, BadRequestException, NotFoundException {\n     log.info(\"Starting creating or updating skill\");\n-\n     validateInputs(skill, user);\n-\n     final Technology technology = skill.getTechnology().get();//techService.getTechnologyById(skill.getTechnology().get);\n     final TechGalleryUser techUser = userService.getUserByGoogleId(user.getUserId());\n     final Skill skillEntity = skillDao.findByUserAndTechnology(techUser, technology);\n@@ -94,9 +99,7 @@ public class SkillServiceImpl implements SkillService {\n       skillEntity.setActive(Boolean.FALSE);\n       skillDao.update(skillEntity);\n     }\n-\n     final Skill newSkill = addNewSkill(skill, techUser, technology);\n-\n     return newSkill;\n   }\n \n@@ -110,15 +113,14 @@ public class SkillServiceImpl implements SkillService {\n    * @throws InternalServerErrorException in case something goes wrong\n    * @throws NotFoundException in case the information are not founded\n    */\n-  private void validateInputs(Skill skill, User user)\n-      throws BadRequestException, NotFoundException, InternalServerErrorException {\n \n-    log.info(\"Validating inputs of skill\");\n \n+  private void validateInputs(Skill skill, User user)\n+    throws BadRequestException, NotFoundException, InternalServerErrorException {\n+    log.info(\"Validating inputs of skill\");\n     if (user == null || user.getUserId() == null || user.getUserId().isEmpty()) {\n       throw new BadRequestException(ValidationMessageEnums.USER_GOOGLE_ENDPOINT_NULL.message());\n     }\n-\n     final TechGalleryUser techUser = userService.getUserByGoogleId(user.getUserId());\n     if (techUser == null) {\n       throw new BadRequestException(ValidationMessageEnums.USER_NOT_EXIST.message());\n@@ -140,12 +142,11 @@ public class SkillServiceImpl implements SkillService {\n     if (technology == null) {\n       throw new BadRequestException(ValidationMessageEnums.TECHNOLOGY_NOT_EXIST.message());\n     }*/\n-\n   }\n \n+\n   private Skill addNewSkill(Skill skill, TechGalleryUser techUser, Technology technology) {\n     log.info(\"Adding new skill...\");\n-\n     final Skill newSkill = new Skill();\n     newSkill.setTechGalleryUser(Ref.create(techUser));\n     newSkill.setTechnology(Ref.create(technology));\n@@ -153,15 +154,13 @@ public class SkillServiceImpl implements SkillService {\n     newSkill.setActive(Boolean.TRUE);\n     final Key<Skill> newSkillKey = skillDao.add(newSkill);\n     newSkill.setId(newSkillKey.getId());\n-\n     log.info(\"New skill added: \" + newSkill.getId());\n-\n     return newSkill;\n   }\n \n   @Override\n-  public Skill getUserSkill(String techId, User user) throws BadRequestException,\n-      OAuthRequestException, NotFoundException, InternalServerErrorException {\n+  public Skill getUserSkill(String techId, User user)\n+    throws BadRequestException, OAuthRequestException, NotFoundException, InternalServerErrorException {\n     // user google id\n     String googleId;\n     // user from techgallery datastore\n@@ -174,6 +173,7 @@ public class SkillServiceImpl implements SkillService {\n     }\n \n     // TechGalleryUser can't be null and must exists on datastore\n+\n     if (googleId == null || googleId.equals(\"\")) {\n       throw new NotFoundException(i18n.t(\"Current user was not found!\"));\n     } else {\n@@ -200,8 +200,8 @@ public class SkillServiceImpl implements SkillService {\n   }\n \n   @Override\n-  public Skill getUserSkill(String techId, TechGalleryUser user) throws BadRequestException,\n-      OAuthRequestException, NotFoundException, InternalServerErrorException {\n+  public Skill getUserSkill(String techId, TechGalleryUser user)\n+    throws BadRequestException, OAuthRequestException, NotFoundException, InternalServerErrorException {\n     // User can't be null\n     if (user == null) {\n       throw new OAuthRequestException(i18n.t(\"Null user reference!\"));\n@@ -220,4 +220,4 @@ public class SkillServiceImpl implements SkillService {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
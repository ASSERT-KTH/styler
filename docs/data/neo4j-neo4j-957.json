{
    "project_name": "neo4j-neo4j",
    "error_id": "957",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/957/ClassGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/957/ClassGenerator.java\nindex 334601dc510..2e261693048 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/957/ClassGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/957/ClassGenerator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.lang.reflect.Modifier;\n@@ -38,10 +39,10 @@ public class ClassGenerator implements AutoCloseable\n {\n     private final ClassHandle handle;\n     private ClassWriter writer;\n-    private Map<String,FieldReference> fields;\n+    private Map<String, FieldReference> fields;\n     private boolean hasConstructor;\n \n-    ClassGenerator( ClassHandle handle, ClassWriter writer )\n+    ClassGenerator(ClassHandle handle, ClassWriter writer)\n     {\n         this.handle = handle;\n         this.writer = writer;\n@@ -50,9 +51,9 @@ public class ClassGenerator implements AutoCloseable\n     @Override\n     public void close()\n     {\n-        if ( !hasConstructor )\n+        if (!hasConstructor)\n         {\n-            generate( MethodTemplate.constructor().invokeSuper().build() );\n+            generate(MethodTemplate.constructor().invokeSuper().build());\n         }\n         writer.done();\n         handle.generator.closeClass();\n@@ -64,112 +65,111 @@ public class ClassGenerator implements AutoCloseable\n         return handle;\n     }\n \n-    public FieldReference field( Class<?> type, String name )\n+    public FieldReference field(Class<?> type, String name)\n     {\n-        return field( typeReference( type ), name );\n+        return field(typeReference(type), name);\n     }\n \n-    public FieldReference field( TypeReference type, String name )\n+    public FieldReference field(TypeReference type, String name)\n     {\n-        return emitField( Modifier.PUBLIC, type, name, null );\n+        return emitField(Modifier.PUBLIC, type, name, null);\n     }\n \n-    public FieldReference privateStaticFinalField( Class<?> type, String name, Expression value )\n+    public FieldReference privateStaticFinalField(Class<?> type, String name, Expression value)\n     {\n-        return privateStaticFinalField( typeReference( type ), name, value );\n+        return privateStaticFinalField(typeReference(type), name, value);\n     }\n \n-    public FieldReference publicStaticField( TypeReference type, String name )\n+    public FieldReference publicStaticField(TypeReference type, String name)\n     {\n-        return emitField( Modifier.PUBLIC | Modifier.STATIC, type, name, null );\n+        return emitField(Modifier.PUBLIC | Modifier.STATIC, type, name, null);\n     }\n \n-    public FieldReference privateStaticField( Class<?> type, String name, Expression value )\n+    public FieldReference privateStaticField(Class<?> type, String name, Expression value)\n     {\n-        return privateStaticField( typeReference( type ), name, value );\n+        return privateStaticField(typeReference(type), name, value);\n     }\n \n-    public FieldReference privateStaticField( TypeReference type, String name, Expression value )\n+    public FieldReference privateStaticField(TypeReference type, String name, Expression value)\n     {\n-        return emitField( Modifier.PRIVATE | Modifier.STATIC, type, name, value );\n+        return emitField(Modifier.PRIVATE | Modifier.STATIC, type, name, value);\n     }\n \n-    public FieldReference privateStaticFinalField( TypeReference type, String name, Expression value )\n+    public FieldReference privateStaticFinalField(TypeReference type, String name, Expression value)\n     {\n-        return emitField( Modifier.PRIVATE | Modifier.STATIC | Modifier.FINAL, type, name, Objects.requireNonNull( value ) );\n+        return emitField(Modifier.PRIVATE | Modifier.STATIC | Modifier.FINAL, type, name, Objects.requireNonNull(value));\n     }\n \n-    private FieldReference emitField( int modifiers, TypeReference type, String name, Expression value )\n+    private FieldReference emitField(int modifiers, TypeReference type, String name, Expression value)\n     {\n-        if ( fields == null )\n+        if (fields == null)\n         {\n             fields = new HashMap<>();\n-        }\n-        else if ( fields.containsKey( name ) )\n+        } else if (fields.containsKey(name))\n         {\n-            throw new IllegalArgumentException( handle + \" already has a field '\" + name + \"'\" );\n+            throw new IllegalArgumentException(handle + \" already has a field '\" + name + \"'\");\n         }\n-        FieldReference field = new FieldReference( modifiers, handle, type, name );\n-        fields.put( name, field );\n-        writer.field( field, value );\n+        FieldReference field = new FieldReference(modifiers, handle, type, name);\n+        fields.put(name, field);\n+        writer.field(field, value);\n         return field;\n     }\n \n-    public MethodReference generate( MethodTemplate template, Binding... bindings )\n+    public MethodReference generate(MethodTemplate template, Binding... bindings)\n     {\n-        try ( CodeBlock generator = generate( template.declaration( handle ) ) )\n+        try (CodeBlock generator = generate(template.declaration(handle)))\n         {\n-            template.generate( generator );\n+            template.generate(generator);\n         }\n-        return methodReference( handle, template.returnType(), template.name(), template.modifiers(),  template.parameterTypes() );\n+        return methodReference(handle, template.returnType(), template.name(), template.modifiers(), template.parameterTypes());\n     }\n \n-    public CodeBlock generateConstructor( Parameter... parameters )\n+    public CodeBlock generateConstructor(Parameter... parameters)\n     {\n-        return generate( constructor( handle, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS ) );\n+        return generate(constructor(handle, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS));\n     }\n \n-    public CodeBlock generateConstructor( int modifiers, Parameter... parameters )\n+    public CodeBlock generateConstructor(int modifiers, Parameter... parameters)\n     {\n-        return generate( constructor( handle, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS ) );\n+        return generate(constructor(handle, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS));\n     }\n \n-    public CodeBlock generateMethod( Class<?> returnType, String name, Parameter... parameters )\n+    public CodeBlock generateMethod(Class<?> returnType, String name, Parameter... parameters)\n     {\n-        return generateMethod( typeReference( returnType ), name, Modifier.PUBLIC, parameters );\n+        return generateMethod(typeReference(returnType), name, Modifier.PUBLIC, parameters);\n     }\n \n-    public CodeBlock generateMethod( Class<?> returnType, String name, int modifiers, Parameter... parameters )\n+    public CodeBlock generateMethod(Class<?> returnType, String name, int modifiers, Parameter... parameters)\n     {\n-        return generateMethod( typeReference( returnType ), name, modifiers, parameters );\n+        return generateMethod(typeReference(returnType), name, modifiers, parameters);\n     }\n \n-    public CodeBlock generateMethod( TypeReference returnType, String name, Parameter... parameters )\n+    public CodeBlock generateMethod(TypeReference returnType, String name, Parameter... parameters)\n     {\n-        return generate( method( handle, returnType, name, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS ) );\n+        return generate(method(handle, returnType, name, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS));\n     }\n \n-    public CodeBlock generateMethod( TypeReference returnType, String name, int modifiers, Parameter... parameters )\n+    public CodeBlock generateMethod(TypeReference returnType, String name, int modifiers, Parameter... parameters)\n     {\n-        return generate( method( handle, returnType, name, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS ) );\n+        return generate(method(handle, returnType, name, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS));\n     }\n \n-    public CodeBlock generate( MethodDeclaration.Builder builder )\n+    public CodeBlock generate(MethodDeclaration.Builder builder)\n     {\n-        return generate( builder.build( handle ) );\n+        return generate(builder.build(handle));\n     }\n \n-    private CodeBlock generate( MethodDeclaration declaration )\n+    private CodeBlock generate(MethodDeclaration declaration)\n     {\n-        if ( declaration.isConstructor() )\n+        if (declaration.isConstructor())\n         {\n             hasConstructor = true;\n         }\n-        return new CodeBlock( this, writer.method( declaration ), declaration.parameters() );\n+        return new CodeBlock(this, writer.method(declaration), declaration.parameters());\n     }\n \n-    FieldReference getField( String name )\n+    FieldReference getField(String name)\n     {\n-        return fields == null ? null : fields.get( name );\n+        return fields == null ? null : fields.get(name);\n     }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
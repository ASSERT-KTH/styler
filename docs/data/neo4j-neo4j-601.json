{
    "project_name": "neo4j-neo4j",
    "error_id": "601",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/601/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/601/Configuration.java\nindex 1f68eba03cd..9673136e264 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/601/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/601/Configuration.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import static org.neo4j.io.ByteUnit.mebiBytes;\n@@ -27,14 +28,14 @@ import static org.neo4j.io.ByteUnit.mebiBytes;\n public class Configuration\n {\n     public static final Configuration COMMAS = newBuilder()\n-            .withDelimiter( ',' )\n-            .withArrayDelimiter( ';' )\n-            .build();\n+      .withDelimiter(',')\n+      .withArrayDelimiter(';')\n+      .build();\n \n     public static final Configuration TABS = newBuilder()\n-            .withDelimiter( '\\t' )\n-            .withArrayDelimiter( ',' )\n-            .build();\n+      .withDelimiter('\\t')\n+      .withArrayDelimiter(',')\n+      .build();\n \n     public static final boolean DEFAULT_LEGACY_STYLE_QUOTING = false;\n \n@@ -47,7 +48,7 @@ public class Configuration\n     private final boolean emptyQuotedStringsAsNull;\n     private final boolean legacyStyleQuoting;\n \n-    private Configuration( Builder b )\n+    private Configuration(Builder b)\n     {\n         this.quotationCharacter = b.quotationCharacter;\n         this.delimiter = b.delimiter;\n@@ -123,14 +124,14 @@ public class Configuration\n     public Builder toBuilder()\n     {\n         return new Builder()\n-                .withQuotationCharacter( quotationCharacter )\n-                .withDelimiter( delimiter )\n-                .withArrayDelimiter( arrayDelimiter )\n-                .withBufferSize( bufferSize )\n-                .withMultilineFields( multilineFields )\n-                .withTrimStrings( trimStrings )\n-                .withEmptyQuotedStringsAsNull( emptyQuotedStringsAsNull )\n-                .withLegacyStyleQuoting( legacyStyleQuoting );\n+          .withQuotationCharacter(quotationCharacter)\n+          .withDelimiter(delimiter)\n+          .withArrayDelimiter(arrayDelimiter)\n+          .withBufferSize(bufferSize)\n+          .withMultilineFields(multilineFields)\n+          .withTrimStrings(trimStrings)\n+          .withEmptyQuotedStringsAsNull(emptyQuotedStringsAsNull)\n+          .withLegacyStyleQuoting(legacyStyleQuoting);\n     }\n \n     public static Builder newBuilder()\n@@ -143,55 +144,55 @@ public class Configuration\n         private char quotationCharacter = '\"';\n         private char delimiter = ',';\n         private char arrayDelimiter = ';';\n-        private int bufferSize = (int) mebiBytes( 4 );\n+        private int bufferSize = (int) mebiBytes(4);\n         private boolean multilineFields;\n         private boolean trimStrings;\n         private boolean emptyQuotedStringsAsNull;\n         private boolean legacyStyleQuoting = DEFAULT_LEGACY_STYLE_QUOTING;\n \n-        public Builder withQuotationCharacter( char quotationCharacter )\n+        public Builder withQuotationCharacter(char quotationCharacter)\n         {\n             this.quotationCharacter = quotationCharacter;\n             return this;\n         }\n \n-        public Builder withDelimiter( char delimiter )\n+        public Builder withDelimiter(char delimiter)\n         {\n             this.delimiter = delimiter;\n             return this;\n         }\n \n-        public Builder withArrayDelimiter( char arrayDelimiter )\n+        public Builder withArrayDelimiter(char arrayDelimiter)\n         {\n             this.arrayDelimiter = arrayDelimiter;\n             return this;\n         }\n \n-        public Builder withBufferSize( int bufferSize )\n+        public Builder withBufferSize(int bufferSize)\n         {\n             this.bufferSize = bufferSize;\n             return this;\n         }\n \n-        public Builder withMultilineFields( boolean multilineFields )\n+        public Builder withMultilineFields(boolean multilineFields)\n         {\n             this.multilineFields = multilineFields;\n             return this;\n         }\n \n-        public Builder withTrimStrings( boolean trimStrings )\n+        public Builder withTrimStrings(boolean trimStrings)\n         {\n             this.trimStrings = trimStrings;\n             return this;\n         }\n \n-        public Builder withEmptyQuotedStringsAsNull( boolean emptyQuotedStringsAsNull )\n+        public Builder withEmptyQuotedStringsAsNull(boolean emptyQuotedStringsAsNull)\n         {\n             this.emptyQuotedStringsAsNull = emptyQuotedStringsAsNull;\n             return this;\n         }\n \n-        public Builder withLegacyStyleQuoting( boolean legacyStyleQuoting )\n+        public Builder withLegacyStyleQuoting(boolean legacyStyleQuoting)\n         {\n             this.legacyStyleQuoting = legacyStyleQuoting;\n             return this;\n@@ -199,7 +200,7 @@ public class Configuration\n \n         public Configuration build()\n         {\n-            return new Configuration( this );\n+            return new Configuration(this);\n         }\n     }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
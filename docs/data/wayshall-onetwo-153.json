{
    "project_name": "wayshall-onetwo",
    "error_id": "153",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "39",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\tpublic static String getTopic(Message<?> message) {\n\t\tAssert.notNull(message, \"message can not be null\");\n\t\tString topic = (String)message.getHeaders().get(MqttHeaders.TOPIC);\n\t\treturn topic;\n\t}\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "column": "39",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/153/Mqtts.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/153/Mqtts.java\nindex 95adc68e9c9..8e7e2f7549e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/153/Mqtts.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/153/Mqtts.java\n@@ -10,16 +10,16 @@ import org.springframework.util.Assert;\n  */\n \n final public class Mqtts {\n-\t\n-\tpublic static final String OUTBOUND_CHANNEL = \"mqttOutboundChannel\";\n+\n+  public static final String OUTBOUND_CHANNEL = \"mqttOutboundChannel\";\n //\tpublic static final String INBOUND_CHANNEL = \"mqttInboundChannel\";\n-\t\n-\tpublic static String getTopic(Message<?> message) {\n-\t\tAssert.notNull(message, \"message can not be null\");\n-\t\tString topic = (String)message.getHeaders().get(MqttHeaders.TOPIC);\n-\t\treturn topic;\n-\t}\n \n-\tprivate Mqtts() {\n-\t}\n+  public static String getTopic(Message<?> message) {\n+    Assert.notNull(message, \"message can not be null\");\n+    String topic = (String) message.getHeaders().get(MqttHeaders.TOPIC);\n+    return topic;\n+  }\n+\n+  private Mqtts() {\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "column": "39",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "19",
                    "column": "39",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
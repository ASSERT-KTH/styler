{
    "project_name": "ibinti-bugvm",
    "error_id": "136",
    "information": {
        "errors": [
            {
                "line": "80",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 96).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     *             getAvailableLocales().\n     */\n    public abstract DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale);\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/136/DateFormatProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/136/DateFormatProvider.java\nindex 59fefed4cc9..5fd6fdd726d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/136/DateFormatProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/136/DateFormatProvider.java\n@@ -25,57 +25,56 @@ import java.util.spi.LocaleServiceProvider;\n  * This abstract class should be extended by service providers that provide\n  * instances of {@code DateFormat}.\n  * <p>Note that Android does not support user-supplied locale service providers.\n- * @since 1.6\n+ *\n  * @hide\n+ * @since 1.6\n  */\n public abstract class DateFormatProvider extends LocaleServiceProvider {\n-    /**\n-     * Default constructor, for use by subclasses.\n-     */\n-    protected DateFormatProvider() {\n-        // Do nothing.\n-    }\n+  /**\n+   * Default constructor, for use by subclasses.\n+   */\n+  protected DateFormatProvider() {\n+    // Do nothing.\n+  }\n \n-    /**\n-     * Returns an instance of {@code DateFormat} that formats times\n-     * in the given style for the given locale.\n-     *\n-     * @param style the given time formatting style.\n-     * @param locale the locale\n-     * @return an instance of {@code DateFormat}\n-     * @throws NullPointerException if {@code locale == null}\n-     * @throws IllegalArgumentException\n-     *             if locale isn't one of the locales returned from\n-     *             getAvailableLocales().\n-     */\n-    public abstract DateFormat getTimeInstance(int style, Locale locale);\n+  /**\n+   * Returns an instance of {@code DateFormat} that formats times\n+   * in the given style for the given locale.\n+   *\n+   * @param style  the given time formatting style.\n+   * @param locale the locale\n+   * @return an instance of {@code DateFormat}\n+   * @throws NullPointerException     if {@code locale == null}\n+   * @throws IllegalArgumentException if locale isn't one of the locales returned from\n+   *                                  getAvailableLocales().\n+   */\n+  public abstract DateFormat getTimeInstance(int style, Locale locale);\n \n-    /**\n-     * Returns an instance of {@code DateFormat} that formats dates\n-     * in the given style for the given locale.\n-     *\n-     * @param style the given date formatting style.\n-     * @param locale the locale\n-     * @return an instance of {@code DateFormat}\n-     * @throws NullPointerException if {@code locale == null}\n-     * @throws IllegalArgumentException\n-     *             if locale isn't one of the locales returned from\n-     *             getAvailableLocales().\n-     */\n-    public abstract DateFormat getDateInstance(int style, Locale locale);\n+  /**\n+   * Returns an instance of {@code DateFormat} that formats dates\n+   * in the given style for the given locale.\n+   *\n+   * @param style  the given date formatting style.\n+   * @param locale the locale\n+   * @return an instance of {@code DateFormat}\n+   * @throws NullPointerException     if {@code locale == null}\n+   * @throws IllegalArgumentException if locale isn't one of the locales returned from\n+   *                                  getAvailableLocales().\n+   */\n+  public abstract DateFormat getDateInstance(int style, Locale locale);\n \n-    /**\n-     * Returns an instance of {@code DateFormat} that formats dates and times\n-     * in the given style for the given locale.\n-     *\n-     * @param dateStyle the given date formatting style.\n-     * @param timeStyle the given time formatting style.\n-     * @param locale the locale\n-     * @return an instance of {@code DateFormat}\n-     * @throws NullPointerException if {@code locale == null}\n-     * @throws IllegalArgumentException\n-     *             if locale isn't one of the locales returned from\n-     *             getAvailableLocales().\n-     */\n-    public abstract DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale);\n+  /**\n+   * Returns an instance of {@code DateFormat} that formats dates and times\n+   * in the given style for the given locale.\n+   *\n+   * @param dateStyle the given date formatting style.\n+   * @param timeStyle the given time formatting style.\n+   * @param locale    the locale\n+   * @return an instance of {@code DateFormat}\n+   * @throws NullPointerException     if {@code locale == null}\n+   * @throws IllegalArgumentException if locale isn't one of the locales returned from\n+   *                                  getAvailableLocales().\n+   */\n+  public abstract DateFormat getDateTimeInstance(int dateStyle, int timeStyle,\n+                                                 Locale locale);\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/136/DateFormatProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/136/DateFormatProvider.java\nindex 59fefed4cc9..cdca0d80d92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/136/DateFormatProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/136/DateFormatProvider.java\n@@ -78,4 +78,4 @@ public abstract class DateFormatProvider extends LocaleServiceProvider {\n      *             getAvailableLocales().\n      */\n     public abstract DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "97",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/136/DateFormatProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/136/DateFormatProvider.java\nindex 59fefed4cc9..d3c1e3f0e5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/136/DateFormatProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/136/DateFormatProvider.java\n@@ -77,5 +77,4 @@ public abstract class DateFormatProvider extends LocaleServiceProvider {\n      *             if locale isn't one of the locales returned from\n      *             getAvailableLocales().\n      */\n-    public abstract DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale);\n-}\n+    public abstract DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale) ; }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
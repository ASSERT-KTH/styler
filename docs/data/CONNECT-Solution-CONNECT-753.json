{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "753",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpilib;\n\nimport gov.hhs.fha.nhinc.nhinclib.NullChecker;\nimport org.slf4j.Logger;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "27",
                    "column": "34",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/753/PersonName.java\nindex cf5c6dd0622..8468cad201a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/753/PersonName.java\n@@ -24,9 +24,9 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.mpilib;\n+package gov.hhs.fha.nhinc.mpilib;import\n \n-import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n+gov.hhs.fha.nhinc.nhinclib.NullChecker;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/753/PersonName.java\nindex cf5c6dd0622..11cb7ea3b7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/753/PersonName.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n@@ -31,137 +32,137 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author rayj\n  */\n public class PersonName implements java.io.Serializable {\n-    private static final Logger LOG = LoggerFactory.getLogger(PersonName.class);\n-    private String lastName = \"\";\n-    private String firstName = \"\";\n-    private String middleName = \"\";\n-    private String title = \"\";\n-    private String suffix = \"\";\n-\n-    /**\n-     * Public constructor for PersonName.\n-     */\n-    public PersonName() {\n-        LOG.debug(\"PersonName Initialized\");\n-    }\n-\n-    /**\n-     * Public constructor for PersonName, taking in last name and first name as paramaters.\n-     * @param lastname the Person's last name\n-     * @param firstname the Person's first name\n-     */\n-    public PersonName(String lastname, String firstname) {\n-        this.setLastName(lastname);\n-        this.setFirstName(firstname);\n-    }\n-\n-    /**\n-     * @return the middle name value for this PersonName\n-     */\n-    public String getMiddleName() {\n-        if (middleName == null) {\n-            middleName = \"\";\n-        }\n-        return middleName;\n-    }\n-\n-    /**\n-     * @return the middle initial for the middle name of this PersonName\n-     */\n-    public String getMiddleInitial() {\n-        if (middleName == null) {\n-            middleName = \"\";\n-        }\n-        return middleName.substring(0, 0);\n-    }\n-\n-    /**\n-     * @param middle the middle name value for this PersonName\n-     */\n-    public void setMiddleName(String middle) {\n-        middleName = middle;\n+  private static final Logger LOG = LoggerFactory.getLogger(PersonName.class);\n+  private String lastName = \"\";\n+  private String firstName = \"\";\n+  private String middleName = \"\";\n+  private String title = \"\";\n+  private String suffix = \"\";\n+\n+  /**\n+   * Public constructor for PersonName.\n+   */\n+  public PersonName() {\n+    LOG.debug(\"PersonName Initialized\");\n+  }\n+\n+  /**\n+   * Public constructor for PersonName, taking in last name and first name as paramaters.\n+   *\n+   * @param lastname  the Person's last name\n+   * @param firstname the Person's first name\n+   */\n+  public PersonName(String lastname, String firstname) {\n+    this.setLastName(lastname);\n+    this.setFirstName(firstname);\n+  }\n+\n+  /**\n+   * @return the middle name value for this PersonName\n+   */\n+  public String getMiddleName() {\n+    if (middleName == null) {\n+      middleName = \"\";\n     }\n-\n-    /**\n-     * @return the last name value of this PersonName\n-     */\n-    public String getLastName() {\n-        if (lastName == null) {\n-            lastName = \"\";\n-        }\n-        return lastName;\n+    return middleName;\n+  }\n+\n+  /**\n+   * @return the middle initial for the middle name of this PersonName\n+   */\n+  public String getMiddleInitial() {\n+    if (middleName == null) {\n+      middleName = \"\";\n     }\n-\n-    /**\n-     * @param lastName the last name to be associated with this PersonName\n-     */\n-    public void setLastName(String lastName) {\n-        this.lastName = lastName;\n-    }\n-\n-    /**\n-     * @return the first name value associated with this PersonName\n-     */\n-    public String getFirstName() {\n-        if (firstName == null) {\n-            firstName = \"\";\n-        }\n-        return firstName;\n+    return middleName.substring(0, 0);\n+  }\n+\n+  /**\n+   * @param middle the middle name value for this PersonName\n+   */\n+  public void setMiddleName(String middle) {\n+    middleName = middle;\n+  }\n+\n+  /**\n+   * @return the last name value of this PersonName\n+   */\n+  public String getLastName() {\n+    if (lastName == null) {\n+      lastName = \"\";\n     }\n-\n-    /**\n-     * @param firstName the first name value to be associated with this PersonName\n-     */\n-    public void setFirstName(String firstName) {\n-        this.firstName = firstName;\n-    }\n-\n-    /**\n-     * @param title the title to be associated with this PersonName\n-     */\n-    public void setTitle(String title) {\n-        this.title = title;\n-    }\n-\n-    /**\n-     * @return the title associated with this PersonName\n-     */\n-    public String getTitle() {\n-        return title;\n-    }\n-\n-    /**\n-     * @param value the suffix to be associated with this PersonName\n-     */\n-    public void setSuffix(String value) {\n-        this.suffix = value;\n-    }\n-\n-    /**\n-     * @return the suffix to be associated with for this PersonName\n-     */\n-    public String getSuffix() {\n-        return suffix;\n-    }\n-\n-    /* (non-Javadoc)\n-     * @see java.lang.Object#toString()\n-     */\n-    @Override\n-    public String toString() {\n-        String result;\n-        result = lastName + \", \" + firstName;\n-        return result;\n-    }\n-\n-    /**\n-     * @return true if LastName and FirstName have both been set with actual values. False otherwise.\n-     */\n-    public boolean isValid() {\n-        return NullChecker.isNotNullish(getFirstName()) && NullChecker.isNotNullish(getLastName());\n+    return lastName;\n+  }\n+\n+  /**\n+   * @param lastName the last name to be associated with this PersonName\n+   */\n+  public void setLastName(String lastName) {\n+    this.lastName = lastName;\n+  }\n+\n+  /**\n+   * @return the first name value associated with this PersonName\n+   */\n+  public String getFirstName() {\n+    if (firstName == null) {\n+      firstName = \"\";\n     }\n+    return firstName;\n+  }\n+\n+  /**\n+   * @param firstName the first name value to be associated with this PersonName\n+   */\n+  public void setFirstName(String firstName) {\n+    this.firstName = firstName;\n+  }\n+\n+  /**\n+   * @param title the title to be associated with this PersonName\n+   */\n+  public void setTitle(String title) {\n+    this.title = title;\n+  }\n+\n+  /**\n+   * @return the title associated with this PersonName\n+   */\n+  public String getTitle() {\n+    return title;\n+  }\n+\n+  /**\n+   * @param value the suffix to be associated with this PersonName\n+   */\n+  public void setSuffix(String value) {\n+    this.suffix = value;\n+  }\n+\n+  /**\n+   * @return the suffix to be associated with for this PersonName\n+   */\n+  public String getSuffix() {\n+    return suffix;\n+  }\n+\n+  /* (non-Javadoc)\n+   * @see java.lang.Object#toString()\n+   */\n+  @Override\n+  public String toString() {\n+    String result;\n+    result = lastName + \", \" + firstName;\n+    return result;\n+  }\n+\n+  /**\n+   * @return true if LastName and FirstName have both been set with actual values. False otherwise.\n+   */\n+  public boolean isValid() {\n+    return NullChecker.isNotNullish(getFirstName()) && NullChecker.isNotNullish(getLastName());\n+  }\n }\n",
            "diff_size": 181
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/753/PersonName.java\nindex cf5c6dd0622..7b60c945bd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/753/PersonName.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n@@ -164,4 +165,4 @@ public class PersonName implements java.io.Serializable {\n     public boolean isValid() {\n         return NullChecker.isNotNullish(getFirstName()) && NullChecker.isNotNullish(getLastName());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/753/PersonName.java\nindex cf5c6dd0622..ac3cacc5144 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/753/PersonName.java\n@@ -34,7 +34,10 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author rayj\n  */\n+\n+\n public class PersonName implements java.io.Serializable {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(PersonName.class);\n     private String lastName = \"\";\n     private String firstName = \"\";\n@@ -45,6 +48,7 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * Public constructor for PersonName.\n      */\n+\n     public PersonName() {\n         LOG.debug(\"PersonName Initialized\");\n     }\n@@ -54,6 +58,8 @@ public class PersonName implements java.io.Serializable {\n      * @param lastname the Person's last name\n      * @param firstname the Person's first name\n      */\n+\n+\n     public PersonName(String lastname, String firstname) {\n         this.setLastName(lastname);\n         this.setFirstName(firstname);\n@@ -62,6 +68,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @return the middle name value for this PersonName\n      */\n+\n+\n     public String getMiddleName() {\n         if (middleName == null) {\n             middleName = \"\";\n@@ -72,6 +80,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @return the middle initial for the middle name of this PersonName\n      */\n+\n+\n     public String getMiddleInitial() {\n         if (middleName == null) {\n             middleName = \"\";\n@@ -82,6 +92,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @param middle the middle name value for this PersonName\n      */\n+\n+\n     public void setMiddleName(String middle) {\n         middleName = middle;\n     }\n@@ -89,6 +101,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @return the last name value of this PersonName\n      */\n+\n+\n     public String getLastName() {\n         if (lastName == null) {\n             lastName = \"\";\n@@ -99,6 +113,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @param lastName the last name to be associated with this PersonName\n      */\n+\n+\n     public void setLastName(String lastName) {\n         this.lastName = lastName;\n     }\n@@ -106,6 +122,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @return the first name value associated with this PersonName\n      */\n+\n+\n     public String getFirstName() {\n         if (firstName == null) {\n             firstName = \"\";\n@@ -116,6 +134,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @param firstName the first name value to be associated with this PersonName\n      */\n+\n+\n     public void setFirstName(String firstName) {\n         this.firstName = firstName;\n     }\n@@ -123,6 +143,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @param title the title to be associated with this PersonName\n      */\n+\n+\n     public void setTitle(String title) {\n         this.title = title;\n     }\n@@ -130,6 +152,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @return the title associated with this PersonName\n      */\n+\n+\n     public String getTitle() {\n         return title;\n     }\n@@ -137,6 +161,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @param value the suffix to be associated with this PersonName\n      */\n+\n+\n     public void setSuffix(String value) {\n         this.suffix = value;\n     }\n@@ -144,6 +170,8 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @return the suffix to be associated with for this PersonName\n      */\n+\n+\n     public String getSuffix() {\n         return suffix;\n     }\n@@ -151,6 +179,8 @@ public class PersonName implements java.io.Serializable {\n     /* (non-Javadoc)\n      * @see java.lang.Object#toString()\n      */\n+\n+\n     @Override\n     public String toString() {\n         String result;\n@@ -161,7 +191,10 @@ public class PersonName implements java.io.Serializable {\n     /**\n      * @return true if LastName and FirstName have both been set with actual values. False otherwise.\n      */\n+\n+\n     public boolean isValid() {\n         return NullChecker.isNotNullish(getFirstName()) && NullChecker.isNotNullish(getLastName());\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "27",
                    "column": "34",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/753/PersonName.java\nindex cf5c6dd0622..8468cad201a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/753/PersonName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/753/PersonName.java\n@@ -24,9 +24,9 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.mpilib;\n+package gov.hhs.fha.nhinc.mpilib;import\n \n-import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n+gov.hhs.fha.nhinc.nhinclib.NullChecker;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
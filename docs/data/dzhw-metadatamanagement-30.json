{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "64",
                "severity": "error",
                "message": "'}' at column 64 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(VariableExists constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "64",
                    "severity": "error",
                    "message": "'}' at column 64 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/30/VariableExistsValidator.java\nindex 28b3f2a5fcf..7d812ca3265 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/30/VariableExistsValidator.java\n@@ -8,30 +8,31 @@ import lombok.RequiredArgsConstructor;\n \n /**\n  * Validator which ensures that there is an variable with the given id.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n @RequiredArgsConstructor\n public class VariableExistsValidator implements ConstraintValidator<VariableExists, String> {\n \n   private final VariableRepository variableRepository;\n-  \n+\n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(VariableExists constraintAnnotation) {}\n+  public void initialize(VariableExists constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(String variableId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String variableId, ConstraintValidatorContext context) {\n     return variableRepository.existsById(variableId);\n   }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "column": "64",
                    "severity": "error",
                    "message": "'}' at column 64 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/30/VariableExistsValidator.java\nindex 28b3f2a5fcf..81bd37c2c02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/30/VariableExistsValidator.java\n@@ -31,7 +31,7 @@ public class VariableExistsValidator implements ConstraintValidator<VariableExis\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(String variableId, ConstraintValidatorContext context) {   \n-    return variableRepository.existsById(variableId);\n+  public boolean isValid(String variableId, ConstraintValidatorContext context) {\n+  return variableRepository.existsById(variableId);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/30/VariableExistsValidator.java\nindex 28b3f2a5fcf..64ea3f891dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/30/VariableExistsValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.relatedpublicationmanagement.domain.valid\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.repository.VariableRepository;\n import lombok.RequiredArgsConstructor;\n \n@@ -11,9 +10,10 @@ import lombok.RequiredArgsConstructor;\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n+\n+\n @RequiredArgsConstructor\n public class VariableExistsValidator implements ConstraintValidator<VariableExists, String> {\n-\n   private final VariableRepository variableRepository;\n   \n   /*\n@@ -21,8 +21,11 @@ public class VariableExistsValidator implements ConstraintValidator<VariableExis\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(VariableExists constraintAnnotation) {}\n+  public void initialize(VariableExists constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -30,8 +33,11 @@ public class VariableExistsValidator implements ConstraintValidator<VariableExis\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(String variableId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String variableId,\n+    ConstraintValidatorContext context) {\n     return variableRepository.existsById(variableId);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "64",
                    "severity": "error",
                    "message": "'}' at column 64 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "column": "64",
                    "severity": "error",
                    "message": "'}' at column 64 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/30/VariableExistsValidator.java\nindex 28b3f2a5fcf..a58d5bc6c3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/30/VariableExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/30/VariableExistsValidator.java\n@@ -23,7 +23,6 @@ public class VariableExistsValidator implements ConstraintValidator<VariableExis\n    */\n   @Override\n   public void initialize(VariableExists constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
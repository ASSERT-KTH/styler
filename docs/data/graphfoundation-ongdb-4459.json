{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4459",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4459/FieldSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4459/FieldSignature.java\nindex 62347433e9c..e3e99e0aa77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4459/FieldSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4459/FieldSignature.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.procs;\n \n import java.util.Objects;\n@@ -27,176 +28,181 @@ import org.neo4j.values.ValueMapper;\n \n import static java.util.Objects.requireNonNull;\n \n-/** Represents a type and a name for a field in a record, used to define input and output record signatures. */\n+/**\n+ * Represents a type and a name for a field in a record, used to define input and output record signatures.\n+ */\n public class FieldSignature\n {\n-    public static FieldSignature inputField( String name, Neo4jTypes.AnyType type )\n-    {\n-        return new FieldSignature( name, type, null, false );\n-    }\n-\n-    public static FieldSignature inputField( String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue )\n-    {\n-        return new FieldSignature( name, type, requireNonNull( defaultValue, \"defaultValue\" ), false );\n-    }\n-\n-    public interface InputMapper\n-    {\n-        Object map( Object input );\n-        AnyValue map( AnyValue input );\n-    }\n-\n-    public static FieldSignature inputField( String name, Neo4jTypes.AnyType type, InputMapper mapper )\n-    {\n-        return new FieldSignature( name, type, null, false )\n-        {\n-            @Override\n-            public Object map( Object input )\n-            {\n-                return mapper.map( input );\n-            }\n-\n-            @Override\n-            public Object map( AnyValue input, ValueMapper<Object> valueMapper )\n-            {\n-                return mapper.map( input ).map( valueMapper );\n-            }\n-\n-            @Override\n-            public boolean needsMapping()\n-            {\n-                return true;\n-            }\n-        };\n-    }\n-\n-    public static FieldSignature inputField( String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue, InputMapper mapper )\n-    {\n-        return new FieldSignature( name, type, requireNonNull( defaultValue, \"defaultValue\" ), false )\n-        {\n-            @Override\n-            public Object map( Object input )\n-            {\n-                return mapper.map( input );\n-            }\n-\n-            @Override\n-            public Object map( AnyValue input, ValueMapper<Object> valueMapper )\n-            {\n-                return mapper.map( input ).map( valueMapper );\n-            }\n-\n-            @Override\n-            public boolean needsMapping()\n-            {\n-                return true;\n-            }\n-        };\n-    }\n-\n-    public static FieldSignature outputField( String name, Neo4jTypes.AnyType type )\n-    {\n-        return outputField( name, type, false );\n-    }\n-\n-    public static FieldSignature outputField( String name, Neo4jTypes.AnyType type, boolean deprecated )\n-    {\n-        return new FieldSignature( name, type, null, deprecated );\n-    }\n-\n-    private final String name;\n-    private final Neo4jTypes.AnyType type;\n-    private final DefaultParameterValue defaultValue;\n-    private final boolean deprecated;\n-\n-    private FieldSignature( String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue, boolean deprecated )\n-    {\n-        this.name = requireNonNull( name, \"name\" );\n-        this.type = requireNonNull( type, \"type\" );\n-        this.defaultValue = defaultValue;\n-        this.deprecated = deprecated;\n-        if ( defaultValue != null )\n-        {\n-            if ( !type.equals( defaultValue.neo4jType() ) )\n-            {\n-                throw new IllegalArgumentException( String.format(\n-                        \"Default value does not have a valid type, field type was %s, but value type was %s.\",\n-                        type.toString(), defaultValue.neo4jType().toString() ) );\n-            }\n-        }\n-    }\n-\n-    public boolean needsMapping()\n-    {\n-        return false;\n-    }\n-\n-    /** Fields that are not supported full stack (ie. by Cypher) need to be mapped from Cypher to internal types */\n-    public Object map( Object input )\n-    {\n-        return input;\n-    }\n-\n-    public Object map( AnyValue input, ValueMapper<Object> mapper )\n-    {\n-        return input.map( mapper );\n-    }\n-\n-    public String name()\n-    {\n-        return name;\n-    }\n-\n-    public Neo4jTypes.AnyType neo4jType()\n-    {\n-        return type;\n-    }\n-\n-    public Optional<DefaultParameterValue> defaultValue()\n-    {\n-        return Optional.ofNullable( defaultValue );\n-    }\n-\n-    public boolean isDeprecated()\n-    {\n-        return deprecated;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        StringBuilder result = new StringBuilder();\n-        result.append( name );\n-        if ( defaultValue != null )\n-        {\n-            result.append( \" = \" ).append( defaultValue.value() );\n-        }\n-        return result.append( \" :: \" ).append( type ).toString();\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        FieldSignature that = (FieldSignature) o;\n-        return name.equals( that.name ) &&\n-                type.equals( that.type ) &&\n-                Objects.equals( this.defaultValue, that.defaultValue ) &&\n-                this.deprecated == that.deprecated;\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        int result = name.hashCode();\n-        result = 31 * result + type.hashCode();\n-        return result;\n-    }\n+  public static FieldSignature inputField(String name, Neo4jTypes.AnyType type)\n+  {\n+    return new FieldSignature(name, type, null, false);\n+  }\n+\n+  public static FieldSignature inputField(String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue)\n+  {\n+    return new FieldSignature(name, type, requireNonNull(defaultValue, \"defaultValue\"), false);\n+  }\n+\n+  public interface InputMapper\n+  {\n+    Object map(Object input);\n+\n+    AnyValue map(AnyValue input);\n+  }\n+\n+  public static FieldSignature inputField(String name, Neo4jTypes.AnyType type, InputMapper mapper)\n+  {\n+    return new FieldSignature(name, type, null, false)\n+    {\n+      @Override\n+      public Object map(Object input)\n+      {\n+        return mapper.map(input);\n+      }\n+\n+      @Override\n+      public Object map(AnyValue input, ValueMapper<Object> valueMapper)\n+      {\n+        return mapper.map(input).map(valueMapper);\n+      }\n+\n+      @Override\n+      public boolean needsMapping()\n+      {\n+        return true;\n+      }\n+    };\n+  }\n+\n+  public static FieldSignature inputField(String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue, InputMapper mapper)\n+  {\n+    return new FieldSignature(name, type, requireNonNull(defaultValue, \"defaultValue\"), false)\n+    {\n+      @Override\n+      public Object map(Object input)\n+      {\n+        return mapper.map(input);\n+      }\n+\n+      @Override\n+      public Object map(AnyValue input, ValueMapper<Object> valueMapper)\n+      {\n+        return mapper.map(input).map(valueMapper);\n+      }\n+\n+      @Override\n+      public boolean needsMapping()\n+      {\n+        return true;\n+      }\n+    };\n+  }\n+\n+  public static FieldSignature outputField(String name, Neo4jTypes.AnyType type)\n+  {\n+    return outputField(name, type, false);\n+  }\n+\n+  public static FieldSignature outputField(String name, Neo4jTypes.AnyType type, boolean deprecated)\n+  {\n+    return new FieldSignature(name, type, null, deprecated);\n+  }\n+\n+  private final String name;\n+  private final Neo4jTypes.AnyType type;\n+  private final DefaultParameterValue defaultValue;\n+  private final boolean deprecated;\n+\n+  private FieldSignature(String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue, boolean deprecated)\n+  {\n+    this.name = requireNonNull(name, \"name\");\n+    this.type = requireNonNull(type, \"type\");\n+    this.defaultValue = defaultValue;\n+    this.deprecated = deprecated;\n+    if (defaultValue != null)\n+    {\n+      if (!type.equals(defaultValue.neo4jType()))\n+      {\n+        throw new IllegalArgumentException(String.format(\n+            \"Default value does not have a valid type, field type was %s, but value type was %s.\",\n+            type.toString(), defaultValue.neo4jType().toString()));\n+      }\n+    }\n+  }\n+\n+  public boolean needsMapping()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Fields that are not supported full stack (ie. by Cypher) need to be mapped from Cypher to internal types\n+   */\n+  public Object map(Object input)\n+  {\n+    return input;\n+  }\n+\n+  public Object map(AnyValue input, ValueMapper<Object> mapper)\n+  {\n+    return input.map(mapper);\n+  }\n+\n+  public String name()\n+  {\n+    return name;\n+  }\n+\n+  public Neo4jTypes.AnyType neo4jType()\n+  {\n+    return type;\n+  }\n+\n+  public Optional<DefaultParameterValue> defaultValue()\n+  {\n+    return Optional.ofNullable(defaultValue);\n+  }\n+\n+  public boolean isDeprecated()\n+  {\n+    return deprecated;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    StringBuilder result = new StringBuilder();\n+    result.append(name);\n+    if (defaultValue != null)\n+    {\n+      result.append(\" = \").append(defaultValue.value());\n+    }\n+    return result.append(\" :: \").append(type).toString();\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+    FieldSignature that = (FieldSignature) o;\n+    return name.equals(that.name) &&\n+        type.equals(that.type) &&\n+        Objects.equals(this.defaultValue, that.defaultValue) &&\n+        this.deprecated == that.deprecated;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = name.hashCode();\n+    result = 31 * result + type.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 176
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "191",
                    "column": "41",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4459/FieldSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4459/FieldSignature.java\nindex 62347433e9c..64122e323a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4459/FieldSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4459/FieldSignature.java\n@@ -119,10 +119,9 @@ public class FieldSignature\n         {\n             if ( !type.equals( defaultValue.neo4jType() ) )\n             {\n-                throw new IllegalArgumentException( String.format(\n-                        \"Default value does not have a valid type, field type was %s, but value type was %s.\",\n+                throw new IllegalArgumentException( String.format( \"Default value does not have a valid type, field type was %s, but value type was %s.\",\n                         type.toString(), defaultValue.neo4jType().toString() ) );\n-            }\n+    }\n         }\n     }\n \n@@ -171,7 +170,8 @@ public class FieldSignature\n         {\n             result.append( \" = \" ).append( defaultValue.value() );\n         }\n-        return result.append( \" :: \" ).append( type ).toString();\n+\n+return result.append( \" :: \" ).append( type ).toString();\n     }\n \n     @Override\n@@ -181,13 +181,14 @@ public class FieldSignature\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        FieldSignature that = (FieldSignature) o;\n-        return name.equals( that.name ) &&\n-                type.equals( that.type ) &&\n+\n+FieldSignature that = (FieldSignature) o;\n+        return name.equals( that.name ) &&type.equals( that.type ) &&\n                 Objects.equals( this.defaultValue, that.defaultValue ) &&\n                 this.deprecated == that.deprecated;\n     }\n@@ -199,4 +200,4 @@ public class FieldSignature\n         result = 31 * result + type.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "6",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "184",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "column": "40",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "column": "67",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "column": "124",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "197",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4459/FieldSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4459/FieldSignature.java\nindex 62347433e9c..5d160b21c35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4459/FieldSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4459/FieldSignature.java\n@@ -21,13 +21,12 @@ package org.neo4j.internal.kernel.api.procs;\n \n import java.util.Objects;\n import java.util.Optional;\n-\n import org.neo4j.values.AnyValue;\n import org.neo4j.values.ValueMapper;\n-\n import static java.util.Objects.requireNonNull;\n \n /** Represents a type and a name for a field in a record, used to define input and output record signatures. */\n+\n public class FieldSignature\n {\n     public static FieldSignature inputField( String name, Neo4jTypes.AnyType type )\n@@ -41,57 +40,57 @@ public class FieldSignature\n     }\n \n     public interface InputMapper\n-    {\n-        Object map( Object input );\n-        AnyValue map( AnyValue input );\n-    }\n+{\n+   Object map( Object input )\n+   ; AnyValue map( AnyValue input )\n+     ; }\n \n     public static FieldSignature inputField( String name, Neo4jTypes.AnyType type, InputMapper mapper )\n     {\n         return new FieldSignature( name, type, null, false )\n-        {\n-            @Override\n-            public Object map( Object input )\n-            {\n-                return mapper.map( input );\n-            }\n+{\n+    @Override\n+    public Object map( Object input )\n+    {\n+        return mapper.map( input );\n+    }\n \n-            @Override\n-            public Object map( AnyValue input, ValueMapper<Object> valueMapper )\n-            {\n-                return mapper.map( input ).map( valueMapper );\n-            }\n+    @Override\n+    public Object map( AnyValue input, ValueMapper<Object> valueMapper )\n+    {\n+        return mapper.map( input ).map( valueMapper );\n+    }\n \n-            @Override\n-            public boolean needsMapping()\n-            {\n-                return true;\n-            }\n-        };\n+    @Override\n+    public boolean needsMapping()\n+    {\n+        return true;\n+    }\n+};\n     }\n \n     public static FieldSignature inputField( String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue, InputMapper mapper )\n     {\n         return new FieldSignature( name, type, requireNonNull( defaultValue, \"defaultValue\" ), false )\n-        {\n-            @Override\n-            public Object map( Object input )\n-            {\n-                return mapper.map( input );\n-            }\n+{\n+    @Override\n+    public Object map( Object input )\n+    {\n+        return mapper.map( input );\n+    }\n \n-            @Override\n-            public Object map( AnyValue input, ValueMapper<Object> valueMapper )\n-            {\n-                return mapper.map( input ).map( valueMapper );\n-            }\n+    @Override\n+    public Object map( AnyValue input, ValueMapper<Object> valueMapper )\n+    {\n+        return mapper.map( input ).map( valueMapper );\n+    }\n \n-            @Override\n-            public boolean needsMapping()\n-            {\n-                return true;\n-            }\n-        };\n+    @Override\n+    public boolean needsMapping()\n+    {\n+        return true;\n+    }\n+};\n     }\n \n     public static FieldSignature outputField( String name, Neo4jTypes.AnyType type )\n@@ -117,11 +116,9 @@ public class FieldSignature\n         this.deprecated = deprecated;\n         if ( defaultValue != null )\n         {\n-            if ( !type.equals( defaultValue.neo4jType() ) )\n+            if ( ! type.equals( defaultValue.neo4jType() ) )\n             {\n-                throw new IllegalArgumentException( String.format(\n-                        \"Default value does not have a valid type, field type was %s, but value type was %s.\",\n-                        type.toString(), defaultValue.neo4jType().toString() ) );\n+                throw new IllegalArgumentException( String.format( \"Default value does not have a valid type, field type was %s, but value type was %s.\", type.toString(), defaultValue.neo4jType().toString() ) );\n             }\n         }\n     }\n@@ -132,6 +129,7 @@ public class FieldSignature\n     }\n \n     /** Fields that are not supported full stack (ie. by Cypher) need to be mapped from Cypher to internal types */\n+\n     public Object map( Object input )\n     {\n         return input;\n@@ -171,6 +169,7 @@ public class FieldSignature\n         {\n             result.append( \" = \" ).append( defaultValue.value() );\n         }\n+\n         return result.append( \" :: \" ).append( type ).toString();\n     }\n \n@@ -181,22 +180,21 @@ public class FieldSignature\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+        if ( o == null|| getClass() != o.getClass() )\n         {\n             return false;\n         }\n+\n         FieldSignature that = (FieldSignature) o;\n-        return name.equals( that.name ) &&\n-                type.equals( that.type ) &&\n-                Objects.equals( this.defaultValue, that.defaultValue ) &&\n-                this.deprecated == that.deprecated;\n+        return name.equals( that.name )&& type.equals( that.type )&& Objects.equals( this.defaultValue, that.defaultValue )&& this.deprecated == that.deprecated;\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = name.hashCode();\n-        result = 31 * result + type.hashCode();\n+        result = 31* result + type.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 56
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
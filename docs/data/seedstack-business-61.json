{
    "project_name": "seedstack-business",
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.data;\n\nimport static java.util.stream.Collectors.toSet;\nimport static org.seedstack.business.internal.utils.BusinessUtils.streamClasses;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/61/DataPlugin.java\nindex abb74532619..979a1a4adc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/61/DataPlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import static java.util.stream.Collectors.toSet;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/61/DataPlugin.java\nindex abb74532619..979a1a4adc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/61/DataPlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import static java.util.stream.Collectors.toSet;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "107",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "111",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "column": "1",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "column": "1",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/61/DataPlugin.java\nindex abb74532619..165d68ae9e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/61/DataPlugin.java\n@@ -89,8 +89,7 @@ public class DataPlugin extends AbstractSeedPlugin {\n                 .forEach(exporterClasses::add);\n         LOGGER.debug(\"Data exporters => {}\", exporterClasses);\n \n-        streamClasses(classesBySpec.get(BusinessSpecifications.DATA_SET), Object.class).forEach(\n-                dataClasses::add);\n+        streamClasses(classesBySpec.get(BusinessSpecifications.DATA_SET), Object.class).forEach(dataClasses::add);\n         LOGGER.debug(\"DTO classes with default importer/exporter => {}\", dataClasses);\n \n         // Add bindings for explicit data importers/exporters\n@@ -105,12 +104,11 @@ public class DataPlugin extends AbstractSeedPlugin {\n         Set<Class<?>> classesWithExplicitExporter = exporterClasses.stream()\n                 .map(exporterClass -> (Class<?>) BusinessUtils.resolveGenerics(DataExporter.class, exporterClass)[0])\n                 .collect(toSet());\n-\n-        // Then add bindings for default data importers/exporters\n+// Then add bindings for default data importers/exporters\n         bindingStrategies.addAll(new DefaultDataCollector(classesWithExplicitImporter, classesWithExplicitExporter)\n                 .collect(dataClasses));\n \n-        buildImporterDefs(classesWithExplicitImporter);\n+buildImporterDefs(classesWithExplicitImporter);\n         buildExporterDefs(classesWithExplicitExporter);\n \n         return InitState.INITIALIZED;\n@@ -121,13 +119,12 @@ public class DataPlugin extends AbstractSeedPlugin {\n         dataClasses.stream()\n                 .filter(dataSetClass -> !classesWithExplicitImporter.contains(dataSetClass))\n                 .forEach(this::buildImporterDef);\n-\n-        for (Class<? extends DataImporter> importerClass : importerClasses) {\n+for (Class<? extends DataImporter> importerClass : importerClasses) {\n             Class<?> importedClass = (Class<?>) BusinessUtils.resolveGenerics(DataImporter.class, importerClass)[0];\n             if (importedClass == null) {\n                 throw SeedException.createNew(DataErrorCode.MISSING_TYPE_PARAMETER)\n                         .put(\"class\", importerClass);\n-            }\n+    }\n             buildImporterDef(importedClass);\n         }\n     }\n@@ -137,10 +134,7 @@ public class DataPlugin extends AbstractSeedPlugin {\n         String group = dataSet == null ? getPackageName(importedClass) : dataSet.group();\n         String name = dataSet == null ? importedClass.getSimpleName() : dataSet.name();\n         importerDefs.computeIfAbsent(group, k -> new HashMap<>())\n-                .put(name, new DataImporterDefinition<>(\n-                        group,\n-                        name,\n-                        importedClass));\n+                .put(name, new DataImporterDefinition<>(group, name, importedClass));\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -148,13 +142,12 @@ public class DataPlugin extends AbstractSeedPlugin {\n         dataClasses.stream()\n                 .filter(dataSetClass -> !classesWithExplicitExporter.contains(dataSetClass))\n                 .forEach(this::buildExporterDef);\n-\n-        for (Class<? extends DataExporter> exporterClass : exporterClasses) {\n+for (Class<? extends DataExporter> exporterClass : exporterClasses) {\n             Class<?> exportedClass = (Class<?>) BusinessUtils.resolveGenerics(DataExporter.class, exporterClass)[0];\n             if (exportedClass == null) {\n                 throw SeedException.createNew(DataErrorCode.MISSING_TYPE_PARAMETER)\n                         .put(\"class\", exporterClass);\n-            }\n+    }\n             buildExporterDef(exportedClass);\n         }\n     }\n@@ -164,10 +157,7 @@ public class DataPlugin extends AbstractSeedPlugin {\n         String group = dataSet == null ? getPackageName(exportedClass) : dataSet.group();\n         String name = dataSet == null ? exportedClass.getSimpleName() : dataSet.name();\n         exporterDefs.computeIfAbsent(group, k -> new HashMap<>())\n-                .put(name, new DataExporterDefinition<>(\n-                        group,\n-                        name,\n-                        exportedClass));\n+                .put(name, new DataExporterDefinition<>(group, name, exportedClass));\n     }\n \n     private String getPackageName(Class<?> someClass) {\n@@ -204,11 +194,11 @@ public class DataPlugin extends AbstractSeedPlugin {\n                     if (dataStream != null) {\n                         if (!dataManager.isInitialized(dataImporterDefinition.getGroup(),\n                                 dataImporterDefinition.getName()) || dataConfig.isForceImport()) {\n-                            LOGGER.info(\"Importing initialization data for {}.{}\", dataImporterDefinition.getGroup(),\n+    LOGGER.info(\"Importing initialization data for {}.{}\", dataImporterDefinition.getGroup(),\n                                     dataImporterDefinition.getName());\n                             dataManager.importData(dataStream, dataImporterDefinition.getGroup(),\n                                     dataImporterDefinition.getName());\n-                        }\n+    }\n \n                         try {\n                             dataStream.close();\n@@ -220,4 +210,4 @@ public class DataPlugin extends AbstractSeedPlugin {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "86",
                    "column": "34",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "column": "34",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "column": "33",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "17",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "column": "79",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "column": "79",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "column": "79",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "column": "109",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 108, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "column": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "column": "79",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "column": "75",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 74, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "69",
                    "severity": "warning",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "column": "46",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "144",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "column": "33",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "145",
                    "column": "17",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "column": "79",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "column": "79",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "column": "79",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "column": "109",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 108, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "column": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "column": "79",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 78, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "column": "75",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 74, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "159",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "159",
                    "column": "69",
                    "severity": "warning",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "161",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "161",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "161",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "162",
                    "column": "46",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "189",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "column": "46",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 45, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "column": "46",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "191",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "column": "143",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 142, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "column": "143",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 295).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "192",
                    "column": "237",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 236, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 274).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "column": "241",
                    "severity": "warning",
                    "message": "'dataImporterDefinition' has incorrect indentation level 240, expected level should be 244.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 278).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 303).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "column": "237",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 236, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 260).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "column": "237",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 236, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "column": "237",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 394).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "198",
                    "column": "264",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 263, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "column": "264",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "198",
                    "column": "363",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 321).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "199",
                    "column": "268",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 267, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "column": "1",
                    "severity": "warning",
                    "message": "'dataImporterDefinition' has incorrect indentation level 0, expected level should be 275.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "column": "1",
                    "severity": "warning",
                    "message": "'dataImporterDefinition' has incorrect indentation level 0, expected level should be 275.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 371).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "column": "268",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 267, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 394).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "203",
                    "column": "394",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 393, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 268).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "column": "264",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 263, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 286).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "column": "268",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 267, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "206",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 264).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "column": "264",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 263, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "column": "1",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "209",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "column": "49",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "210",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 0, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "211",
                    "column": "237",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 236, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "212",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "212",
                    "column": "233",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 232, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "column": "139",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 138, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/61/DataPlugin.java\nindex abb74532619..7ad6734692c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/61/DataPlugin.java\n@@ -8,9 +8,10 @@\n package org.seedstack.business.internal.data;\n \n import static java.util.stream.Collectors.toSet;\n+\n import static org.seedstack.business.internal.utils.BusinessUtils.streamClasses;\n-import static org.seedstack.business.internal.utils.PluginUtils.associateInterfaceToImplementations;\n \n+import static org.seedstack.business.internal.utils.PluginUtils.associateInterfaceToImplementations;\n import com.google.common.collect.Lists;\n import com.google.inject.Key;\n import io.nuun.kernel.api.plugin.InitState;\n@@ -42,7 +43,9 @@ import org.seedstack.shed.ClassLoaders;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n public class DataPlugin extends AbstractSeedPlugin {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(DataPlugin.class);\n     private final Map<String, Map<String, DataImporterDefinition<?>>> importerDefs = new HashMap<>();\n     private final Map<String, Map<String, DataExporterDefinition<?>>> exporterDefs = new HashMap<>();\n@@ -52,6 +55,7 @@ public class DataPlugin extends AbstractSeedPlugin {\n     private final Map<Key<?>, Class<?>> bindings = new HashMap<>();\n     private final Map<Key<?>, Class<?>> overridingBindings = new HashMap<>();\n     private final Collection<BindingStrategy> bindingStrategies = new ArrayList<>();\n+\n     @Inject\n     private DataManager dataManager;\n \n@@ -68,29 +72,25 @@ public class DataPlugin extends AbstractSeedPlugin {\n     @Override\n     public Collection<ClasspathScanRequest> classpathScanRequests() {\n         return classpathScanRequestBuilder()\n-                .predicate(BusinessSpecifications.DATA_IMPORTER)\n-                .predicate(BusinessSpecifications.DATA_EXPORTER)\n-                .predicate(BusinessSpecifications.DATA_SET)\n-                .build();\n+            .predicate(BusinessSpecifications.DATA_IMPORTER)\n+            .predicate(BusinessSpecifications.DATA_EXPORTER)\n+            .predicate(BusinessSpecifications.DATA_SET)\n+            .build();\n     }\n \n     @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n     @Override\n     public InitState initialize(InitContext initContext) {\n         Map<Predicate<Class<?>>, Collection<Class<?>>> classesBySpec = initContext.scannedTypesByPredicate();\n-\n         streamClasses(classesBySpec.get(BusinessSpecifications.DATA_IMPORTER), DataImporter.class)\n-                .filter(importerClass -> !DefaultDataImporter.class.isAssignableFrom(importerClass))\n-                .forEach(importerClasses::add);\n+            .filter(importerClass-> ! DefaultDataImporter.class\n+                .isAssignableFrom(importerClass)).forEach(importerClasses::add);\n         LOGGER.debug(\"Data importers => {}\", importerClasses);\n-\n         streamClasses(classesBySpec.get(BusinessSpecifications.DATA_EXPORTER), DataExporter.class)\n-                .filter(exporterClass -> !DefaultDataExporter.class.isAssignableFrom(exporterClass))\n-                .forEach(exporterClasses::add);\n+            .filter(exporterClass-> ! DefaultDataExporter.class\n+                .isAssignableFrom(exporterClass)).forEach(exporterClasses::add);\n         LOGGER.debug(\"Data exporters => {}\", exporterClasses);\n-\n-        streamClasses(classesBySpec.get(BusinessSpecifications.DATA_SET), Object.class).forEach(\n-                dataClasses::add);\n+        streamClasses(classesBySpec.get(BusinessSpecifications.DATA_SET), Object.class).forEach(dataClasses::add);\n         LOGGER.debug(\"DTO classes with default importer/exporter => {}\", dataClasses);\n \n         // Add bindings for explicit data importers/exporters\n@@ -98,76 +98,68 @@ public class DataPlugin extends AbstractSeedPlugin {\n         overridingBindings.putAll(associateInterfaceToImplementations(DataImporter.class, importerClasses, true));\n         bindings.putAll(associateInterfaceToImplementations(DataExporter.class, exporterClasses, false));\n         overridingBindings.putAll(associateInterfaceToImplementations(DataExporter.class, exporterClasses, true));\n-\n         Set<Class<?>> classesWithExplicitImporter = importerClasses.stream()\n-                .map(importerClass -> (Class<?>) BusinessUtils.resolveGenerics(DataImporter.class, importerClass)[0])\n-                .collect(toSet());\n+            .map(importerClass-> (Class<?>) BusinessUtils.resolveGenerics(DataImporter.class, importerClass)[0])\n+            .collect(toSet());\n+\n         Set<Class<?>> classesWithExplicitExporter = exporterClasses.stream()\n-                .map(exporterClass -> (Class<?>) BusinessUtils.resolveGenerics(DataExporter.class, exporterClass)[0])\n-                .collect(toSet());\n+            .map(exporterClass-> (Class<?>) BusinessUtils.resolveGenerics(DataExporter.class, exporterClass)[0])\n+            .collect(toSet());\n \n         // Then add bindings for default data importers/exporters\n         bindingStrategies.addAll(new DefaultDataCollector(classesWithExplicitImporter, classesWithExplicitExporter)\n-                .collect(dataClasses));\n-\n+            .collect(dataClasses));\n         buildImporterDefs(classesWithExplicitImporter);\n         buildExporterDefs(classesWithExplicitExporter);\n-\n         return InitState.INITIALIZED;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private void buildImporterDefs(Set<Class<?>> classesWithExplicitImporter) {\n         dataClasses.stream()\n-                .filter(dataSetClass -> !classesWithExplicitImporter.contains(dataSetClass))\n-                .forEach(this::buildImporterDef);\n-\n-        for (Class<? extends DataImporter> importerClass : importerClasses) {\n-            Class<?> importedClass = (Class<?>) BusinessUtils.resolveGenerics(DataImporter.class, importerClass)[0];\n-            if (importedClass == null) {\n-                throw SeedException.createNew(DataErrorCode.MISSING_TYPE_PARAMETER)\n-                        .put(\"class\", importerClass);\n-            }\n-            buildImporterDef(importedClass);\n-        }\n+            .filter(dataSetClass-> ! classesWithExplicitImporter.contains(dataSetClass)).forEach(this\n+                :: buildImporterDef);\n+        for(Class<? extends DataImporter> importerClass :importerClasses) {\n+                                                                              Class<?> importedClass = (Class<?>) BusinessUtils.resolveGenerics(DataImporter.class, importerClass)[0];\n+                                                                              if(importedClass == null) {\n+                                                                                                            throw SeedException.createNew(DataErrorCode.MISSING_TYPE_PARAMETER)\n+                                                                                                                .put(\"class\", importerClass);\n+                                                                              }\n+                                                                              buildImporterDef(importedClass);\n+                                                                          }\n     }\n \n     private void buildImporterDef(Class<?> importedClass) {\n         DataSet dataSet = importedClass.getAnnotation(DataSet.class);\n-        String group = dataSet == null ? getPackageName(importedClass) : dataSet.group();\n-        String name = dataSet == null ? importedClass.getSimpleName() : dataSet.name();\n-        importerDefs.computeIfAbsent(group, k -> new HashMap<>())\n-                .put(name, new DataImporterDefinition<>(\n-                        group,\n-                        name,\n-                        importedClass));\n+\n+        String group = dataSet == null?getPackageName(importedClass): dataSet.group();\n+\n+        String name = dataSet == null?importedClass.getSimpleName(): dataSet.name();\n+        importerDefs.computeIfAbsent(group, k-> new HashMap<>()).put(name, new DataImporterDefinition<>(group, name, importedClass));\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private void buildExporterDefs(Set<Class<?>> classesWithExplicitExporter) {\n         dataClasses.stream()\n-                .filter(dataSetClass -> !classesWithExplicitExporter.contains(dataSetClass))\n-                .forEach(this::buildExporterDef);\n-\n-        for (Class<? extends DataExporter> exporterClass : exporterClasses) {\n-            Class<?> exportedClass = (Class<?>) BusinessUtils.resolveGenerics(DataExporter.class, exporterClass)[0];\n-            if (exportedClass == null) {\n-                throw SeedException.createNew(DataErrorCode.MISSING_TYPE_PARAMETER)\n-                        .put(\"class\", exporterClass);\n-            }\n-            buildExporterDef(exportedClass);\n-        }\n+            .filter(dataSetClass-> ! classesWithExplicitExporter.contains(dataSetClass)).forEach(this\n+                :: buildExporterDef);\n+        for(Class<? extends DataExporter> exporterClass :exporterClasses) {\n+                                                                              Class<?> exportedClass = (Class<?>) BusinessUtils.resolveGenerics(DataExporter.class, exporterClass)[0];\n+                                                                              if(exportedClass == null) {\n+                                                                                                            throw SeedException.createNew(DataErrorCode.MISSING_TYPE_PARAMETER)\n+                                                                                                                .put(\"class\", exporterClass);\n+                                                                              }\n+                                                                              buildExporterDef(exportedClass);\n+                                                                          }\n     }\n \n     private void buildExporterDef(Class<?> exportedClass) {\n         DataSet dataSet = exportedClass.getAnnotation(DataSet.class);\n-        String group = dataSet == null ? getPackageName(exportedClass) : dataSet.group();\n-        String name = dataSet == null ? exportedClass.getSimpleName() : dataSet.name();\n-        exporterDefs.computeIfAbsent(group, k -> new HashMap<>())\n-                .put(name, new DataExporterDefinition<>(\n-                        group,\n-                        name,\n-                        exportedClass));\n+\n+        String group = dataSet == null?getPackageName(exportedClass): dataSet.group();\n+\n+        String name = dataSet == null?exportedClass.getSimpleName(): dataSet.name();\n+        exporterDefs.computeIfAbsent(group, k-> new HashMap<>()).put(name, new DataExporterDefinition<>(group, name, exportedClass));\n     }\n \n     private String getPackageName(Class<?> someClass) {\n@@ -192,32 +184,33 @@ public class DataPlugin extends AbstractSeedPlugin {\n     @Override\n     public void start(Context context) {\n         BusinessConfig.DataConfig dataConfig = getConfiguration(BusinessConfig.DataConfig.class);\n-        ClassLoader classLoader = ClassLoaders.findMostCompleteClassLoader(DataPlugin.class);\n \n-        if (dataConfig.isImportOnStart()) {\n-            for (Map<String, DataImporterDefinition<?>> dataImporterDefinitionMap : importerDefs.values()) {\n-                for (DataImporterDefinition<?> dataImporterDefinition : dataImporterDefinitionMap.values()) {\n-                    String dataPath = String.format(\"META-INF/data/%s/%s.json\", dataImporterDefinition.getGroup(),\n-                            dataImporterDefinition.getName());\n-                    InputStream dataStream = classLoader.getResourceAsStream(dataPath);\n-\n-                    if (dataStream != null) {\n-                        if (!dataManager.isInitialized(dataImporterDefinition.getGroup(),\n-                                dataImporterDefinition.getName()) || dataConfig.isForceImport()) {\n-                            LOGGER.info(\"Importing initialization data for {}.{}\", dataImporterDefinition.getGroup(),\n-                                    dataImporterDefinition.getName());\n-                            dataManager.importData(dataStream, dataImporterDefinition.getGroup(),\n-                                    dataImporterDefinition.getName());\n-                        }\n-\n-                        try {\n-                            dataStream.close();\n-                        } catch (IOException e) {\n-                            LOGGER.warn(\"Unable to close data resource \" + dataPath, e);\n-                        }\n-                    }\n-                }\n-            }\n+        ClassLoader classLoader = ClassLoaders.findMostCompleteClassLoader(DataPlugin.class);\n+        if(dataConfig.isImportOnStart()) {\n+                                             for(Map<String, DataImporterDefinition<?>> dataImporterDefinitionMap :importerDefs.values()) {\n+                                                                                                                                              for(DataImporterDefinition<?> dataImporterDefinition :dataImporterDefinitionMap.values()) {\n+                                                                                                                                                                                                                                            String dataPath = String.format(\"META-INF/data/%s/%s.json\",\n+                                                                                                                                                                                                                                                dataImporterDefinition.getGroup(),\n+                                                                                                                                                                                                                                                    dataImporterDefinition.getName());\n+\n+                                                                                                                                                                                                                                            InputStream dataStream = classLoader.getResourceAsStream(dataPath);\n+                                                                                                                                                                                                                                            if(dataStream != null) {\n+                                                                                                                                                                                                                                                                       if(! dataManager.isInitialized(dataImporterDefinition.getGroup(), dataImporterDefinition.getName())|| dataConfig.isForceImport()) {\n+                                                                                                                                                                                                                                                                           LOGGER.info(\"Importing initialization data for {}.{}\",\n+dataImporterDefinition.getGroup(),\n+dataImporterDefinition.getName());\n+                                                                                                                                                                                                                                                                           dataManager.importData(dataStream, dataImporterDefinition.getGroup(), dataImporterDefinition.getName());\n+                                                                                                                                                                                                                                                                                                                                                                                                         }\n+                                                                                                                                                                                                                                                                       try {\n+                                                                                                                                                                                                                                                                           dataStream.close();\n+                                                                                                                                                                                                                                                                       }\n+\n+catch(IOException e) {\n+    LOGGER.warn(\"Unable to close data resource \"+ dataPath, e);\n+}\n+                                                                                                                                                                                                                                            }\n+                                                                                                                                                                                                                                        }\n+                                                                                                                                          }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 92
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/61/DataPlugin.java\nindex abb74532619..979a1a4adc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/61/DataPlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import static java.util.stream.Collectors.toSet;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/61/DataPlugin.java\nindex abb74532619..979a1a4adc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/61/DataPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/61/DataPlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import static java.util.stream.Collectors.toSet;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
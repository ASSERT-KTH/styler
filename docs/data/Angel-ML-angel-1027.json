{
    "project_name": "Angel-ML-angel",
    "error_id": "1027",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1027/PSStartUpConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1027/PSStartUpConfig.java\nindex 58e140ea2a6..3ba27c998dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1027/PSStartUpConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1027/PSStartUpConfig.java\n@@ -29,7 +29,7 @@ public class PSStartUpConfig {\n   private Map<String, String> config;\n \n   public PSStartUpConfig(int psNum, int psMemoryInMB, int psVcoreNum, int psAgentNum,\n-      int psAgentMemoryInMB, int psAgentVcoreNum, Map<String, String> config) {\n+                         int psAgentMemoryInMB, int psAgentVcoreNum, Map<String, String> config) {\n     this.psNum = psNum;\n     this.psMemoryInMB = psMemoryInMB;\n     this.psVcoreNum = psVcoreNum;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1027/PSStartUpConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1027/PSStartUpConfig.java\nindex 58e140ea2a6..3e52069d83b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1027/PSStartUpConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1027/PSStartUpConfig.java\n@@ -28,8 +28,7 @@ public class PSStartUpConfig {\n   private int psAgentVcoreNum;\n   private Map<String, String> config;\n \n-  public PSStartUpConfig(int psNum, int psMemoryInMB, int psVcoreNum, int psAgentNum,\n-      int psAgentMemoryInMB, int psAgentVcoreNum, Map<String, String> config) {\n+  public PSStartUpConfig(int psNum, int psMemoryInMB, int psVcoreNum, int psAgentNum, int psAgentMemoryInMB, int psAgentVcoreNum, Map<String, String> config) {\n     this.psNum = psNum;\n     this.psMemoryInMB = psMemoryInMB;\n     this.psVcoreNum = psVcoreNum;\n@@ -113,4 +112,4 @@ public class PSStartUpConfig {\n \n     return sb.toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 270).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1027/PSStartUpConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1027/PSStartUpConfig.java\nindex 58e140ea2a6..030632df44d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1027/PSStartUpConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1027/PSStartUpConfig.java\n@@ -20,6 +20,7 @@ import java.util.Map;\n import java.util.Map.Entry;\n \n public class PSStartUpConfig {\n+\n   private int psNum;\n   private int psMemoryInMB;\n   private int psVcoreNum;\n@@ -28,8 +29,7 @@ public class PSStartUpConfig {\n   private int psAgentVcoreNum;\n   private Map<String, String> config;\n \n-  public PSStartUpConfig(int psNum, int psMemoryInMB, int psVcoreNum, int psAgentNum,\n-      int psAgentMemoryInMB, int psAgentVcoreNum, Map<String, String> config) {\n+  public PSStartUpConfig(int psNum, int psMemoryInMB, int psVcoreNum, int psAgentNum, int psAgentMemoryInMB, int psAgentVcoreNum, Map<String, String> config) {\n     this.psNum = psNum;\n     this.psMemoryInMB = psMemoryInMB;\n     this.psVcoreNum = psVcoreNum;\n@@ -97,9 +97,7 @@ public class PSStartUpConfig {\n \n   @Override\n   public String toString() {\n-    return \"PSStartUpConfig [psNum=\" + psNum + \", psMemoryInMB=\" + psMemoryInMB + \", psVcoreNum=\"\n-        + psVcoreNum + \", psAgentNum=\" + psAgentNum + \", psAgentMemoryInMB=\" + psAgentMemoryInMB\n-        + \", psAgentVcoreNum=\" + psAgentVcoreNum + \", config=\" + mapToString(config) + \"]\";\n+    return \"PSStartUpConfig [psNum=\" + psNum + \", psMemoryInMB=\" + psMemoryInMB + \", psVcoreNum=\" + psVcoreNum + \", psAgentNum=\" + psAgentNum + \", psAgentMemoryInMB=\" + psAgentMemoryInMB + \", psAgentVcoreNum=\" + psAgentVcoreNum + \", config=\" + mapToString(config) + \"]\";\n   }\n \n   private String mapToString(Map<String, String> config) {\n@@ -110,7 +108,7 @@ public class PSStartUpConfig {\n       sb.append(entry.getValue());\n       sb.append(\"\\n\");\n     }\n-\n     return sb.toString();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "451",
    "information": {
        "errors": [
            {
                "line": "12",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private int checkPointId;\n\n  public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId, ParameterServerId psId) {\n    super(userRequestId, psId);\n    this.matrixId = matrixId;\n    this.checkPointId = checkPointId;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/451/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/451/CheckpointPSRequest.java\nindex 98eb0a374a4..4ac08411ae7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/451/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/451/CheckpointPSRequest.java\n@@ -9,7 +9,8 @@ public class CheckpointPSRequest extends PSRequest {\n   private int matrixId;\n   private int checkPointId;\n \n-  public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId, ParameterServerId psId) {\n+  public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId,\n+                             ParameterServerId psId) {\n     super(userRequestId, psId);\n     this.matrixId = matrixId;\n     this.checkPointId = checkPointId;\n@@ -40,19 +41,22 @@ public class CheckpointPSRequest extends PSRequest {\n     return 0;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+  public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(matrixId);\n     buf.writeInt(checkPointId);\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     matrixId = buf.readInt();\n     checkPointId = buf.readInt();\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+  public int bufferLen() {\n     return 4 + 4 + super.bufferLen();\n   }\n \n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/451/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/451/CheckpointPSRequest.java\nindex 98eb0a374a4..5531520ab47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/451/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/451/CheckpointPSRequest.java\n@@ -40,19 +40,22 @@ public class CheckpointPSRequest extends PSRequest {\n     return 0;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(matrixId);\n     buf.writeInt(checkPointId);\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     matrixId = buf.readInt();\n     checkPointId = buf.readInt();\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+public int bufferLen() {\n     return 4 + 4 + super.bufferLen();\n   }\n \n@@ -65,4 +68,4 @@ public class CheckpointPSRequest extends PSRequest {\n   public boolean timeoutEnable() {\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/451/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/451/CheckpointPSRequest.java\nindex 98eb0a374a4..8e3906e1182 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/451/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/451/CheckpointPSRequest.java\n@@ -40,19 +40,22 @@ public class CheckpointPSRequest extends PSRequest {\n     return 0;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+  public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(matrixId);\n     buf.writeInt(checkPointId);\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     matrixId = buf.readInt();\n     checkPointId = buf.readInt();\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+  public int bufferLen() {\n     return 4 + 4 + super.bufferLen();\n   }\n \n@@ -65,4 +68,5 @@ public class CheckpointPSRequest extends PSRequest {\n   public boolean timeoutEnable() {\n     return false;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
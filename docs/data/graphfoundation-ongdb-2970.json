{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2970",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2970/TopLevelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2970/TopLevelTransaction.java\nindex 95db78dce70..c0693c62dc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2970/TopLevelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2970/TopLevelTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import java.util.Optional;\n@@ -40,111 +41,107 @@ import org.neo4j.kernel.api.exceptions.Status.Code;\n \n public class TopLevelTransaction implements InternalTransaction\n {\n-    private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n-    private boolean successCalled;\n-    private final KernelTransaction transaction;\n+  private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n+  private boolean successCalled;\n+  private final KernelTransaction transaction;\n \n-    public TopLevelTransaction( KernelTransaction transaction, Supplier<Statement> stmt )\n-    {\n-        this.transaction = transaction;\n-    }\n+  public TopLevelTransaction(KernelTransaction transaction, Supplier<Statement> stmt)\n+  {\n+    this.transaction = transaction;\n+  }\n \n-    @Override\n-    public void failure()\n-    {\n-        transaction.failure();\n-    }\n+  @Override\n+  public void failure()\n+  {\n+    transaction.failure();\n+  }\n \n-    @Override\n-    public void success()\n-    {\n-        successCalled = true;\n-        transaction.success();\n-    }\n+  @Override\n+  public void success()\n+  {\n+    successCalled = true;\n+    transaction.success();\n+  }\n \n-    @Override\n-    public final void terminate()\n-    {\n-        this.transaction.markForTermination( Status.Transaction.Terminated );\n-    }\n+  @Override\n+  public final void terminate()\n+  {\n+    this.transaction.markForTermination(Status.Transaction.Terminated);\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    try\n     {\n-        try\n-        {\n-            if ( transaction.isOpen() )\n-            {\n-                transaction.close();\n-            }\n-        }\n-        catch ( TransientFailureException e )\n-        {\n-            // We let transient exceptions pass through unchanged since they aren't really transaction failures\n-            // in the same sense as unexpected failures are. Such exception signals that the transaction\n-            // can be retried and might be successful the next time.\n-            throw e;\n-        }\n-        catch ( ConstraintViolationTransactionFailureException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( KernelException | TransactionTerminatedException e )\n-        {\n-            Code statusCode = e.status().code();\n-            if ( statusCode.classification() == Classification.TransientError )\n-            {\n-                throw new TransientTransactionFailureException(\n-                        closeFailureMessage() + \": \" + statusCode.description(), e );\n-            }\n-            throw new TransactionFailureException( closeFailureMessage(), e );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new TransactionFailureException( closeFailureMessage(), e );\n-        }\n-    }\n-\n-    private String closeFailureMessage()\n+      if (transaction.isOpen())\n+      {\n+        transaction.close();\n+      }\n+    } catch (TransientFailureException e)\n     {\n-        return successCalled\n-                        ? \"Transaction was marked as successful, but unable to commit transaction so rolled back.\"\n-                        : \"Unable to rollback transaction\";\n-    }\n-\n-    @Override\n-    public Lock acquireWriteLock( PropertyContainer entity )\n+      // We let transient exceptions pass through unchanged since they aren't really transaction failures\n+      // in the same sense as unexpected failures are. Such exception signals that the transaction\n+      // can be retried and might be successful the next time.\n+      throw e;\n+    } catch (ConstraintViolationTransactionFailureException e)\n     {\n-        return locker.exclusiveLock( transaction, entity );\n-    }\n-\n-    @Override\n-    public Lock acquireReadLock( PropertyContainer entity )\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (KernelException | TransactionTerminatedException e)\n     {\n-        return locker.sharedLock(transaction, entity);\n-    }\n-\n-    @Override\n-    public KernelTransaction.Type transactionType()\n+      Code statusCode = e.status().code();\n+      if (statusCode.classification() == Classification.TransientError)\n+      {\n+        throw new TransientTransactionFailureException(\n+            closeFailureMessage() + \": \" + statusCode.description(), e);\n+      }\n+      throw new TransactionFailureException(closeFailureMessage(), e);\n+    } catch (Exception e)\n     {\n-        return transaction.transactionType();\n+      throw new TransactionFailureException(closeFailureMessage(), e);\n     }\n+  }\n \n-    @Override\n-    public SecurityContext securityContext()\n-    {\n-        return transaction.securityContext();\n-    }\n+  private String closeFailureMessage()\n+  {\n+    return successCalled\n+        ? \"Transaction was marked as successful, but unable to commit transaction so rolled back.\"\n+        : \"Unable to rollback transaction\";\n+  }\n \n-    @Override\n-    public KernelTransaction.Revertable overrideWith( SecurityContext context )\n-    {\n-        return transaction.overrideWith( context );\n-    }\n+  @Override\n+  public Lock acquireWriteLock(PropertyContainer entity)\n+  {\n+    return locker.exclusiveLock(transaction, entity);\n+  }\n \n-    @Override\n-    public Optional<Status> terminationReason()\n-    {\n-        return transaction.getReasonIfTerminated();\n-    }\n+  @Override\n+  public Lock acquireReadLock(PropertyContainer entity)\n+  {\n+    return locker.sharedLock(transaction, entity);\n+  }\n+\n+  @Override\n+  public KernelTransaction.Type transactionType()\n+  {\n+    return transaction.transactionType();\n+  }\n+\n+  @Override\n+  public SecurityContext securityContext()\n+  {\n+    return transaction.securityContext();\n+  }\n+\n+  @Override\n+  public KernelTransaction.Revertable overrideWith(SecurityContext context)\n+  {\n+    return transaction.overrideWith(context);\n+  }\n+\n+  @Override\n+  public Optional<Status> terminationReason()\n+  {\n+    return transaction.getReasonIfTerminated();\n+  }\n }\n",
            "diff_size": 125
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2970/TopLevelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2970/TopLevelTransaction.java\nindex 95db78dce70..9e108826fec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2970/TopLevelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2970/TopLevelTransaction.java\n@@ -94,8 +94,7 @@ public class TopLevelTransaction implements InternalTransaction\n             Code statusCode = e.status().code();\n             if ( statusCode.classification() == Classification.TransientError )\n             {\n-                throw new TransientTransactionFailureException(\n-                        closeFailureMessage() + \": \" + statusCode.description(), e );\n+                throw new TransientTransactionFailureException( closeFailureMessage() + \": \" + statusCode.description(), e );\n             }\n             throw new TransactionFailureException( closeFailureMessage(), e );\n         }\n@@ -107,9 +106,7 @@ public class TopLevelTransaction implements InternalTransaction\n \n     private String closeFailureMessage()\n     {\n-        return successCalled\n-                        ? \"Transaction was marked as successful, but unable to commit transaction so rolled back.\"\n-                        : \"Unable to rollback transaction\";\n+        return successCalled ? \"Transaction was marked as successful, but unable to commit transaction so rolled back.\" : \"Unable to rollback transaction\";\n     }\n \n     @Override\n@@ -121,7 +118,7 @@ public class TopLevelTransaction implements InternalTransaction\n     @Override\n     public Lock acquireReadLock( PropertyContainer entity )\n     {\n-        return locker.sharedLock(transaction, entity);\n+        return locker.sharedLock( transaction, entity );\n     }\n \n     @Override\n@@ -147,4 +144,4 @@ public class TopLevelTransaction implements InternalTransaction\n     {\n         return transaction.getReasonIfTerminated();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
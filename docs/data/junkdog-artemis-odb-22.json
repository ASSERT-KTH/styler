{
    "project_name": "junkdog-artemis-odb",
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "40",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 108).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public String signature() {\n        if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n        return returnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/22/MethodDescriptor.java\nindex b18babd75c0..4fac93de1de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/22/MethodDescriptor.java\n@@ -37,7 +37,7 @@ public class MethodDescriptor {\n     }\n \n     public String signature() {\n-        if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n+    if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n         return returnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/22/MethodDescriptor.java\nindex b18babd75c0..df1d82218da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/22/MethodDescriptor.java\n@@ -12,7 +12,9 @@ import java.util.List;\n public class MethodDescriptor {\n \n     public String name;\n-    /** optional */\n+    /**\n+     * optional\n+     */\n     public Type returnType;\n     public List<String> statements = new ArrayList<String>();\n     public List<ParameterDescriptor> parameters = new ArrayList<ParameterDescriptor>();\n@@ -37,14 +39,16 @@ public class MethodDescriptor {\n     }\n \n     public String signature() {\n-        if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n-        return returnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n+        if (returnType instanceof Class) {\n+            return ((Class) returnType).getCanonicalName() + \" \" + name + \"()\";\n+        }\n+        return returnType.toString() + \" \" + name + \"(\" + parameterSignature() + \")\";\n     }\n \n     private String parameterSignature() {\n         String s = \"\";\n         for (ParameterDescriptor parameter : parameters) {\n-            s = s + ( !s.isEmpty() ? \",\" : \"\" ) + parameter.signature();\n+            s = s + (!s.isEmpty() ? \",\" : \"\") + parameter.signature();\n         }\n         return s;\n     }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/22/MethodDescriptor.java\nindex b18babd75c0..2ef6f265530 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/22/MethodDescriptor.java\n@@ -10,8 +10,7 @@ import java.util.List;\n  * @author Daan van Yperen\n  */\n public class MethodDescriptor {\n-\n-    public String name;\n+\tpublic String name;\n     /** optional */\n     public Type returnType;\n     public List<String> statements = new ArrayList<String>();\n@@ -22,10 +21,9 @@ public class MethodDescriptor {\n \n \n     public MethodDescriptor(Type returnType, String name) {\n-        this.returnType = returnType\n-        ;\n+\tthis.returnType = returnType;\n         this.name = name;\n-    }\n+\t}\n \n     public void addStatement(String statement) {\n         statements.add(statement);\n@@ -33,47 +31,47 @@ public class MethodDescriptor {\n \n     @Override\n     public String toString() {\n-        return signature();\n+\treturn signature();\n     }\n \n     public String signature() {\n-        if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n-        return returnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n-    }\n+\tif (returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n+        return returnType.toString() + \" \" + name + \"(\"+parameterSignature() +\")\";\n+\t}\n \n     private String parameterSignature() {\n         String s = \"\";\n         for (ParameterDescriptor parameter : parameters) {\n-            s = s + ( !s.isEmpty() ? \",\" : \"\" ) + parameter.signature();\n-        }\n+            s = s + (!s.isEmpty() ? \",\" : \"\") + parameter.signature();\n+\t}\n         return s;\n-    }\n+\t}\n \n     public void addParameter(ParameterDescriptor parameter) {\n         parameters.add(parameter);\n     }\n \n     public void setStatic(boolean value) {\n-        this.isStatic = value;\n-    }\n+\tthis.isStatic = value;\n+\t}\n \n     public boolean isStatic() {\n-        return isStatic;\n-    }\n+\treturn isStatic;\n+\t}\n \n     public void setAccessLevel(AccessLevel accessLevel) {\n-        this.accessLevel = accessLevel;\n-    }\n+\tthis.accessLevel = accessLevel;\n+\t}\n \n     public AccessLevel getAccessLevel() {\n-        return accessLevel;\n-    }\n+\treturn accessLevel;\n+\t}\n \n     public void setDebugNotes(String debugNotes) {\n-        this.debugNotes = debugNotes;\n-    }\n+\tthis.debugNotes = debugNotes;\n+\t}\n \n     public String getDebugNotes() {\n-        return debugNotes;\n+\treturn debugNotes;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/22/MethodDescriptor.java\nindex b18babd75c0..59ae853df86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/22/MethodDescriptor.java\n@@ -9,71 +9,84 @@ import java.util.List;\n  *\n  * @author Daan van Yperen\n  */\n-public class MethodDescriptor {\n \n-    public String name;\n+public class MethodDescriptor {\n+ public String name;\n     /** optional */\n-    public Type returnType;\n-    public List<String> statements = new ArrayList<String>();\n-    public List<ParameterDescriptor> parameters = new ArrayList<ParameterDescriptor>();\n-    private boolean isStatic;\n-    private AccessLevel accessLevel = AccessLevel.PUBLIC;\n-    private String debugNotes;\n-\n-\n-    public MethodDescriptor(Type returnType, String name) {\n-        this.returnType = returnType\n-        ;\n-        this.name = name;\n-    }\n-\n-    public void addStatement(String statement) {\n-        statements.add(statement);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return signature();\n-    }\n-\n-    public String signature() {\n-        if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n-        return returnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n-    }\n-\n-    private String parameterSignature() {\n-        String s = \"\";\n-        for (ParameterDescriptor parameter : parameters) {\n-            s = s + ( !s.isEmpty() ? \",\" : \"\" ) + parameter.signature();\n-        }\n-        return s;\n-    }\n-\n-    public void addParameter(ParameterDescriptor parameter) {\n-        parameters.add(parameter);\n-    }\n-\n-    public void setStatic(boolean value) {\n-        this.isStatic = value;\n-    }\n-\n-    public boolean isStatic() {\n-        return isStatic;\n-    }\n-\n-    public void setAccessLevel(AccessLevel accessLevel) {\n-        this.accessLevel = accessLevel;\n-    }\n-\n-    public AccessLevel getAccessLevel() {\n-        return accessLevel;\n-    }\n-\n-    public void setDebugNotes(String debugNotes) {\n-        this.debugNotes = debugNotes;\n-    }\n-\n-    public String getDebugNotes() {\n-        return debugNotes;\n-    }\n-}\n+ public Type returnType;\n+ public List<String> statements = new ArrayList<String>();\n+ public List<ParameterDescriptor> parameters = new ArrayList<ParameterDescriptor>();\n+\n+ private boolean isStatic;\n+\n+ private AccessLevel accessLevel = AccessLevel.PUBLIC;\n+\n+ private String debugNotes;\n+\n+ public MethodDescriptor(Type returnType, String name) {\n+  this.returnType = returnType;\n+  this.name = name;\n+ }\n+\n+ public void addStatement(String statement) {\n+  statements.add(statement);\n+ }\n+\n+ @Override\n+ public String toString() {\n+  return signature();\n+ }\n+\n+\n+ public String signature() {\n+  if (returnType instanceof Class)\n+   return ((Class) returnType).getCanonicalName() + \" \" + name + \"()\";\n+  return returnType.toString() + \" \" + name + \"(\" + parameterSignature() + \")\";\n+ }\n+\n+ private String parameterSignature() {\n+  String s = \"\";\n+  for (ParameterDescriptor parameter : parameters) {\n+   s = s + (!s.isEmpty()\n+            ? \",\"\n+            : \"\") + parameter.signature();\n+  }\n+\n+  return s;\n+ }\n+\n+\n+ public void addParameter(ParameterDescriptor parameter) {\n+  parameters.add(parameter);\n+ }\n+\n+\n+ public void setStatic(boolean value) {\n+  this.isStatic = value;\n+ }\n+\n+\n+ public boolean isStatic() {\n+  return isStatic;\n+ }\n+\n+\n+ public void setAccessLevel(AccessLevel accessLevel) {\n+  this.accessLevel = accessLevel;\n+ }\n+\n+\n+ public AccessLevel getAccessLevel() {\n+  return accessLevel;\n+ }\n+\n+\n+ public void setDebugNotes(String debugNotes) {\n+  this.debugNotes = debugNotes;\n+ }\n+\n+\n+ public String getDebugNotes() {\n+  return debugNotes;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 80
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/22/MethodDescriptor.java\nindex b18babd75c0..4fac93de1de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/22/MethodDescriptor.java\n@@ -37,7 +37,7 @@ public class MethodDescriptor {\n     }\n \n     public String signature() {\n-        if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n+    if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n         return returnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/22/MethodDescriptor.java\nindex b18babd75c0..3433d4a6eb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/22/MethodDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/22/MethodDescriptor.java\n@@ -37,8 +37,7 @@ public class MethodDescriptor {\n     }\n \n     public String signature() {\n-        if ( returnType instanceof Class) return ((Class)returnType).getCanonicalName() + \" \" + name + \"()\";\n-        return returnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n+\t\t\t\t\tif (returnTypeinstanceofClass)return(( Class )returnType).getCanonicalName() + \" \" + name+\"()\";returnreturnType.toStringreturnType.toString() + \" \" + name + \"(\"+parameterSignature()+\")\";\n     }\n \n     private String parameterSignature() {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "styler_three_grams"
    ]
}
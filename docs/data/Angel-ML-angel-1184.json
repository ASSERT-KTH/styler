{
    "project_name": "Angel-ML-angel",
    "error_id": "1184",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1184/PartUpdateRowsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1184/PartUpdateRowsParam.java\nindex aff70e8f897..56133a7c2d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1184/PartUpdateRowsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1184/PartUpdateRowsParam.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.matrix.psf.update.update;\n \n import com.tencent.angel.PartitionKey;\n@@ -45,8 +44,7 @@ public class PartUpdateRowsParam extends PartitionUpdateParam {\n     return updates;\n   }\n \n-  public void setUpdates(\n-      List<RowUpdateSplit> updates) {\n+  public void setUpdates(List<RowUpdateSplit> updates) {\n     this.updates = updates;\n   }\n \n@@ -94,4 +92,4 @@ public class PartUpdateRowsParam extends PartitionUpdateParam {\n     }\n     return len;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1184/PartUpdateRowsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1184/PartUpdateRowsParam.java\nindex aff70e8f897..d4be51d3501 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1184/PartUpdateRowsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1184/PartUpdateRowsParam.java\n@@ -45,21 +45,19 @@ public class PartUpdateRowsParam extends PartitionUpdateParam {\n     return updates;\n   }\n \n-  public void setUpdates(\n-      List<RowUpdateSplit> updates) {\n+  public void setUpdates(List<RowUpdateSplit> updates) {\n     this.updates = updates;\n   }\n \n   @Override\n   public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n+\n     int size = updates.size();\n     buf.writeInt(size);\n-\n     RowUpdateSplitContext context = new RowUpdateSplitContext();\n     context.setEnableFilter(false);\n     context.setPartKey(getPartKey());\n-\n     for (int i = 0; i < size; i++) {\n       buf.writeInt(updates.get(i).getRowType().getNumber());\n       updates.get(i).setSplitContext(context);\n@@ -70,9 +68,9 @@ public class PartUpdateRowsParam extends PartitionUpdateParam {\n   @Override\n   public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n+\n     int size = buf.readInt();\n     updates = new ArrayList<>(size);\n-\n     RowUpdateSplitContext context = new RowUpdateSplitContext();\n     context.setPartKey(getPartKey());\n     for (int i = 0; i < size; i++) {\n@@ -87,6 +85,7 @@ public class PartUpdateRowsParam extends PartitionUpdateParam {\n   public int bufferLen() {\n     int len = super.bufferLen();\n     len += 4;\n+\n     int size = updates.size();\n     for (int i = 0; i < size; i++) {\n       len += 4;\n@@ -94,4 +93,4 @@ public class PartUpdateRowsParam extends PartitionUpdateParam {\n     }\n     return len;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
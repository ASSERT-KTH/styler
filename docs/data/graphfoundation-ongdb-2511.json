{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2511",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "25",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "25",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "26",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "26",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "40",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2511/CRSTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2511/CRSTable.java\nindex bf8940c2c64..033981b4c8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2511/CRSTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2511/CRSTable.java\n@@ -17,58 +17,58 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n public enum CRSTable\n {\n-    CUSTOM( \"custom\", 0 ),\n-    EPSG( \"epsg\", 1 ),\n-    SR_ORG( \"sr-org\", 2 );\n+  CUSTOM(\"custom\", 0),\n+  EPSG(\"epsg\", 1),\n+  SR_ORG(\"sr-org\", 2);\n \n-    private static final CRSTable[] TYPES = CRSTable.values();\n+  private static final CRSTable[] TYPES = CRSTable.values();\n \n-    private final String prefix;\n+  private final String prefix;\n \n-    public static CRSTable find( int tableId )\n+  public static CRSTable find(int tableId)\n+  {\n+    if (tableId < TYPES.length)\n+    {\n+      return TYPES[tableId];\n+    } else\n     {\n-        if ( tableId < TYPES.length )\n-        {\n-            return TYPES[tableId];\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException( \"No known Coordinate Reference System table: \" + tableId );\n-        }\n+      throw new IllegalArgumentException(\"No known Coordinate Reference System table: \" + tableId);\n     }\n+  }\n \n-    private final String name;\n-    private final int tableId;\n+  private final String name;\n+  private final int tableId;\n \n-    CRSTable( String name, int tableId )\n-    {\n-        assert lowerCase( name );\n-        this.name = name;\n-        this.tableId = tableId;\n-        this.prefix = tableId == 0 ? \"crs://\" + name + \"/\" : \"http://spatialreference.org/ref/\" + name + \"/\";\n-    }\n+  CRSTable(String name, int tableId)\n+  {\n+    assert lowerCase(name);\n+    this.name = name;\n+    this.tableId = tableId;\n+    this.prefix = tableId == 0 ? \"crs://\" + name + \"/\" : \"http://spatialreference.org/ref/\" + name + \"/\";\n+  }\n \n-    public String href( int code )\n-    {\n-        return prefix + code + \"/\";\n-    }\n+  public String href(int code)\n+  {\n+    return prefix + code + \"/\";\n+  }\n \n-    private boolean lowerCase( String string )\n-    {\n-        return string.toLowerCase().equals( string );\n-    }\n+  private boolean lowerCase(String string)\n+  {\n+    return string.toLowerCase().equals(string);\n+  }\n \n-    public String getName()\n-    {\n-        return name;\n-    }\n+  public String getName()\n+  {\n+    return name;\n+  }\n \n-    public int getTableId()\n-    {\n-        return tableId;\n-    }\n+  public int getTableId()\n+  {\n+    return tableId;\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2511/CRSTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2511/CRSTable.java\nindex bf8940c2c64..a6610cdda64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2511/CRSTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2511/CRSTable.java\n@@ -21,9 +21,7 @@ package org.neo4j.values.storable;\n \n public enum CRSTable\n {\n-    CUSTOM( \"custom\", 0 ),\n-    EPSG( \"epsg\", 1 ),\n-    SR_ORG( \"sr-org\", 2 );\n+    CUSTOM( \"custom\", 0 ), EPSG( \"epsg\", 1 ), SR_ORG( \"sr-org\", 2 );\n \n     private static final CRSTable[] TYPES = CRSTable.values();\n \n@@ -71,4 +69,4 @@ public enum CRSTable\n     {\n         return tableId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2511/CRSTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2511/CRSTable.java\nindex bf8940c2c64..858d0848fa8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2511/CRSTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2511/CRSTable.java\n@@ -20,55 +20,52 @@\n package org.neo4j.values.storable;\n \n public enum CRSTable\n-{\n-    CUSTOM( \"custom\", 0 ),\n-    EPSG( \"epsg\", 1 ),\n-    SR_ORG( \"sr-org\", 2 );\n+{ CUSTOM( \"custom\", 0 ), EPSG( \"epsg\", 1 ), SR_ORG( \"sr-org\", 2 )\n+  ;\n+      private static final CRSTable[] TYPES = CRSTable.values();\n+      private final String prefix;\n \n-    private static final CRSTable[] TYPES = CRSTable.values();\n+      public static CRSTable find( int tableId )\n+      {\n+          if ( tableId < TYPES.length )\n+          {\n+              return TYPES[ tableId];\n+          }\n+          else\n+          {\n+              throw new IllegalArgumentException( \"No known Coordinate Reference System table: \" + tableId );\n+          }\n+      }\n \n-    private final String prefix;\n+      private final String name;\n+      private final int tableId;\n \n-    public static CRSTable find( int tableId )\n-    {\n-        if ( tableId < TYPES.length )\n-        {\n-            return TYPES[tableId];\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException( \"No known Coordinate Reference System table: \" + tableId );\n-        }\n-    }\n+      CRSTable( String name, int tableId )\n+      {\n+          assert lowerCase( name );\n+          this.name = name;\n+          this.tableId = tableId;\n+          this.prefix = tableId == 0 ? \"crs://\" + name + \"/\" : \"http://spatialreference.org/ref/\" + name + \"/\";\n+      }\n \n-    private final String name;\n-    private final int tableId;\n+      public String href( int code )\n+      {\n+          return prefix + code + \"/\";\n+      }\n \n-    CRSTable( String name, int tableId )\n-    {\n-        assert lowerCase( name );\n-        this.name = name;\n-        this.tableId = tableId;\n-        this.prefix = tableId == 0 ? \"crs://\" + name + \"/\" : \"http://spatialreference.org/ref/\" + name + \"/\";\n-    }\n+      private boolean lowerCase( String string )\n+      {\n+          return string.toLowerCase().equals( string );\n+      }\n \n-    public String href( int code )\n-    {\n-        return prefix + code + \"/\";\n-    }\n+      public String getName()\n+      {\n+          return name;\n+      }\n \n-    private boolean lowerCase( String string )\n-    {\n-        return string.toLowerCase().equals( string );\n-    }\n+      public int getTableId()\n+      {\n+          return tableId;\n+      }\n \n-    public String getName()\n-    {\n-        return name;\n-    }\n-\n-    public int getTableId()\n-    {\n-        return tableId;\n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 57
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
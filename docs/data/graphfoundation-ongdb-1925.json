{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1925",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1925/SourceCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1925/SourceCode.java\nindex d3ed5817e4f..5ded399a0f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1925/SourceCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1925/SourceCode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.io.IOException;\n@@ -42,173 +43,171 @@ import static org.neo4j.codegen.source.ClasspathHelper.fullClasspathStringFor;\n \n public enum SourceCode implements CodeGeneratorOption\n {\n-    SIMPLIFY_TRY_WITH_RESOURCE;\n-    public static final CodeGenerationStrategy<?> SOURCECODE = new CodeGenerationStrategy<Configuration>()\n+  SIMPLIFY_TRY_WITH_RESOURCE;\n+  public static final CodeGenerationStrategy<?> SOURCECODE = new CodeGenerationStrategy<Configuration>()\n+  {\n+    @Override\n+    protected Configuration createConfigurator(ClassLoader loader)\n+    {\n+      return new Configuration().withOptions(\"-classpath\", fullClasspathStringFor(loader));\n+    }\n+\n+    @Override\n+    protected CodeGenerator createCodeGenerator(ClassLoader loader, Configuration configuration)\n+        throws CodeGenerationStrategyNotSupportedException\n+    {\n+      return new SourceCodeGenerator(loader, configuration, configuration.sourceCompilerFor(this));\n+    }\n+\n+    @Override\n+    protected String name()\n+    {\n+      return \"SOURCECODE\";\n+    }\n+  };\n+  public static final CodeGeneratorOption PRINT_SOURCE = new SourceVisitor()\n+  {\n+    @Override\n+    protected void visitSource(TypeReference reference, CharSequence sourceCode)\n+    {\n+      System.out.println(\"=== Generated class \" + reference.fullName() + \" ===\\n\" + sourceCode);\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+      return \"PRINT_SOURCE\";\n+    }\n+  };\n+  static final CodeGeneratorOption USE_JDK_JAVA_COMPILER = JdkCompiler.FACTORY;\n+  public static final CodeGeneratorOption PRINT_WARNINGS = printWarningsTo(System.err);\n+\n+  private static CodeGeneratorOption printWarningsTo(PrintStream err)\n+  {\n+    return new PrintWarningsOption(err);\n+  }\n+\n+  public static CodeGeneratorOption annotationProcessor(Processor processor)\n+  {\n+    return new AnnotationProcessorOption(requireNonNull(processor));\n+  }\n+\n+  public static CodeGeneratorOption sourceLocation(Path path)\n+  {\n+    return new SourceLocationOption(requireNonNull(path));\n+  }\n+\n+  public static CodeGeneratorOption temporarySourceCodeLocation()\n+  {\n+    try\n+    {\n+      return new SourceLocationOption(Files.createTempDirectory(null));\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(\"Failed to create temporary directory.\", e);\n+    }\n+  }\n+\n+  @Override\n+  public void applyTo(Object target)\n+  {\n+    if (target instanceof Configuration)\n+    {\n+      ((Configuration) target).withFlag(this);\n+    }\n+  }\n+\n+  private static class AnnotationProcessorOption implements CodeGeneratorOption\n+  {\n+    private final Processor processor;\n+\n+    AnnotationProcessorOption(Processor processor)\n+    {\n+      this.processor = processor;\n+    }\n+\n+    @Override\n+    public void applyTo(Object target)\n+    {\n+      if (target instanceof Configuration)\n+      {\n+        ((Configuration) target).withAnnotationProcessor(processor);\n+      }\n+    }\n+\n+    @Override\n+    public String toString()\n     {\n-        @Override\n-        protected Configuration createConfigurator( ClassLoader loader )\n-        {\n-            return new Configuration().withOptions( \"-classpath\", fullClasspathStringFor( loader ) );\n-        }\n+      return \"annotationProcessor( \" + processor + \" )\";\n+    }\n+  }\n \n-        @Override\n-        protected CodeGenerator createCodeGenerator( ClassLoader loader, Configuration configuration )\n-                throws CodeGenerationStrategyNotSupportedException\n-        {\n-            return new SourceCodeGenerator( loader, configuration, configuration.sourceCompilerFor( this ) );\n-        }\n+  private static class SourceLocationOption extends SourceVisitor\n+  {\n+    private final Path path;\n \n-        @Override\n-        protected String name()\n-        {\n-            return \"SOURCECODE\";\n-        }\n-    };\n-    public static final CodeGeneratorOption PRINT_SOURCE = new SourceVisitor()\n+    SourceLocationOption(Path path)\n     {\n-        @Override\n-        protected void visitSource( TypeReference reference, CharSequence sourceCode )\n-        {\n-            System.out.println( \"=== Generated class \" + reference.fullName() + \" ===\\n\" + sourceCode );\n-        }\n+      this.path = path;\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+      return \"sourceLocation( \" + path + \" )\";\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"PRINT_SOURCE\";\n-        }\n-    };\n-    static final CodeGeneratorOption USE_JDK_JAVA_COMPILER = JdkCompiler.FACTORY;\n-    public static final CodeGeneratorOption PRINT_WARNINGS = printWarningsTo( System.err );\n+    @Override\n+    protected void visitSource(TypeReference reference, CharSequence sourceCode)\n+    {\n+      try\n+      {\n+        Path location = path(reference);\n+        Files.createDirectories(location.getParent());\n+        Files.write(location, Collections.singletonList(sourceCode), Charset.defaultCharset());\n+      } catch (IOException e)\n+      {\n+        throw new RuntimeException(\"Failed to write source code\", e);\n+      }\n+    }\n \n-    private static CodeGeneratorOption printWarningsTo( PrintStream err )\n+    private Path path(TypeReference reference)\n     {\n-        return new PrintWarningsOption( err );\n+      return path.resolve(reference.packageName().replace('.', '/') + \"/\" + reference.name() + \".java\");\n     }\n+  }\n+\n+  private static class PrintWarningsOption implements CodeGeneratorOption, WarningsHandler\n+  {\n+    private final PrintStream target;\n \n-    public static CodeGeneratorOption annotationProcessor( Processor processor )\n+    PrintWarningsOption(PrintStream target)\n     {\n-        return new AnnotationProcessorOption( requireNonNull( processor ) );\n+      this.target = target;\n     }\n \n-    public static CodeGeneratorOption sourceLocation( Path path )\n+    @Override\n+    public void applyTo(Object target)\n     {\n-        return new SourceLocationOption( requireNonNull( path ) );\n+      if (target instanceof Configuration)\n+      {\n+        ((Configuration) target).withWarningsHandler(this);\n+      }\n     }\n \n-    public static CodeGeneratorOption temporarySourceCodeLocation()\n+    @Override\n+    public String toString()\n     {\n-        try\n-        {\n-            return new SourceLocationOption( Files.createTempDirectory( null ) );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( \"Failed to create temporary directory.\", e );\n-        }\n+      return \"PRINT_WARNINGS\";\n     }\n \n     @Override\n-    public void applyTo( Object target )\n-    {\n-        if ( target instanceof Configuration )\n-        {\n-            ((Configuration) target).withFlag( this );\n-        }\n-    }\n-\n-    private static class AnnotationProcessorOption implements CodeGeneratorOption\n-    {\n-        private final Processor processor;\n-\n-        AnnotationProcessorOption( Processor processor )\n-        {\n-            this.processor = processor;\n-        }\n-\n-        @Override\n-        public void applyTo( Object target )\n-        {\n-            if ( target instanceof Configuration )\n-            {\n-                ((Configuration) target).withAnnotationProcessor( processor );\n-            }\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"annotationProcessor( \" + processor + \" )\";\n-        }\n-    }\n-\n-    private static class SourceLocationOption extends SourceVisitor\n-    {\n-        private final Path path;\n-\n-        SourceLocationOption( Path path )\n-        {\n-            this.path = path;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"sourceLocation( \" + path + \" )\";\n-        }\n-\n-        @Override\n-        protected void visitSource( TypeReference reference, CharSequence sourceCode )\n-        {\n-            try\n-            {\n-                Path location = path( reference );\n-                Files.createDirectories( location.getParent() );\n-                Files.write( location, Collections.singletonList( sourceCode ), Charset.defaultCharset() );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new RuntimeException( \"Failed to write source code\", e );\n-            }\n-        }\n-\n-        private Path path( TypeReference reference )\n-        {\n-            return path.resolve( reference.packageName().replace( '.', '/' ) + \"/\" + reference.name() + \".java\" );\n-        }\n-    }\n-\n-    private static class PrintWarningsOption implements CodeGeneratorOption, WarningsHandler\n-    {\n-        private final PrintStream target;\n-\n-        PrintWarningsOption( PrintStream target )\n-        {\n-            this.target = target;\n-        }\n-\n-        @Override\n-        public void applyTo( Object target )\n-        {\n-            if ( target instanceof Configuration )\n-            {\n-                ((Configuration) target).withWarningsHandler( this );\n-            }\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"PRINT_WARNINGS\";\n-        }\n-\n-        @Override\n-        public void handle( List<Diagnostic<? extends JavaFileObject>> diagnostics )\n-        {\n-            for ( Diagnostic<? extends JavaFileObject> diagnostic : diagnostics )\n-            {\n-                format( target, diagnostic );\n-            }\n-        }\n+    public void handle(List<Diagnostic<? extends JavaFileObject>> diagnostics)\n+    {\n+      for (Diagnostic<? extends JavaFileObject> diagnostic : diagnostics)\n+      {\n+        format(target, diagnostic);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 261
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1925/SourceCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1925/SourceCode.java\nindex d3ed5817e4f..625d60add82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1925/SourceCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1925/SourceCode.java\n@@ -43,7 +43,8 @@ import static org.neo4j.codegen.source.ClasspathHelper.fullClasspathStringFor;\n public enum SourceCode implements CodeGeneratorOption\n {\n     SIMPLIFY_TRY_WITH_RESOURCE;\n-    public static final CodeGenerationStrategy<?> SOURCECODE = new CodeGenerationStrategy<Configuration>()\n+\n+public static final CodeGenerationStrategy<?> SOURCECODE = new CodeGenerationStrategy<Configuration>()\n     {\n         @Override\n         protected Configuration createConfigurator( ClassLoader loader )\n@@ -52,9 +53,8 @@ public enum SourceCode implements CodeGeneratorOption\n         }\n \n         @Override\n-        protected CodeGenerator createCodeGenerator( ClassLoader loader, Configuration configuration )\n-                throws CodeGenerationStrategyNotSupportedException\n-        {\n+        protected CodeGenerator createCodeGenerator( ClassLoader loader, Configuration configuration ) throws CodeGenerationStrategyNotSupportedException\n+{\n             return new SourceCodeGenerator( loader, configuration, configuration.sourceCompilerFor( this ) );\n         }\n \n@@ -64,7 +64,8 @@ public enum SourceCode implements CodeGeneratorOption\n             return \"SOURCECODE\";\n         }\n     };\n-    public static final CodeGeneratorOption PRINT_SOURCE = new SourceVisitor()\n+\n+public static final CodeGeneratorOption PRINT_SOURCE = new SourceVisitor()\n     {\n         @Override\n         protected void visitSource( TypeReference reference, CharSequence sourceCode )\n@@ -79,7 +80,8 @@ public enum SourceCode implements CodeGeneratorOption\n         }\n     };\n     static final CodeGeneratorOption USE_JDK_JAVA_COMPILER = JdkCompiler.FACTORY;\n-    public static final CodeGeneratorOption PRINT_WARNINGS = printWarningsTo( System.err );\n+\n+public static final CodeGeneratorOption PRINT_WARNINGS = printWarningsTo( System.err );\n \n     private static CodeGeneratorOption printWarningsTo( PrintStream err )\n     {\n@@ -211,4 +213,4 @@ public enum SourceCode implements CodeGeneratorOption\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "830",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/830/Dump.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/830/Dump.java\nindex 85e75ae5d90..ea03ff89532 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/830/Dump.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/830/Dump.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps.cypher;\n \n import org.neo4j.cypher.export.CypherResultSubGraph;\n@@ -35,70 +36,68 @@ import org.neo4j.shell.ShellException;\n import static org.neo4j.internal.kernel.api.Transaction.Type.implicit;\n import static org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED;\n \n-@Service.Implementation( App.class )\n+@Service.Implementation(App.class)\n public class Dump extends Start\n {\n-    @Override\n-    public String getDescription()\n-    {\n-        return \"Executes a Cypher query to export a subgraph. Usage: DUMP start <rest of query>;\\n\" +\n-               \"Example: DUMP start n = node({self}) MATCH n-[r]->m RETURN n,r,m;\\n\" +\n-               \"where {self} will be replaced with the current location in the graph.\" +\n-               \"Please, note that the query must end with a semicolon. Other parameters are\\n\" +\n-               \"taken from shell variables, see 'help export'.\";\n-    }\n+  @Override\n+  public String getDescription()\n+  {\n+    return \"Executes a Cypher query to export a subgraph. Usage: DUMP start <rest of query>;\\n\" +\n+        \"Example: DUMP start n = node({self}) MATCH n-[r]->m RETURN n,r,m;\\n\" +\n+        \"where {self} will be replaced with the current location in the graph.\" +\n+        \"Please, note that the query must end with a semicolon. Other parameters are\\n\" +\n+        \"taken from shell variables, see 'help export'.\";\n+  }\n \n-    @Override\n-    public Continuation execute( AppCommandParser parser, Session session, Output out )\n-            throws Exception\n+  @Override\n+  public Continuation execute(AppCommandParser parser, Session session, Output out)\n+      throws Exception\n+  {\n+    if (parser.arguments().isEmpty()) // Dump the whole graph\n     {\n-        if ( parser.arguments().isEmpty() ) // Dump the whole graph\n-        {\n-            try ( Transaction tx = getServer().getDb().beginTransaction( implicit, AUTH_DISABLED ) )\n-            {\n-                getServer().registerTopLevelTransactionInProgress( session.getId() );\n-                final SubGraph graph = DatabaseSubGraph.from( getServer().getDb() );\n-                export( graph, out );\n-                tx.success();\n-                return Continuation.INPUT_COMPLETE;\n-            }\n-        }\n-        else\n-        {\n-            AppCommandParser newParser = newParser( parser );\n-            return super.execute( newParser, session, out );\n-        }\n-    }\n-\n-    private AppCommandParser newParser( AppCommandParser parser ) throws ShellException\n+      try (Transaction tx = getServer().getDb().beginTransaction(implicit, AUTH_DISABLED))\n+      {\n+        getServer().registerTopLevelTransactionInProgress(session.getId());\n+        final SubGraph graph = DatabaseSubGraph.from(getServer().getDb());\n+        export(graph, out);\n+        tx.success();\n+        return Continuation.INPUT_COMPLETE;\n+      }\n+    } else\n     {\n-        String newLine = parser.getLineWithoutApp();\n-        AppCommandParser newParser = newParser( newLine );\n-        newParser.options().putAll( parser.options() );\n-        return newParser;\n+      AppCommandParser newParser = newParser(parser);\n+      return super.execute(newParser, session, out);\n     }\n+  }\n \n-    private AppCommandParser newParser( final String line ) throws ShellException\n-    {\n-        try\n-        {\n-            return new AppCommandParser( getServer(), line );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new ShellException( \"Error parsing input \" + line, e );\n-        }\n-    }\n+  private AppCommandParser newParser(AppCommandParser parser) throws ShellException\n+  {\n+    String newLine = parser.getLineWithoutApp();\n+    AppCommandParser newParser = newParser(newLine);\n+    newParser.options().putAll(parser.options());\n+    return newParser;\n+  }\n \n-    private void export( SubGraph subGraph, Output out )\n+  private AppCommandParser newParser(final String line) throws ShellException\n+  {\n+    try\n     {\n-        new Exporter( subGraph ).export( out );\n-    }\n-\n-    @Override\n-    protected void handleResult( Output out, Result result, long startTime )\n+      return new AppCommandParser(getServer(), line);\n+    } catch (Exception e)\n     {\n-        final SubGraph subGraph = CypherResultSubGraph.from( result, getServer().getDb(), false );\n-        export( subGraph, out );\n+      throw new ShellException(\"Error parsing input \" + line, e);\n     }\n+  }\n+\n+  private void export(SubGraph subGraph, Output out)\n+  {\n+    new Exporter(subGraph).export(out);\n+  }\n+\n+  @Override\n+  protected void handleResult(Output out, Result result, long startTime)\n+  {\n+    final SubGraph subGraph = CypherResultSubGraph.from(result, getServer().getDb(), false);\n+    export(subGraph, out);\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 379).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/830/Dump.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/830/Dump.java\nindex 85e75ae5d90..3fd935e7479 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/830/Dump.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/830/Dump.java\n@@ -41,17 +41,12 @@ public class Dump extends Start\n     @Override\n     public String getDescription()\n     {\n-        return \"Executes a Cypher query to export a subgraph. Usage: DUMP start <rest of query>;\\n\" +\n-               \"Example: DUMP start n = node({self}) MATCH n-[r]->m RETURN n,r,m;\\n\" +\n-               \"where {self} will be replaced with the current location in the graph.\" +\n-               \"Please, note that the query must end with a semicolon. Other parameters are\\n\" +\n-               \"taken from shell variables, see 'help export'.\";\n+        return \"Executes a Cypher query to export a subgraph. Usage: DUMP start <rest of query>;\\n\" + \"Example: DUMP start n = node({self}) MATCH n-[r]->m RETURN n,r,m;\\n\" + \"where {self} will be replaced with the current location in the graph.\" + \"Please, note that the query must end with a semicolon. Other parameters are\\n\" + \"taken from shell variables, see 'help export'.\";\n     }\n \n     @Override\n-    public Continuation execute( AppCommandParser parser, Session session, Output out )\n-            throws Exception\n-    {\n+    public Continuation execute( AppCommandParser parser, Session session, Output out ) throws Exception\n+{\n         if ( parser.arguments().isEmpty() ) // Dump the whole graph\n         {\n             try ( Transaction tx = getServer().getDb().beginTransaction( implicit, AUTH_DISABLED ) )\n@@ -101,4 +96,4 @@ public class Dump extends Start\n         final SubGraph subGraph = CypherResultSubGraph.from( result, getServer().getDb(), false );\n         export( subGraph, out );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 379).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/830/Dump.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/830/Dump.java\nindex 85e75ae5d90..6b3a2a8ef4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/830/Dump.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/830/Dump.java\n@@ -31,30 +31,26 @@ import org.neo4j.shell.Continuation;\n import org.neo4j.shell.Output;\n import org.neo4j.shell.Session;\n import org.neo4j.shell.ShellException;\n-\n import static org.neo4j.internal.kernel.api.Transaction.Type.implicit;\n+\n import static org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED;\n \n-@Service.Implementation( App.class )\n+@ Service.Implementation( App.class )\n public class Dump extends Start\n {\n     @Override\n     public String getDescription()\n     {\n-        return \"Executes a Cypher query to export a subgraph. Usage: DUMP start <rest of query>;\\n\" +\n-               \"Example: DUMP start n = node({self}) MATCH n-[r]->m RETURN n,r,m;\\n\" +\n-               \"where {self} will be replaced with the current location in the graph.\" +\n-               \"Please, note that the query must end with a semicolon. Other parameters are\\n\" +\n-               \"taken from shell variables, see 'help export'.\";\n+        return \"Executes a Cypher query to export a subgraph. Usage: DUMP start <rest of query>;\\n\" + \"Example: DUMP start n = node({self}) MATCH n-[r]->m RETURN n,r,m;\\n\" + \"where {self} will be replaced with the current location in the graph.\" + \"Please, note that the query must end with a semicolon. Other parameters are\\n\" + \"taken from shell variables, see 'help export'.\";\n     }\n \n     @Override\n-    public Continuation execute( AppCommandParser parser, Session session, Output out )\n-            throws Exception\n+    public Continuation execute( AppCommandParser parser, Session session, Output out ) throws Exception\n     {\n         if ( parser.arguments().isEmpty() ) // Dump the whole graph\n         {\n-            try ( Transaction tx = getServer().getDb().beginTransaction( implicit, AUTH_DISABLED ) )\n+            try\n+                ( Transaction tx = getServer().getDb().beginTransaction( implicit, AUTH_DISABLED ))\n             {\n                 getServer().registerTopLevelTransactionInProgress( session.getId() );\n                 final SubGraph graph = DatabaseSubGraph.from( getServer().getDb() );\n@@ -101,4 +97,4 @@ public class Dump extends Start\n         final SubGraph subGraph = CypherResultSubGraph.from( result, getServer().getDb(), false );\n         export( subGraph, out );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "60",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/60/FileMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/60/FileMapping.java\nindex 967cc94785b..2e39cfbbb37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/60/FileMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/60/FileMapping.java\n@@ -17,26 +17,27 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import java.io.File;\n \n final class FileMapping\n {\n-    public volatile FileMapping next;\n-    public final File file;\n-    public final MuninnPagedFile pagedFile;\n+  public volatile FileMapping next;\n+  public final File file;\n+  public final MuninnPagedFile pagedFile;\n \n-    FileMapping( File file, MuninnPagedFile pagedFile )\n-    {\n-        this.file = file;\n-        this.pagedFile = pagedFile;\n-    }\n+  FileMapping(File file, MuninnPagedFile pagedFile)\n+  {\n+    this.file = file;\n+    this.pagedFile = pagedFile;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"FileMapping[fname = %s, refCount = %s] :: %s\",\n-                file, pagedFile.getRefCount(), next );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"FileMapping[fname = %s, refCount = %s] :: %s\",\n+        file, pagedFile.getRefCount(), next);\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/60/FileMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/60/FileMapping.java\nindex 967cc94785b..e85046c2d12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/60/FileMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/60/FileMapping.java\n@@ -24,8 +24,10 @@ import java.io.File;\n final class FileMapping\n {\n     public volatile FileMapping next;\n-    public final File file;\n-    public final MuninnPagedFile pagedFile;\n+\n+public final File file;\n+\n+public final MuninnPagedFile pagedFile;\n \n     FileMapping( File file, MuninnPagedFile pagedFile )\n     {\n@@ -39,4 +41,4 @@ final class FileMapping\n         return String.format( \"FileMapping[fname = %s, refCount = %s] :: %s\",\n                 file, pagedFile.getRefCount(), next );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
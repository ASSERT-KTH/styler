{
    "project_name": "Angel-ML-angel",
    "error_id": "867",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/867/UserDefinePartition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/867/UserDefinePartition.java\nindex 87a3a927da0..d355559ef0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/867/UserDefinePartition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/867/UserDefinePartition.java\n@@ -26,13 +26,13 @@ public abstract class UserDefinePartition extends ServerPartition implements Str\n   /**\n    * Create a new Server partition,include load rows.\n    *\n-   * @param partKey the partition meta\n-   * @param rowType row type\n+   * @param partKey     the partition meta\n+   * @param rowType     row type\n    * @param estSparsity valid element number / index range\n-   * @param storage partition storage\n+   * @param storage     partition storage\n    */\n   public UserDefinePartition(PartitionKey partKey, RowType rowType, double estSparsity,\n-      IServerPartitionStorage storage) {\n+                             IServerPartitionStorage storage) {\n     super(partKey, rowType, estSparsity, storage);\n   }\n \n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/867/UserDefinePartition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/867/UserDefinePartition.java\nindex 87a3a927da0..640b47fe5a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/867/UserDefinePartition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/867/UserDefinePartition.java\n@@ -43,4 +43,4 @@ public abstract class UserDefinePartition extends ServerPartition implements Str\n   public UserDefinePartition() {\n     this(null, RowType.T_DOUBLE_DENSE, 1.0, null);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/867/UserDefinePartition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/867/UserDefinePartition.java\nindex 87a3a927da0..e89d849841e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/867/UserDefinePartition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/867/UserDefinePartition.java\n@@ -31,8 +31,8 @@ public abstract class UserDefinePartition extends ServerPartition implements Str\n    * @param estSparsity valid element number / index range\n    * @param storage partition storage\n    */\n-  public UserDefinePartition(PartitionKey partKey, RowType rowType, double estSparsity,\n-      IServerPartitionStorage storage) {\n+\n+  public UserDefinePartition(PartitionKey partKey, RowType rowType, double estSparsity, IServerPartitionStorage storage) {\n     super(partKey, rowType, estSparsity, storage);\n   }\n \n@@ -40,7 +40,8 @@ public abstract class UserDefinePartition extends ServerPartition implements Str\n   /**\n    * Create a new Server partition.\n    */\n+\n   public UserDefinePartition() {\n     this(null, RowType.T_DOUBLE_DENSE, 1.0, null);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
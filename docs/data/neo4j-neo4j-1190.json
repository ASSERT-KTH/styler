{
    "project_name": "neo4j-neo4j",
    "error_id": "1190",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1190/HeapTrackingUnifiedSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1190/HeapTrackingUnifiedSet.java\nindex 685be08809d..8b87dc4d46c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1190/HeapTrackingUnifiedSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1190/HeapTrackingUnifiedSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.trackable;\n \n import org.eclipse.collections.impl.set.mutable.UnifiedSet;\n@@ -29,46 +30,46 @@ import static org.neo4j.memory.HeapEstimator.OBJECT_REFERENCE_BYTES;\n import static org.neo4j.memory.HeapEstimator.alignObjectSize;\n import static org.neo4j.memory.HeapEstimator.shallowSizeOfInstance;\n \n-@SuppressWarnings( \"ExternalizableWithoutPublicNoArgConstructor\" )\n+@SuppressWarnings(\"ExternalizableWithoutPublicNoArgConstructor\")\n public class HeapTrackingUnifiedSet<T> extends UnifiedSet<T> implements AutoCloseable\n {\n-    private static final long SHALLOW_SIZE = shallowSizeOfInstance( HeapTrackingUnifiedSet.class );\n+    private static final long SHALLOW_SIZE = shallowSizeOfInstance(HeapTrackingUnifiedSet.class);\n     private final MemoryTracker memoryTracker;\n     private int trackedCapacity;\n \n-    static <T> HeapTrackingUnifiedSet<T> createUnifiedSet( MemoryTracker memoryTracker )\n+    static <T> HeapTrackingUnifiedSet<T> createUnifiedSet(MemoryTracker memoryTracker)\n     {\n         int initialSizeToAllocate = DEFAULT_INITIAL_CAPACITY << 1;\n-        memoryTracker.allocateHeap( SHALLOW_SIZE + arrayHeapSize( initialSizeToAllocate ) );\n-        return new HeapTrackingUnifiedSet<>( memoryTracker, initialSizeToAllocate );\n+        memoryTracker.allocateHeap(SHALLOW_SIZE + arrayHeapSize(initialSizeToAllocate));\n+        return new HeapTrackingUnifiedSet<>(memoryTracker, initialSizeToAllocate);\n     }\n \n-    private HeapTrackingUnifiedSet( MemoryTracker memoryTracker, int trackedCapacity )\n+    private HeapTrackingUnifiedSet(MemoryTracker memoryTracker, int trackedCapacity)\n     {\n-        this.memoryTracker = requireNonNull( memoryTracker );\n+        this.memoryTracker = requireNonNull(memoryTracker);\n         this.trackedCapacity = trackedCapacity;\n     }\n \n     @Override\n-    protected void allocateTable( int sizeToAllocate )\n+    protected void allocateTable(int sizeToAllocate)\n     {\n-        if ( memoryTracker != null )\n+        if (memoryTracker != null)\n         {\n-            memoryTracker.allocateHeap( arrayHeapSize( sizeToAllocate ) );\n-            memoryTracker.releaseHeap( arrayHeapSize( trackedCapacity ) );\n+            memoryTracker.allocateHeap(arrayHeapSize(sizeToAllocate));\n+            memoryTracker.releaseHeap(arrayHeapSize(trackedCapacity));\n             trackedCapacity = sizeToAllocate;\n         }\n-        super.allocateTable( sizeToAllocate );\n+        super.allocateTable(sizeToAllocate);\n     }\n \n     @Override\n     public void close()\n     {\n-        memoryTracker.releaseHeap( SHALLOW_SIZE + arrayHeapSize( trackedCapacity ) );\n+        memoryTracker.releaseHeap(SHALLOW_SIZE + arrayHeapSize(trackedCapacity));\n     }\n \n-    static long arrayHeapSize( int arrayLength )\n+    static long arrayHeapSize(int arrayLength)\n     {\n-        return alignObjectSize( ARRAY_HEADER_BYTES + (long) arrayLength * OBJECT_REFERENCE_BYTES );\n+        return alignObjectSize(ARRAY_HEADER_BYTES + (long) arrayLength * OBJECT_REFERENCE_BYTES);\n     }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1190/HeapTrackingUnifiedSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1190/HeapTrackingUnifiedSet.java\nindex 685be08809d..b2e5a5dc265 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1190/HeapTrackingUnifiedSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1190/HeapTrackingUnifiedSet.java\n@@ -71,4 +71,4 @@ public class HeapTrackingUnifiedSet<T> extends UnifiedSet<T> implements AutoClos\n     {\n         return alignObjectSize( ARRAY_HEADER_BYTES + (long) arrayLength * OBJECT_REFERENCE_BYTES );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2968",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2968/GetRoutersForAllDatabasesProcedure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2968/GetRoutersForAllDatabasesProcedure.java\nindex 255452e36a1..d852186ae0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2968/GetRoutersForAllDatabasesProcedure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2968/GetRoutersForAllDatabasesProcedure.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.routing.multi_cluster.procedure;\n \n import java.util.List;\n@@ -48,50 +49,50 @@ import static org.neo4j.causalclustering.routing.Util.extractBoltAddress;\n public class GetRoutersForAllDatabasesProcedure implements CallableProcedure\n {\n \n-    private static final String DESCRIPTION = \"Returns router capable endpoints for each database name in a multi-cluster.\";\n+  private static final String DESCRIPTION = \"Returns router capable endpoints for each database name in a multi-cluster.\";\n \n-    private final ProcedureSignature procedureSignature =\n-            procedureSignature( GET_ROUTERS_FOR_ALL_DATABASES.fullyQualifiedProcedureName() )\n-                    .out( TTL.parameterName(), Neo4jTypes.NTInteger )\n-                    .out( ROUTERS.parameterName(), Neo4jTypes.NTList( Neo4jTypes.NTMap ) )\n-                    .description( DESCRIPTION )\n-                    .build();\n+  private final ProcedureSignature procedureSignature =\n+      procedureSignature(GET_ROUTERS_FOR_ALL_DATABASES.fullyQualifiedProcedureName())\n+          .out(TTL.parameterName(), Neo4jTypes.NTInteger)\n+          .out(ROUTERS.parameterName(), Neo4jTypes.NTList(Neo4jTypes.NTMap))\n+          .description(DESCRIPTION)\n+          .build();\n \n-    private final TopologyService topologyService;\n-    private final long timeToLiveMillis;\n+  private final TopologyService topologyService;\n+  private final long timeToLiveMillis;\n \n-    public GetRoutersForAllDatabasesProcedure( TopologyService topologyService, Config config )\n-    {\n-        this.topologyService = topologyService;\n-        this.timeToLiveMillis = config.get( CausalClusteringSettings.cluster_routing_ttl ).toMillis();\n-    }\n+  public GetRoutersForAllDatabasesProcedure(TopologyService topologyService, Config config)\n+  {\n+    this.topologyService = topologyService;\n+    this.timeToLiveMillis = config.get(CausalClusteringSettings.cluster_routing_ttl).toMillis();\n+  }\n \n-    @Override\n-    public ProcedureSignature signature()\n-    {\n-        return procedureSignature;\n-    }\n+  @Override\n+  public ProcedureSignature signature()\n+  {\n+    return procedureSignature;\n+  }\n \n-    @Override\n-    public RawIterator<Object[],ProcedureException> apply( Context ctx, Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n-    {\n-        Map<String,List<Endpoint>> routersPerDb = routeEndpoints();\n-        MultiClusterRoutingResult result = new MultiClusterRoutingResult( routersPerDb, timeToLiveMillis );\n-        return RawIterator.<Object[], ProcedureException>of( MultiClusterRoutingResultFormat.build( result ) );\n-    }\n+  @Override\n+  public RawIterator<Object[], ProcedureException> apply(Context ctx, Object[] input, ResourceTracker resourceTracker) throws ProcedureException\n+  {\n+    Map<String, List<Endpoint>> routersPerDb = routeEndpoints();\n+    MultiClusterRoutingResult result = new MultiClusterRoutingResult(routersPerDb, timeToLiveMillis);\n+    return RawIterator.<Object[], ProcedureException>of(MultiClusterRoutingResultFormat.build(result));\n+  }\n \n-    private Map<String, List<Endpoint>> routeEndpoints()\n-    {\n-        Stream<CoreServerInfo> allCoreMemberInfo = topologyService.allCoreServers().members().values().stream();\n+  private Map<String, List<Endpoint>> routeEndpoints()\n+  {\n+    Stream<CoreServerInfo> allCoreMemberInfo = topologyService.allCoreServers().members().values().stream();\n \n-        Map<String, List<CoreServerInfo>> coresByDb = allCoreMemberInfo.collect( Collectors.groupingBy( CoreServerInfo::getDatabaseName ) );\n+    Map<String, List<CoreServerInfo>> coresByDb = allCoreMemberInfo.collect(Collectors.groupingBy(CoreServerInfo::getDatabaseName));\n \n-        Function<Map.Entry<String,List<CoreServerInfo>>, List<Endpoint>> extractQualifiedBoltAddresses = entry ->\n-        {\n-            List<CoreServerInfo> cores = entry.getValue();\n-            return cores.stream().map( extractBoltAddress() ).map( Endpoint::route ).collect( Collectors.toList() );\n-        };\n+    Function<Map.Entry<String, List<CoreServerInfo>>, List<Endpoint>> extractQualifiedBoltAddresses = entry ->\n+    {\n+      List<CoreServerInfo> cores = entry.getValue();\n+      return cores.stream().map(extractBoltAddress()).map(Endpoint::route).collect(Collectors.toList());\n+    };\n \n-        return coresByDb.entrySet().stream().collect( Collectors.toMap( Map.Entry::getKey, extractQualifiedBoltAddresses ) );\n-    }\n+    return coresByDb.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey, extractQualifiedBoltAddresses));\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 281).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "column": "57",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2968/GetRoutersForAllDatabasesProcedure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2968/GetRoutersForAllDatabasesProcedure.java\nindex 255452e36a1..89a990b98db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2968/GetRoutersForAllDatabasesProcedure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2968/GetRoutersForAllDatabasesProcedure.java\n@@ -47,17 +47,10 @@ import static org.neo4j.causalclustering.routing.Util.extractBoltAddress;\n \n public class GetRoutersForAllDatabasesProcedure implements CallableProcedure\n {\n-\n     private static final String DESCRIPTION = \"Returns router capable endpoints for each database name in a multi-cluster.\";\n-\n-    private final ProcedureSignature procedureSignature =\n-            procedureSignature( GET_ROUTERS_FOR_ALL_DATABASES.fullyQualifiedProcedureName() )\n-                    .out( TTL.parameterName(), Neo4jTypes.NTInteger )\n-                    .out( ROUTERS.parameterName(), Neo4jTypes.NTList( Neo4jTypes.NTMap ) )\n-                    .description( DESCRIPTION )\n+private final ProcedureSignature procedureSignature = procedureSignature( GET_ROUTERS_FOR_ALL_DATABASES.fullyQualifiedProcedureName() ).out( TTL.parameterName(), Neo4jTypes.NTInteger ).out( ROUTERS.parameterName(), Neo4jTypes.NTList( Neo4jTypes.NTMap ) ).description( DESCRIPTION )\n                     .build();\n-\n-    private final TopologyService topologyService;\n+private final TopologyService topologyService;\n     private final long timeToLiveMillis;\n \n     public GetRoutersForAllDatabasesProcedure( TopologyService topologyService, Config config )\n@@ -77,7 +70,7 @@ public class GetRoutersForAllDatabasesProcedure implements CallableProcedure\n     {\n         Map<String,List<Endpoint>> routersPerDb = routeEndpoints();\n         MultiClusterRoutingResult result = new MultiClusterRoutingResult( routersPerDb, timeToLiveMillis );\n-        return RawIterator.<Object[], ProcedureException>of( MultiClusterRoutingResultFormat.build( result ) );\n+        return RawIterator.<Object[], ProcedureException> of( MultiClusterRoutingResultFormat.build( result ) );\n     }\n \n     private Map<String, List<Endpoint>> routeEndpoints()\n@@ -94,4 +87,4 @@ public class GetRoutersForAllDatabasesProcedure implements CallableProcedure\n \n         return coresByDb.entrySet().stream().collect( Collectors.toMap( Map.Entry::getKey, extractQualifiedBoltAddresses ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "findbugsproject-findbugs",
    "error_id": "82",
    "information": {
        "errors": [
            {
                "line": "3",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class Test {\n\n\t/**\n\t * Benchmark tests for null pointer defect detectors This benchmark tests\n\t * local variable tracking tracking fp1, fp2, fp3 : false positives tp1 :\n\t * true positive ifp1 : interprocedural false positives itp1, itp2, itp3 :",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "4",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/82/Test.java\nindex c3894344456..a241aadc12e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/82/Test.java\n@@ -1,6 +1,6 @@\n public class Test {\n \n-\t/**\n+/**\n \t * Benchmark tests for null pointer defect detectors This benchmark tests\n \t * local variable tracking tracking fp1, fp2, fp3 : false positives tp1 :\n \t * true positive ifp1 : interprocedural false positives itp1, itp2, itp3 :\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/82/Test.java\nindex c3894344456..703fcbf6ab0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/82/Test.java\n@@ -1,85 +1,97 @@\n public class Test {\n \n-\t/**\n-\t * Benchmark tests for null pointer defect detectors This benchmark tests\n-\t * local variable tracking tracking fp1, fp2, fp3 : false positives tp1 :\n-\t * true positive ifp1 : interprocedural false positives itp1, itp2, itp3 :\n-\t * interprocedural true positives\n-\t */\n+    /**\n+     * Benchmark tests for null pointer defect detectors This benchmark tests\n+     * local variable tracking tracking fp1, fp2, fp3 : false positives tp1 :\n+     * true positive ifp1 : interprocedural false positives itp1, itp2, itp3 :\n+     * interprocedural true positives\n+     */\n \n-\tint fp1(int level) {\n-\t\tObject x = null;\n-\t\tif (level > 0)\n-\t\t\tx = new Object();\n-\t\tif (level > 4)\n-\t\t\treturn x.hashCode();\n-\t\treturn 0;\n-\t}\n+    int fp1(int level) {\n+        Object x = null;\n+        if (level > 0) {\n+            x = new Object();\n+        }\n+        if (level > 4) {\n+            return x.hashCode();\n+        }\n+        return 0;\n+    }\n \n-\tint fp2(boolean b) {\n-\t\tObject x = null;\n-\t\tif (b)\n-\t\t\tx = new Object();\n-\t\tif (b)\n-\t\t\treturn x.hashCode();\n-\t\treturn 0;\n-\t}\n+    int fp2(boolean b) {\n+        Object x = null;\n+        if (b) {\n+            x = new Object();\n+        }\n+        if (b) {\n+            return x.hashCode();\n+        }\n+        return 0;\n+    }\n \n-\tint fp3(Object x, boolean b) {\n-\t\tObject y = null;\n-\t\tif (x != null)\n-\t\t\ty = new Object();\n-\t\tif (y != null)\n-\t\t\treturn x.hashCode() + y.hashCode();\n-\t\telse\n-\t\t\treturn 0;\n-\t}\n+    int fp3(Object x, boolean b) {\n+        Object y = null;\n+        if (x != null) {\n+            y = new Object();\n+        }\n+        if (y != null) {\n+            return x.hashCode() + y.hashCode();\n+        } else {\n+            return 0;\n+        }\n+    }\n \n-\t@ExpectWarning(\"NP\")\n-\tint tp1(Object x, boolean b) {\n-\t\tObject y = null;\n-\t\tif (x != null)\n-\t\t\ty = new Object();\n-\t\tif (y != null)\n-\t\t\treturn x.hashCode() + y.hashCode();\n-\t\telse\n-\t\t\treturn x.hashCode();\n-\t}\n+    @ExpectWarning(\"NP\")\n+    int tp1(Object x, boolean b) {\n+        Object y = null;\n+        if (x != null) {\n+            y = new Object();\n+        }\n+        if (y != null) {\n+            return x.hashCode() + y.hashCode();\n+        } else {\n+            return x.hashCode();\n+        }\n+    }\n \n-\tint itp1(boolean b) {\n-\t\tObject x = null;\n-\t\tif (b)\n-\t\t\tx = new Object();\n-\t\treturn helper1(x, b); // bug when x is null and b is false\n-\t}\n+    int itp1(boolean b) {\n+        Object x = null;\n+        if (b) {\n+            x = new Object();\n+        }\n+        return helper1(x, b); // bug when x is null and b is false\n+    }\n \n-\tint ifp1(boolean b) {\n-\t\tObject x = null;\n-\t\tif (!b)\n-\t\t\tx = new Object();\n-\t\treturn helper1(x, b); // OK when x is null and b is true\n-\t}\n+    int ifp1(boolean b) {\n+        Object x = null;\n+        if (!b) {\n+            x = new Object();\n+        }\n+        return helper1(x, b); // OK when x is null and b is true\n+    }\n \n-\t@ExpectWarning(\"NP\")\n-\tint itp2() {\n-\t\treturn helper2(null);\n-\t}\n+    @ExpectWarning(\"NP\")\n+    int itp2() {\n+        return helper2(null);\n+    }\n \n-\t@ExpectWarning(\"NP\")\n-\tint itp3(Object x) {\n-\t\tif (x == null)\n-\t\t\tSystem.out.println(\"x is null\");\n-\t\treturn helper2(x);\n-\t}\n+    @ExpectWarning(\"NP\")\n+    int itp3(Object x) {\n+        if (x == null) {\n+            System.out.println(\"x is null\");\n+        }\n+        return helper2(x);\n+    }\n \n-\tprivate int helper1(Object x, boolean b) {\n-\t\tif (b)\n-\t\t\treturn 0;\n-\t\treturn x.hashCode();\n-\t}\n+    private int helper1(Object x, boolean b) {\n+        if (b) {\n+            return 0;\n+        }\n+        return x.hashCode();\n+    }\n \n-\tprivate int helper2(Object x) {\n-\t\treturn x.hashCode();\n-\t}\n+    private int helper2(Object x) {\n+        return x.hashCode();\n+    }\n \n }\n",
            "diff_size": 83
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/82/Test.java\nindex c3894344456..f06a0a71326 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/82/Test.java\n@@ -1,85 +1,85 @@\n public class Test {\n \n-\t/**\n-\t * Benchmark tests for null pointer defect detectors This benchmark tests\n-\t * local variable tracking tracking fp1, fp2, fp3 : false positives tp1 :\n-\t * true positive ifp1 : interprocedural false positives itp1, itp2, itp3 :\n-\t * interprocedural true positives\n-\t */\n+    /**\n+     * Benchmark tests for null pointer defect detectors This benchmark tests\n+     * local variable tracking tracking fp1, fp2, fp3 : false positives tp1 :\n+     * true positive ifp1 : interprocedural false positives itp1, itp2, itp3 :\n+     * interprocedural true positives\n+     */\n+    int fp1(int level) {\n+        Object x = null;\n+        if (level > 0)\n+            x = new Object();\n+        if (level > 4)\n+            return x.hashCode();\n+        return 0;\n+    }\n \n-\tint fp1(int level) {\n-\t\tObject x = null;\n-\t\tif (level > 0)\n-\t\t\tx = new Object();\n-\t\tif (level > 4)\n-\t\t\treturn x.hashCode();\n-\t\treturn 0;\n-\t}\n+    int fp2(boolean b) {\n+        Object x = null;\n+        if (b)\n+            x = new Object();\n+        if (b)\n+            return x.hashCode();\n+        return 0;\n+    }\n \n-\tint fp2(boolean b) {\n-\t\tObject x = null;\n-\t\tif (b)\n-\t\t\tx = new Object();\n-\t\tif (b)\n-\t\t\treturn x.hashCode();\n-\t\treturn 0;\n-\t}\n+    int fp3(Object x, boolean b) {\n+        Object y = null;\n+        if (x != null)\n+            y = new Object();\n+        if (y != null)\n+            return x.hashCode() + y.hashCode();\n+        else\n+            return 0;\n+    }\n \n-\tint fp3(Object x, boolean b) {\n-\t\tObject y = null;\n-\t\tif (x != null)\n-\t\t\ty = new Object();\n-\t\tif (y != null)\n-\t\t\treturn x.hashCode() + y.hashCode();\n-\t\telse\n-\t\t\treturn 0;\n-\t}\n+    @ExpectWarning(\"NP\")\n+    int tp1(Object x, boolean b) {\n+        Object y = null;\n+        if (x != null)\n+            y = new Object();\n+        if (y != null)\n+            return x.hashCode() + y.hashCode();\n+        else\n+            return x.hashCode();\n+    }\n \n-\t@ExpectWarning(\"NP\")\n-\tint tp1(Object x, boolean b) {\n-\t\tObject y = null;\n-\t\tif (x != null)\n-\t\t\ty = new Object();\n-\t\tif (y != null)\n-\t\t\treturn x.hashCode() + y.hashCode();\n-\t\telse\n-\t\t\treturn x.hashCode();\n-\t}\n+    int itp1(boolean b) {\n+        Object x = null;\n+        if (b)\n+            x = new Object();\n+        return helper1(x, b); // bug when x is null and b is false\n+    }\n \n-\tint itp1(boolean b) {\n-\t\tObject x = null;\n-\t\tif (b)\n-\t\t\tx = new Object();\n-\t\treturn helper1(x, b); // bug when x is null and b is false\n-\t}\n+    int ifp1(boolean b) {\n+        Object x = null;\n+        if (!b)\n+            x = new Object();\n+        return helper1(x, b); // OK when x is null and b is true\n+    }\n \n-\tint ifp1(boolean b) {\n-\t\tObject x = null;\n-\t\tif (!b)\n-\t\t\tx = new Object();\n-\t\treturn helper1(x, b); // OK when x is null and b is true\n-\t}\n+    @ExpectWarning(\"NP\")\n+    int itp2() {\n+        return helper2(null);\n+    }\n \n-\t@ExpectWarning(\"NP\")\n-\tint itp2() {\n-\t\treturn helper2(null);\n-\t}\n+    @ExpectWarning(\"NP\")\n+    int itp3(Object x) {\n+        if (x == null)\n+            System.out.println(\"x is null\");\n+        return helper2(x);\n+    }\n \n-\t@ExpectWarning(\"NP\")\n-\tint itp3(Object x) {\n-\t\tif (x == null)\n-\t\t\tSystem.out.println(\"x is null\");\n-\t\treturn helper2(x);\n-\t}\n \n-\tprivate int helper1(Object x, boolean b) {\n-\t\tif (b)\n-\t\t\treturn 0;\n-\t\treturn x.hashCode();\n-\t}\n+    private int helper1(Object x, boolean b) {\n+        if (b)\n+            return 0;\n+        return x.hashCode();\n+    }\n \n-\tprivate int helper2(Object x) {\n-\t\treturn x.hashCode();\n-\t}\n \n-}\n+    private int helper2(Object x) {\n+        return x.hashCode();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 87
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "4",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/82/Test.java\nindex c3894344456..a241aadc12e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/82/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/82/Test.java\n@@ -1,6 +1,6 @@\n public class Test {\n \n-\t/**\n+/**\n \t * Benchmark tests for null pointer defect detectors This benchmark tests\n \t * local variable tracking tracking fp1, fp2, fp3 : false positives tp1 :\n \t * true positive ifp1 : interprocedural false positives itp1, itp2, itp3 :\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
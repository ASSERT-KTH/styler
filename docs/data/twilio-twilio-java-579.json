{
    "project_name": "twilio-twilio-java",
    "error_id": "579",
    "information": {
        "errors": [
            {
                "line": "188",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/579/UsageRecordReader.java\nindex 8df5df188a8..502a154f518 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/579/UsageRecordReader.java\n@@ -185,7 +185,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/579/UsageRecordReader.java\nindex 8df5df188a8..bdd0e52a584 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/579/UsageRecordReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.supersim.v1;\n@@ -185,7 +185,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/579/UsageRecordReader.java\nindex 8df5df188a8..70d43b6d109 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/579/UsageRecordReader.java\n@@ -26,6 +26,7 @@ import org.joda.time.DateTime;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class UsageRecordReader extends Reader<UsageRecord> {\n     private String sim;\n     private UsageRecord.Granularity granularity;\n@@ -40,6 +41,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      *            incurred by this Super SIM.\n      * @return this\n      */\n+\n     public UsageRecordReader setSim(final String sim) {\n         this.sim = sim;\n         return this;\n@@ -55,6 +57,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      *                    `all`.\n      * @return this\n      */\n+\n+\n     public UsageRecordReader setGranularity(final UsageRecord.Granularity granularity) {\n         this.granularity = granularity;\n         return this;\n@@ -68,6 +72,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param startTime Only include usage that occurred at or after this time.\n      * @return this\n      */\n+\n+\n     public UsageRecordReader setStartTime(final DateTime startTime) {\n         this.startTime = startTime;\n         return this;\n@@ -81,6 +87,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param endTime Only include usage that occurred before this time.\n      * @return this\n      */\n+\n+\n     public UsageRecordReader setEndTime(final DateTime endTime) {\n         this.endTime = endTime;\n         return this;\n@@ -92,6 +100,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UsageRecord ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<UsageRecord> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -103,14 +112,11 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UsageRecord ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<UsageRecord> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.SUPERSIM.toString(),\n-            \"/v1/UsageRecords\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.SUPERSIM.toString(), \"/v1/UsageRecords\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -123,14 +129,12 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UsageRecord ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<UsageRecord> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<UsageRecord> getPage(final String targetUrl,\n+                                     final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -141,13 +145,11 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<UsageRecord> nextPage(final Page<UsageRecord> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.SUPERSIM.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.SUPERSIM.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -158,13 +160,11 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<UsageRecord> previousPage(final Page<UsageRecord> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.SUPERSIM.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.SUPERSIM.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -175,9 +175,11 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<UsageRecord> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<UsageRecord> pageForRequest(final TwilioRestClient client,\n+                                             final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"UsageRecord read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -185,7 +187,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -193,7 +196,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             response.getContent(),\n             UsageRecord.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -201,6 +204,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (sim != null) {\n             request.addQueryParam(\"Sim\", sim.toString());\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/579/UsageRecordReader.java\nindex 8df5df188a8..502a154f518 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/579/UsageRecordReader.java\n@@ -185,7 +185,7 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/579/UsageRecordReader.java\nindex 8df5df188a8..3e0d2a73087 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/579/UsageRecordReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/579/UsageRecordReader.java\n@@ -185,7 +185,8 @@ public class UsageRecordReader extends Reader<UsageRecord> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
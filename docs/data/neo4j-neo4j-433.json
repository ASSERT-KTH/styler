{
    "project_name": "neo4j-neo4j",
    "error_id": "433",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "172",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "175",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "186",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "156",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/433/StoreInfoCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/433/StoreInfoCommand.java\nindex 9f1f5cde9ff..304d60a621e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/433/StoreInfoCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/433/StoreInfoCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import picocli.CommandLine.Option;\n@@ -55,144 +56,136 @@ import static org.neo4j.kernel.recovery.Recovery.isRecoveryRequired;\n import static picocli.CommandLine.Command;\n \n @Command(\n-        name = \"store-info\",\n-        header = \"Print information about a Neo4j database store.\",\n-        description = \"Print information about a Neo4j database store, such as what version of Neo4j created it.\"\n+  name = \"store-info\",\n+  header = \"Print information about a Neo4j database store.\",\n+  description = \"Print information about a Neo4j database store, such as what version of Neo4j created it.\"\n )\n public class StoreInfoCommand extends AbstractCommand\n {\n-    @Option( names = \"--structured\", arity = \"0\", description = \"Return result structured as json\" )\n+    @Option(names = \"--structured\", arity = \"0\", description = \"Return result structured as json\")\n     private boolean structured;\n \n-    @Option( names = \"--all\", arity = \"0\", description = \"Return store info for all databases at provided path\" )\n+    @Option(names = \"--all\", arity = \"0\", description = \"Return store info for all databases at provided path\")\n     private boolean all;\n \n-    @Parameters( description = \"Path to database store files, or databases directory if --all option is used\" )\n+    @Parameters(description = \"Path to database store files, or databases directory if --all option is used\")\n     private Path path;\n \n-    public StoreInfoCommand( ExecutionContext ctx )\n+    public StoreInfoCommand(ExecutionContext ctx)\n     {\n-        super( ctx );\n+        super(ctx);\n     }\n \n     @Override\n     public void execute()\n     {\n         var storageEngineFactory = StorageEngineFactory.selectStorageEngine();\n-        var config = CommandHelpers.buildConfig( ctx );\n-        var neo4jLayout = Neo4jLayout.of( config );\n-        try ( var fs = ctx.fs();\n-              var jobScheduler = createInitialisedScheduler();\n-              var pageCache = StandalonePageCacheFactory.createPageCache( fs, jobScheduler, PageCacheTracer.NULL ) )\n+        var config = CommandHelpers.buildConfig(ctx);\n+        var neo4jLayout = Neo4jLayout.of(config);\n+        try (var fs = ctx.fs();\n+             var jobScheduler = createInitialisedScheduler();\n+             var pageCache = StandalonePageCacheFactory.createPageCache(fs, jobScheduler, PageCacheTracer.NULL))\n         {\n-            validatePath( fs, all, path, neo4jLayout );\n-            if ( all )\n+            validatePath(fs, all, path, neo4jLayout);\n+            if (all)\n             {\n                 var collector = structured ?\n-                                Collectors.joining( \",\", \"[\", \"]\" ) :\n-                                Collectors.joining( System.lineSeparator() + System.lineSeparator() );\n-                var result = Arrays.stream( fs.listFiles( path ) )\n-                        .sorted( comparing( Path::getFileName ) )\n-                        .map( dbPath -> neo4jLayout.databaseLayout( dbPath.getFileName().toString() ) )\n-                        .filter( dbLayout -> Validators.isExistingDatabase( fs, dbLayout ) )\n-                        .map( dbLayout -> printInfo( fs, dbLayout, pageCache, storageEngineFactory, config, structured, true ) )\n-                        .collect( collector );\n-                ctx.out().println( result );\n-            }\n-            else\n+                  Collectors.joining(\",\", \"[\", \"]\") :\n+                  Collectors.joining(System.lineSeparator() + System.lineSeparator());\n+                var result = Arrays.stream(fs.listFiles(path))\n+                  .sorted(comparing(Path::getFileName))\n+                  .map(dbPath -> neo4jLayout.databaseLayout(dbPath.getFileName().toString()))\n+                  .filter(dbLayout -> Validators.isExistingDatabase(fs, dbLayout))\n+                  .map(dbLayout -> printInfo(fs, dbLayout, pageCache, storageEngineFactory, config, structured, true))\n+                  .collect(collector);\n+                ctx.out().println(result);\n+            } else\n             {\n-                var databaseLayout = neo4jLayout.databaseLayout( path.getFileName().toString() );\n-                ctx.out().println( printInfo( fs, databaseLayout, pageCache, storageEngineFactory, config, structured, false ) );\n+                var databaseLayout = neo4jLayout.databaseLayout(path.getFileName().toString());\n+                ctx.out().println(printInfo(fs, databaseLayout, pageCache, storageEngineFactory, config, structured, false));\n             }\n-        }\n-        catch ( CommandFailedException e )\n+        } catch (CommandFailedException e)\n         {\n             throw e;\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new CommandFailedException( format( \"Failed to execute command: '%s'.\", e.getMessage() ), e );\n+            throw new CommandFailedException(format(\"Failed to execute command: '%s'.\", e.getMessage()), e);\n         }\n     }\n \n-    private static void validatePath( FileSystemAbstraction fs, boolean all, Path storePath, Neo4jLayout neo4jLayout )\n+    private static void validatePath(FileSystemAbstraction fs, boolean all, Path storePath, Neo4jLayout neo4jLayout)\n     {\n-        if ( !fs.isDirectory( storePath ) )\n+        if (!fs.isDirectory(storePath))\n         {\n-            throw new IllegalArgumentException( format( \"Provided path %s must point to a directory.\", storePath.toAbsolutePath() ) );\n+            throw new IllegalArgumentException(format(\"Provided path %s must point to a directory.\", storePath.toAbsolutePath()));\n         }\n \n         var dirName = storePath.getFileName().toString();\n-        var databaseLayout = neo4jLayout.databaseLayout( dirName );\n-        var pathIsDatabase = Validators.isExistingDatabase( fs, databaseLayout );\n-        if ( all && pathIsDatabase )\n+        var databaseLayout = neo4jLayout.databaseLayout(dirName);\n+        var pathIsDatabase = Validators.isExistingDatabase(fs, databaseLayout);\n+        if (all && pathIsDatabase)\n         {\n-            throw new IllegalArgumentException( format( \"You used the --all option but directory %s contains the store files of a single database, \" +\n-                                                \"rather than several database directories.\", storePath.toAbsolutePath() ) );\n-        }\n-        else if ( !all && !pathIsDatabase )\n+            throw new IllegalArgumentException(format(\"You used the --all option but directory %s contains the store files of a single database, \" +\n+              \"rather than several database directories.\", storePath.toAbsolutePath()));\n+        } else if (!all && !pathIsDatabase)\n         {\n-            throw new IllegalArgumentException( format( \"Directory %s does not contain the store files of a database, but you did not use the --all option.\",\n-                                                        storePath.toAbsolutePath() ) );\n+            throw new IllegalArgumentException(format(\"Directory %s does not contain the store files of a database, but you did not use the --all option.\",\n+              storePath.toAbsolutePath()));\n         }\n     }\n \n-    private static String printInfo( FileSystemAbstraction fs, DatabaseLayout databaseLayout, PageCache pageCache, StorageEngineFactory storageEngineFactory,\n-            Config config, boolean structured, boolean failSilently )\n+    private static String printInfo(FileSystemAbstraction fs, DatabaseLayout databaseLayout, PageCache pageCache, StorageEngineFactory storageEngineFactory,\n+                                    Config config, boolean structured, boolean failSilently)\n     {\n         var memoryTracker = EmptyMemoryTracker.INSTANCE;\n-        try ( var ignored = LockChecker.checkDatabaseLock( databaseLayout ) )\n+        try (var ignored = LockChecker.checkDatabaseLock(databaseLayout))\n         {\n-            var storeVersionCheck = storageEngineFactory.versionCheck( fs, databaseLayout, Config.defaults(), pageCache,\n-                    NullLogService.getInstance(), PageCacheTracer.NULL );\n-            var storeVersion = storeVersionCheck.storeVersion( PageCursorTracer.NULL )\n-                    .orElseThrow( () ->\n-                            new CommandFailedException( format( \"Could not find version metadata in store '%s'\", databaseLayout.databaseDirectory() ) ) );\n+            var storeVersionCheck = storageEngineFactory.versionCheck(fs, databaseLayout, Config.defaults(), pageCache,\n+              NullLogService.getInstance(), PageCacheTracer.NULL);\n+            var storeVersion = storeVersionCheck.storeVersion(PageCursorTracer.NULL)\n+              .orElseThrow(() ->\n+                new CommandFailedException(format(\"Could not find version metadata in store '%s'\", databaseLayout.databaseDirectory())));\n \n-            var versionInformation = storageEngineFactory.versionInformation( storeVersion );\n+            var versionInformation = storageEngineFactory.versionInformation(storeVersion);\n \n-            var recoveryRequired = checkRecoveryState( fs, databaseLayout, config, memoryTracker );\n-            var txIdStore = storageEngineFactory.readOnlyTransactionIdStore( fs, databaseLayout, pageCache, PageCursorTracer.NULL );\n+            var recoveryRequired = checkRecoveryState(fs, databaseLayout, config, memoryTracker);\n+            var txIdStore = storageEngineFactory.readOnlyTransactionIdStore(fs, databaseLayout, pageCache, PageCursorTracer.NULL);\n             var lastTxId = txIdStore.getLastCommittedTransactionId(); // Latest committed tx id found in metadata store. May be behind if recovery is required.\n-            var successorString = versionInformation.successor().map( StoreVersion::introductionNeo4jVersion ).orElse( null );\n+            var successorString = versionInformation.successor().map(StoreVersion::introductionNeo4jVersion).orElse(null);\n \n-            var storeInfo = StoreInfo.notInUseResult( databaseLayout.getDatabaseName(),\n-                    storeVersion,\n-                    versionInformation.introductionNeo4jVersion(),\n-                    successorString,\n-                    lastTxId,\n-                    recoveryRequired );\n+            var storeInfo = StoreInfo.notInUseResult(databaseLayout.getDatabaseName(),\n+              storeVersion,\n+              versionInformation.introductionNeo4jVersion(),\n+              successorString,\n+              lastTxId,\n+              recoveryRequired);\n \n-            return storeInfo.print( structured );\n-        }\n-        catch ( FileLockException e )\n+            return storeInfo.print(structured);\n+        } catch (FileLockException e)\n         {\n-            if ( !failSilently )\n+            if (!failSilently)\n             {\n-                throw new CommandFailedException( format( \"Failed to execute command as the database '%s' is in use. \" +\n-                                                          \"Please stop it and try again.\", databaseLayout.getDatabaseName() ), e );\n+                throw new CommandFailedException(format(\"Failed to execute command as the database '%s' is in use. \" +\n+                  \"Please stop it and try again.\", databaseLayout.getDatabaseName()), e);\n             }\n-            return StoreInfo.inUseResult( databaseLayout.getDatabaseName() ).print( structured );\n-        }\n-        catch ( CommandFailedException e )\n+            return StoreInfo.inUseResult(databaseLayout.getDatabaseName()).print(structured);\n+        } catch (CommandFailedException e)\n         {\n             throw e;\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new CommandFailedException( format( \"Failed to execute command: '%s'.\", e.getMessage() ), e );\n+            throw new CommandFailedException(format(\"Failed to execute command: '%s'.\", e.getMessage()), e);\n         }\n     }\n \n-    private static boolean checkRecoveryState( FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, MemoryTracker memoryTracker )\n+    private static boolean checkRecoveryState(FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config, MemoryTracker memoryTracker)\n     {\n         try\n         {\n-            return isRecoveryRequired( fs, databaseLayout, config, memoryTracker );\n-        }\n-        catch ( Exception e )\n+            return isRecoveryRequired(fs, databaseLayout, config, memoryTracker);\n+        } catch (Exception e)\n         {\n-            throw new CommandFailedException( format( \"Failed to execute command when checking for recovery state: '%s'.\", e.getMessage() ), e );\n+            throw new CommandFailedException(format(\"Failed to execute command when checking for recovery state: '%s'.\", e.getMessage()), e);\n         }\n     }\n \n@@ -206,19 +199,19 @@ public class StoreInfoCommand extends AbstractCommand\n         private final boolean recoveryRequired;\n         private final boolean inUse;\n \n-        static StoreInfo inUseResult( String databaseName )\n+        static StoreInfo inUseResult(String databaseName)\n         {\n-            return new StoreInfo( databaseName, true, null, null, null, -1, true );\n+            return new StoreInfo(databaseName, true, null, null, null, -1, true);\n         }\n \n-        static StoreInfo notInUseResult( String databaseName, String storeFormat, String storeFormatIntroduced, String storeFormatSuperseded,\n-                long lastCommittedTransaction, boolean recoveryRequired )\n+        static StoreInfo notInUseResult(String databaseName, String storeFormat, String storeFormatIntroduced, String storeFormatSuperseded,\n+                                        long lastCommittedTransaction, boolean recoveryRequired)\n         {\n-            return new StoreInfo( databaseName, false, storeFormat, storeFormatIntroduced, storeFormatSuperseded, lastCommittedTransaction, recoveryRequired );\n+            return new StoreInfo(databaseName, false, storeFormat, storeFormatIntroduced, storeFormatSuperseded, lastCommittedTransaction, recoveryRequired);\n         }\n \n-        private StoreInfo( String databaseName, boolean inUse, String storeFormat, String storeFormatIntroduced, String storeFormatSuperseded,\n-                long lastCommittedTransaction, boolean recoveryRequired )\n+        private StoreInfo(String databaseName, boolean inUse, String storeFormat, String storeFormatIntroduced, String storeFormatSuperseded,\n+                          long lastCommittedTransaction, boolean recoveryRequired)\n         {\n             this.databaseName = databaseName;\n             this.storeFormat = storeFormat;\n@@ -229,64 +222,64 @@ public class StoreInfoCommand extends AbstractCommand\n             this.inUse = inUse;\n         }\n \n-        List<Pair<InfoType,String>> printFields()\n+        List<Pair<InfoType, String>> printFields()\n         {\n             return List.of(\n-                    Pair.of( InfoType.DatabaseName, databaseName ),\n-                    Pair.of( InfoType.InUse, Boolean.toString( inUse ) ),\n-                    Pair.of( InfoType.StoreFormat, storeFormat ),\n-                    Pair.of( InfoType.StoreFormatIntroduced, storeFormatIntroduced ),\n-                    Pair.of( InfoType.StoreFormatSuperseded, storeFormatSuperseded ),\n-                    Pair.of( InfoType.LastCommittedTransaction, Long.toString( lastCommittedTransaction ) ),\n-                    Pair.of( InfoType.RecoveryRequired, Boolean.toString( recoveryRequired ) ) );\n+              Pair.of(InfoType.DatabaseName, databaseName),\n+              Pair.of(InfoType.InUse, Boolean.toString(inUse)),\n+              Pair.of(InfoType.StoreFormat, storeFormat),\n+              Pair.of(InfoType.StoreFormatIntroduced, storeFormatIntroduced),\n+              Pair.of(InfoType.StoreFormatSuperseded, storeFormatSuperseded),\n+              Pair.of(InfoType.LastCommittedTransaction, Long.toString(lastCommittedTransaction)),\n+              Pair.of(InfoType.RecoveryRequired, Boolean.toString(recoveryRequired)));\n         }\n \n-        String print( boolean structured )\n+        String print(boolean structured)\n         {\n-            if ( !structured )\n+            if (!structured)\n             {\n                 return printFields().stream()\n-                                    .filter( p -> Objects.nonNull( p.other() ) )\n-                                    .map( p -> p.first().justifiedPretty( p.other() ) )\n-                                    .collect( Collectors.joining( System.lineSeparator() ) );\n+                  .filter(p -> Objects.nonNull(p.other()))\n+                  .map(p -> p.first().justifiedPretty(p.other()))\n+                  .collect(Collectors.joining(System.lineSeparator()));\n             }\n             return printFields().stream()\n-                                .map( p -> p.first().structuredJson( p.other() ) )\n-                                .collect( Collectors.joining( \",\", \"{\", \"}\" ) );\n+              .map(p -> p.first().structuredJson(p.other()))\n+              .collect(Collectors.joining(\",\", \"{\", \"}\"));\n         }\n     }\n \n     private enum InfoType\n     {\n-        InUse( \"Database in use\", \"inUse\" ),\n-        DatabaseName( \"Database name\", \"databaseName\" ),\n-        StoreFormat( \"Store format version\", \"storeFormat\" ),\n-        StoreFormatIntroduced( \"Store format introduced in\", \"storeFormatIntroduced\" ),\n-        StoreFormatSuperseded( \"Store format superseded in\", \"storeFormatSuperseded\" ),\n-        LastCommittedTransaction( \"Last committed transaction id\", \"lastCommittedTransaction\" ),\n-        RecoveryRequired( \"Store needs recovery\", \"recoveryRequired\" );\n+        InUse(\"Database in use\", \"inUse\"),\n+        DatabaseName(\"Database name\", \"databaseName\"),\n+        StoreFormat(\"Store format version\", \"storeFormat\"),\n+        StoreFormatIntroduced(\"Store format introduced in\", \"storeFormatIntroduced\"),\n+        StoreFormatSuperseded(\"Store format superseded in\", \"storeFormatSuperseded\"),\n+        LastCommittedTransaction(\"Last committed transaction id\", \"lastCommittedTransaction\"),\n+        RecoveryRequired(\"Store needs recovery\", \"recoveryRequired\");\n \n         private final String prettyPrint;\n         private final String jsonKey;\n \n-        InfoType( String prettyPrint, String jsonKey )\n+        InfoType(String prettyPrint, String jsonKey)\n         {\n             this.prettyPrint = prettyPrint;\n             this.jsonKey = jsonKey;\n         }\n \n-        String justifiedPretty( String value )\n+        String justifiedPretty(String value)\n         {\n             var nullSafeValue = value == null ? \"N/A\" : value;\n             var leftJustifiedFmt = \"%-30s%s\";\n-            return String.format( leftJustifiedFmt, prettyPrint + \":\", nullSafeValue );\n+            return String.format(leftJustifiedFmt, prettyPrint + \":\", nullSafeValue);\n         }\n \n-        String structuredJson( String value )\n+        String structuredJson(String value)\n         {\n             var kFmt = \"\\\"%s\\\":\";\n             var kvFmt = kFmt + \"\\\"%s\\\"\";\n-            return value == null ? String.format( kFmt + \"null\", jsonKey ) : String.format( kvFmt, jsonKey, value );\n+            return value == null ? String.format(kFmt + \"null\", jsonKey) : String.format(kvFmt, jsonKey, value);\n         }\n     }\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
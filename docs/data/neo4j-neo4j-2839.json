{
    "project_name": "neo4j-neo4j",
    "error_id": "2839",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2839/ReadyState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2839/ReadyState.java\nindex 2f6edcec873..cd3491cdf7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2839/ReadyState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2839/ReadyState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v3.runtime;\n \n import org.neo4j.bolt.messaging.BoltIOException;\n@@ -52,15 +53,15 @@ public class ReadyState extends FailSafeBoltStateMachineState\n     public static final String FIRST_RECORD_AVAILABLE_KEY = \"t_first\";\n \n     @Override\n-    public BoltStateMachineState processUnsafe( RequestMessage message, StateMachineContext context ) throws Exception\n+    public BoltStateMachineState processUnsafe(RequestMessage message, StateMachineContext context) throws Exception\n     {\n-        if ( message instanceof RunMessage )\n+        if (message instanceof RunMessage)\n         {\n-            return processRunMessage( (RunMessage) message, context );\n+            return processRunMessage((RunMessage) message, context);\n         }\n-        if ( message instanceof BeginMessage )\n+        if (message instanceof BeginMessage)\n         {\n-            return processBeginMessage( (BeginMessage) message, context );\n+            return processBeginMessage((BeginMessage) message, context);\n         }\n         return null;\n     }\n@@ -71,48 +72,48 @@ public class ReadyState extends FailSafeBoltStateMachineState\n         return \"READY\";\n     }\n \n-    public void setStreamingState( BoltStateMachineState streamingState )\n+    public void setStreamingState(BoltStateMachineState streamingState)\n     {\n         this.streamingState = streamingState;\n     }\n \n-    public void setTransactionReadyState( BoltStateMachineState txReadyState )\n+    public void setTransactionReadyState(BoltStateMachineState txReadyState)\n     {\n         this.txReadyState = txReadyState;\n     }\n \n-    private BoltStateMachineState processRunMessage( RunMessage message, StateMachineContext context ) throws Exception\n+    private BoltStateMachineState processRunMessage(RunMessage message, StateMachineContext context) throws Exception\n     {\n         long start = context.clock().millis();\n-        StatementProcessor statementProcessor = getStatementProcessor( message, context );\n-        StatementMetadata statementMetadata = statementProcessor.run( message.statement(), message.params(), message.bookmarks(), message.transactionTimeout(),\n-                message.getAccessMode(), message.transactionMetadata() );\n+        StatementProcessor statementProcessor = getStatementProcessor(message, context);\n+        StatementMetadata statementMetadata = statementProcessor.run(message.statement(), message.params(), message.bookmarks(), message.transactionTimeout(),\n+          message.getAccessMode(), message.transactionMetadata());\n         long end = context.clock().millis();\n \n-        context.connectionState().onMetadata( FIELDS_KEY, stringArray( statementMetadata.fieldNames() ) );\n-        context.connectionState().onMetadata( FIRST_RECORD_AVAILABLE_KEY, Values.longValue( end - start ) );\n+        context.connectionState().onMetadata(FIELDS_KEY, stringArray(statementMetadata.fieldNames()));\n+        context.connectionState().onMetadata(FIRST_RECORD_AVAILABLE_KEY, Values.longValue(end - start));\n \n         return streamingState;\n     }\n \n-    private BoltStateMachineState processBeginMessage( BeginMessage message, StateMachineContext context ) throws Exception\n+    private BoltStateMachineState processBeginMessage(BeginMessage message, StateMachineContext context) throws Exception\n     {\n-        StatementProcessor statementProcessor = getStatementProcessor( message, context );\n-        statementProcessor.beginTransaction( message.bookmarks(), message.transactionTimeout(), message.getAccessMode(), message.transactionMetadata() );\n+        StatementProcessor statementProcessor = getStatementProcessor(message, context);\n+        statementProcessor.beginTransaction(message.bookmarks(), message.transactionTimeout(), message.getAccessMode(), message.transactionMetadata());\n         return txReadyState;\n     }\n \n     @Override\n     protected void assertInitialized()\n     {\n-        checkState( streamingState != null, \"Streaming state not set\" );\n-        checkState( txReadyState != null, \"TransactionReady state not set\" );\n+        checkState(streamingState != null, \"Streaming state not set\");\n+        checkState(txReadyState != null, \"TransactionReady state not set\");\n         super.assertInitialized();\n     }\n \n-    protected StatementProcessor getStatementProcessor( TransactionInitiatingMessage message, StateMachineContext context )\n-            throws BoltProtocolBreachFatality, BoltIOException\n+    protected StatementProcessor getStatementProcessor(TransactionInitiatingMessage message, StateMachineContext context)\n+      throws BoltProtocolBreachFatality, BoltIOException\n     {\n-        return context.setCurrentStatementProcessorForDatabase( ABSENT_DB_NAME );\n+        return context.setCurrentStatementProcessorForDatabase(ABSENT_DB_NAME);\n     }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2839/ReadyState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2839/ReadyState.java\nindex 2f6edcec873..b0ec88b67e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2839/ReadyState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2839/ReadyState.java\n@@ -115,4 +115,4 @@ public class ReadyState extends FailSafeBoltStateMachineState\n     {\n         return context.setCurrentStatementProcessorForDatabase( ABSENT_DB_NAME );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
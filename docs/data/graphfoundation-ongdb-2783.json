{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2783",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2783/DelegatingTokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2783/DelegatingTokenHolder.java\nindex 42a4aeb9dba..972b9208144 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2783/DelegatingTokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2783/DelegatingTokenHolder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import java.util.List;\n@@ -35,120 +36,118 @@ import org.neo4j.storageengine.api.TokenFactory;\n  */\n public abstract class DelegatingTokenHolder<TOKEN extends Token> extends LifecycleAdapter implements TokenHolder<TOKEN>\n {\n-    protected InMemoryTokenCache<TOKEN> tokenCache = new InMemoryTokenCache<>( tokenType() );\n-\n-    protected abstract String tokenType();\n-\n-    private final TokenCreator tokenCreator;\n-    private final TokenFactory<TOKEN> tokenFactory;\n-\n-    public DelegatingTokenHolder( TokenCreator tokenCreator, TokenFactory<TOKEN> tokenFactory )\n+  protected InMemoryTokenCache<TOKEN> tokenCache = new InMemoryTokenCache<>(tokenType());\n+\n+  protected abstract String tokenType();\n+\n+  private final TokenCreator tokenCreator;\n+  private final TokenFactory<TOKEN> tokenFactory;\n+\n+  public DelegatingTokenHolder(TokenCreator tokenCreator, TokenFactory<TOKEN> tokenFactory)\n+  {\n+    this.tokenCreator = tokenCreator;\n+    this.tokenFactory = tokenFactory;\n+  }\n+\n+  @Override\n+  public void setInitialTokens(List<TOKEN> tokens) throws NonUniqueTokenException\n+  {\n+    tokenCache.clear();\n+    tokenCache.putAll(tokens);\n+  }\n+\n+  @Override\n+  public void addToken(TOKEN token) throws NonUniqueTokenException\n+  {\n+    tokenCache.put(token);\n+  }\n+\n+  @Override\n+  public int getOrCreateId(String name)\n+  {\n+    Integer id = tokenCache.getId(name);\n+    if (id != null)\n     {\n-        this.tokenCreator = tokenCreator;\n-        this.tokenFactory = tokenFactory;\n+      return id;\n     }\n \n-    @Override\n-    public void setInitialTokens( List<TOKEN> tokens ) throws NonUniqueTokenException\n+    // Let's create it\n+    try\n     {\n-        tokenCache.clear();\n-        tokenCache.putAll( tokens );\n-    }\n-\n-    @Override\n-    public void addToken( TOKEN token ) throws NonUniqueTokenException\n-    {\n-        tokenCache.put( token );\n-    }\n-\n-    @Override\n-    public int getOrCreateId( String name )\n+      id = createToken(name);\n+      return id;\n+    } catch (ReadOnlyDbException e)\n     {\n-        Integer id = tokenCache.getId( name );\n-        if ( id != null )\n-        {\n-            return id;\n-        }\n-\n-        // Let's create it\n-        try\n-        {\n-            id = createToken( name );\n-            return id;\n-        }\n-        catch ( ReadOnlyDbException e )\n-        {\n-            throw new TransactionFailureException( e.getMessage(), e );\n-        }\n-        catch ( Throwable e )\n-        {\n-            throw new TransactionFailureException( \"Could not create token\", e );\n-        }\n-    }\n-\n-    /**\n-     * Create and put new token in cache.\n-     * @param name token name\n-     * @return newly created token id\n-     * @throws KernelException\n-     */\n-    private synchronized int createToken( String name ) throws KernelException\n+      throw new TransactionFailureException(e.getMessage(), e);\n+    } catch (Throwable e)\n     {\n-        Integer id = tokenCache.getId( name );\n-        if ( id != null )\n-        {\n-            return id;\n-        }\n-\n-        id = tokenCreator.getOrCreate( name );\n-        try\n-        {\n-            tokenCache.put( tokenFactory.newToken( name, id ) );\n-        }\n-        catch ( NonUniqueTokenException e )\n-        {\n-            throw new IllegalStateException( \"Newly created token should be unique.\", e );\n-        }\n-        return id;\n+      throw new TransactionFailureException(\"Could not create token\", e);\n     }\n-\n-    @Override\n-    public TOKEN getTokenById( int id ) throws TokenNotFoundException\n+  }\n+\n+  /**\n+   * Create and put new token in cache.\n+   *\n+   * @param name token name\n+   * @return newly created token id\n+   * @throws KernelException\n+   */\n+  private synchronized int createToken(String name) throws KernelException\n+  {\n+    Integer id = tokenCache.getId(name);\n+    if (id != null)\n     {\n-        TOKEN result = getTokenByIdOrNull( id );\n-        if ( result == null )\n-        {\n-            throw new TokenNotFoundException( \"Token for id \" + id );\n-        }\n-        return result;\n+      return id;\n     }\n \n-    @Override\n-    public TOKEN getTokenByIdOrNull( int id )\n+    id = tokenCreator.getOrCreate(name);\n+    try\n     {\n-        return tokenCache.getToken( id );\n-    }\n-\n-    @Override\n-    public int getIdByName( String name )\n+      tokenCache.put(tokenFactory.newToken(name, id));\n+    } catch (NonUniqueTokenException e)\n     {\n-        Integer id = tokenCache.getId( name );\n-        if ( id == null )\n-        {\n-            return NO_ID;\n-        }\n-        return id;\n+      throw new IllegalStateException(\"Newly created token should be unique.\", e);\n     }\n-\n-    @Override\n-    public Iterable<TOKEN> getAllTokens()\n+    return id;\n+  }\n+\n+  @Override\n+  public TOKEN getTokenById(int id) throws TokenNotFoundException\n+  {\n+    TOKEN result = getTokenByIdOrNull(id);\n+    if (result == null)\n     {\n-        return tokenCache.allTokens();\n+      throw new TokenNotFoundException(\"Token for id \" + id);\n     }\n-\n-    @Override\n-    public int size()\n+    return result;\n+  }\n+\n+  @Override\n+  public TOKEN getTokenByIdOrNull(int id)\n+  {\n+    return tokenCache.getToken(id);\n+  }\n+\n+  @Override\n+  public int getIdByName(String name)\n+  {\n+    Integer id = tokenCache.getId(name);\n+    if (id == null)\n     {\n-        return tokenCache.size();\n+      return NO_ID;\n     }\n+    return id;\n+  }\n+\n+  @Override\n+  public Iterable<TOKEN> getAllTokens()\n+  {\n+    return tokenCache.allTokens();\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return tokenCache.size();\n+  }\n }\n",
            "diff_size": 163
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2783/DelegatingTokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2783/DelegatingTokenHolder.java\nindex 42a4aeb9dba..bd182b46eaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2783/DelegatingTokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2783/DelegatingTokenHolder.java\n@@ -109,7 +109,8 @@ public abstract class DelegatingTokenHolder<TOKEN extends Token> extends Lifecyc\n         {\n             throw new IllegalStateException( \"Newly created token should be unique.\", e );\n         }\n-        return id;\n+\n+return id;\n     }\n \n     @Override\n@@ -120,7 +121,8 @@ public abstract class DelegatingTokenHolder<TOKEN extends Token> extends Lifecyc\n         {\n             throw new TokenNotFoundException( \"Token for id \" + id );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     @Override\n@@ -137,7 +139,8 @@ public abstract class DelegatingTokenHolder<TOKEN extends Token> extends Lifecyc\n         {\n             return NO_ID;\n         }\n-        return id;\n+\n+return id;\n     }\n \n     @Override\n@@ -151,4 +154,4 @@ public abstract class DelegatingTokenHolder<TOKEN extends Token> extends Lifecyc\n     {\n         return tokenCache.size();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
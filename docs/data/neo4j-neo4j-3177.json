{
    "project_name": "neo4j-neo4j",
    "error_id": "3177",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "298",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "334",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "342",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "345",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "348",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "351",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "356",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3177/CursorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3177/CursorUtils.java\nindex 57218d7b33e..87cb9cb1901 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3177/CursorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3177/CursorUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.operations;\n \n import org.neo4j.cypher.internal.runtime.DbAccess;\n@@ -48,7 +49,7 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n /**\n  * Utilities for working with cursors from within generated code\n  */\n-@SuppressWarnings( {\"Duplicates\"} )\n+@SuppressWarnings({\"Duplicates\"})\n public final class CursorUtils\n {\n     /**\n@@ -62,130 +63,129 @@ public final class CursorUtils\n     /**\n      * Fetches a given property from a node\n      *\n-     * @param read The current Read instance\n-     * @param nodeCursor The node cursor to use\n-     * @param node The id of the node\n+     * @param read           The current Read instance\n+     * @param nodeCursor     The node cursor to use\n+     * @param node           The id of the node\n      * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n+     * @param prop           The id of the property to find\n      * @return The value of the given property\n      * @throws EntityNotFoundException If the node was deleted in transaction.\n      */\n     public static Value nodeGetProperty(\n-            Read read,\n-            NodeCursor nodeCursor,\n-            long node,\n-            PropertyCursor propertyCursor,\n-            int prop\n+      Read read,\n+      NodeCursor nodeCursor,\n+      long node,\n+      PropertyCursor propertyCursor,\n+      int prop\n     ) throws EntityNotFoundException\n     {\n-        return nodeGetProperty( read, nodeCursor, node, propertyCursor, prop, true );\n+        return nodeGetProperty(read, nodeCursor, node, propertyCursor, prop, true);\n     }\n \n     /**\n      * Fetches a given property from a node\n      *\n-     * @param read The current Read instance\n-     * @param nodeCursor The node cursor to use\n-     * @param node The id of the node\n+     * @param read           The current Read instance\n+     * @param nodeCursor     The node cursor to use\n+     * @param node           The id of the node\n      * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n+     * @param prop           The id of the property to find\n      * @param throwOnDeleted if <code>true</code> and exception will be thrown if node has been deleted\n      * @return The value of the given property\n      * @throws EntityNotFoundException If the node was deleted in transaction.\n      */\n     public static Value nodeGetProperty(\n-            Read read,\n-            NodeCursor nodeCursor,\n-            long node,\n-            PropertyCursor propertyCursor,\n-            int prop,\n-            boolean throwOnDeleted\n+      Read read,\n+      NodeCursor nodeCursor,\n+      long node,\n+      PropertyCursor propertyCursor,\n+      int prop,\n+      boolean throwOnDeleted\n     ) throws EntityNotFoundException\n     {\n-        if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n+        if (prop == StatementConstants.NO_SUCH_PROPERTY_KEY)\n         {\n             return NO_VALUE;\n         }\n-        read.singleNode( node, nodeCursor );\n-        if ( !nodeCursor.next() )\n+        read.singleNode(node, nodeCursor);\n+        if (!nodeCursor.next())\n         {\n-            if ( throwOnDeleted && read.nodeDeletedInTransaction( node ) )\n+            if (throwOnDeleted && read.nodeDeletedInTransaction(node))\n             {\n-                throw new EntityNotFoundException( String.format(\"Node with id %d has been deleted in this transaction\", node ) );\n-            }\n-            else\n+                throw new EntityNotFoundException(String.format(\"Node with id %d has been deleted in this transaction\", node));\n+            } else\n             {\n                 return NO_VALUE;\n             }\n         }\n-        nodeCursor.properties( propertyCursor );\n-        return propertyCursor.seekProperty( prop ) ? propertyCursor.propertyValue() : NO_VALUE;\n+        nodeCursor.properties(propertyCursor);\n+        return propertyCursor.seekProperty(prop) ? propertyCursor.propertyValue() : NO_VALUE;\n     }\n \n     /**\n      * Checks if a given node has the given property\n      *\n-     * @param read The current Read instance\n-     * @param nodeCursor The node cursor to use\n-     * @param node The id of the node\n+     * @param read           The current Read instance\n+     * @param nodeCursor     The node cursor to use\n+     * @param node           The id of the node\n      * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n+     * @param prop           The id of the property to find\n      * @return <code>true</code> if node has property otherwise <code>false</code>\n      */\n     public static boolean nodeHasProperty(\n-            Read read,\n-            NodeCursor nodeCursor,\n-            long node,\n-            PropertyCursor propertyCursor,\n-            int prop\n+      Read read,\n+      NodeCursor nodeCursor,\n+      long node,\n+      PropertyCursor propertyCursor,\n+      int prop\n     ) throws EntityNotFoundException\n     {\n-        if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n+        if (prop == StatementConstants.NO_SUCH_PROPERTY_KEY)\n         {\n             return false;\n         }\n-        read.singleNode( node, nodeCursor );\n-        if ( !nodeCursor.next() )\n+        read.singleNode(node, nodeCursor);\n+        if (!nodeCursor.next())\n         {\n-           return false;\n+            return false;\n         }\n-        nodeCursor.properties( propertyCursor );\n-        return propertyCursor.seekProperty( prop );\n+        nodeCursor.properties(propertyCursor);\n+        return propertyCursor.seekProperty(prop);\n     }\n \n     /**\n      * Checks if given node has a given label.\n      *\n-     * @param read The current Read instance\n+     * @param read       The current Read instance\n      * @param nodeCursor The node cursor to use\n-     * @param node The id of the node\n-     * @param label The id of the label\n+     * @param node       The id of the node\n+     * @param label      The id of the label\n      * @return {@code true} if the node has the label, otherwise {@code false}\n      */\n-    public static boolean nodeHasLabel( Read read, NodeCursor nodeCursor, long node, int label )\n+    public static boolean nodeHasLabel(Read read, NodeCursor nodeCursor, long node, int label)\n     {\n-        read.singleNode( node, nodeCursor );\n-        if ( !nodeCursor.next() )\n+        read.singleNode(node, nodeCursor);\n+        if (!nodeCursor.next())\n         {\n             return false;\n         }\n \n-        return nodeCursor.hasLabel( label );\n+        return nodeCursor.hasLabel(label);\n     }\n \n     /**\n      * Checks if given relationship has a given type.\n      *\n-     * @param read The current Read instance\n+     * @param read               The current Read instance\n      * @param relationshipCursor The relationship cursor to use\n-     * @param relationship The id of the relationship\n-     * @param type The id of the type\n+     * @param relationship       The id of the relationship\n+     * @param type               The id of the type\n      * @return {@code true} if the relationship has the type, otherwise {@code false}\n      */\n-    public static boolean relationshipHasType( Read read, RelationshipScanCursor relationshipCursor, long relationship, int type )\n+    public static boolean relationshipHasType(Read read, RelationshipScanCursor relationshipCursor, long relationship, int type)\n     {\n-        read.singleRelationship( relationship, relationshipCursor );\n-        if ( !relationshipCursor.next() )\n+        read.singleRelationship(relationship, relationshipCursor);\n+        if (!relationshipCursor.next())\n         {\n             return false;\n         }\n@@ -193,175 +193,168 @@ public final class CursorUtils\n         return relationshipCursor.type() == type;\n     }\n \n-    public static RelationshipTraversalCursor nodeGetRelationships( Read read, CursorFactory cursors, NodeCursor node,\n-            long nodeId, Direction direction, int[] types, PageCursorTracer cursorTracer )\n+    public static RelationshipTraversalCursor nodeGetRelationships(Read read, CursorFactory cursors, NodeCursor node,\n+                                                                   long nodeId, Direction direction, int[] types, PageCursorTracer cursorTracer)\n     {\n-        read.singleNode( nodeId, node );\n-        if ( !node.next() )\n+        read.singleNode(nodeId, node);\n+        if (!node.next())\n         {\n-            return Cursors.emptyTraversalCursor( read );\n+            return Cursors.emptyTraversalCursor(read);\n         }\n-        switch ( direction )\n+        switch (direction)\n         {\n-        case OUTGOING:\n-            return RelationshipSelections.outgoingCursor( cursors, node, types, cursorTracer );\n-        case INCOMING:\n-            return RelationshipSelections.incomingCursor( cursors, node, types, cursorTracer );\n-        case BOTH:\n-            return RelationshipSelections.allCursor( cursors, node, types, cursorTracer );\n-        default:\n-            throw new IllegalStateException( \"Unknown direction \" + direction );\n+            case OUTGOING:\n+                return RelationshipSelections.outgoingCursor(cursors, node, types, cursorTracer);\n+            case INCOMING:\n+                return RelationshipSelections.incomingCursor(cursors, node, types, cursorTracer);\n+            case BOTH:\n+                return RelationshipSelections.allCursor(cursors, node, types, cursorTracer);\n+            default:\n+                throw new IllegalStateException(\"Unknown direction \" + direction);\n         }\n     }\n \n     /**\n      * Fetches a given property from a relationship\n      *\n-     * @param read The current Read instance\n+     * @param read               The current Read instance\n      * @param relationshipCursor The relationship cursor to use\n-     * @param relationship The id of the relationship\n-     * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n+     * @param relationship       The id of the relationship\n+     * @param propertyCursor     The property cursor to use\n+     * @param prop               The id of the property to find\n      * @return The value of the given property\n      * @throws EntityNotFoundException If the node cannot be find.\n      */\n     public static Value relationshipGetProperty(\n-            Read read,\n-            RelationshipScanCursor relationshipCursor,\n-            long relationship,\n-            PropertyCursor propertyCursor,\n-            int prop\n+      Read read,\n+      RelationshipScanCursor relationshipCursor,\n+      long relationship,\n+      PropertyCursor propertyCursor,\n+      int prop\n     ) throws EntityNotFoundException\n     {\n-        return relationshipGetProperty( read, relationshipCursor, relationship, propertyCursor, prop, true );\n+        return relationshipGetProperty(read, relationshipCursor, relationship, propertyCursor, prop, true);\n     }\n \n     /**\n      * Fetches a given property from a relationship\n      *\n-     * @param read The current Read instance\n+     * @param read               The current Read instance\n      * @param relationshipCursor The relationship cursor to use\n-     * @param relationship The id of the relationship\n-     * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n-     * @param throwOnDeleted if <code>true</code> and exception will be thrown if node has been deleted\n+     * @param relationship       The id of the relationship\n+     * @param propertyCursor     The property cursor to use\n+     * @param prop               The id of the property to find\n+     * @param throwOnDeleted     if <code>true</code> and exception will be thrown if node has been deleted\n      * @return The value of the given property\n      * @throws EntityNotFoundException If the node cannot be find.\n      */\n     public static Value relationshipGetProperty(\n-            Read read,\n-            RelationshipScanCursor relationshipCursor,\n-            long relationship,\n-            PropertyCursor propertyCursor,\n-            int prop,\n-            boolean throwOnDeleted\n+      Read read,\n+      RelationshipScanCursor relationshipCursor,\n+      long relationship,\n+      PropertyCursor propertyCursor,\n+      int prop,\n+      boolean throwOnDeleted\n     ) throws EntityNotFoundException\n     {\n-        if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n+        if (prop == StatementConstants.NO_SUCH_PROPERTY_KEY)\n         {\n             return NO_VALUE;\n         }\n-        read.singleRelationship( relationship, relationshipCursor );\n-        if ( !relationshipCursor.next() )\n+        read.singleRelationship(relationship, relationshipCursor);\n+        if (!relationshipCursor.next())\n         {\n-            if ( throwOnDeleted && read.relationshipDeletedInTransaction( relationship ) )\n+            if (throwOnDeleted && read.relationshipDeletedInTransaction(relationship))\n             {\n                 throw new EntityNotFoundException(\n-                        String.format( \"Relationship with id %d has been deleted in this transaction\", relationship ) );\n-            }\n-            else\n+                  String.format(\"Relationship with id %d has been deleted in this transaction\", relationship));\n+            } else\n             {\n                 return NO_VALUE;\n             }\n         }\n-        relationshipCursor.properties( propertyCursor );\n-        return propertyCursor.seekProperty( prop ) ? propertyCursor.propertyValue() : NO_VALUE;\n+        relationshipCursor.properties(propertyCursor);\n+        return propertyCursor.seekProperty(prop) ? propertyCursor.propertyValue() : NO_VALUE;\n     }\n \n     /**\n      * Checks if a given relationship has the given property\n      *\n-     * @param read The current Read instance\n+     * @param read               The current Read instance\n      * @param relationshipCursor The relationship cursor to use\n-     * @param relationship The id of the relationship\n-     * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n+     * @param relationship       The id of the relationship\n+     * @param propertyCursor     The property cursor to use\n+     * @param prop               The id of the property to find\n      * @return <code>true</code> if relationship has property otherwise <code>false</code>\n      */\n     public static Boolean relationshipHasProperty(\n-            Read read,\n-            RelationshipScanCursor relationshipCursor,\n-            long relationship,\n-            PropertyCursor propertyCursor,\n-            int prop\n+      Read read,\n+      RelationshipScanCursor relationshipCursor,\n+      long relationship,\n+      PropertyCursor propertyCursor,\n+      int prop\n     ) throws EntityNotFoundException\n     {\n-        if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n+        if (prop == StatementConstants.NO_SUCH_PROPERTY_KEY)\n         {\n             return false;\n         }\n-        read.singleRelationship( relationship, relationshipCursor );\n-        if ( !relationshipCursor.next() )\n+        read.singleRelationship(relationship, relationshipCursor);\n+        if (!relationshipCursor.next())\n         {\n             return false;\n         }\n-        relationshipCursor.properties( propertyCursor );\n-        return propertyCursor.seekProperty( prop );\n+        relationshipCursor.properties(propertyCursor);\n+        return propertyCursor.seekProperty(prop);\n     }\n \n-    public static RelationshipTraversalCursor nodeGetRelationships( Read read, CursorFactory cursors, NodeCursor node,\n-            long nodeId, Direction direction, PageCursorTracer cursorTracer )\n+    public static RelationshipTraversalCursor nodeGetRelationships(Read read, CursorFactory cursors, NodeCursor node,\n+                                                                   long nodeId, Direction direction, PageCursorTracer cursorTracer)\n     {\n-        return nodeGetRelationships( read, cursors, node, nodeId, direction, null, cursorTracer );\n+        return nodeGetRelationships(read, cursors, node, nodeId, direction, null, cursorTracer);\n     }\n \n-    public static AnyValue propertyGet( String key,\n-            AnyValue container,\n-            Read read,\n-            DbAccess dbAccess,\n-            NodeCursor nodeCursor,\n-            RelationshipScanCursor relationshipScanCursor,\n-            PropertyCursor propertyCursor )\n+    public static AnyValue propertyGet(String key,\n+                                       AnyValue container,\n+                                       Read read,\n+                                       DbAccess dbAccess,\n+                                       NodeCursor nodeCursor,\n+                                       RelationshipScanCursor relationshipScanCursor,\n+                                       PropertyCursor propertyCursor)\n     {\n         assert container != NO_VALUE : \"NO_VALUE checks need to happen outside this call\";\n-        if ( container instanceof VirtualNodeValue )\n+        if (container instanceof VirtualNodeValue)\n         {\n             return nodeGetProperty(\n-                    read,\n-                    nodeCursor,\n-                    ((VirtualNodeValue) container).id(),\n-                    propertyCursor,\n-                    dbAccess.propertyKey( key ) );\n-        }\n-        else if ( container instanceof VirtualRelationshipValue )\n+              read,\n+              nodeCursor,\n+              ((VirtualNodeValue) container).id(),\n+              propertyCursor,\n+              dbAccess.propertyKey(key));\n+        } else if (container instanceof VirtualRelationshipValue)\n         {\n             return relationshipGetProperty(\n-                    read,\n-                    relationshipScanCursor,\n-                    ((VirtualRelationshipValue) container).id(),\n-                    propertyCursor,\n-                    dbAccess.propertyKey( key ) );\n-        }\n-        else if ( container instanceof MapValue )\n+              read,\n+              relationshipScanCursor,\n+              ((VirtualRelationshipValue) container).id(),\n+              propertyCursor,\n+              dbAccess.propertyKey(key));\n+        } else if (container instanceof MapValue)\n         {\n-            return ((MapValue) container).get( key );\n-        }\n-        else if ( container instanceof TemporalValue<?,?> )\n+            return ((MapValue) container).get(key);\n+        } else if (container instanceof TemporalValue<?, ?>)\n         {\n-            return ((TemporalValue) container).get( key );\n-        }\n-        else if ( container instanceof DurationValue )\n+            return ((TemporalValue) container).get(key);\n+        } else if (container instanceof DurationValue)\n         {\n-            return ((DurationValue) container).get( key );\n-        }\n-        else if ( container instanceof PointValue )\n+            return ((DurationValue) container).get(key);\n+        } else if (container instanceof PointValue)\n         {\n-            return ((PointValue) container).get( key );\n-        }\n-        else\n+            return ((PointValue) container).get(key);\n+        } else\n         {\n-            throw new CypherTypeException( format( \"Type mismatch: expected a map but was %s\", container ),\n-                    null );\n+            throw new CypherTypeException(format(\"Type mismatch: expected a map but was %s\", container),\n+              null);\n         }\n     }\n }\n",
            "diff_size": 156
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
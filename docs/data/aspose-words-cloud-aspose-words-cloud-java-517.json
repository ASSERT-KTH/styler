{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "517",
    "information": {
        "errors": [
            {
                "line": "142",
                "column": "43",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    StyleUpdate styleUpdate = (StyleUpdate)o;\n    return\n        Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n        Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/517/StyleUpdate.java\nindex 55823147b84..41998102a21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/517/StyleUpdate.java\n@@ -139,7 +139,7 @@ public class StyleUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StyleUpdate styleUpdate = (StyleUpdate)o;\n+    StyleUpdate styleUpdate = (StyleUpdate) o;\n     return\n         Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n         Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/517/StyleUpdate.java\nindex 55823147b84..2d85d282404 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/517/StyleUpdate.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -58,6 +61,7 @@ public class StyleUpdate {\n \n     @SerializedName(\"NextParagraphStyleName\")\n     private String nextParagraphStyleName = null;\n+\n     public StyleUpdate baseStyleName(String baseStyleName) {\n         this.baseStyleName = baseStyleName;\n         return this;\n@@ -65,8 +69,9 @@ public class StyleUpdate {\n \n     /**\n      * Gets or sets /sets the name of the style this style is based on.\n-    * @return baseStyleName\n-    **/\n+     *\n+     * @return baseStyleName\n+     **/\n     @ApiModelProperty(value = \"Gets or sets /sets the name of the style this style is based on.\")\n     public String getBaseStyleName() {\n         return baseStyleName;\n@@ -83,8 +88,9 @@ public class StyleUpdate {\n \n     /**\n      * Gets or sets a value indicating whether specifies whether this style is shown in the Quick Style gallery inside MS Word UI.\n-    * @return isQuickStyle\n-    **/\n+     *\n+     * @return isQuickStyle\n+     **/\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether specifies whether this style is shown in the Quick Style gallery inside MS Word UI.\")\n     public Boolean getIsQuickStyle() {\n         return isQuickStyle;\n@@ -101,8 +107,9 @@ public class StyleUpdate {\n \n     /**\n      * Gets or sets the name of the style.\n-    * @return name\n-    **/\n+     *\n+     * @return name\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the name of the style.\")\n     public String getName() {\n         return name;\n@@ -120,8 +127,9 @@ public class StyleUpdate {\n     /**\n      * Gets or sets /sets the name of the style to be applied automatically to a new paragraph\n      * inserted after a paragraph formatted with the specified style.\n-    * @return nextParagraphStyleName\n-    **/\n+     *\n+     * @return nextParagraphStyleName\n+     **/\n     @ApiModelProperty(value = \"Gets or sets /sets the name of the style to be applied automatically to a new paragraph inserted after a paragraph formatted with the specified style.\")\n     public String getNextParagraphStyleName() {\n         return nextParagraphStyleName;\n@@ -139,39 +147,39 @@ public class StyleUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StyleUpdate styleUpdate = (StyleUpdate)o;\n-    return\n-        Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n-        Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&\n-        Objects.equals(this.name, styleUpdate.name) &&\n-        Objects.equals(this.nextParagraphStyleName, styleUpdate.nextParagraphStyleName);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(baseStyleName, isQuickStyle, name, nextParagraphStyleName);\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class StyleUpdate {\\n\");\n-    sb.append(\"    baseStyleName: \").append(toIndentedString(baseStyleName)).append(\"\\n\");\n-    sb.append(\"    isQuickStyle: \").append(toIndentedString(isQuickStyle)).append(\"\\n\");\n-    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n-    sb.append(\"    nextParagraphStyleName: \").append(toIndentedString(nextParagraphStyleName)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n-    }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n+        StyleUpdate styleUpdate = (StyleUpdate) o;\n+        return\n+            Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n+                Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&\n+                Objects.equals(this.name, styleUpdate.name) &&\n+                Objects.equals(this.nextParagraphStyleName, styleUpdate.nextParagraphStyleName);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(baseStyleName, isQuickStyle, name, nextParagraphStyleName);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class StyleUpdate {\\n\");\n+        sb.append(\"    baseStyleName: \").append(toIndentedString(baseStyleName)).append(\"\\n\");\n+        sb.append(\"    isQuickStyle: \").append(toIndentedString(isQuickStyle)).append(\"\\n\");\n+        sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n+        sb.append(\"    nextParagraphStyleName: \").append(toIndentedString(nextParagraphStyleName)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n+    }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/517/StyleUpdate.java\nindex 55823147b84..7323eb4aa40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/517/StyleUpdate.java\n@@ -45,113 +45,128 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Represents a single document style properties to update.\n  */\n+\n+\n @ApiModel(description = \"Represents a single document style properties to update.\")\n+\n public class StyleUpdate {\n-    @SerializedName(\"BaseStyleName\")\n-    private String baseStyleName = null;\n+  @SerializedName(\"BaseStyleName\")\n+  private String baseStyleName = null;\n \n-    @SerializedName(\"IsQuickStyle\")\n-    private Boolean isQuickStyle = null;\n+  @SerializedName(\"IsQuickStyle\")\n+  private Boolean isQuickStyle = null;\n \n-    @SerializedName(\"Name\")\n-    private String name = null;\n+  @SerializedName(\"Name\")\n+  private String name = null;\n \n-    @SerializedName(\"NextParagraphStyleName\")\n-    private String nextParagraphStyleName = null;\n-    public StyleUpdate baseStyleName(String baseStyleName) {\n-        this.baseStyleName = baseStyleName;\n-        return this;\n-    }\n+  @SerializedName(\"NextParagraphStyleName\")\n+  private String nextParagraphStyleName = null;\n+\n+  public StyleUpdate baseStyleName(String baseStyleName) {\n+    this.baseStyleName = baseStyleName;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets /sets the name of the style this style is based on.\n     * @return baseStyleName\n     **/\n-    @ApiModelProperty(value = \"Gets or sets /sets the name of the style this style is based on.\")\n-    public String getBaseStyleName() {\n-        return baseStyleName;\n-    }\n \n-    public void setBaseStyleName(String baseStyleName) {\n-        this.baseStyleName = baseStyleName;\n-    }\n \n-    public StyleUpdate isQuickStyle(Boolean isQuickStyle) {\n-        this.isQuickStyle = isQuickStyle;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets /sets the name of the style this style is based on.\")\n+  public String getBaseStyleName() {\n+    return baseStyleName;\n+  }\n+\n+  public void setBaseStyleName(String baseStyleName) {\n+    this.baseStyleName = baseStyleName;\n+  }\n+\n+  public StyleUpdate isQuickStyle(Boolean isQuickStyle) {\n+    this.isQuickStyle = isQuickStyle;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets a value indicating whether specifies whether this style is shown in the Quick Style gallery inside MS Word UI.\n     * @return isQuickStyle\n     **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether specifies whether this style is shown in the Quick Style gallery inside MS Word UI.\")\n-    public Boolean getIsQuickStyle() {\n-        return isQuickStyle;\n-    }\n \n-    public void setIsQuickStyle(Boolean isQuickStyle) {\n-        this.isQuickStyle = isQuickStyle;\n-    }\n \n-    public StyleUpdate name(String name) {\n-        this.name = name;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether specifies whether this style is shown in the Quick Style gallery inside MS Word UI.\")\n+  public Boolean getIsQuickStyle() {\n+    return isQuickStyle;\n+  }\n+\n+  public void setIsQuickStyle(Boolean isQuickStyle) {\n+    this.isQuickStyle = isQuickStyle;\n+  }\n+\n+  public StyleUpdate name(String name) {\n+    this.name = name;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the name of the style.\n     * @return name\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the name of the style.\")\n-    public String getName() {\n-        return name;\n-    }\n \n-    public void setName(String name) {\n-        this.name = name;\n-    }\n \n-    public StyleUpdate nextParagraphStyleName(String nextParagraphStyleName) {\n-        this.nextParagraphStyleName = nextParagraphStyleName;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the name of the style.\")\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  public StyleUpdate nextParagraphStyleName(String nextParagraphStyleName) {\n+    this.nextParagraphStyleName = nextParagraphStyleName;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets /sets the name of the style to be applied automatically to a new paragraph\n      * inserted after a paragraph formatted with the specified style.\n     * @return nextParagraphStyleName\n     **/\n-    @ApiModelProperty(value = \"Gets or sets /sets the name of the style to be applied automatically to a new paragraph inserted after a paragraph formatted with the specified style.\")\n-    public String getNextParagraphStyleName() {\n-        return nextParagraphStyleName;\n-    }\n \n-    public void setNextParagraphStyleName(String nextParagraphStyleName) {\n-        this.nextParagraphStyleName = nextParagraphStyleName;\n+\n+  @ApiModelProperty(value = \"Gets or sets /sets the name of the style to be applied automatically to a new paragraph inserted after a paragraph formatted with the specified style.\")\n+  public String getNextParagraphStyleName() {\n+    return nextParagraphStyleName;\n+  }\n+\n+  public void setNextParagraphStyleName(String nextParagraphStyleName) {\n+    this.nextParagraphStyleName = nextParagraphStyleName;\n+  }\n+\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    StyleUpdate styleUpdate = (StyleUpdate)o;\n-    return\n-        Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n-        Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&\n-        Objects.equals(this.name, styleUpdate.name) &&\n-        Objects.equals(this.nextParagraphStyleName, styleUpdate.nextParagraphStyleName);\n+    StyleUpdate styleUpdate = (StyleUpdate) o;\n+    return Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n+    Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&\n+    Objects.equals(this.name, styleUpdate.name) &&\n+    Objects.equals(this.nextParagraphStyleName, styleUpdate.nextParagraphStyleName);\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(baseStyleName, isQuickStyle, name, nextParagraphStyleName);\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -168,10 +183,12 @@ public class StyleUpdate {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 117
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/517/StyleUpdate.java\nindex 55823147b84..41998102a21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/517/StyleUpdate.java\n@@ -139,7 +139,7 @@ public class StyleUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StyleUpdate styleUpdate = (StyleUpdate)o;\n+    StyleUpdate styleUpdate = (StyleUpdate) o;\n     return\n         Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n         Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/517/StyleUpdate.java\nindex 55823147b84..41998102a21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/517/StyleUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/517/StyleUpdate.java\n@@ -139,7 +139,7 @@ public class StyleUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StyleUpdate styleUpdate = (StyleUpdate)o;\n+    StyleUpdate styleUpdate = (StyleUpdate) o;\n     return\n         Objects.equals(this.baseStyleName, styleUpdate.baseStyleName) &&\n         Objects.equals(this.isQuickStyle, styleUpdate.isQuickStyle) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
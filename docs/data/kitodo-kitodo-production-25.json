{
    "project_name": "kitodo-kitodo-production",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "337",
                "column": "5",
                "severity": "warning",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @return true if the current user has the authority to edit the batch\n     */\n    public boolean hasAuthorityToEditBatch() {\n        return securityAccessService.hasAuthorityToEditBatch();\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/25/SecurityAccessController.java\nindex b42c117931c..6cf3bd23b7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/25/SecurityAccessController.java\n@@ -334,6 +334,7 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the batch\n      */\n+\n     public boolean hasAuthorityToEditBatch() {\n         return securityAccessService.hasAuthorityToEditBatch();\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/25/SecurityAccessController.java\nindex b42c117931c..069c6ac2dba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/25/SecurityAccessController.java\n@@ -29,8 +29,7 @@ public class SecurityAccessController {\n     /**\n      * Check if the current user has a specified authority globally or for a client.\n      *\n-     * @param authorityTitle\n-     *            The authority title.\n+     * @param authorityTitle The authority title.\n      * @return True if the current user has the specified authority.\n      */\n     public boolean hasAuthorityGlobalOrForClient(String authorityTitle) {\n@@ -40,8 +39,7 @@ public class SecurityAccessController {\n     /**\n      * Checks if the current user has a specified authority globally.\n      *\n-     * @param authorityTitle\n-     *            The authority title.\n+     * @param authorityTitle The authority title.\n      * @return True if the current user has the specified authority.\n      */\n     public boolean hasAuthorityGlobal(String authorityTitle) {\n@@ -51,8 +49,7 @@ public class SecurityAccessController {\n     /**\n      * Check if the current user has a specified authority for a client.\n      *\n-     * @param authorityTitle\n-     *            The authority title.\n+     * @param authorityTitle The authority title.\n      * @return true if the current user has the specified authority\n      */\n     public boolean hasAuthorityForClient(String authorityTitle) {\n@@ -63,8 +60,7 @@ public class SecurityAccessController {\n      * Checks if the current user has any of the specified authorities globally or\n      * for client.\n      *\n-     * @param authorityTitles\n-     *            the authority title\n+     * @param authorityTitles the authority title\n      * @return True if the current user has the specified authority.\n      */\n     public boolean hasAnyAuthorityGlobalOrForClient(String authorityTitles) {\n@@ -74,8 +70,7 @@ public class SecurityAccessController {\n     /**\n      * Check if the current user has any of the specified authorities for client.\n      *\n-     * @param authorityTitles\n-     *            the authority title\n+     * @param authorityTitles the authority title\n      * @return true if the current user has the specified authority\n      */\n     public boolean hasAnyAuthorityForClient(String authorityTitles) {\n@@ -186,7 +181,7 @@ public class SecurityAccessController {\n      * true if user has at least one of below given authorities.\n      *\n      * @return true if user has authority 'addUser' or 'addRole' or 'addClient' or\n-     *         'addLdapGroup' or 'addLdapServer' globally or for client\n+     * 'addLdapGroup' or 'addLdapServer' globally or for client\n      */\n     public boolean hasAuthorityToAddOnUserPage() {\n         return securityAccessService.hasAuthorityToAddOnUserPage();\n@@ -197,7 +192,7 @@ public class SecurityAccessController {\n      * returns true if user has at least one of below given authorities.\n      *\n      * @return true if user has authority 'addProject' or 'addTemplate' or\n-     *         'addWorkflow' or 'addDocket' or 'addRuleset' for client\n+     * 'addWorkflow' or 'addDocket' or 'addRuleset' for client\n      */\n     public boolean hasAuthorityToAddOnProjectPage() {\n         return securityAccessService.hasAuthorityToAddOnProjectPage();\n@@ -329,6 +324,7 @@ public class SecurityAccessController {\n     public boolean hasAuthorityToEditTask(int taskId) throws DataException {\n         return securityAccessService.hasAuthorityToEditTask(taskId);\n     }\n+\n     /**\n      * Check if the current user has the authority to edit the batch.\n      *\n@@ -552,8 +548,7 @@ public class SecurityAccessController {\n     /**\n      * Check if the current user has the authority to change the user config.\n      *\n-     * @param userId\n-     *            id of the viewed user\n+     * @param userId id of the viewed user\n      * @return true if the current user has the authority to change the user config\n      */\n     public boolean hasAuthorityToConfigUser(int userId) {\n@@ -601,7 +596,7 @@ public class SecurityAccessController {\n      * user has at least one of below given authorities.\n      *\n      * @return true if user has authority 'viewAllProcesses' or 'viewAllBatches' for\n-     *         client\n+     * client\n      */\n     public boolean hasAuthorityToViewProcessPage() {\n         return securityAccessService.hasAnyAuthorityForClient(\"viewAllProcesses, viewAllBatches\");\n@@ -612,8 +607,8 @@ public class SecurityAccessController {\n      * user has at least one of below given authorities.\n      *\n      * @return true if user has authority 'viewAllProjects' or 'viewAllTemplates' or\n-     *         'viewAllWorkflows' or 'viewAllDockets' or 'viewAllRulesets' for\n-     *         client\n+     * 'viewAllWorkflows' or 'viewAllDockets' or 'viewAllRulesets' for\n+     * client\n      */\n     public boolean hasAuthorityToViewProjectPage() {\n         return securityAccessService.hasAnyAuthorityForClient(\n@@ -645,8 +640,8 @@ public class SecurityAccessController {\n      * user has at least one of below given authorities.\n      *\n      * @return true if user has authority 'viewAllUsers' or 'viewAllRoles' or\n-     *         'viewAllClients' or 'viewAllLdapGroups' or 'viewAllLdapServers'\n-     *         globally or for client\n+     * 'viewAllClients' or 'viewAllLdapGroups' or 'viewAllLdapServers'\n+     * globally or for client\n      */\n     public boolean hasAuthorityToViewUserPage() {\n         return securityAccessService.hasAnyAuthorityGlobalOrForClient(\n@@ -818,7 +813,7 @@ public class SecurityAccessController {\n      * Check if the current user has the authority to edit the process metadata.\n      *\n      * @return true if the current user has the authority to edit the process\n-     *         metadata\n+     * metadata\n      */\n     public boolean hasAuthorityToEditProcessMetaData() {\n         return securityAccessService.hasAuthorityToEditProcessMetaData();\n@@ -828,7 +823,7 @@ public class SecurityAccessController {\n      * Check if the current user has the authority to view the process metadata.\n      *\n      * @return true if the current user has the authority to view the process\n-     *         metadata\n+     * metadata\n      */\n     public boolean hasAuthorityToViewProcessMetaData() {\n         return securityAccessService.hasAuthorityToViewProcessMetaData();\n@@ -839,7 +834,7 @@ public class SecurityAccessController {\n      * data.\n      *\n      * @return true if the current user has the authority to edit the process\n-     *         structure data\n+     * structure data\n      */\n     public boolean hasAuthorityToEditProcessStructureData() {\n         return securityAccessService.hasAuthorityToEditProcessStructureData();\n@@ -850,7 +845,7 @@ public class SecurityAccessController {\n      * data.\n      *\n      * @return true if the current user has the authority to view the process\n-     *         structure data\n+     * structure data\n      */\n     public boolean hasAuthorityToViewProcessStructureData() {\n         return securityAccessService.hasAuthorityToViewProcessStructureData();\n@@ -880,15 +875,15 @@ public class SecurityAccessController {\n      * view or edit data in any part of the editor.\n      *\n      * @return true if the current user has the authority to view or edit any part\n-     *         of the data in the metadata editor\n+     * of the data in the metadata editor\n      */\n     public boolean hasAuthorityToOpenMetadataEditor() {\n         return securityAccessService.hasAuthorityToViewProcessMetaData()\n-                || securityAccessService.hasAuthorityToEditProcessMetaData()\n-                || securityAccessService.hasAuthorityToViewProcessStructureData()\n-                || securityAccessService.hasAuthorityToEditProcessStructureData()\n-                || securityAccessService.hasAuthorityToViewProcessImages()\n-                || securityAccessService.hasAuthorityToEditProcessImages();\n+            || securityAccessService.hasAuthorityToEditProcessMetaData()\n+            || securityAccessService.hasAuthorityToViewProcessStructureData()\n+            || securityAccessService.hasAuthorityToEditProcessStructureData()\n+            || securityAccessService.hasAuthorityToViewProcessImages()\n+            || securityAccessService.hasAuthorityToEditProcessImages();\n \n     }\n \n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "333",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 338.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/25/SecurityAccessController.java\nindex b42c117931c..86adc4ee699 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/25/SecurityAccessController.java\n@@ -329,7 +329,8 @@ public class SecurityAccessController {\n     public boolean hasAuthorityToEditTask(int taskId) throws DataException {\n         return securityAccessService.hasAuthorityToEditTask(taskId);\n     }\n-    /**\n+\n+/**\n      * Check if the current user has the authority to edit the batch.\n      *\n      * @return true if the current user has the authority to edit the batch\n@@ -889,7 +890,6 @@ public class SecurityAccessController {\n                 || securityAccessService.hasAuthorityToEditProcessStructureData()\n                 || securityAccessService.hasAuthorityToViewProcessImages()\n                 || securityAccessService.hasAuthorityToEditProcessImages();\n-\n     }\n \n     /**\n@@ -900,4 +900,4 @@ public class SecurityAccessController {\n     public boolean hasAuthorityToViewDatabaseStatistics() {\n         return securityAccessService.hasAuthorityToViewDatabaseStatistic();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "746",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "784",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1064",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1065",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/25/SecurityAccessController.java\nindex b42c117931c..dcd04f0fa46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/25/SecurityAccessController.java\n@@ -13,7 +13,6 @@ package org.kitodo.production.controller;\n \n import javax.enterprise.context.RequestScoped;\n import javax.inject.Named;\n-\n import org.kitodo.data.exceptions.DataException;\n import org.kitodo.production.services.ServiceManager;\n import org.kitodo.production.services.security.SecurityAccessService;\n@@ -21,9 +20,11 @@ import org.kitodo.production.services.security.SecurityAccessService;\n /**\n  * Controller for checking authorities of current user.\n  */\n+\n @Named(\"SecurityAccessController\")\n @RequestScoped\n public class SecurityAccessController {\n+\n     private SecurityAccessService securityAccessService = ServiceManager.getSecurityAccessService();\n \n     /**\n@@ -33,6 +34,8 @@ public class SecurityAccessController {\n      *            The authority title.\n      * @return True if the current user has the specified authority.\n      */\n+\n+\n     public boolean hasAuthorityGlobalOrForClient(String authorityTitle) {\n         return securityAccessService.hasAuthorityGlobalOrForClient(authorityTitle);\n     }\n@@ -44,6 +47,8 @@ public class SecurityAccessController {\n      *            The authority title.\n      * @return True if the current user has the specified authority.\n      */\n+\n+\n     public boolean hasAuthorityGlobal(String authorityTitle) {\n         return securityAccessService.hasAuthorityGlobal(authorityTitle);\n     }\n@@ -55,6 +60,8 @@ public class SecurityAccessController {\n      *            The authority title.\n      * @return true if the current user has the specified authority\n      */\n+\n+\n     public boolean hasAuthorityForClient(String authorityTitle) {\n         return securityAccessService.hasAuthorityForClient(authorityTitle);\n     }\n@@ -67,6 +74,8 @@ public class SecurityAccessController {\n      *            the authority title\n      * @return True if the current user has the specified authority.\n      */\n+\n+\n     public boolean hasAnyAuthorityGlobalOrForClient(String authorityTitles) {\n         return securityAccessService.hasAnyAuthorityGlobalOrForClient(authorityTitles);\n     }\n@@ -78,6 +87,8 @@ public class SecurityAccessController {\n      *            the authority title\n      * @return true if the current user has the specified authority\n      */\n+\n+\n     public boolean hasAnyAuthorityForClient(String authorityTitles) {\n         return securityAccessService.hasAnyAuthorityForClient(authorityTitles);\n     }\n@@ -87,6 +98,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the batch\n      */\n+\n+\n     public boolean hasAuthorityToAddBatch() {\n         return securityAccessService.hasAuthorityToAddBatch();\n     }\n@@ -96,6 +109,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the process\n      */\n+\n+\n     public boolean hasAuthorityToAddProcess() {\n         return securityAccessService.hasAuthorityToAddProcess();\n     }\n@@ -105,6 +120,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the project\n      */\n+\n+\n     public boolean hasAuthorityToAddProject() {\n         return securityAccessService.hasAuthorityToAddProject();\n     }\n@@ -114,6 +131,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the template\n      */\n+\n+\n     public boolean hasAuthorityToAddTemplate() {\n         return securityAccessService.hasAuthorityToAddTemplate();\n     }\n@@ -123,6 +142,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the workflow\n      */\n+\n+\n     public boolean hasAuthorityToAddWorkflow() {\n         return securityAccessService.hasAuthorityToAddWorkflow();\n     }\n@@ -132,6 +153,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the docket\n      */\n+\n+\n     public boolean hasAuthorityToAddDocket() {\n         return securityAccessService.hasAuthorityToAddDocket();\n     }\n@@ -141,6 +164,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToAddRuleset() {\n         return securityAccessService.hasAuthorityToAddRuleset();\n     }\n@@ -150,6 +175,8 @@ public class SecurityAccessController {\n      *\n      * @return True if the current user has the authority to add the user\n      */\n+\n+\n     public boolean hasAuthorityToAddUser() {\n         return securityAccessService.hasAuthorityToAddUser();\n     }\n@@ -159,6 +186,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the role\n      */\n+\n+\n     public boolean hasAuthorityToAddRole() {\n         return securityAccessService.hasAuthorityToAddRole();\n     }\n@@ -168,6 +197,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the client\n      */\n+\n+\n     public boolean hasAuthorityToAddClient() {\n         return securityAccessService.hasAuthorityToAddClient();\n     }\n@@ -177,6 +208,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to add the authority\n      */\n+\n+\n     public boolean hasAuthorityToAddAuthority() {\n         return securityAccessService.hasAuthorityToAddAuthority();\n     }\n@@ -188,6 +221,8 @@ public class SecurityAccessController {\n      * @return true if user has authority 'addUser' or 'addRole' or 'addClient' or\n      *         'addLdapGroup' or 'addLdapServer' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToAddOnUserPage() {\n         return securityAccessService.hasAuthorityToAddOnUserPage();\n     }\n@@ -199,6 +234,8 @@ public class SecurityAccessController {\n      * @return true if user has authority 'addProject' or 'addTemplate' or\n      *         'addWorkflow' or 'addDocket' or 'addRuleset' for client\n      */\n+\n+\n     public boolean hasAuthorityToAddOnProjectPage() {\n         return securityAccessService.hasAuthorityToAddOnProjectPage();\n     }\n@@ -208,6 +245,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the batch\n      */\n+\n+\n     public boolean hasAuthorityToDeleteBatch() {\n         return securityAccessService.hasAuthorityToDeleteBatch();\n     }\n@@ -217,6 +256,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the process\n      */\n+\n+\n     public boolean hasAuthorityToDeleteProcess() {\n         return securityAccessService.hasAuthorityToDeleteProcess();\n     }\n@@ -226,6 +267,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the task\n      */\n+\n+\n     public boolean hasAuthorityToDeleteTask() {\n         return securityAccessService.hasAuthorityToDeleteTask();\n     }\n@@ -235,6 +278,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the project\n      */\n+\n+\n     public boolean hasAuthorityToDeleteProject() {\n         return securityAccessService.hasAuthorityToDeleteProject();\n     }\n@@ -244,6 +289,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the template\n      */\n+\n+\n     public boolean hasAuthorityToDeleteTemplate() {\n         return securityAccessService.hasAuthorityToDeleteTemplate();\n     }\n@@ -253,6 +300,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the workflow\n      */\n+\n+\n     public boolean hasAuthorityToDeleteWorkflow() {\n         return securityAccessService.hasAuthorityToDeleteWorkflow();\n     }\n@@ -262,6 +311,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the docket\n      */\n+\n+\n     public boolean hasAuthorityToDeleteDocket() {\n         return securityAccessService.hasAuthorityToDeleteDocket();\n     }\n@@ -271,6 +322,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToDeleteRuleset() {\n         return securityAccessService.hasAuthorityToDeleteRuleset();\n     }\n@@ -280,6 +333,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the user\n      */\n+\n+\n     public boolean hasAuthorityToDeleteUser() {\n         return securityAccessService.hasAuthorityToDeleteUser();\n     }\n@@ -289,6 +344,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the role\n      */\n+\n+\n     public boolean hasAuthorityToDeleteRole() {\n         return securityAccessService.hasAuthorityToDeleteRole();\n     }\n@@ -298,6 +355,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the client\n      */\n+\n+\n     public boolean hasAuthorityToDeleteClient() {\n         return securityAccessService.hasAuthorityToDeleteClient();\n     }\n@@ -307,6 +366,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to delete the authority\n      */\n+\n+\n     public boolean hasAuthorityToDeleteAuthority() {\n         return securityAccessService.hasAuthorityToDeleteAuthority();\n     }\n@@ -316,6 +377,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the task\n      */\n+\n+\n     public boolean hasAuthorityToEditTask() {\n         return securityAccessService.hasAuthorityToEditTask();\n     }\n@@ -326,6 +389,8 @@ public class SecurityAccessController {\n      * @param taskId the specific taskId\n      * @return true if the current user has the authority to edit the task\n      */\n+\n+\n     public boolean hasAuthorityToEditTask(int taskId) throws DataException {\n         return securityAccessService.hasAuthorityToEditTask(taskId);\n     }\n@@ -334,6 +399,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the batch\n      */\n+\n+\n     public boolean hasAuthorityToEditBatch() {\n         return securityAccessService.hasAuthorityToEditBatch();\n     }\n@@ -343,6 +410,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the process\n      */\n+\n+\n     public boolean hasAuthorityToEditProcess() {\n         return securityAccessService.hasAuthorityToEditProcess();\n     }\n@@ -353,6 +422,8 @@ public class SecurityAccessController {\n      * @param processId the specific processId\n      * @return true if the current user has the authority to edit the process\n      */\n+\n+\n     public boolean hasAuthorityToEditProcess(int processId) throws DataException {\n         return securityAccessService.hasAuthorityToEditProcess(processId);\n     }\n@@ -362,6 +433,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the project\n      */\n+\n+\n     public boolean hasAuthorityToEditProject() {\n         return securityAccessService.hasAuthorityToEditProject();\n     }\n@@ -372,6 +445,8 @@ public class SecurityAccessController {\n      * @param projectId the specific projectId\n      * @return true if the current user has the authority to edit the project\n      */\n+\n+\n     public boolean hasAuthorityToEditProject(int projectId) {\n         return securityAccessService.hasAuthorityToEditProject(projectId);\n     }\n@@ -381,6 +456,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the template\n      */\n+\n+\n     public boolean hasAuthorityToEditTemplate() {\n         return securityAccessService.hasAuthorityToEditTemplate();\n     }\n@@ -390,6 +467,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the workflow\n      */\n+\n+\n     public boolean hasAuthorityToEditWorkflow() {\n         return securityAccessService.hasAuthorityToEditWorkflow();\n     }\n@@ -399,6 +478,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the docket\n      */\n+\n+\n     public boolean hasAuthorityToEditDocket() {\n         return securityAccessService.hasAuthorityToEditDocket();\n     }\n@@ -408,6 +489,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToEditRuleset() {\n         return securityAccessService.hasAuthorityToEditRuleset();\n     }\n@@ -417,6 +500,8 @@ public class SecurityAccessController {\n      *\n      * @return True if the current user has the authority to edit the user\n      */\n+\n+\n     public boolean hasAuthorityToEditUser() {\n         return securityAccessService.hasAuthorityToEditUser();\n     }\n@@ -426,6 +511,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the role\n      */\n+\n+\n     public boolean hasAuthorityToEditRole() {\n         return securityAccessService.hasAuthorityToEditRole();\n     }\n@@ -435,6 +522,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the client\n      */\n+\n+\n     public boolean hasAuthorityToEditClient() {\n         return securityAccessService.hasAuthorityToEditClient();\n     }\n@@ -444,6 +533,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the authority\n      */\n+\n+\n     public boolean hasAuthorityToEditAuthority() {\n         return securityAccessService.hasAuthorityToEditAuthority();\n     }\n@@ -453,6 +544,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the index\n      */\n+\n+\n     public boolean hasAuthorityToEditIndex() {\n         return securityAccessService.hasAuthorityToEditIndex();\n     }\n@@ -462,6 +555,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to export process\n      */\n+\n+\n     public boolean hasAuthorityToExportProcess() {\n         return securityAccessService.hasAuthorityToExportProcess();\n     }\n@@ -471,6 +566,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the process\n      */\n+\n+\n     public boolean hasAuthorityToViewProcess() {\n         return securityAccessService.hasAuthorityToViewProcess();\n     }\n@@ -481,6 +578,8 @@ public class SecurityAccessController {\n      * @param processId the specific processId\n      * @return true if the current user has the authority to view the process\n      */\n+\n+\n     public boolean hasAuthorityToViewProcess(int processId) throws DataException {\n         return securityAccessService.hasAuthorityToViewProcess(processId);\n     }\n@@ -490,6 +589,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the project\n      */\n+\n+\n     public boolean hasAuthorityToViewProject() {\n         return securityAccessService.hasAuthorityToViewProject();\n     }\n@@ -500,6 +601,8 @@ public class SecurityAccessController {\n      * @param projectId the specific projectId\n      * @return true if the current user has the authority to view the project\n      */\n+\n+\n     public boolean hasAuthorityToViewProject(int projectId) {\n         return securityAccessService.hasAuthorityToViewProject(projectId);\n     }\n@@ -509,6 +612,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the template\n      */\n+\n+\n     public boolean hasAuthorityToViewTemplate() {\n         return securityAccessService.hasAuthorityToViewTemplate();\n     }\n@@ -518,6 +623,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the workflow\n      */\n+\n+\n     public boolean hasAuthorityToViewWorkflow() {\n         return securityAccessService.hasAuthorityToViewWorkflow();\n     }\n@@ -527,6 +634,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the docket\n      */\n+\n+\n     public boolean hasAuthorityToViewDocket() {\n         return securityAccessService.hasAuthorityToViewDocket();\n     }\n@@ -536,6 +645,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToViewRuleset() {\n         return securityAccessService.hasAuthorityToViewRuleset();\n     }\n@@ -545,6 +656,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the user\n      */\n+\n+\n     public boolean hasAuthorityToViewUser() {\n         return securityAccessService.hasAuthorityToViewUser();\n     }\n@@ -556,6 +669,8 @@ public class SecurityAccessController {\n      *            id of the viewed user\n      * @return true if the current user has the authority to change the user config\n      */\n+\n+\n     public boolean hasAuthorityToConfigUser(int userId) {\n         return securityAccessService.hasAuthorityToConfigUser(userId);\n     }\n@@ -565,6 +680,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the role\n      */\n+\n+\n     public boolean hasAuthorityToViewRole() {\n         return securityAccessService.hasAuthorityToViewRole();\n     }\n@@ -574,6 +691,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the client\n      */\n+\n+\n     public boolean hasAuthorityToViewClient() {\n         return securityAccessService.hasAuthorityToViewClient();\n     }\n@@ -583,6 +702,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the authority\n      */\n+\n+\n     public boolean hasAuthorityToViewAuthority() {\n         return securityAccessService.hasAuthorityToViewAuthority();\n     }\n@@ -592,6 +713,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the index\n      */\n+\n+\n     public boolean hasAuthorityToViewIndex() {\n         return securityAccessService.hasAuthorityToViewIndex();\n     }\n@@ -603,6 +726,8 @@ public class SecurityAccessController {\n      * @return true if user has authority 'viewAllProcesses' or 'viewAllBatches' for\n      *         client\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessPage() {\n         return securityAccessService.hasAnyAuthorityForClient(\"viewAllProcesses, viewAllBatches\");\n     }\n@@ -615,9 +740,10 @@ public class SecurityAccessController {\n      *         'viewAllWorkflows' or 'viewAllDockets' or 'viewAllRulesets' for\n      *         client\n      */\n+\n+\n     public boolean hasAuthorityToViewProjectPage() {\n-        return securityAccessService.hasAnyAuthorityForClient(\n-            \"viewAllProjects, viewAllTemplates, viewAllWorkflows, viewAllDockets, viewAllRulesets\");\n+        return securityAccessService.hasAnyAuthorityForClient(\"viewAllProjects, viewAllTemplates, viewAllWorkflows, viewAllDockets, viewAllRulesets\");\n     }\n \n     /**\n@@ -626,6 +752,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewIndex' or 'viewIndex' globally\n      */\n+\n+\n     public boolean hasAuthorityToViewSystemPage() {\n         return securityAccessService.hasAuthorityToViewSystemPage();\n     }\n@@ -636,6 +764,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllTasks' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewTaskPage() {\n         return hasAuthorityToViewTaskList();\n     }\n@@ -648,9 +778,10 @@ public class SecurityAccessController {\n      *         'viewAllClients' or 'viewAllLdapGroups' or 'viewAllLdapServers'\n      *         globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToViewUserPage() {\n-        return securityAccessService.hasAnyAuthorityGlobalOrForClient(\n-            \"viewAllUsers, viewAllRoles, viewAllClients, viewAllLdapGroups, viewAllLdapServers\");\n+        return securityAccessService.hasAnyAuthorityGlobalOrForClient(\"viewAllUsers, viewAllRoles, viewAllClients, viewAllLdapGroups, viewAllLdapServers\");\n     }\n \n     /**\n@@ -660,6 +791,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllTasks' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewTaskList() {\n         return securityAccessService.hasAuthorityToViewTaskList();\n     }\n@@ -670,6 +803,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllBatches' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewBatchList() {\n         return securityAccessService.hasAuthorityToViewBatchList();\n     }\n@@ -680,6 +815,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllProcesses' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessList() {\n         return securityAccessService.hasAuthorityToViewProcessList();\n     }\n@@ -690,6 +827,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllProjects' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewProjectList() {\n         return securityAccessService.hasAuthorityToViewProjectList();\n     }\n@@ -700,6 +839,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllTemplates' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewTemplateList() {\n         return securityAccessService.hasAuthorityToViewTemplateList();\n     }\n@@ -710,6 +851,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllWorkflows' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewWorkflowList() {\n         return securityAccessService.hasAuthorityToViewWorkflowList();\n     }\n@@ -720,6 +863,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllDockets' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewDocketList() {\n         return securityAccessService.hasAuthorityToViewDocketList();\n     }\n@@ -730,6 +875,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllRulesets' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewRulesetList() {\n         return securityAccessService.hasAuthorityToViewRulesetList();\n     }\n@@ -740,6 +887,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllUsers' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToViewUserList() {\n         return securityAccessService.hasAuthorityToViewUserList();\n     }\n@@ -750,6 +899,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllRoles' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToViewRoleList() {\n         return securityAccessService.hasAuthorityToViewRoleList();\n     }\n@@ -760,6 +911,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllClients' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToViewClientList() {\n         return securityAccessService.hasAuthorityToViewClientList();\n     }\n@@ -770,6 +923,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllAuthorities' globally\n      */\n+\n+\n     public boolean hasAuthorityToViewAuthorityList() {\n         return securityAccessService.hasAuthorityToViewAuthorityList();\n     }\n@@ -780,6 +935,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllLdapGroups' globally\n      */\n+\n+\n     public boolean hasAuthorityToViewLdapGroupList() {\n         return securityAccessService.hasAuthorityToViewLdapGroupList();\n     }\n@@ -790,6 +947,8 @@ public class SecurityAccessController {\n      *\n      * @return true if user has authority 'viewAllLdapServers' globally\n      */\n+\n+\n     public boolean hasAuthorityToViewLdapServerList() {\n         return securityAccessService.hasAuthorityToViewLdapServerList();\n     }\n@@ -800,6 +959,8 @@ public class SecurityAccessController {\n      *\n      * @return true if current user has global authority for add or edit role\n      */\n+\n+\n     public boolean hasAuthorityGlobalToAddOrEditRole() {\n         return securityAccessService.hasAuthorityGlobalToAddOrEditRole();\n     }\n@@ -810,6 +971,8 @@ public class SecurityAccessController {\n      *\n      * @return true if current user has authority to configure columns\n      */\n+\n+\n     public boolean hasAuthorityToConfigureColumns() {\n         return securityAccessService.hasAuthorityToConfigureColumns();\n     }\n@@ -820,6 +983,8 @@ public class SecurityAccessController {\n      * @return true if the current user has the authority to edit the process\n      *         metadata\n      */\n+\n+\n     public boolean hasAuthorityToEditProcessMetaData() {\n         return securityAccessService.hasAuthorityToEditProcessMetaData();\n     }\n@@ -830,6 +995,8 @@ public class SecurityAccessController {\n      * @return true if the current user has the authority to view the process\n      *         metadata\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessMetaData() {\n         return securityAccessService.hasAuthorityToViewProcessMetaData();\n     }\n@@ -841,6 +1008,8 @@ public class SecurityAccessController {\n      * @return true if the current user has the authority to edit the process\n      *         structure data\n      */\n+\n+\n     public boolean hasAuthorityToEditProcessStructureData() {\n         return securityAccessService.hasAuthorityToEditProcessStructureData();\n     }\n@@ -852,6 +1021,8 @@ public class SecurityAccessController {\n      * @return true if the current user has the authority to view the process\n      *         structure data\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessStructureData() {\n         return securityAccessService.hasAuthorityToViewProcessStructureData();\n     }\n@@ -861,6 +1032,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the process images\n      */\n+\n+\n     public boolean hasAuthorityToEditProcessImages() {\n         return securityAccessService.hasAuthorityToEditProcessImages();\n     }\n@@ -870,6 +1043,8 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view the process images\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessImages() {\n         return securityAccessService.hasAuthorityToViewProcessImages();\n     }\n@@ -882,14 +1057,14 @@ public class SecurityAccessController {\n      * @return true if the current user has the authority to view or edit any part\n      *         of the data in the metadata editor\n      */\n-    public boolean hasAuthorityToOpenMetadataEditor() {\n-        return securityAccessService.hasAuthorityToViewProcessMetaData()\n-                || securityAccessService.hasAuthorityToEditProcessMetaData()\n-                || securityAccessService.hasAuthorityToViewProcessStructureData()\n-                || securityAccessService.hasAuthorityToEditProcessStructureData()\n-                || securityAccessService.hasAuthorityToViewProcessImages()\n-                || securityAccessService.hasAuthorityToEditProcessImages();\n \n+\n+    public boolean hasAuthorityToOpenMetadataEditor() {\n+        return securityAccessService.hasAuthorityToViewProcessMetaData() || securityAccessService.hasAuthorityToEditProcessMetaData()\n+        || securityAccessService.hasAuthorityToViewProcessStructureData()\n+        || securityAccessService.hasAuthorityToEditProcessStructureData()\n+                   || securityAccessService.hasAuthorityToViewProcessImages()\n+                       || securityAccessService.hasAuthorityToEditProcessImages();\n     }\n \n     /**\n@@ -897,7 +1072,9 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to view database statistics\n      */\n+\n+\n     public boolean hasAuthorityToViewDatabaseStatistics() {\n         return securityAccessService.hasAuthorityToViewDatabaseStatistic();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 200
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/25/SecurityAccessController.java\nindex b42c117931c..6cf3bd23b7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/25/SecurityAccessController.java\n@@ -334,6 +334,7 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the batch\n      */\n+\n     public boolean hasAuthorityToEditBatch() {\n         return securityAccessService.hasAuthorityToEditBatch();\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/25/SecurityAccessController.java\nindex b42c117931c..6cf3bd23b7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/25/SecurityAccessController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/25/SecurityAccessController.java\n@@ -334,6 +334,7 @@ public class SecurityAccessController {\n      *\n      * @return true if the current user has the authority to edit the batch\n      */\n+\n     public boolean hasAuthorityToEditBatch() {\n         return securityAccessService.hasAuthorityToEditBatch();\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
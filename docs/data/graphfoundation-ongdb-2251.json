{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2251",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2251/ObjectRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2251/ObjectRepresentation.java\nindex 6313ef6d5fb..a1f267b7226 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2251/ObjectRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2251/ObjectRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.lang.annotation.ElementType;\n@@ -31,123 +32,120 @@ import java.util.concurrent.ConcurrentHashMap;\n \n public abstract class ObjectRepresentation extends MappingRepresentation\n {\n-    @Target( ElementType.METHOD )\n-    @Retention( RetentionPolicy.RUNTIME )\n-    protected @interface Mapping\n-    {\n-        String value();\n-    }\n+  @Target(ElementType.METHOD)\n+  @Retention(RetentionPolicy.RUNTIME)\n+  protected @interface Mapping\n+  {\n+    String value();\n+  }\n \n-    private static final ConcurrentHashMap<Class<?>, Map<String, PropertyGetter>> serializations =\n-            new ConcurrentHashMap<>();\n+  private static final ConcurrentHashMap<Class<?>, Map<String, PropertyGetter>> serializations =\n+      new ConcurrentHashMap<>();\n \n-    private final Map<String, PropertyGetter> serialization = serialization( getClass() );\n+  private final Map<String, PropertyGetter> serialization = serialization(getClass());\n \n-    ObjectRepresentation( RepresentationType type )\n-    {\n-        super( type );\n-    }\n+  ObjectRepresentation(RepresentationType type)\n+  {\n+    super(type);\n+  }\n \n-    public ObjectRepresentation( String type )\n-    {\n-        super( type );\n-    }\n+  public ObjectRepresentation(String type)\n+  {\n+    super(type);\n+  }\n \n-    private static Map<String, PropertyGetter> serialization( Class<? extends ObjectRepresentation> type )\n-    {\n-        Map<String, PropertyGetter> serialization = serializations.computeIfAbsent(\n-                type, ObjectRepresentation::buildSerialization );\n-        return serialization;\n-    }\n+  private static Map<String, PropertyGetter> serialization(Class<? extends ObjectRepresentation> type)\n+  {\n+    Map<String, PropertyGetter> serialization = serializations.computeIfAbsent(\n+        type, ObjectRepresentation::buildSerialization);\n+    return serialization;\n+  }\n \n-    private static Map<String,PropertyGetter> buildSerialization( Class<?> type )\n+  private static Map<String, PropertyGetter> buildSerialization(Class<?> type)\n+  {\n+    Map<String, PropertyGetter> serialization;\n+    serialization = new HashMap<>();\n+    for (Method method : type.getMethods())\n     {\n-        Map<String,PropertyGetter> serialization;\n-        serialization = new HashMap<>();\n-        for ( Method method : type.getMethods() )\n-        {\n-            Mapping property = method.getAnnotation( Mapping.class );\n-            if ( property != null )\n-            {\n-                serialization.put( property.value(), getter( method ) );\n-            }\n-        }\n-        return serialization;\n+      Mapping property = method.getAnnotation(Mapping.class);\n+      if (property != null)\n+      {\n+        serialization.put(property.value(), getter(method));\n+      }\n     }\n+    return serialization;\n+  }\n \n-    private static PropertyGetter getter( final Method method )\n+  private static PropertyGetter getter(final Method method)\n+  {\n+    // If this turns out to be a bottle neck we could use a byte code\n+    // generation library, such as ASM, instead of reflection.\n+    return new PropertyGetter(method)\n     {\n-        // If this turns out to be a bottle neck we could use a byte code\n-        // generation library, such as ASM, instead of reflection.\n-        return new PropertyGetter( method )\n+      @Override\n+      Object get(ObjectRepresentation object)\n+      {\n+        Throwable e;\n+        try\n         {\n-            @Override\n-            Object get( ObjectRepresentation object )\n-            {\n-                Throwable e;\n-                try\n-                {\n-                    return method.invoke( object );\n-                }\n-                catch ( InvocationTargetException ex )\n-                {\n-                    e = ex.getTargetException();\n-                    if ( e instanceof RuntimeException )\n-                    {\n-                        throw (RuntimeException) e;\n-                    }\n-                    else if ( e instanceof Error )\n-                    {\n-                        throw (Error) e;\n-                    }\n-                }\n-                catch ( Exception ex )\n-                {\n-                    e = ex;\n-                }\n-                throw new IllegalStateException( \"Serialization failure\", e );\n-            }\n-        };\n-    }\n-\n-    private abstract static class PropertyGetter\n-    {\n-        PropertyGetter( Method method )\n+          return method.invoke(object);\n+        } catch (InvocationTargetException ex)\n         {\n-            if ( method.getParameterTypes().length != 0 )\n-            {\n-                throw new IllegalStateException( \"Property getter method may not have any parameters.\" );\n-            }\n-            if ( !Representation.class.isAssignableFrom( method.getReturnType() ) )\n-            {\n-                throw new IllegalStateException( \"Property getter must return Representation object.\" );\n-            }\n-        }\n-\n-        void putTo( MappingSerializer serializer, ObjectRepresentation object, String key )\n+          e = ex.getTargetException();\n+          if (e instanceof RuntimeException)\n+          {\n+            throw (RuntimeException) e;\n+          } else if (e instanceof Error)\n+          {\n+            throw (Error) e;\n+          }\n+        } catch (Exception ex)\n         {\n-            Object value = get( object );\n-            if ( value != null )\n-            {\n-                ((Representation) value).putTo( serializer, key );\n-            }\n+          e = ex;\n         }\n+        throw new IllegalStateException(\"Serialization failure\", e);\n+      }\n+    };\n+  }\n \n-        abstract Object get( ObjectRepresentation object );\n+  private abstract static class PropertyGetter\n+  {\n+    PropertyGetter(Method method)\n+    {\n+      if (method.getParameterTypes().length != 0)\n+      {\n+        throw new IllegalStateException(\"Property getter method may not have any parameters.\");\n+      }\n+      if (!Representation.class.isAssignableFrom(method.getReturnType()))\n+      {\n+        throw new IllegalStateException(\"Property getter must return Representation object.\");\n+      }\n     }\n \n-    @Override\n-    protected final void serialize( MappingSerializer serializer )\n+    void putTo(MappingSerializer serializer, ObjectRepresentation object, String key)\n     {\n-        for ( Map.Entry<String, PropertyGetter> property : serialization.entrySet() )\n-        {\n-            property.getValue()\n-                    .putTo( serializer, this, property.getKey() );\n-        }\n-        extraData( serializer );\n+      Object value = get(object);\n+      if (value != null)\n+      {\n+        ((Representation) value).putTo(serializer, key);\n+      }\n     }\n \n-    void extraData( MappingSerializer serializer )\n+    abstract Object get(ObjectRepresentation object);\n+  }\n+\n+  @Override\n+  protected final void serialize(MappingSerializer serializer)\n+  {\n+    for (Map.Entry<String, PropertyGetter> property : serialization.entrySet())\n     {\n+      property.getValue()\n+          .putTo(serializer, this, property.getKey());\n     }\n+    extraData(serializer);\n+  }\n+\n+  void extraData(MappingSerializer serializer)\n+  {\n+  }\n }\n",
            "diff_size": 139
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2251/ObjectRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2251/ObjectRepresentation.java\nindex 6313ef6d5fb..3e059d578af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2251/ObjectRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2251/ObjectRepresentation.java\n@@ -38,10 +38,8 @@ public abstract class ObjectRepresentation extends MappingRepresentation\n         String value();\n     }\n \n-    private static final ConcurrentHashMap<Class<?>, Map<String, PropertyGetter>> serializations =\n-            new ConcurrentHashMap<>();\n-\n-    private final Map<String, PropertyGetter> serialization = serialization( getClass() );\n+    private static final ConcurrentHashMap<Class<?>, Map<String, PropertyGetter>> serializations = new ConcurrentHashMap<>();\n+private final Map<String,PropertyGetter> serialization = serialization( getClass() );\n \n     ObjectRepresentation( RepresentationType type )\n     {\n@@ -53,11 +51,10 @@ public abstract class ObjectRepresentation extends MappingRepresentation\n         super( type );\n     }\n \n-    private static Map<String, PropertyGetter> serialization( Class<? extends ObjectRepresentation> type )\n+    private static Map<String,PropertyGetter> serialization( Class<? extends ObjectRepresentation> type )\n     {\n-        Map<String, PropertyGetter> serialization = serializations.computeIfAbsent(\n-                type, ObjectRepresentation::buildSerialization );\n-        return serialization;\n+        Map<String,PropertyGetter> serialization = serializations.computeIfAbsent( type, ObjectRepresentation::buildSerialization );\n+return serialization;\n     }\n \n     private static Map<String,PropertyGetter> buildSerialization( Class<?> type )\n@@ -118,7 +115,8 @@ public abstract class ObjectRepresentation extends MappingRepresentation\n             {\n                 throw new IllegalStateException( \"Property getter method may not have any parameters.\" );\n             }\n-            if ( !Representation.class.isAssignableFrom( method.getReturnType() ) )\n+\n+if ( !Representation.class.isAssignableFrom( method.getReturnType() ) )\n             {\n                 throw new IllegalStateException( \"Property getter must return Representation object.\" );\n             }\n@@ -139,15 +137,15 @@ public abstract class ObjectRepresentation extends MappingRepresentation\n     @Override\n     protected final void serialize( MappingSerializer serializer )\n     {\n-        for ( Map.Entry<String, PropertyGetter> property : serialization.entrySet() )\n+        for ( Map.Entry<String,PropertyGetter> property : serialization.entrySet() )\n         {\n-            property.getValue()\n-                    .putTo( serializer, this, property.getKey() );\n+            property.getValue().putTo( serializer, this, property.getKey() );\n         }\n-        extraData( serializer );\n+\n+extraData( serializer );\n     }\n \n     void extraData( MappingSerializer serializer )\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
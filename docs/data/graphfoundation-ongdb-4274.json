{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4274",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "97",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4274/DeferringStatementLocksFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4274/DeferringStatementLocksFactory.java\nindex f4f37ce9f97..71f984f535e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4274/DeferringStatementLocksFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4274/DeferringStatementLocksFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import org.neo4j.configuration.Description;\n@@ -35,31 +36,31 @@ import static org.neo4j.kernel.configuration.Settings.setting;\n  */\n public class DeferringStatementLocksFactory implements StatementLocksFactory, LoadableConfig\n {\n-    @Internal\n-    @Description( \"Enable deferring of locks to commit time. This feature weakens the isolation level. \" +\n-                  \"It can result in both domain and storage level inconsistencies.\" )\n-    public static final Setting<Boolean> deferred_locks_enabled =\n-            setting( \"unsupported.dbms.deferred_locks.enabled\", Settings.BOOLEAN, Settings.FALSE );\n+  @Internal\n+  @Description(\"Enable deferring of locks to commit time. This feature weakens the isolation level. \" +\n+      \"It can result in both domain and storage level inconsistencies.\")\n+  public static final Setting<Boolean> deferred_locks_enabled =\n+      setting(\"unsupported.dbms.deferred_locks.enabled\", Settings.BOOLEAN, Settings.FALSE);\n \n-    private Locks locks;\n-    private boolean deferredLocksEnabled;\n+  private Locks locks;\n+  private boolean deferredLocksEnabled;\n \n-    @Override\n-    public void initialize( Locks locks, Config config )\n-    {\n-        this.locks = requireNonNull( locks );\n-        this.deferredLocksEnabled = config.get( deferred_locks_enabled );\n-    }\n+  @Override\n+  public void initialize(Locks locks, Config config)\n+  {\n+    this.locks = requireNonNull(locks);\n+    this.deferredLocksEnabled = config.get(deferred_locks_enabled);\n+  }\n \n-    @Override\n-    public StatementLocks newInstance()\n+  @Override\n+  public StatementLocks newInstance()\n+  {\n+    if (locks == null)\n     {\n-        if ( locks == null )\n-        {\n-            throw new IllegalStateException( \"Factory has not been initialized\" );\n-        }\n-\n-        Locks.Client client = locks.newClient();\n-        return deferredLocksEnabled ? new DeferringStatementLocks( client ) : new SimpleStatementLocks( client );\n+      throw new IllegalStateException(\"Factory has not been initialized\");\n     }\n+\n+    Locks.Client client = locks.newClient();\n+    return deferredLocksEnabled ? new DeferringStatementLocks(client) : new SimpleStatementLocks(client);\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4274/DeferringStatementLocksFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4274/DeferringStatementLocksFactory.java\nindex f4f37ce9f97..ee7610b008d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4274/DeferringStatementLocksFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4274/DeferringStatementLocksFactory.java\n@@ -36,12 +36,10 @@ import static org.neo4j.kernel.configuration.Settings.setting;\n public class DeferringStatementLocksFactory implements StatementLocksFactory, LoadableConfig\n {\n     @Internal\n-    @Description( \"Enable deferring of locks to commit time. This feature weakens the isolation level. \" +\n-                  \"It can result in both domain and storage level inconsistencies.\" )\n-    public static final Setting<Boolean> deferred_locks_enabled =\n-            setting( \"unsupported.dbms.deferred_locks.enabled\", Settings.BOOLEAN, Settings.FALSE );\n+    @Description( \"Enable deferring of locks to commit time. This feature weakens the isolation level. \" + \"It can result in both domain and storage level inconsistencies.\" )\n+public static final Setting<Boolean> deferred_locks_enabled = setting( \"unsupported.dbms.deferred_locks.enabled\", Settings.BOOLEAN, Settings.FALSE );\n \n-    private Locks locks;\n+private Locks locks;\n     private boolean deferredLocksEnabled;\n \n     @Override\n@@ -62,4 +60,4 @@ public class DeferringStatementLocksFactory implements StatementLocksFactory, Lo\n         Locks.Client client = locks.newClient();\n         return deferredLocksEnabled ? new DeferringStatementLocks( client ) : new SimpleStatementLocks( client );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
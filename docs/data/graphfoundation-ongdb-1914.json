{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1914",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1914/ConstraintValidationException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1914/ConstraintValidationException.java\nindex 1ebb280ed48..5c8bcaf6a08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1914/ConstraintValidationException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1914/ConstraintValidationException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.exceptions.schema;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -31,56 +32,56 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public abstract class ConstraintValidationException extends KernelException\n {\n-    /**\n-     * Constraint validation failures can happen during one of two phases of the constraint lifecycle.\n-     *\n-     * VERIFICATION is the process to control that a constraint holds with respect to all the data in the graph. This\n-     * happens before creating a constraint for example, and if the verification fails the constraint is not created.\n-     * Verification can also occur during batch import for example.\n-     *\n-     * VALIDATION is what happens when the graph is modified, and the resulting state is controlled against a\n-     * constraint to see that the modified state does not violate the constraint. If validation fails the modifying\n-     * transaction is rolled back.\n-     */\n-    public enum Phase\n-    {\n-        VERIFICATION( Status.Statement.ConstraintVerificationFailed ),\n-        VALIDATION( Status.Schema.ConstraintValidationFailed );\n-\n-        private final Status status;\n-\n-        Phase( Status status )\n-        {\n-            this.status = status;\n-        }\n-\n-        public Status getStatus()\n-        {\n-            return status;\n-        }\n-    }\n+  /**\n+   * Constraint validation failures can happen during one of two phases of the constraint lifecycle.\n+   * <p>\n+   * VERIFICATION is the process to control that a constraint holds with respect to all the data in the graph. This\n+   * happens before creating a constraint for example, and if the verification fails the constraint is not created.\n+   * Verification can also occur during batch import for example.\n+   * <p>\n+   * VALIDATION is what happens when the graph is modified, and the resulting state is controlled against a\n+   * constraint to see that the modified state does not violate the constraint. If validation fails the modifying\n+   * transaction is rolled back.\n+   */\n+  public enum Phase\n+  {\n+    VERIFICATION(Status.Statement.ConstraintVerificationFailed),\n+    VALIDATION(Status.Schema.ConstraintValidationFailed);\n \n-    protected final ConstraintDescriptor constraint;\n+    private final Status status;\n \n-    protected ConstraintValidationException( ConstraintDescriptor constraint, Phase phase, String subject )\n+    Phase(Status status)\n     {\n-        super( phase.getStatus(), \"%s does not satisfy %s.\",\n-                subject, constraint.prettyPrint( SchemaUtil.idTokenNameLookup ) );\n-        this.constraint = constraint;\n+      this.status = status;\n     }\n \n-    protected ConstraintValidationException( ConstraintDescriptor constraint, Phase phase, String subject, Throwable failure )\n+    public Status getStatus()\n     {\n-        super( phase.getStatus(), failure, \"%s does not satisfy %s: %s\",\n-                subject, constraint.prettyPrint( SchemaUtil.idTokenNameLookup ), failure.getMessage() );\n-        this.constraint = constraint;\n+      return status;\n     }\n+  }\n \n-    @Override\n-    public abstract String getUserMessage( TokenNameLookup tokenNameLookup );\n+  protected final ConstraintDescriptor constraint;\n \n-    public ConstraintDescriptor constraint()\n-    {\n-        return constraint;\n-    }\n+  protected ConstraintValidationException(ConstraintDescriptor constraint, Phase phase, String subject)\n+  {\n+    super(phase.getStatus(), \"%s does not satisfy %s.\",\n+        subject, constraint.prettyPrint(SchemaUtil.idTokenNameLookup));\n+    this.constraint = constraint;\n+  }\n+\n+  protected ConstraintValidationException(ConstraintDescriptor constraint, Phase phase, String subject, Throwable failure)\n+  {\n+    super(phase.getStatus(), failure, \"%s does not satisfy %s: %s\",\n+        subject, constraint.prettyPrint(SchemaUtil.idTokenNameLookup), failure.getMessage());\n+    this.constraint = constraint;\n+  }\n+\n+  @Override\n+  public abstract String getUserMessage(TokenNameLookup tokenNameLookup);\n+\n+  public ConstraintDescriptor constraint()\n+  {\n+    return constraint;\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1914/ConstraintValidationException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1914/ConstraintValidationException.java\nindex 1ebb280ed48..c3dfeab8ddd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1914/ConstraintValidationException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1914/ConstraintValidationException.java\n@@ -44,8 +44,7 @@ public abstract class ConstraintValidationException extends KernelException\n      */\n     public enum Phase\n     {\n-        VERIFICATION( Status.Statement.ConstraintVerificationFailed ),\n-        VALIDATION( Status.Schema.ConstraintValidationFailed );\n+        VERIFICATION( Status.Statement.ConstraintVerificationFailed ), VALIDATION( Status.Schema.ConstraintValidationFailed );\n \n         private final Status status;\n \n@@ -66,14 +65,14 @@ public abstract class ConstraintValidationException extends KernelException\n     {\n         super( phase.getStatus(), \"%s does not satisfy %s.\",\n                 subject, constraint.prettyPrint( SchemaUtil.idTokenNameLookup ) );\n-        this.constraint = constraint;\n+this.constraint = constraint;\n     }\n \n     protected ConstraintValidationException( ConstraintDescriptor constraint, Phase phase, String subject, Throwable failure )\n     {\n         super( phase.getStatus(), failure, \"%s does not satisfy %s: %s\",\n                 subject, constraint.prettyPrint( SchemaUtil.idTokenNameLookup ), failure.getMessage() );\n-        this.constraint = constraint;\n+this.constraint = constraint;\n     }\n \n     @Override\n@@ -83,4 +82,4 @@ public abstract class ConstraintValidationException extends KernelException\n     {\n         return constraint;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
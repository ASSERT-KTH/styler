{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3224",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3224/HtmlHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3224/HtmlHelper.java\nindex 022802a51b9..10d430c6b29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3224/HtmlHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3224/HtmlHelper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.domain;\n \n import java.util.Collection;\n@@ -27,186 +28,181 @@ import java.util.Map;\n  */\n public class HtmlHelper\n {\n-    private static final String STYLE_LOCATION = \"http://resthtml.neo4j.org/style/\";\n-\n-    private HtmlHelper()\n-    {\n-    }\n-\n-    public static String from( final Object object, final ObjectType objectType )\n-    {\n-        StringBuilder builder = start( objectType, null );\n-        append( builder, object, objectType );\n-        return end( builder );\n-    }\n-\n-    public static StringBuilder start( final ObjectType objectType, final String additionalCodeInHead )\n-    {\n-        return start( objectType.getCaption(), additionalCodeInHead );\n-    }\n-\n-    public static StringBuilder start( final String title, final String additionalCodeInHead )\n+  private static final String STYLE_LOCATION = \"http://resthtml.neo4j.org/style/\";\n+\n+  private HtmlHelper()\n+  {\n+  }\n+\n+  public static String from(final Object object, final ObjectType objectType)\n+  {\n+    StringBuilder builder = start(objectType, null);\n+    append(builder, object, objectType);\n+    return end(builder);\n+  }\n+\n+  public static StringBuilder start(final ObjectType objectType, final String additionalCodeInHead)\n+  {\n+    return start(objectType.getCaption(), additionalCodeInHead);\n+  }\n+\n+  public static StringBuilder start(final String title, final String additionalCodeInHead)\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/loose.dtd\\\">\\n\");\n+    builder.append(\"<html><head><title>\" + title + \"</title>\");\n+    if (additionalCodeInHead != null)\n     {\n-        StringBuilder builder = new StringBuilder();\n-        builder.append( \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/loose.dtd\\\">\\n\" );\n-        builder.append( \"<html><head><title>\" + title + \"</title>\" );\n-        if ( additionalCodeInHead != null )\n-        {\n-            builder.append( additionalCodeInHead );\n-        }\n-        builder.append( \"<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-Type\\\">\\n\" + \"<link href='\"\n-                        + STYLE_LOCATION + \"rest.css' rel='stylesheet' type='text/css'>\\n\"\n-                        + \"</head>\\n<body onload='javascript:neo4jHtmlBrowse.start();' id='\" + title.toLowerCase()\n-                        + \"'>\\n\" + \"<div id='content'>\" + \"<div id='header'>\"\n-                        + \"<h1><a title='Neo4j REST interface' href='/'><span>Neo4j REST interface</span></a></h1>\"\n-                        + \"</div>\" + \"\\n<div id='page-body'>\\n\" );\n-        return builder;\n+      builder.append(additionalCodeInHead);\n     }\n-\n-    public static String end( final StringBuilder builder )\n+    builder.append(\"<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-Type\\\">\\n\" + \"<link href='\"\n+        + STYLE_LOCATION + \"rest.css' rel='stylesheet' type='text/css'>\\n\"\n+        + \"</head>\\n<body onload='javascript:neo4jHtmlBrowse.start();' id='\" + title.toLowerCase()\n+        + \"'>\\n\" + \"<div id='content'>\" + \"<div id='header'>\"\n+        + \"<h1><a title='Neo4j REST interface' href='/'><span>Neo4j REST interface</span></a></h1>\"\n+        + \"</div>\" + \"\\n<div id='page-body'>\\n\");\n+    return builder;\n+  }\n+\n+  public static String end(final StringBuilder builder)\n+  {\n+    builder.append(\"<div class='break'>&nbsp;</div>\" + \"</div></div></body></html>\");\n+    return builder.toString();\n+  }\n+\n+  public static void appendMessage(final StringBuilder builder, final String message)\n+  {\n+    builder.append(\"<p class=\\\"message\\\">\" + message + \"</p>\");\n+  }\n+\n+  public static void append(final StringBuilder builder, final Object object, final ObjectType objectType)\n+  {\n+    if (object instanceof Collection)\n     {\n-        builder.append( \"<div class='break'>&nbsp;</div>\" + \"</div></div></body></html>\" );\n-        return builder.toString();\n-    }\n-\n-    public static void appendMessage( final StringBuilder builder, final String message )\n-    {\n-        builder.append( \"<p class=\\\"message\\\">\" + message + \"</p>\" );\n-    }\n-\n-    public static void append( final StringBuilder builder, final Object object, final ObjectType objectType )\n+      builder.append(\"<ul>\\n\");\n+      for (Object item : (Collection<?>) object)\n+      {\n+        builder.append(\"<li>\");\n+        append(builder, item, objectType);\n+        builder.append(\"</li>\\n\");\n+      }\n+      builder.append(\"</ul>\\n\");\n+    } else if (object instanceof Map)\n     {\n-        if ( object instanceof Collection )\n+      Map<?, ?> map = (Map<?, ?>) object;\n+      String htmlClass = objectType.getHtmlClass();\n+      String caption = objectType.getCaption();\n+      if (!map.isEmpty())\n+      {\n+        boolean isNodeOrRelationship = ObjectType.NODE.equals(objectType)\n+            || ObjectType.RELATIONSHIP.equals(objectType);\n+        if (isNodeOrRelationship)\n         {\n-            builder.append( \"<ul>\\n\" );\n-            for ( Object item : (Collection<?>) object )\n-            {\n-                builder.append( \"<li>\" );\n-                append( builder, item, objectType );\n-                builder.append( \"</li>\\n\" );\n-            }\n-            builder.append( \"</ul>\\n\" );\n+          builder.append(\"<h2>\" + caption + \"</h2>\\n\");\n+          append(builder, map.get(\"data\"), ObjectType.PROPERTIES);\n+          htmlClass = \"meta\";\n+          caption += \" info\";\n         }\n-        else if ( object instanceof Map )\n+        if (ObjectType.NODE.equals(objectType) && map.size() == 1)\n         {\n-            Map<?, ?> map = (Map<?, ?>) object;\n-            String htmlClass = objectType.getHtmlClass();\n-            String caption = objectType.getCaption();\n-            if ( !map.isEmpty() )\n-            {\n-                boolean isNodeOrRelationship = ObjectType.NODE.equals( objectType )\n-                                               || ObjectType.RELATIONSHIP.equals( objectType );\n-                if ( isNodeOrRelationship )\n-                {\n-                    builder.append( \"<h2>\" + caption + \"</h2>\\n\" );\n-                    append( builder, map.get( \"data\" ), ObjectType.PROPERTIES );\n-                    htmlClass = \"meta\";\n-                    caption += \" info\";\n-                }\n-                if ( ObjectType.NODE.equals( objectType ) && map.size() == 1 )\n-                {\n-                    // there's only properties, so we're finished here\n-                    return;\n-                }\n-                builder.append( \"<table class=\\\"\" + htmlClass + \"\\\"><caption>\" );\n-                builder.append( caption );\n-                builder.append( \"</caption>\\n\" );\n-                boolean odd = true;\n-                for ( Map.Entry<?, ?> entry : map.entrySet() )\n-                {\n-                    if ( isNodeOrRelationship && \"data\".equals( entry.getKey() ) )\n-                    {\n-                        continue;\n-                    }\n-                    builder.append( \"<tr\" + ( odd ? \" class='odd'\" : \"\" ) + \">\" );\n-                    odd = !odd;\n-                    builder.append( \"<th>\" + entry.getKey() + \"</th><td>\" );\n-                    // TODO We always assume that an inner map is for\n-                    // properties, correct?\n-                    append( builder, entry.getValue(), ObjectType.PROPERTIES );\n-                    builder.append( \"</td></tr>\\n\" );\n-                }\n-                builder.append( \"</table>\\n\" );\n-            }\n-            else\n-            {\n-                builder.append( \"<table class=\\\"\" + htmlClass + \"\\\"><caption>\" );\n-                builder.append( caption );\n-                builder.append( \"</caption>\" );\n-                builder.append( \"<tr><td></td></tr>\" );\n-                builder.append( \"</table>\" );\n-            }\n+          // there's only properties, so we're finished here\n+          return;\n         }\n-        else\n+        builder.append(\"<table class=\\\"\" + htmlClass + \"\\\"><caption>\");\n+        builder.append(caption);\n+        builder.append(\"</caption>\\n\");\n+        boolean odd = true;\n+        for (Map.Entry<?, ?> entry : map.entrySet())\n         {\n-            builder.append( object != null ? embedInLinkIfClickable( object.toString() ) : \"\" );\n+          if (isNodeOrRelationship && \"data\".equals(entry.getKey()))\n+          {\n+            continue;\n+          }\n+          builder.append(\"<tr\" + (odd ? \" class='odd'\" : \"\") + \">\");\n+          odd = !odd;\n+          builder.append(\"<th>\" + entry.getKey() + \"</th><td>\");\n+          // TODO We always assume that an inner map is for\n+          // properties, correct?\n+          append(builder, entry.getValue(), ObjectType.PROPERTIES);\n+          builder.append(\"</td></tr>\\n\");\n         }\n+        builder.append(\"</table>\\n\");\n+      } else\n+      {\n+        builder.append(\"<table class=\\\"\" + htmlClass + \"\\\"><caption>\");\n+        builder.append(caption);\n+        builder.append(\"</caption>\");\n+        builder.append(\"<tr><td></td></tr>\");\n+        builder.append(\"</table>\");\n+      }\n+    } else\n+    {\n+      builder.append(object != null ? embedInLinkIfClickable(object.toString()) : \"\");\n     }\n+  }\n \n-    private static String embedInLinkIfClickable( String string )\n+  private static String embedInLinkIfClickable(String string)\n+  {\n+    // TODO Hardcode \"http://\" string?\n+    if (string.startsWith(\"http://\") || string.startsWith(\"https://\"))\n     {\n-        // TODO Hardcode \"http://\" string?\n-        if ( string.startsWith( \"http://\" ) || string.startsWith( \"https://\" ) )\n-        {\n-            String anchoredString = \"<a href=\\\"\" + string + \"\\\"\";\n-\n-            // TODO Hardcoded /node/, /relationship/ string?\n-            String anchorClass = null;\n-            if ( string.contains( \"/node/\" ) )\n-            {\n-                anchorClass = \"node\";\n-            }\n-            else if ( string.contains( \"/relationship/\" ) )\n-            {\n-                anchorClass = \"relationship\";\n-            }\n-            if ( anchorClass != null )\n-            {\n-                anchoredString += \" class=\\\"\" + anchorClass + \"\\\"\";\n-            }\n-            anchoredString += \">\" + escapeHtml( string ) + \"</a>\";\n-            string = anchoredString;\n-        }\n-        else\n-        {\n-            string = escapeHtml( string );\n-        }\n-        return string;\n+      String anchoredString = \"<a href=\\\"\" + string + \"\\\"\";\n+\n+      // TODO Hardcoded /node/, /relationship/ string?\n+      String anchorClass = null;\n+      if (string.contains(\"/node/\"))\n+      {\n+        anchorClass = \"node\";\n+      } else if (string.contains(\"/relationship/\"))\n+      {\n+        anchorClass = \"relationship\";\n+      }\n+      if (anchorClass != null)\n+      {\n+        anchoredString += \" class=\\\"\" + anchorClass + \"\\\"\";\n+      }\n+      anchoredString += \">\" + escapeHtml(string) + \"</a>\";\n+      string = anchoredString;\n+    } else\n+    {\n+      string = escapeHtml(string);\n     }\n+    return string;\n+  }\n \n-    private static String escapeHtml( final String string )\n+  private static String escapeHtml(final String string)\n+  {\n+    if (string == null)\n     {\n-        if ( string == null )\n-        {\n-            return null;\n-        }\n-        String res = string.replace( \"&\", \"&amp;\" );\n-        res = res.replace( \"\\\"\", \"&quot;\" );\n-        res = res.replace( \"<\", \"&lt;\" );\n-        res = res.replace( \">\", \"&gt;\" );\n-        return res;\n+      return null;\n     }\n-\n-    public enum ObjectType\n+    String res = string.replace(\"&\", \"&amp;\");\n+    res = res.replace(\"\\\"\", \"&quot;\");\n+    res = res.replace(\"<\", \"&lt;\");\n+    res = res.replace(\">\", \"&gt;\");\n+    return res;\n+  }\n+\n+  public enum ObjectType\n+  {\n+    NODE,\n+    RELATIONSHIP,\n+    PROPERTIES,\n+    ROOT,\n+    INDEX_ROOT,\n+\n+    ;\n+\n+    String getCaption()\n     {\n-        NODE,\n-        RELATIONSHIP,\n-        PROPERTIES,\n-        ROOT,\n-        INDEX_ROOT,\n-\n-        ;\n-\n-        String getCaption()\n-        {\n-            return name().substring( 0, 1 )\n-                    .toUpperCase() + name().substring( 1 )\n-                    .toLowerCase();\n-        }\n+      return name().substring(0, 1)\n+          .toUpperCase() + name().substring(1)\n+          .toLowerCase();\n+    }\n \n-        String getHtmlClass()\n-        {\n-            return getCaption().toLowerCase();\n-        }\n+    String getHtmlClass()\n+    {\n+      return getCaption().toLowerCase();\n     }\n+  }\n }\n",
            "diff_size": 247
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "column": "84",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3224/HtmlHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3224/HtmlHelper.java\nindex 022802a51b9..a022fa5c5d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3224/HtmlHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3224/HtmlHelper.java\n@@ -54,13 +54,8 @@ public class HtmlHelper\n         {\n             builder.append( additionalCodeInHead );\n         }\n-        builder.append( \"<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-Type\\\">\\n\" + \"<link href='\"\n-                        + STYLE_LOCATION + \"rest.css' rel='stylesheet' type='text/css'>\\n\"\n-                        + \"</head>\\n<body onload='javascript:neo4jHtmlBrowse.start();' id='\" + title.toLowerCase()\n-                        + \"'>\\n\" + \"<div id='content'>\" + \"<div id='header'>\"\n-                        + \"<h1><a title='Neo4j REST interface' href='/'><span>Neo4j REST interface</span></a></h1>\"\n-                        + \"</div>\" + \"\\n<div id='page-body'>\\n\" );\n-        return builder;\n+        builder.append( \"<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-Type\\\">\\n\" + \"<link href='\" + STYLE_LOCATION + \"rest.css' rel='stylesheet' type='text/css'>\\n\" + \"</head>\\n<body onload='javascript:neo4jHtmlBrowse.start();' id='\" + title.toLowerCase() + \"'>\\n\" + \"<div id='content'>\" + \"<div id='header'>\" + \"<h1><a title='Neo4j REST interface' href='/'><span>Neo4j REST interface</span></a></h1>\" + \"</div>\" + \"\\n<div id='page-body'>\\n\" );\n+return builder;\n     }\n \n     public static String end( final StringBuilder builder )\n@@ -94,16 +89,16 @@ public class HtmlHelper\n             String caption = objectType.getCaption();\n             if ( !map.isEmpty() )\n             {\n-                boolean isNodeOrRelationship = ObjectType.NODE.equals( objectType )\n-                                               || ObjectType.RELATIONSHIP.equals( objectType );\n-                if ( isNodeOrRelationship )\n+                boolean isNodeOrRelationship = ObjectType.NODE.equals( objectType )|| ObjectType.RELATIONSHIP.equals( objectType );\n+if ( isNodeOrRelationship )\n                 {\n                     builder.append( \"<h2>\" + caption + \"</h2>\\n\" );\n                     append( builder, map.get( \"data\" ), ObjectType.PROPERTIES );\n                     htmlClass = \"meta\";\n                     caption += \" info\";\n                 }\n-                if ( ObjectType.NODE.equals( objectType ) && map.size() == 1 )\n+\n+if ( ObjectType.NODE.equals( objectType ) && map.size() == 1 )\n                 {\n                     // there's only properties, so we're finished here\n                     return;\n@@ -160,18 +155,21 @@ public class HtmlHelper\n             {\n                 anchorClass = \"relationship\";\n             }\n-            if ( anchorClass != null )\n+\n+if ( anchorClass != null )\n             {\n                 anchoredString += \" class=\\\"\" + anchorClass + \"\\\"\";\n             }\n-            anchoredString += \">\" + escapeHtml( string ) + \"</a>\";\n+\n+anchoredString += \">\" + escapeHtml( string ) + \"</a>\";\n             string = anchoredString;\n         }\n         else\n         {\n             string = escapeHtml( string );\n         }\n-        return string;\n+\n+return string;\n     }\n \n     private static String escapeHtml( final String string )\n@@ -180,7 +178,8 @@ public class HtmlHelper\n         {\n             return null;\n         }\n-        String res = string.replace( \"&\", \"&amp;\" );\n+\n+String res = string.replace( \"&\", \"&amp;\" );\n         res = res.replace( \"\\\"\", \"&quot;\" );\n         res = res.replace( \"<\", \"&lt;\" );\n         res = res.replace( \">\", \"&gt;\" );\n@@ -189,19 +188,13 @@ public class HtmlHelper\n \n     public enum ObjectType\n     {\n-        NODE,\n-        RELATIONSHIP,\n-        PROPERTIES,\n-        ROOT,\n-        INDEX_ROOT,\n+        NODE, RELATIONSHIP, PROPERTIES, ROOT, INDEX_ROOT,\n \n         ;\n \n         String getCaption()\n         {\n-            return name().substring( 0, 1 )\n-                    .toUpperCase() + name().substring( 1 )\n-                    .toLowerCase();\n+            return name().substring( 0, 1 ).toUpperCase() + name().substring( 1 ).toLowerCase();\n         }\n \n         String getHtmlClass()\n@@ -209,4 +202,4 @@ public class HtmlHelper\n             return getCaption().toLowerCase();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "134",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "84",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "105",
                    "column": "58",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "17",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "118",
                    "column": "46",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "152",
                    "column": "44",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "198",
                    "column": "27",
                    "severity": "error",
                    "message": "'{' at column 27 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "27",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3224/HtmlHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3224/HtmlHelper.java\nindex 022802a51b9..14f649fbb2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3224/HtmlHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3224/HtmlHelper.java\n@@ -25,6 +25,7 @@ import java.util.Map;\n /**\n  * This is just a simple test of how a HTML renderer could be like\n  */\n+\n public class HtmlHelper\n {\n     private static final String STYLE_LOCATION = \"http://resthtml.neo4j.org/style/\";\n@@ -54,12 +55,8 @@ public class HtmlHelper\n         {\n             builder.append( additionalCodeInHead );\n         }\n-        builder.append( \"<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-Type\\\">\\n\" + \"<link href='\"\n-                        + STYLE_LOCATION + \"rest.css' rel='stylesheet' type='text/css'>\\n\"\n-                        + \"</head>\\n<body onload='javascript:neo4jHtmlBrowse.start();' id='\" + title.toLowerCase()\n-                        + \"'>\\n\" + \"<div id='content'>\" + \"<div id='header'>\"\n-                        + \"<h1><a title='Neo4j REST interface' href='/'><span>Neo4j REST interface</span></a></h1>\"\n-                        + \"</div>\" + \"\\n<div id='page-body'>\\n\" );\n+\n+        builder.append( \"<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-Type\\\">\\n\" + \"<link href='\" + STYLE_LOCATION+ \"rest.css' rel='stylesheet' type='text/css'>\\n\" + \"</head>\\n<body onload='javascript:neo4jHtmlBrowse.start();' id='\" + title.toLowerCase() + \"'>\\n\" + \"<div id='content'>\" + \"<div id='header'>\" + \"<h1><a title='Neo4j REST interface' href='/'><span>Neo4j REST interface</span></a></h1>\" + \"</div>\" + \"\\n<div id='page-body'>\\n\" );\n         return builder;\n     }\n \n@@ -79,23 +76,24 @@ public class HtmlHelper\n         if ( object instanceof Collection )\n         {\n             builder.append( \"<ul>\\n\" );\n-            for ( Object item : (Collection<?>) object )\n+            for( Object item : (Collection<?>) object)\n             {\n                 builder.append( \"<li>\" );\n                 append( builder, item, objectType );\n                 builder.append( \"</li>\\n\" );\n             }\n+\n             builder.append( \"</ul>\\n\" );\n         }\n-        else if ( object instanceof Map )\n+        else\n+        if ( object instanceof Map )\n         {\n             Map<?, ?> map = (Map<?, ?>) object;\n             String htmlClass = objectType.getHtmlClass();\n             String caption = objectType.getCaption();\n-            if ( !map.isEmpty() )\n+            if ( ! map.isEmpty() )\n             {\n-                boolean isNodeOrRelationship = ObjectType.NODE.equals( objectType )\n-                                               || ObjectType.RELATIONSHIP.equals( objectType );\n+                boolean isNodeOrRelationship = ObjectType.NODE.equals( objectType )|| ObjectType.RELATIONSHIP.equals( objectType );\n                 if ( isNodeOrRelationship )\n                 {\n                     builder.append( \"<h2>\" + caption + \"</h2>\\n\" );\n@@ -103,29 +101,34 @@ public class HtmlHelper\n                     htmlClass = \"meta\";\n                     caption += \" info\";\n                 }\n-                if ( ObjectType.NODE.equals( objectType ) && map.size() == 1 )\n+\n+                if ( ObjectType.NODE.equals( objectType )&& map.size() == 1 )\n                 {\n                     // there's only properties, so we're finished here\n                     return;\n                 }\n+\n                 builder.append( \"<table class=\\\"\" + htmlClass + \"\\\"><caption>\" );\n                 builder.append( caption );\n                 builder.append( \"</caption>\\n\" );\n                 boolean odd = true;\n-                for ( Map.Entry<?, ?> entry : map.entrySet() )\n+                for( Map.Entry<?, ?> entry : map.entrySet()\n+                )\n                 {\n-                    if ( isNodeOrRelationship && \"data\".equals( entry.getKey() ) )\n+                    if ( isNodeOrRelationship&& \"data\".equals( entry.getKey() ) )\n                     {\n                         continue;\n                     }\n-                    builder.append( \"<tr\" + ( odd ? \" class='odd'\" : \"\" ) + \">\" );\n-                    odd = !odd;\n+\n+                    builder.append( \"<tr\" + ( odd ? \" class='odd'\" : \"\") + \">\" );\n+                    odd = ! odd;\n                     builder.append( \"<th>\" + entry.getKey() + \"</th><td>\" );\n                     // TODO We always assume that an inner map is for\n                     // properties, correct?\n                     append( builder, entry.getValue(), ObjectType.PROPERTIES );\n                     builder.append( \"</td></tr>\\n\" );\n                 }\n+\n                 builder.append( \"</table>\\n\" );\n             }\n             else\n@@ -146,7 +149,7 @@ public class HtmlHelper\n     private static String embedInLinkIfClickable( String string )\n     {\n         // TODO Hardcode \"http://\" string?\n-        if ( string.startsWith( \"http://\" ) || string.startsWith( \"https://\" ) )\n+        if ( string.startsWith( \"http://\" )|| string.startsWith( \"https://\" ) )\n         {\n             String anchoredString = \"<a href=\\\"\" + string + \"\\\"\";\n \n@@ -156,14 +159,17 @@ public class HtmlHelper\n             {\n                 anchorClass = \"node\";\n             }\n-            else if ( string.contains( \"/relationship/\" ) )\n+            else\n+            if ( string.contains( \"/relationship/\" ) )\n             {\n                 anchorClass = \"relationship\";\n             }\n+\n             if ( anchorClass != null )\n             {\n                 anchoredString += \" class=\\\"\" + anchorClass + \"\\\"\";\n             }\n+\n             anchoredString += \">\" + escapeHtml( string ) + \"</a>\";\n             string = anchoredString;\n         }\n@@ -171,6 +177,7 @@ public class HtmlHelper\n         {\n             string = escapeHtml( string );\n         }\n+\n         return string;\n     }\n \n@@ -180,6 +187,7 @@ public class HtmlHelper\n         {\n             return null;\n         }\n+\n         String res = string.replace( \"&\", \"&amp;\" );\n         res = res.replace( \"\\\"\", \"&quot;\" );\n         res = res.replace( \"<\", \"&lt;\" );\n@@ -187,26 +195,16 @@ public class HtmlHelper\n         return res;\n     }\n \n-    public enum ObjectType\n-    {\n-        NODE,\n-        RELATIONSHIP,\n-        PROPERTIES,\n-        ROOT,\n-        INDEX_ROOT,\n-\n-        ;\n+    public enum ObjectType{ NODE, RELATIONSHIP, PROPERTIES, ROOT, INDEX_ROOT, ;\n+                                                                                  String getCaption()\n+                                                                                  {\n+                                                                                      return name().substring( 0, 1 ).toUpperCase() + name().substring( 1 ).toLowerCase();\n+                                                                                  }\n \n-        String getCaption()\n-        {\n-            return name().substring( 0, 1 )\n-                    .toUpperCase() + name().substring( 1 )\n-                    .toLowerCase();\n-        }\n+                                                                                  String getHtmlClass()\n+                                                                                  {\n+                                                                                      return getCaption().toLowerCase();\n+                                                                                  }\n \n-        String getHtmlClass()\n-        {\n-            return getCaption().toLowerCase();\n-        }\n-    }\n-}\n+                          }\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
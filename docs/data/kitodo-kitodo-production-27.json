{
    "project_name": "kitodo-kitodo-production",
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "172",
                "column": "6",
                "severity": "warning",
                "message": "'method def' child has incorrect indentation level 5, expected level should be 8.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "     */\n    public boolean isWithWorkflow() {\n     return Objects.isNull(withWorkflow) ? true : withWorkflow;\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/27/Division.java\nindex f118582ee67..cd465ac3512 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/27/Division.java\n@@ -169,6 +169,6 @@ public class Division {\n      * @return if a workflow is used.\n      */\n     public boolean isWithWorkflow() {\n-     return Objects.isNull(withWorkflow) ? true : withWorkflow;\n+        return Objects.isNull(withWorkflow) ? true : withWorkflow;\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/27/Division.java\nindex f118582ee67..cd465ac3512 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/27/Division.java\n@@ -169,6 +169,6 @@ public class Division {\n      * @return if a workflow is used.\n      */\n     public boolean isWithWorkflow() {\n-     return Objects.isNull(withWorkflow) ? true : withWorkflow;\n+        return Objects.isNull(withWorkflow) ? true : withWorkflow;\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "156",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 161.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "171",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/27/Division.java\nindex f118582ee67..4eba11b1fa5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/27/Division.java\n@@ -153,8 +153,7 @@ public class Division {\n         }\n     }\n \n-\n-    /**\n+/**\n      * Returns the use.\n      *\n      * @return the use\n@@ -169,6 +168,6 @@ public class Division {\n      * @return if a workflow is used.\n      */\n     public boolean isWithWorkflow() {\n-     return Objects.isNull(withWorkflow) ? true : withWorkflow;\n+    return Objects.isNull(withWorkflow) ? true : withWorkflow;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/27/Division.java\nindex f118582ee67..06bab22a0b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/27/Division.java\n@@ -16,7 +16,6 @@ import java.util.LinkedList;\n import java.util.List;\n import java.util.Objects;\n import java.util.Optional;\n-\n import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlElement;\n \n@@ -24,16 +23,19 @@ import javax.xml.bind.annotation.XmlElement;\n  * A division is a possible type of element of the tree-shaped structure of the\n  * digital representation of the cultural work.\n  */\n+\n public class Division {\n     /**\n      * The internal identifier of the division.\n      */\n+\n     @XmlAttribute(required = true)\n     private String id;\n \n     /**\n      * The sequence description to form a process title.\n      */\n+\n     @XmlAttribute\n     private String processTitle;\n \n@@ -41,18 +43,21 @@ public class Division {\n      * The key used to store the part of the date relevant to this division, to\n      * which the described subtree dates.\n      */\n+\n     @XmlAttribute\n     private String dates;\n \n     /**\n      * The use of the division.\n      */\n+\n     @XmlAttribute\n     private String use;\n \n     /**\n      * If the division should use a workflow.\n      */\n+\n     @XmlAttribute\n     private Boolean withWorkflow;\n \n@@ -64,6 +69,7 @@ public class Division {\n      * other than January 1. This works in conjunction with\n      * {@link SubdivisionByDateElement#yearBegin}.\n      */\n+\n     @XmlAttribute\n     private String scheme;\n \n@@ -71,13 +77,17 @@ public class Division {\n      * Human-readable identifiers for the type. There can be several, depending\n      * on the language.\n      */\n-    @XmlElement(name = \"label\", namespace = \"http://names.kitodo.org/ruleset/v2\", required = true)\n+\n+    @XmlElement(name = \"label\",\n+        namespace = \"http://names.kitodo.org/ruleset/v2\",\n+            required = true)\n     private List<Label> labels = new LinkedList<>();\n \n     /**\n      * In this element, if there is, it is stored that the division of this\n      * division is done by divisions, which map a calendar date.\n      */\n+\n     @XmlElement(namespace = \"http://names.kitodo.org/ruleset/v2\")\n     private SubdivisionByDateElement subdivisionByDate;\n \n@@ -87,6 +97,8 @@ public class Division {\n      *\n      * @return the key used to store the date\n      */\n+\n+\n     public Optional<String> getDates() {\n         return Optional.ofNullable(dates);\n     }\n@@ -96,6 +108,8 @@ public class Division {\n      *\n      * @return divisions\n      */\n+\n+\n     public List<Division> getDivisions() {\n         if (subdivisionByDate == null) {\n             return Collections.emptyList();\n@@ -109,6 +123,8 @@ public class Division {\n      *\n      * @return the internal identifier of the division\n      */\n+\n+\n     public String getId() {\n         return id;\n     }\n@@ -118,6 +134,8 @@ public class Division {\n      *\n      * @return the human-readable identifiers for the type\n      */\n+\n+\n     public List<Label> getLabels() {\n         return labels;\n     }\n@@ -127,6 +145,8 @@ public class Division {\n      *\n      * @return the key used to store the date\n      */\n+\n+\n     public Optional<String> getProcessTitle() {\n         return Optional.ofNullable(processTitle);\n     }\n@@ -136,6 +156,8 @@ public class Division {\n      *\n      * @return the scheme\n      */\n+\n+\n     public String getScheme() {\n         return scheme;\n     }\n@@ -145,6 +167,8 @@ public class Division {\n      *\n      * @return the begin of the operating year\n      */\n+\n+\n     public String getYearBegin() {\n         if (subdivisionByDate == null) {\n             return null;\n@@ -159,6 +183,8 @@ public class Division {\n      *\n      * @return the use\n      */\n+\n+\n     public String getUse() {\n         return use;\n     }\n@@ -168,7 +194,9 @@ public class Division {\n      *\n      * @return if a workflow is used.\n      */\n+\n+\n     public boolean isWithWorkflow() {\n-     return Objects.isNull(withWorkflow) ? true : withWorkflow;\n+        return Objects.isNull(withWorkflow) ? true : withWorkflow;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/27/Division.java\nindex f118582ee67..cd465ac3512 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/27/Division.java\n@@ -169,6 +169,6 @@ public class Division {\n      * @return if a workflow is used.\n      */\n     public boolean isWithWorkflow() {\n-     return Objects.isNull(withWorkflow) ? true : withWorkflow;\n+        return Objects.isNull(withWorkflow) ? true : withWorkflow;\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/27/Division.java\nindex f118582ee67..cd465ac3512 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/27/Division.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/27/Division.java\n@@ -169,6 +169,6 @@ public class Division {\n      * @return if a workflow is used.\n      */\n     public boolean isWithWorkflow() {\n-     return Objects.isNull(withWorkflow) ? true : withWorkflow;\n+        return Objects.isNull(withWorkflow) ? true : withWorkflow;\n     }\n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
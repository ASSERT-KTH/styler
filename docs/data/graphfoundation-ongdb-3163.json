{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3163",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3163/StateTransition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3163/StateTransition.java\nindex f119c9094ad..a673cdbeec2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3163/StateTransition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3163/StateTransition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.statemachine;\n \n import org.neo4j.cluster.com.message.Message;\n@@ -28,77 +29,76 @@ import org.neo4j.cluster.com.message.MessageType;\n  */\n public class StateTransition\n {\n-    private State<?,?> oldState;\n-    private Message<? extends MessageType> message;\n-    private State<?,?> newState;\n+  private State<?, ?> oldState;\n+  private Message<? extends MessageType> message;\n+  private State<?, ?> newState;\n \n-    public StateTransition( State<?,?> oldState, Message<? extends MessageType> message, State<?,?> newState )\n-    {\n-        this.oldState = oldState;\n-        this.message = message;\n-        this.newState = newState;\n-    }\n+  public StateTransition(State<?, ?> oldState, Message<? extends MessageType> message, State<?, ?> newState)\n+  {\n+    this.oldState = oldState;\n+    this.message = message;\n+    this.newState = newState;\n+  }\n \n-    public State<?,?> getOldState()\n-    {\n-        return oldState;\n-    }\n+  public State<?, ?> getOldState()\n+  {\n+    return oldState;\n+  }\n \n-    public Message<? extends MessageType> getMessage()\n-    {\n-        return message;\n-    }\n+  public Message<? extends MessageType> getMessage()\n+  {\n+    return message;\n+  }\n \n-    public State<?,?> getNewState()\n+  public State<?, ?> getNewState()\n+  {\n+    return newState;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return newState;\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        StateTransition that = (StateTransition) o;\n+    StateTransition that = (StateTransition) o;\n \n-        if ( !message.equals( that.message ) )\n-        {\n-            return false;\n-        }\n-        if ( !newState.equals( that.newState ) )\n-        {\n-            return false;\n-        }\n-        return oldState.equals( that.oldState );\n+    if (!message.equals(that.message))\n+    {\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (!newState.equals(that.newState))\n     {\n-        int result = oldState.hashCode();\n-        result = 31 * result + message.hashCode();\n-        result = 31 * result + newState.hashCode();\n-        return result;\n+      return false;\n     }\n+    return oldState.equals(that.oldState);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = oldState.hashCode();\n+    result = 31 * result + message.hashCode();\n+    result = 31 * result + newState.hashCode();\n+    return result;\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public String toString()\n+  {\n+    if (message.getPayload() instanceof String)\n+    {\n+      return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \":\" + getMessage().getPayload() +\n+          \"]->\" + getNewState().toString();\n+    } else\n     {\n-        if ( message.getPayload() instanceof String )\n-        {\n-            return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \":\" + getMessage().getPayload() +\n-                    \"]->\" + getNewState().toString();\n-        }\n-        else\n-        {\n-            return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \"]->\" + getNewState().toString();\n-        }\n+      return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \"]->\" + getNewState().toString();\n     }\n+  }\n }\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3163/StateTransition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3163/StateTransition.java\nindex f119c9094ad..b725a634673 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3163/StateTransition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3163/StateTransition.java\n@@ -28,18 +28,18 @@ import org.neo4j.cluster.com.message.MessageType;\n  */\n public class StateTransition\n {\n-    private State<?,?> oldState;\n+    private State<?, ?> oldState;\n     private Message<? extends MessageType> message;\n-    private State<?,?> newState;\n+    private State<?, ?> newState;\n \n-    public StateTransition( State<?,?> oldState, Message<? extends MessageType> message, State<?,?> newState )\n+    public StateTransition( State<?, ?> oldState, Message<? extends MessageType> message, State<?, ?> newState )\n     {\n         this.oldState = oldState;\n         this.message = message;\n         this.newState = newState;\n     }\n \n-    public State<?,?> getOldState()\n+    public State<?, ?> getOldState()\n     {\n         return oldState;\n     }\n@@ -49,7 +49,7 @@ public class StateTransition\n         return message;\n     }\n \n-    public State<?,?> getNewState()\n+    public State<?, ?> getNewState()\n     {\n         return newState;\n     }\n@@ -61,7 +61,8 @@ public class StateTransition\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -72,11 +73,13 @@ public class StateTransition\n         {\n             return false;\n         }\n-        if ( !newState.equals( that.newState ) )\n+\n+if ( !newState.equals( that.newState ) )\n         {\n             return false;\n         }\n-        return oldState.equals( that.oldState );\n+\n+return oldState.equals( that.oldState );\n     }\n \n     @Override\n@@ -93,12 +96,11 @@ public class StateTransition\n     {\n         if ( message.getPayload() instanceof String )\n         {\n-            return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \":\" + getMessage().getPayload() +\n-                    \"]->\" + getNewState().toString();\n+            return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \":\" + getMessage().getPayload() + \"]->\" + getNewState().toString();\n         }\n         else\n         {\n             return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \"]->\" + getNewState().toString();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3163/StateTransition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3163/StateTransition.java\nindex f119c9094ad..8c6b9f50db2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3163/StateTransition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3163/StateTransition.java\n@@ -26,20 +26,21 @@ import org.neo4j.cluster.com.message.MessageType;\n  * A single state transition that occurred in\n  * a state machine as a consequence of handling a message.\n  */\n+\n public class StateTransition\n {\n-    private State<?,?> oldState;\n+    private State<?, ?> oldState;\n     private Message<? extends MessageType> message;\n-    private State<?,?> newState;\n+    private State<?, ?> newState;\n \n-    public StateTransition( State<?,?> oldState, Message<? extends MessageType> message, State<?,?> newState )\n+    public StateTransition( State<?, ?> oldState, Message<? extends MessageType> message, State<?, ?> newState )\n     {\n         this.oldState = oldState;\n         this.message = message;\n         this.newState = newState;\n     }\n \n-    public State<?,?> getOldState()\n+    public State<?, ?> getOldState()\n     {\n         return oldState;\n     }\n@@ -49,7 +50,7 @@ public class StateTransition\n         return message;\n     }\n \n-    public State<?,?> getNewState()\n+    public State<?, ?> getNewState()\n     {\n         return newState;\n     }\n@@ -61,21 +62,23 @@ public class StateTransition\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+        if ( o == null|| getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         StateTransition that = (StateTransition) o;\n-\n-        if ( !message.equals( that.message ) )\n+        if ( ! message.equals( that.message ) )\n         {\n             return false;\n         }\n-        if ( !newState.equals( that.newState ) )\n+\n+        if ( ! newState.equals( that.newState ) )\n         {\n             return false;\n         }\n+\n         return oldState.equals( that.oldState );\n     }\n \n@@ -83,8 +86,8 @@ public class StateTransition\n     public int hashCode()\n     {\n         int result = oldState.hashCode();\n-        result = 31 * result + message.hashCode();\n-        result = 31 * result + newState.hashCode();\n+        result = 31* result + message.hashCode();\n+        result = 31* result + newState.hashCode();\n         return result;\n     }\n \n@@ -93,12 +96,11 @@ public class StateTransition\n     {\n         if ( message.getPayload() instanceof String )\n         {\n-            return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \":\" + getMessage().getPayload() +\n-                    \"]->\" + getNewState().toString();\n+            return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \":\" + getMessage().getPayload() + \"]->\" + getNewState().toString();\n         }\n         else\n         {\n             return getOldState().toString() + \"-[\" + getMessage().getMessageType() + \"]->\" + getNewState().toString();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
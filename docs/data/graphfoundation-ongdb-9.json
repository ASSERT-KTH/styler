{
    "project_name": "graphfoundation-ongdb",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "238",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/9/AuthorizationEnabledFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/9/AuthorizationEnabledFilter.java\nindex 8a596594a75..1a3afdf7fac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/9/AuthorizationEnabledFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/9/AuthorizationEnabledFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.dbms;\n \n import java.io.IOException;\n@@ -55,222 +56,216 @@ import static org.neo4j.server.web.XForwardUtil.X_FORWARD_PROTO_HEADER_KEY;\n \n public class AuthorizationEnabledFilter extends AuthorizationFilter\n {\n-    private static final Pattern PASSWORD_CHANGE_WHITELIST = Pattern.compile( \"/user/.*\" );\n+  private static final Pattern PASSWORD_CHANGE_WHITELIST = Pattern.compile(\"/user/.*\");\n \n-    private final Supplier<AuthManager> authManagerSupplier;\n-    private final Log log;\n-    private final Pattern[] uriWhitelist;\n+  private final Supplier<AuthManager> authManagerSupplier;\n+  private final Log log;\n+  private final Pattern[] uriWhitelist;\n \n-    public AuthorizationEnabledFilter( Supplier<AuthManager> authManager, LogProvider logProvider, Pattern... uriWhitelist )\n-    {\n-        this.authManagerSupplier = authManager;\n-        this.log = logProvider.getLog( getClass() );\n-        this.uriWhitelist = uriWhitelist;\n-    }\n+  public AuthorizationEnabledFilter(Supplier<AuthManager> authManager, LogProvider logProvider, Pattern... uriWhitelist)\n+  {\n+    this.authManagerSupplier = authManager;\n+    this.log = logProvider.getLog(getClass());\n+    this.uriWhitelist = uriWhitelist;\n+  }\n \n-    @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n-    {\n-        validateRequestType( servletRequest );\n-        validateResponseType( servletResponse );\n+  @Override\n+  public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n+      throws IOException, ServletException\n+  {\n+    validateRequestType(servletRequest);\n+    validateResponseType(servletResponse);\n \n-        final HttpServletRequest request = (HttpServletRequest) servletRequest;\n-        final HttpServletResponse response = (HttpServletResponse) servletResponse;\n-\n-        final String path = request.getContextPath() + ( request.getPathInfo() == null ? \"\" : request.getPathInfo() );\n-\n-        if ( request.getMethod().equals( \"OPTIONS\" ) || whitelisted( path ) )\n-        {\n-            // NOTE: If starting transactions with access mode on whitelisted uris should be possible we need to\n-            //       wrap servletRequest in an AuthorizedRequestWarpper here\n-            filterChain.doFilter( servletRequest, servletResponse );\n-            return;\n-        }\n+    final HttpServletRequest request = (HttpServletRequest) servletRequest;\n+    final HttpServletResponse response = (HttpServletResponse) servletResponse;\n \n-        final String header = request.getHeader( HttpHeaders.AUTHORIZATION );\n-        if ( header == null )\n-        {\n-            requestAuthentication( request, noHeader ).accept( response );\n-            return;\n-        }\n+    final String path = request.getContextPath() + (request.getPathInfo() == null ? \"\" : request.getPathInfo());\n \n-        final String[] usernameAndPassword = extractCredential( header );\n-        if ( usernameAndPassword == null )\n-        {\n-            badHeader.accept( response );\n-            return;\n-        }\n+    if (request.getMethod().equals(\"OPTIONS\") || whitelisted(path))\n+    {\n+      // NOTE: If starting transactions with access mode on whitelisted uris should be possible we need to\n+      //       wrap servletRequest in an AuthorizedRequestWarpper here\n+      filterChain.doFilter(servletRequest, servletResponse);\n+      return;\n+    }\n \n-        final String username = usernameAndPassword[0];\n-        final String password = usernameAndPassword[1];\n+    final String header = request.getHeader(HttpHeaders.AUTHORIZATION);\n+    if (header == null)\n+    {\n+      requestAuthentication(request, noHeader).accept(response);\n+      return;\n+    }\n \n-        try\n-        {\n-            LoginContext securityContext = authenticate( username, password );\n-            switch ( securityContext.subject().getAuthenticationResult() )\n-            {\n-            case PASSWORD_CHANGE_REQUIRED:\n-                if ( !PASSWORD_CHANGE_WHITELIST.matcher( path ).matches() )\n-                {\n-                    passwordChangeRequired( username, baseURL( request ) ).accept( response );\n-                    return;\n-                }\n-                // fall through\n-            case SUCCESS:\n-                try\n-                {\n-                    filterChain.doFilter( new AuthorizedRequestWrapper( BASIC_AUTH, username, request, securityContext ),\n-                            servletResponse );\n-                }\n-                catch ( AuthorizationViolationException e )\n-                {\n-                    unauthorizedAccess( e.getMessage() ).accept( response );\n-                }\n-                return;\n-            case TOO_MANY_ATTEMPTS:\n-                tooManyAttempts.accept( response );\n-                return;\n-            default:\n-                log.warn( \"Failed authentication attempt for '%s' from %s\", username, request.getRemoteAddr() );\n-                requestAuthentication( request, invalidCredential ).accept( response );\n-            }\n-        }\n-        catch ( InvalidAuthTokenException e )\n-        {\n-            requestAuthentication( request, invalidAuthToken( e.getMessage() ) ).accept( response );\n-        }\n-        catch ( AuthProviderTimeoutException e )\n-        {\n-            authProviderTimeout.accept( response );\n-        }\n-        catch ( AuthProviderFailedException e )\n-        {\n-            authProviderFailed.accept( response );\n-        }\n+    final String[] usernameAndPassword = extractCredential(header);\n+    if (usernameAndPassword == null)\n+    {\n+      badHeader.accept(response);\n+      return;\n     }\n \n-    private LoginContext authenticate( String username, String password ) throws InvalidAuthTokenException\n+    final String username = usernameAndPassword[0];\n+    final String password = usernameAndPassword[1];\n+\n+    try\n+    {\n+      LoginContext securityContext = authenticate(username, password);\n+      switch (securityContext.subject().getAuthenticationResult())\n+      {\n+        case PASSWORD_CHANGE_REQUIRED:\n+          if (!PASSWORD_CHANGE_WHITELIST.matcher(path).matches())\n+          {\n+            passwordChangeRequired(username, baseURL(request)).accept(response);\n+            return;\n+          }\n+          // fall through\n+        case SUCCESS:\n+          try\n+          {\n+            filterChain.doFilter(new AuthorizedRequestWrapper(BASIC_AUTH, username, request, securityContext),\n+                servletResponse);\n+          } catch (AuthorizationViolationException e)\n+          {\n+            unauthorizedAccess(e.getMessage()).accept(response);\n+          }\n+          return;\n+        case TOO_MANY_ATTEMPTS:\n+          tooManyAttempts.accept(response);\n+          return;\n+        default:\n+          log.warn(\"Failed authentication attempt for '%s' from %s\", username, request.getRemoteAddr());\n+          requestAuthentication(request, invalidCredential).accept(response);\n+      }\n+    } catch (InvalidAuthTokenException e)\n+    {\n+      requestAuthentication(request, invalidAuthToken(e.getMessage())).accept(response);\n+    } catch (AuthProviderTimeoutException e)\n     {\n-        AuthManager authManager = authManagerSupplier.get();\n-        Map<String,Object> authToken = newBasicAuthToken( username, password );\n-        return authManager.login( authToken );\n+      authProviderTimeout.accept(response);\n+    } catch (AuthProviderFailedException e)\n+    {\n+      authProviderFailed.accept(response);\n     }\n+  }\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> noHeader =\n-            error(  401,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.Unauthorized.code().serialize(),\n-                            \"message\", \"No authentication header supplied.\" ) ) ) );\n+  private LoginContext authenticate(String username, String password) throws InvalidAuthTokenException\n+  {\n+    AuthManager authManager = authManagerSupplier.get();\n+    Map<String, Object> authToken = newBasicAuthToken(username, password);\n+    return authManager.login(authToken);\n+  }\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> badHeader =\n-            error(  400,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Request.InvalidFormat.code().serialize(),\n-                            \"message\", \"Invalid authentication header.\" ) ) ) );\n+  private static final ThrowingConsumer<HttpServletResponse, IOException> noHeader =\n+      error(401,\n+          map(\"errors\", singletonList(map(\n+              \"code\", Status.Security.Unauthorized.code().serialize(),\n+              \"message\", \"No authentication header supplied.\"))));\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> invalidCredential =\n-            error(  401,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.Unauthorized.code().serialize(),\n-                            \"message\", \"Invalid username or password.\" ) ) ) );\n+  private static final ThrowingConsumer<HttpServletResponse, IOException> badHeader =\n+      error(400,\n+          map(\"errors\", singletonList(map(\n+              \"code\", Status.Request.InvalidFormat.code().serialize(),\n+              \"message\", \"Invalid authentication header.\"))));\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> tooManyAttempts =\n-            error(  429,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthenticationRateLimit.code().serialize(),\n-                            \"message\", \"Too many failed authentication requests. Please wait 5 seconds and try again.\" ) ) ) );\n+  private static final ThrowingConsumer<HttpServletResponse, IOException> invalidCredential =\n+      error(401,\n+          map(\"errors\", singletonList(map(\n+              \"code\", Status.Security.Unauthorized.code().serialize(),\n+              \"message\", \"Invalid username or password.\"))));\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderFailed =\n-            error(  502,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthProviderFailed.code().serialize(),\n-                            \"message\", \"An auth provider request failed.\" ) ) ) );\n+  private static final ThrowingConsumer<HttpServletResponse, IOException> tooManyAttempts =\n+      error(429,\n+          map(\"errors\", singletonList(map(\n+              \"code\", Status.Security.AuthenticationRateLimit.code().serialize(),\n+              \"message\", \"Too many failed authentication requests. Please wait 5 seconds and try again.\"))));\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderTimeout =\n-            error(  504,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthProviderTimeout.code().serialize(),\n-                            \"message\", \"An auth provider request timed out.\" ) ) ) );\n+  private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderFailed =\n+      error(502,\n+          map(\"errors\", singletonList(map(\n+              \"code\", Status.Security.AuthProviderFailed.code().serialize(),\n+              \"message\", \"An auth provider request failed.\"))));\n \n-    private static ThrowingConsumer<HttpServletResponse, IOException> invalidAuthToken( final String message )\n-    {\n-        return error( 401,\n-                map( \"errors\", singletonList( map(\n-                        \"code\", Status.Security.Unauthorized.code().serialize(),\n-                        \"message\", message ) ) ) );\n-    }\n+  private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderTimeout =\n+      error(504,\n+          map(\"errors\", singletonList(map(\n+              \"code\", Status.Security.AuthProviderTimeout.code().serialize(),\n+              \"message\", \"An auth provider request timed out.\"))));\n \n-    private static ThrowingConsumer<HttpServletResponse, IOException> passwordChangeRequired( final String username, final String baseURL )\n-    {\n-        URI path = UriBuilder.fromUri( baseURL ).path( format( \"/user/%s/password\", username ) ).build();\n-        return error( 403,\n-                map( \"errors\", singletonList( map(\n-                        \"code\", Status.Security.Forbidden.code().serialize(),\n-                        \"message\", \"User is required to change their password.\" ) ), \"password_change\", path.toString() ) );\n-    }\n+  private static ThrowingConsumer<HttpServletResponse, IOException> invalidAuthToken(final String message)\n+  {\n+    return error(401,\n+        map(\"errors\", singletonList(map(\n+            \"code\", Status.Security.Unauthorized.code().serialize(),\n+            \"message\", message))));\n+  }\n \n-    /**\n-     * In order to avoid browsers popping up an auth box when using the Neo4j Browser, it sends us a special header.\n-     * When we get that special header, we send a crippled authentication challenge back that the browser does not\n-     * understand, which lets the Neo4j Browser handle auth on its own.\n-     *\n-     * Otherwise, we send a regular basic auth challenge. This method adds the appropriate header depending on the\n-     * inbound request.\n-     */\n-    private static ThrowingConsumer<HttpServletResponse, IOException> requestAuthentication(\n-            HttpServletRequest req, ThrowingConsumer<HttpServletResponse, IOException> responseGen )\n+  private static ThrowingConsumer<HttpServletResponse, IOException> passwordChangeRequired(final String username, final String baseURL)\n+  {\n+    URI path = UriBuilder.fromUri(baseURL).path(format(\"/user/%s/password\", username)).build();\n+    return error(403,\n+        map(\"errors\", singletonList(map(\n+            \"code\", Status.Security.Forbidden.code().serialize(),\n+            \"message\", \"User is required to change their password.\")), \"password_change\", path.toString()));\n+  }\n+\n+  /**\n+   * In order to avoid browsers popping up an auth box when using the Neo4j Browser, it sends us a special header.\n+   * When we get that special header, we send a crippled authentication challenge back that the browser does not\n+   * understand, which lets the Neo4j Browser handle auth on its own.\n+   * <p>\n+   * Otherwise, we send a regular basic auth challenge. This method adds the appropriate header depending on the\n+   * inbound request.\n+   */\n+  private static ThrowingConsumer<HttpServletResponse, IOException> requestAuthentication(\n+      HttpServletRequest req, ThrowingConsumer<HttpServletResponse, IOException> responseGen)\n+  {\n+    if (\"true\".equals(req.getHeader(\"X-Ajax-Browser-Auth\")))\n+    {\n+      return res ->\n+      {\n+        responseGen.accept(res);\n+        res.addHeader(HttpHeaders.WWW_AUTHENTICATE, \"None\");\n+      };\n+    } else\n     {\n-        if ( \"true\".equals( req.getHeader( \"X-Ajax-Browser-Auth\" ) ) )\n-        {\n-            return res ->\n-            {\n-                responseGen.accept( res );\n-                res.addHeader( HttpHeaders.WWW_AUTHENTICATE, \"None\" );\n-            };\n-        }\n-        else\n-        {\n-            return res ->\n-            {\n-                responseGen.accept( res );\n-                res.addHeader( HttpHeaders.WWW_AUTHENTICATE, \"Basic realm=\\\"Neo4j\\\"\" );\n-            };\n-        }\n+      return res ->\n+      {\n+        responseGen.accept(res);\n+        res.addHeader(HttpHeaders.WWW_AUTHENTICATE, \"Basic realm=\\\"Neo4j\\\"\");\n+      };\n     }\n+  }\n \n-    private String baseURL( HttpServletRequest request )\n-    {\n-        StringBuffer url = request.getRequestURL();\n-        String baseURL = url.substring( 0, url.length() - request.getRequestURI().length() ) + \"/\";\n+  private String baseURL(HttpServletRequest request)\n+  {\n+    StringBuffer url = request.getRequestURL();\n+    String baseURL = url.substring(0, url.length() - request.getRequestURI().length()) + \"/\";\n \n-        return XForwardUtil.externalUri(\n-                baseURL,\n-                request.getHeader( X_FORWARD_HOST_HEADER_KEY ),\n-                request.getHeader( X_FORWARD_PROTO_HEADER_KEY ) );\n-    }\n+    return XForwardUtil.externalUri(\n+        baseURL,\n+        request.getHeader(X_FORWARD_HOST_HEADER_KEY),\n+        request.getHeader(X_FORWARD_PROTO_HEADER_KEY));\n+  }\n \n-    private boolean whitelisted( String path )\n+  private boolean whitelisted(String path)\n+  {\n+    for (Pattern pattern : uriWhitelist)\n     {\n-        for ( Pattern pattern : uriWhitelist )\n-        {\n-            if ( pattern.matcher( path ).matches() )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n+      if (pattern.matcher(path).matches())\n+      {\n+        return true;\n+      }\n     }\n+    return false;\n+  }\n \n-    private String[] extractCredential( String header )\n+  private String[] extractCredential(String header)\n+  {\n+    if (header == null)\n+    {\n+      return null;\n+    } else\n     {\n-        if ( header == null )\n-        {\n-            return null;\n-        }\n-        else\n-        {\n-            return AuthorizationHeaders.decode( header );\n-        }\n+      return AuthorizationHeaders.decode(header);\n     }\n+  }\n }\n",
            "diff_size": 260
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/9/AuthorizationEnabledFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/9/AuthorizationEnabledFilter.java\nindex 8a596594a75..1398455829e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/9/AuthorizationEnabledFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/9/AuthorizationEnabledFilter.java\n@@ -69,9 +69,8 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n     }\n \n     @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n-    {\n+    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain ) throws IOException, ServletException\n+{\n         validateRequestType( servletRequest );\n         validateResponseType( servletResponse );\n \n@@ -79,8 +78,7 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n         final HttpServletResponse response = (HttpServletResponse) servletResponse;\n \n         final String path = request.getContextPath() + ( request.getPathInfo() == null ? \"\" : request.getPathInfo() );\n-\n-        if ( request.getMethod().equals( \"OPTIONS\" ) || whitelisted( path ) )\n+if ( request.getMethod().equals( \"OPTIONS\" ) || whitelisted( path ) )\n         {\n             // NOTE: If starting transactions with access mode on whitelisted uris should be possible we need to\n             //       wrap servletRequest in an AuthorizedRequestWarpper here\n@@ -122,7 +120,7 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n                 {\n                     filterChain.doFilter( new AuthorizedRequestWrapper( BASIC_AUTH, username, request, securityContext ),\n                             servletResponse );\n-                }\n+    }\n                 catch ( AuthorizationViolationException e )\n                 {\n                     unauthorizedAccess( e.getMessage() ).accept( response );\n@@ -157,58 +155,36 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n         return authManager.login( authToken );\n     }\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> noHeader =\n-            error(  401,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.Unauthorized.code().serialize(),\n-                            \"message\", \"No authentication header supplied.\" ) ) ) );\n+    private static final ThrowingConsumer<HttpServletResponse,IOException> noHeader = error( 401,\n+                    map( \"errors\", singletonList( map( \"code\", Status.Security.Unauthorized.code().serialize(), \"message\", \"No authentication header supplied.\" ) ) ) );\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> badHeader =\n-            error(  400,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Request.InvalidFormat.code().serialize(),\n-                            \"message\", \"Invalid authentication header.\" ) ) ) );\n+private static final ThrowingConsumer<HttpServletResponse,IOException> badHeader = error( 400,\n+                    map( \"errors\", singletonList( map( \"code\", Status.Request.InvalidFormat.code().serialize(), \"message\", \"Invalid authentication header.\" ) ) ) );\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> invalidCredential =\n-            error(  401,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.Unauthorized.code().serialize(),\n-                            \"message\", \"Invalid username or password.\" ) ) ) );\n+private static final ThrowingConsumer<HttpServletResponse,IOException> invalidCredential = error( 401,\n+                    map( \"errors\", singletonList( map( \"code\", Status.Security.Unauthorized.code().serialize(), \"message\", \"Invalid username or password.\" ) ) ) );\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> tooManyAttempts =\n-            error(  429,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthenticationRateLimit.code().serialize(),\n-                            \"message\", \"Too many failed authentication requests. Please wait 5 seconds and try again.\" ) ) ) );\n+private static final ThrowingConsumer<HttpServletResponse,IOException> tooManyAttempts = error( 429,\n+                    map( \"errors\", singletonList( map( \"code\", Status.Security.AuthenticationRateLimit.code().serialize(), \"message\", \"Too many failed authentication requests. Please wait 5 seconds and try again.\" ) ) ) );\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderFailed =\n-            error(  502,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthProviderFailed.code().serialize(),\n-                            \"message\", \"An auth provider request failed.\" ) ) ) );\n+private static final ThrowingConsumer<HttpServletResponse,IOException> authProviderFailed = error( 502,\n+                    map( \"errors\", singletonList( map( \"code\", Status.Security.AuthProviderFailed.code().serialize(), \"message\", \"An auth provider request failed.\" ) ) ) );\n \n-    private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderTimeout =\n-            error(  504,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthProviderTimeout.code().serialize(),\n-                            \"message\", \"An auth provider request timed out.\" ) ) ) );\n+private static final ThrowingConsumer<HttpServletResponse,IOException> authProviderTimeout = error( 504,\n+                    map( \"errors\", singletonList( map( \"code\", Status.Security.AuthProviderTimeout.code().serialize(), \"message\", \"An auth provider request timed out.\" ) ) ) );\n \n-    private static ThrowingConsumer<HttpServletResponse, IOException> invalidAuthToken( final String message )\n+private static ThrowingConsumer<HttpServletResponse,IOException> invalidAuthToken( final String message )\n     {\n         return error( 401,\n-                map( \"errors\", singletonList( map(\n-                        \"code\", Status.Security.Unauthorized.code().serialize(),\n-                        \"message\", message ) ) ) );\n+                map( \"errors\", singletonList( map( \"code\", Status.Security.Unauthorized.code().serialize(), \"message\", message ) ) ) );\n     }\n \n-    private static ThrowingConsumer<HttpServletResponse, IOException> passwordChangeRequired( final String username, final String baseURL )\n+    private static ThrowingConsumer<HttpServletResponse,IOException> passwordChangeRequired( final String username, final String baseURL )\n     {\n         URI path = UriBuilder.fromUri( baseURL ).path( format( \"/user/%s/password\", username ) ).build();\n         return error( 403,\n-                map( \"errors\", singletonList( map(\n-                        \"code\", Status.Security.Forbidden.code().serialize(),\n-                        \"message\", \"User is required to change their password.\" ) ), \"password_change\", path.toString() ) );\n-    }\n+                map( \"errors\", singletonList( map( \"code\", Status.Security.Forbidden.code().serialize(), \"message\", \"User is required to change their password.\" ) ), \"password_change\", path.toString() ) );\n+            }\n \n     /**\n      * In order to avoid browsers popping up an auth box when using the Neo4j Browser, it sends us a special header.\n@@ -218,8 +194,7 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n      * Otherwise, we send a regular basic auth challenge. This method adds the appropriate header depending on the\n      * inbound request.\n      */\n-    private static ThrowingConsumer<HttpServletResponse, IOException> requestAuthentication(\n-            HttpServletRequest req, ThrowingConsumer<HttpServletResponse, IOException> responseGen )\n+    private static ThrowingConsumer<HttpServletResponse,IOException> requestAuthentication( HttpServletRequest req, ThrowingConsumer<HttpServletResponse,IOException> responseGen )\n     {\n         if ( \"true\".equals( req.getHeader( \"X-Ajax-Browser-Auth\" ) ) )\n         {\n@@ -244,10 +219,8 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n         StringBuffer url = request.getRequestURL();\n         String baseURL = url.substring( 0, url.length() - request.getRequestURI().length() ) + \"/\";\n \n-        return XForwardUtil.externalUri(\n-                baseURL,\n-                request.getHeader( X_FORWARD_HOST_HEADER_KEY ),\n-                request.getHeader( X_FORWARD_PROTO_HEADER_KEY ) );\n+        return XForwardUtil.externalUri( baseURL,\n+                request.getHeader( X_FORWARD_HOST_HEADER_KEY ), request.getHeader( X_FORWARD_PROTO_HEADER_KEY ) );\n     }\n \n     private boolean whitelisted( String path )\n@@ -273,4 +246,4 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n             return AuthorizationHeaders.decode( header );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
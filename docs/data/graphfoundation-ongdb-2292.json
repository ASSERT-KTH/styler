{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2292",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "151",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "316",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "421",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "429",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "434",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "437",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "440",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "456",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "459",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "462",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "465",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "505",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2292/RelationshipProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2292/RelationshipProxy.java\nindex 47e341b5cbc..8463731de3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2292/RelationshipProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2292/RelationshipProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import java.util.ArrayList;\n@@ -56,498 +57,484 @@ import static java.lang.String.format;\n \n public class RelationshipProxy implements Relationship, RelationshipVisitor<RuntimeException>\n {\n-    private final EmbeddedProxySPI actions;\n-    private long id = AbstractBaseRecord.NO_ID;\n-    private long startNode = AbstractBaseRecord.NO_ID;\n-    private long endNode = AbstractBaseRecord.NO_ID;\n-    private int type;\n-\n-    public RelationshipProxy( EmbeddedProxySPI spi, long id, long startNode, int type, long endNode )\n-    {\n-        this.actions = spi;\n-        visit( id, type, startNode, endNode );\n-    }\n-\n-    public RelationshipProxy( EmbeddedProxySPI spi, long id )\n-    {\n-        this.actions = spi;\n-        this.id = id;\n-    }\n-\n-    @Override\n-    public final void visit( long id, int type, long startNode, long endNode ) throws RuntimeException\n-    {\n-        this.id = id;\n-        this.type = type;\n-        this.startNode = startNode;\n-        this.endNode = endNode;\n-    }\n-\n-    private void initializeData()\n-    {\n-        // it enough to check only start node, since it's absence will indicate that data was not yet loaded\n-        if ( startNode == AbstractBaseRecord.NO_ID )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction();\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n-                transaction.dataRead().singleRelationship( id, relationships );\n-                //at this point we don't care if it is there or not just load what we got\n-                relationships.next();\n-                this.type = relationships.type();\n-                this.startNode = relationships.sourceNodeReference();\n-                this.endNode = relationships.targetNodeReference();\n-            }\n+  private final EmbeddedProxySPI actions;\n+  private long id = AbstractBaseRecord.NO_ID;\n+  private long startNode = AbstractBaseRecord.NO_ID;\n+  private long endNode = AbstractBaseRecord.NO_ID;\n+  private int type;\n+\n+  public RelationshipProxy(EmbeddedProxySPI spi, long id, long startNode, int type, long endNode)\n+  {\n+    this.actions = spi;\n+    visit(id, type, startNode, endNode);\n+  }\n+\n+  public RelationshipProxy(EmbeddedProxySPI spi, long id)\n+  {\n+    this.actions = spi;\n+    this.id = id;\n+  }\n+\n+  @Override\n+  public final void visit(long id, int type, long startNode, long endNode) throws RuntimeException\n+  {\n+    this.id = id;\n+    this.type = type;\n+    this.startNode = startNode;\n+    this.endNode = endNode;\n+  }\n+\n+  private void initializeData()\n+  {\n+    // it enough to check only start node, since it's absence will indicate that data was not yet loaded\n+    if (startNode == AbstractBaseRecord.NO_ID)\n+    {\n+      KernelTransaction transaction = safeAcquireTransaction();\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n+        transaction.dataRead().singleRelationship(id, relationships);\n+        //at this point we don't care if it is there or not just load what we got\n+        relationships.next();\n+        this.type = relationships.type();\n+        this.startNode = relationships.sourceNodeReference();\n+        this.endNode = relationships.targetNodeReference();\n+      }\n+    }\n+  }\n+\n+  @Override\n+  public long getId()\n+  {\n+    return id;\n+  }\n+\n+  private int typeId()\n+  {\n+    initializeData();\n+    return type;\n+  }\n+\n+  private long sourceId()\n+  {\n+    initializeData();\n+    return startNode;\n+  }\n+\n+  private long targetId()\n+  {\n+    initializeData();\n+    return endNode;\n+  }\n+\n+  @Override\n+  public GraphDatabaseService getGraphDatabase()\n+  {\n+    return actions.getGraphDatabase();\n+  }\n+\n+  @Override\n+  public void delete()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    try\n+    {\n+      boolean deleted = transaction.dataWrite().relationshipDelete(id);\n+      if (!deleted)\n+      {\n+        throw new NotFoundException(\"Unable to delete relationship[\" +\n+            getId() + \"] since it is already deleted.\");\n+      }\n+    } catch (InvalidTransactionTypeKernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (AutoIndexingKernelException e)\n+    {\n+      throw new IllegalStateException(\"Auto indexing encountered a failure while deleting the relationship: \"\n+          + e.getMessage(), e);\n+    }\n+  }\n+\n+  @Override\n+  public Node[] getNodes()\n+  {\n+    assertInUnterminatedTransaction();\n+    return new Node[] {\n+        actions.newNodeProxy(sourceId()),\n+        actions.newNodeProxy(targetId())};\n+  }\n+\n+  @Override\n+  public Node getOtherNode(Node node)\n+  {\n+    assertInUnterminatedTransaction();\n+    return actions.newNodeProxy(getOtherNodeId(node.getId()));\n+  }\n+\n+  @Override\n+  public Node getStartNode()\n+  {\n+    assertInUnterminatedTransaction();\n+    return actions.newNodeProxy(sourceId());\n+  }\n+\n+  @Override\n+  public Node getEndNode()\n+  {\n+    assertInUnterminatedTransaction();\n+    return actions.newNodeProxy(targetId());\n+  }\n+\n+  @Override\n+  public long getStartNodeId()\n+  {\n+    return sourceId();\n+  }\n+\n+  @Override\n+  public long getEndNodeId()\n+  {\n+    return targetId();\n+  }\n+\n+  @Override\n+  public long getOtherNodeId(long id)\n+  {\n+    long start = sourceId();\n+    long end = targetId();\n+    if (start == id)\n+    {\n+      return end;\n+    }\n+    if (end == id)\n+    {\n+      return start;\n+    }\n+    throw new NotFoundException(\"Node[\" + id + \"] not connected to this relationship[\" + getId() + \"]\");\n+  }\n+\n+  @Override\n+  public RelationshipType getType()\n+  {\n+    assertInUnterminatedTransaction();\n+    return actions.getRelationshipTypeById(typeId());\n+  }\n+\n+  @Override\n+  public Iterable<String> getPropertyKeys()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    List<String> keys = new ArrayList<>();\n+    try\n+    {\n+      RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n+      PropertyCursor properties = transaction.ambientPropertyCursor();\n+      singleRelationship(transaction, relationships);\n+      TokenRead token = transaction.tokenRead();\n+      relationships.properties(properties);\n+      while (properties.next())\n+      {\n+        keys.add(token.propertyKeyName(properties.propertyKey()));\n+      }\n+    } catch (PropertyKeyIdNotFoundKernelException e)\n+    {\n+      throw new IllegalStateException(\"Property key retrieved through kernel API should exist.\", e);\n+    }\n+    return keys;\n+  }\n+\n+  @Override\n+  public Map<String, Object> getProperties(String... keys)\n+  {\n+    Objects.requireNonNull(keys, \"Properties keys should be not null array.\");\n+\n+    if (keys.length == 0)\n+    {\n+      return Collections.emptyMap();\n+    }\n+\n+    KernelTransaction transaction = safeAcquireTransaction();\n+\n+    int itemsToReturn = keys.length;\n+    Map<String, Object> properties = new HashMap<>(itemsToReturn);\n+    TokenRead token = transaction.tokenRead();\n+\n+    //Find ids, note we are betting on that the number of keys\n+    //is small enough not to use a set here.\n+    int[] propertyIds = new int[itemsToReturn];\n+    for (int i = 0; i < itemsToReturn; i++)\n+    {\n+      String key = keys[i];\n+      if (key == null)\n+      {\n+        throw new NullPointerException(String.format(\"Key %d was null\", i));\n+      }\n+      propertyIds[i] = token.propertyKey(key);\n+    }\n+\n+    RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n+    PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n+    singleRelationship(transaction, relationships);\n+    relationships.properties(propertyCursor);\n+    int propertiesToFind = itemsToReturn;\n+    while (propertiesToFind > 0 && propertyCursor.next())\n+    {\n+      //Do a linear check if this is a property we are interested in.\n+      int currentKey = propertyCursor.propertyKey();\n+      for (int i = 0; i < itemsToReturn; i++)\n+      {\n+        if (propertyIds[i] == currentKey)\n+        {\n+          properties.put(keys[i],\n+              propertyCursor.propertyValue().asObjectCopy());\n+          propertiesToFind--;\n+          break;\n         }\n+      }\n     }\n+    return properties;\n+  }\n \n-    @Override\n-    public long getId()\n-    {\n-        return id;\n-    }\n+  @Override\n+  public Map<String, Object> getAllProperties()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    Map<String, Object> properties = new HashMap<>();\n \n-    private int typeId()\n+    try\n     {\n-        initializeData();\n-        return type;\n-    }\n-\n-    private long sourceId()\n+      RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n+      PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n+      TokenRead token = transaction.tokenRead();\n+      singleRelationship(transaction, relationships);\n+      relationships.properties(propertyCursor);\n+      while (propertyCursor.next())\n+      {\n+        properties.put(token.propertyKeyName(propertyCursor.propertyKey()),\n+            propertyCursor.propertyValue().asObjectCopy());\n+      }\n+    } catch (PropertyKeyIdNotFoundKernelException e)\n     {\n-        initializeData();\n-        return startNode;\n+      throw new IllegalStateException(\"Property key retrieved through kernel API should exist.\", e);\n     }\n+    return properties;\n+  }\n \n-    private long targetId()\n+  @Override\n+  public Object getProperty(String key)\n+  {\n+    if (null == key)\n     {\n-        initializeData();\n-        return endNode;\n+      throw new IllegalArgumentException(\"(null) property key is not allowed\");\n     }\n-\n-    @Override\n-    public GraphDatabaseService getGraphDatabase()\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int propertyKey = transaction.tokenRead().propertyKey(key);\n+    if (propertyKey == TokenRead.NO_TOKEN)\n     {\n-        return actions.getGraphDatabase();\n+      throw new NotFoundException(format(\"No such property, '%s'.\", key));\n     }\n \n-    @Override\n-    public void delete()\n+    RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n+    PropertyCursor properties = transaction.ambientPropertyCursor();\n+    singleRelationship(transaction, relationships);\n+    relationships.properties(properties);\n+    while (properties.next())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        try\n+      if (propertyKey == properties.propertyKey())\n+      {\n+        Value value = properties.propertyValue();\n+        if (value == Values.NO_VALUE)\n         {\n-            boolean deleted = transaction.dataWrite().relationshipDelete( id );\n-            if ( !deleted )\n-            {\n-                throw new NotFoundException( \"Unable to delete relationship[\" +\n-                                             getId() + \"] since it is already deleted.\" );\n-            }\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( AutoIndexingKernelException e )\n-        {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while deleting the relationship: \"\n-                                             + e.getMessage(), e );\n+          throw new NotFoundException(format(\"No such property, '%s'.\", key));\n         }\n+        return value.asObjectCopy();\n+      }\n     }\n+    throw new NotFoundException(format(\"No such property, '%s'.\", key));\n+  }\n \n-    @Override\n-    public Node[] getNodes()\n+  @Override\n+  public Object getProperty(String key, Object defaultValue)\n+  {\n+    if (null == key)\n     {\n-        assertInUnterminatedTransaction();\n-        return new Node[]{\n-                actions.newNodeProxy( sourceId() ),\n-                actions.newNodeProxy( targetId() )};\n+      throw new IllegalArgumentException(\"(null) property key is not allowed\");\n     }\n-\n-    @Override\n-    public Node getOtherNode( Node node )\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n+    PropertyCursor properties = transaction.ambientPropertyCursor();\n+    int propertyKey = transaction.tokenRead().propertyKey(key);\n+    if (propertyKey == TokenRead.NO_TOKEN)\n     {\n-        assertInUnterminatedTransaction();\n-        return actions.newNodeProxy( getOtherNodeId( node.getId() ) );\n+      return defaultValue;\n     }\n-\n-    @Override\n-    public Node getStartNode()\n+    singleRelationship(transaction, relationships);\n+    relationships.properties(properties);\n+    while (properties.next())\n     {\n-        assertInUnterminatedTransaction();\n-        return actions.newNodeProxy( sourceId() );\n+      if (propertyKey == properties.propertyKey())\n+      {\n+        Value value = properties.propertyValue();\n+        return value == Values.NO_VALUE ? defaultValue : value.asObjectCopy();\n+      }\n     }\n+    return defaultValue;\n+  }\n \n-    @Override\n-    public Node getEndNode()\n+  @Override\n+  public boolean hasProperty(String key)\n+  {\n+    if (null == key)\n     {\n-        assertInUnterminatedTransaction();\n-        return actions.newNodeProxy( targetId() );\n+      return false;\n     }\n \n-    @Override\n-    public long getStartNodeId()\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int propertyKey = transaction.tokenRead().propertyKey(key);\n+    if (propertyKey == TokenRead.NO_TOKEN)\n     {\n-        return sourceId();\n+      return false;\n     }\n \n-    @Override\n-    public long getEndNodeId()\n+    RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n+    PropertyCursor properties = transaction.ambientPropertyCursor();\n+    singleRelationship(transaction, relationships);\n+    relationships.properties(properties);\n+    while (properties.next())\n     {\n-        return targetId();\n+      if (propertyKey == properties.propertyKey())\n+      {\n+        return true;\n+      }\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public long getOtherNodeId( long id )\n+  @Override\n+  public void setProperty(String key, Object value)\n+  {\n+    KernelTransaction transaction = actions.kernelTransaction();\n+    int propertyKeyId;\n+    try\n     {\n-        long start = sourceId();\n-        long end = targetId();\n-        if ( start == id )\n-        {\n-            return end;\n-        }\n-        if ( end == id )\n-        {\n-            return start;\n-        }\n-        throw new NotFoundException( \"Node[\" + id + \"] not connected to this relationship[\" + getId() + \"]\" );\n-    }\n-\n-    @Override\n-    public RelationshipType getType()\n+      propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName(key);\n+    } catch (IllegalTokenNameException e)\n     {\n-        assertInUnterminatedTransaction();\n-        return actions.getRelationshipTypeById( typeId() );\n+      throw new IllegalArgumentException(format(\"Invalid property key '%s'.\", key), e);\n     }\n \n-    @Override\n-    public Iterable<String> getPropertyKeys()\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        List<String> keys = new ArrayList<>();\n-        try\n-        {\n-            RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n-            PropertyCursor properties = transaction.ambientPropertyCursor();\n-            singleRelationship( transaction, relationships );\n-            TokenRead token = transaction.tokenRead();\n-            relationships.properties( properties );\n-            while ( properties.next() )\n-            {\n-                keys.add( token.propertyKeyName( properties.propertyKey() ));\n-            }\n-        }\n-        catch ( PropertyKeyIdNotFoundKernelException e )\n-        {\n-            throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n-        }\n-        return keys;\n-    }\n-\n-    @Override\n-    public Map<String, Object> getProperties( String... keys )\n+      transaction.dataWrite().relationshipSetProperty(id, propertyKeyId, Values.of(value, false));\n+    } catch (IllegalArgumentException e)\n     {\n-        Objects.requireNonNull( keys, \"Properties keys should be not null array.\" );\n-\n-        if ( keys.length == 0 )\n-        {\n-            return Collections.emptyMap();\n-        }\n-\n-        KernelTransaction transaction = safeAcquireTransaction();\n-\n-        int itemsToReturn = keys.length;\n-        Map<String,Object> properties = new HashMap<>( itemsToReturn );\n-        TokenRead token = transaction.tokenRead();\n-\n-        //Find ids, note we are betting on that the number of keys\n-        //is small enough not to use a set here.\n-        int[] propertyIds = new int[itemsToReturn];\n-        for ( int i = 0; i < itemsToReturn; i++ )\n-        {\n-            String key = keys[i];\n-            if ( key == null )\n-            {\n-                throw new NullPointerException( String.format( \"Key %d was null\", i ) );\n-            }\n-            propertyIds[i] = token.propertyKey( key );\n-        }\n-\n-        RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n-        PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n-        singleRelationship( transaction, relationships );\n-        relationships.properties( propertyCursor );\n-        int propertiesToFind = itemsToReturn;\n-        while ( propertiesToFind > 0 && propertyCursor.next() )\n-        {\n-            //Do a linear check if this is a property we are interested in.\n-            int currentKey = propertyCursor.propertyKey();\n-            for ( int i = 0; i < itemsToReturn; i++ )\n-            {\n-                if ( propertyIds[i] == currentKey )\n-                {\n-                    properties.put( keys[i],\n-                            propertyCursor.propertyValue().asObjectCopy() );\n-                    propertiesToFind--;\n-                    break;\n-                }\n-            }\n-        }\n-        return properties;\n-    }\n-\n-    @Override\n-    public Map<String, Object> getAllProperties()\n+      // Trying to set an illegal value is a critical error - fail this transaction\n+      actions.failTransaction();\n+      throw e;\n+    } catch (EntityNotFoundException e)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        Map<String,Object> properties = new HashMap<>();\n-\n-        try\n-        {\n-            RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n-            PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n-            TokenRead token = transaction.tokenRead();\n-            singleRelationship( transaction, relationships );\n-            relationships.properties( propertyCursor );\n-            while ( propertyCursor.next() )\n-            {\n-                properties.put( token.propertyKeyName( propertyCursor.propertyKey() ),\n-                        propertyCursor.propertyValue().asObjectCopy() );\n-            }\n-        }\n-        catch ( PropertyKeyIdNotFoundKernelException e )\n-        {\n-            throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n-        }\n-        return properties;\n-    }\n-\n-    @Override\n-    public Object getProperty( String key )\n+      throw new NotFoundException(e);\n+    } catch (InvalidTransactionTypeKernelException e)\n     {\n-        if ( null == key )\n-        {\n-            throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n-        }\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int propertyKey = transaction.tokenRead().propertyKey( key );\n-        if ( propertyKey == TokenRead.NO_TOKEN )\n-        {\n-            throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n-        }\n-\n-        RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n-        PropertyCursor properties = transaction.ambientPropertyCursor();\n-        singleRelationship( transaction, relationships );\n-        relationships.properties( properties );\n-        while ( properties.next() )\n-        {\n-            if ( propertyKey == properties.propertyKey() )\n-            {\n-                Value value = properties.propertyValue();\n-                if ( value == Values.NO_VALUE )\n-                {\n-                    throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n-                }\n-                return value.asObjectCopy();\n-            }\n-        }\n-        throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n-    }\n-\n-    @Override\n-    public Object getProperty( String key, Object defaultValue )\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (AutoIndexingKernelException e)\n     {\n-        if ( null == key )\n-        {\n-            throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n-        }\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n-        PropertyCursor properties = transaction.ambientPropertyCursor();\n-        int propertyKey = transaction.tokenRead().propertyKey( key );\n-        if ( propertyKey == TokenRead.NO_TOKEN )\n-        {\n-            return defaultValue;\n-        }\n-        singleRelationship( transaction, relationships );\n-        relationships.properties( properties );\n-        while ( properties.next() )\n-        {\n-            if ( propertyKey == properties.propertyKey() )\n-            {\n-                Value value = properties.propertyValue();\n-                return value == Values.NO_VALUE ? defaultValue : value.asObjectCopy();\n-            }\n-        }\n-        return defaultValue;\n+      throw new IllegalStateException(\"Auto indexing encountered a failure while setting property: \"\n+          + e.getMessage(), e);\n     }\n \n-    @Override\n-    public boolean hasProperty( String key )\n-    {\n-        if ( null == key )\n-        {\n-            return false;\n-        }\n-\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int propertyKey = transaction.tokenRead().propertyKey( key );\n-        if ( propertyKey == TokenRead.NO_TOKEN )\n-        {\n-            return false;\n-        }\n-\n-        RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n-        PropertyCursor properties = transaction.ambientPropertyCursor();\n-        singleRelationship( transaction, relationships );\n-        relationships.properties( properties );\n-        while ( properties.next() )\n-        {\n-            if ( propertyKey == properties.propertyKey() )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n+  }\n \n-    @Override\n-    public void setProperty( String key, Object value )\n+  @Override\n+  public Object removeProperty(String key)\n+  {\n+    KernelTransaction transaction = actions.kernelTransaction();\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = actions.kernelTransaction();\n-        int propertyKeyId;\n-        try\n-        {\n-            propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName( key );\n-        }\n-        catch ( IllegalTokenNameException e )\n-        {\n-            throw new IllegalArgumentException( format( \"Invalid property key '%s'.\", key ), e );\n-        }\n-\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            transaction.dataWrite().relationshipSetProperty( id, propertyKeyId, Values.of( value, false ) );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            // Trying to set an illegal value is a critical error - fail this transaction\n-            actions.failTransaction();\n-            throw e;\n-        }\n-        catch ( EntityNotFoundException e )\n-        {\n-            throw new NotFoundException( e );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( AutoIndexingKernelException e )\n-        {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while setting property: \"\n-                                             + e.getMessage(), e );\n-        }\n-\n-    }\n-\n-    @Override\n-    public Object removeProperty( String key )\n+      int propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName(key);\n+      return transaction.dataWrite().relationshipRemoveProperty(id, propertyKeyId).asObjectCopy();\n+    } catch (EntityNotFoundException e)\n     {\n-        KernelTransaction transaction = actions.kernelTransaction();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            int propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName( key );\n-            return transaction.dataWrite().relationshipRemoveProperty( id, propertyKeyId ).asObjectCopy();\n-        }\n-        catch ( EntityNotFoundException e )\n-        {\n-            throw new NotFoundException( e );\n-        }\n-        catch ( IllegalTokenNameException e )\n-        {\n-            throw new IllegalArgumentException( format( \"Invalid property key '%s'.\", key ), e );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( AutoIndexingKernelException e )\n-        {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while removing property: \"\n-                                             + e.getMessage(), e );\n-        }\n-    }\n-\n-    @Override\n-    public boolean isType( RelationshipType type )\n+      throw new NotFoundException(e);\n+    } catch (IllegalTokenNameException e)\n     {\n-        assertInUnterminatedTransaction();\n-        return actions.getRelationshipTypeById( typeId() ).name().equals( type.name() );\n-    }\n-\n-    public int compareTo( Object rel )\n+      throw new IllegalArgumentException(format(\"Invalid property key '%s'.\", key), e);\n+    } catch (InvalidTransactionTypeKernelException e)\n     {\n-        Relationship r = (Relationship) rel;\n-        return Long.compare( this.getId(), r.getId() );\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (AutoIndexingKernelException e)\n     {\n-        return o instanceof Relationship && this.getId() == ((Relationship) o).getId();\n+      throw new IllegalStateException(\"Auto indexing encountered a failure while removing property: \"\n+          + e.getMessage(), e);\n     }\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return (int) ((getId() >>> 32) ^ getId());\n-    }\n+  @Override\n+  public boolean isType(RelationshipType type)\n+  {\n+    assertInUnterminatedTransaction();\n+    return actions.getRelationshipTypeById(typeId()).name().equals(type.name());\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        String relType;\n-        try\n-        {\n-            relType = actions.getRelationshipTypeById( typeId() ).name();\n-            return format( \"(%d)-[%s,%d]->(%d)\", sourceId(), relType, getId(), targetId() );\n-        }\n-        catch ( NotInTransactionException | DatabaseShutdownException e )\n-        {\n-            // We don't keep the rel-name lookup if the database is shut down. Source ID and target ID also requires\n-            // database access in a transaction. However, failing on toString would be uncomfortably evil, so we fall\n-            // back to noting the relationship type id.\n-        }\n-        relType = \"RELTYPE(\" + type + \")\";\n-        return format( \"(?)-[%s,%d]->(?)\", relType, getId() );\n-    }\n+  public int compareTo(Object rel)\n+  {\n+    Relationship r = (Relationship) rel;\n+    return Long.compare(this.getId(), r.getId());\n+  }\n \n-    private KernelTransaction safeAcquireTransaction()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    return o instanceof Relationship && this.getId() == ((Relationship) o).getId();\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return (int) ((getId() >>> 32) ^ getId());\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    String relType;\n+    try\n     {\n-        KernelTransaction transaction = actions.kernelTransaction();\n-        if ( transaction.isTerminated() )\n-        {\n-            Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n-            throw new TransactionTerminatedException( terminationReason );\n-        }\n-        return transaction;\n+      relType = actions.getRelationshipTypeById(typeId()).name();\n+      return format(\"(%d)-[%s,%d]->(%d)\", sourceId(), relType, getId(), targetId());\n+    } catch (NotInTransactionException | DatabaseShutdownException e)\n+    {\n+      // We don't keep the rel-name lookup if the database is shut down. Source ID and target ID also requires\n+      // database access in a transaction. However, failing on toString would be uncomfortably evil, so we fall\n+      // back to noting the relationship type id.\n     }\n+    relType = \"RELTYPE(\" + type + \")\";\n+    return format(\"(?)-[%s,%d]->(?)\", relType, getId());\n+  }\n \n-    private void singleRelationship( KernelTransaction transaction, RelationshipScanCursor relationships )\n+  private KernelTransaction safeAcquireTransaction()\n+  {\n+    KernelTransaction transaction = actions.kernelTransaction();\n+    if (transaction.isTerminated())\n     {\n-        transaction.dataRead().singleRelationship( id, relationships );\n-        if ( !relationships.next() )\n-        {\n-            throw new NotFoundException( new EntityNotFoundException( EntityType.RELATIONSHIP, id ) );\n-        }\n+      Status terminationReason = transaction.getReasonIfTerminated().orElse(Status.Transaction.Terminated);\n+      throw new TransactionTerminatedException(terminationReason);\n     }\n+    return transaction;\n+  }\n \n-    private void assertInUnterminatedTransaction()\n+  private void singleRelationship(KernelTransaction transaction, RelationshipScanCursor relationships)\n+  {\n+    transaction.dataRead().singleRelationship(id, relationships);\n+    if (!relationships.next())\n     {\n-        actions.assertInUnterminatedTransaction();\n+      throw new NotFoundException(new EntityNotFoundException(EntityType.RELATIONSHIP, id));\n     }\n+  }\n+\n+  private void assertInUnterminatedTransaction()\n+  {\n+    actions.assertInUnterminatedTransaction();\n+  }\n \n }\n",
            "diff_size": 706
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "506",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2292/RelationshipProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2292/RelationshipProxy.java\nindex 47e341b5cbc..f31909151e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2292/RelationshipProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2292/RelationshipProxy.java\n@@ -65,7 +65,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n     public RelationshipProxy( EmbeddedProxySPI spi, long id, long startNode, int type, long endNode )\n     {\n         this.actions = spi;\n-        visit( id, type, startNode, endNode );\n+\n+visit( id, type, startNode, endNode );\n     }\n \n     public RelationshipProxy( EmbeddedProxySPI spi, long id )\n@@ -141,9 +142,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n             boolean deleted = transaction.dataWrite().relationshipDelete( id );\n             if ( !deleted )\n             {\n-                throw new NotFoundException( \"Unable to delete relationship[\" +\n-                                             getId() + \"] since it is already deleted.\" );\n-            }\n+                throw new NotFoundException( \"Unable to delete relationship[\" + getId() + \"] since it is already deleted.\" );\n+    }\n         }\n         catch ( InvalidTransactionTypeKernelException e )\n         {\n@@ -151,18 +151,15 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         }\n         catch ( AutoIndexingKernelException e )\n         {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while deleting the relationship: \"\n-                                             + e.getMessage(), e );\n-        }\n+            throw new IllegalStateException( \"Auto indexing encountered a failure while deleting the relationship: \" + e.getMessage(), e );\n+    }\n     }\n \n     @Override\n     public Node[] getNodes()\n     {\n         assertInUnterminatedTransaction();\n-        return new Node[]{\n-                actions.newNodeProxy( sourceId() ),\n-                actions.newNodeProxy( targetId() )};\n+        return new Node[]{actions.newNodeProxy( sourceId() ), actions.newNodeProxy( targetId() )};\n     }\n \n     @Override\n@@ -207,7 +204,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         {\n             return end;\n         }\n-        if ( end == id )\n+\n+if ( end == id )\n         {\n             return start;\n         }\n@@ -242,15 +240,15 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         {\n             throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n         }\n-        return keys;\n+\n+return keys;\n     }\n \n     @Override\n-    public Map<String, Object> getProperties( String... keys )\n+    public Map<String,Object> getProperties( String... keys )\n     {\n         Objects.requireNonNull( keys, \"Properties keys should be not null array.\" );\n-\n-        if ( keys.length == 0 )\n+if ( keys.length == 0 )\n         {\n             return Collections.emptyMap();\n         }\n@@ -271,7 +269,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n             {\n                 throw new NullPointerException( String.format( \"Key %d was null\", i ) );\n             }\n-            propertyIds[i] = token.propertyKey( key );\n+\n+propertyIds[i] = token.propertyKey( key );\n         }\n \n         RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n@@ -289,7 +288,7 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n                 {\n                     properties.put( keys[i],\n                             propertyCursor.propertyValue().asObjectCopy() );\n-                    propertiesToFind--;\n+propertiesToFind--;\n                     break;\n                 }\n             }\n@@ -298,7 +297,7 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n     }\n \n     @Override\n-    public Map<String, Object> getAllProperties()\n+    public Map<String,Object> getAllProperties()\n     {\n         KernelTransaction transaction = safeAcquireTransaction();\n         Map<String,Object> properties = new HashMap<>();\n@@ -312,15 +311,15 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n             relationships.properties( propertyCursor );\n             while ( propertyCursor.next() )\n             {\n-                properties.put( token.propertyKeyName( propertyCursor.propertyKey() ),\n-                        propertyCursor.propertyValue().asObjectCopy() );\n-            }\n+                properties.put( token.propertyKeyName( propertyCursor.propertyKey() ), propertyCursor.propertyValue().asObjectCopy() );\n+    }\n         }\n         catch ( PropertyKeyIdNotFoundKernelException e )\n         {\n             throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n         }\n-        return properties;\n+\n+return properties;\n     }\n \n     @Override\n@@ -330,7 +329,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         {\n             throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n         }\n-        KernelTransaction transaction = safeAcquireTransaction();\n+\n+KernelTransaction transaction = safeAcquireTransaction();\n         int propertyKey = transaction.tokenRead().propertyKey( key );\n         if ( propertyKey == TokenRead.NO_TOKEN )\n         {\n@@ -350,7 +350,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n                 {\n                     throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n                 }\n-                return value.asObjectCopy();\n+\n+return value.asObjectCopy();\n             }\n         }\n         throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n@@ -363,7 +364,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         {\n             throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n         }\n-        KernelTransaction transaction = safeAcquireTransaction();\n+\n+KernelTransaction transaction = safeAcquireTransaction();\n         RelationshipScanCursor relationships = transaction.ambientRelationshipCursor();\n         PropertyCursor properties = transaction.ambientPropertyCursor();\n         int propertyKey = transaction.tokenRead().propertyKey( key );\n@@ -371,7 +373,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         {\n             return defaultValue;\n         }\n-        singleRelationship( transaction, relationships );\n+\n+singleRelationship( transaction, relationships );\n         relationships.properties( properties );\n         while ( properties.next() )\n         {\n@@ -447,10 +450,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         }\n         catch ( AutoIndexingKernelException e )\n         {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while setting property: \"\n-                                             + e.getMessage(), e );\n-        }\n-\n+            throw new IllegalStateException( \"Auto indexing encountered a failure while setting property: \" + e.getMessage(), e );\n+    }\n     }\n \n     @Override\n@@ -476,9 +477,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n         }\n         catch ( AutoIndexingKernelException e )\n         {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while removing property: \"\n-                                             + e.getMessage(), e );\n-        }\n+            throw new IllegalStateException( \"Auto indexing encountered a failure while removing property: \" + e.getMessage(), e );\n+    }\n     }\n \n     @Override\n@@ -503,7 +503,7 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n     @Override\n     public int hashCode()\n     {\n-        return (int) ((getId() >>> 32) ^ getId());\n+        return ( int) ((getId() >>> 32) ^ getId() );\n     }\n \n     @Override\n@@ -533,7 +533,8 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n             Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n             throw new TransactionTerminatedException( terminationReason );\n         }\n-        return transaction;\n+\n+return transaction;\n     }\n \n     private void singleRelationship( KernelTransaction transaction, RelationshipScanCursor relationships )\n@@ -549,5 +550,4 @@ public class RelationshipProxy implements Relationship, RelationshipVisitor<Runt\n     {\n         actions.assertInUnterminatedTransaction();\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "94",
    "information": {
        "errors": [
            {
                "line": "302",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        } else if (request instanceof OpenConnectionRequest) {\n            request.observable().onNext(new OpenConnectionResponse(\n                    new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n            request.observable().onCompleted();\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "304",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/94/CouchbaseCore.java\nindex 8006280bb2e..3421c3f9cef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/94/CouchbaseCore.java\n@@ -299,8 +299,9 @@ public class CouchbaseCore implements ClusterFacade {\n             request.observable().onCompleted();\n         } else if (request instanceof OpenConnectionRequest) {\n             request.observable().onNext(new OpenConnectionResponse(\n-                    new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n-            request.observable().onCompleted();\n+                new DCPConnection(environment, this, request.bucket() ,request. password( )) ,\n+                ResponseStatus.SUCCESS));\n+             request.observable().onCompleted();\n         }\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "283",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 16, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "285",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 20, expected level should be one of the following: 24, 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "286",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 20, expected level should be one of the following: 24, 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "287",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 20, expected level should be one of the following: 24, 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "288",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 20, expected level should be one of the following: 24, 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "289",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 16, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "290",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 12, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/94/CouchbaseCore.java\nindex 8006280bb2e..fd9d232cc33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/94/CouchbaseCore.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.core;\n \n import com.couchbase.client.core.config.ClusterConfig;\n@@ -279,14 +280,14 @@ public class CouchbaseCore implements ClusterFacade {\n                         return sharedEnvironment ? Observable.just(true) : environment.shutdownAsync();\n                     }\n                 }).map(new Func1<Boolean, Boolean>() {\n-                    @Override\n-                    public Boolean call(Boolean success) {\n-                        requestDisruptor.shutdown();\n-                        responseDisruptor.shutdown();\n-                        disruptorExecutor.shutdownNow();\n-                        return success;\n-                    }\n-                })\n+                @Override\n+                public Boolean call(Boolean success) {\n+                    requestDisruptor.shutdown();\n+                    responseDisruptor.shutdown();\n+                    disruptorExecutor.shutdownNow();\n+                    return success;\n+                }\n+            })\n                 .map(new Func1<Boolean, DisconnectResponse>() {\n                     @Override\n                     public DisconnectResponse call(Boolean success) {\n@@ -299,7 +300,7 @@ public class CouchbaseCore implements ClusterFacade {\n             request.observable().onCompleted();\n         } else if (request instanceof OpenConnectionRequest) {\n             request.observable().onNext(new OpenConnectionResponse(\n-                    new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n+                new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n             request.observable().onCompleted();\n         }\n     }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "295",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/94/CouchbaseCore.java\nindex 8006280bb2e..638fb86ca4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/94/CouchbaseCore.java\n@@ -87,15 +87,14 @@ public class CouchbaseCore implements ClusterFacade {\n     /**\n      * Translates {@link CouchbaseRequest}s into {@link RequestEvent}s.\n      */\n-    private static final EventTranslatorOneArg<RequestEvent, CouchbaseRequest> REQUEST_TRANSLATOR =\n-        new EventTranslatorOneArg<RequestEvent, CouchbaseRequest>() {\n+    private static final EventTranslatorOneArg<RequestEvent, CouchbaseRequest> REQUEST_TRANSLATOR = new EventTranslatorOneArg<RequestEvent, CouchbaseRequest>() {\n             @Override\n             public void translateTo(RequestEvent event, long sequence, CouchbaseRequest request) {\n                 event.setRequest(request);\n             }\n         };\n \n-    /**\n+/**\n      * A preconstructed {@link BackpressureException}.\n      */\n     private static final BackpressureException BACKPRESSURE_EXCEPTION = new BackpressureException();\n@@ -144,16 +143,13 @@ public class CouchbaseCore implements ClusterFacade {\n     public CouchbaseCore(final CoreEnvironment environment) {\n         LOGGER.info(environment.toString());\n         LOGGER.debug(Diagnostics.collectAndFormat());\n-\n-        this.environment = environment;\n+this.environment = environment;\n         configProvider = new DefaultConfigurationProvider(this, environment);\n         disruptorExecutor = Executors.newFixedThreadPool(2, new DefaultThreadFactory(\"cb-core\", true));\n \n         responseDisruptor = new Disruptor<ResponseEvent>(\n-            new ResponseEventFactory(),\n-            environment.responseBufferSize(),\n-            disruptorExecutor\n-        );\n+            new ResponseEventFactory(), environment.responseBufferSize(),\n+            disruptorExecutor);\n         responseDisruptor.handleExceptionsWith(new ExceptionHandler<ResponseEvent>() {\n             @Override\n             public void handleEventException(Throwable ex, long sequence, ResponseEvent event) {\n@@ -175,12 +171,9 @@ public class CouchbaseCore implements ClusterFacade {\n         RingBuffer<ResponseEvent> responseRingBuffer = responseDisruptor.getRingBuffer();\n \n         requestDisruptor = new Disruptor<RequestEvent>(\n-            new RequestEventFactory(),\n-            environment.requestBufferSize(),\n+            new RequestEventFactory(), environment.requestBufferSize(),\n             disruptorExecutor,\n-            ProducerType.MULTI,\n-            environment.requestBufferWaitStrategy()\n-        );\n+            ProducerType.MULTI, environment.requestBufferWaitStrategy());\n         requestHandler = new RequestHandler(environment, configProvider.configs(), responseRingBuffer);\n         requestDisruptor.handleExceptionsWith(new ExceptionHandler<RequestEvent>() {\n             @Override\n@@ -298,9 +291,8 @@ public class CouchbaseCore implements ClusterFacade {\n             request.observable().onNext(new GetClusterConfigResponse(configProvider.config(), ResponseStatus.SUCCESS));\n             request.observable().onCompleted();\n         } else if (request instanceof OpenConnectionRequest) {\n-            request.observable().onNext(new OpenConnectionResponse(\n-                    new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n-            request.observable().onCompleted();\n+            request.observable().onNext(new OpenConnectionResponse(new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n+request.observable().onCompleted();\n         }\n     }\n \n@@ -362,4 +354,4 @@ public class CouchbaseCore implements ClusterFacade {\n                 .onError(new IllegalArgumentException(\"Unknown request \" + request));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 83, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 87, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 83, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 79, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "210",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "212",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "232",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 79, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "234",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 83, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 79, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 75, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 81, expected level should be one of the following: 79, 83.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 85, expected level should be one of the following: 83, 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "240",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 89, expected level should be one of the following: 87, 91.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "241",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 85, expected level should be one of the following: 83, 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 85, expected level should be one of the following: 83, 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "243",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 81, expected level should be one of the following: 79, 83.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 77, expected level should be one of the following: 75, 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "247",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 67, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "249",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be one of the following: 27, 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 67, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "251",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 63, expected level should be one of the following: 19, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 69, expected level should be one of the following: 67, 71.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "253",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "254",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 73, expected level should be one of the following: 71, 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "254",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "255",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 75, 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "255",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 73, expected level should be one of the following: 71, 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 73, expected level should be one of the following: 71, 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "258",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be one of the following: 67, 71.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 65, expected level should be one of the following: 63, 67.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "260",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 52, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 56, expected level should be one of the following: 27, 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "265",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 52, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 48, expected level should be one of the following: 19, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "267",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 54, expected level should be one of the following: 52, 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 58, expected level should be one of the following: 56, 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "270",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 58, expected level should be one of the following: 56, 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "271",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 58, expected level should be one of the following: 56, 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "272",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 58, expected level should be one of the following: 56, 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "273",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 54, expected level should be one of the following: 52, 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "274",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 50, expected level should be one of the following: 48, 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "275",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 56, expected level should be one of the following: 54, 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "277",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 60, expected level should be one of the following: 58, 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "278",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 56, expected level should be one of the following: 54, 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 52, expected level should be one of the following: 50, 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "280",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "282",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "283",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "285",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "286",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "303",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "304",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 77, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "305",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "306",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 81, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "306",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "307",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 77, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "308",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 73, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "310",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "310",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "311",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 90, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "312",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "313",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 94, expected level should be one of the following: 27, 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "313",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "314",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 90, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 86, expected level should be one of the following: 19, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "316",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "317",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "318",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 77, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "319",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "320",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 81, expected level should be one of the following: 27, 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "320",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "321",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 77, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "322",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 73, expected level should be one of the following: 19, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "323",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "324",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "324",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "325",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 90, expected level should be one of the following: 30, 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "326",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "327",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 94, expected level should be one of the following: 34, 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "327",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "328",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 90, expected level should be one of the following: 30, 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "329",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 86, expected level should be one of the following: 26, 30.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "329",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "330",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "331",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "332",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/94/CouchbaseCore.java\nindex 8006280bb2e..8d83b6e05c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/94/CouchbaseCore.java\n@@ -67,7 +67,6 @@ import com.lmax.disruptor.dsl.ProducerType;\n import io.netty.util.concurrent.DefaultThreadFactory;\n import rx.Observable;\n import rx.functions.Func1;\n-\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n \n@@ -77,23 +76,24 @@ import java.util.concurrent.Executors;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n public class CouchbaseCore implements ClusterFacade {\n \n     /**\n      * The logger used.\n      */\n+\n     private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(CouchbaseCore.class);\n \n     /**\n      * Translates {@link CouchbaseRequest}s into {@link RequestEvent}s.\n      */\n-    private static final EventTranslatorOneArg<RequestEvent, CouchbaseRequest> REQUEST_TRANSLATOR =\n-        new EventTranslatorOneArg<RequestEvent, CouchbaseRequest>() {\n-            @Override\n-            public void translateTo(RequestEvent event, long sequence, CouchbaseRequest request) {\n-                event.setRequest(request);\n-            }\n-        };\n+    private static final EventTranslatorOneArg<RequestEvent, CouchbaseRequest> REQUEST_TRANSLATOR = new EventTranslatorOneArg<RequestEvent, CouchbaseRequest>() {\n+                                                                                   @Override\n+                                                                                   public void translateTo(RequestEvent event, long sequence, CouchbaseRequest request) {\n+                                                                                       event.setRequest(request);\n+                                                                                   }\n+                                                                               };\n \n     /**\n      * A preconstructed {@link BackpressureException}.\n@@ -114,18 +114,17 @@ public class CouchbaseCore implements ClusterFacade {\n      * The configuration provider in use.\n      */\n     private final ConfigurationProvider configProvider;\n-\n     private final CoreEnvironment environment;\n-\n     private final Disruptor<RequestEvent> requestDisruptor;\n     private final Disruptor<ResponseEvent> responseDisruptor;\n     private final ExecutorService disruptorExecutor;\n-\n     private volatile boolean sharedEnvironment = true;\n \n     /**\n      * Populate the static exceptions with stack trace elements.\n      */\n+\n+\n     static {\n         BACKPRESSURE_EXCEPTION.setStackTrace(new StackTraceElement[0]);\n     }\n@@ -133,6 +132,7 @@ public class CouchbaseCore implements ClusterFacade {\n     /**\n      * Creates a new {@link CouchbaseCore}.\n      */\n+\n     public CouchbaseCore() {\n         this(DefaultCoreEnvironment.create());\n         sharedEnvironment = false;\n@@ -141,46 +141,38 @@ public class CouchbaseCore implements ClusterFacade {\n     /**\n      * Creates a new {@link CouchbaseCore}.\n      */\n+\n     public CouchbaseCore(final CoreEnvironment environment) {\n         LOGGER.info(environment.toString());\n         LOGGER.debug(Diagnostics.collectAndFormat());\n-\n         this.environment = environment;\n         configProvider = new DefaultConfigurationProvider(this, environment);\n         disruptorExecutor = Executors.newFixedThreadPool(2, new DefaultThreadFactory(\"cb-core\", true));\n-\n-        responseDisruptor = new Disruptor<ResponseEvent>(\n-            new ResponseEventFactory(),\n-            environment.responseBufferSize(),\n-            disruptorExecutor\n-        );\n+        responseDisruptor = new Disruptor<ResponseEvent>(new ResponseEventFactory(), environment.responseBufferSize(), disruptorExecutor);\n         responseDisruptor.handleExceptionsWith(new ExceptionHandler<ResponseEvent>() {\n             @Override\n             public void handleEventException(Throwable ex, long sequence, ResponseEvent event) {\n                 LOGGER.warn(\"Exception while Handling Response Events {}\", event, ex);\n             }\n \n+\n             @Override\n             public void handleOnStartException(Throwable ex) {\n                 LOGGER.warn(\"Exception while Starting Response RingBuffer\", ex);\n             }\n \n+\n             @Override\n             public void handleOnShutdownException(Throwable ex) {\n                 LOGGER.info(\"Exception while shutting down Response RingBuffer\", ex);\n             }\n-        });\n-        responseDisruptor.handleEventsWith(new ResponseHandler(environment, this, configProvider));\n+            });\n+        responseDisruptor.handleEventsWith(new ResponseHandler(environment,\n+            this,\n+            configProvider));\n         responseDisruptor.start();\n         RingBuffer<ResponseEvent> responseRingBuffer = responseDisruptor.getRingBuffer();\n-\n-        requestDisruptor = new Disruptor<RequestEvent>(\n-            new RequestEventFactory(),\n-            environment.requestBufferSize(),\n-            disruptorExecutor,\n-            ProducerType.MULTI,\n-            environment.requestBufferWaitStrategy()\n-        );\n+        requestDisruptor = new Disruptor<RequestEvent>(new RequestEventFactory(), environment.requestBufferSize(), disruptorExecutor, ProducerType.MULTI, environment.requestBufferWaitStrategy());\n         requestHandler = new RequestHandler(environment, configProvider.configs(), responseRingBuffer);\n         requestDisruptor.handleExceptionsWith(new ExceptionHandler<RequestEvent>() {\n             @Override\n@@ -188,16 +180,18 @@ public class CouchbaseCore implements ClusterFacade {\n                 LOGGER.warn(\"Exception while Handling Request Events {}\", event, ex);\n             }\n \n+\n             @Override\n             public void handleOnStartException(Throwable ex) {\n                 LOGGER.warn(\"Exception while Starting Request RingBuffer\", ex);\n             }\n \n+\n             @Override\n             public void handleOnShutdownException(Throwable ex) {\n                 LOGGER.info(\"Exception while shutting down Request RingBuffer\", ex);\n             }\n-        });\n+            });\n         requestDisruptor.handleEventsWith(requestHandler);\n         requestDisruptor.start();\n         requestRingBuffer = requestDisruptor.getRingBuffer();\n@@ -213,11 +207,11 @@ public class CouchbaseCore implements ClusterFacade {\n             handleClusterRequest(request);\n             return (Observable<R>) request.observable().observeOn(environment.scheduler());\n         } else {\n-            boolean published = requestRingBuffer.tryPublishEvent(REQUEST_TRANSLATOR, request);\n-            if (!published) {\n-                request.observable().onError(BACKPRESSURE_EXCEPTION);\n-            }\n-            return (Observable<R>) request.observable();\n+                   boolean published = requestRingBuffer.tryPublishEvent(REQUEST_TRANSLATOR, request);\n+                   if (!published) {\n+                       request.observable().onError(BACKPRESSURE_EXCEPTION);\n+                   }\n+                   return (Observable<R>) request.observable();\n         }\n     }\n \n@@ -226,6 +220,7 @@ public class CouchbaseCore implements ClusterFacade {\n      *\n      * @param request the request to dispatch.\n      */\n+\n     private void handleClusterRequest(final CouchbaseRequest request) {\n         if (request instanceof SeedNodesRequest) {\n             boolean success = configProvider.seedHosts(((SeedNodesRequest) request).nodes(), true);\n@@ -233,75 +228,62 @@ public class CouchbaseCore implements ClusterFacade {\n             request.observable().onNext(new SeedNodesResponse(status));\n             request.observable().onCompleted();\n         } else if (request instanceof OpenBucketRequest) {\n-            configProvider\n-                .openBucket(request.bucket(), request.password())\n-                .flatMap(new Func1<ClusterConfig, Observable<ClusterConfig>>() {\n-                    @Override\n-                    public Observable<ClusterConfig> call(ClusterConfig clusterConfig) {\n-                        return requestHandler.reconfigure(clusterConfig);\n-                    }\n-                })\n-                .map(new Func1<ClusterConfig, OpenBucketResponse>() {\n-                    @Override\n-                    public OpenBucketResponse call(final ClusterConfig clusterConfig) {\n-                        if (clusterConfig.hasBucket(request.bucket())) {\n-                            return new OpenBucketResponse(ResponseStatus.SUCCESS);\n-                        }\n-                        throw new CouchbaseException(\"Could not open bucket.\");\n-                    }\n-                })\n-                .subscribe(request.observable());\n+            configProvider.openBucket(request.bucket(), request.password()).flatMap(new Func1<ClusterConfig, Observable<ClusterConfig>>() {\n+                                                                               @Override\n+                                                                               public Observable<ClusterConfig> call(ClusterConfig clusterConfig) {\n+                                                                                   return requestHandler.reconfigure(clusterConfig);\n+                                                                               }\n+                                                                           }).map(new Func1<ClusterConfig, OpenBucketResponse>() {\n+                                                                                 @Override\n+                                                                                 public OpenBucketResponse call(final ClusterConfig clusterConfig) {\n+                                                                                     if (clusterConfig.hasBucket(request.bucket())) {\n+                                                                                         return new OpenBucketResponse(ResponseStatus.SUCCESS);\n+                                                                                     }\n+                                                                                     throw new CouchbaseException(\"Could not open bucket.\");\n+                                                                                 }\n+                                                                             }).subscribe(request.observable());\n         } else if (request instanceof CloseBucketRequest) {\n-            configProvider\n-                .closeBucket(request.bucket())\n-                .flatMap(new Func1<ClusterConfig, Observable<ClusterConfig>>() {\n-                    @Override\n-                    public Observable<ClusterConfig> call(ClusterConfig clusterConfig) {\n-                        return requestHandler.reconfigure(clusterConfig);\n-                    }\n-                })\n-                .map(new Func1<ClusterConfig, CloseBucketResponse>() {\n-                    @Override\n-                    public CloseBucketResponse call(ClusterConfig clusterConfig) {\n-                        if (!clusterConfig.hasBucket(request.bucket())) {\n-                            return new CloseBucketResponse(ResponseStatus.SUCCESS);\n-                        }\n-                        throw new CouchbaseException(\"Could not close bucket.\");\n-                    }\n-                })\n-                .subscribe(request.observable());\n-        } else if (request instanceof DisconnectRequest) {\n-            configProvider\n-                .closeBuckets()\n-                .flatMap(new Func1<Boolean, Observable<Boolean>>() {\n-                    @Override\n-                    public Observable<Boolean> call(Boolean done) {\n-                        return sharedEnvironment ? Observable.just(true) : environment.shutdownAsync();\n-                    }\n-                }).map(new Func1<Boolean, Boolean>() {\n-                    @Override\n-                    public Boolean call(Boolean success) {\n-                        requestDisruptor.shutdown();\n-                        responseDisruptor.shutdown();\n-                        disruptorExecutor.shutdownNow();\n-                        return success;\n-                    }\n-                })\n-                .map(new Func1<Boolean, DisconnectResponse>() {\n-                    @Override\n-                    public DisconnectResponse call(Boolean success) {\n-                        return new DisconnectResponse(ResponseStatus.SUCCESS);\n-                    }\n-                })\n-                .subscribe(request.observable());\n-        } else if (request instanceof GetClusterConfigRequest) {\n-            request.observable().onNext(new GetClusterConfigResponse(configProvider.config(), ResponseStatus.SUCCESS));\n-            request.observable().onCompleted();\n-        } else if (request instanceof OpenConnectionRequest) {\n-            request.observable().onNext(new OpenConnectionResponse(\n-                    new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n-            request.observable().onCompleted();\n-        }\n+                   configProvider.closeBucket(request.bucket()).flatMap(new Func1<ClusterConfig, Observable<ClusterConfig>>() {\n+                                                                   @Override\n+                                                                   public Observable<ClusterConfig> call(ClusterConfig clusterConfig) {\n+                                                                       return requestHandler.reconfigure(clusterConfig);\n+                                                                   }\n+                                                               }).map(new Func1<ClusterConfig, CloseBucketResponse>() {\n+                                                                     @Override\n+                                                                     public CloseBucketResponse call(ClusterConfig clusterConfig) {\n+                                                                         if (!clusterConfig.hasBucket(request.bucket())) {\n+                                                                             return new CloseBucketResponse(ResponseStatus.SUCCESS);\n+                                                                         }\n+                                                                         throw new CouchbaseException(\"Could not close bucket.\");\n+                                                                     }\n+                                                                 }).subscribe(request.observable());\n+               } else if (request instanceof DisconnectRequest) {\n+                   configProvider.closeBuckets().flatMap(new Func1<Boolean, Observable<Boolean>>() {\n+                                                    @Override\n+                                                    public Observable<Boolean> call(Boolean done) {\n+                                                        return sharedEnvironment ? Observable.just(true) : environment.shutdownAsync();\n+                                                    }\n+                                                }).map(new Func1<Boolean, Boolean>() {\n+                                                      @Override\n+                                                      public Boolean call(Boolean success) {\n+                                                          requestDisruptor.shutdown();\n+                                                          responseDisruptor.shutdown();\n+                                                          disruptorExecutor.shutdownNow();\n+                                                          return success;\n+                                                      }\n+                                                  }).map(new Func1<Boolean, DisconnectResponse>() {\n+                                                        @Override\n+                                                        public DisconnectResponse call(Boolean success) {\n+                                                            return new DisconnectResponse(ResponseStatus.SUCCESS);\n+                                                        }\n+                                                    }).subscribe(request.observable());\n+               } else if (request instanceof GetClusterConfigRequest) {\n+                          request.observable().onNext(new GetClusterConfigResponse(configProvider.config(), ResponseStatus.SUCCESS));\n+                          request.observable().onCompleted();\n+                      } else if (request instanceof OpenConnectionRequest) {\n+                                 request.observable().onNext(new OpenConnectionResponse(new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n+                                 request.observable().onCompleted();\n+                             }\n     }\n \n     /**\n@@ -312,54 +294,41 @@ public class CouchbaseCore implements ClusterFacade {\n      *\n      * @param request the request to dispatch.\n      */\n+\n     private void handleInternalRequest(final CouchbaseRequest request) {\n         if (request instanceof GetConfigProviderRequest) {\n             request.observable().onNext(new GetConfigProviderResponse(configProvider));\n             request.observable().onCompleted();\n         } else if (request instanceof AddNodeRequest) {\n-            requestHandler\n-                .addNode(((AddNodeRequest) request).hostname())\n-                .map(new Func1<LifecycleState, AddNodeResponse>() {\n-                    @Override\n-                    public AddNodeResponse call(LifecycleState state) {\n-                        return new AddNodeResponse(ResponseStatus.SUCCESS, ((AddNodeRequest) request).hostname());\n-                    }\n-                })\n-                .subscribe(request.observable());\n+            requestHandler.addNode(((AddNodeRequest) request).hostname()).map(new Func1<LifecycleState, AddNodeResponse>() {\n+                                                                             @Override\n+                                                                             public AddNodeResponse call(LifecycleState state) {\n+                                                                                 return new AddNodeResponse(ResponseStatus.SUCCESS, ((AddNodeRequest) request).hostname());\n+                                                                             }\n+                                                                         }).subscribe(request.observable());\n         } else if (request instanceof RemoveNodeRequest) {\n-            requestHandler\n-                .removeNode(((RemoveNodeRequest) request).hostname())\n-                .map(new Func1<LifecycleState, RemoveNodeResponse>() {\n-                    @Override\n-                    public RemoveNodeResponse call(LifecycleState state) {\n-                        return new RemoveNodeResponse(ResponseStatus.SUCCESS);\n-                    }\n-                })\n-                .subscribe(request.observable());\n-        } else if (request instanceof AddServiceRequest) {\n-            requestHandler\n-                .addService((AddServiceRequest) request)\n-                .map(new Func1<Service, AddServiceResponse>() {\n-                    @Override\n-                    public AddServiceResponse call(Service service) {\n-                        return new AddServiceResponse(ResponseStatus.SUCCESS, ((AddServiceRequest) request).hostname());\n-                    }\n-                })\n-                .subscribe(request.observable());\n-        } else if (request instanceof RemoveServiceRequest) {\n-            requestHandler\n-                .removeService((RemoveServiceRequest) request)\n-                .map(new Func1<Service, RemoveServiceResponse>() {\n-                    @Override\n-                    public RemoveServiceResponse call(Service service) {\n-                        return new RemoveServiceResponse(ResponseStatus.SUCCESS);\n-                    }\n-                })\n-                .subscribe(request.observable());\n-        } else {\n-            request\n-                .observable()\n-                .onError(new IllegalArgumentException(\"Unknown request \" + request));\n-        }\n+                   requestHandler.removeNode(((RemoveNodeRequest) request).hostname()).map(new Func1<LifecycleState, RemoveNodeResponse>() {\n+                                                                                          @Override\n+                                                                                          public RemoveNodeResponse call(LifecycleState state) {\n+                                                                                              return new RemoveNodeResponse(ResponseStatus.SUCCESS);\n+                                                                                          }\n+                                                                                      }).subscribe(request.observable());\n+               } else if (request instanceof AddServiceRequest) {\n+                   requestHandler.addService((AddServiceRequest) request).map(new Func1<Service, AddServiceResponse>() {\n+                                                                             @Override\n+                                                                             public AddServiceResponse call(Service service) {\n+                                                                                 return new AddServiceResponse(ResponseStatus.SUCCESS, ((AddServiceRequest) request).hostname());\n+                                                                             }\n+                                                                         }).subscribe(request.observable());\n+               } else if (request instanceof RemoveServiceRequest) {\n+                          requestHandler.removeService((RemoveServiceRequest) request).map(new Func1<Service, RemoveServiceResponse>() {\n+                                                                                          @Override\n+                                                                                          public RemoveServiceResponse call(Service service) {\n+                                                                                              return new RemoveServiceResponse(ResponseStatus.SUCCESS);\n+                                                                                          }\n+                                                                                      }).subscribe(request.observable());\n+                      } else {\n+                          request.observable().onError(new IllegalArgumentException(\"Unknown request \" + request));\n+                      }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 160
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "302",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "302",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/94/CouchbaseCore.java\nindex 8006280bb2e..68f7740d5b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/94/CouchbaseCore.java\n@@ -299,8 +299,8 @@ public class CouchbaseCore implements ClusterFacade {\n             request.observable().onCompleted();\n         } else if (request instanceof OpenConnectionRequest) {\n             request.observable().onNext(new OpenConnectionResponse(\n-                    new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n-            request.observable().onCompleted();\n+                new DCPConnection(environment, this, request.bucket() ,request.password()),ResponseStatus.SUCCESS));request\n+        .observable().onCompleted();\n         }\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "304",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/94/CouchbaseCore.java\nindex 8006280bb2e..3421c3f9cef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/94/CouchbaseCore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/94/CouchbaseCore.java\n@@ -299,8 +299,9 @@ public class CouchbaseCore implements ClusterFacade {\n             request.observable().onCompleted();\n         } else if (request instanceof OpenConnectionRequest) {\n             request.observable().onNext(new OpenConnectionResponse(\n-                    new DCPConnection(environment, this, request.bucket(), request.password()), ResponseStatus.SUCCESS));\n-            request.observable().onCompleted();\n+                new DCPConnection(environment, this, request.bucket() ,request. password( )) ,\n+                ResponseStatus.SUCCESS));\n+             request.observable().onCompleted();\n         }\n     }\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2973",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "63",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2973/IdleChannelReaper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2973/IdleChannelReaper.java\nindex 7c9e58b578b..b4bd4dcf907 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2973/IdleChannelReaper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2973/IdleChannelReaper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n import org.jboss.netty.channel.Channel;\n@@ -37,87 +38,85 @@ import org.neo4j.logging.LogProvider;\n  */\n public class IdleChannelReaper implements Runnable\n {\n-    private final Map<Channel,Request> connectedChannels = new HashMap<>();\n-    private Clock clock;\n-    private final Log msgLog;\n-    private ChannelCloser channelCloser;\n-    private long thresholdMillis;\n+  private final Map<Channel, Request> connectedChannels = new HashMap<>();\n+  private Clock clock;\n+  private final Log msgLog;\n+  private ChannelCloser channelCloser;\n+  private long thresholdMillis;\n \n-    public IdleChannelReaper( ChannelCloser channelCloser, LogProvider logProvider, Clock clock, long thresholdMillis )\n-    {\n-        this.channelCloser = channelCloser;\n-        this.clock = clock;\n-        this.thresholdMillis = thresholdMillis;\n-        msgLog = logProvider.getLog( getClass() );\n-    }\n+  public IdleChannelReaper(ChannelCloser channelCloser, LogProvider logProvider, Clock clock, long thresholdMillis)\n+  {\n+    this.channelCloser = channelCloser;\n+    this.clock = clock;\n+    this.thresholdMillis = thresholdMillis;\n+    msgLog = logProvider.getLog(getClass());\n+  }\n \n-    public synchronized void add( Channel channel, RequestContext requestContext )\n+  public synchronized void add(Channel channel, RequestContext requestContext)\n+  {\n+    Request previous = connectedChannels.get(channel);\n+    if (previous != null)\n     {\n-        Request previous = connectedChannels.get( channel );\n-        if ( previous != null )\n-        {\n-            previous.lastTimeHeardOf = clock.millis();\n-        }\n-        else\n-        {\n-            connectedChannels.put( channel, new Request( requestContext, clock.millis() ) );\n-        }\n-    }\n-\n-    public synchronized Request remove( Channel channel )\n+      previous.lastTimeHeardOf = clock.millis();\n+    } else\n     {\n-        return connectedChannels.remove( channel );\n+      connectedChannels.put(channel, new Request(requestContext, clock.millis()));\n     }\n+  }\n \n-    public synchronized boolean update( Channel channel )\n-    {\n-        Request request = connectedChannels.get( channel );\n-        if ( request == null )\n-        {\n-            return false;\n-        }\n+  public synchronized Request remove(Channel channel)\n+  {\n+    return connectedChannels.remove(channel);\n+  }\n \n-        request.lastTimeHeardOf = clock.millis();\n-        return true;\n+  public synchronized boolean update(Channel channel)\n+  {\n+    Request request = connectedChannels.get(channel);\n+    if (request == null)\n+    {\n+      return false;\n     }\n \n-    @Override\n-    public synchronized void run()\n+    request.lastTimeHeardOf = clock.millis();\n+    return true;\n+  }\n+\n+  @Override\n+  public synchronized void run()\n+  {\n+    for (Map.Entry<Channel, Request> entry : connectedChannels.entrySet())\n     {\n-        for ( Map.Entry<Channel,Request> entry : connectedChannels.entrySet() )\n+      Channel channel = entry.getKey();\n+      long age = clock.millis() - entry.getValue().lastTimeHeardOf;\n+      if (age > thresholdMillis)\n+      {\n+        msgLog.info(\"Found a silent channel \" + entry + \", \" + age);\n+        channelCloser.tryToCloseChannel(channel);\n+      } else if (age > thresholdMillis / 2)\n+      {\n+        if (!(channel.isOpen() && channel.isConnected() && channel.isBound()))\n         {\n-            Channel channel = entry.getKey();\n-            long age = clock.millis() - entry.getValue().lastTimeHeardOf;\n-            if ( age > thresholdMillis )\n-            {\n-                msgLog.info( \"Found a silent channel \" + entry + \", \" + age );\n-                channelCloser.tryToCloseChannel( channel );\n-            }\n-            else if ( age > thresholdMillis / 2 )\n-            {\n-                if ( !(channel.isOpen() && channel.isConnected() && channel.isBound()) )\n-                {\n-                    channelCloser.tryToCloseChannel( channel );\n-                }\n-            }\n+          channelCloser.tryToCloseChannel(channel);\n         }\n+      }\n     }\n+  }\n \n-    public static class Request\n-    {\n-        private final RequestContext requestContext;\n+  public static class Request\n+  {\n+    private final RequestContext requestContext;\n \n-        private long lastTimeHeardOf;\n+    private long lastTimeHeardOf;\n \n-        public Request( RequestContext requestContext, long lastTimeHeardOf )\n-        {\n-            this.requestContext = requestContext;\n-            this.lastTimeHeardOf = lastTimeHeardOf;\n-        }\n+    public Request(RequestContext requestContext, long lastTimeHeardOf)\n+    {\n+      this.requestContext = requestContext;\n+      this.lastTimeHeardOf = lastTimeHeardOf;\n+    }\n \n-        public RequestContext getRequestContext()\n-        {\n-            return requestContext;\n-        }\n+    public RequestContext getRequestContext()\n+    {\n+      return requestContext;\n     }\n+  }\n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "91",
                    "column": "21",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "column": "26",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2973/IdleChannelReaper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2973/IdleChannelReaper.java\nindex 7c9e58b578b..bc6878e2f25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2973/IdleChannelReaper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2973/IdleChannelReaper.java\n@@ -88,12 +88,12 @@ public class IdleChannelReaper implements Runnable\n         {\n             Channel channel = entry.getKey();\n             long age = clock.millis() - entry.getValue().lastTimeHeardOf;\n-            if ( age > thresholdMillis )\n+            if ( age> thresholdMillis )\n             {\n                 msgLog.info( \"Found a silent channel \" + entry + \", \" + age );\n                 channelCloser.tryToCloseChannel( channel );\n             }\n-            else if ( age > thresholdMillis / 2 )\n+            else if ( age> thresholdMillis / 2 )\n             {\n                 if ( !(channel.isOpen() && channel.isConnected() && channel.isBound()) )\n                 {\n@@ -120,4 +120,4 @@ public class IdleChannelReaper implements Runnable\n             return requestContext;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
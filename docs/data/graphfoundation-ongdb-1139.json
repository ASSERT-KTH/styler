{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1139",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1139/TemporalIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1139/TemporalIndexProvider.java\nindex 49b0c3b04ac..b413227b57c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1139/TemporalIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1139/TemporalIndexProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -40,148 +41,146 @@ import org.neo4j.values.storable.ValueCategory;\n \n public class TemporalIndexProvider extends IndexProvider\n {\n-    public static final String KEY = \"temporal\";\n-    static final IndexCapability CAPABILITY = new TemporalIndexCapability();\n-    private static final Descriptor TEMPORAL_PROVIDER_DESCRIPTOR = new Descriptor( KEY, \"1.0\" );\n-\n-    private final PageCache pageCache;\n-    private final FileSystemAbstraction fs;\n-    private final Monitor monitor;\n-    private final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n-    private final boolean readOnly;\n-\n-    public TemporalIndexProvider( PageCache pageCache, FileSystemAbstraction fs,\n-                                  IndexDirectoryStructure.Factory directoryStructure, Monitor monitor,\n-                                  RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, boolean readOnly )\n+  public static final String KEY = \"temporal\";\n+  static final IndexCapability CAPABILITY = new TemporalIndexCapability();\n+  private static final Descriptor TEMPORAL_PROVIDER_DESCRIPTOR = new Descriptor(KEY, \"1.0\");\n+\n+  private final PageCache pageCache;\n+  private final FileSystemAbstraction fs;\n+  private final Monitor monitor;\n+  private final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n+  private final boolean readOnly;\n+\n+  public TemporalIndexProvider(PageCache pageCache, FileSystemAbstraction fs,\n+                               IndexDirectoryStructure.Factory directoryStructure, Monitor monitor,\n+                               RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, boolean readOnly)\n+  {\n+    super(TEMPORAL_PROVIDER_DESCRIPTOR, 0, directoryStructure);\n+    this.pageCache = pageCache;\n+    this.fs = fs;\n+    this.monitor = monitor;\n+    this.recoveryCleanupWorkCollector = recoveryCleanupWorkCollector;\n+    this.readOnly = readOnly;\n+  }\n+\n+  @Override\n+  public IndexPopulator getPopulator(long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig)\n+  {\n+    if (readOnly)\n     {\n-        super( TEMPORAL_PROVIDER_DESCRIPTOR, 0, directoryStructure );\n-        this.pageCache = pageCache;\n-        this.fs = fs;\n-        this.monitor = monitor;\n-        this.recoveryCleanupWorkCollector = recoveryCleanupWorkCollector;\n-        this.readOnly = readOnly;\n+      throw new UnsupportedOperationException(\"Can't create populator for read only index\");\n     }\n-\n-    @Override\n-    public IndexPopulator getPopulator( long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig )\n+    TemporalIndexFiles files = new TemporalIndexFiles(directoryStructure(), indexId, descriptor, fs);\n+    return new TemporalIndexPopulator(indexId, descriptor, samplingConfig, files, pageCache, fs, monitor);\n+  }\n+\n+  @Override\n+  public IndexAccessor getOnlineAccessor(long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig) throws IOException\n+  {\n+    TemporalIndexFiles files = new TemporalIndexFiles(directoryStructure(), indexId, descriptor, fs);\n+    return new TemporalIndexAccessor(indexId, descriptor, samplingConfig, pageCache, fs, recoveryCleanupWorkCollector, monitor, files);\n+  }\n+\n+  @Override\n+  public String getPopulationFailure(long indexId, SchemaIndexDescriptor descriptor) throws IllegalStateException\n+  {\n+    TemporalIndexFiles temporalIndexFiles = new TemporalIndexFiles(directoryStructure(), indexId, descriptor, fs);\n+\n+    try\n     {\n-        if ( readOnly )\n+      for (TemporalIndexFiles.FileLayout subIndex : temporalIndexFiles.existing())\n+      {\n+        String indexFailure = NativeSchemaIndexes.readFailureMessage(pageCache, subIndex.indexFile);\n+        if (indexFailure != null)\n         {\n-            throw new UnsupportedOperationException( \"Can't create populator for read only index\" );\n+          return indexFailure;\n         }\n-        TemporalIndexFiles files = new TemporalIndexFiles( directoryStructure(), indexId, descriptor, fs );\n-        return new TemporalIndexPopulator( indexId, descriptor, samplingConfig, files, pageCache, fs, monitor );\n-    }\n-\n-    @Override\n-    public IndexAccessor getOnlineAccessor( long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig ) throws IOException\n+      }\n+    } catch (IOException e)\n     {\n-        TemporalIndexFiles files = new TemporalIndexFiles( directoryStructure(), indexId, descriptor, fs );\n-        return new TemporalIndexAccessor( indexId, descriptor, samplingConfig, pageCache, fs, recoveryCleanupWorkCollector, monitor, files );\n+      throw new RuntimeException(e);\n     }\n+    throw new IllegalStateException(\"Index \" + indexId + \" isn't failed\");\n+  }\n \n-    @Override\n-    public String getPopulationFailure( long indexId, SchemaIndexDescriptor descriptor ) throws IllegalStateException\n-    {\n-        TemporalIndexFiles temporalIndexFiles = new TemporalIndexFiles( directoryStructure(), indexId, descriptor, fs );\n+  @Override\n+  public InternalIndexState getInitialState(long indexId, SchemaIndexDescriptor descriptor)\n+  {\n+    TemporalIndexFiles temporalIndexFiles = new TemporalIndexFiles(directoryStructure(), indexId, descriptor, fs);\n \n-        try\n-        {\n-            for ( TemporalIndexFiles.FileLayout subIndex : temporalIndexFiles.existing() )\n-            {\n-                String indexFailure = NativeSchemaIndexes.readFailureMessage( pageCache, subIndex.indexFile );\n-                if ( indexFailure != null )\n-                {\n-                    return indexFailure;\n-                }\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        throw new IllegalStateException( \"Index \" + indexId + \" isn't failed\" );\n-    }\n-\n-    @Override\n-    public InternalIndexState getInitialState( long indexId, SchemaIndexDescriptor descriptor )\n+    final Iterable<TemporalIndexFiles.FileLayout> existing = temporalIndexFiles.existing();\n+    InternalIndexState state = InternalIndexState.ONLINE;\n+    for (TemporalIndexFiles.FileLayout subIndex : existing)\n     {\n-        TemporalIndexFiles temporalIndexFiles = new TemporalIndexFiles( directoryStructure(), indexId, descriptor, fs );\n-\n-        final Iterable<TemporalIndexFiles.FileLayout> existing = temporalIndexFiles.existing();\n-        InternalIndexState state = InternalIndexState.ONLINE;\n-        for ( TemporalIndexFiles.FileLayout subIndex : existing )\n+      try\n+      {\n+        switch (NativeSchemaIndexes.readState(pageCache, subIndex.indexFile))\n         {\n-            try\n-            {\n-                switch ( NativeSchemaIndexes.readState( pageCache, subIndex.indexFile ) )\n-                {\n-                case FAILED:\n-                    return InternalIndexState.FAILED;\n-                case POPULATING:\n-                    state = InternalIndexState.POPULATING;\n-                default: // continue\n-                }\n-            }\n-            catch ( MetadataMismatchException | IOException e )\n-            {\n-                monitor.failedToOpenIndex( indexId, descriptor, \"Requesting re-population.\", e );\n-                return InternalIndexState.POPULATING;\n-            }\n+          case FAILED:\n+            return InternalIndexState.FAILED;\n+          case POPULATING:\n+            state = InternalIndexState.POPULATING;\n+          default: // continue\n         }\n-        return state;\n+      } catch (MetadataMismatchException | IOException e)\n+      {\n+        monitor.failedToOpenIndex(indexId, descriptor, \"Requesting re-population.\", e);\n+        return InternalIndexState.POPULATING;\n+      }\n     }\n-\n+    return state;\n+  }\n+\n+  @Override\n+  public IndexCapability getCapability(SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    return CAPABILITY;\n+  }\n+\n+  @Override\n+  public StoreMigrationParticipant storeMigrationParticipant(FileSystemAbstraction fs, PageCache pageCache)\n+  {\n+    // Since this native provider is a new one, there's no need for migration on this level.\n+    // Migration should happen in the combined layer for the time being.\n+    return StoreMigrationParticipant.NOT_PARTICIPATING;\n+  }\n+\n+  /**\n+   * For single property temporal queries capabilities are\n+   * Order: ASCENDING\n+   * Value: YES (can provide exact value)\n+   * <p>\n+   * For other queries there is no support\n+   */\n+  private static class TemporalIndexCapability implements IndexCapability\n+  {\n     @Override\n-    public IndexCapability getCapability( SchemaIndexDescriptor schemaIndexDescriptor )\n+    public IndexOrder[] orderCapability(ValueCategory... valueCategories)\n     {\n-        return CAPABILITY;\n+      if (support(valueCategories))\n+      {\n+        return ORDER_ASC;\n+      }\n+      return ORDER_NONE;\n     }\n \n     @Override\n-    public StoreMigrationParticipant storeMigrationParticipant( FileSystemAbstraction fs, PageCache pageCache )\n+    public IndexValueCapability valueCapability(ValueCategory... valueCategories)\n     {\n-        // Since this native provider is a new one, there's no need for migration on this level.\n-        // Migration should happen in the combined layer for the time being.\n-        return StoreMigrationParticipant.NOT_PARTICIPATING;\n+      if (support(valueCategories))\n+      {\n+        return IndexValueCapability.YES;\n+      }\n+      if (singleWildcard(valueCategories))\n+      {\n+        return IndexValueCapability.PARTIAL;\n+      }\n+      return IndexValueCapability.NO;\n     }\n \n-    /**\n-     * For single property temporal queries capabilities are\n-     * Order: ASCENDING\n-     * Value: YES (can provide exact value)\n-     *\n-     * For other queries there is no support\n-     */\n-    private static class TemporalIndexCapability implements IndexCapability\n+    private boolean support(ValueCategory[] valueCategories)\n     {\n-        @Override\n-        public IndexOrder[] orderCapability( ValueCategory... valueCategories )\n-        {\n-            if ( support( valueCategories ) )\n-            {\n-                return ORDER_ASC;\n-            }\n-            return ORDER_NONE;\n-        }\n-\n-        @Override\n-        public IndexValueCapability valueCapability( ValueCategory... valueCategories )\n-        {\n-            if ( support( valueCategories ) )\n-            {\n-                return IndexValueCapability.YES;\n-            }\n-            if ( singleWildcard( valueCategories ) )\n-            {\n-                return IndexValueCapability.PARTIAL;\n-            }\n-            return IndexValueCapability.NO;\n-        }\n-\n-        private boolean support( ValueCategory[] valueCategories )\n-        {\n-            return valueCategories.length == 1 && valueCategories[0] == ValueCategory.TEMPORAL;\n-        }\n+      return valueCategories.length == 1 && valueCategories[0] == ValueCategory.TEMPORAL;\n     }\n+  }\n }\n",
            "diff_size": 194
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1139/TemporalIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1139/TemporalIndexProvider.java\nindex 49b0c3b04ac..e138930d648 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1139/TemporalIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1139/TemporalIndexProvider.java\n@@ -50,10 +50,9 @@ public class TemporalIndexProvider extends IndexProvider\n     private final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n     private final boolean readOnly;\n \n-    public TemporalIndexProvider( PageCache pageCache, FileSystemAbstraction fs,\n-                                  IndexDirectoryStructure.Factory directoryStructure, Monitor monitor,\n+    public TemporalIndexProvider( PageCache pageCache, FileSystemAbstraction fs, IndexDirectoryStructure.Factory directoryStructure, Monitor monitor,\n                                   RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, boolean readOnly )\n-    {\n+{\n         super( TEMPORAL_PROVIDER_DESCRIPTOR, 0, directoryStructure );\n         this.pageCache = pageCache;\n         this.fs = fs;\n@@ -69,7 +68,8 @@ public class TemporalIndexProvider extends IndexProvider\n         {\n             throw new UnsupportedOperationException( \"Can't create populator for read only index\" );\n         }\n-        TemporalIndexFiles files = new TemporalIndexFiles( directoryStructure(), indexId, descriptor, fs );\n+\n+TemporalIndexFiles files = new TemporalIndexFiles( directoryStructure(), indexId, descriptor, fs );\n         return new TemporalIndexPopulator( indexId, descriptor, samplingConfig, files, pageCache, fs, monitor );\n     }\n \n@@ -162,7 +162,8 @@ public class TemporalIndexProvider extends IndexProvider\n             {\n                 return ORDER_ASC;\n             }\n-            return ORDER_NONE;\n+\n+return ORDER_NONE;\n         }\n \n         @Override\n@@ -172,11 +173,13 @@ public class TemporalIndexProvider extends IndexProvider\n             {\n                 return IndexValueCapability.YES;\n             }\n-            if ( singleWildcard( valueCategories ) )\n+\n+if ( singleWildcard( valueCategories ) )\n             {\n                 return IndexValueCapability.PARTIAL;\n             }\n-            return IndexValueCapability.NO;\n+\n+return IndexValueCapability.NO;\n         }\n \n         private boolean support( ValueCategory[] valueCategories )\n@@ -184,4 +187,4 @@ public class TemporalIndexProvider extends IndexProvider\n             return valueCategories.length == 1 && valueCategories[0] == ValueCategory.TEMPORAL;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
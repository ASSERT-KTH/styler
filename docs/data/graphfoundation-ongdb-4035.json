{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4035",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "column": "6",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4035/SelectedBackupProtocol.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4035/SelectedBackupProtocol.java\nindex 1d8468e7c07..573047ab493 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4035/SelectedBackupProtocol.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4035/SelectedBackupProtocol.java\n@@ -17,33 +17,34 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.util.stream.Stream;\n \n public enum SelectedBackupProtocol\n {\n-    ANY( \"any\" ),\n-    COMMON( \"common\" ),\n-    CATCHUP( \"catchup\" );\n+  ANY(\"any\"),\n+  COMMON(\"common\"),\n+  CATCHUP(\"catchup\");\n \n-    public String getName()\n-    {\n-        return name;\n-    }\n+  public String getName()\n+  {\n+    return name;\n+  }\n \n-    private final String name;\n+  private final String name;\n \n-    SelectedBackupProtocol( String name )\n-    {\n-        this.name = name;\n-    }\n+  SelectedBackupProtocol(String name)\n+  {\n+    this.name = name;\n+  }\n \n-    public static SelectedBackupProtocol fromUserInput( String value )\n-    {\n-        return Stream.of( SelectedBackupProtocol.values() )\n-                .filter( proto -> value.equals( proto.name ) )\n-                .findFirst()\n-                .orElseThrow( () -> new RuntimeException( String.format( \"Failed to parse `%s`\", value ) ) );\n-    }\n+  public static SelectedBackupProtocol fromUserInput(String value)\n+  {\n+    return Stream.of(SelectedBackupProtocol.values())\n+        .filter(proto -> value.equals(proto.name))\n+        .findFirst()\n+        .orElseThrow(() -> new RuntimeException(String.format(\"Failed to parse `%s`\", value)));\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4035/SelectedBackupProtocol.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4035/SelectedBackupProtocol.java\nindex 1d8468e7c07..69f22e0ddb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4035/SelectedBackupProtocol.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4035/SelectedBackupProtocol.java\n@@ -23,9 +23,7 @@ import java.util.stream.Stream;\n \n public enum SelectedBackupProtocol\n {\n-    ANY( \"any\" ),\n-    COMMON( \"common\" ),\n-    CATCHUP( \"catchup\" );\n+    ANY( \"any\" ), COMMON( \"common\" ), CATCHUP( \"catchup\" );\n \n     public String getName()\n     {\n@@ -41,9 +39,6 @@ public enum SelectedBackupProtocol\n \n     public static SelectedBackupProtocol fromUserInput( String value )\n     {\n-        return Stream.of( SelectedBackupProtocol.values() )\n-                .filter( proto -> value.equals( proto.name ) )\n-                .findFirst()\n-                .orElseThrow( () -> new RuntimeException( String.format( \"Failed to parse `%s`\", value ) ) );\n+        return Stream.of( SelectedBackupProtocol.values() ).filter( proto -> value.equals( proto.name ) ).findFirst().orElseThrow( () -> new RuntimeException( String.format( \"Failed to parse `%s`\", value ) ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
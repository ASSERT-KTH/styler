{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "804",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyRequestType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/804/AdminDistributionPolicyChecker.java\nindex c0de1fbed40..df973c7c851 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/804/AdminDistributionPolicyChecker.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/804/AdminDistributionPolicyChecker.java\nindex c0de1fbed40..2da0eb9069a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/804/AdminDistributionPolicyChecker.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -39,75 +40,78 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author dunnek\n  */\n public class AdminDistributionPolicyChecker {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdminDistributionPolicyChecker.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdminDistributionPolicyChecker.class);\n \n-    /**\n-     * @param request SendAlertMessage Request received.\n-     * @param target Nhin Target\n-     * @return true if checkPolicy is Permit; else denied.\n-     */\n-    public boolean checkOutgoingPolicy(RespondingGatewaySendAlertMessageType request, String target) {\n-        LOG.debug(\"checking the policy engine for the new request to a target community\");\n+  /**\n+   * @param request SendAlertMessage Request received.\n+   * @param target  Nhin Target\n+   * @return true if checkPolicy is Permit; else denied.\n+   */\n+  public boolean checkOutgoingPolicy(RespondingGatewaySendAlertMessageType request, String target) {\n+    LOG.debug(\"checking the policy engine for the new request to a target community\");\n \n-        gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper policyHelper;\n+    gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper policyHelper;\n \n-        policyHelper = new gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper();\n+    policyHelper = new gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper();\n \n-        CheckPolicyRequestType checkPolicyRequest = policyHelper.transformEntityAlertToCheckPolicy(request, target);\n+    CheckPolicyRequestType checkPolicyRequest = policyHelper.transformEntityAlertToCheckPolicy(request, target);\n \n-        return invokePolicyEngine(checkPolicyRequest);\n-    }\n+    return invokePolicyEngine(checkPolicyRequest);\n+  }\n \n-    /**This method checks the incoming policy and returns boolean.\n-     * @param request Emergency Message Distribution Element transaction message request.\n-     * @param assertion Assertion received.\n-     * @return true or false.\n-     */\n-    public boolean checkIncomingPolicy(EDXLDistribution request, AssertionType assertion) {\n-        LOG.debug(\"checking the policy engine for the new request to a target community\");\n+  /**\n+   * This method checks the incoming policy and returns boolean.\n+   *\n+   * @param request   Emergency Message Distribution Element transaction message request.\n+   * @param assertion Assertion received.\n+   * @return true or false.\n+   */\n+  public boolean checkIncomingPolicy(EDXLDistribution request, AssertionType assertion) {\n+    LOG.debug(\"checking the policy engine for the new request to a target community\");\n \n-        gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper policyHelper;\n+    gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper policyHelper;\n \n-        policyHelper = new gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper();\n+    policyHelper = new gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper();\n \n-        CheckPolicyRequestType checkPolicyRequest = policyHelper.transformNhinAlertToCheckPolicy(request, assertion);\n+    CheckPolicyRequestType checkPolicyRequest = policyHelper.transformNhinAlertToCheckPolicy(request, assertion);\n \n-        return invokePolicyEngine(checkPolicyRequest);\n-    }\n+    return invokePolicyEngine(checkPolicyRequest);\n+  }\n \n-    /**This method returns boolean and true if policycheck is Permit; else denied.\n-     * @param policyCheckReq CheckPolicyRequestType request received.\n-     * @return boolean true if Permit;else denied.\n-     */\n-    protected boolean invokePolicyEngine(CheckPolicyRequestType policyCheckReq) {\n-        boolean policyIsValid;\n-\n-        LOG.debug(\"start invokePolicyEngine\");\n-        /* invoke check policy */\n-        PolicyEngineProxyObjectFactory policyEngFactory = new PolicyEngineProxyObjectFactory();\n-        PolicyEngineProxy policyProxy = policyEngFactory.getPolicyEngineProxy();\n-        AssertionType assertion = null;\n-        if (policyCheckReq != null) {\n-            assertion = policyCheckReq.getAssertion();\n-        }\n-        CheckPolicyResponseType policyResp = policyProxy.checkPolicy(policyCheckReq, assertion);\n-\n-        /* if response='permit' */\n-        if (policyResp.getResponse() != null && NullChecker.isNotNullish(policyResp.getResponse().getResult())\n-                && policyResp.getResponse().getResult().get(0).getDecision() == DecisionType.PERMIT) {\n-            LOG.debug(\"Policy engine check returned permit.\");\n-            policyIsValid = true;\n-        } else {\n-            LOG.debug(\"Policy engine check returned deny.\");\n-            policyIsValid = false;\n-        }\n-\n-        return policyIsValid;\n+  /**\n+   * This method returns boolean and true if policycheck is Permit; else denied.\n+   *\n+   * @param policyCheckReq CheckPolicyRequestType request received.\n+   * @return boolean true if Permit;else denied.\n+   */\n+  protected boolean invokePolicyEngine(CheckPolicyRequestType policyCheckReq) {\n+    boolean policyIsValid;\n+\n+    LOG.debug(\"start invokePolicyEngine\");\n+    /* invoke check policy */\n+    PolicyEngineProxyObjectFactory policyEngFactory = new PolicyEngineProxyObjectFactory();\n+    PolicyEngineProxy policyProxy = policyEngFactory.getPolicyEngineProxy();\n+    AssertionType assertion = null;\n+    if (policyCheckReq != null) {\n+      assertion = policyCheckReq.getAssertion();\n+    }\n+    CheckPolicyResponseType policyResp = policyProxy.checkPolicy(policyCheckReq, assertion);\n+\n+    /* if response='permit' */\n+    if (policyResp.getResponse() != null && NullChecker.isNotNullish(policyResp.getResponse().getResult())\n+        && policyResp.getResponse().getResult().get(0).getDecision() == DecisionType.PERMIT) {\n+      LOG.debug(\"Policy engine check returned permit.\");\n+      policyIsValid = true;\n+    } else {\n+      LOG.debug(\"Policy engine check returned deny.\");\n+      policyIsValid = false;\n     }\n \n+    return policyIsValid;\n+  }\n+\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/804/AdminDistributionPolicyChecker.java\nindex c0de1fbed40..826dc517dc4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/804/AdminDistributionPolicyChecker.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -88,7 +89,8 @@ public class AdminDistributionPolicyChecker {\n         boolean policyIsValid;\n \n         LOG.debug(\"start invokePolicyEngine\");\n-        /* invoke check policy */\n+\n+/* invoke check policy */\n         PolicyEngineProxyObjectFactory policyEngFactory = new PolicyEngineProxyObjectFactory();\n         PolicyEngineProxy policyProxy = policyEngFactory.getPolicyEngineProxy();\n         AssertionType assertion = null;\n@@ -98,8 +100,7 @@ public class AdminDistributionPolicyChecker {\n         CheckPolicyResponseType policyResp = policyProxy.checkPolicy(policyCheckReq, assertion);\n \n         /* if response='permit' */\n-        if (policyResp.getResponse() != null && NullChecker.isNotNullish(policyResp.getResponse().getResult())\n-                && policyResp.getResponse().getResult().get(0).getDecision() == DecisionType.PERMIT) {\n+        if (policyResp.getResponse() != null && NullChecker.isNotNullish(policyResp.getResponse().getResult()) && policyResp.getResponse().getResult().get(0).getDecision() == DecisionType.PERMIT) {\n             LOG.debug(\"Policy engine check returned permit.\");\n             policyIsValid = true;\n         } else {\n@@ -110,4 +111,4 @@ public class AdminDistributionPolicyChecker {\n         return policyIsValid;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "61",
                    "column": "32",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "61",
                    "column": "37",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "61",
                    "column": "42",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "61",
                    "column": "49",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "61",
                    "column": "60",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "61",
                    "column": "68",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "76",
                    "column": "32",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "76",
                    "column": "37",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "76",
                    "column": "49",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "76",
                    "column": "60",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "76",
                    "column": "68",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "110",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/804/AdminDistributionPolicyChecker.java\nindex c0de1fbed40..4c049402dd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/804/AdminDistributionPolicyChecker.java\n@@ -42,6 +42,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author dunnek\n  */\n+\n+\n public class AdminDistributionPolicyChecker {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdminDistributionPolicyChecker.class);\n@@ -51,15 +53,13 @@ public class AdminDistributionPolicyChecker {\n      * @param target Nhin Target\n      * @return true if checkPolicy is Permit; else denied.\n      */\n+\n+\n     public boolean checkOutgoingPolicy(RespondingGatewaySendAlertMessageType request, String target) {\n         LOG.debug(\"checking the policy engine for the new request to a target community\");\n-\n         gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper policyHelper;\n-\n-        policyHelper = new gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper();\n-\n+        policyHelper = new gov. hhs. fha. nhinc. transform. policy. AdminDistributionTransformHelper();\n         CheckPolicyRequestType checkPolicyRequest = policyHelper.transformEntityAlertToCheckPolicy(request, target);\n-\n         return invokePolicyEngine(checkPolicyRequest);\n     }\n \n@@ -68,15 +68,13 @@ public class AdminDistributionPolicyChecker {\n      * @param assertion Assertion received.\n      * @return true or false.\n      */\n+\n+\n     public boolean checkIncomingPolicy(EDXLDistribution request, AssertionType assertion) {\n         LOG.debug(\"checking the policy engine for the new request to a target community\");\n-\n         gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper policyHelper;\n-\n-        policyHelper = new gov.hhs.fha.nhinc.transform.policy.AdminDistributionTransformHelper();\n-\n+        policyHelper = new gov. hhs. fha. nhinc. transform. policy. AdminDistributionTransformHelper();\n         CheckPolicyRequestType checkPolicyRequest = policyHelper.transformNhinAlertToCheckPolicy(request, assertion);\n-\n         return invokePolicyEngine(checkPolicyRequest);\n     }\n \n@@ -84,9 +82,10 @@ public class AdminDistributionPolicyChecker {\n      * @param policyCheckReq CheckPolicyRequestType request received.\n      * @return boolean true if Permit;else denied.\n      */\n+\n+\n     protected boolean invokePolicyEngine(CheckPolicyRequestType policyCheckReq) {\n         boolean policyIsValid;\n-\n         LOG.debug(\"start invokePolicyEngine\");\n         /* invoke check policy */\n         PolicyEngineProxyObjectFactory policyEngFactory = new PolicyEngineProxyObjectFactory();\n@@ -98,16 +97,16 @@ public class AdminDistributionPolicyChecker {\n         CheckPolicyResponseType policyResp = policyProxy.checkPolicy(policyCheckReq, assertion);\n \n         /* if response='permit' */\n-        if (policyResp.getResponse() != null && NullChecker.isNotNullish(policyResp.getResponse().getResult())\n-                && policyResp.getResponse().getResult().get(0).getDecision() == DecisionType.PERMIT) {\n+        if(policyResp.getResponse() != null && NullChecker.isNotNullish(policyResp.getResponse().getResult())&& policyResp.getResponse().getResult().get(0).getDecision() == DecisionType.PERMIT) {\n             LOG.debug(\"Policy engine check returned permit.\");\n             policyIsValid = true;\n-        } else {\n+        }\n+\n+\n+else {\n             LOG.debug(\"Policy engine check returned deny.\");\n             policyIsValid = false;\n         }\n-\n         return policyIsValid;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/804/AdminDistributionPolicyChecker.java\nindex c0de1fbed40..df973c7c851 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/804/AdminDistributionPolicyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/804/AdminDistributionPolicyChecker.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
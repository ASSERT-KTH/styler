{
    "project_name": "griddynamics-jagger",
    "error_id": "190",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 165).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    private Map<String, List<SummaryDto>> latencyPercentilesMap = new HashMap<String, List<SummaryDto>>();\n    private Map<String, List<SummaryDto>> validatorsMap = new HashMap<String, List<SummaryDto>>();\n    private Map<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>> standardMetricsMap = new HashMap<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>>();\n    private DateFormat dateFormatter = new SimpleDateFormat(FormatCalculator.DATE_FORMAT);\n    private int numberOfTestGroups;\n    private boolean isMetricHighlighting;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/190/SummaryReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/190/SummaryReporter.java\nindex 0e94efc6c1e..4c352cef54b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/190/SummaryReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/190/SummaryReporter.java\n@@ -53,12 +53,13 @@ public class SummaryReporter {\n     private Map<String, List<SummaryDto>> summaryMap = new HashMap<String, List<SummaryDto>>();\n     private Map<String, List<SummaryDto>> latencyPercentilesMap = new HashMap<String, List<SummaryDto>>();\n     private Map<String, List<SummaryDto>> validatorsMap = new HashMap<String, List<SummaryDto>>();\n-    private Map<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>> standardMetricsMap = new HashMap<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>>();\n+    private Map<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>> standardMetricsMap =\n+            new HashMap<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>>();\n     private DateFormat dateFormatter = new SimpleDateFormat(FormatCalculator.DATE_FORMAT);\n     private int numberOfTestGroups;\n     private boolean isMetricHighlighting;\n     private List<SummaryTestDto> testSummaryData = new ArrayList<>();\n-    private Map<TestEntity,Map<String,Double>> dataForScalabilityPlots = new HashMap<TestEntity, Map<String, Double>>();\n+    private Map<TestEntity, Map<String, Double>> dataForScalabilityPlots = new HashMap<TestEntity, Map<String, Double>>();\n     private SessionEntity sessionEntity;\n \n     private StatusImageProvider statusImageProvider;\n@@ -128,7 +129,7 @@ public class SummaryReporter {\n         return testSummaryData;\n     }\n \n-    public Map<TestEntity,Map<String,Double>> getDataForScalabilityPlots(String sessionId) {\n+    public Map<TestEntity, Map<String, Double>> getDataForScalabilityPlots(String sessionId) {\n \n         getData(sessionId);\n \n@@ -306,7 +307,7 @@ public class SummaryReporter {\n                 int val2 = Integer.parseInt(result2.getNumber());\n                 return val1 > val2 ? 1 : val1 < val2 ? -1 : 0;\n             }\n-        } );\n+        });\n     }\n \n     private class LocalRankingProvider extends MetricNamesRankingProvider {\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "307",
                    "column": "28",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/190/SummaryReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/190/SummaryReporter.java\nindex 0e94efc6c1e..c27fce427aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/190/SummaryReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/190/SummaryReporter.java\n@@ -58,7 +58,7 @@ public class SummaryReporter {\n     private int numberOfTestGroups;\n     private boolean isMetricHighlighting;\n     private List<SummaryTestDto> testSummaryData = new ArrayList<>();\n-    private Map<TestEntity,Map<String,Double>> dataForScalabilityPlots = new HashMap<TestEntity, Map<String, Double>>();\n+    private Map<TestEntity, Map<String,Double>> dataForScalabilityPlots = new HashMap<TestEntity, Map<String, Double>>();\n     private SessionEntity sessionEntity;\n \n     private StatusImageProvider statusImageProvider;\n@@ -128,7 +128,7 @@ public class SummaryReporter {\n         return testSummaryData;\n     }\n \n-    public Map<TestEntity,Map<String,Double>> getDataForScalabilityPlots(String sessionId) {\n+    public Map<TestEntity, Map<String,Double>> getDataForScalabilityPlots(String sessionId) {\n \n         getData(sessionId);\n \n@@ -304,9 +304,9 @@ public class SummaryReporter {\n             public int compare(final SummaryTestDto result1, final SummaryTestDto result2) {\n                 int val1 = Integer.parseInt(result1.getNumber());\n                 int val2 = Integer.parseInt(result2.getNumber());\n-                return val1 > val2 ? 1 : val1 < val2 ? -1 : 0;\n+                return val1> val2 ? 1 : val1 < val2 ? -1 : 0;\n             }\n-        } );\n+        });\n     }\n \n     private class LocalRankingProvider extends MetricNamesRankingProvider {\n@@ -325,4 +325,4 @@ public class SummaryReporter {\n         this.databaseService = databaseService;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/190/SummaryReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/190/SummaryReporter.java\nindex 0e94efc6c1e..f4955762dc7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/190/SummaryReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/190/SummaryReporter.java\n@@ -53,8 +53,10 @@ public class SummaryReporter {\n     private Map<String, List<SummaryDto>> summaryMap = new HashMap<String, List<SummaryDto>>();\n     private Map<String, List<SummaryDto>> latencyPercentilesMap = new HashMap<String, List<SummaryDto>>();\n     private Map<String, List<SummaryDto>> validatorsMap = new HashMap<String, List<SummaryDto>>();\n-    private Map<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>> standardMetricsMap = new HashMap<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>>();\n-    private DateFormat dateFormatter = new SimpleDateFormat(FormatCalculator.DATE_FORMAT);\n+    private Map<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>> standardMetricsMap =\n+\n+        new HashMap<TestEntity, Map<MetricEntity, MetricSummaryValueEntity>>();\n+     private DateFormat dateFormatter = new SimpleDateFormat(FormatCalculator.DATE_FORMAT);\n     private int numberOfTestGroups;\n     private boolean isMetricHighlighting;\n     private List<SummaryTestDto> testSummaryData = new ArrayList<>();\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
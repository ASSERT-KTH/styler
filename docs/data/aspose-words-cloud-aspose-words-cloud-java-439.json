{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "439",
    "information": {
        "errors": [
            {
                "line": "121",
                "column": "58",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    DocumentProperty documentProperty = (DocumentProperty)o;\n    return\n        Objects.equals(this.builtIn, documentProperty.builtIn) &&\n        Objects.equals(this.name, documentProperty.name) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/439/DocumentProperty.java\nindex 38a6c2dc8f2..57ed8592701 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/439/DocumentProperty.java\n@@ -118,7 +118,7 @@ public class DocumentProperty extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    DocumentProperty documentProperty = (DocumentProperty)o;\n+    DocumentProperty documentProperty = (DocumentProperty) o;\n     return\n         Objects.equals(this.builtIn, documentProperty.builtIn) &&\n         Objects.equals(this.name, documentProperty.name) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/439/DocumentProperty.java\nindex 38a6c2dc8f2..22575b5e720 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/439/DocumentProperty.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -55,6 +58,7 @@ public class DocumentProperty extends LinkElement {\n \n     @SerializedName(\"Value\")\n     private String value = null;\n+\n     public DocumentProperty builtIn(Boolean builtIn) {\n         this.builtIn = builtIn;\n         return this;\n@@ -63,8 +67,9 @@ public class DocumentProperty extends LinkElement {\n     /**\n      * Gets or sets a value indicating whether flag indicates whether the property is built-in or not.\n      * If true the property is built-in, if false the property is custom.\n-    * @return builtIn\n-    **/\n+     *\n+     * @return builtIn\n+     **/\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether flag indicates whether the property is built-in or not. If true the property is built-in, if false the property is custom.\")\n     public Boolean getBuiltIn() {\n         return builtIn;\n@@ -81,8 +86,9 @@ public class DocumentProperty extends LinkElement {\n \n     /**\n      * Gets or sets name of the document property.\n-    * @return name\n-    **/\n+     *\n+     * @return name\n+     **/\n     @ApiModelProperty(value = \"Gets or sets name of the document property.\")\n     public String getName() {\n         return name;\n@@ -99,8 +105,9 @@ public class DocumentProperty extends LinkElement {\n \n     /**\n      * Gets or sets string value of the document property.\n-    * @return value\n-    **/\n+     *\n+     * @return value\n+     **/\n     @ApiModelProperty(value = \"Gets or sets string value of the document property.\")\n     public String getValue() {\n         return value;\n@@ -118,39 +125,39 @@ public class DocumentProperty extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    DocumentProperty documentProperty = (DocumentProperty)o;\n-    return\n-        Objects.equals(this.builtIn, documentProperty.builtIn) &&\n-        Objects.equals(this.name, documentProperty.name) &&\n-        Objects.equals(this.value, documentProperty.value) &&\n-        super.equals(o);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(builtIn, name, value, super.hashCode());\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class DocumentProperty {\\n\");\n-    sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n-    sb.append(\"    builtIn: \").append(toIndentedString(builtIn)).append(\"\\n\");\n-    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n-    sb.append(\"    value: \").append(toIndentedString(value)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n+        DocumentProperty documentProperty = (DocumentProperty) o;\n+        return\n+            Objects.equals(this.builtIn, documentProperty.builtIn) &&\n+                Objects.equals(this.name, documentProperty.name) &&\n+                Objects.equals(this.value, documentProperty.value) &&\n+                super.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(builtIn, name, value, super.hashCode());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class DocumentProperty {\\n\");\n+        sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n+        sb.append(\"    builtIn: \").append(toIndentedString(builtIn)).append(\"\\n\");\n+        sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n+        sb.append(\"    value: \").append(toIndentedString(value)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n     }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "123",
                    "column": "54",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/439/DocumentProperty.java\nindex 38a6c2dc8f2..2ec534e9809 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/439/DocumentProperty.java\n@@ -55,7 +55,8 @@ public class DocumentProperty extends LinkElement {\n \n     @SerializedName(\"Value\")\n     private String value = null;\n-    public DocumentProperty builtIn(Boolean builtIn) {\n+\n+public DocumentProperty builtIn(Boolean builtIn) {\n         this.builtIn = builtIn;\n         return this;\n     }\n@@ -114,13 +115,13 @@ public class DocumentProperty extends LinkElement {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    DocumentProperty documentProperty = (DocumentProperty)o;\n-    return\n-        Objects.equals(this.builtIn, documentProperty.builtIn) &&\n+\n+DocumentProperty documentProperty = (DocumentProperty)o;\n+    return Objects.equals(this.builtIn, documentProperty.builtIn) &&\n         Objects.equals(this.name, documentProperty.name) &&\n         Objects.equals(this.value, documentProperty.value) &&\n         super.equals(o);\n@@ -153,4 +154,4 @@ public class DocumentProperty extends LinkElement {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/439/DocumentProperty.java\nindex 38a6c2dc8f2..8c7dcbc26d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/439/DocumentProperty.java\n@@ -45,92 +45,105 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Words document property DTO.\n  */\n+\n+\n @ApiModel(description = \"Words document property DTO.\")\n+\n public class DocumentProperty extends LinkElement {\n-    @SerializedName(\"BuiltIn\")\n-    private Boolean builtIn = null;\n+  @SerializedName(\"BuiltIn\")\n+  private Boolean builtIn = null;\n \n-    @SerializedName(\"Name\")\n-    private String name = null;\n+  @SerializedName(\"Name\")\n+  private String name = null;\n \n-    @SerializedName(\"Value\")\n-    private String value = null;\n-    public DocumentProperty builtIn(Boolean builtIn) {\n-        this.builtIn = builtIn;\n-        return this;\n-    }\n+  @SerializedName(\"Value\")\n+  private String value = null;\n+\n+  public DocumentProperty builtIn(Boolean builtIn) {\n+    this.builtIn = builtIn;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets a value indicating whether flag indicates whether the property is built-in or not.\n      * If true the property is built-in, if false the property is custom.\n     * @return builtIn\n     **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether flag indicates whether the property is built-in or not. If true the property is built-in, if false the property is custom.\")\n-    public Boolean getBuiltIn() {\n-        return builtIn;\n-    }\n \n-    public void setBuiltIn(Boolean builtIn) {\n-        this.builtIn = builtIn;\n-    }\n \n-    public DocumentProperty name(String name) {\n-        this.name = name;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether flag indicates whether the property is built-in or not. If true the property is built-in, if false the property is custom.\")\n+  public Boolean getBuiltIn() {\n+    return builtIn;\n+  }\n+\n+  public void setBuiltIn(Boolean builtIn) {\n+    this.builtIn = builtIn;\n+  }\n+\n+  public DocumentProperty name(String name) {\n+    this.name = name;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets name of the document property.\n     * @return name\n     **/\n-    @ApiModelProperty(value = \"Gets or sets name of the document property.\")\n-    public String getName() {\n-        return name;\n-    }\n \n-    public void setName(String name) {\n-        this.name = name;\n-    }\n \n-    public DocumentProperty value(String value) {\n-        this.value = value;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets name of the document property.\")\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  public DocumentProperty value(String value) {\n+    this.value = value;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets string value of the document property.\n     * @return value\n     **/\n-    @ApiModelProperty(value = \"Gets or sets string value of the document property.\")\n-    public String getValue() {\n-        return value;\n-    }\n \n-    public void setValue(String value) {\n-        this.value = value;\n+\n+  @ApiModelProperty(value = \"Gets or sets string value of the document property.\")\n+  public String getValue() {\n+    return value;\n+  }\n+\n+  public void setValue(String value) {\n+    this.value = value;\n+  }\n+\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    DocumentProperty documentProperty = (DocumentProperty)o;\n-    return\n-        Objects.equals(this.builtIn, documentProperty.builtIn) &&\n-        Objects.equals(this.name, documentProperty.name) &&\n-        Objects.equals(this.value, documentProperty.value) &&\n-        super.equals(o);\n+    DocumentProperty documentProperty = (DocumentProperty) o;\n+    return Objects.equals(this.builtIn, documentProperty.builtIn) &&\n+    Objects.equals(this.name, documentProperty.name) &&\n+    Objects.equals(this.value, documentProperty.value) &&\n+    super.equals(o);\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(builtIn, name, value, super.hashCode());\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -147,10 +160,12 @@ public class DocumentProperty extends LinkElement {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 95
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/439/DocumentProperty.java\nindex 38a6c2dc8f2..57ed8592701 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/439/DocumentProperty.java\n@@ -118,7 +118,7 @@ public class DocumentProperty extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    DocumentProperty documentProperty = (DocumentProperty)o;\n+    DocumentProperty documentProperty = (DocumentProperty) o;\n     return\n         Objects.equals(this.builtIn, documentProperty.builtIn) &&\n         Objects.equals(this.name, documentProperty.name) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/439/DocumentProperty.java\nindex 38a6c2dc8f2..57ed8592701 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/439/DocumentProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/439/DocumentProperty.java\n@@ -118,7 +118,7 @@ public class DocumentProperty extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    DocumentProperty documentProperty = (DocumentProperty)o;\n+    DocumentProperty documentProperty = (DocumentProperty) o;\n     return\n         Objects.equals(this.builtIn, documentProperty.builtIn) &&\n         Objects.equals(this.name, documentProperty.name) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
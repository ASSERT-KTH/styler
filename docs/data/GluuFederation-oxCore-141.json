{
    "project_name": "GluuFederation-oxCore",
    "error_id": "141",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    }\n\n\t@Override\n\tpublic boolean hasKey(String key) {\n        Boolean hasKey = pool.getResource().exists(key);\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "73",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/141/RedisSentinelProvider.java\nindex e5fd1f90288..de0d2627be2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/141/RedisSentinelProvider.java\n@@ -69,7 +69,7 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n         return pool;\n     }\n \n-\t@Override\n+    @Override\n \tpublic boolean hasKey(String key) {\n         Boolean hasKey = pool.getResource().exists(key);\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/141/RedisSentinelProvider.java\nindex e5fd1f90288..f97a5c0c211 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/141/RedisSentinelProvider.java\n@@ -35,13 +35,13 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n             String password = StringUtils.isBlank(redisConfiguration.getDecryptedPassword()) ? null : redisConfiguration.getDecryptedPassword();\n \n             pool = new JedisSentinelPool(\n-                    getRedisConfiguration().getSentinelMasterGroupName(),\n-                    Sets.newHashSet(StringUtils.split(getRedisConfiguration().getServers().trim(), \",\")),\n-                    poolConfig,\n-                    redisConfiguration.getConnectionTimeout(),\n-                    redisConfiguration.getSoTimeout(),\n-                    password,\n-                    Protocol.DEFAULT_DATABASE);\n+                getRedisConfiguration().getSentinelMasterGroupName(),\n+                Sets.newHashSet(StringUtils.split(getRedisConfiguration().getServers().trim(), \",\")),\n+                poolConfig,\n+                redisConfiguration.getConnectionTimeout(),\n+                redisConfiguration.getSoTimeout(),\n+                password,\n+                Protocol.DEFAULT_DATABASE);\n \n             testConnection();\n             LOG.debug(\"RedisSentinelProvider started.\");\n@@ -69,12 +69,12 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n         return pool;\n     }\n \n-\t@Override\n-\tpublic boolean hasKey(String key) {\n+    @Override\n+    public boolean hasKey(String key) {\n         Boolean hasKey = pool.getResource().exists(key);\n \n         return Boolean.TRUE.equals(hasKey);\n-\t}\n+    }\n \n     @Override\n     public Object get(String key) {\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "73",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/141/RedisSentinelProvider.java\nindex e5fd1f90288..1fbbd809535 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/141/RedisSentinelProvider.java\n@@ -69,14 +69,14 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n         return pool;\n     }\n \n-\t@Override\n+@Override\n \tpublic boolean hasKey(String key) {\n-        Boolean hasKey = pool.getResource().exists(key);\n+    Boolean hasKey = pool.getResource().exists(key);\n \n         return Boolean.TRUE.equals(hasKey);\n-\t}\n+    }\n \n-    @Override\n+@Override\n     public Object get(String key) {\n         byte[] value = pool.getResource().get(key.getBytes());\n         Object deserialized = null;\n@@ -115,4 +115,4 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n             jedis.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 308).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/141/RedisSentinelProvider.java\nindex e5fd1f90288..6c22c596611 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/141/RedisSentinelProvider.java\n@@ -9,7 +9,6 @@ import redis.clients.jedis.Jedis;\n import redis.clients.jedis.JedisPoolConfig;\n import redis.clients.jedis.JedisSentinelPool;\n import redis.clients.jedis.Protocol;\n-\n import java.io.Serializable;\n \n /**\n@@ -17,10 +16,11 @@ import java.io.Serializable;\n  *\n  * @author Yuriy Zabrovarnyy\n  */\n+\n+\n public class RedisSentinelProvider extends AbstractRedisProvider {\n \n     private static final Logger LOG = LoggerFactory.getLogger(RedisSentinelProvider.class);\n-\n     private JedisSentinelPool pool;\n \n     public RedisSentinelProvider(RedisConfiguration redisConfiguration) {\n@@ -33,16 +33,7 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n \n             JedisPoolConfig poolConfig = createPoolConfig();\n             String password = StringUtils.isBlank(redisConfiguration.getDecryptedPassword()) ? null : redisConfiguration.getDecryptedPassword();\n-\n-            pool = new JedisSentinelPool(\n-                    getRedisConfiguration().getSentinelMasterGroupName(),\n-                    Sets.newHashSet(StringUtils.split(getRedisConfiguration().getServers().trim(), \",\")),\n-                    poolConfig,\n-                    redisConfiguration.getConnectionTimeout(),\n-                    redisConfiguration.getSoTimeout(),\n-                    password,\n-                    Protocol.DEFAULT_DATABASE);\n-\n+            pool = new JedisSentinelPool(getRedisConfiguration().getSentinelMasterGroupName(), Sets.newHashSet(StringUtils.split(getRedisConfiguration().getServers().trim(), \",\")), poolConfig, redisConfiguration.getConnectionTimeout(), redisConfiguration.getSoTimeout(), password, Protocol.DEFAULT_DATABASE);\n             testConnection();\n             LOG.debug(\"RedisSentinelProvider started.\");\n         } catch (Exception e) {\n@@ -53,7 +44,6 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n \n     public void destroy() {\n         LOG.debug(\"Destroying RedisSentinelProvider\");\n-\n         try {\n             pool.close();\n         } catch (Exception e) {\n@@ -69,12 +59,12 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n         return pool;\n     }\n \n-\t@Override\n-\tpublic boolean hasKey(String key) {\n+    @Override\n+    public boolean hasKey(String key) {\n         Boolean hasKey = pool.getResource().exists(key);\n \n         return Boolean.TRUE.equals(hasKey);\n-\t}\n+    }\n \n     @Override\n     public Object get(String key) {\n@@ -83,12 +73,15 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n         if (value != null && value.length > 0) {\n             deserialized = SerializationUtils.deserialize(value);\n         }\n+\n         return deserialized;\n     }\n \n     @Override\n     public void put(int expirationInSeconds, String key, Object object) {\n-        String status = pool.getResource().setex(key.getBytes(), expirationInSeconds, SerializationUtils.serialize((Serializable) object));\n+        String status = pool.getResource().setex(key.getBytes(),\n+            expirationInSeconds,\n+                SerializationUtils.serialize((Serializable) object));\n         LOG.trace(\"put - key: \" + key + \", status: \" + status);\n     }\n \n@@ -107,7 +100,6 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n     @Override\n     public void clear() {\n         Jedis jedis = pool.getResource();\n-\n         try {\n             jedis.flushAll();\n             LOG.trace(\"clear\");\n@@ -115,4 +107,5 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n             jedis.close();\n         }\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "73",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/141/RedisSentinelProvider.java\nindex e5fd1f90288..de0d2627be2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/141/RedisSentinelProvider.java\n@@ -69,7 +69,7 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n         return pool;\n     }\n \n-\t@Override\n+    @Override\n \tpublic boolean hasKey(String key) {\n         Boolean hasKey = pool.getResource().exists(key);\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "73",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/141/RedisSentinelProvider.java\nindex e5fd1f90288..de0d2627be2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/141/RedisSentinelProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/141/RedisSentinelProvider.java\n@@ -69,7 +69,7 @@ public class RedisSentinelProvider extends AbstractRedisProvider {\n         return pool;\n     }\n \n-\t@Override\n+    @Override\n \tpublic boolean hasKey(String key) {\n         Boolean hasKey = pool.getResource().exists(key);\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
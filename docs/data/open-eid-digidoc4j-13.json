{
    "project_name": "open-eid-digidoc4j",
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "42",
                "column": "15",
                "severity": "error",
                "message": "'(' should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "        if (hasWarningsOnly) {\n          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName\n              ()));\n        } else {\n          Helper.printErrorSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/13/AbstractValidationResult.java\nindex 93f23b9d386..8972669453f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/13/AbstractValidationResult.java\n@@ -38,8 +38,7 @@ public abstract class AbstractValidationResult implements ValidationResult {\n       boolean hasWarningsOnly = CollectionUtils.isNotEmpty(this.warnings) && this.isValid();\n       if (hasWarningsOnly || CollectionUtils.isNotEmpty(this.errors)) {\n         if (hasWarningsOnly) {\n-          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName\n-              ()));\n+          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         } else {\n           Helper.printErrorSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/13/AbstractValidationResult.java\nindex 93f23b9d386..0cc547edb02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/13/AbstractValidationResult.java\n@@ -38,8 +38,7 @@ public abstract class AbstractValidationResult implements ValidationResult {\n       boolean hasWarningsOnly = CollectionUtils.isNotEmpty(this.warnings) && this.isValid();\n       if (hasWarningsOnly || CollectionUtils.isNotEmpty(this.errors)) {\n         if (hasWarningsOnly) {\n-          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName\n-              ()));\n+          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         } else {\n           Helper.printErrorSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         }\n@@ -54,8 +53,7 @@ public abstract class AbstractValidationResult implements ValidationResult {\n           }\n         }\n         if (hasWarningsOnly) {\n-          Helper.printWarningSection(LOGGER, String.format(\"End of <%s> validation result\", this\n-              .getResultName()));\n+          Helper.printWarningSection(LOGGER, String.format(\"End of <%s> validation result\", this.getResultName()));\n         } else {\n           Helper.printErrorSection(LOGGER, String.format(\"End of <%s> validation result\", this.getResultName()));\n         }\n@@ -91,4 +89,4 @@ public abstract class AbstractValidationResult implements ValidationResult {\n     this.warnings = warnings;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/13/AbstractValidationResult.java\nindex 93f23b9d386..7576bcf76a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/13/AbstractValidationResult.java\n@@ -2,7 +2,6 @@ package org.digidoc4j.impl;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import org.apache.commons.collections4.CollectionUtils;\n import org.digidoc4j.Configuration;\n import org.digidoc4j.ValidationResult;\n@@ -14,10 +13,14 @@ import org.slf4j.LoggerFactory;\n /**\n  * Created by Janar Rahumeel (CGI Estonia)\n  */\n+\n+\n public abstract class AbstractValidationResult implements ValidationResult {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(AbstractValidationResult.class);\n+\n   protected List<DigiDoc4JException> errors = new ArrayList<>();\n+\n   protected List<DigiDoc4JException> warnings = new ArrayList<>();\n \n   @Override\n@@ -33,15 +36,17 @@ public abstract class AbstractValidationResult implements ValidationResult {\n   /**\n    * @param configuration configuration context\n    */\n+\n   public void print(Configuration configuration) {\n     if (configuration.getPrintValidationReport()) {\n       boolean hasWarningsOnly = CollectionUtils.isNotEmpty(this.warnings) && this.isValid();\n       if (hasWarningsOnly || CollectionUtils.isNotEmpty(this.errors)) {\n         if (hasWarningsOnly) {\n-          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName\n-              ()));\n+          Helper.printWarningSection(LOGGER,\n+                               String.format(\"Start of <%s> validation result\", this.getResultName()));\n         } else {\n-          Helper.printErrorSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n+          Helper.printErrorSection(LOGGER,\n+                 String.format(\"Start of <%s> validation result\", this.getResultName()));\n         }\n         if (CollectionUtils.isNotEmpty(this.errors)) {\n           for (DigiDoc4JException error : this.errors) {\n@@ -54,8 +59,7 @@ public abstract class AbstractValidationResult implements ValidationResult {\n           }\n         }\n         if (hasWarningsOnly) {\n-          Helper.printWarningSection(LOGGER, String.format(\"End of <%s> validation result\", this\n-              .getResultName()));\n+          Helper.printWarningSection(LOGGER, String.format(\"End of <%s> validation result\", this.getResultName()));\n         } else {\n           Helper.printErrorSection(LOGGER, String.format(\"End of <%s> validation result\", this.getResultName()));\n         }\n@@ -91,4 +95,4 @@ public abstract class AbstractValidationResult implements ValidationResult {\n     this.warnings = warnings;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/13/AbstractValidationResult.java\nindex 93f23b9d386..8972669453f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/13/AbstractValidationResult.java\n@@ -38,8 +38,7 @@ public abstract class AbstractValidationResult implements ValidationResult {\n       boolean hasWarningsOnly = CollectionUtils.isNotEmpty(this.warnings) && this.isValid();\n       if (hasWarningsOnly || CollectionUtils.isNotEmpty(this.errors)) {\n         if (hasWarningsOnly) {\n-          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName\n-              ()));\n+          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         } else {\n           Helper.printErrorSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/13/AbstractValidationResult.java\nindex 93f23b9d386..8972669453f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/13/AbstractValidationResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/13/AbstractValidationResult.java\n@@ -38,8 +38,7 @@ public abstract class AbstractValidationResult implements ValidationResult {\n       boolean hasWarningsOnly = CollectionUtils.isNotEmpty(this.warnings) && this.isValid();\n       if (hasWarningsOnly || CollectionUtils.isNotEmpty(this.errors)) {\n         if (hasWarningsOnly) {\n-          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName\n-              ()));\n+          Helper.printWarningSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         } else {\n           Helper.printErrorSection(LOGGER, String.format(\"Start of <%s> validation result\", this.getResultName()));\n         }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3211",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3211/TransactionLogFilesHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3211/TransactionLogFilesHelper.java\nindex f8529f7f0a6..16b654be591 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3211/TransactionLogFilesHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3211/TransactionLogFilesHelper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.files;\n \n import java.nio.file.DirectoryStream;\n@@ -35,8 +36,8 @@ public class TransactionLogFilesHelper\n {\n     public static final String DEFAULT_NAME = \"neostore.transaction.db\";\n     public static final String CHECKPOINT_FILE_PREFIX = \"checkpoint\";\n-    static final DirectoryStream.Filter<Path> DEFAULT_FILENAME_FILTER = new LogicalLogFilenameFilter( quote( DEFAULT_NAME ), quote( CHECKPOINT_FILE_PREFIX ) );\n-    public static final Predicate<String> DEFAULT_FILENAME_PREDICATE = file -> file.startsWith( DEFAULT_NAME ) || file.startsWith( CHECKPOINT_FILE_PREFIX );\n+    static final DirectoryStream.Filter<Path> DEFAULT_FILENAME_FILTER = new LogicalLogFilenameFilter(quote(DEFAULT_NAME), quote(CHECKPOINT_FILE_PREFIX));\n+    public static final Predicate<String> DEFAULT_FILENAME_PREDICATE = file -> file.startsWith(DEFAULT_NAME) || file.startsWith(CHECKPOINT_FILE_PREFIX);\n \n     private static final String VERSION_SUFFIX = \".\";\n     private static final String REGEX_VERSION_SUFFIX = \"\\\\.\";\n@@ -46,32 +47,32 @@ public class TransactionLogFilesHelper\n     private final FileSystemAbstraction fileSystem;\n     private final DirectoryStream.Filter<Path> filenameFilter;\n \n-    public TransactionLogFilesHelper( FileSystemAbstraction fileSystem, Path directory )\n+    public TransactionLogFilesHelper(FileSystemAbstraction fileSystem, Path directory)\n     {\n-        this( fileSystem, directory, DEFAULT_NAME );\n+        this(fileSystem, directory, DEFAULT_NAME);\n     }\n \n-    public TransactionLogFilesHelper( FileSystemAbstraction fileSystem, Path directory, String name )\n+    public TransactionLogFilesHelper(FileSystemAbstraction fileSystem, Path directory, String name)\n     {\n         this.fileSystem = fileSystem;\n-        this.logBaseName = directory.resolve( name );\n-        this.filenameFilter = new LogicalLogFilenameFilter( quote( name ) );\n+        this.logBaseName = directory.resolve(name);\n+        this.filenameFilter = new LogicalLogFilenameFilter(quote(name));\n     }\n \n-    public Path getLogFileForVersion( long version )\n+    public Path getLogFileForVersion(long version)\n     {\n-        return Path.of( logBaseName.toAbsolutePath().toString() + VERSION_SUFFIX + version );\n+        return Path.of(logBaseName.toAbsolutePath().toString() + VERSION_SUFFIX + version);\n     }\n \n-    public long getLogVersion( Path historyLogFile )\n+    public long getLogVersion(Path historyLogFile)\n     {\n         String historyLogFilename = historyLogFile.getFileName().toString();\n-        int index = historyLogFilename.lastIndexOf( VERSION_SUFFIX );\n-        if ( index == -1 )\n+        int index = historyLogFilename.lastIndexOf(VERSION_SUFFIX);\n+        if (index == -1)\n         {\n-            throw new RuntimeException( \"Invalid log file '\" + historyLogFilename + \"'\" );\n+            throw new RuntimeException(\"Invalid log file '\" + historyLogFilename + \"'\");\n         }\n-        return Long.parseLong( historyLogFilename.substring( index + VERSION_SUFFIX.length() ) );\n+        return Long.parseLong(historyLogFilename.substring(index + VERSION_SUFFIX.length()));\n     }\n \n     DirectoryStream.Filter<Path> getLogFilenameFilter()\n@@ -81,19 +82,19 @@ public class TransactionLogFilesHelper\n \n     public Path[] getMatchedFiles()\n     {\n-        Path[] files = fileSystem.listFiles( logBaseName.getParent(), getLogFilenameFilter() );\n-        if ( files.length == 0 )\n+        Path[] files = fileSystem.listFiles(logBaseName.getParent(), getLogFilenameFilter());\n+        if (files.length == 0)\n         {\n             return EMPTY_FILES_ARRAY;\n         }\n         return files;\n     }\n \n-    public void accept( LogVersionVisitor visitor )\n+    public void accept(LogVersionVisitor visitor)\n     {\n-        for ( Path file : getMatchedFiles() )\n+        for (Path file : getMatchedFiles())\n         {\n-            visitor.visit( file, getLogVersion( file ) );\n+            visitor.visit(file, getLogVersion(file));\n         }\n     }\n \n@@ -101,18 +102,18 @@ public class TransactionLogFilesHelper\n     {\n         private final Pattern[] patterns;\n \n-        LogicalLogFilenameFilter( String... logFileNameBase )\n+        LogicalLogFilenameFilter(String... logFileNameBase)\n         {\n-            requireNonNull( logFileNameBase );\n-            patterns = Arrays.stream( logFileNameBase ).map( name -> compile( name + REGEX_VERSION_SUFFIX + \".*\" ) ).toArray( Pattern[]::new );\n+            requireNonNull(logFileNameBase);\n+            patterns = Arrays.stream(logFileNameBase).map(name -> compile(name + REGEX_VERSION_SUFFIX + \".*\")).toArray(Pattern[]::new);\n         }\n \n         @Override\n-        public boolean accept( Path entry )\n+        public boolean accept(Path entry)\n         {\n-            for ( Pattern pattern : patterns )\n+            for (Pattern pattern : patterns)\n             {\n-                if ( pattern.matcher( entry.getFileName().toString() ).matches() )\n+                if (pattern.matcher(entry.getFileName().toString()).matches())\n                 {\n                     return true;\n                 }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1461",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1461/ConnectToRandomCoreServerStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1461/ConnectToRandomCoreServerStrategy.java\nindex 00f12454538..7c05b7ead2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1461/ConnectToRandomCoreServerStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1461/ConnectToRandomCoreServerStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.upstream.strategies;\n \n import java.util.Optional;\n@@ -28,29 +29,29 @@ import org.neo4j.causalclustering.upstream.UpstreamDatabaseSelectionException;\n import org.neo4j.causalclustering.upstream.UpstreamDatabaseSelectionStrategy;\n import org.neo4j.helpers.Service;\n \n-@Service.Implementation( UpstreamDatabaseSelectionStrategy.class )\n+@Service.Implementation(UpstreamDatabaseSelectionStrategy.class)\n public class ConnectToRandomCoreServerStrategy extends UpstreamDatabaseSelectionStrategy\n {\n-    public static final String IDENTITY = \"connect-to-random-core-server\";\n-    private final Random random = new Random();\n+  public static final String IDENTITY = \"connect-to-random-core-server\";\n+  private final Random random = new Random();\n \n-    public ConnectToRandomCoreServerStrategy()\n-    {\n-        super( IDENTITY );\n-    }\n+  public ConnectToRandomCoreServerStrategy()\n+  {\n+    super(IDENTITY);\n+  }\n \n-    @Override\n-    public Optional<MemberId> upstreamDatabase() throws UpstreamDatabaseSelectionException\n-    {\n-        final CoreTopology coreTopology = topologyService.localCoreServers();\n+  @Override\n+  public Optional<MemberId> upstreamDatabase() throws UpstreamDatabaseSelectionException\n+  {\n+    final CoreTopology coreTopology = topologyService.localCoreServers();\n \n-        if ( coreTopology.members().size() == 0 )\n-        {\n-            throw new UpstreamDatabaseSelectionException( \"No core servers available\" );\n-        }\n+    if (coreTopology.members().size() == 0)\n+    {\n+      throw new UpstreamDatabaseSelectionException(\"No core servers available\");\n+    }\n \n-        int skippedServers = random.nextInt( coreTopology.members().size() );\n+    int skippedServers = random.nextInt(coreTopology.members().size());\n \n-        return coreTopology.members().keySet().stream().skip( skippedServers ).findFirst();\n-    }\n+    return coreTopology.members().keySet().stream().skip(skippedServers).findFirst();\n+  }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1461/ConnectToRandomCoreServerStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1461/ConnectToRandomCoreServerStrategy.java\nindex 00f12454538..17b3fe2a47c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1461/ConnectToRandomCoreServerStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1461/ConnectToRandomCoreServerStrategy.java\n@@ -43,14 +43,12 @@ public class ConnectToRandomCoreServerStrategy extends UpstreamDatabaseSelection\n     public Optional<MemberId> upstreamDatabase() throws UpstreamDatabaseSelectionException\n     {\n         final CoreTopology coreTopology = topologyService.localCoreServers();\n-\n-        if ( coreTopology.members().size() == 0 )\n+if ( coreTopology.members().size() == 0 )\n         {\n             throw new UpstreamDatabaseSelectionException( \"No core servers available\" );\n         }\n \n         int skippedServers = random.nextInt( coreTopology.members().size() );\n-\n-        return coreTopology.members().keySet().stream().skip( skippedServers ).findFirst();\n+return coreTopology.members().keySet().stream().skip( skippedServers ).findFirst();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2281",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2281/NodePropertyExistenceException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2281/NodePropertyExistenceException.java\nindex cfb421a8646..20f6d927320 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2281/NodePropertyExistenceException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2281/NodePropertyExistenceException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.exceptions.schema;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -29,25 +30,25 @@ import static java.lang.String.format;\n \n public class NodePropertyExistenceException extends ConstraintValidationException\n {\n-    private final long nodeId;\n-    private final LabelSchemaDescriptor schema;\n+  private final long nodeId;\n+  private final LabelSchemaDescriptor schema;\n \n-    public NodePropertyExistenceException( LabelSchemaDescriptor schema,\n-            ConstraintValidationException.Phase phase, long nodeId )\n-    {\n-        super( ConstraintDescriptorFactory.existsForSchema( schema ),\n-                phase, format( \"Node(%d)\", nodeId ) );\n-        this.schema = schema;\n-        this.nodeId = nodeId;\n-    }\n+  public NodePropertyExistenceException(LabelSchemaDescriptor schema,\n+                                        ConstraintValidationException.Phase phase, long nodeId)\n+  {\n+    super(ConstraintDescriptorFactory.existsForSchema(schema),\n+        phase, format(\"Node(%d)\", nodeId));\n+    this.schema = schema;\n+    this.nodeId = nodeId;\n+  }\n \n-    @Override\n-    public String getUserMessage( TokenNameLookup tokenNameLookup )\n-    {\n-        String propertyNoun = (schema.getPropertyIds().length > 1) ? \"properties\" : \"property\";\n-        return format( \"Node(%d) with label `%s` must have the %s `%s`\",\n-                nodeId,\n-                tokenNameLookup.labelGetName( schema.getLabelId() ), propertyNoun,\n-                SchemaUtil.niceProperties( tokenNameLookup, schema.getPropertyIds() ) );\n-    }\n+  @Override\n+  public String getUserMessage(TokenNameLookup tokenNameLookup)\n+  {\n+    String propertyNoun = (schema.getPropertyIds().length > 1) ? \"properties\" : \"property\";\n+    return format(\"Node(%d) with label `%s` must have the %s `%s`\",\n+        nodeId,\n+        tokenNameLookup.labelGetName(schema.getLabelId()), propertyNoun,\n+        SchemaUtil.niceProperties(tokenNameLookup, schema.getPropertyIds()));\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "62",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2281/NodePropertyExistenceException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2281/NodePropertyExistenceException.java\nindex cfb421a8646..b71cafe1fd5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2281/NodePropertyExistenceException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2281/NodePropertyExistenceException.java\n@@ -37,17 +37,17 @@ public class NodePropertyExistenceException extends ConstraintValidationExceptio\n     {\n         super( ConstraintDescriptorFactory.existsForSchema( schema ),\n                 phase, format( \"Node(%d)\", nodeId ) );\n-        this.schema = schema;\n+this.schema = schema;\n         this.nodeId = nodeId;\n     }\n \n     @Override\n     public String getUserMessage( TokenNameLookup tokenNameLookup )\n     {\n-        String propertyNoun = (schema.getPropertyIds().length > 1) ? \"properties\" : \"property\";\n+        String propertyNoun = (schema.getPropertyIds().length> 1) ? \"properties\" : \"property\";\n         return format( \"Node(%d) with label `%s` must have the %s `%s`\",\n                 nodeId,\n                 tokenNameLookup.labelGetName( schema.getLabelId() ), propertyNoun,\n                 SchemaUtil.niceProperties( tokenNameLookup, schema.getPropertyIds() ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
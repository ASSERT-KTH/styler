{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "982",
    "information": {
        "errors": [
            {
                "line": "496",
                "column": "45",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork()))\n        .name(interfacePb.getName());\n    if (interfacePb.getSubnetwork() != null){\n      builder.subnetwork(SubnetworkId.fromUrl(interfacePb.getSubnetwork()));\n    }\n    builder.networkIp(interfacePb.getNetworkIP());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/982/NetworkInterface.java\nindex cf937de68ed..8226eae7b56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/982/NetworkInterface.java\n@@ -493,7 +493,7 @@ public class NetworkInterface implements Serializable {\n       com.google.api.services.compute.model.NetworkInterface interfacePb) {\n     Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork()))\n         .name(interfacePb.getName());\n-    if (interfacePb.getSubnetwork() != null){\n+    if (interfacePb.getSubnetwork() != null) {\n       builder.subnetwork(SubnetworkId.fromUrl(interfacePb.getSubnetwork()));\n     }\n     builder.networkIp(interfacePb.getNetworkIP());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/982/NetworkInterface.java\nindex cf937de68ed..37498827bab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/982/NetworkInterface.java\n@@ -34,7 +34,7 @@ import java.util.Objects;\n  * internet.\n  *\n  * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network\">Configuring an\n- *     Instance's IP Addresses</a>\n+ * Instance's IP Addresses</a>\n  */\n public class NetworkInterface implements Serializable {\n \n@@ -73,9 +73,9 @@ public class NetworkInterface implements Serializable {\n    * Compute Engine instances.\n    *\n    * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#reservedaddress\">\n-   *     Static external IP addresses</a>\n+   * Static external IP addresses</a>\n    * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n-   *     Ephemeral external IP addresses</a>\n+   * Ephemeral external IP addresses</a>\n    */\n   public static final class AccessConfig implements Serializable {\n \n@@ -116,7 +116,8 @@ public class NetworkInterface implements Serializable {\n       private String natIp;\n       private Type type;\n \n-      private Builder() {}\n+      private Builder() {\n+      }\n \n       private Builder(AccessConfig accessConfig) {\n         this.name = accessConfig.name;\n@@ -139,10 +140,10 @@ public class NetworkInterface implements Serializable {\n        * must live in the same region as the zone of the instance.\n        *\n        * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#reservedaddress\">\n-       *     Ephemeral external IP addresses</a>\n+       * Ephemeral external IP addresses</a>\n        * @see <a\n-       *     href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n-       *     Ephemeral external IP addresses</a>\n+       * href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n+       * Ephemeral external IP addresses</a>\n        */\n       public Builder natIp(String natIp) {\n         this.natIp = natIp;\n@@ -244,7 +245,7 @@ public class NetworkInterface implements Serializable {\n      * Returns an {@code AccessConfig} object given the static external IP address.\n      *\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#reservedaddress\">\n-     *     Static external IP addresses</a>\n+     * Static external IP addresses</a>\n      */\n     public static AccessConfig of(String natIp) {\n       return builder().natIp(natIp).build();\n@@ -255,7 +256,7 @@ public class NetworkInterface implements Serializable {\n      * taken from a pool of ephemeral addresses.\n      *\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n-     *     Ephemeral external IP addresses</a>\n+     * Ephemeral external IP addresses</a>\n      */\n     public static AccessConfig of() {\n       return builder().build();\n@@ -327,9 +328,9 @@ public class NetworkInterface implements Serializable {\n      * instances. At the moment, network interfaces only support one access configuration.\n      *\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#reservedaddress\">\n-     *     Static external IP addresses</a>\n+     * Static external IP addresses</a>\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n-     *     Ephemeral external IP addresses</a>\n+     * Ephemeral external IP addresses</a>\n      */\n     public Builder accessConfigurations(List<AccessConfig> accessConfigurations) {\n       this.accessConfigurations = ImmutableList.copyOf(accessConfigurations);\n@@ -342,9 +343,9 @@ public class NetworkInterface implements Serializable {\n      * instances. At the moment, network interfaces only support one access configuration.\n      *\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#reservedaddress\">\n-     *     Static external IP addresses</a>\n+     * Static external IP addresses</a>\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n-     *     Ephemeral external IP addresses</a>\n+     * Ephemeral external IP addresses</a>\n      */\n     public Builder accessConfigurations(AccessConfig... accessConfigurations) {\n       accessConfigurations(Arrays.asList(accessConfigurations));\n@@ -493,7 +494,7 @@ public class NetworkInterface implements Serializable {\n       com.google.api.services.compute.model.NetworkInterface interfacePb) {\n     Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork()))\n         .name(interfacePb.getName());\n-    if (interfacePb.getSubnetwork() != null){\n+    if (interfacePb.getSubnetwork() != null) {\n       builder.subnetwork(SubnetworkId.fromUrl(interfacePb.getSubnetwork()));\n     }\n     builder.networkIp(interfacePb.getNetworkIP());\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "358",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "488",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/982/NetworkInterface.java\nindex cf937de68ed..a051970c1a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/982/NetworkInterface.java\n@@ -38,21 +38,17 @@ import java.util.Objects;\n  */\n public class NetworkInterface implements Serializable {\n \n-  static final Function<com.google.api.services.compute.model.NetworkInterface, NetworkInterface>\n-      FROM_PB_FUNCTION =\n-      new Function<com.google.api.services.compute.model.NetworkInterface,\n-          NetworkInterface>() {\n-        @Override\n+  static final Function<com.google.api.services.compute.model.NetworkInterface, NetworkInterface> FROM_PB_FUNCTION = new Function<com.google.api.services.compute.model.NetworkInterface, NetworkInterface>() {\n+  @Override\n         public NetworkInterface apply(\n             com.google.api.services.compute.model.NetworkInterface pb) {\n           return NetworkInterface.fromPb(pb);\n         }\n       };\n-  static final Function<NetworkInterface, com.google.api.services.compute.model.NetworkInterface>\n-      TO_PB_FUNCTION =\n-      new Function<NetworkInterface,\n+\n+    static final Function<NetworkInterface, com.google.api.services.compute.model.NetworkInterface> TO_PB_FUNCTION = new Function<NetworkInterface,\n           com.google.api.services.compute.model.NetworkInterface>() {\n-        @Override\n+  @Override\n         public com.google.api.services.compute.model.NetworkInterface apply(\n             NetworkInterface networkInterface) {\n           return networkInterface.toPb();\n@@ -79,17 +75,14 @@ public class NetworkInterface implements Serializable {\n    */\n   public static final class AccessConfig implements Serializable {\n \n-    static final Function<com.google.api.services.compute.model.AccessConfig, AccessConfig>\n-        FROM_PB_FUNCTION =\n-        new Function<com.google.api.services.compute.model.AccessConfig, AccessConfig>() {\n+    static final Function<com.google.api.services.compute.model.AccessConfig, AccessConfig> FROM_PB_FUNCTION = new Function<com.google.api.services.compute.model.AccessConfig, AccessConfig>() {\n           @Override\n           public AccessConfig apply(com.google.api.services.compute.model.AccessConfig pb) {\n             return AccessConfig.fromPb(pb);\n           }\n         };\n-    static final Function<AccessConfig, com.google.api.services.compute.model.AccessConfig>\n-        TO_PB_FUNCTION =\n-        new Function<AccessConfig, com.google.api.services.compute.model.AccessConfig>() {\n+\n+    static final Function<AccessConfig, com.google.api.services.compute.model.AccessConfig> TO_PB_FUNCTION = new Function<AccessConfig, com.google.api.services.compute.model.AccessConfig>() {\n           @Override\n           public com.google.api.services.compute.model.AccessConfig apply(\n               AccessConfig instance) {\n@@ -217,9 +210,7 @@ public class NetworkInterface implements Serializable {\n \n     @Override\n     public boolean equals(Object obj) {\n-      return obj == this\n-          || obj instanceof AccessConfig\n-          && Objects.equals(toPb(), ((AccessConfig) obj).toPb());\n+      return obj == this || obj instanceof AccessConfig && Objects.equals(toPb(), ((AccessConfig) obj).toPb());\n     }\n \n     com.google.api.services.compute.model.AccessConfig toPb() {\n@@ -364,8 +355,7 @@ public class NetworkInterface implements Serializable {\n     this.network = builder.network;\n     this.networkIp = builder.networkIp;\n     this.subnetwork = builder.subnetwork;\n-    this.accessConfigurations = builder.accessConfigurations != null\n-        ? builder.accessConfigurations : ImmutableList.<AccessConfig>of();\n+    this.accessConfigurations = builder.accessConfigurations != null ? builder.accessConfigurations : ImmutableList.<AccessConfig>of();\n   }\n \n   /**\n@@ -430,9 +420,7 @@ public class NetworkInterface implements Serializable {\n \n   @Override\n   public final boolean equals(Object obj) {\n-    return obj == this\n-        || obj != null\n-        && obj.getClass().equals(NetworkInterface.class)\n+    return obj == this || obj != null && obj.getClass().equals(NetworkInterface.class)\n         && Objects.equals(toPb(), ((NetworkInterface) obj).toPb());\n   }\n \n@@ -493,13 +481,11 @@ public class NetworkInterface implements Serializable {\n       com.google.api.services.compute.model.NetworkInterface interfacePb) {\n     Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork()))\n         .name(interfacePb.getName());\n-    if (interfacePb.getSubnetwork() != null){\n+    if (interfacePb.getSubnetwork() != null) {\n       builder.subnetwork(SubnetworkId.fromUrl(interfacePb.getSubnetwork()));\n     }\n     builder.networkIp(interfacePb.getNetworkIP());\n-    builder.accessConfigurations(interfacePb.getAccessConfigs() != null\n-        ? Lists.transform(interfacePb.getAccessConfigs(), AccessConfig.FROM_PB_FUNCTION) :\n-        ImmutableList.<AccessConfig>of());\n+    builder.accessConfigurations(interfacePb.getAccessConfigs() != null ? Lists.transform(interfacePb.getAccessConfigs(), AccessConfig.FROM_PB_FUNCTION) : ImmutableList.<AccessConfig>of());\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "365",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "420",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "431",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "432",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "436",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "444",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "490",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "491",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "496",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/982/NetworkInterface.java\nindex cf937de68ed..56bb4a362ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/982/NetworkInterface.java\n@@ -22,7 +22,6 @@ import com.google.common.base.Function;\n import com.google.common.base.MoreObjects;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n-\n import java.io.Serializable;\n import java.util.Arrays;\n import java.util.List;\n@@ -36,31 +35,24 @@ import java.util.Objects;\n  * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network\">Configuring an\n  *     Instance's IP Addresses</a>\n  */\n+\n+\n public class NetworkInterface implements Serializable {\n \n-  static final Function<com.google.api.services.compute.model.NetworkInterface, NetworkInterface>\n-      FROM_PB_FUNCTION =\n-      new Function<com.google.api.services.compute.model.NetworkInterface,\n-          NetworkInterface>() {\n-        @Override\n-        public NetworkInterface apply(\n-            com.google.api.services.compute.model.NetworkInterface pb) {\n-          return NetworkInterface.fromPb(pb);\n-        }\n-      };\n-  static final Function<NetworkInterface, com.google.api.services.compute.model.NetworkInterface>\n-      TO_PB_FUNCTION =\n-      new Function<NetworkInterface,\n-          com.google.api.services.compute.model.NetworkInterface>() {\n-        @Override\n-        public com.google.api.services.compute.model.NetworkInterface apply(\n-            NetworkInterface networkInterface) {\n-          return networkInterface.toPb();\n-        }\n-      };\n+  static final Function<com.google.api.services.compute.model.NetworkInterface, NetworkInterface> FROM_PB_FUNCTION = new Function<com.google.api.services.compute.model.NetworkInterface, NetworkInterface>() {\n+@Override\n+public NetworkInterface apply(com.google.api.services.compute.model.NetworkInterface pb) {\n+  return NetworkInterface.fromPb(pb);\n+}\n+};\n \n+  static final Function<NetworkInterface, com.google.api.services.compute.model.NetworkInterface> TO_PB_FUNCTION = new Function<NetworkInterface, com.google.api.services.compute.model.NetworkInterface>() {\n+@Override\n+public com.google.api.services.compute.model.NetworkInterface apply(NetworkInterface networkInterface) {\n+  return networkInterface.toPb();\n+}\n+};\n   private static final long serialVersionUID = 936741262053605581L;\n-\n   private final String name;\n   private final NetworkId network;\n   private final String networkIp;\n@@ -77,28 +69,23 @@ public class NetworkInterface implements Serializable {\n    * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n    *     Ephemeral external IP addresses</a>\n    */\n+\n   public static final class AccessConfig implements Serializable {\n \n-    static final Function<com.google.api.services.compute.model.AccessConfig, AccessConfig>\n-        FROM_PB_FUNCTION =\n-        new Function<com.google.api.services.compute.model.AccessConfig, AccessConfig>() {\n-          @Override\n-          public AccessConfig apply(com.google.api.services.compute.model.AccessConfig pb) {\n-            return AccessConfig.fromPb(pb);\n-          }\n-        };\n-    static final Function<AccessConfig, com.google.api.services.compute.model.AccessConfig>\n-        TO_PB_FUNCTION =\n-        new Function<AccessConfig, com.google.api.services.compute.model.AccessConfig>() {\n-          @Override\n-          public com.google.api.services.compute.model.AccessConfig apply(\n-              AccessConfig instance) {\n-            return instance.toPb();\n-          }\n-        };\n+    static final Function<com.google.api.services.compute.model.AccessConfig, AccessConfig> FROM_PB_FUNCTION = new Function<com.google.api.services.compute.model.AccessConfig, AccessConfig>() {\n+@Override\n+public AccessConfig apply(com.google.api.services.compute.model.AccessConfig pb) {\n+  return AccessConfig.fromPb(pb);\n+}\n+};\n \n+    static final Function<AccessConfig, com.google.api.services.compute.model.AccessConfig> TO_PB_FUNCTION = new Function<AccessConfig, com.google.api.services.compute.model.AccessConfig>() {\n+@Override\n+public com.google.api.services.compute.model.AccessConfig apply(AccessConfig instance) {\n+  return instance.toPb();\n+}\n+};\n     private static final long serialVersionUID = -5438060668934041567L;\n-\n     private final String name;\n     private final String natIp;\n     private final Type type;\n@@ -106,7 +93,9 @@ public class NetworkInterface implements Serializable {\n     /**\n      * The type of network access configuration. The only supported value is {@code ONE_TO_ONE_NAT}.\n      */\n+\n     public enum Type {\n+\n       ONE_TO_ONE_NAT\n     }\n \n@@ -127,6 +116,7 @@ public class NetworkInterface implements Serializable {\n       /**\n        * Sets the name of the access configuration.\n        */\n+\n       public Builder name(String name) {\n         this.name = name;\n         return this;\n@@ -144,6 +134,7 @@ public class NetworkInterface implements Serializable {\n        *     href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n        *     Ephemeral external IP addresses</a>\n        */\n+\n       public Builder natIp(String natIp) {\n         this.natIp = natIp;\n         return this;\n@@ -153,6 +144,7 @@ public class NetworkInterface implements Serializable {\n        * Sets the type of the access configuration. The only supported value is\n        * {@link Type#ONE_TO_ONE_NAT}.\n        */\n+\n       public Builder type(Type type) {\n         this.type = type;\n         return this;\n@@ -161,6 +153,7 @@ public class NetworkInterface implements Serializable {\n       /**\n        * Creates an {@code AccessConfig} object.\n        */\n+\n       public AccessConfig build() {\n         return new AccessConfig(this);\n       }\n@@ -175,6 +168,7 @@ public class NetworkInterface implements Serializable {\n     /**\n      * Returns the name of the access configuration.\n      */\n+\n     public String name() {\n       return name;\n     }\n@@ -182,6 +176,7 @@ public class NetworkInterface implements Serializable {\n     /**\n      * Returns an external IP address associated with this instance.\n      */\n+\n     public String natIp() {\n       return natIp;\n     }\n@@ -190,6 +185,7 @@ public class NetworkInterface implements Serializable {\n      * Returns the type of network access configuration. The only supported value is\n      * {@link Type#ONE_TO_ONE_NAT}.\n      */\n+\n     public Type type() {\n       return type;\n     }\n@@ -197,17 +193,14 @@ public class NetworkInterface implements Serializable {\n     /**\n      * Returns a builder for the current access configuration.\n      */\n+\n     public Builder toBuilder() {\n       return new Builder(this);\n     }\n \n     @Override\n     public String toString() {\n-      return MoreObjects.toStringHelper(this)\n-          .add(\"name\", name)\n-          .add(\"natIp\", natIp)\n-          .add(\"type\", type)\n-          .toString();\n+      return MoreObjects.toStringHelper(this).add(\"name\", name).add(\"natIp\", natIp).add(\"type\", type).toString();\n     }\n \n     @Override\n@@ -217,14 +210,11 @@ public class NetworkInterface implements Serializable {\n \n     @Override\n     public boolean equals(Object obj) {\n-      return obj == this\n-          || obj instanceof AccessConfig\n-          && Objects.equals(toPb(), ((AccessConfig) obj).toPb());\n+      return obj == this || obj instanceof AccessConfig && Objects.equals(toPb(), ((AccessConfig) obj).toPb());\n     }\n \n     com.google.api.services.compute.model.AccessConfig toPb() {\n-      com.google.api.services.compute.model.AccessConfig accessConfigPb =\n-          new com.google.api.services.compute.model.AccessConfig();\n+      com.google.api.services.compute.model.AccessConfig accessConfigPb = new com.google.api.services.compute.model.AccessConfig();\n       accessConfigPb.setName(name);\n       accessConfigPb.setNatIP(natIp);\n       if (type != null) {\n@@ -236,6 +226,7 @@ public class NetworkInterface implements Serializable {\n     /**\n      * Returns a builder for an {@code AccessConfig} object.\n      */\n+\n     public static Builder builder() {\n       return new Builder();\n     }\n@@ -246,6 +237,7 @@ public class NetworkInterface implements Serializable {\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#reservedaddress\">\n      *     Static external IP addresses</a>\n      */\n+\n     public static AccessConfig of(String natIp) {\n       return builder().natIp(natIp).build();\n     }\n@@ -257,6 +249,7 @@ public class NetworkInterface implements Serializable {\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n      *     Ephemeral external IP addresses</a>\n      */\n+\n     public static AccessConfig of() {\n       return builder().build();\n     }\n@@ -302,6 +295,7 @@ public class NetworkInterface implements Serializable {\n     /**\n      * Sets the identity of the network this interface applies to.\n      */\n+\n     public Builder network(NetworkId network) {\n       this.network = checkNotNull(network);\n       return this;\n@@ -316,6 +310,7 @@ public class NetworkInterface implements Serializable {\n      * Sets the identity of the subnetwork this interface applies to. Setting the subnetwork is\n      * not necessary when the network is in \"automatic subnet mode\".\n      */\n+\n     public Builder subnetwork(SubnetworkId subnetwork) {\n       this.subnetwork = subnetwork;\n       return this;\n@@ -331,6 +326,7 @@ public class NetworkInterface implements Serializable {\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n      *     Ephemeral external IP addresses</a>\n      */\n+\n     public Builder accessConfigurations(List<AccessConfig> accessConfigurations) {\n       this.accessConfigurations = ImmutableList.copyOf(accessConfigurations);\n       return this;\n@@ -346,6 +342,7 @@ public class NetworkInterface implements Serializable {\n      * @see <a href=\"https://cloud.google.com/compute/docs/instances-and-network#ephemeraladdress\">\n      *     Ephemeral external IP addresses</a>\n      */\n+\n     public Builder accessConfigurations(AccessConfig... accessConfigurations) {\n       accessConfigurations(Arrays.asList(accessConfigurations));\n       return this;\n@@ -354,6 +351,7 @@ public class NetworkInterface implements Serializable {\n     /**\n      * Creates a {@code NetworkInterface} object.\n      */\n+\n     public NetworkInterface build() {\n       return new NetworkInterface(this);\n     }\n@@ -364,14 +362,14 @@ public class NetworkInterface implements Serializable {\n     this.network = builder.network;\n     this.networkIp = builder.networkIp;\n     this.subnetwork = builder.subnetwork;\n-    this.accessConfigurations = builder.accessConfigurations != null\n-        ? builder.accessConfigurations : ImmutableList.<AccessConfig>of();\n+    this.accessConfigurations = builder.accessConfigurations != null ? builder.accessConfigurations : ImmutableList.<AccessConfig>of();\n   }\n \n   /**\n    * Returns the name of the network interface, generated by the service. For network devices,\n    * these are {@code eth0}, {@code eth1}, etc.\n    */\n+\n   public String name() {\n     return name;\n   }\n@@ -379,6 +377,7 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns the identity of the network this interface applies to.\n    */\n+\n   public NetworkId network() {\n     return network;\n   }\n@@ -387,6 +386,7 @@ public class NetworkInterface implements Serializable {\n    * An optional IPv4 internal network address assigned by the service to the instance for this\n    * network interface.\n    */\n+\n   public String networkIp() {\n     return networkIp;\n   }\n@@ -394,6 +394,7 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns the identity of the subnetwork this interface applies to.\n    */\n+\n   public SubnetworkId subnetwork() {\n     return subnetwork;\n   }\n@@ -401,6 +402,7 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns a list of access configurations for the network interface.\n    */\n+\n   public List<AccessConfig> accessConfigurations() {\n     return accessConfigurations;\n   }\n@@ -408,19 +410,14 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns a builder for the current network interface.\n    */\n+\n   public Builder toBuilder() {\n     return new Builder(this);\n   }\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"name\", name)\n-        .add(\"network\", network)\n-        .add(\"networkIp\", networkIp)\n-        .add(\"subnetwork\", subnetwork)\n-        .add(\"accessConfigurations\", accessConfigurations)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"name\", name).add(\"network\", network).add(\"networkIp\", networkIp).add(\"subnetwork\", subnetwork).add(\"accessConfigurations\", accessConfigurations).toString();\n   }\n \n   @Override\n@@ -430,15 +427,13 @@ public class NetworkInterface implements Serializable {\n \n   @Override\n   public final boolean equals(Object obj) {\n-    return obj == this\n-        || obj != null\n-        && obj.getClass().equals(NetworkInterface.class)\n-        && Objects.equals(toPb(), ((NetworkInterface) obj).toPb());\n+    return obj == this || obj != null\n+    && obj.getClass().equals(NetworkInterface.class)\n+    && Objects.equals(toPb(), ((NetworkInterface) obj).toPb());\n   }\n \n   com.google.api.services.compute.model.NetworkInterface toPb() {\n-    com.google.api.services.compute.model.NetworkInterface interfacePb =\n-        new com.google.api.services.compute.model.NetworkInterface();\n+    com.google.api.services.compute.model.NetworkInterface interfacePb = new com.google.api.services.compute.model.NetworkInterface();\n     interfacePb.setName(name);\n     interfacePb.setNetwork(network.selfLink());\n     if (subnetwork != null) {\n@@ -446,8 +441,7 @@ public class NetworkInterface implements Serializable {\n     }\n     interfacePb.setNetworkIP(networkIp);\n     if (accessConfigurations != null) {\n-      interfacePb.setAccessConfigs(\n-          Lists.transform(accessConfigurations, AccessConfig.TO_PB_FUNCTION));\n+      interfacePb.setAccessConfigs(Lists.transform(accessConfigurations, AccessConfig.TO_PB_FUNCTION));\n     }\n     return interfacePb;\n   }\n@@ -464,6 +458,7 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns a builder for a {@code NetworkInterface} object given the network's identity.\n    */\n+\n   public static Builder builder(NetworkId networkId) {\n     return new Builder(networkId);\n   }\n@@ -471,6 +466,7 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns a builder for a {@code NetworkInterface} object given the network's name.\n    */\n+\n   public static Builder builder(String network) {\n     return builder(NetworkId.of(network));\n   }\n@@ -478,6 +474,7 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns a {@code NetworkInterface} object given the network's identity.\n    */\n+\n   public static NetworkInterface of(NetworkId networkId) {\n     return builder(networkId).build();\n   }\n@@ -485,21 +482,18 @@ public class NetworkInterface implements Serializable {\n   /**\n    * Returns a {@code NetworkInterface} object given the network's name.\n    */\n+\n   public static NetworkInterface of(String network) {\n     return builder(network).build();\n   }\n \n-  static NetworkInterface fromPb(\n-      com.google.api.services.compute.model.NetworkInterface interfacePb) {\n-    Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork()))\n-        .name(interfacePb.getName());\n-    if (interfacePb.getSubnetwork() != null){\n+  static NetworkInterface fromPb(com.google.api.services.compute.model.NetworkInterface interfacePb) {\n+    Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork())).name(interfacePb.getName());\n+    if (interfacePb.getSubnetwork() != null) {\n       builder.subnetwork(SubnetworkId.fromUrl(interfacePb.getSubnetwork()));\n     }\n     builder.networkIp(interfacePb.getNetworkIP());\n-    builder.accessConfigurations(interfacePb.getAccessConfigs() != null\n-        ? Lists.transform(interfacePb.getAccessConfigs(), AccessConfig.FROM_PB_FUNCTION) :\n-        ImmutableList.<AccessConfig>of());\n+    builder.accessConfigurations(interfacePb.getAccessConfigs() != null ? Lists.transform(interfacePb.getAccessConfigs(), AccessConfig.FROM_PB_FUNCTION) : ImmutableList.<AccessConfig>of());\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 119
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/982/NetworkInterface.java\nindex cf937de68ed..8226eae7b56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/982/NetworkInterface.java\n@@ -493,7 +493,7 @@ public class NetworkInterface implements Serializable {\n       com.google.api.services.compute.model.NetworkInterface interfacePb) {\n     Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork()))\n         .name(interfacePb.getName());\n-    if (interfacePb.getSubnetwork() != null){\n+    if (interfacePb.getSubnetwork() != null) {\n       builder.subnetwork(SubnetworkId.fromUrl(interfacePb.getSubnetwork()));\n     }\n     builder.networkIp(interfacePb.getNetworkIP());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/982/NetworkInterface.java\nindex cf937de68ed..8226eae7b56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/982/NetworkInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/982/NetworkInterface.java\n@@ -493,7 +493,7 @@ public class NetworkInterface implements Serializable {\n       com.google.api.services.compute.model.NetworkInterface interfacePb) {\n     Builder builder = builder(NetworkId.fromUrl(interfacePb.getNetwork()))\n         .name(interfacePb.getName());\n-    if (interfacePb.getSubnetwork() != null){\n+    if (interfacePb.getSubnetwork() != null) {\n       builder.subnetwork(SubnetworkId.fromUrl(interfacePb.getSubnetwork()));\n     }\n     builder.networkIp(interfacePb.getNetworkIP());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
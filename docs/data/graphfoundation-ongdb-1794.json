{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1794",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1794/FailureStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1794/FailureStorage.java\nindex c46cedae7d1..7bf21321df6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1794/FailureStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1794/FailureStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.storage;\n \n import java.io.File;\n@@ -35,154 +36,152 @@ import org.neo4j.string.UTF8;\n  */\n public class FailureStorage\n {\n-    private static final int MAX_FAILURE_SIZE = 16384;\n-    public static final String DEFAULT_FAILURE_FILE_NAME = \"failure-message\";\n-\n-    private final FileSystemAbstraction fs;\n-    private final FolderLayout folderLayout;\n-    private final String failureFileName;\n-\n-    /**\n-     * @param failureFileName name of failure files to be created\n-     * @param folderLayout describing where failure files should be stored\n-     */\n-    public FailureStorage( FileSystemAbstraction fs, FolderLayout folderLayout, String failureFileName )\n+  private static final int MAX_FAILURE_SIZE = 16384;\n+  public static final String DEFAULT_FAILURE_FILE_NAME = \"failure-message\";\n+\n+  private final FileSystemAbstraction fs;\n+  private final FolderLayout folderLayout;\n+  private final String failureFileName;\n+\n+  /**\n+   * @param failureFileName name of failure files to be created\n+   * @param folderLayout    describing where failure files should be stored\n+   */\n+  public FailureStorage(FileSystemAbstraction fs, FolderLayout folderLayout, String failureFileName)\n+  {\n+    this.fs = fs;\n+    this.folderLayout = folderLayout;\n+    this.failureFileName = failureFileName;\n+  }\n+\n+  public FailureStorage(FileSystemAbstraction fs, FolderLayout folderLayout)\n+  {\n+    this(fs, folderLayout, DEFAULT_FAILURE_FILE_NAME);\n+  }\n+\n+  /**\n+   * Create/reserve an empty failure file for the given indexId.\n+   * <p>\n+   * This will overwrite any pre-existing failure file.\n+   *\n+   * @throws IOException if the failure file could not be created\n+   */\n+  public synchronized void reserveForIndex() throws IOException\n+  {\n+    fs.mkdirs(folderLayout.getIndexFolder());\n+    File failureFile = failureFile();\n+    try (StoreChannel channel = fs.create(failureFile))\n     {\n-        this.fs = fs;\n-        this.folderLayout = folderLayout;\n-        this.failureFileName = failureFileName;\n+      channel.writeAll(ByteBuffer.wrap(new byte[MAX_FAILURE_SIZE]));\n+      channel.force(true);\n     }\n-\n-    public FailureStorage( FileSystemAbstraction fs, FolderLayout folderLayout )\n+  }\n+\n+  /**\n+   * Delete failure file for the given index id\n+   */\n+  public synchronized void clearForIndex()\n+  {\n+    fs.deleteFile(failureFile());\n+  }\n+\n+  /**\n+   * @return the failure, if any. Otherwise {@code null} marking no failure.\n+   */\n+  public synchronized String loadIndexFailure()\n+  {\n+    File failureFile = failureFile();\n+    try\n     {\n-        this( fs, folderLayout, DEFAULT_FAILURE_FILE_NAME );\n-    }\n-\n-    /**\n-     * Create/reserve an empty failure file for the given indexId.\n-     *\n-     * This will overwrite any pre-existing failure file.\n-     *\n-     * @throws IOException if the failure file could not be created\n-     */\n-    public synchronized void reserveForIndex() throws IOException\n+      if (!fs.fileExists(failureFile) || !isFailed(failureFile))\n+      {\n+        return null;\n+      }\n+      return readFailure(failureFile);\n+    } catch (IOException e)\n     {\n-        fs.mkdirs( folderLayout.getIndexFolder() );\n-        File failureFile = failureFile();\n-        try ( StoreChannel channel = fs.create( failureFile ) )\n-        {\n-            channel.writeAll( ByteBuffer.wrap( new byte[MAX_FAILURE_SIZE] ) );\n-            channel.force( true );\n-        }\n+      throw new RuntimeException(e);\n     }\n-\n-    /**\n-     * Delete failure file for the given index id\n-     *\n-     */\n-    public synchronized void clearForIndex()\n+  }\n+\n+  /**\n+   * Store failure in failure file for index with the given id\n+   *\n+   * @param failure message describing the failure that needs to be stored\n+   * @throws IOException if the failure could not be stored\n+   */\n+  public synchronized void storeIndexFailure(String failure) throws IOException\n+  {\n+    File failureFile = failureFile();\n+    try (StoreChannel channel = fs.open(failureFile, OpenMode.READ_WRITE))\n     {\n-        fs.deleteFile( failureFile() );\n-    }\n+      byte[] existingData = new byte[(int) channel.size()];\n+      channel.readAll(ByteBuffer.wrap(existingData));\n+      channel.position(lengthOf(existingData));\n \n-    /**\n-     * @return the failure, if any. Otherwise {@code null} marking no failure.\n-     */\n-    public synchronized String loadIndexFailure()\n-    {\n-        File failureFile = failureFile();\n-        try\n-        {\n-            if ( !fs.fileExists( failureFile ) || !isFailed( failureFile ) )\n-            {\n-                return null;\n-            }\n-            return readFailure( failureFile );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n+      byte[] data = UTF8.encode(failure);\n+      channel.writeAll(ByteBuffer.wrap(data, 0, Math.min(data.length, MAX_FAILURE_SIZE)));\n \n-    /**\n-     * Store failure in failure file for index with the given id\n-     *\n-     * @param failure message describing the failure that needs to be stored\n-     * @throws IOException if the failure could not be stored\n-     */\n-    public synchronized void storeIndexFailure( String failure ) throws IOException\n-    {\n-        File failureFile = failureFile();\n-        try ( StoreChannel channel = fs.open( failureFile, OpenMode.READ_WRITE ) )\n-        {\n-            byte[] existingData = new byte[(int) channel.size()];\n-            channel.readAll( ByteBuffer.wrap( existingData ) );\n-            channel.position( lengthOf( existingData ) );\n-\n-            byte[] data = UTF8.encode( failure );\n-            channel.writeAll( ByteBuffer.wrap( data, 0, Math.min( data.length, MAX_FAILURE_SIZE ) ) );\n-\n-            channel.force( true );\n-            channel.close();\n-        }\n+      channel.force(true);\n+      channel.close();\n     }\n+  }\n \n-    File failureFile()\n-    {\n-        File folder = folderLayout.getIndexFolder();\n-        return new File( folder, failureFileName );\n-    }\n+  File failureFile()\n+  {\n+    File folder = folderLayout.getIndexFolder();\n+    return new File(folder, failureFileName);\n+  }\n \n-    private String readFailure( File failureFile ) throws IOException\n+  private String readFailure(File failureFile) throws IOException\n+  {\n+    try (StoreChannel channel = fs.open(failureFile, OpenMode.READ))\n     {\n-        try ( StoreChannel channel = fs.open( failureFile, OpenMode.READ ) )\n-        {\n-            byte[] data = new byte[(int) channel.size()];\n-            channel.readAll( ByteBuffer.wrap( data ) );\n-            return UTF8.decode( withoutZeros( data ) );\n-        }\n+      byte[] data = new byte[(int) channel.size()];\n+      channel.readAll(ByteBuffer.wrap(data));\n+      return UTF8.decode(withoutZeros(data));\n     }\n-\n-    private static byte[] withoutZeros( byte[] data )\n-    {\n-        byte[] result = new byte[ lengthOf(data) ];\n-        System.arraycopy( data, 0, result, 0, result.length );\n-        return result;\n-    }\n-\n-    private static int lengthOf( byte[] data )\n+  }\n+\n+  private static byte[] withoutZeros(byte[] data)\n+  {\n+    byte[] result = new byte[lengthOf(data)];\n+    System.arraycopy(data, 0, result, 0, result.length);\n+    return result;\n+  }\n+\n+  private static int lengthOf(byte[] data)\n+  {\n+    for (int i = 0; i < data.length; i++)\n     {\n-        for ( int i = 0; i < data.length; i++ )\n-        {\n-            if ( 0 == data[i] )\n-            {\n-                return i;\n-            }\n-        }\n-        return data.length;\n+      if (0 == data[i])\n+      {\n+        return i;\n+      }\n     }\n+    return data.length;\n+  }\n \n-    private boolean isFailed( File failureFile ) throws IOException\n+  private boolean isFailed(File failureFile) throws IOException\n+  {\n+    try (StoreChannel channel = fs.open(failureFile, OpenMode.READ))\n     {\n-        try ( StoreChannel channel = fs.open( failureFile, OpenMode.READ ) )\n-        {\n-            byte[] data = new byte[(int) channel.size()];\n-            channel.readAll( ByteBuffer.wrap( data ) );\n-            channel.close();\n-            return !allZero( data );\n-        }\n+      byte[] data = new byte[(int) channel.size()];\n+      channel.readAll(ByteBuffer.wrap(data));\n+      channel.close();\n+      return !allZero(data);\n     }\n+  }\n \n-    private static boolean allZero( byte[] data )\n+  private static boolean allZero(byte[] data)\n+  {\n+    for (byte b : data)\n     {\n-        for ( byte b : data )\n-        {\n-            if ( b != 0 )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      if (b != 0)\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n }\n",
            "diff_size": 190
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1794/FailureStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1794/FailureStorage.java\nindex c46cedae7d1..6a424f8b34a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1794/FailureStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1794/FailureStorage.java\n@@ -36,9 +36,9 @@ import org.neo4j.string.UTF8;\n public class FailureStorage\n {\n     private static final int MAX_FAILURE_SIZE = 16384;\n-    public static final String DEFAULT_FAILURE_FILE_NAME = \"failure-message\";\n \n-    private final FileSystemAbstraction fs;\n+public static final String DEFAULT_FAILURE_FILE_NAME = \"failure-message\";\n+private final FileSystemAbstraction fs;\n     private final FolderLayout folderLayout;\n     private final String failureFileName;\n \n@@ -97,7 +97,8 @@ public class FailureStorage\n             {\n                 return null;\n             }\n-            return readFailure( failureFile );\n+\n+return readFailure( failureFile );\n         }\n         catch ( IOException e )\n         {\n@@ -122,8 +123,7 @@ public class FailureStorage\n \n             byte[] data = UTF8.encode( failure );\n             channel.writeAll( ByteBuffer.wrap( data, 0, Math.min( data.length, MAX_FAILURE_SIZE ) ) );\n-\n-            channel.force( true );\n+channel.force( true );\n             channel.close();\n         }\n     }\n@@ -185,4 +185,4 @@ public class FailureStorage\n         }\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
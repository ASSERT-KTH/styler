{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2345",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2345/IterableStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2345/IterableStore.java\nindex 267fbb3e56b..a6eb8e7f2a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2345/IterableStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2345/IterableStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import java.io.IOException;\n@@ -34,55 +35,55 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n \n public class IterableStore<RECORD extends AbstractBaseRecord> implements BoundedIterable<RECORD>\n {\n-    private final RecordStore<RECORD> store;\n-    private final boolean forward;\n-    private ResourceIterator<RECORD> iterator;\n+  private final RecordStore<RECORD> store;\n+  private final boolean forward;\n+  private ResourceIterator<RECORD> iterator;\n \n-    public IterableStore( RecordStore<RECORD> store, boolean forward )\n-    {\n-        this.store = store;\n-        this.forward = forward;\n-    }\n+  public IterableStore(RecordStore<RECORD> store, boolean forward)\n+  {\n+    this.store = store;\n+    this.forward = forward;\n+  }\n \n-    @Override\n-    public long maxCount()\n-    {\n-        return store.getHighId();\n-    }\n+  @Override\n+  public long maxCount()\n+  {\n+    return store.getHighId();\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        closeIterator();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    closeIterator();\n+  }\n \n-    private void closeIterator()\n+  private void closeIterator()\n+  {\n+    if (iterator != null)\n     {\n-        if ( iterator != null )\n-        {\n-            iterator.close();\n-            iterator = null;\n-        }\n+      iterator.close();\n+      iterator = null;\n     }\n+  }\n \n-    @Override\n-    public Iterator<RECORD> iterator()\n-    {\n-        closeIterator();\n-        ResourceIterable<RECORD> iterable = scan( store, forward );\n-        return cloned( iterator = iterable.iterator() );\n-    }\n+  @Override\n+  public Iterator<RECORD> iterator()\n+  {\n+    closeIterator();\n+    ResourceIterable<RECORD> iterable = scan(store, forward);\n+    return cloned(iterator = iterable.iterator());\n+  }\n \n-    public void warmUpCache()\n+  public void warmUpCache()\n+  {\n+    int recordsPerPage = store.getRecordsPerPage();\n+    long id = 0;\n+    long half = store.getHighId() / 2;\n+    RECORD record = store.newRecord();\n+    while (id < half)\n     {\n-        int recordsPerPage = store.getRecordsPerPage();\n-        long id = 0;\n-        long half = store.getHighId() / 2;\n-        RECORD record = store.newRecord();\n-        while ( id < half )\n-        {\n-            store.getRecord( id, record, FORCE );\n-            id += recordsPerPage - 1;\n-        }\n+      store.getRecord(id, record, FORCE);\n+      id += recordsPerPage - 1;\n     }\n+  }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2345/IterableStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2345/IterableStore.java\nindex 267fbb3e56b..de9c81ef99d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2345/IterableStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2345/IterableStore.java\n@@ -85,4 +85,4 @@ public class IterableStore<RECORD extends AbstractBaseRecord> implements Bounded\n             id += recordsPerPage - 1;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
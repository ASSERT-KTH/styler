{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "298",
    "information": {
        "errors": [
            {
                "line": "31",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 149).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import io.swagger.models.parameters.AbstractSerializableParameter;\n\npublic abstract class AbstractSpringmvcSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> extends\n    AbstractSerializableParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n  @Override\n  public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/298/AbstractSpringmvcSerializableParameterProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/298/AbstractSpringmvcSerializableParameterProcessor.java\nindex e9ceb242102..37728fe371b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/298/AbstractSpringmvcSerializableParameterProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/298/AbstractSpringmvcSerializableParameterProcessor.java\n@@ -28,11 +28,12 @@ import io.swagger.models.Operation;\n import io.swagger.models.Swagger;\n import io.swagger.models.parameters.AbstractSerializableParameter;\n \n-public abstract class AbstractSpringmvcSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> extends\n+public abstract class AbstractSpringmvcSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION>\n+    extends\n     AbstractSerializableParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n   @Override\n   public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,\n-      ANNOTATION annotation) {\n+                            ANNOTATION annotation) {\n     super.fillParameter(swagger, operation, parameter, type, annotation);\n \n     Object defaultValue = parameter.getDefaultValue();\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/298/AbstractSpringmvcSerializableParameterProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/298/AbstractSpringmvcSerializableParameterProcessor.java\nindex e9ceb242102..796c188885d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/298/AbstractSpringmvcSerializableParameterProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/298/AbstractSpringmvcSerializableParameterProcessor.java\n@@ -28,8 +28,7 @@ import io.swagger.models.Operation;\n import io.swagger.models.Swagger;\n import io.swagger.models.parameters.AbstractSerializableParameter;\n \n-public abstract class AbstractSpringmvcSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> extends\n-    AbstractSerializableParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n+public abstract class AbstractSpringmvcSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> extends AbstractSerializableParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n   @Override\n   public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,\n       ANNOTATION annotation) {\n@@ -55,4 +54,4 @@ public abstract class AbstractSpringmvcSerializableParameterProcessor<SWAGGER_PA\n   }\n \n   protected abstract String pureReadDefaultValue(ANNOTATION annotation);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
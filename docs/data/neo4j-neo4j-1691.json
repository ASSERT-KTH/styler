{
    "project_name": "neo4j-neo4j",
    "error_id": "1691",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "217",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "313",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "313",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1691/RecordLoading.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1691/RecordLoading.java\nindex 872944cff40..9d94ecf18dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1691/RecordLoading.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1691/RecordLoading.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import org.eclipse.collections.api.collection.primitive.MutableIntCollection;\n@@ -67,20 +68,21 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n  */\n class RecordLoading\n {\n-    static final BiConsumer<Long,DynamicRecord> NO_DYNAMIC_HANDLER = ( id, r ) -> {};\n+    static final BiConsumer<Long, DynamicRecord> NO_DYNAMIC_HANDLER = (id, r) -> {\n+    };\n     private final NeoStores neoStores;\n \n-    RecordLoading( NeoStores neoStores )\n+    RecordLoading(NeoStores neoStores)\n     {\n         this.neoStores = neoStores;\n     }\n \n-    static long[] safeGetNodeLabels( CheckerContext context, long nodeId, long labelField, RecordReader<DynamicRecord> labelReader,\n-            PageCursorTracer cursorTracer )\n+    static long[] safeGetNodeLabels(CheckerContext context, long nodeId, long labelField, RecordReader<DynamicRecord> labelReader,\n+                                    PageCursorTracer cursorTracer)\n     {\n-        if ( !NodeLabelsField.fieldPointsToDynamicRecordOfLabels( labelField ) )\n+        if (!NodeLabelsField.fieldPointsToDynamicRecordOfLabels(labelField))\n         {\n-            return InlineNodeLabels.parseInlined( labelField );\n+            return InlineNodeLabels.parseInlined(labelField);\n         }\n \n         // The idea here is that we don't pass in a lot of cursors and stuff because dynamic labels are so rare?\n@@ -89,28 +91,28 @@ class RecordLoading\n         ConsistencyReport.Reporter reporter = context.reporter;\n         RecordLoading recordLoader = context.recordLoader;\n         int nodeLabelBlockSize = context.neoStores.getNodeStore().getDynamicLabelStore().getRecordDataSize();\n-        if ( safeLoadDynamicRecordChain( record -> records.add( record.copy() ), labelReader, seenRecordIds,\n-                NodeLabelsField.firstDynamicLabelRecordId( labelField ), nodeLabelBlockSize,\n-                ( id, labelRecord ) -> reporter.forNode( recordLoader.node( nodeId, cursorTracer ) ).dynamicRecordChainCycle( labelRecord ),\n-                ( id, labelRecord ) -> reporter.forNode( recordLoader.node( nodeId, cursorTracer ) ).dynamicLabelRecordNotInUse( labelRecord ),\n-                ( id, labelRecord ) -> reporter.forNode( recordLoader.node( nodeId, cursorTracer ) ).dynamicLabelRecordNotInUse( labelRecord ),\n-                ( id, labelRecord ) -> reporter.forDynamicBlock( RecordType.NODE_DYNAMIC_LABEL, labelRecord ).emptyBlock(),\n-                labelRecord -> reporter.forDynamicBlock( RecordType.NODE_DYNAMIC_LABEL, labelRecord ).recordNotFullReferencesNext(),\n-                labelRecord -> reporter.forDynamicBlock( RecordType.NODE_DYNAMIC_LABEL, labelRecord ).invalidLength() ) )\n+        if (safeLoadDynamicRecordChain(record -> records.add(record.copy()), labelReader, seenRecordIds,\n+          NodeLabelsField.firstDynamicLabelRecordId(labelField), nodeLabelBlockSize,\n+          (id, labelRecord) -> reporter.forNode(recordLoader.node(nodeId, cursorTracer)).dynamicRecordChainCycle(labelRecord),\n+          (id, labelRecord) -> reporter.forNode(recordLoader.node(nodeId, cursorTracer)).dynamicLabelRecordNotInUse(labelRecord),\n+          (id, labelRecord) -> reporter.forNode(recordLoader.node(nodeId, cursorTracer)).dynamicLabelRecordNotInUse(labelRecord),\n+          (id, labelRecord) -> reporter.forDynamicBlock(RecordType.NODE_DYNAMIC_LABEL, labelRecord).emptyBlock(),\n+          labelRecord -> reporter.forDynamicBlock(RecordType.NODE_DYNAMIC_LABEL, labelRecord).recordNotFullReferencesNext(),\n+          labelRecord -> reporter.forDynamicBlock(RecordType.NODE_DYNAMIC_LABEL, labelRecord).invalidLength()))\n         {\n-            return DynamicNodeLabels.getDynamicLabelsArray( records, labelReader.store(), cursorTracer );\n+            return DynamicNodeLabels.getDynamicLabelsArray(records, labelReader.store(), cursorTracer);\n         }\n         return null;\n     }\n \n-    private static Value[] matchAllProperties( IntObjectMap<Value> values, int[] propertyKeyIds )\n+    private static Value[] matchAllProperties(IntObjectMap<Value> values, int[] propertyKeyIds)\n     {\n         Value[] array = new Value[propertyKeyIds.length];\n-        for ( int i = 0; i < propertyKeyIds.length; i++ )\n+        for (int i = 0; i < propertyKeyIds.length; i++)\n         {\n             int propertyKeyId = propertyKeyIds[i];\n-            Value value = values.get( propertyKeyId );\n-            if ( value == null )\n+            Value value = values.get(propertyKeyId);\n+            if (value == null)\n             {\n                 return null;\n             }\n@@ -119,18 +121,17 @@ class RecordLoading\n         return array;\n     }\n \n-    private static Value[] matchAnyProperty( IntObjectMap<Value> values, int[] propertyKeyIds )\n+    private static Value[] matchAnyProperty(IntObjectMap<Value> values, int[] propertyKeyIds)\n     {\n         Value[] array = new Value[propertyKeyIds.length];\n         boolean anyFound = false;\n-        for ( int i = 0; i < propertyKeyIds.length; i++ )\n+        for (int i = 0; i < propertyKeyIds.length; i++)\n         {\n-            Value value = values.get( propertyKeyIds[i] );\n-            if ( value != null )\n+            Value value = values.get(propertyKeyIds[i]);\n+            if (value != null)\n             {\n                 anyFound = true;\n-            }\n-            else\n+            } else\n             {\n                 value = NO_VALUE;\n             }\n@@ -139,54 +140,54 @@ class RecordLoading\n         return anyFound ? array : null;\n     }\n \n-    static Value[] entityIntersectionWithSchema( long[] entityTokens, IntObjectMap<Value> values, SchemaDescriptor schema )\n+    static Value[] entityIntersectionWithSchema(long[] entityTokens, IntObjectMap<Value> values, SchemaDescriptor schema)\n     {\n         Value[] valueArray = null;\n-        if ( schema.isAffected( entityTokens ) )\n+        if (schema.isAffected(entityTokens))\n         {\n             boolean requireAllTokens = schema.propertySchemaType() == PropertySchemaType.COMPLETE_ALL_TOKENS;\n-            valueArray = requireAllTokens ? matchAllProperties( values, schema.getPropertyIds() ) : matchAnyProperty( values, schema.getPropertyIds() );\n+            valueArray = requireAllTokens ? matchAllProperties(values, schema.getPropertyIds()) : matchAnyProperty(values, schema.getPropertyIds());\n         }\n         // else this entity should not be in this index. This check is done in a sequential manner elsewhere\n         return valueArray;\n     }\n \n-    NodeRecord node( long id, PageCursorTracer cursorTracer )\n+    NodeRecord node(long id, PageCursorTracer cursorTracer)\n     {\n-        return loadRecord( neoStores.getNodeStore(), id, cursorTracer );\n+        return loadRecord(neoStores.getNodeStore(), id, cursorTracer);\n     }\n \n-    PropertyRecord property( long id, PageCursorTracer cursorTracer )\n+    PropertyRecord property(long id, PageCursorTracer cursorTracer)\n     {\n-        return loadRecord( neoStores.getPropertyStore(), id, cursorTracer );\n+        return loadRecord(neoStores.getPropertyStore(), id, cursorTracer);\n     }\n \n-    RelationshipRecord relationship( long id, PageCursorTracer cursorTracer )\n+    RelationshipRecord relationship(long id, PageCursorTracer cursorTracer)\n     {\n-        return loadRecord( neoStores.getRelationshipStore(), id, cursorTracer );\n+        return loadRecord(neoStores.getRelationshipStore(), id, cursorTracer);\n     }\n \n-    RelationshipRecord relationship( RelationshipRecord into, long id, PageCursorTracer cursorTracer )\n+    RelationshipRecord relationship(RelationshipRecord into, long id, PageCursorTracer cursorTracer)\n     {\n-        return loadRecord( neoStores.getRelationshipStore(), into, id, cursorTracer );\n+        return loadRecord(neoStores.getRelationshipStore(), into, id, cursorTracer);\n     }\n \n-    RelationshipGroupRecord relationshipGroup( long id, PageCursorTracer cursorTracer )\n+    RelationshipGroupRecord relationshipGroup(long id, PageCursorTracer cursorTracer)\n     {\n-        return loadRecord( neoStores.getRelationshipGroupStore(), id, cursorTracer );\n+        return loadRecord(neoStores.getRelationshipGroupStore(), id, cursorTracer);\n     }\n \n-    <RECORD extends AbstractBaseRecord> RECORD loadRecord( RecordStore<RECORD> store, long id, PageCursorTracer cursorTracer )\n+    <RECORD extends AbstractBaseRecord> RECORD loadRecord(RecordStore<RECORD> store, long id, PageCursorTracer cursorTracer)\n     {\n-        return loadRecord( store, store.newRecord(), id, cursorTracer );\n+        return loadRecord(store, store.newRecord(), id, cursorTracer);\n     }\n \n-    <RECORD extends AbstractBaseRecord> RECORD loadRecord( RecordStore<RECORD> store, RECORD record, long id, PageCursorTracer cursorTracer )\n+    <RECORD extends AbstractBaseRecord> RECORD loadRecord(RecordStore<RECORD> store, RECORD record, long id, PageCursorTracer cursorTracer)\n     {\n-        return store.getRecord( id, record, RecordLoad.FORCE, cursorTracer );\n+        return store.getRecord(id, record, RecordLoad.FORCE, cursorTracer);\n     }\n \n-    static <RECORD extends TokenRecord> List<NamedToken> safeLoadTokens( TokenStore<RECORD> tokenStore, PageCursorTracer cursorTracer )\n+    static <RECORD extends TokenRecord> List<NamedToken> safeLoadTokens(TokenStore<RECORD> tokenStore, PageCursorTracer cursorTracer)\n     {\n         long highId = tokenStore.getHighId();\n         List<NamedToken> tokens = new ArrayList<>();\n@@ -194,126 +195,125 @@ class RecordLoading\n         List<DynamicRecord> nameRecords = new ArrayList<>();\n         MutableLongSet seenRecordIds = new LongHashSet();\n         int nameBlockSize = nameStore.getRecordDataSize();\n-        try ( RecordReader<RECORD> tokenReader = new RecordReader<>( tokenStore, cursorTracer );\n-              RecordReader<DynamicRecord> nameReader = new RecordReader<>( nameStore, cursorTracer ) )\n+        try (RecordReader<RECORD> tokenReader = new RecordReader<>(tokenStore, cursorTracer);\n+             RecordReader<DynamicRecord> nameReader = new RecordReader<>(nameStore, cursorTracer))\n         {\n-            for ( long id = 0; id < highId; id++ )\n+            for (long id = 0; id < highId; id++)\n             {\n-                RECORD record = tokenReader.read( id );\n+                RECORD record = tokenReader.read(id);\n                 nameRecords.clear();\n-                if ( record.inUse() )\n+                if (record.inUse())\n                 {\n                     String name;\n-                    if ( !NULL_REFERENCE.is( record.getNameId() ) && safeLoadDynamicRecordChain( r -> nameRecords.add( r.copy() ),\n-                            nameReader, seenRecordIds, record.getNameId(), nameBlockSize ) )\n+                    if (!NULL_REFERENCE.is(record.getNameId()) && safeLoadDynamicRecordChain(r -> nameRecords.add(r.copy()),\n+                      nameReader, seenRecordIds, record.getNameId(), nameBlockSize))\n                     {\n-                        record.addNameRecords( nameRecords );\n-                        name = tokenStore.getStringFor( record, cursorTracer );\n-                    }\n-                    else\n+                        record.addNameRecords(nameRecords);\n+                        name = tokenStore.getStringFor(record, cursorTracer);\n+                    } else\n                     {\n-                        name = format( \"<name not loaded due to token(%d) referencing unused name record>\", id );\n+                        name = format(\"<name not loaded due to token(%d) referencing unused name record>\", id);\n                     }\n-                    tokens.add( new NamedToken( name, toIntExact( id ), record.isInternal() ) );\n+                    tokens.add(new NamedToken(name, toIntExact(id), record.isInternal()));\n                 }\n             }\n         }\n         return tokens;\n     }\n \n-    static boolean safeLoadDynamicRecordChain( Consumer<DynamicRecord> target, RecordReader<DynamicRecord> reader,\n-            MutableLongSet seenRecordIds, long recordId, int blockSize )\n+    static boolean safeLoadDynamicRecordChain(Consumer<DynamicRecord> target, RecordReader<DynamicRecord> reader,\n+                                              MutableLongSet seenRecordIds, long recordId, int blockSize)\n     {\n-        return safeLoadDynamicRecordChain( target, reader, seenRecordIds, recordId, blockSize,\n-                NO_DYNAMIC_HANDLER, NO_DYNAMIC_HANDLER, NO_DYNAMIC_HANDLER, NO_DYNAMIC_HANDLER, r -> {}, r -> {} );\n+        return safeLoadDynamicRecordChain(target, reader, seenRecordIds, recordId, blockSize,\n+          NO_DYNAMIC_HANDLER, NO_DYNAMIC_HANDLER, NO_DYNAMIC_HANDLER, NO_DYNAMIC_HANDLER, r -> {\n+          }, r -> {\n+          });\n     }\n \n-    static boolean safeLoadDynamicRecordChain( Consumer<DynamicRecord> target, RecordReader<DynamicRecord> reader,\n-            MutableLongSet seenRecordIds, long recordId, int blockSize,\n-            BiConsumer<Long,DynamicRecord> circularReferenceReport,\n-            BiConsumer<Long,DynamicRecord> unusedChainReport,\n-            BiConsumer<Long,DynamicRecord> brokenChainReport,\n-            BiConsumer<Long,DynamicRecord> emptyRecordReport,\n-            Consumer<DynamicRecord> notFullReferencesNextReport,\n-            Consumer<DynamicRecord> invalidLengthReport )\n+    static boolean safeLoadDynamicRecordChain(Consumer<DynamicRecord> target, RecordReader<DynamicRecord> reader,\n+                                              MutableLongSet seenRecordIds, long recordId, int blockSize,\n+                                              BiConsumer<Long, DynamicRecord> circularReferenceReport,\n+                                              BiConsumer<Long, DynamicRecord> unusedChainReport,\n+                                              BiConsumer<Long, DynamicRecord> brokenChainReport,\n+                                              BiConsumer<Long, DynamicRecord> emptyRecordReport,\n+                                              Consumer<DynamicRecord> notFullReferencesNextReport,\n+                                              Consumer<DynamicRecord> invalidLengthReport)\n     {\n         long firstRecordId = recordId;\n-        lightClear( seenRecordIds );\n+        lightClear(seenRecordIds);\n         long prevRecordId = NULL_REFERENCE.longValue();\n         boolean chainIsOk = true;\n-        while ( !NULL_REFERENCE.is( recordId ) )\n+        while (!NULL_REFERENCE.is(recordId))\n         {\n-            if ( !seenRecordIds.add( recordId ) )\n+            if (!seenRecordIds.add(recordId))\n             {\n                 // Circular reference\n-                circularReferenceReport.accept( firstRecordId, reader.record() );\n+                circularReferenceReport.accept(firstRecordId, reader.record());\n                 return false;\n             }\n-            DynamicRecord record = reader.read( recordId );\n-            if ( !record.inUse() )\n+            DynamicRecord record = reader.read(recordId);\n+            if (!record.inUse())\n             {\n                 // Broken chain somehow\n-                BiConsumer<Long,DynamicRecord> reporter = recordId == firstRecordId ? unusedChainReport : brokenChainReport;\n-                reporter.accept( prevRecordId, record );\n+                BiConsumer<Long, DynamicRecord> reporter = recordId == firstRecordId ? unusedChainReport : brokenChainReport;\n+                reporter.accept(prevRecordId, record);\n                 return false;\n             }\n-            if ( record.getLength() == 0 )\n+            if (record.getLength() == 0)\n             {\n                 // Empty record\n-                emptyRecordReport.accept( firstRecordId, record );\n+                emptyRecordReport.accept(firstRecordId, record);\n                 chainIsOk = false;\n             }\n-            if ( record.getLength() < blockSize && !NULL_REFERENCE.is( record.getNextBlock() ) )\n+            if (record.getLength() < blockSize && !NULL_REFERENCE.is(record.getNextBlock()))\n             {\n-                notFullReferencesNextReport.accept( record );\n+                notFullReferencesNextReport.accept(record);\n                 chainIsOk = false;\n             }\n-            if ( record.getLength() > blockSize )\n+            if (record.getLength() > blockSize)\n             {\n-                invalidLengthReport.accept( record );\n+                invalidLengthReport.accept(record);\n                 chainIsOk = false;\n             }\n-            target.accept( record );\n+            target.accept(record);\n             prevRecordId = recordId;\n             recordId = record.getNextBlock();\n         }\n         return chainIsOk;\n     }\n \n-    static <RECORD extends AbstractBaseRecord,TOKEN extends TokenRecord> boolean checkValidInternalToken(\n-            RECORD entity, int token, TokenHolder tokens, TokenStore<TOKEN> tokenStore, BiConsumer<RECORD,Integer> illegalTokenReport,\n-            BiConsumer<RECORD,TOKEN> unusedReporter, PageCursorTracer cursorTracer )\n+    static <RECORD extends AbstractBaseRecord, TOKEN extends TokenRecord> boolean checkValidInternalToken(\n+      RECORD entity, int token, TokenHolder tokens, TokenStore<TOKEN> tokenStore, BiConsumer<RECORD, Integer> illegalTokenReport,\n+      BiConsumer<RECORD, TOKEN> unusedReporter, PageCursorTracer cursorTracer)\n     {\n-        return checkValidToken( entity, token, tokens, tokenStore, illegalTokenReport, unusedReporter, tokens::getInternalTokenById, cursorTracer );\n+        return checkValidToken(entity, token, tokens, tokenStore, illegalTokenReport, unusedReporter, tokens::getInternalTokenById, cursorTracer);\n     }\n \n-    static <RECORD extends AbstractBaseRecord,TOKEN extends TokenRecord> boolean checkValidToken(\n-            RECORD entity, int token, TokenHolder tokens, TokenStore<TOKEN> tokenStore, BiConsumer<RECORD,Integer> illegalTokenReport,\n-            BiConsumer<RECORD,TOKEN> unusedReporter, PageCursorTracer cursorTracer )\n+    static <RECORD extends AbstractBaseRecord, TOKEN extends TokenRecord> boolean checkValidToken(\n+      RECORD entity, int token, TokenHolder tokens, TokenStore<TOKEN> tokenStore, BiConsumer<RECORD, Integer> illegalTokenReport,\n+      BiConsumer<RECORD, TOKEN> unusedReporter, PageCursorTracer cursorTracer)\n     {\n-        return checkValidToken( entity, token, tokens, tokenStore, illegalTokenReport, unusedReporter, tokens::getTokenById, cursorTracer );\n+        return checkValidToken(entity, token, tokens, tokenStore, illegalTokenReport, unusedReporter, tokens::getTokenById, cursorTracer);\n     }\n \n-    private static <RECORD extends AbstractBaseRecord,TOKEN extends TokenRecord> boolean checkValidToken(\n-            RECORD entity, int token, TokenHolder tokens, TokenStore<TOKEN> tokenStore, BiConsumer<RECORD,Integer> illegalTokenReport,\n-            BiConsumer<RECORD,TOKEN> unusedReporter, ThrowingIntFunction<NamedToken,TokenNotFoundException> tokenGetter, PageCursorTracer cursorTracer )\n+    private static <RECORD extends AbstractBaseRecord, TOKEN extends TokenRecord> boolean checkValidToken(\n+      RECORD entity, int token, TokenHolder tokens, TokenStore<TOKEN> tokenStore, BiConsumer<RECORD, Integer> illegalTokenReport,\n+      BiConsumer<RECORD, TOKEN> unusedReporter, ThrowingIntFunction<NamedToken, TokenNotFoundException> tokenGetter, PageCursorTracer cursorTracer)\n     {\n-        if ( token < 0 )\n+        if (token < 0)\n         {\n-            illegalTokenReport.accept( entity, token );\n+            illegalTokenReport.accept(entity, token);\n             return false;\n-        }\n-        else\n+        } else\n         {\n             try\n             {\n-                tokens.getTokenById( token );\n+                tokens.getTokenById(token);\n                 // It's in use, good\n-            }\n-            catch ( TokenNotFoundException tnfe )\n+            } catch (TokenNotFoundException tnfe)\n             {\n-                TOKEN tokenRecord = tokenStore.getRecord( token, tokenStore.newRecord(), RecordLoad.FORCE, cursorTracer );\n-                unusedReporter.accept( entity, tokenRecord );\n+                TOKEN tokenRecord = tokenStore.getRecord(token, tokenStore.newRecord(), RecordLoad.FORCE, cursorTracer);\n+                unusedReporter.accept(entity, tokenRecord);\n                 return false;\n             }\n             // Regardless of whether or not it's in use apparently we're expected to count it\n@@ -321,25 +321,25 @@ class RecordLoading\n         }\n     }\n \n-    static void lightClear( MutableLongCollection collection )\n+    static void lightClear(MutableLongCollection collection)\n     {\n-        if ( !collection.isEmpty() )\n+        if (!collection.isEmpty())\n         {\n             collection.clear();\n         }\n     }\n \n-    static void lightClear( MutableIntCollection collection )\n+    static void lightClear(MutableIntCollection collection)\n     {\n-        if ( !collection.isEmpty() )\n+        if (!collection.isEmpty())\n         {\n             collection.clear();\n         }\n     }\n \n-    static void lightClear( MutablePrimitiveObjectMap<?> collection )\n+    static void lightClear(MutablePrimitiveObjectMap<?> collection)\n     {\n-        if ( !collection.isEmpty() )\n+        if (!collection.isEmpty())\n         {\n             collection.clear();\n         }\n",
            "diff_size": 113
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
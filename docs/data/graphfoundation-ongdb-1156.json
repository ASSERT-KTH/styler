{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1156",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "157",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "166",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1156/StatementDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1156/StatementDeserializer.java\nindex 629231ac310..6087dae930f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1156/StatementDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1156/StatementDeserializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import org.codehaus.jackson.JsonFactory;\n@@ -50,189 +51,185 @@ import static org.neo4j.helpers.collection.MapUtil.map;\n \n public class StatementDeserializer extends PrefetchingIterator<Statement>\n {\n-    private static final JsonFactory JSON_FACTORY =\n-            new JsonFactory().setCodec( new Neo4jJsonCodec() ).disable( JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM );\n-    private static final Map<String, Object> NO_PARAMETERS = unmodifiableMap( map() );\n-\n-    private final JsonParser input;\n-    private State state;\n-    private List<Neo4jError> errors;\n-\n-    private enum State\n+  private static final JsonFactory JSON_FACTORY =\n+      new JsonFactory().setCodec(new Neo4jJsonCodec()).disable(JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM);\n+  private static final Map<String, Object> NO_PARAMETERS = unmodifiableMap(map());\n+\n+  private final JsonParser input;\n+  private State state;\n+  private List<Neo4jError> errors;\n+\n+  private enum State\n+  {\n+    BEFORE_OUTER_ARRAY,\n+    IN_BODY,\n+    FINISHED\n+  }\n+\n+  public StatementDeserializer(InputStream input)\n+  {\n+    try\n     {\n-        BEFORE_OUTER_ARRAY,\n-        IN_BODY,\n-        FINISHED\n-    }\n-\n-    public StatementDeserializer( InputStream input )\n+      this.input = JSON_FACTORY.createJsonParser(input);\n+      this.state = State.BEFORE_OUTER_ARRAY;\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            this.input = JSON_FACTORY.createJsonParser( input );\n-            this.state = State.BEFORE_OUTER_ARRAY;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    public Iterator<Neo4jError> errors()\n-    {\n-        return errors == null ? emptyIterator() : errors.iterator();\n-    }\n+  public Iterator<Neo4jError> errors()\n+  {\n+    return errors == null ? emptyIterator() : errors.iterator();\n+  }\n \n-    @Override\n-    protected Statement fetchNextOrNull()\n+  @Override\n+  protected Statement fetchNextOrNull()\n+  {\n+    try\n     {\n-        try\n-        {\n-            if ( errors != null )\n+      if (errors != null)\n+      {\n+        return null;\n+      }\n+\n+      switch (state)\n+      {\n+        case BEFORE_OUTER_ARRAY:\n+          if (!beginsWithCorrectTokens())\n+          {\n+            return null;\n+          }\n+          state = State.IN_BODY;\n+        case IN_BODY:\n+          String statement = null;\n+          Map<String, Object> parameters = null;\n+          List<Object> resultsDataContents = null;\n+          boolean includeStats = false;\n+          JsonToken tok;\n+\n+          while ((tok = input.nextToken()) != null && tok != END_OBJECT)\n+          {\n+            if (tok == END_ARRAY)\n             {\n-                return null;\n+              // No more statements\n+              state = State.FINISHED;\n+              return null;\n             }\n \n-            switch ( state )\n+            input.nextValue();\n+            String currentName = input.getCurrentName();\n+            switch (currentName)\n             {\n-                case BEFORE_OUTER_ARRAY:\n-                    if ( !beginsWithCorrectTokens() )\n-                    {\n-                        return null;\n-                    }\n-                    state = State.IN_BODY;\n-                case IN_BODY:\n-                    String statement = null;\n-                    Map<String, Object> parameters = null;\n-                    List<Object> resultsDataContents = null;\n-                    boolean includeStats = false;\n-                    JsonToken tok;\n-\n-                    while ( (tok = input.nextToken()) != null && tok != END_OBJECT )\n-                    {\n-                        if ( tok == END_ARRAY )\n-                        {\n-                            // No more statements\n-                            state = State.FINISHED;\n-                            return null;\n-                        }\n-\n-                        input.nextValue();\n-                        String currentName = input.getCurrentName();\n-                        switch ( currentName )\n-                        {\n-                        case \"statement\":\n-                            statement = input.readValueAs( String.class );\n-                            break;\n-                        case \"parameters\":\n-                            parameters = readMap( input );\n-                            break;\n-                        case \"resultDataContents\":\n-                            resultsDataContents = readArray( input );\n-                            break;\n-                        case \"includeStats\":\n-                            includeStats = input.getBooleanValue();\n-                            break;\n-                        default:\n-                            discardValue( input );\n-                        }\n-                    }\n-\n-                    if ( statement == null )\n-                    {\n-                        addError( new Neo4jError( Status.Request.InvalidFormat,\n-                                new DeserializationException( \"No statement provided.\" ) ) );\n-                        return null;\n-                    }\n-                    return new Statement( statement, parameters == null ? NO_PARAMETERS : parameters, includeStats,\n-                                          ResultDataContent.fromNames( resultsDataContents ) );\n-\n-                case FINISHED:\n-                    return null;\n-\n-                default:\n-                    break;\n+              case \"statement\":\n+                statement = input.readValueAs(String.class);\n+                break;\n+              case \"parameters\":\n+                parameters = readMap(input);\n+                break;\n+              case \"resultDataContents\":\n+                resultsDataContents = readArray(input);\n+                break;\n+              case \"includeStats\":\n+                includeStats = input.getBooleanValue();\n+                break;\n+              default:\n+                discardValue(input);\n             }\n-            return null;\n-        }\n-        catch ( JsonParseException | JsonMappingException e )\n-        {\n-            addError( new Neo4jError( Status.Request.InvalidFormat,\n-                        new DeserializationException( \"Unable to deserialize request\", e ) ) );\n-            return null;\n-        }\n-        catch ( IOException e )\n-        {\n-            addError( new Neo4jError( Status.Network.CommunicationError, e ) );\n-            return null;\n-        }\n-        catch ( Exception e )\n-        {\n-            addError( new Neo4jError( Status.General.UnknownError, e ) );\n-            return null;\n-        }\n-    }\n+          }\n \n-    private void discardValue( JsonParser input ) throws IOException\n+          if (statement == null)\n+          {\n+            addError(new Neo4jError(Status.Request.InvalidFormat,\n+                new DeserializationException(\"No statement provided.\")));\n+            return null;\n+          }\n+          return new Statement(statement, parameters == null ? NO_PARAMETERS : parameters, includeStats,\n+              ResultDataContent.fromNames(resultsDataContents));\n+\n+        case FINISHED:\n+          return null;\n+\n+        default:\n+          break;\n+      }\n+      return null;\n+    } catch (JsonParseException | JsonMappingException e)\n     {\n-        // This could be done without building up an object\n-        input.readValueAs( Object.class );\n-    }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    private static Map<String, Object> readMap( JsonParser input ) throws IOException\n+      addError(new Neo4jError(Status.Request.InvalidFormat,\n+          new DeserializationException(\"Unable to deserialize request\", e)));\n+      return null;\n+    } catch (IOException e)\n     {\n-        return input.readValueAs( Map.class );\n-    }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    private static List<Object> readArray( JsonParser input ) throws IOException\n+      addError(new Neo4jError(Status.Network.CommunicationError, e));\n+      return null;\n+    } catch (Exception e)\n     {\n-        return input.readValueAs( List.class );\n+      addError(new Neo4jError(Status.General.UnknownError, e));\n+      return null;\n     }\n-\n-    private void addError( Neo4jError error )\n+  }\n+\n+  private void discardValue(JsonParser input) throws IOException\n+  {\n+    // This could be done without building up an object\n+    input.readValueAs(Object.class);\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private static Map<String, Object> readMap(JsonParser input) throws IOException\n+  {\n+    return input.readValueAs(Map.class);\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private static List<Object> readArray(JsonParser input) throws IOException\n+  {\n+    return input.readValueAs(List.class);\n+  }\n+\n+  private void addError(Neo4jError error)\n+  {\n+    if (errors == null)\n     {\n-        if ( errors == null )\n-        {\n-            errors = new LinkedList<>();\n-        }\n-        errors.add( error );\n+      errors = new LinkedList<>();\n     }\n+    errors.add(error);\n+  }\n \n-    private boolean beginsWithCorrectTokens() throws IOException\n-    {\n-        List<JsonToken> expectedTokens = asList( START_OBJECT, FIELD_NAME, START_ARRAY );\n-        String expectedField = \"statements\";\n+  private boolean beginsWithCorrectTokens() throws IOException\n+  {\n+    List<JsonToken> expectedTokens = asList(START_OBJECT, FIELD_NAME, START_ARRAY);\n+    String expectedField = \"statements\";\n \n-        List<JsonToken> foundTokens = new ArrayList<>();\n+    List<JsonToken> foundTokens = new ArrayList<>();\n \n-        for ( int i = 0; i < expectedTokens.size(); i++ )\n-        {\n-            JsonToken token = input.nextToken();\n-            if ( i == 0 && token == null )\n-            {\n-                return false;\n-            }\n-            if ( token == FIELD_NAME && !expectedField.equals( input.getText() ) )\n-            {\n-                addError( new Neo4jError(\n-                        Status.Request.InvalidFormat,\n-                        new DeserializationException( String.format( \"Unable to deserialize request. \" +\n-                                                                     \"Expected first field to be '%s', but was '%s'.\",\n-                                                                     expectedField, input.getText() ) ) ) );\n-                return false;\n-            }\n-            foundTokens.add( token );\n-        }\n-        if ( !expectedTokens.equals( foundTokens ) )\n-        {\n-            addError( new Neo4jError(\n-                    Status.Request.InvalidFormat,\n-                    new DeserializationException( String.format( \"Unable to deserialize request. \" +\n-                            \"Expected %s, found %s.\", expectedTokens, foundTokens ) ) ) );\n-            return false;\n-        }\n-        return true;\n+    for (int i = 0; i < expectedTokens.size(); i++)\n+    {\n+      JsonToken token = input.nextToken();\n+      if (i == 0 && token == null)\n+      {\n+        return false;\n+      }\n+      if (token == FIELD_NAME && !expectedField.equals(input.getText()))\n+      {\n+        addError(new Neo4jError(\n+            Status.Request.InvalidFormat,\n+            new DeserializationException(String.format(\"Unable to deserialize request. \" +\n+                    \"Expected first field to be '%s', but was '%s'.\",\n+                expectedField, input.getText()))));\n+        return false;\n+      }\n+      foundTokens.add(token);\n+    }\n+    if (!expectedTokens.equals(foundTokens))\n+    {\n+      addError(new Neo4jError(\n+          Status.Request.InvalidFormat,\n+          new DeserializationException(String.format(\"Unable to deserialize request. \" +\n+              \"Expected %s, found %s.\", expectedTokens, foundTokens))));\n+      return false;\n     }\n+    return true;\n+  }\n }\n",
            "diff_size": 242
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 242).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1156/StatementDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1156/StatementDeserializer.java\nindex 629231ac310..9fcdad3d410 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1156/StatementDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1156/StatementDeserializer.java\n@@ -50,9 +50,9 @@ import static org.neo4j.helpers.collection.MapUtil.map;\n \n public class StatementDeserializer extends PrefetchingIterator<Statement>\n {\n-    private static final JsonFactory JSON_FACTORY =\n-            new JsonFactory().setCodec( new Neo4jJsonCodec() ).disable( JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM );\n-    private static final Map<String, Object> NO_PARAMETERS = unmodifiableMap( map() );\n+    private static final JsonFactory JSON_FACTORY = new JsonFactory().setCodec( new Neo4jJsonCodec() ).disable( JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM );\n+\n+private static final Map<String,Object> NO_PARAMETERS = unmodifiableMap( map() );\n \n     private final JsonParser input;\n     private State state;\n@@ -60,8 +60,7 @@ public class StatementDeserializer extends PrefetchingIterator<Statement>\n \n     private enum State\n     {\n-        BEFORE_OUTER_ARRAY,\n-        IN_BODY,\n+        BEFORE_OUTER_ARRAY, IN_BODY,\n         FINISHED\n     }\n \n@@ -95,15 +94,16 @@ public class StatementDeserializer extends PrefetchingIterator<Statement>\n \n             switch ( state )\n             {\n-                case BEFORE_OUTER_ARRAY:\n+case BEFORE_OUTER_ARRAY:\n                     if ( !beginsWithCorrectTokens() )\n                     {\n                         return null;\n                     }\n-                    state = State.IN_BODY;\n+\n+state = State.IN_BODY;\n                 case IN_BODY:\n                     String statement = null;\n-                    Map<String, Object> parameters = null;\n+                    Map<String,Object> parameters = null;\n                     List<Object> resultsDataContents = null;\n                     boolean includeStats = false;\n                     JsonToken tok;\n@@ -140,26 +140,21 @@ public class StatementDeserializer extends PrefetchingIterator<Statement>\n \n                     if ( statement == null )\n                     {\n-                        addError( new Neo4jError( Status.Request.InvalidFormat,\n-                                new DeserializationException( \"No statement provided.\" ) ) );\n-                        return null;\n+                        addError( new Neo4jError( Status.Request.InvalidFormat, new DeserializationException( \"No statement provided.\" ) ) );\n+return null;\n                     }\n-                    return new Statement( statement, parameters == null ? NO_PARAMETERS : parameters, includeStats,\n-                                          ResultDataContent.fromNames( resultsDataContents ) );\n-\n-                case FINISHED:\n+                    return new Statement( statement, parameters == null ? NO_PARAMETERS : parameters, includeStats, ResultDataContent.fromNames( resultsDataContents ) );\n+    case FINISHED:\n                     return null;\n-\n-                default:\n+    default:\n                     break;\n-            }\n+    }\n             return null;\n         }\n         catch ( JsonParseException | JsonMappingException e )\n         {\n-            addError( new Neo4jError( Status.Request.InvalidFormat,\n-                        new DeserializationException( \"Unable to deserialize request\", e ) ) );\n-            return null;\n+            addError( new Neo4jError( Status.Request.InvalidFormat, new DeserializationException( \"Unable to deserialize request\", e ) ) );\n+return null;\n         }\n         catch ( IOException e )\n         {\n@@ -180,7 +175,7 @@ public class StatementDeserializer extends PrefetchingIterator<Statement>\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n-    private static Map<String, Object> readMap( JsonParser input ) throws IOException\n+    private static Map<String,Object> readMap( JsonParser input ) throws IOException\n     {\n         return input.readValueAs( Map.class );\n     }\n@@ -206,33 +201,27 @@ public class StatementDeserializer extends PrefetchingIterator<Statement>\n         String expectedField = \"statements\";\n \n         List<JsonToken> foundTokens = new ArrayList<>();\n-\n-        for ( int i = 0; i < expectedTokens.size(); i++ )\n+for ( int i = 0; i < expectedTokens.size(); i++ )\n         {\n             JsonToken token = input.nextToken();\n             if ( i == 0 && token == null )\n             {\n                 return false;\n             }\n-            if ( token == FIELD_NAME && !expectedField.equals( input.getText() ) )\n+\n+if ( token == FIELD_NAME && !expectedField.equals( input.getText() ) )\n             {\n-                addError( new Neo4jError(\n-                        Status.Request.InvalidFormat,\n-                        new DeserializationException( String.format( \"Unable to deserialize request. \" +\n-                                                                     \"Expected first field to be '%s', but was '%s'.\",\n-                                                                     expectedField, input.getText() ) ) ) );\n-                return false;\n+                addError( new Neo4jError( Status.Request.InvalidFormat, new DeserializationException( String.format( \"Unable to deserialize request. \" + \"Expected first field to be '%s', but was '%s'.\", expectedField, input.getText() ) ) ) );\n+return false;\n             }\n             foundTokens.add( token );\n         }\n-        if ( !expectedTokens.equals( foundTokens ) )\n+\n+if ( !expectedTokens.equals( foundTokens ) )\n         {\n-            addError( new Neo4jError(\n-                    Status.Request.InvalidFormat,\n-                    new DeserializationException( String.format( \"Unable to deserialize request. \" +\n-                            \"Expected %s, found %s.\", expectedTokens, foundTokens ) ) ) );\n-            return false;\n+            addError( new Neo4jError( Status.Request.InvalidFormat, new DeserializationException( String.format( \"Unable to deserialize request. \" + \"Expected %s, found %s.\", expectedTokens, foundTokens ) ) ) );\n+return false;\n         }\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
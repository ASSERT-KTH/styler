{
    "project_name": "Activiti-Activiti",
    "error_id": "838",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.bpmn.behavior;\n\nimport java.util.Collection;\nimport java.util.HashMap;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/838/AdhocSubProcessActivityBehavior.java\nindex 86e1df39fd4..79870ea0ec7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/838/AdhocSubProcessActivityBehavior.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.behavior;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/838/AdhocSubProcessActivityBehavior.java\nindex 86e1df39fd4..6dfa6dbd6df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/838/AdhocSubProcessActivityBehavior.java\n@@ -29,43 +29,41 @@ import org.activiti.engine.delegate.DelegateExecution;\n \n /**\n  * Implementation of the BPMN 2.0 ad-hoc subprocess.\n- *\n-\n  */\n public class AdhocSubProcessActivityBehavior extends AbstractBpmnActivityBehavior {\n \n-  private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n-  public void execute(DelegateExecution execution) {\n-    SubProcess subProcess = getSubProcessFromExecution(execution);\n-    execution.setScope(true);\n+    public void execute(DelegateExecution execution) {\n+        SubProcess subProcess = getSubProcessFromExecution(execution);\n+        execution.setScope(true);\n \n-    // initialize the template-defined data objects as variables\n-    Map<String, Object> dataObjectVars = processDataObjects(subProcess.getDataObjects());\n-    if (dataObjectVars != null) {\n-      execution.setVariablesLocal(dataObjectVars);\n+        // initialize the template-defined data objects as variables\n+        Map<String, Object> dataObjectVars = processDataObjects(subProcess.getDataObjects());\n+        if (dataObjectVars != null) {\n+            execution.setVariablesLocal(dataObjectVars);\n+        }\n     }\n-  }\n \n-  protected SubProcess getSubProcessFromExecution(DelegateExecution execution) {\n-    FlowElement flowElement = execution.getCurrentFlowElement();\n-    SubProcess subProcess = null;\n-    if (flowElement instanceof SubProcess) {\n-      subProcess = (SubProcess) flowElement;\n-    } else {\n-      throw new ActivitiException(\"Programmatic error: sub process behaviour can only be applied\" + \" to a SubProcess instance, but got an instance of \" + flowElement);\n+    protected SubProcess getSubProcessFromExecution(DelegateExecution execution) {\n+        FlowElement flowElement = execution.getCurrentFlowElement();\n+        SubProcess subProcess = null;\n+        if (flowElement instanceof SubProcess) {\n+            subProcess = (SubProcess) flowElement;\n+        } else {\n+            throw new ActivitiException(\"Programmatic error: sub process behaviour can only be applied\" + \" to a SubProcess instance, but got an instance of \" + flowElement);\n+        }\n+        return subProcess;\n     }\n-    return subProcess;\n-  }\n \n-  protected Map<String, Object> processDataObjects(Collection<ValuedDataObject> dataObjects) {\n-    Map<String, Object> variablesMap = new HashMap<String, Object>();\n-    // convert data objects to process variables\n-    if (dataObjects != null) {\n-      for (ValuedDataObject dataObject : dataObjects) {\n-        variablesMap.put(dataObject.getName(), dataObject.getValue());\n-      }\n+    protected Map<String, Object> processDataObjects(Collection<ValuedDataObject> dataObjects) {\n+        Map<String, Object> variablesMap = new HashMap<String, Object>();\n+        // convert data objects to process variables\n+        if (dataObjects != null) {\n+            for (ValuedDataObject dataObject : dataObjects) {\n+                variablesMap.put(dataObject.getName(), dataObject.getValue());\n+            }\n+        }\n+        return variablesMap;\n     }\n-    return variablesMap;\n-  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/838/AdhocSubProcessActivityBehavior.java\nindex 86e1df39fd4..f9db0fdc4a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/838/AdhocSubProcessActivityBehavior.java\n@@ -20,7 +20,6 @@ package org.activiti.engine.impl.bpmn.behavior;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.Map;\n-\n import org.activiti.bpmn.model.FlowElement;\n import org.activiti.bpmn.model.SubProcess;\n import org.activiti.bpmn.model.ValuedDataObject;\n@@ -32,15 +31,17 @@ import org.activiti.engine.delegate.DelegateExecution;\n  *\n \n  */\n+\n+\n public class AdhocSubProcessActivityBehavior extends AbstractBpmnActivityBehavior {\n \n   private static final long serialVersionUID = 1L;\n-\n   public void execute(DelegateExecution execution) {\n     SubProcess subProcess = getSubProcessFromExecution(execution);\n     execution.setScope(true);\n \n     // initialize the template-defined data objects as variables\n+\n     Map<String, Object> dataObjectVars = processDataObjects(subProcess.getDataObjects());\n     if (dataObjectVars != null) {\n       execution.setVariablesLocal(dataObjectVars);\n@@ -62,10 +63,11 @@ public class AdhocSubProcessActivityBehavior extends AbstractBpmnActivityBehavio\n     Map<String, Object> variablesMap = new HashMap<String, Object>();\n     // convert data objects to process variables\n     if (dataObjects != null) {\n-      for (ValuedDataObject dataObject : dataObjects) {\n-        variablesMap.put(dataObject.getName(), dataObject.getValue());\n-      }\n+        for (ValuedDataObject dataObject : dataObjects) {\n+            variablesMap.put(dataObject.getName(),\n+                             dataObject.getValue());\n+        }\n     }\n     return variablesMap;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/838/AdhocSubProcessActivityBehavior.java\nindex 86e1df39fd4..79870ea0ec7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/838/AdhocSubProcessActivityBehavior.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.behavior;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/838/AdhocSubProcessActivityBehavior.java\nindex 86e1df39fd4..79870ea0ec7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/838/AdhocSubProcessActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/838/AdhocSubProcessActivityBehavior.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.behavior;\n \n import java.util.Collection;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
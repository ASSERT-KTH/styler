{
    "project_name": "neo4j-neo4j",
    "error_id": "2713",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "154",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "172",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2713/NativeAllEntriesTokenScanReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2713/NativeAllEntriesTokenScanReader.java\nindex 15339d10f89..16f523b9932 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2713/NativeAllEntriesTokenScanReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2713/NativeAllEntriesTokenScanReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.eclipse.collections.api.list.primitive.MutableLongList;\n@@ -47,13 +48,13 @@ import static org.neo4j.kernel.impl.index.schema.TokenScanValue.RANGE_SIZE;\n  */\n class NativeAllEntriesTokenScanReader implements AllEntriesTokenScanReader\n {\n-    private final IntFunction<Seeker<TokenScanKey,TokenScanValue>> seekProvider;\n-    private final List<Seeker<TokenScanKey,TokenScanValue>> cursors = new ArrayList<>();\n+    private final IntFunction<Seeker<TokenScanKey, TokenScanValue>> seekProvider;\n+    private final List<Seeker<TokenScanKey, TokenScanValue>> cursors = new ArrayList<>();\n     private final int highestTokenId;\n     private final EntityType entityType;\n \n-    NativeAllEntriesTokenScanReader( IntFunction<Seeker<TokenScanKey,TokenScanValue>> seekProvider,\n-            int highestTokenId, EntityType entityType )\n+    NativeAllEntriesTokenScanReader(IntFunction<Seeker<TokenScanKey, TokenScanValue>> seekProvider,\n+                                    int highestTokenId, EntityType entityType)\n     {\n         this.seekProvider = seekProvider;\n         this.highestTokenId = highestTokenId;\n@@ -79,28 +80,27 @@ class NativeAllEntriesTokenScanReader implements AllEntriesTokenScanReader\n         {\n             long lowestRange = Long.MAX_VALUE;\n             closeCursors();\n-            for ( int tokenId = 0; tokenId <= highestTokenId; tokenId++ )\n+            for (int tokenId = 0; tokenId <= highestTokenId; tokenId++)\n             {\n-                Seeker<TokenScanKey,TokenScanValue> cursor = seekProvider.apply( tokenId );\n+                Seeker<TokenScanKey, TokenScanValue> cursor = seekProvider.apply(tokenId);\n \n                 // Bootstrap the cursor, which also provides a great opportunity to exclude if empty\n-                if ( cursor.next() )\n+                if (cursor.next())\n                 {\n-                    lowestRange = min( lowestRange, cursor.key().idRange );\n-                    cursors.add( cursor );\n+                    lowestRange = min(lowestRange, cursor.key().idRange);\n+                    cursors.add(cursor);\n                 }\n             }\n-            return new EntityTokenRangeIterator( lowestRange, entityType );\n-        }\n-        catch ( IOException e )\n+            return new EntityTokenRangeIterator(lowestRange, entityType);\n+        } catch (IOException e)\n         {\n-            throw new RuntimeException( e );\n+            throw new RuntimeException(e);\n         }\n     }\n \n     private void closeCursors() throws IOException\n     {\n-        for ( Seeker<TokenScanKey,TokenScanValue> cursor : cursors )\n+        for (Seeker<TokenScanKey, TokenScanValue> cursor : cursors)\n         {\n             cursor.close();\n         }\n@@ -124,7 +124,7 @@ class NativeAllEntriesTokenScanReader implements AllEntriesTokenScanReader\n         // entityId (relative to lowestRange) --> tokenId[]\n         private final MutableLongList[] tokensForEachEntity = new MutableLongList[RANGE_SIZE];\n \n-        EntityTokenRangeIterator( long lowestRange, EntityType entityType )\n+        EntityTokenRangeIterator(long lowestRange, EntityType entityType)\n         {\n             this.currentRange = lowestRange;\n             this.entityType = entityType;\n@@ -133,52 +133,49 @@ class NativeAllEntriesTokenScanReader implements AllEntriesTokenScanReader\n         @Override\n         protected EntityTokenRange fetchNextOrNull()\n         {\n-            if ( currentRange == Long.MAX_VALUE )\n+            if (currentRange == Long.MAX_VALUE)\n             {\n                 return null;\n             }\n \n-            Arrays.fill( tokensForEachEntity, null );\n+            Arrays.fill(tokensForEachEntity, null);\n             long nextLowestRange = Long.MAX_VALUE;\n             try\n             {\n                 // One \"rangeSize\" range at a time\n-                for ( Seeker<TokenScanKey,TokenScanValue> cursor : cursors )\n+                for (Seeker<TokenScanKey, TokenScanValue> cursor : cursors)\n                 {\n                     long idRange = cursor.key().idRange;\n-                    if ( idRange < currentRange )\n+                    if (idRange < currentRange)\n                     {\n                         // This should only happen if the cursor has been exhausted and the iterator have moved on\n                         // from the range it returned as its last hit.\n                         assert !cursor.next();\n-                    }\n-                    else if ( idRange == currentRange )\n+                    } else if (idRange == currentRange)\n                     {\n                         long bits = cursor.value().bits;\n                         long tokenId = cursor.key().tokenId;\n-                        EntityTokenRange.readBitmap( bits, tokenId, tokensForEachEntity );\n+                        EntityTokenRange.readBitmap(bits, tokenId, tokensForEachEntity);\n \n                         // Advance cursor and look ahead to the next range\n-                        if ( cursor.next() )\n+                        if (cursor.next())\n                         {\n-                            nextLowestRange = min( nextLowestRange, cursor.key().idRange );\n+                            nextLowestRange = min(nextLowestRange, cursor.key().idRange);\n                         }\n-                    }\n-                    else\n+                    } else\n                     {\n                         // Excluded from this range\n-                        nextLowestRange = min( nextLowestRange, cursor.key().idRange );\n+                        nextLowestRange = min(nextLowestRange, cursor.key().idRange);\n                     }\n                 }\n \n-                EntityTokenRange range = new EntityTokenRange( currentRange, EntityTokenRange.convertState( tokensForEachEntity ), entityType );\n+                EntityTokenRange range = new EntityTokenRange(currentRange, EntityTokenRange.convertState(tokensForEachEntity), entityType);\n                 currentRange = nextLowestRange;\n \n                 return range;\n-            }\n-            catch ( IOException e )\n+            } catch (IOException e)\n             {\n-                throw new RuntimeException( e );\n+                throw new RuntimeException(e);\n             }\n         }\n     }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
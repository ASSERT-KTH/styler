{
    "project_name": "Activiti-Activiti",
    "error_id": "101",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.delegate.invocation;\n\nimport javax.el.ELContext;\nimport javax.el.ValueExpression;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/101/ExpressionSetInvocation.java\nindex d97e43fb3aa..480156c31a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/101/ExpressionSetInvocation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.engine.impl.delegate.invocation;\r\n \r\n import javax.el.ELContext;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/101/ExpressionSetInvocation.java\nindex d97e43fb3aa..a67a9e50e3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/101/ExpressionSetInvocation.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- * \r\n+ *\r\n  *      http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n+ *\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.engine.impl.delegate.invocation;\r\n \r\n import javax.el.ELContext;\r\n@@ -17,24 +18,22 @@ import javax.el.ValueExpression;\n \r\n /**\r\n  * Class responsible for handling Expression.setValue() invocations.\r\n- * \r\n-\r\n  */\r\n public class ExpressionSetInvocation extends ExpressionInvocation {\r\n \r\n-  protected final Object value;\r\n-  protected ELContext elContext;\r\n+    protected final Object value;\r\n+    protected ELContext elContext;\r\n \r\n-  public ExpressionSetInvocation(ValueExpression valueExpression, ELContext elContext, Object value) {\r\n-    super(valueExpression);\r\n-    this.value = value;\r\n-    this.elContext = elContext;\r\n-    this.invocationParameters = new Object[] { value };\r\n-  }\r\n+    public ExpressionSetInvocation(ValueExpression valueExpression, ELContext elContext, Object value) {\r\n+        super(valueExpression);\r\n+        this.value = value;\r\n+        this.elContext = elContext;\r\n+        this.invocationParameters = new Object[] {value};\r\n+    }\r\n \r\n-  @Override\r\n-  protected void invoke() {\r\n-    valueExpression.setValue(elContext, value);\r\n-  }\r\n+    @Override\r\n+    protected void invoke() {\r\n+        valueExpression.setValue(elContext, value);\r\n+    }\r\n \r\n }\r\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/101/ExpressionSetInvocation.java\nindex d97e43fb3aa..035c3293e3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/101/ExpressionSetInvocation.java\n@@ -9,7 +9,8 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n- */\r\n+ */\n+\n package org.activiti.engine.impl.delegate.invocation;\r\n \r\n import javax.el.ELContext;\r\n@@ -37,4 +38,4 @@ public class ExpressionSetInvocation extends ExpressionInvocation {\n     valueExpression.setValue(elContext, value);\r\n   }\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/101/ExpressionSetInvocation.java\nindex d97e43fb3aa..7b45a8bb44e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/101/ExpressionSetInvocation.java\n@@ -10,31 +10,32 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.activiti.engine.impl.delegate.invocation;\r\n-\r\n-import javax.el.ELContext;\r\n+package org.activiti.engine.impl.delegate.invocation;\n+\n+import javax.el.ELContext;\n import javax.el.ValueExpression;\r\n \r\n /**\r\n  * Class responsible for handling Expression.setValue() invocations.\r\n  * \r\n \r\n- */\r\n-public class ExpressionSetInvocation extends ExpressionInvocation {\r\n-\r\n-  protected final Object value;\r\n-  protected ELContext elContext;\r\n-\r\n-  public ExpressionSetInvocation(ValueExpression valueExpression, ELContext elContext, Object value) {\r\n-    super(valueExpression);\r\n-    this.value = value;\r\n-    this.elContext = elContext;\r\n-    this.invocationParameters = new Object[] { value };\r\n-  }\r\n-\r\n-  @Override\r\n-  protected void invoke() {\r\n-    valueExpression.setValue(elContext, value);\r\n-  }\r\n-\r\n-}\r\n+ */\n+\n+\n+public class ExpressionSetInvocation extends ExpressionInvocation {\n+\n+  protected final Object value;\n+  protected ELContext elContext;\n+\n+  public ExpressionSetInvocation(ValueExpression valueExpression, ELContext elContext, Object value) {\n+    super(valueExpression);\n+    this.value = value;\n+    this.elContext = elContext;\n+    this.invocationParameters = new Object[] { value };\n+  }\n+\n+  @Override\n+  protected void invoke() {\n+    valueExpression.setValue(elContext, value);\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/101/ExpressionSetInvocation.java\nindex d97e43fb3aa..480156c31a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/101/ExpressionSetInvocation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.engine.impl.delegate.invocation;\r\n \r\n import javax.el.ELContext;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/101/ExpressionSetInvocation.java\nindex d97e43fb3aa..480156c31a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/101/ExpressionSetInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/101/ExpressionSetInvocation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.engine.impl.delegate.invocation;\r\n \r\n import javax.el.ELContext;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
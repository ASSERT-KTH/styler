{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1021",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1021/StoreRecordCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1021/StoreRecordCursor.java\nindex a0ed85dc7d8..2674796706e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1021/StoreRecordCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1021/StoreRecordCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.io.IOException;\n@@ -30,99 +31,96 @@ import static org.neo4j.kernel.impl.store.record.Record.NULL_REFERENCE;\n \n class StoreRecordCursor<RECORD extends AbstractBaseRecord> implements RecordCursor<RECORD>\n {\n-    private final RECORD record;\n-    private CommonAbstractStore<RECORD,?> store;\n-    private long currentId;\n-    private RecordLoad mode;\n-    private PageCursor pageCursor;\n+  private final RECORD record;\n+  private CommonAbstractStore<RECORD, ?> store;\n+  private long currentId;\n+  private RecordLoad mode;\n+  private PageCursor pageCursor;\n \n-    StoreRecordCursor( RECORD record, CommonAbstractStore<RECORD,?> store )\n-    {\n-        this.record = record;\n-        this.store = store;\n-    }\n+  StoreRecordCursor(RECORD record, CommonAbstractStore<RECORD, ?> store)\n+  {\n+    this.record = record;\n+    this.store = store;\n+  }\n \n-    @Override\n-    public boolean next()\n+  @Override\n+  public boolean next()\n+  {\n+    try\n     {\n-        try\n-        {\n-            return next( currentId, record, mode );\n-        }\n-        finally\n-        {\n-            // This will get the next reference:\n-            // inUse ==> actual next reference\n-            // !inUse && mode == CHECK ==> NULL\n-            // !inUse && mode == NORMAL ==> NULL (+InvalidRecordException thrown in try)\n-            // !inUse && mode == FORCE ==> actual next reference\n-            currentId = store.getNextRecordReference( record );\n-        }\n-    }\n-\n-    @Override\n-    public boolean next( long id )\n+      return next(currentId, record, mode);\n+    } finally\n     {\n-        return next( id, record, mode );\n+      // This will get the next reference:\n+      // inUse ==> actual next reference\n+      // !inUse && mode == CHECK ==> NULL\n+      // !inUse && mode == NORMAL ==> NULL (+InvalidRecordException thrown in try)\n+      // !inUse && mode == FORCE ==> actual next reference\n+      currentId = store.getNextRecordReference(record);\n     }\n+  }\n \n-    @Override\n-    public boolean next( long id, RECORD record, RecordLoad mode )\n-    {\n-        assert pageCursor != null : \"Not initialized\";\n-        if ( NULL_REFERENCE.is( id ) )\n-        {\n-            record.clear();\n-            record.setId( NULL_REFERENCE.intValue() );\n-            return false;\n-        }\n-\n-        try\n-        {\n-            store.readIntoRecord( id, record, mode, pageCursor );\n-            return record.inUse();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnderlyingStorageException( e );\n-        }\n-    }\n+  @Override\n+  public boolean next(long id)\n+  {\n+    return next(id, record, mode);\n+  }\n \n-    @Override\n-    public void placeAt( long id, RecordLoad mode )\n+  @Override\n+  public boolean next(long id, RECORD record, RecordLoad mode)\n+  {\n+    assert pageCursor != null : \"Not initialized\";\n+    if (NULL_REFERENCE.is(id))\n     {\n-        this.currentId = id;\n-        this.mode = mode;\n+      record.clear();\n+      record.setId(NULL_REFERENCE.intValue());\n+      return false;\n     }\n \n-    @Override\n-    public void close()\n+    try\n     {\n-        assert pageCursor != null;\n-        this.pageCursor.close();\n-        this.pageCursor = null;\n-    }\n-\n-    @Override\n-    public RECORD get()\n+      store.readIntoRecord(id, record, mode, pageCursor);\n+      return record.inUse();\n+    } catch (IOException e)\n     {\n-        return record;\n+      throw new UnderlyingStorageException(e);\n     }\n+  }\n+\n+  @Override\n+  public void placeAt(long id, RecordLoad mode)\n+  {\n+    this.currentId = id;\n+    this.mode = mode;\n+  }\n \n-    @Override\n-    public RecordCursor<RECORD> acquire( long id, RecordLoad mode )\n+  @Override\n+  public void close()\n+  {\n+    assert pageCursor != null;\n+    this.pageCursor.close();\n+    this.pageCursor = null;\n+  }\n+\n+  @Override\n+  public RECORD get()\n+  {\n+    return record;\n+  }\n+\n+  @Override\n+  public RecordCursor<RECORD> acquire(long id, RecordLoad mode)\n+  {\n+    assert this.pageCursor == null;\n+    this.currentId = id;\n+    this.mode = mode;\n+    try\n+    {\n+      this.pageCursor = store.storeFile.io(store.pageIdForRecord(id), PF_SHARED_READ_LOCK);\n+    } catch (IOException e)\n     {\n-        assert this.pageCursor == null;\n-        this.currentId = id;\n-        this.mode = mode;\n-        try\n-        {\n-            this.pageCursor = store.storeFile.io( store.pageIdForRecord( id ), PF_SHARED_READ_LOCK );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnderlyingStorageException( e );\n-        }\n-        return this;\n+      throw new UnderlyingStorageException(e);\n     }\n+    return this;\n+  }\n }\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1021/StoreRecordCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1021/StoreRecordCursor.java\nindex a0ed85dc7d8..39f5af98693 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1021/StoreRecordCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1021/StoreRecordCursor.java\n@@ -125,4 +125,4 @@ class StoreRecordCursor<RECORD extends AbstractBaseRecord> implements RecordCurs\n         }\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
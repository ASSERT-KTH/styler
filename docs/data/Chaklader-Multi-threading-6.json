{
    "project_name": "Chaklader-Multi-threading",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public Thread newThread(Runnable r) {\n        Thread t = new Thread(r, name + \"-Thread_\" + threadId);\n        System.out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n        threadId++;\n        return t;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler/6/BaeldungThreadFactory.java\nindex f708804cae5..6a3a81c8259 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler/6/BaeldungThreadFactory.java\n@@ -14,8 +14,7 @@ public class BaeldungThreadFactory implements ThreadFactory {\n \n     @Override\n     public Thread newThread(Runnable r) {\n-        Thread t = new Thread(r, name + \"-Thread_\" + threadId);\n-        System.out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n+        Thread t = new Thread(r, name + \"-Thread_\" + threadId); System .out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n         threadId++;\n         return t;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/intellij/6/BaeldungThreadFactory.java\nindex f708804cae5..467754106ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/intellij/6/BaeldungThreadFactory.java\n@@ -15,7 +15,8 @@ public class BaeldungThreadFactory implements ThreadFactory {\n     @Override\n     public Thread newThread(Runnable r) {\n         Thread t = new Thread(r, name + \"-Thread_\" + threadId);\n-        System.out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n+        System.out\n+                .println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n         threadId++;\n         return t;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/naturalize/6/BaeldungThreadFactory.java\nindex f708804cae5..1c0e968cf3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/naturalize/6/BaeldungThreadFactory.java\n@@ -20,4 +20,4 @@ public class BaeldungThreadFactory implements ThreadFactory {\n         return t;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/codebuff/6/BaeldungThreadFactory.java\nindex f708804cae5..8c645d25f4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/codebuff/6/BaeldungThreadFactory.java\n@@ -15,9 +15,9 @@ public class BaeldungThreadFactory implements ThreadFactory {\n     @Override\n     public Thread newThread(Runnable r) {\n         Thread t = new Thread(r, name + \"-Thread_\" + threadId);\n+\n         System.out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n         threadId++;\n         return t;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "18",
                    "column": "88",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "19",
                    "column": "9",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_random/6/BaeldungThreadFactory.java\nindex f708804cae5..f0e536202b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_random/6/BaeldungThreadFactory.java\n@@ -15,8 +15,8 @@ public class BaeldungThreadFactory implements ThreadFactory {\n     @Override\n     public Thread newThread(Runnable r) {\n         Thread t = new Thread(r, name + \"-Thread_\" + threadId);\n-        System.out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n-        threadId++;\n+        System.out.println(\"created new thread with id : \" + threadId + \" and name : \" +t.getName())\n+        ;threadId++;\n         return t;\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_three_grams/6/BaeldungThreadFactory.java\nindex f708804cae5..6a3a81c8259 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/6/BaeldungThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_three_grams/6/BaeldungThreadFactory.java\n@@ -14,8 +14,7 @@ public class BaeldungThreadFactory implements ThreadFactory {\n \n     @Override\n     public Thread newThread(Runnable r) {\n-        Thread t = new Thread(r, name + \"-Thread_\" + threadId);\n-        System.out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n+        Thread t = new Thread(r, name + \"-Thread_\" + threadId); System .out.println(\"created new thread with id : \" + threadId + \" and name : \" + t.getName());\n         threadId++;\n         return t;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
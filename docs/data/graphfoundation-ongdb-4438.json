{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4438",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4438/NeoJettyErrorHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4438/NeoJettyErrorHandler.java\nindex e4bf2634005..b5d8a0fff6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4438/NeoJettyErrorHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4438/NeoJettyErrorHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import org.eclipse.jetty.server.handler.ErrorHandler;\n@@ -27,48 +28,48 @@ import javax.servlet.http.HttpServletRequest;\n public class NeoJettyErrorHandler extends ErrorHandler\n {\n \n-    @Override\n-    protected void handleErrorPage( HttpServletRequest request, Writer writer, int code, String message )\n-    {\n-        writeErrorPage( request, writer, code, message, false );\n-    }\n+  @Override\n+  protected void handleErrorPage(HttpServletRequest request, Writer writer, int code, String message)\n+  {\n+    writeErrorPage(request, writer, code, message, false);\n+  }\n \n-    @Override\n-    protected void writeErrorPage( HttpServletRequest request, Writer writer, int code, String message,\n-            boolean showStacks )\n-    {\n+  @Override\n+  protected void writeErrorPage(HttpServletRequest request, Writer writer, int code, String message,\n+                                boolean showStacks)\n+  {\n \n-        // we don't want any Jetty output\n+    // we don't want any Jetty output\n \n-    }\n+  }\n \n-    @Override\n-    protected void writeErrorPageHead( HttpServletRequest request, Writer writer, int code, String message )\n-    {\n-        // we don't want any Jetty output\n+  @Override\n+  protected void writeErrorPageHead(HttpServletRequest request, Writer writer, int code, String message)\n+  {\n+    // we don't want any Jetty output\n \n-    }\n+  }\n \n-    @Override\n-    protected void writeErrorPageBody( HttpServletRequest request, Writer writer, int code, String message,\n-            boolean showStacks )\n-    {\n-        // we don't want any Jetty output\n+  @Override\n+  protected void writeErrorPageBody(HttpServletRequest request, Writer writer, int code, String message,\n+                                    boolean showStacks)\n+  {\n+    // we don't want any Jetty output\n \n-    }\n+  }\n \n-    @Override\n-    protected void writeErrorPageMessage( HttpServletRequest request, Writer writer, int code, String message,\n-            String uri )\n-    {\n-        // we don't want any Jetty output\n+  @Override\n+  protected void writeErrorPageMessage(HttpServletRequest request, Writer writer, int code, String message,\n+                                       String uri)\n+  {\n+    // we don't want any Jetty output\n \n-    }\n+  }\n \n-    @Override\n-    protected void writeErrorPageStacks( HttpServletRequest request, Writer writer )\n-    {\n-        // we don't want any stack output\n+  @Override\n+  protected void writeErrorPageStacks(HttpServletRequest request, Writer writer)\n+  {\n+    // we don't want any stack output\n \n-    }\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4438/NeoJettyErrorHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4438/NeoJettyErrorHandler.java\nindex e4bf2634005..56437ee00d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4438/NeoJettyErrorHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4438/NeoJettyErrorHandler.java\n@@ -20,13 +20,11 @@\n package org.neo4j.server.web;\n \n import org.eclipse.jetty.server.handler.ErrorHandler;\n-\n import java.io.Writer;\n import javax.servlet.http.HttpServletRequest;\n \n public class NeoJettyErrorHandler extends ErrorHandler\n {\n-\n     @Override\n     protected void handleErrorPage( HttpServletRequest request, Writer writer, int code, String message )\n     {\n@@ -34,41 +32,33 @@ public class NeoJettyErrorHandler extends ErrorHandler\n     }\n \n     @Override\n-    protected void writeErrorPage( HttpServletRequest request, Writer writer, int code, String message,\n-            boolean showStacks )\n+    protected void writeErrorPage( HttpServletRequest request, Writer writer, int code, String message, boolean showStacks )\n     {\n \n         // we don't want any Jetty output\n-\n     }\n \n     @Override\n     protected void writeErrorPageHead( HttpServletRequest request, Writer writer, int code, String message )\n     {\n         // we don't want any Jetty output\n-\n     }\n \n     @Override\n-    protected void writeErrorPageBody( HttpServletRequest request, Writer writer, int code, String message,\n-            boolean showStacks )\n+    protected void writeErrorPageBody( HttpServletRequest request, Writer writer, int code, String message, boolean showStacks )\n     {\n         // we don't want any Jetty output\n-\n     }\n \n     @Override\n-    protected void writeErrorPageMessage( HttpServletRequest request, Writer writer, int code, String message,\n-            String uri )\n+    protected void writeErrorPageMessage( HttpServletRequest request, Writer writer, int code, String message, String uri )\n     {\n         // we don't want any Jetty output\n-\n     }\n \n     @Override\n     protected void writeErrorPageStacks( HttpServletRequest request, Writer writer )\n     {\n         // we don't want any stack output\n-\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "77",
    "information": {
        "errors": [
            {
                "line": "82",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 154).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "              responseEx.getStatusType().getReasonPhrase(),\n              responseEx.getHeader(HttpHeaders.CONTENT_TYPE));\n      return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n    }\n\n    try {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "152",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "83",
                    "column": "158",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "83",
                    "column": "158",
                    "severity": "warning",
                    "message": "'}' at column 158 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "158",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "159",
                    "severity": "warning",
                    "message": "'try' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "159",
                    "severity": "warning",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/77/DefaultHttpClientFilter.java\nindex bfaac004176..8e49b66601f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/77/DefaultHttpClientFilter.java\n@@ -79,10 +79,8 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n               responseEx.getStatus(),\n               responseEx.getStatusType().getReasonPhrase(),\n               responseEx.getHeader(HttpHeaders.CONTENT_TYPE));\n-      return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n-    }\n \n-    try {\n+          return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(),msg));}try {\n       return produceProcessor.decodeResponse(responseEx.getBodyBuffer(), responseMeta.getJavaType());\n     } catch (Exception e) {\n       return ExceptionFactory.createConsumerException(e);\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/77/DefaultHttpClientFilter.java\nindex bfaac004176..a3a09b0945e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/77/DefaultHttpClientFilter.java\n@@ -47,7 +47,7 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n   }\n \n   protected ProduceProcessor findProduceProcessor(RestOperationMeta restOperation,\n-      HttpServletResponseEx responseEx) {\n+                                                  HttpServletResponseEx responseEx) {\n     String contentType = responseEx.getHeader(HttpHeaders.CONTENT_TYPE);\n     if (contentType == null) {\n       return null;\n@@ -79,7 +79,8 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n               responseEx.getStatus(),\n               responseEx.getStatusType().getReasonPhrase(),\n               responseEx.getHeader(HttpHeaders.CONTENT_TYPE));\n-      return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n+      return ExceptionFactory.createConsumerException(\n+          new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n     }\n \n     try {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/77/DefaultHttpClientFilter.java\nindex bfaac004176..22cb8febaa2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/77/DefaultHttpClientFilter.java\n@@ -104,4 +104,4 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n \n     return response;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "152",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "83",
                    "column": "158",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "83",
                    "column": "158",
                    "severity": "warning",
                    "message": "'}' at column 158 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "158",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "159",
                    "severity": "warning",
                    "message": "'try' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "159",
                    "severity": "warning",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/77/DefaultHttpClientFilter.java\nindex bfaac004176..8e49b66601f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/77/DefaultHttpClientFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/77/DefaultHttpClientFilter.java\n@@ -79,10 +79,8 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n               responseEx.getStatus(),\n               responseEx.getStatusType().getReasonPhrase(),\n               responseEx.getHeader(HttpHeaders.CONTENT_TYPE));\n-      return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n-    }\n \n-    try {\n+          return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(),msg));}try {\n       return produceProcessor.decodeResponse(responseEx.getBodyBuffer(), responseMeta.getJavaType());\n     } catch (Exception e) {\n       return ExceptionFactory.createConsumerException(e);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3773",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3773/OpenEndRangeMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3773/OpenEndRangeMap.java\nindex 23ba37fc9fe..5bcab209e83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3773/OpenEndRangeMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3773/OpenEndRangeMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.util.ArrayList;\n@@ -30,12 +31,12 @@ import java.util.TreeMap;\n \n /**\n  * Keeps a map of sequential ranges to values, where the highest range is open (right-side unbounded).\n- *\n+ * <p>\n  * Typical example:\n  * [ 0,  10] -> 1     (closed range)\n  * [11, 300] -> 2     (closed range)\n  * [301,   [ -> 3     (open range)\n- *\n+ * <p>\n  * An added range always replaces a part of existing ranges, which could either be only a part of\n  * the open range or even the entire open range and parts of the closed ranges.\n  *\n@@ -44,114 +45,114 @@ import java.util.TreeMap;\n  */\n class OpenEndRangeMap<K extends Comparable<K>, V>\n {\n-    static class ValueRange<K,V>\n+  static class ValueRange<K, V>\n+  {\n+    private final K limit;\n+    private final V value;\n+\n+    ValueRange(K limit, V value)\n     {\n-        private final K limit;\n-        private final V value;\n-\n-        ValueRange( K limit, V value )\n-        {\n-            this.limit = limit;\n-            this.value = value;\n-        }\n-\n-        Optional<K> limit()\n-        {\n-            return Optional.ofNullable( limit );\n-        }\n-\n-        Optional<V> value()\n-        {\n-            return Optional.ofNullable( value );\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            ValueRange<?,?> that = (ValueRange<?,?>) o;\n-            return Objects.equals( limit, that.limit ) &&\n-                   Objects.equals( value, that.value );\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( limit, value );\n-        }\n+      this.limit = limit;\n+      this.value = value;\n     }\n \n-    private final TreeMap<K,V> tree = new TreeMap<>();\n+    Optional<K> limit()\n+    {\n+      return Optional.ofNullable(limit);\n+    }\n \n-    /* We optimize by keeping the open end range directly accessible. */\n-    private K endKey;\n-    private V endValue;\n+    Optional<V> value()\n+    {\n+      return Optional.ofNullable(value);\n+    }\n \n-    Collection<V> replaceFrom( K from, V value )\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        Collection<V> removed = new ArrayList<>();\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      ValueRange<?, ?> that = (ValueRange<?, ?>) o;\n+      return Objects.equals(limit, that.limit) &&\n+          Objects.equals(value, that.value);\n+    }\n \n-        Iterator<V> itr = tree.tailMap( from ).values().iterator();\n-        while ( itr.hasNext() )\n-        {\n-            removed.add( itr.next() );\n-            itr.remove();\n-        }\n+    @Override\n+    public int hashCode()\n+    {\n+      return Objects.hash(limit, value);\n+    }\n+  }\n \n-        tree.put( from, value );\n+  private final TreeMap<K, V> tree = new TreeMap<>();\n \n-        endKey = from;\n-        endValue = value;\n+  /* We optimize by keeping the open end range directly accessible. */\n+  private K endKey;\n+  private V endValue;\n \n-        return removed;\n-    }\n+  Collection<V> replaceFrom(K from, V value)\n+  {\n+    Collection<V> removed = new ArrayList<>();\n \n-    ValueRange<K,V> lookup( K at )\n+    Iterator<V> itr = tree.tailMap(from).values().iterator();\n+    while (itr.hasNext())\n     {\n-        if ( endKey != null && endKey.compareTo( at ) <= 0 )\n-        {\n-            return new ValueRange<>( null, endValue );\n-        }\n-\n-        Map.Entry<K,V> entry = tree.floorEntry( at );\n-        return new ValueRange<>( tree.higherKey( at ), entry != null ? entry.getValue() : null );\n+      removed.add(itr.next());\n+      itr.remove();\n     }\n \n-    public V last()\n+    tree.put(from, value);\n+\n+    endKey = from;\n+    endValue = value;\n+\n+    return removed;\n+  }\n+\n+  ValueRange<K, V> lookup(K at)\n+  {\n+    if (endKey != null && endKey.compareTo(at) <= 0)\n     {\n-        return endValue;\n+      return new ValueRange<>(null, endValue);\n     }\n \n-    public Set<Map.Entry<K,V>> entrySet()\n+    Map.Entry<K, V> entry = tree.floorEntry(at);\n+    return new ValueRange<>(tree.higherKey(at), entry != null ? entry.getValue() : null);\n+  }\n+\n+  public V last()\n+  {\n+    return endValue;\n+  }\n+\n+  public Set<Map.Entry<K, V>> entrySet()\n+  {\n+    return tree.entrySet();\n+  }\n+\n+  public Collection<V> remove(K lessThan)\n+  {\n+    Collection<V> removed = new ArrayList<>();\n+    K floor = tree.floorKey(lessThan);\n+\n+    Iterator<V> itr = tree.headMap(floor, false).values().iterator();\n+    while (itr.hasNext())\n     {\n-        return tree.entrySet();\n+      removed.add(itr.next());\n+      itr.remove();\n     }\n \n-    public Collection<V> remove( K lessThan )\n+    if (tree.isEmpty())\n     {\n-        Collection<V> removed = new ArrayList<>();\n-        K floor = tree.floorKey( lessThan );\n-\n-        Iterator<V> itr = tree.headMap( floor, false ).values().iterator();\n-        while ( itr.hasNext() )\n-        {\n-            removed.add( itr.next() );\n-            itr.remove();\n-        }\n-\n-        if ( tree.isEmpty() )\n-        {\n-            endKey = null;\n-            endValue = null;\n-        }\n-\n-        return removed;\n+      endKey = null;\n+      endValue = null;\n     }\n+\n+    return removed;\n+  }\n }\n",
            "diff_size": 149
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3773/OpenEndRangeMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3773/OpenEndRangeMap.java\nindex 23ba37fc9fe..c9235cb7a27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3773/OpenEndRangeMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3773/OpenEndRangeMap.java\n@@ -72,14 +72,14 @@ class OpenEndRangeMap<K extends Comparable<K>, V>\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            ValueRange<?,?> that = (ValueRange<?,?>) o;\n-            return Objects.equals( limit, that.limit ) &&\n-                   Objects.equals( value, that.value );\n-        }\n+            ValueRange<?, ?> that = (ValueRange<?, ?>) o;\n+            return Objects.equals( limit, that.limit ) &&Objects.equals( value, that.value );\n+    }\n \n         @Override\n         public int hashCode()\n@@ -106,8 +106,7 @@ class OpenEndRangeMap<K extends Comparable<K>, V>\n         }\n \n         tree.put( from, value );\n-\n-        endKey = from;\n+endKey = from;\n         endValue = value;\n \n         return removed;\n@@ -154,4 +153,4 @@ class OpenEndRangeMap<K extends Comparable<K>, V>\n \n         return removed;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
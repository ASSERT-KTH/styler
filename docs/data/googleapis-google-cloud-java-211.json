{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "211",
    "information": {
        "errors": [
            {
                "line": "33",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Google BigQuery Table field. A table field has a name, a value, a mode and possibly a description.\n * Supported types are: {@link Type#integer()}, {@link Type#bool()}, {@link Type#string()},\n * {@link Type#floatingPoint()}, {@link Type#timestamp()} and {@link Type#record(Field...)}. One or\n * more fields form a table's schema.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/211/Field.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/211/Field.java\nindex 73ca87640ff..73ef8c02ab5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/211/Field.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/211/Field.java\n@@ -59,7 +59,7 @@ public class Field implements Serializable {\n    * field types. To instantiate a RECORD value the list of sub-fields must be provided.\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n-   *     Data Types</a>\n+   * Data Types</a>\n    */\n   public static class Type implements Serializable {\n \n@@ -87,7 +87,7 @@ public class Field implements Serializable {\n      * Returns the value identifier.\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n-     *     Data Types</a>\n+     * Data Types</a>\n      */\n     public Value value() {\n       return value;\n@@ -195,7 +195,8 @@ public class Field implements Serializable {\n     private Mode mode;\n     private String description;\n \n-    private Builder() {}\n+    private Builder() {\n+    }\n \n     /**\n      * Sets the field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or\n@@ -211,7 +212,7 @@ public class Field implements Serializable {\n      * Sets the value of the field.\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n-     *     Data Types</a>\n+     * Data Types</a>\n      */\n     public Builder type(Type type) {\n       this.type = checkNotNull(type);\n@@ -260,7 +261,7 @@ public class Field implements Serializable {\n    * Returns the field value.\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n-   *     Data Types</a>\n+   * Data Types</a>\n    */\n   public Type type() {\n     return type;\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2, 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/211/Field.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/211/Field.java\nindex 73ca87640ff..de07ab874b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/211/Field.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/211/Field.java\n@@ -44,7 +44,8 @@ public class Field implements Serializable {\n           return Field.fromPb(pb);\n         }\n       };\n-  static final Function<Field, TableFieldSchema> TO_PB_FUNCTION =\n+\n+    static final Function<Field, TableFieldSchema> TO_PB_FUNCTION =\n       new Function<Field, TableFieldSchema>() {\n         @Override\n         public TableFieldSchema apply(Field field) {\n@@ -367,4 +368,4 @@ public class Field implements Serializable {\n     }\n     return fieldBuilder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "320",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/211/Field.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/211/Field.java\nindex 73ca87640ff..b37588bba7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/211/Field.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/211/Field.java\n@@ -24,7 +24,6 @@ import com.google.common.base.Function;\n import com.google.common.base.MoreObjects;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n-\n import java.io.Serializable;\n import java.util.List;\n import java.util.Objects;\n@@ -35,23 +34,23 @@ import java.util.Objects;\n  * {@link Type#floatingPoint()}, {@link Type#timestamp()} and {@link Type#record(Field...)}. One or\n  * more fields form a table's schema.\n  */\n+\n+\n public class Field implements Serializable {\n \n-  static final Function<TableFieldSchema, Field> FROM_PB_FUNCTION =\n-      new Function<TableFieldSchema, Field>() {\n-        @Override\n-        public Field apply(TableFieldSchema pb) {\n-          return Field.fromPb(pb);\n-        }\n-      };\n-  static final Function<Field, TableFieldSchema> TO_PB_FUNCTION =\n-      new Function<Field, TableFieldSchema>() {\n-        @Override\n-        public TableFieldSchema apply(Field field) {\n-          return field.toPb();\n-        }\n-      };\n+  static final Function<TableFieldSchema, Field> FROM_PB_FUNCTION = new Function<TableFieldSchema, Field>() {\n+@Override\n+public Field apply(TableFieldSchema pb) {\n+  return Field.fromPb(pb);\n+}\n+};\n \n+  static final Function<Field, TableFieldSchema> TO_PB_FUNCTION = new Function<Field, TableFieldSchema>() {\n+@Override\n+public TableFieldSchema apply(Field field) {\n+  return field.toPb();\n+}\n+};\n   private static final long serialVersionUID = -8154262932305199256L;\n \n   /**\n@@ -61,11 +60,13 @@ public class Field implements Serializable {\n    * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n    *     Data Types</a>\n    */\n+\n   public static class Type implements Serializable {\n \n     private static final long serialVersionUID = 2841484762609576959L;\n \n     public enum Value {\n+\n       STRING, INTEGER, FLOAT, BOOLEAN, TIMESTAMP, RECORD\n     }\n \n@@ -89,6 +90,7 @@ public class Field implements Serializable {\n      * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n      *     Data Types</a>\n      */\n+\n     public Value value() {\n       return value;\n     }\n@@ -97,6 +99,7 @@ public class Field implements Serializable {\n      * Returns the list of sub-fields if {@link #value()} is set to {@link Value#RECORD}. Returns\n      * {@code null} otherwise.\n      */\n+\n     public List<Field> fields() {\n       return fields;\n     }\n@@ -104,6 +107,7 @@ public class Field implements Serializable {\n     /**\n      * Returns a {@link Value#STRING} field value.\n      */\n+\n     public static Type string() {\n       return new Type(Value.STRING);\n     }\n@@ -111,6 +115,7 @@ public class Field implements Serializable {\n     /**\n      * Returns an {@link Value#INTEGER} field value.\n      */\n+\n     public static Type integer() {\n       return new Type(Value.INTEGER);\n     }\n@@ -118,6 +123,7 @@ public class Field implements Serializable {\n     /**\n      * Returns a {@link Value#FLOAT} field value.\n      */\n+\n     public static Type floatingPoint() {\n       return new Type(Value.FLOAT);\n     }\n@@ -125,6 +131,7 @@ public class Field implements Serializable {\n     /**\n      * Returns a {@link Value#BOOLEAN} field value.\n      */\n+\n     public static Type bool() {\n       return new Type(Value.BOOLEAN);\n     }\n@@ -132,6 +139,7 @@ public class Field implements Serializable {\n     /**\n      * Returns a {@link Value#TIMESTAMP} field value.\n      */\n+\n     public static Type timestamp() {\n       return new Type(Value.TIMESTAMP);\n     }\n@@ -139,6 +147,7 @@ public class Field implements Serializable {\n     /**\n      * Returns a {@link Value#RECORD} field value with associated list of sub-fields.\n      */\n+\n     public static Type record(Field... fields) {\n       return new Type(Value.RECORD, ImmutableList.copyOf(fields));\n     }\n@@ -146,16 +155,14 @@ public class Field implements Serializable {\n     /**\n      * Returns a {@link Value#RECORD} field value with associated list of sub-fields.\n      */\n+\n     public static Type record(List<Field> fields) {\n       return new Type(Value.RECORD, ImmutableList.copyOf(checkNotNull(fields)));\n     }\n \n     @Override\n     public String toString() {\n-      return MoreObjects.toStringHelper(this)\n-          .add(\"value\", value)\n-          .add(\"fields\", fields)\n-          .toString();\n+      return MoreObjects.toStringHelper(this).add(\"value\", value).add(\"fields\", fields).toString();\n     }\n \n     @Override\n@@ -170,7 +177,7 @@ public class Field implements Serializable {\n       }\n       Type other = (Type) obj;\n       return Objects.equals(value, other.value)\n-          && Objects.equals(fields, other.fields);\n+        && Objects.equals(fields, other.fields);\n     }\n   }\n \n@@ -179,7 +186,9 @@ public class Field implements Serializable {\n    * {@link Mode#REQUIRED} fields must be provided. {@link Mode#REPEATED} fields can contain more\n    * than one value.\n    */\n+\n   public enum Mode {\n+\n     NULLABLE, REQUIRED, REPEATED\n   }\n \n@@ -202,6 +211,7 @@ public class Field implements Serializable {\n      * underscores (_), and must start with a letter or underscore. The maximum length is 128\n      * characters.\n      */\n+\n     public Builder name(String name) {\n       this.name = checkNotNull(name);\n       return this;\n@@ -213,6 +223,7 @@ public class Field implements Serializable {\n      * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n      *     Data Types</a>\n      */\n+\n     public Builder type(Type type) {\n       this.type = checkNotNull(type);\n       return this;\n@@ -221,6 +232,7 @@ public class Field implements Serializable {\n     /**\n      * Sets the mode of the field. When not specified {@link Mode#NULLABLE} is used.\n      */\n+\n     public Builder mode(Mode mode) {\n       this.mode = mode;\n       return this;\n@@ -229,6 +241,7 @@ public class Field implements Serializable {\n     /**\n      * Sets the field description. The maximum length is 16K characters.\n      */\n+\n     public Builder description(String description) {\n       this.description = description;\n       return this;\n@@ -237,6 +250,7 @@ public class Field implements Serializable {\n     /**\n      * Creates a {@code Field} object.\n      */\n+\n     public Field build() {\n       return new Field(this);\n     }\n@@ -252,6 +266,7 @@ public class Field implements Serializable {\n   /**\n    * Returns the field name.\n    */\n+\n   public String name() {\n     return name;\n   }\n@@ -262,6 +277,7 @@ public class Field implements Serializable {\n    * @see <a href=\"https://cloud.google.com/bigquery/preparing-data-for-bigquery#datatypes\">\n    *     Data Types</a>\n    */\n+\n   public Type type() {\n     return type;\n   }\n@@ -269,6 +285,7 @@ public class Field implements Serializable {\n   /**\n    * Returns the field mode. By default {@link Mode#NULLABLE} is used.\n    */\n+\n   public Mode mode() {\n     return mode;\n   }\n@@ -276,6 +293,7 @@ public class Field implements Serializable {\n   /**\n    * Returns the field description.\n    */\n+\n   public String description() {\n     return description;\n   }\n@@ -284,6 +302,7 @@ public class Field implements Serializable {\n    * Returns the list of sub-fields if {@link #type()} is a {@link Type.Value#RECORD}. Returns\n    * {@code null} otherwise.\n    */\n+\n   public List<Field> fields() {\n     return type.fields();\n   }\n@@ -291,22 +310,14 @@ public class Field implements Serializable {\n   /**\n    * Returns a builder for the {@code Field} object.\n    */\n+\n   public Builder toBuilder() {\n-    return new Builder()\n-        .name(this.name)\n-        .type(this.type)\n-        .mode(this.mode)\n-        .description(this.description);\n+    return new Builder().name(this.name).type(this.type).mode(this.mode).description(this.description);\n   }\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"name\", name)\n-        .add(\"value\", type)\n-        .add(\"mode\", mode)\n-        .add(\"description\", description)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"name\", name).add(\"value\", type).add(\"mode\", mode).add(\"description\", description).toString();\n   }\n \n   @Override\n@@ -316,7 +327,8 @@ public class Field implements Serializable {\n \n   @Override\n   public boolean equals(Object obj) {\n-    return obj instanceof Field && Objects.equals(toPb(), ((Field) obj).toPb());\n+    return obj instanceof Field\n+      && Objects.equals(toPb(), ((Field) obj).toPb());\n   }\n \n   TableFieldSchema toPb() {\n@@ -339,6 +351,7 @@ public class Field implements Serializable {\n   /**\n    * Returns a Field object with given name and value.\n    */\n+\n   public static Field of(String name, Type type) {\n     return builder(name, type).build();\n   }\n@@ -346,6 +359,7 @@ public class Field implements Serializable {\n   /**\n    * Returns a builder for a Field object with given name and value.\n    */\n+\n   public static Builder builder(String name, Type type) {\n     return new Builder().name(name).type(type);\n   }\n@@ -367,4 +381,4 @@ public class Field implements Serializable {\n     }\n     return fieldBuilder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 68
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
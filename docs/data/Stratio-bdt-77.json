{
    "project_name": "Stratio-bdt",
    "error_id": "77",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.stratio.qa.specs;\n\nimport com.stratio.qa.utils.ThreadProperty;\nimport cucumber.api.DataTable;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/77/ThenGTest.java\nindex 9aa2a83edb7..04b06d31df7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/77/ThenGTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/77/ThenGTest.java\nindex 9aa2a83edb7..345b1021689 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/77/ThenGTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -35,7 +36,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -60,7 +61,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -85,7 +86,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -109,7 +110,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -133,7 +134,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -157,7 +158,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -182,7 +183,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -206,7 +207,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n@@ -226,7 +227,7 @@ public class ThenGTest {\n         ThenGSpec theng = new ThenGSpec(commong);\n \n         String result = new String(Files.readAllBytes(\n-                Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n+            Paths.get(getClass().getClassLoader().getResource(baseData).getFile())));\n \n         ThreadProperty.set(envVar, result);\n \n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/77/ThenGTest.java\nindex 9aa2a83edb7..69fd187c4e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/77/ThenGTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -50,8 +51,7 @@ public class ThenGTest {\n \n     }\n \n-\n-    @Test\n+@Test\n     public void testValueNotEqualInJSON() throws Exception {\n         String baseData = \"consulMesosJSON.conf\";\n         String envVar = \"consulMesos\";\n@@ -75,8 +75,7 @@ public class ThenGTest {\n \n     }\n \n-\n-    @Test\n+@Test\n     public void testValueContainsInJSON() throws Exception {\n         String baseData = \"consulMesosJSON.conf\";\n         String envVar = \"consulMesos\";\n@@ -172,8 +171,7 @@ public class ThenGTest {\n \n     }\n \n-\n-    @Test\n+@Test\n     public void testSizeInJSON() throws Exception {\n         String baseData = \"consulMesosJSON.conf\";\n         String envVar = \"exampleEnvVar\";\n@@ -272,4 +270,4 @@ public class ThenGTest {\n         theng.checkValue(ThreadProperty.get(envVar), \"is lower than\", \"1O\");\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/77/ThenGTest.java\nindex 9aa2a83edb7..04b06d31df7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/77/ThenGTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/77/ThenGTest.java\nindex 9aa2a83edb7..04b06d31df7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/77/ThenGTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/77/ThenGTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
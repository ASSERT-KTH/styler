{
    "project_name": "apache-metron",
    "error_id": "86",
    "information": {
        "errors": [
            {
                "line": "37",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 109).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\npublic class SequenceFileIterable implements Iterable<byte[]> {\n  private static final LazyLogger LOGGER = LazyLoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n  private List<Path> files;\n  private Configuration config;\n",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/86/SequenceFileIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/86/SequenceFileIterable.java\nindex 17f2fc757bc..d52b0da211d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/86/SequenceFileIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/86/SequenceFileIterable.java\n@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -34,7 +34,8 @@ import org.apache.metron.common.utils.LazyLogger;\n import org.apache.metron.common.utils.LazyLoggerFactory;\n \n public class SequenceFileIterable implements Iterable<byte[]> {\n-  private static final LazyLogger LOGGER = LazyLoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+  private static final LazyLogger LOGGER =\n+      LazyLoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n   private List<Path> files;\n   private Configuration config;\n \n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
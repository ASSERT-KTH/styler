{
    "project_name": "seedstack-business",
    "error_id": "126",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.pagination.dsl;\n\nimport java.util.stream.Stream;\nimport org.seedstack.business.domain.AggregateRoot;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/126/Paginator.java\nindex 812b1175739..aadcd478738 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/126/Paginator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.pagination.dsl;\n \n import java.util.stream.Stream;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/126/Paginator.java\nindex 812b1175739..aadcd478738 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/126/Paginator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.pagination.dsl;\n \n import java.util.stream.Stream;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/126/Paginator.java\nindex 812b1175739..3d95f2964ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/126/Paginator.java\n@@ -55,7 +55,4 @@ public interface Paginator {\n      * @return the next operation of the paginator DSL, allowing to choose the type of pagination.\n      */\n     <T> SlicePaginationPicker<T> paginate(Iterable<T> iterable);\n-}\n-\n-\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "24",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "31",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "33",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 424, indentation should be the same level as line 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 472).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "column": "425",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 424, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 424, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 480).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "column": "425",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 424, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 424, indentation should be the same level as line 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 484).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "column": "425",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 424, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/126/Paginator.java\nindex 812b1175739..b6e7e9c6748 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/126/Paginator.java\n@@ -17,6 +17,8 @@ import org.seedstack.business.domain.Repository;\n  * {@link org.seedstack.business.pagination.Page}.\n  * It supports page-based, offset-based and key-based pagination.\n  */\n+\n+\n public interface Paginator {\n \n     /**\n@@ -26,8 +28,7 @@ public interface Paginator {\n      * @param <A>        the aggregate root type that is paginated.\n      * @param <I>        the aggregate root identifier type.\n      * @return the next operation of the paginator DSL, allowing to specify repository options.\n-     */\n-    <A extends AggregateRoot<I>, I> RepositoryOptionsPicker<A, I> paginate(Repository<A, I> repository);\n+     */<A extends AggregateRoot<I>, I> RepositoryOptionsPicker<A, I> paginate(Repository<A, I> repository);\n \n     /**\n      * Initiate a pagination operation using a unique object as source.\n@@ -36,7 +37,7 @@ public interface Paginator {\n      * @param <T>    the type of the source object.\n      * @return the next operation of the paginator DSL, allowing to choose the type of pagination.\n      */\n-    <T> SlicePaginationPicker<T> paginate(T object);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                        <T> SlicePaginationPicker<T> paginate(T object);\n \n     /**\n      * Initiate a pagination operation using a stream of objects as source.\n@@ -45,7 +46,7 @@ public interface Paginator {\n      * @param <T>    the type of the source object.\n      * @return the next operation of the paginator DSL, allowing to choose the type of pagination.\n      */\n-    <T> SlicePaginationPicker<T> paginate(Stream<T> stream);\n+                                                                                                                                                                                                                                                                                                                                                                                                                                        <T> SlicePaginationPicker<T> paginate(Stream<T> stream);\n \n     /**\n      * Initiate a pagination operation using an {@link Iterable} as source.\n@@ -54,8 +55,5 @@ public interface Paginator {\n      * @param <T>      the type of the source object.\n      * @return the next operation of the paginator DSL, allowing to choose the type of pagination.\n      */\n-    <T> SlicePaginationPicker<T> paginate(Iterable<T> iterable);\n-}\n-\n-\n-\n+                                                                                                                                                                                                                                                                                                                                                                                                                                        <T> SlicePaginationPicker<T> paginate(Iterable<T> iterable);\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/126/Paginator.java\nindex 812b1175739..aadcd478738 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/126/Paginator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.pagination.dsl;\n \n import java.util.stream.Stream;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/126/Paginator.java\nindex 812b1175739..aadcd478738 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/126/Paginator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/126/Paginator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.pagination.dsl;\n \n import java.util.stream.Stream;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
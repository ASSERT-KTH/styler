{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1178",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1178/ClasspathHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1178/ClasspathHelper.java\nindex b04b28ac3a3..00a382aa766 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1178/ClasspathHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1178/ClasspathHelper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.io.File;\n@@ -29,89 +30,88 @@ import java.util.Set;\n \n final class ClasspathHelper\n {\n-    private ClasspathHelper()\n+  private ClasspathHelper()\n+  {\n+    throw new AssertionError(\"Not for instantiation!\");\n+  }\n+\n+  static String javaClasspathString()\n+  {\n+    return System.getProperty(\"java.class.path\");\n+  }\n+\n+  static Set<String> javaClasspath()\n+  {\n+    String[] classpathElements = javaClasspathString().split(File.pathSeparator);\n+    Set<String> result = new LinkedHashSet<>();\n+\n+    for (String element : classpathElements)\n     {\n-        throw new AssertionError( \"Not for instantiation!\" );\n+      result.add(canonicalPath(element));\n     }\n \n-    static String javaClasspathString()\n-    {\n-        return System.getProperty( \"java.class.path\" );\n-    }\n+    return result;\n+  }\n \n-    static Set<String> javaClasspath()\n-    {\n-        String[] classpathElements = javaClasspathString().split( File.pathSeparator );\n-        Set<String> result = new LinkedHashSet<>();\n-\n-        for ( String element : classpathElements )\n-        {\n-            result.add( canonicalPath( element ) );\n-        }\n+  static String fullClasspathStringFor(ClassLoader classLoader)\n+  {\n+    Set<String> classpathElements = fullClasspathFor(classLoader);\n+    return formClasspathString(classpathElements);\n+  }\n \n-        return result;\n-    }\n+  static Set<String> fullClasspathFor(ClassLoader classLoader)\n+  {\n+    Set<String> result = new LinkedHashSet<>();\n \n-    static String fullClasspathStringFor( ClassLoader classLoader )\n-    {\n-        Set<String> classpathElements = fullClasspathFor( classLoader );\n-        return formClasspathString( classpathElements );\n-    }\n+    result.addAll(javaClasspath());\n \n-    static Set<String> fullClasspathFor( ClassLoader classLoader )\n+    ClassLoader loader = classLoader;\n+    while (loader != null)\n     {\n-        Set<String> result = new LinkedHashSet<>();\n-\n-        result.addAll( javaClasspath() );\n-\n-        ClassLoader loader = classLoader;\n-        while ( loader != null )\n+      if (loader instanceof URLClassLoader)\n+      {\n+        for (URL url : ((URLClassLoader) loader).getURLs())\n         {\n-            if ( loader instanceof URLClassLoader )\n-            {\n-                for ( URL url : ((URLClassLoader) loader).getURLs() )\n-                {\n-                    result.add( canonicalPath( url ) );\n-                }\n-            }\n-            loader = loader.getParent();\n+          result.add(canonicalPath(url));\n         }\n-\n-        return result;\n+      }\n+      loader = loader.getParent();\n     }\n \n-    private static String canonicalPath( URL url )\n-    {\n-        return canonicalPath( url.getPath() );\n-    }\n+    return result;\n+  }\n \n-    private static String canonicalPath( String path )\n-    {\n-        try\n-        {\n-            File file = new File( path );\n-            return file.getCanonicalPath();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( \"Failed to get canonical path for: '\" + path + \"'\", e );\n-        }\n-    }\n+  private static String canonicalPath(URL url)\n+  {\n+    return canonicalPath(url.getPath());\n+  }\n \n-    private static String formClasspathString( Set<String> classPathElements )\n+  private static String canonicalPath(String path)\n+  {\n+    try\n     {\n-        StringBuilder classpath = new StringBuilder();\n+      File file = new File(path);\n+      return file.getCanonicalPath();\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(\"Failed to get canonical path for: '\" + path + \"'\", e);\n+    }\n+  }\n \n-        Iterator<String> classPathElementsIterator = classPathElements.iterator();\n-        while ( classPathElementsIterator.hasNext() )\n-        {\n-            classpath.append( classPathElementsIterator.next() );\n-            if ( classPathElementsIterator.hasNext() )\n-            {\n-                classpath.append( File.pathSeparator );\n-            }\n-        }\n+  private static String formClasspathString(Set<String> classPathElements)\n+  {\n+    StringBuilder classpath = new StringBuilder();\n \n-        return classpath.toString();\n+    Iterator<String> classPathElementsIterator = classPathElements.iterator();\n+    while (classPathElementsIterator.hasNext())\n+    {\n+      classpath.append(classPathElementsIterator.next());\n+      if (classPathElementsIterator.hasNext())\n+      {\n+        classpath.append(File.pathSeparator);\n+      }\n     }\n+\n+    return classpath.toString();\n+  }\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1178/ClasspathHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1178/ClasspathHelper.java\nindex b04b28ac3a3..912dfc0fa61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1178/ClasspathHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1178/ClasspathHelper.java\n@@ -43,8 +43,7 @@ final class ClasspathHelper\n     {\n         String[] classpathElements = javaClasspathString().split( File.pathSeparator );\n         Set<String> result = new LinkedHashSet<>();\n-\n-        for ( String element : classpathElements )\n+for ( String element : classpathElements )\n         {\n             result.add( canonicalPath( element ) );\n         }\n@@ -61,10 +60,8 @@ final class ClasspathHelper\n     static Set<String> fullClasspathFor( ClassLoader classLoader )\n     {\n         Set<String> result = new LinkedHashSet<>();\n-\n-        result.addAll( javaClasspath() );\n-\n-        ClassLoader loader = classLoader;\n+result.addAll( javaClasspath() );\n+ClassLoader loader = classLoader;\n         while ( loader != null )\n         {\n             if ( loader instanceof URLClassLoader )\n@@ -114,4 +111,4 @@ final class ClasspathHelper\n \n         return classpath.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
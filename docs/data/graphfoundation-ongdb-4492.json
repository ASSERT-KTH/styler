{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4492",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4492/PluginAuthenticationInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4492/PluginAuthenticationInfo.java\nindex 419734040a5..e1725d47034 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4492/PluginAuthenticationInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4492/PluginAuthenticationInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth.plugin;\n \n import org.apache.shiro.crypto.hash.SimpleHash;\n@@ -31,65 +32,63 @@ import org.neo4j.server.security.enterprise.auth.plugin.spi.CustomCacheableAuthe\n \n class PluginAuthenticationInfo extends ShiroAuthenticationInfo implements CustomCredentialsMatcherSupplier\n {\n-    private CustomCacheableAuthenticationInfo.CredentialsMatcher credentialsMatcher;\n+  private CustomCacheableAuthenticationInfo.CredentialsMatcher credentialsMatcher;\n \n-    private PluginAuthenticationInfo( Object principal, String realmName,\n-            CustomCacheableAuthenticationInfo.CredentialsMatcher credentialsMatcher )\n-    {\n-        super( principal, realmName, AuthenticationResult.SUCCESS );\n-        this.credentialsMatcher = credentialsMatcher;\n-    }\n+  private PluginAuthenticationInfo(Object principal, String realmName,\n+                                   CustomCacheableAuthenticationInfo.CredentialsMatcher credentialsMatcher)\n+  {\n+    super(principal, realmName, AuthenticationResult.SUCCESS);\n+    this.credentialsMatcher = credentialsMatcher;\n+  }\n \n-    private PluginAuthenticationInfo( Object principal, Object hashedCredentials, ByteSource credentialsSalt,\n-            String realmName )\n-    {\n-        super( principal, hashedCredentials, credentialsSalt, realmName, AuthenticationResult.SUCCESS );\n-    }\n+  private PluginAuthenticationInfo(Object principal, Object hashedCredentials, ByteSource credentialsSalt,\n+                                   String realmName)\n+  {\n+    super(principal, hashedCredentials, credentialsSalt, realmName, AuthenticationResult.SUCCESS);\n+  }\n \n-    @Override\n-    public CustomCacheableAuthenticationInfo.CredentialsMatcher getCredentialsMatcher()\n-    {\n-        return credentialsMatcher;\n-    }\n+  @Override\n+  public CustomCacheableAuthenticationInfo.CredentialsMatcher getCredentialsMatcher()\n+  {\n+    return credentialsMatcher;\n+  }\n \n-    private static PluginAuthenticationInfo create(\n-            AuthenticationInfo authenticationInfo,\n-            String realmName )\n-    {\n-        return new PluginAuthenticationInfo( authenticationInfo.principal(), realmName, null );\n-    }\n+  private static PluginAuthenticationInfo create(\n+      AuthenticationInfo authenticationInfo,\n+      String realmName)\n+  {\n+    return new PluginAuthenticationInfo(authenticationInfo.principal(), realmName, null);\n+  }\n \n-    private static PluginAuthenticationInfo create(\n-            AuthenticationInfo authenticationInfo,\n-            SimpleHash hashedCredentials,\n-            String realmName )\n-    {\n-        return new PluginAuthenticationInfo(\n-                            authenticationInfo.principal(),\n-                            hashedCredentials.getBytes(),\n-                            hashedCredentials.getSalt(),\n-                            realmName );\n-    }\n+  private static PluginAuthenticationInfo create(\n+      AuthenticationInfo authenticationInfo,\n+      SimpleHash hashedCredentials,\n+      String realmName)\n+  {\n+    return new PluginAuthenticationInfo(\n+        authenticationInfo.principal(),\n+        hashedCredentials.getBytes(),\n+        hashedCredentials.getSalt(),\n+        realmName);\n+  }\n \n-    public static PluginAuthenticationInfo createCacheable(\n-            AuthenticationInfo authenticationInfo,\n-            String realmName,\n-            SecureHasher secureHasher )\n+  public static PluginAuthenticationInfo createCacheable(\n+      AuthenticationInfo authenticationInfo,\n+      String realmName,\n+      SecureHasher secureHasher)\n+  {\n+    if (authenticationInfo instanceof CustomCacheableAuthenticationInfo)\n+    {\n+      CustomCacheableAuthenticationInfo info = (CustomCacheableAuthenticationInfo) authenticationInfo;\n+      return new PluginAuthenticationInfo(authenticationInfo.principal(), realmName, info.credentialsMatcher());\n+    } else if (authenticationInfo instanceof CacheableAuthenticationInfo)\n+    {\n+      byte[] credentials = ((CacheableAuthenticationInfo) authenticationInfo).credentials();\n+      SimpleHash hashedCredentials = secureHasher.hash(credentials);\n+      return PluginAuthenticationInfo.create(authenticationInfo, hashedCredentials, realmName);\n+    } else\n     {\n-        if ( authenticationInfo instanceof CustomCacheableAuthenticationInfo )\n-        {\n-            CustomCacheableAuthenticationInfo info = (CustomCacheableAuthenticationInfo) authenticationInfo;\n-            return new PluginAuthenticationInfo( authenticationInfo.principal(), realmName, info.credentialsMatcher() );\n-        }\n-        else if ( authenticationInfo instanceof CacheableAuthenticationInfo )\n-        {\n-            byte[] credentials = ((CacheableAuthenticationInfo) authenticationInfo).credentials();\n-            SimpleHash hashedCredentials = secureHasher.hash( credentials );\n-            return PluginAuthenticationInfo.create( authenticationInfo, hashedCredentials, realmName );\n-        }\n-        else\n-        {\n-            return PluginAuthenticationInfo.create( authenticationInfo, realmName );\n-        }\n+      return PluginAuthenticationInfo.create(authenticationInfo, realmName);\n     }\n+  }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4492/PluginAuthenticationInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4492/PluginAuthenticationInfo.java\nindex 419734040a5..f066cad0a31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4492/PluginAuthenticationInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4492/PluginAuthenticationInfo.java\n@@ -52,27 +52,20 @@ class PluginAuthenticationInfo extends ShiroAuthenticationInfo implements Custom\n         return credentialsMatcher;\n     }\n \n-    private static PluginAuthenticationInfo create(\n-            AuthenticationInfo authenticationInfo,\n+    private static PluginAuthenticationInfo create( AuthenticationInfo authenticationInfo,\n             String realmName )\n     {\n         return new PluginAuthenticationInfo( authenticationInfo.principal(), realmName, null );\n     }\n \n-    private static PluginAuthenticationInfo create(\n-            AuthenticationInfo authenticationInfo,\n+    private static PluginAuthenticationInfo create( AuthenticationInfo authenticationInfo,\n             SimpleHash hashedCredentials,\n             String realmName )\n     {\n-        return new PluginAuthenticationInfo(\n-                            authenticationInfo.principal(),\n-                            hashedCredentials.getBytes(),\n-                            hashedCredentials.getSalt(),\n-                            realmName );\n+        return new PluginAuthenticationInfo( authenticationInfo.principal(), hashedCredentials.getBytes(), hashedCredentials.getSalt(), realmName );\n     }\n \n-    public static PluginAuthenticationInfo createCacheable(\n-            AuthenticationInfo authenticationInfo,\n+    public static PluginAuthenticationInfo createCacheable( AuthenticationInfo authenticationInfo,\n             String realmName,\n             SecureHasher secureHasher )\n     {\n@@ -92,4 +85,4 @@ class PluginAuthenticationInfo extends ShiroAuthenticationInfo implements Custom\n             return PluginAuthenticationInfo.create( authenticationInfo, realmName );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
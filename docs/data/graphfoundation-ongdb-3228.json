{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3228",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "189",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "241",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "274",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "304",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "316",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "321",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "333",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "341",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "355",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "358",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "378",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3228/MasterImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3228/MasterImpl.java\nindex c06e074e375..f31190c4015 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3228/MasterImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3228/MasterImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.com.master;\n \n import java.io.IOException;\n@@ -56,341 +57,329 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n  */\n public class MasterImpl extends LifecycleAdapter implements Master\n {\n-    public interface Monitor\n-    {\n-        void initializeTx( RequestContext context );\n-    }\n-\n-    // This is a bridge SPI that MasterImpl requires to function. Eventually this should be split\n-    // up into many smaller APIs implemented by other services so that this is not needed.\n-    // This SPI allows MasterImpl to have no direct dependencies, and instead puts those dependencies into the\n-    // SPI implementation, thus making it easier to test this class by mocking the SPI.\n-    public interface SPI\n-    {\n-        boolean isAccessible();\n-\n-        IdAllocation allocateIds( IdType idType );\n-\n-        StoreId storeId();\n-\n-        long applyPreparedTransaction( TransactionRepresentation preparedTransaction )\n-                throws TransactionFailureException;\n-\n-        Integer createRelationshipType( String name );\n-\n-        long getTransactionChecksum( long txId ) throws IOException;\n-\n-        RequestContext flushStoresAndStreamStoreFiles( StoreWriter writer );\n-\n-        <T> Response<T> packEmptyResponse( T response );\n-\n-        <T> Response<T> packTransactionStreamResponse( RequestContext context, T response );\n-\n-        <T> Response<T> packTransactionObligationResponse( RequestContext context, T response );\n-\n-        int getOrCreateLabel( String name );\n-\n-        int getOrCreateProperty( String name );\n-\n-    }\n-\n-    private final SPI spi;\n-    private final Config config;\n-    private final Monitor monitor;\n-    private final long epoch;\n-\n-    private final ConversationManager conversationManager;\n-\n-    public MasterImpl( SPI spi, ConversationManager conversationManager, Monitor monitor, Config config )\n-    {\n-        this.spi = spi;\n-        this.config = config;\n-        this.monitor = monitor;\n-        this.conversationManager = conversationManager;\n-        this.epoch = generateEpoch();\n-    }\n-\n-    private long generateEpoch()\n-    {\n-        return ( ( ( (long) config.get( ClusterSettings.server_id ).toIntegerIndex() ) ) << 48 ) | System.currentTimeMillis();\n-    }\n-\n-    @Override\n-    public void start()\n+  public interface Monitor\n+  {\n+    void initializeTx(RequestContext context);\n+  }\n+\n+  // This is a bridge SPI that MasterImpl requires to function. Eventually this should be split\n+  // up into many smaller APIs implemented by other services so that this is not needed.\n+  // This SPI allows MasterImpl to have no direct dependencies, and instead puts those dependencies into the\n+  // SPI implementation, thus making it easier to test this class by mocking the SPI.\n+  public interface SPI\n+  {\n+    boolean isAccessible();\n+\n+    IdAllocation allocateIds(IdType idType);\n+\n+    StoreId storeId();\n+\n+    long applyPreparedTransaction(TransactionRepresentation preparedTransaction)\n+        throws TransactionFailureException;\n+\n+    Integer createRelationshipType(String name);\n+\n+    long getTransactionChecksum(long txId) throws IOException;\n+\n+    RequestContext flushStoresAndStreamStoreFiles(StoreWriter writer);\n+\n+    <T> Response<T> packEmptyResponse(T response);\n+\n+    <T> Response<T> packTransactionStreamResponse(RequestContext context, T response);\n+\n+    <T> Response<T> packTransactionObligationResponse(RequestContext context, T response);\n+\n+    int getOrCreateLabel(String name);\n+\n+    int getOrCreateProperty(String name);\n+\n+  }\n+\n+  private final SPI spi;\n+  private final Config config;\n+  private final Monitor monitor;\n+  private final long epoch;\n+\n+  private final ConversationManager conversationManager;\n+\n+  public MasterImpl(SPI spi, ConversationManager conversationManager, Monitor monitor, Config config)\n+  {\n+    this.spi = spi;\n+    this.config = config;\n+    this.monitor = monitor;\n+    this.conversationManager = conversationManager;\n+    this.epoch = generateEpoch();\n+  }\n+\n+  private long generateEpoch()\n+  {\n+    return ((((long) config.get(ClusterSettings.server_id).toIntegerIndex())) << 48) | System.currentTimeMillis();\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    conversationManager.start();\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    conversationManager.stop();\n+  }\n+\n+  /**\n+   * Basically for all public methods call this assertion to verify that the caller meant to call this\n+   * master. The epoch is the one handed out from {@link #handshake(long, StoreId)}.\n+   * Exceptions to the above are:\n+   * o {@link #handshake(long, StoreId)}\n+   * o {@link #copyStore(RequestContext, StoreWriter)}\n+   * o {@link #pullUpdates(RequestContext)}\n+   * <p>\n+   * all other methods must have this.\n+   *\n+   * @param context the request context containing the epoch the request thinks it's for.\n+   */\n+  private void assertCorrectEpoch(RequestContext context)\n+  {\n+    if (this.epoch != context.getEpoch())\n     {\n-        conversationManager.start();\n+      throw new InvalidEpochException(epoch, context.getEpoch());\n     }\n-\n-    @Override\n-    public void stop()\n+  }\n+\n+  @Override\n+  public Response<IdAllocation> allocateIds(RequestContext context, IdType idType)\n+  {\n+    assertCorrectEpoch(context);\n+    IdAllocation result = spi.allocateIds(idType);\n+    return spi.packEmptyResponse(result);\n+  }\n+\n+  @Override\n+  public Response<Long> commit(RequestContext context, TransactionRepresentation preparedTransaction)\n+      throws TransactionFailureException\n+  {\n+    assertCorrectEpoch(context);\n+\n+    // There are two constraints relating to locking during commit:\n+    // 1) If the client is has grabbed locks, we need to ensure those locks remain live during commit\n+    // 2) We must hold a schema read lock while committing, to not race with schema transactions on the master\n+    //\n+    // To satisfy this, we must determine if the client is holding locks, and if so, use that lock client, and if\n+    // not, we use a one-off lock client. The way the client signals this is via the 'eventIdentifier' in the\n+    // request. -1 means no locks are held, any other number means there should be a matching lock session.\n+\n+    if (context.getEventIdentifier() == Locks.Client.NO_LOCK_SESSION_ID)\n     {\n-        conversationManager.stop();\n-    }\n-\n-    /**\n-     * Basically for all public methods call this assertion to verify that the caller meant to call this\n-     * master. The epoch is the one handed out from {@link #handshake(long, StoreId)}.\n-     * Exceptions to the above are:\n-     * o {@link #handshake(long, StoreId)}\n-     * o {@link #copyStore(RequestContext, StoreWriter)}\n-     * o {@link #pullUpdates(RequestContext)}\n-     *\n-     * all other methods must have this.\n-     * @param context the request context containing the epoch the request thinks it's for.\n-     */\n-    private void assertCorrectEpoch( RequestContext context )\n+      // Client is not holding locks, use a temporary lock client\n+      try (Conversation conversation = conversationManager.acquire())\n+      {\n+        return commit0(context, preparedTransaction);\n+      }\n+    } else\n     {\n-        if ( this.epoch != context.getEpoch() )\n+      // Client is holding locks, use the clients lock session\n+      try\n+      {\n+        Conversation conversation = conversationManager.acquire(context);\n+        try\n         {\n-            throw new InvalidEpochException( epoch, context.getEpoch() );\n+          return commit0(context, preparedTransaction);\n+        } finally\n+        {\n+          conversationManager.release(context);\n         }\n+      } catch (NoSuchEntryException | ConcurrentAccessException e)\n+      {\n+        throw new TransactionNotPresentOnMasterException(context);\n+      }\n     }\n-\n-    @Override\n-    public Response<IdAllocation> allocateIds( RequestContext context, IdType idType )\n+  }\n+\n+  private Response<Long> commit0(RequestContext context, TransactionRepresentation preparedTransaction)\n+      throws TransactionFailureException\n+  {\n+    long txId = spi.applyPreparedTransaction(preparedTransaction);\n+    return spi.packTransactionObligationResponse(context, txId);\n+  }\n+\n+  @Override\n+  public Response<Integer> createRelationshipType(RequestContext context, String name)\n+  {\n+    assertCorrectEpoch(context);\n+    return spi.packTransactionObligationResponse(context, spi.createRelationshipType(name));\n+  }\n+\n+  @Override\n+  public Response<Integer> createPropertyKey(RequestContext context, String name)\n+  {\n+    assertCorrectEpoch(context);\n+    return spi.packTransactionObligationResponse(context, spi.getOrCreateProperty(name));\n+  }\n+\n+  @Override\n+  public Response<Integer> createLabel(RequestContext context, String name)\n+  {\n+    assertCorrectEpoch(context);\n+    return spi.packTransactionObligationResponse(context, spi.getOrCreateLabel(name));\n+  }\n+\n+  @Override\n+  public Response<Void> pullUpdates(RequestContext context)\n+  {\n+    return spi.packTransactionStreamResponse(context, null);\n+  }\n+\n+  @Override\n+  public Response<HandshakeResult> handshake(long txId, StoreId storeId)\n+  {\n+    try\n+    {\n+      long checksum = spi.getTransactionChecksum(txId);\n+      return spi.packEmptyResponse(new HandshakeResult(checksum, epoch));\n+    } catch (IOException e)\n     {\n-        assertCorrectEpoch( context );\n-        IdAllocation result = spi.allocateIds( idType );\n-        return spi.packEmptyResponse( result );\n+      throw new RuntimeException(\"Couldn't get master ID for transaction id \" + txId, e);\n     }\n+  }\n \n-    @Override\n-    public Response<Long> commit( RequestContext context, TransactionRepresentation preparedTransaction )\n-            throws TransactionFailureException\n+  @Override\n+  public Response<Void> copyStore(RequestContext requestContext, StoreWriter writer)\n+  {\n+    RequestContext context;\n+    try (StoreWriter storeWriter = writer)\n     {\n-        assertCorrectEpoch( context );\n+      context = spi.flushStoresAndStreamStoreFiles(storeWriter);\n+    }   // close the store writer\n \n-        // There are two constraints relating to locking during commit:\n-        // 1) If the client is has grabbed locks, we need to ensure those locks remain live during commit\n-        // 2) We must hold a schema read lock while committing, to not race with schema transactions on the master\n-        //\n-        // To satisfy this, we must determine if the client is holding locks, and if so, use that lock client, and if\n-        // not, we use a one-off lock client. The way the client signals this is via the 'eventIdentifier' in the\n-        // request. -1 means no locks are held, any other number means there should be a matching lock session.\n+    return spi.packTransactionStreamResponse(context, null);\n+  }\n \n-        if ( context.getEventIdentifier() == Locks.Client.NO_LOCK_SESSION_ID )\n-        {\n-            // Client is not holding locks, use a temporary lock client\n-            try ( Conversation conversation = conversationManager.acquire() )\n-            {\n-                return commit0( context, preparedTransaction );\n-            }\n-        }\n-        else\n-        {\n-            // Client is holding locks, use the clients lock session\n-            try\n-            {\n-                Conversation conversation = conversationManager.acquire( context );\n-                try\n-                {\n-                    return commit0( context, preparedTransaction );\n-                }\n-                finally\n-                {\n-                    conversationManager.release(context);\n-                }\n-            }\n-            catch ( NoSuchEntryException | ConcurrentAccessException e )\n-            {\n-                throw new TransactionNotPresentOnMasterException( context );\n-            }\n-        }\n-    }\n+  @Override\n+  public Response<Void> newLockSession(RequestContext context) throws TransactionFailureException\n+  {\n+    monitor.initializeTx(context);\n \n-    private Response<Long> commit0( RequestContext context, TransactionRepresentation preparedTransaction )\n-            throws TransactionFailureException\n+    if (!spi.isAccessible())\n     {\n-        long txId = spi.applyPreparedTransaction( preparedTransaction );\n-        return spi.packTransactionObligationResponse( context, txId );\n+      throw new TransactionFailureException(Status.General.DatabaseUnavailable,\n+          \"Database is currently not available\");\n     }\n+    assertCorrectEpoch(context);\n \n-    @Override\n-    public Response<Integer> createRelationshipType( RequestContext context, String name )\n+    try\n     {\n-        assertCorrectEpoch( context );\n-        return spi.packTransactionObligationResponse( context, spi.createRelationshipType( name ) );\n-    }\n-\n-    @Override\n-    public Response<Integer> createPropertyKey( RequestContext context, String name )\n+      conversationManager.begin(context);\n+    } catch (ConcurrentAccessException e)\n     {\n-        assertCorrectEpoch( context );\n-        return spi.packTransactionObligationResponse( context, spi.getOrCreateProperty( name ) );\n+      throw new TransactionFailureException(Status.Transaction.TransactionAccessedConcurrently, e,\n+          \"The lock session requested to start is already in use. \" +\n+              \"Please retry your request in a few seconds.\");\n     }\n-\n-    @Override\n-    public Response<Integer> createLabel( RequestContext context, String name )\n+    return spi.packTransactionObligationResponse(context, null);\n+  }\n+\n+  @Override\n+  public Response<Void> endLockSession(RequestContext context, boolean success)\n+  {\n+    assertCorrectEpoch(context);\n+    conversationManager.end(context);\n+    if (!success)\n     {\n-        assertCorrectEpoch( context );\n-        return spi.packTransactionObligationResponse( context, spi.getOrCreateLabel( name ) );\n+      conversationManager.stop(context);\n     }\n-\n-    @Override\n-    public Response<Void> pullUpdates( RequestContext context )\n+    return spi.packTransactionObligationResponse(context, null);\n+  }\n+\n+  @Override\n+  public Response<LockResult> acquireExclusiveLock(RequestContext context, ResourceType type,\n+                                                   long... resourceIds)\n+  {\n+    assertCorrectEpoch(context);\n+    Locks.Client session;\n+    try\n     {\n-        return spi.packTransactionStreamResponse( context, null );\n-    }\n-\n-    @Override\n-    public Response<HandshakeResult> handshake( long txId, StoreId storeId )\n+      session = conversationManager.acquire(context).getLocks();\n+    } catch (NoSuchEntryException | ConcurrentAccessException e)\n     {\n-        try\n-        {\n-            long checksum = spi.getTransactionChecksum( txId );\n-            return spi.packEmptyResponse( new HandshakeResult( checksum, epoch ) );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( \"Couldn't get master ID for transaction id \" + txId, e );\n-        }\n+      return spi.packTransactionObligationResponse(context,\n+          new LockResult(LockStatus.NOT_LOCKED, \"Unable to acquire exclusive lock: \" + e.getMessage()));\n     }\n-\n-    @Override\n-    public Response<Void> copyStore( RequestContext requestContext, StoreWriter writer )\n+    try\n     {\n-        RequestContext context;\n-        try ( StoreWriter storeWriter = writer )\n-        {\n-            context = spi.flushStoresAndStreamStoreFiles( storeWriter );\n-        }   // close the store writer\n-\n-        return spi.packTransactionStreamResponse( context, null );\n-    }\n-\n-    @Override\n-    public Response<Void> newLockSession( RequestContext context ) throws TransactionFailureException\n+      for (long resourceId : resourceIds)\n+      {\n+        session.acquireExclusive(LockTracer.NONE, type, resourceId);\n+      }\n+      return spi.packTransactionObligationResponse(context, new LockResult(LockStatus.OK_LOCKED));\n+    } catch (DeadlockDetectedException e)\n     {\n-        monitor.initializeTx( context );\n-\n-        if ( !spi.isAccessible() )\n-        {\n-            throw new TransactionFailureException( Status.General.DatabaseUnavailable,\n-                    \"Database is currently not available\" );\n-        }\n-        assertCorrectEpoch( context );\n-\n-        try\n-        {\n-            conversationManager.begin( context );\n-        }\n-        catch ( ConcurrentAccessException e )\n-        {\n-            throw new TransactionFailureException( Status.Transaction.TransactionAccessedConcurrently, e,\n-                    \"The lock session requested to start is already in use. \" +\n-                    \"Please retry your request in a few seconds.\" );\n-        }\n-        return spi.packTransactionObligationResponse( context, null );\n-    }\n-\n-    @Override\n-    public Response<Void> endLockSession( RequestContext context, boolean success )\n+      return spi.packTransactionObligationResponse(context, new LockResult(\n+          LockStatus.DEAD_LOCKED,\n+          \"Can't acquire exclusive lock, because it would have caused a deadlock: \" + e.getMessage()));\n+    } catch (IllegalResourceException e)\n     {\n-        assertCorrectEpoch( context );\n-        conversationManager.end( context );\n-        if ( !success )\n-        {\n-            conversationManager.stop( context );\n-        }\n-        return spi.packTransactionObligationResponse( context, null );\n+      return spi.packTransactionObligationResponse(context, new LockResult(\n+          LockStatus.NOT_LOCKED,\n+          \"Attempted to lock illegal resource: \" + e.getMessage()));\n+    } finally\n+    {\n+      conversationManager.release(context);\n     }\n-\n-    @Override\n-    public Response<LockResult> acquireExclusiveLock( RequestContext context, ResourceType type,\n-                                                      long... resourceIds )\n+  }\n+\n+  @Override\n+  public Response<LockResult> acquireSharedLock(RequestContext context, ResourceType type,\n+                                                long... resourceIds)\n+  {\n+    assertCorrectEpoch(context);\n+    Locks.Client session;\n+    try\n     {\n-        assertCorrectEpoch( context );\n-        Locks.Client session;\n-        try\n-        {\n-            session = conversationManager.acquire( context ).getLocks();\n-        }\n-        catch ( NoSuchEntryException | ConcurrentAccessException e )\n-        {\n-            return spi.packTransactionObligationResponse( context,\n-                    new LockResult( LockStatus.NOT_LOCKED, \"Unable to acquire exclusive lock: \" + e.getMessage() ) );\n-        }\n-        try\n-        {\n-            for ( long resourceId : resourceIds )\n-            {\n-                session.acquireExclusive( LockTracer.NONE, type, resourceId );\n-            }\n-            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.OK_LOCKED ) );\n-        }\n-        catch ( DeadlockDetectedException e )\n-        {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.DEAD_LOCKED,\n-                    \"Can't acquire exclusive lock, because it would have caused a deadlock: \" + e.getMessage() ) );\n-        }\n-        catch ( IllegalResourceException e )\n-        {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.NOT_LOCKED,\n-                    \"Attempted to lock illegal resource: \" + e.getMessage() ) );\n-        }\n-        finally\n-        {\n-            conversationManager.release( context );\n-        }\n+      session = conversationManager.acquire(context).getLocks();\n+    } catch (NoSuchEntryException | ConcurrentAccessException e)\n+    {\n+      return spi.packTransactionObligationResponse(context, new LockResult(\n+          LockStatus.NOT_LOCKED,\n+          \"Unable to acquire shared lock: \" + e.getMessage()));\n     }\n-\n-    @Override\n-    public Response<LockResult> acquireSharedLock( RequestContext context, ResourceType type,\n-                                                   long... resourceIds )\n+    try\n     {\n-        assertCorrectEpoch( context );\n-        Locks.Client session;\n-        try\n-        {\n-            session = conversationManager.acquire( context ).getLocks();\n-        }\n-        catch ( NoSuchEntryException | ConcurrentAccessException e )\n-        {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.NOT_LOCKED,\n-                    \"Unable to acquire shared lock: \" + e.getMessage() ) );\n-        }\n-        try\n-        {\n-            for ( long resourceId : resourceIds )\n-            {\n-                session.acquireShared( LockTracer.NONE, type, resourceId );\n-            }\n+      for (long resourceId : resourceIds)\n+      {\n+        session.acquireShared(LockTracer.NONE, type, resourceId);\n+      }\n \n-            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.OK_LOCKED ) );\n-        }\n-        catch ( DeadlockDetectedException e )\n-        {\n-            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.DEAD_LOCKED, e.getMessage() ) );\n-        }\n-        catch ( IllegalResourceException e )\n-        {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.NOT_LOCKED,\n-                    \"Attempted to lock illegal resource: \" + e.getMessage() ) );\n-        }\n-        finally\n-        {\n-            conversationManager.release( context );\n-        }\n+      return spi.packTransactionObligationResponse(context, new LockResult(LockStatus.OK_LOCKED));\n+    } catch (DeadlockDetectedException e)\n+    {\n+      return spi.packTransactionObligationResponse(context, new LockResult(LockStatus.DEAD_LOCKED, e.getMessage()));\n+    } catch (IllegalResourceException e)\n+    {\n+      return spi.packTransactionObligationResponse(context, new LockResult(\n+          LockStatus.NOT_LOCKED,\n+          \"Attempted to lock illegal resource: \" + e.getMessage()));\n+    } finally\n+    {\n+      conversationManager.release(context);\n     }\n-\n-    // =====================================================================\n-    // Just some methods which aren't really used when running a HA cluster,\n-    // but exposed so that other tools can reach that information.\n-    // =====================================================================\n-\n-    public Map<Integer, Collection<RequestContext>> getOngoingTransactions()\n+  }\n+\n+  // =====================================================================\n+  // Just some methods which aren't really used when running a HA cluster,\n+  // but exposed so that other tools can reach that information.\n+  // =====================================================================\n+\n+  public Map<Integer, Collection<RequestContext>> getOngoingTransactions()\n+  {\n+    Map<Integer, Collection<RequestContext>> result = new HashMap<>();\n+    Set<RequestContext> contexts = conversationManager.getActiveContexts();\n+    for (RequestContext context : contexts.toArray(new RequestContext[contexts.size()]))\n     {\n-        Map<Integer, Collection<RequestContext>> result = new HashMap<>();\n-        Set<RequestContext> contexts = conversationManager.getActiveContexts();\n-        for ( RequestContext context : contexts.toArray( new RequestContext[contexts.size()] ) )\n-        {\n-            Collection<RequestContext> txs = result.computeIfAbsent( context.machineId(), k -> new ArrayList<>() );\n-            txs.add( context );\n-        }\n-        return result;\n+      Collection<RequestContext> txs = result.computeIfAbsent(context.machineId(), k -> new ArrayList<>());\n+      txs.add(context);\n     }\n+    return result;\n+  }\n }\n",
            "diff_size": 432
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "274",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "304",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "322",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "341",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "359",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3228/MasterImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3228/MasterImpl.java\nindex c06e074e375..aa54d35cbc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3228/MasterImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3228/MasterImpl.java\n@@ -70,13 +70,10 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         boolean isAccessible();\n \n         IdAllocation allocateIds( IdType idType );\n+StoreId storeId();\n \n-        StoreId storeId();\n-\n-        long applyPreparedTransaction( TransactionRepresentation preparedTransaction )\n-                throws TransactionFailureException;\n-\n-        Integer createRelationshipType( String name );\n+        long applyPreparedTransaction( TransactionRepresentation preparedTransaction ) throws TransactionFailureException;\n+Integer createRelationshipType( String name );\n \n         long getTransactionChecksum( long txId ) throws IOException;\n \n@@ -91,7 +88,6 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         int getOrCreateLabel( String name );\n \n         int getOrCreateProperty( String name );\n-\n     }\n \n     private final SPI spi;\n@@ -155,9 +151,8 @@ public class MasterImpl extends LifecycleAdapter implements Master\n     }\n \n     @Override\n-    public Response<Long> commit( RequestContext context, TransactionRepresentation preparedTransaction )\n-            throws TransactionFailureException\n-    {\n+    public Response<Long> commit( RequestContext context, TransactionRepresentation preparedTransaction ) throws TransactionFailureException\n+{\n         assertCorrectEpoch( context );\n \n         // There are two constraints relating to locking during commit:\n@@ -198,9 +193,8 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         }\n     }\n \n-    private Response<Long> commit0( RequestContext context, TransactionRepresentation preparedTransaction )\n-            throws TransactionFailureException\n-    {\n+    private Response<Long> commit0( RequestContext context, TransactionRepresentation preparedTransaction ) throws TransactionFailureException\n+{\n         long txId = spi.applyPreparedTransaction( preparedTransaction );\n         return spi.packTransactionObligationResponse( context, txId );\n     }\n@@ -253,7 +247,9 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         try ( StoreWriter storeWriter = writer )\n         {\n             context = spi.flushStoresAndStreamStoreFiles( storeWriter );\n-        }   // close the store writer\n+        }\n+\n+// close the store writer\n \n         return spi.packTransactionStreamResponse( context, null );\n     }\n@@ -262,13 +258,12 @@ public class MasterImpl extends LifecycleAdapter implements Master\n     public Response<Void> newLockSession( RequestContext context ) throws TransactionFailureException\n     {\n         monitor.initializeTx( context );\n-\n-        if ( !spi.isAccessible() )\n+if ( !spi.isAccessible() )\n         {\n-            throw new TransactionFailureException( Status.General.DatabaseUnavailable,\n-                    \"Database is currently not available\" );\n+            throw new TransactionFailureException( Status.General.DatabaseUnavailable, \"Database is currently not available\" );\n         }\n-        assertCorrectEpoch( context );\n+\n+assertCorrectEpoch( context );\n \n         try\n         {\n@@ -276,11 +271,10 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         }\n         catch ( ConcurrentAccessException e )\n         {\n-            throw new TransactionFailureException( Status.Transaction.TransactionAccessedConcurrently, e,\n-                    \"The lock session requested to start is already in use. \" +\n-                    \"Please retry your request in a few seconds.\" );\n+            throw new TransactionFailureException( Status.Transaction.TransactionAccessedConcurrently, e, \"The lock session requested to start is already in use. \" + \"Please retry your request in a few seconds.\" );\n         }\n-        return spi.packTransactionObligationResponse( context, null );\n+\n+return spi.packTransactionObligationResponse( context, null );\n     }\n \n     @Override\n@@ -292,13 +286,13 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         {\n             conversationManager.stop( context );\n         }\n-        return spi.packTransactionObligationResponse( context, null );\n+\n+return spi.packTransactionObligationResponse( context, null );\n     }\n \n     @Override\n-    public Response<LockResult> acquireExclusiveLock( RequestContext context, ResourceType type,\n-                                                      long... resourceIds )\n-    {\n+    public Response<LockResult> acquireExclusiveLock( RequestContext context, ResourceType type, long... resourceIds )\n+{\n         assertCorrectEpoch( context );\n         Locks.Client session;\n         try\n@@ -307,28 +301,25 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         }\n         catch ( NoSuchEntryException | ConcurrentAccessException e )\n         {\n-            return spi.packTransactionObligationResponse( context,\n-                    new LockResult( LockStatus.NOT_LOCKED, \"Unable to acquire exclusive lock: \" + e.getMessage() ) );\n+            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.NOT_LOCKED, \"Unable to acquire exclusive lock: \" + e.getMessage() ) );\n         }\n-        try\n+\n+try\n         {\n             for ( long resourceId : resourceIds )\n             {\n                 session.acquireExclusive( LockTracer.NONE, type, resourceId );\n             }\n-            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.OK_LOCKED ) );\n+\n+return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.OK_LOCKED ) );\n         }\n         catch ( DeadlockDetectedException e )\n         {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.DEAD_LOCKED,\n-                    \"Can't acquire exclusive lock, because it would have caused a deadlock: \" + e.getMessage() ) );\n-        }\n+            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.DEAD_LOCKED, \"Can't acquire exclusive lock, because it would have caused a deadlock: \" + e.getMessage() ) );\n+    }\n         catch ( IllegalResourceException e )\n         {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.NOT_LOCKED,\n-                    \"Attempted to lock illegal resource: \" + e.getMessage() ) );\n+            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.NOT_LOCKED, \"Attempted to lock illegal resource: \" + e.getMessage() ) );\n         }\n         finally\n         {\n@@ -337,9 +328,8 @@ public class MasterImpl extends LifecycleAdapter implements Master\n     }\n \n     @Override\n-    public Response<LockResult> acquireSharedLock( RequestContext context, ResourceType type,\n-                                                   long... resourceIds )\n-    {\n+    public Response<LockResult> acquireSharedLock( RequestContext context, ResourceType type, long... resourceIds )\n+{\n         assertCorrectEpoch( context );\n         Locks.Client session;\n         try\n@@ -348,11 +338,10 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         }\n         catch ( NoSuchEntryException | ConcurrentAccessException e )\n         {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.NOT_LOCKED,\n-                    \"Unable to acquire shared lock: \" + e.getMessage() ) );\n+            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.NOT_LOCKED, \"Unable to acquire shared lock: \" + e.getMessage() ) );\n         }\n-        try\n+\n+try\n         {\n             for ( long resourceId : resourceIds )\n             {\n@@ -367,9 +356,7 @@ public class MasterImpl extends LifecycleAdapter implements Master\n         }\n         catch ( IllegalResourceException e )\n         {\n-            return spi.packTransactionObligationResponse( context, new LockResult(\n-                    LockStatus.NOT_LOCKED,\n-                    \"Attempted to lock illegal resource: \" + e.getMessage() ) );\n+            return spi.packTransactionObligationResponse( context, new LockResult( LockStatus.NOT_LOCKED, \"Attempted to lock illegal resource: \" + e.getMessage() ) );\n         }\n         finally\n         {\n@@ -391,6 +378,7 @@ public class MasterImpl extends LifecycleAdapter implements Master\n             Collection<RequestContext> txs = result.computeIfAbsent( context.machineId(), k -> new ArrayList<>() );\n             txs.add( context );\n         }\n-        return result;\n+\n+return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4001",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4001/DelayedBuffer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4001/DelayedBuffer.java\nindex 944649c141b..24778556bc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4001/DelayedBuffer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4001/DelayedBuffer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.id;\n \n import java.util.Arrays;\n@@ -33,130 +34,129 @@ import static java.util.Arrays.copyOf;\n  * they are released onto a {@link Consumer}. These values are held in chunk and each chunk knows\n  * which threshold is considered safe. Regular {@link #maintenance()} is required to be called externally\n  * for values to be released.\n- *\n+ * <p>\n  * This class is thread-safe for concurrent requests, but only a single thread should be responsible for\n  * calling {@link #maintenance()}.\n  */\n public class DelayedBuffer<T>\n {\n-    private static class Chunk<T>\n-    {\n-        private final T threshold;\n-        private final long[] values;\n+  private static class Chunk<T>\n+  {\n+    private final T threshold;\n+    private final long[] values;\n \n-        Chunk( T threshold, long[] values )\n-        {\n-            this.threshold = threshold;\n-            this.values = values;\n-        }\n+    Chunk(T threshold, long[] values)\n+    {\n+      this.threshold = threshold;\n+      this.values = values;\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return Arrays.toString( values );\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return Arrays.toString(values);\n     }\n+  }\n \n-    private final Supplier<T> thresholdSupplier;\n-    private final Predicate<T> safeThreshold;\n-    private final Consumer<long[]> chunkConsumer;\n-    private final Deque<Chunk<T>> chunks = new LinkedList<>();\n-    private final int chunkSize;\n+  private final Supplier<T> thresholdSupplier;\n+  private final Predicate<T> safeThreshold;\n+  private final Consumer<long[]> chunkConsumer;\n+  private final Deque<Chunk<T>> chunks = new LinkedList<>();\n+  private final int chunkSize;\n \n-    private final long[] chunk;\n-    private int chunkCursor;\n+  private final long[] chunk;\n+  private int chunkCursor;\n \n-    public DelayedBuffer( Supplier<T> thresholdSupplier, Predicate<T> safeThreshold, int chunkSize,\n-            Consumer<long[]> chunkConsumer )\n-    {\n-        assert chunkSize > 0;\n-        this.thresholdSupplier = thresholdSupplier;\n-        this.safeThreshold = safeThreshold;\n-        this.chunkSize = chunkSize;\n-        this.chunkConsumer = chunkConsumer;\n-        this.chunk = new long[chunkSize];\n-    }\n+  public DelayedBuffer(Supplier<T> thresholdSupplier, Predicate<T> safeThreshold, int chunkSize,\n+                       Consumer<long[]> chunkConsumer)\n+  {\n+    assert chunkSize > 0;\n+    this.thresholdSupplier = thresholdSupplier;\n+    this.safeThreshold = safeThreshold;\n+    this.chunkSize = chunkSize;\n+    this.chunkConsumer = chunkConsumer;\n+    this.chunk = new long[chunkSize];\n+  }\n \n-    /**\n-     * Should be called every now and then to check for safe thresholds of buffered chunks and potentially\n-     * release them onto the {@link Consumer}.\n-     */\n-    public void maintenance()\n+  /**\n+   * Should be called every now and then to check for safe thresholds of buffered chunks and potentially\n+   * release them onto the {@link Consumer}.\n+   */\n+  public void maintenance()\n+  {\n+    synchronized (this)\n     {\n-        synchronized ( this )\n-        {\n-            flush();\n-        }\n-\n-        if ( !chunks.isEmpty() )\n-        {\n-            synchronized ( chunks )\n-            {\n-                // Potentially hand over chunks to the consumer\n-                while ( !chunks.isEmpty() )\n-                {\n-                    Chunk<T> candidate = chunks.peek();\n-                    if ( safeThreshold.test( candidate.threshold ) )\n-                    {\n-                        chunkConsumer.accept( candidate.values );\n-                        chunks.remove();\n-                    }\n-                    else\n-                    {\n-                        // The chunks are ordered by chunkThreshold, so we know that no more chunks will qualify anyway\n-                        break;\n-                    }\n-                }\n-            }\n-        }\n+      flush();\n     }\n \n-    // Must be called under synchronized on this\n-    private void flush()\n+    if (!chunks.isEmpty())\n     {\n-        if ( chunkCursor > 0 )\n+      synchronized (chunks)\n+      {\n+        // Potentially hand over chunks to the consumer\n+        while (!chunks.isEmpty())\n         {\n-            synchronized ( chunks )\n-            {\n-                Chunk<T> chunkToAdd = new Chunk<>( thresholdSupplier.get(), copyOf( chunk, chunkCursor ) );\n-                chunks.offer( chunkToAdd );\n-            }\n-            chunkCursor = 0;\n+          Chunk<T> candidate = chunks.peek();\n+          if (safeThreshold.test(candidate.threshold))\n+          {\n+            chunkConsumer.accept(candidate.values);\n+            chunks.remove();\n+          } else\n+          {\n+            // The chunks are ordered by chunkThreshold, so we know that no more chunks will qualify anyway\n+            break;\n+          }\n         }\n+      }\n     }\n+  }\n \n-    /**\n-     * Offers a value to this buffer. This value will at a later point be part of a buffered chunk,\n-     * released by a call to {@link #maintenance()} when the safe threshold for the chunk, which is determined\n-     * when the chunk is full or otherwise queued.\n-     */\n-    public synchronized void offer( long value )\n+  // Must be called under synchronized on this\n+  private void flush()\n+  {\n+    if (chunkCursor > 0)\n     {\n-        chunk[chunkCursor++] = value;\n-        if ( chunkCursor == chunkSize )\n-        {\n-            flush();\n-        }\n+      synchronized (chunks)\n+      {\n+        Chunk<T> chunkToAdd = new Chunk<>(thresholdSupplier.get(), copyOf(chunk, chunkCursor));\n+        chunks.offer(chunkToAdd);\n+      }\n+      chunkCursor = 0;\n     }\n+  }\n \n-    /**\n-     * Closes this buffer, releasing all {@link #offer(long)} values into the {@link Consumer}.\n-     *\n-     * This class is typically not used in a scenario suitable for try-with-resource\n-     * and so having it implement AutoCloseable would be more annoying\n-     */\n-    public synchronized void close()\n+  /**\n+   * Offers a value to this buffer. This value will at a later point be part of a buffered chunk,\n+   * released by a call to {@link #maintenance()} when the safe threshold for the chunk, which is determined\n+   * when the chunk is full or otherwise queued.\n+   */\n+  public synchronized void offer(long value)\n+  {\n+    chunk[chunkCursor++] = value;\n+    if (chunkCursor == chunkSize)\n     {\n-        flush();\n-        while ( !chunks.isEmpty() )\n-        {\n-            chunkConsumer.accept( chunks.poll().values );\n-        }\n+      flush();\n     }\n+  }\n \n-    public synchronized void clear()\n+  /**\n+   * Closes this buffer, releasing all {@link #offer(long)} values into the {@link Consumer}.\n+   * <p>\n+   * This class is typically not used in a scenario suitable for try-with-resource\n+   * and so having it implement AutoCloseable would be more annoying\n+   */\n+  public synchronized void close()\n+  {\n+    flush();\n+    while (!chunks.isEmpty())\n     {\n-        chunks.clear();\n-        chunkCursor = 0;\n+      chunkConsumer.accept(chunks.poll().values);\n     }\n+  }\n+\n+  public synchronized void clear()\n+  {\n+    chunks.clear();\n+    chunkCursor = 0;\n+  }\n }\n",
            "diff_size": 132
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4001/DelayedBuffer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4001/DelayedBuffer.java\nindex 944649c141b..e190ac098d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4001/DelayedBuffer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4001/DelayedBuffer.java\n@@ -66,8 +66,7 @@ public class DelayedBuffer<T>\n     private final long[] chunk;\n     private int chunkCursor;\n \n-    public DelayedBuffer( Supplier<T> thresholdSupplier, Predicate<T> safeThreshold, int chunkSize,\n-            Consumer<long[]> chunkConsumer )\n+    public DelayedBuffer( Supplier<T> thresholdSupplier, Predicate<T> safeThreshold, int chunkSize, Consumer<long[]> chunkConsumer )\n     {\n         assert chunkSize > 0;\n         this.thresholdSupplier = thresholdSupplier;\n@@ -121,7 +120,8 @@ public class DelayedBuffer<T>\n                 Chunk<T> chunkToAdd = new Chunk<>( thresholdSupplier.get(), copyOf( chunk, chunkCursor ) );\n                 chunks.offer( chunkToAdd );\n             }\n-            chunkCursor = 0;\n+\n+chunkCursor = 0;\n         }\n     }\n \n@@ -159,4 +159,4 @@ public class DelayedBuffer<T>\n         chunks.clear();\n         chunkCursor = 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
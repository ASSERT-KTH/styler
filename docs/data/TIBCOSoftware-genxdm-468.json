{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "468",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class WrappedVariantExpr extends ConvertibleVariantExpr {\n\n\tpublic static ConvertibleExpr wrap(VariantExpr expr) {\n\t\tif (expr instanceof ConvertibleExpr) {\n\t\t\treturn (ConvertibleExpr) expr;\n\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/468/WrappedVariantExpr.java\nindex 3ee6da5b6c3..dd8733cb810 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/468/WrappedVariantExpr.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n  */\n public class WrappedVariantExpr extends ConvertibleVariantExpr {\n \n-\tpublic static ConvertibleExpr wrap(VariantExpr expr) {\n+public static ConvertibleExpr wrap(VariantExpr expr) {\n \t\tif (expr instanceof ConvertibleExpr) {\n \t\t\treturn (ConvertibleExpr) expr;\n \t\t}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/468/WrappedVariantExpr.java\nindex 3ee6da5b6c3..c0ed5b69cf6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/468/WrappedVariantExpr.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.processor.xpath.v10.expressions;\n \n import org.genxdm.Model;\n@@ -29,29 +30,29 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n  */\n public class WrappedVariantExpr extends ConvertibleVariantExpr {\n \n-\tpublic static ConvertibleExpr wrap(VariantExpr expr) {\n-\t\tif (expr instanceof ConvertibleExpr) {\n-\t\t\treturn (ConvertibleExpr) expr;\n-\t\t}\n-\t\t\n-\t\treturn new WrappedVariantExpr(expr);\n-\t}\n-\t\n-\tpublic WrappedVariantExpr(VariantExpr expr) {\n-\t\tm_expr = expr;\n-\t}\n-\t\n-\t@Override\n-\tpublic <N> NodeVariant<N> evaluateAsVariant(Model<N> model, N contextNode,\n-\t\t\tNodeDynamicContext<N> dynEnv) {\n-\t\treturn m_expr.evaluateAsVariant(model, contextNode, dynEnv);\n-\t}\n-\n-\tprivate VariantExpr m_expr;\n+    public static ConvertibleExpr wrap(VariantExpr expr) {\n+        if (expr instanceof ConvertibleExpr) {\n+            return (ConvertibleExpr) expr;\n+        }\n+\n+        return new WrappedVariantExpr(expr);\n+    }\n+\n+    public WrappedVariantExpr(VariantExpr expr) {\n+        m_expr = expr;\n+    }\n+\n+    @Override\n+    public <N> NodeVariant<N> evaluateAsVariant(Model<N> model, N contextNode,\n+                                                NodeDynamicContext<N> dynEnv) {\n+        return m_expr.evaluateAsVariant(model, contextNode, dynEnv);\n+    }\n+\n+    private VariantExpr m_expr;\n \n     @Override\n     public TraverserVariant evaluateAsVariant(TraversingInformer contextNode,\n-            TraverserDynamicContext dynEnv) {\n+                                              TraverserDynamicContext dynEnv) {\n         return m_expr.evaluateAsVariant(contextNode, dynEnv);\n     }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/468/WrappedVariantExpr.java\nindex 3ee6da5b6c3..7079527e43d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/468/WrappedVariantExpr.java\n@@ -29,29 +29,27 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n  */\n public class WrappedVariantExpr extends ConvertibleVariantExpr {\n \n-\tpublic static ConvertibleExpr wrap(VariantExpr expr) {\n-\t\tif (expr instanceof ConvertibleExpr) {\n-\t\t\treturn (ConvertibleExpr) expr;\n-\t\t}\n-\t\t\n-\t\treturn new WrappedVariantExpr(expr);\n-\t}\n-\t\n-\tpublic WrappedVariantExpr(VariantExpr expr) {\n+    public static ConvertibleExpr wrap(VariantExpr expr) {\n+    if (expr instanceof ConvertibleExpr) {\n+    return (ConvertibleExpr) expr;\n+    }\n+return new WrappedVariantExpr(expr);\n+    }\n+\n+public WrappedVariantExpr(VariantExpr expr) {\n \t\tm_expr = expr;\n-\t}\n-\t\n-\t@Override\n-\tpublic <N> NodeVariant<N> evaluateAsVariant(Model<N> model, N contextNode,\n-\t\t\tNodeDynamicContext<N> dynEnv) {\n-\t\treturn m_expr.evaluateAsVariant(model, contextNode, dynEnv);\n-\t}\n+    }\n+\n+@Override\n+public <N> NodeVariant<N> evaluateAsVariant(Model<N> model, N contextNode, NodeDynamicContext<N> dynEnv) {\n+    return m_expr.evaluateAsVariant(model, contextNode, dynEnv);\n+    }\n \n \tprivate VariantExpr m_expr;\n \n-    @Override\n+@Override\n     public TraverserVariant evaluateAsVariant(TraversingInformer contextNode,\n             TraverserDynamicContext dynEnv) {\n         return m_expr.evaluateAsVariant(contextNode, dynEnv);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/468/WrappedVariantExpr.java\nindex 3ee6da5b6c3..0a41a2bbb77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/468/WrappedVariantExpr.java\n@@ -27,31 +27,34 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n /**\n  * Wrapper around a {@link VariantExpr} that turns it into an IConvertibleExpr\n  */\n-public class WrappedVariantExpr extends ConvertibleVariantExpr {\n \n-\tpublic static ConvertibleExpr wrap(VariantExpr expr) {\n-\t\tif (expr instanceof ConvertibleExpr) {\n-\t\t\treturn (ConvertibleExpr) expr;\n-\t\t}\n-\t\t\n-\t\treturn new WrappedVariantExpr(expr);\n-\t}\n-\t\n-\tpublic WrappedVariantExpr(VariantExpr expr) {\n-\t\tm_expr = expr;\n-\t}\n-\t\n-\t@Override\n-\tpublic <N> NodeVariant<N> evaluateAsVariant(Model<N> model, N contextNode,\n-\t\t\tNodeDynamicContext<N> dynEnv) {\n-\t\treturn m_expr.evaluateAsVariant(model, contextNode, dynEnv);\n-\t}\n+public class WrappedVariantExpr extends ConvertibleVariantExpr\n+{\n+    public static ConvertibleExpr wrap(VariantExpr expr)\n+    {\n+        if (expr instanceof ConvertibleExpr)\n+        {\n+            return (ConvertibleExpr)expr;\n+        }\n+        return new WrappedVariantExpr(expr);\n+    }\n+\n+    public WrappedVariantExpr(VariantExpr expr)\n+    {\n+        m_expr = expr;\n+    }\n+\n+    @Override\n+    public <N> NodeVariant<N> evaluateAsVariant(Model<N> model, N contextNode, NodeDynamicContext<N> dynEnv)\n+    {\n+        return m_expr.evaluateAsVariant(model, contextNode, dynEnv);\n+    }\n \n-\tprivate VariantExpr m_expr;\n+    private VariantExpr m_expr;\n \n     @Override\n-    public TraverserVariant evaluateAsVariant(TraversingInformer contextNode,\n-            TraverserDynamicContext dynEnv) {\n+    public TraverserVariant evaluateAsVariant(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+    {\n         return m_expr.evaluateAsVariant(contextNode, dynEnv);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/468/WrappedVariantExpr.java\nindex 3ee6da5b6c3..dd8733cb810 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/468/WrappedVariantExpr.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n  */\n public class WrappedVariantExpr extends ConvertibleVariantExpr {\n \n-\tpublic static ConvertibleExpr wrap(VariantExpr expr) {\n+public static ConvertibleExpr wrap(VariantExpr expr) {\n \t\tif (expr instanceof ConvertibleExpr) {\n \t\t\treturn (ConvertibleExpr) expr;\n \t\t}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/468/WrappedVariantExpr.java\nindex 3ee6da5b6c3..1204742db30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/468/WrappedVariantExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/468/WrappedVariantExpr.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n  */\n public class WrappedVariantExpr extends ConvertibleVariantExpr {\n \n-\tpublic static ConvertibleExpr wrap(VariantExpr expr) {\n+    public static ConvertibleExpr wrap(VariantExpr expr) {\n \t\tif (expr instanceof ConvertibleExpr) {\n \t\t\treturn (ConvertibleExpr) expr;\n \t\t}\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
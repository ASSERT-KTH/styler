{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2645",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "147",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2645/LeaderOnlyLockManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2645/LeaderOnlyLockManager.java\nindex ce810cd733a..8e6f3562fbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2645/LeaderOnlyLockManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2645/LeaderOnlyLockManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.locks;\n \n import java.util.concurrent.ExecutionException;\n@@ -63,232 +64,226 @@ import static org.neo4j.kernel.api.exceptions.Status.Transaction.Interrupted;\n // TODO: Fix lock exception usage when lock exception hierarchy has been fixed.\n public class LeaderOnlyLockManager implements Locks\n {\n-    public static final String LOCK_NOT_ON_LEADER_ERROR_MESSAGE = \"Should only attempt to take locks when leader.\";\n+  public static final String LOCK_NOT_ON_LEADER_ERROR_MESSAGE = \"Should only attempt to take locks when leader.\";\n+\n+  private final MemberId myself;\n+\n+  private final Replicator replicator;\n+  private final LeaderLocator leaderLocator;\n+  private final Locks localLocks;\n+  private final ReplicatedLockTokenStateMachine lockTokenStateMachine;\n+\n+  public LeaderOnlyLockManager(MemberId myself, Replicator replicator, LeaderLocator leaderLocator, Locks localLocks,\n+                               ReplicatedLockTokenStateMachine lockTokenStateMachine)\n+  {\n+    this.myself = myself;\n+    this.replicator = replicator;\n+    this.leaderLocator = leaderLocator;\n+    this.localLocks = localLocks;\n+    this.lockTokenStateMachine = lockTokenStateMachine;\n+  }\n+\n+  @Override\n+  public Locks.Client newClient()\n+  {\n+    return new LeaderOnlyLockClient(localLocks.newClient());\n+  }\n+\n+  /**\n+   * Acquires a valid token id owned by us or throws.\n+   */\n+  private synchronized int acquireTokenOrThrow()\n+  {\n+    LockToken currentToken = lockTokenStateMachine.currentToken();\n+    if (myself.equals(currentToken.owner()))\n+    {\n+      return currentToken.id();\n+    }\n \n-    private final MemberId myself;\n+        /* If we are not the leader then we will not even attempt to get the token,\n+           since only the leader should take locks. */\n+    ensureLeader();\n \n-    private final Replicator replicator;\n-    private final LeaderLocator leaderLocator;\n-    private final Locks localLocks;\n-    private final ReplicatedLockTokenStateMachine lockTokenStateMachine;\n+    ReplicatedLockTokenRequest lockTokenRequest =\n+        new ReplicatedLockTokenRequest(myself, LockToken.nextCandidateId(currentToken.id()));\n \n-    public LeaderOnlyLockManager( MemberId myself, Replicator replicator, LeaderLocator leaderLocator, Locks localLocks,\n-            ReplicatedLockTokenStateMachine lockTokenStateMachine )\n+    Future<Object> future;\n+    try\n+    {\n+      future = replicator.replicate(lockTokenRequest, true);\n+    } catch (InterruptedException e)\n     {\n-        this.myself = myself;\n-        this.replicator = replicator;\n-        this.leaderLocator = leaderLocator;\n-        this.localLocks = localLocks;\n-        this.lockTokenStateMachine = lockTokenStateMachine;\n+      throw new AcquireLockTimeoutException(e, \"Interrupted acquiring token.\", Interrupted);\n     }\n \n-    @Override\n-    public Locks.Client newClient()\n+    try\n+    {\n+      boolean success = (boolean) future.get();\n+      if (success)\n+      {\n+        return lockTokenRequest.id();\n+      } else\n+      {\n+        throw new AcquireLockTimeoutException(\"Failed to acquire lock token. Was taken by another candidate.\",\n+            NotALeader);\n+      }\n+    } catch (ExecutionException e)\n+    {\n+      throw new AcquireLockTimeoutException(e, \"Failed to acquire lock token.\", NotALeader);\n+    } catch (InterruptedException e)\n+    {\n+      Thread.currentThread().interrupt();\n+      throw new AcquireLockTimeoutException(e, \"Failed to acquire lock token.\", Interrupted);\n+    }\n+  }\n+\n+  private void ensureLeader()\n+  {\n+    MemberId leader;\n+\n+    try\n+    {\n+      leader = leaderLocator.getLeader();\n+    } catch (NoLeaderFoundException e)\n+    {\n+      throw new AcquireLockTimeoutException(e, \"Could not acquire lock token.\", NoLeaderAvailable);\n+    }\n+\n+    if (!leader.equals(myself))\n+    {\n+      throw new AcquireLockTimeoutException(LOCK_NOT_ON_LEADER_ERROR_MESSAGE, NotALeader);\n+    }\n+  }\n+\n+  @Override\n+  public void accept(Visitor visitor)\n+  {\n+    localLocks.accept(visitor);\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    localLocks.close();\n+  }\n+\n+  /**\n+   * The LeaderOnlyLockClient delegates to a local lock client for taking locks, but makes\n+   * sure that it holds the cluster locking token before actually taking locks. If the token\n+   * is lost during a locking session then a transaction will either fail on a subsequent\n+   * local locking operation or during commit time.\n+   */\n+  private class LeaderOnlyLockClient implements Locks.Client\n+  {\n+    private final Client localClient;\n+    private int lockTokenId = LockToken.INVALID_LOCK_TOKEN_ID;\n+\n+    LeaderOnlyLockClient(Client localClient)\n     {\n-        return new LeaderOnlyLockClient( localLocks.newClient() );\n+      this.localClient = localClient;\n     }\n \n     /**\n-     * Acquires a valid token id owned by us or throws.\n+     * This ensures that a valid token was held at some point in time. It throws an\n+     * exception if it was held but was later lost or never could be taken to\n+     * begin with.\n      */\n-    private synchronized int acquireTokenOrThrow()\n+    private void ensureHoldingToken()\n     {\n-        LockToken currentToken = lockTokenStateMachine.currentToken();\n-        if ( myself.equals( currentToken.owner() ) )\n-        {\n-            return currentToken.id();\n-        }\n+      if (lockTokenId == LockToken.INVALID_LOCK_TOKEN_ID)\n+      {\n+        lockTokenId = acquireTokenOrThrow();\n+      } else if (lockTokenId != lockTokenStateMachine.currentToken().id())\n+      {\n+        throw new AcquireLockTimeoutException(\"Local instance lost lock token.\", NotALeader);\n+      }\n+    }\n \n-        /* If we are not the leader then we will not even attempt to get the token,\n-           since only the leader should take locks. */\n-        ensureLeader();\n-\n-        ReplicatedLockTokenRequest lockTokenRequest =\n-                new ReplicatedLockTokenRequest( myself, LockToken.nextCandidateId( currentToken.id() ) );\n-\n-        Future<Object> future;\n-        try\n-        {\n-            future = replicator.replicate( lockTokenRequest, true );\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            throw new AcquireLockTimeoutException( e, \"Interrupted acquiring token.\", Interrupted );\n-        }\n-\n-        try\n-        {\n-            boolean success = (boolean) future.get();\n-            if ( success )\n-            {\n-                return lockTokenRequest.id();\n-            }\n-            else\n-            {\n-                throw new AcquireLockTimeoutException( \"Failed to acquire lock token. Was taken by another candidate.\",\n-                        NotALeader );\n-            }\n-        }\n-        catch ( ExecutionException e )\n-        {\n-            throw new AcquireLockTimeoutException( e, \"Failed to acquire lock token.\", NotALeader );\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            Thread.currentThread().interrupt();\n-            throw new AcquireLockTimeoutException( e, \"Failed to acquire lock token.\", Interrupted );\n-        }\n+    @Override\n+    public void acquireShared(LockTracer tracer, ResourceType resourceType, long... resourceId) throws AcquireLockTimeoutException\n+    {\n+      localClient.acquireShared(tracer, resourceType, resourceId);\n+    }\n+\n+    @Override\n+    public void acquireExclusive(LockTracer tracer, ResourceType resourceType, long... resourceId) throws AcquireLockTimeoutException\n+    {\n+      ensureHoldingToken();\n+      localClient.acquireExclusive(tracer, resourceType, resourceId);\n+    }\n+\n+    @Override\n+    public boolean tryExclusiveLock(ResourceType resourceType, long resourceId)\n+    {\n+      ensureHoldingToken();\n+      return localClient.tryExclusiveLock(resourceType, resourceId);\n     }\n \n-    private void ensureLeader()\n+    @Override\n+    public boolean trySharedLock(ResourceType resourceType, long resourceId)\n+    {\n+      return localClient.trySharedLock(resourceType, resourceId);\n+    }\n+\n+    @Override\n+    public boolean reEnterShared(ResourceType resourceType, long resourceId)\n+    {\n+      return localClient.reEnterShared(resourceType, resourceId);\n+    }\n+\n+    @Override\n+    public boolean reEnterExclusive(ResourceType resourceType, long resourceId)\n+    {\n+      ensureHoldingToken();\n+      return localClient.reEnterExclusive(resourceType, resourceId);\n+    }\n+\n+    @Override\n+    public void releaseShared(ResourceType resourceType, long... resourceIds)\n+    {\n+      localClient.releaseShared(resourceType, resourceIds);\n+    }\n+\n+    @Override\n+    public void releaseExclusive(ResourceType resourceType, long... resourceIds)\n+    {\n+      localClient.releaseExclusive(resourceType, resourceIds);\n+    }\n+\n+    @Override\n+    public void prepare()\n     {\n-        MemberId leader;\n-\n-        try\n-        {\n-            leader = leaderLocator.getLeader();\n-        }\n-        catch ( NoLeaderFoundException e )\n-        {\n-            throw new AcquireLockTimeoutException( e, \"Could not acquire lock token.\", NoLeaderAvailable );\n-        }\n-\n-        if ( !leader.equals( myself ) )\n-        {\n-            throw new AcquireLockTimeoutException( LOCK_NOT_ON_LEADER_ERROR_MESSAGE, NotALeader );\n-        }\n+      localClient.prepare();\n     }\n \n     @Override\n-    public void accept( Visitor visitor )\n+    public void stop()\n     {\n-        localLocks.accept( visitor );\n+      localClient.stop();\n     }\n \n     @Override\n     public void close()\n     {\n-        localLocks.close();\n+      localClient.close();\n     }\n \n-    /**\n-     * The LeaderOnlyLockClient delegates to a local lock client for taking locks, but makes\n-     * sure that it holds the cluster locking token before actually taking locks. If the token\n-     * is lost during a locking session then a transaction will either fail on a subsequent\n-     * local locking operation or during commit time.\n-     */\n-    private class LeaderOnlyLockClient implements Locks.Client\n+    @Override\n+    public int getLockSessionId()\n+    {\n+      return lockTokenId;\n+    }\n+\n+    @Override\n+    public Stream<? extends ActiveLock> activeLocks()\n+    {\n+      return localClient.activeLocks();\n+    }\n+\n+    @Override\n+    public long activeLockCount()\n     {\n-        private final Client localClient;\n-        private int lockTokenId = LockToken.INVALID_LOCK_TOKEN_ID;\n-\n-        LeaderOnlyLockClient( Client localClient )\n-        {\n-            this.localClient = localClient;\n-        }\n-\n-        /**\n-         * This ensures that a valid token was held at some point in time. It throws an\n-         * exception if it was held but was later lost or never could be taken to\n-         * begin with.\n-         */\n-        private void ensureHoldingToken()\n-        {\n-            if ( lockTokenId == LockToken.INVALID_LOCK_TOKEN_ID )\n-            {\n-                lockTokenId = acquireTokenOrThrow();\n-            }\n-            else if ( lockTokenId != lockTokenStateMachine.currentToken().id() )\n-            {\n-                throw new AcquireLockTimeoutException( \"Local instance lost lock token.\", NotALeader );\n-            }\n-        }\n-\n-        @Override\n-        public void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceId ) throws AcquireLockTimeoutException\n-        {\n-            localClient.acquireShared( tracer, resourceType, resourceId );\n-        }\n-\n-        @Override\n-        public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceId ) throws AcquireLockTimeoutException\n-        {\n-            ensureHoldingToken();\n-            localClient.acquireExclusive( tracer, resourceType, resourceId );\n-        }\n-\n-        @Override\n-        public boolean tryExclusiveLock( ResourceType resourceType, long resourceId )\n-        {\n-            ensureHoldingToken();\n-            return localClient.tryExclusiveLock( resourceType, resourceId );\n-        }\n-\n-        @Override\n-        public boolean trySharedLock( ResourceType resourceType, long resourceId )\n-        {\n-            return localClient.trySharedLock( resourceType, resourceId );\n-        }\n-\n-        @Override\n-        public boolean reEnterShared( ResourceType resourceType, long resourceId )\n-        {\n-            return localClient.reEnterShared( resourceType, resourceId );\n-        }\n-\n-        @Override\n-        public boolean reEnterExclusive( ResourceType resourceType, long resourceId )\n-        {\n-            ensureHoldingToken();\n-            return localClient.reEnterExclusive( resourceType, resourceId );\n-        }\n-\n-        @Override\n-        public void releaseShared( ResourceType resourceType, long... resourceIds )\n-        {\n-            localClient.releaseShared( resourceType, resourceIds );\n-        }\n-\n-        @Override\n-        public void releaseExclusive( ResourceType resourceType, long... resourceIds )\n-        {\n-            localClient.releaseExclusive( resourceType, resourceIds );\n-        }\n-\n-        @Override\n-        public void prepare()\n-        {\n-            localClient.prepare();\n-        }\n-\n-        @Override\n-        public void stop()\n-        {\n-            localClient.stop();\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            localClient.close();\n-        }\n-\n-        @Override\n-        public int getLockSessionId()\n-        {\n-            return lockTokenId;\n-        }\n-\n-        @Override\n-        public Stream<? extends ActiveLock> activeLocks()\n-        {\n-            return localClient.activeLocks();\n-        }\n-\n-        @Override\n-        public long activeLockCount()\n-        {\n-            return localClient.activeLockCount();\n-        }\n+      return localClient.activeLockCount();\n     }\n+  }\n }\n",
            "diff_size": 345
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2645/LeaderOnlyLockManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2645/LeaderOnlyLockManager.java\nindex ce810cd733a..8db4cd0ba0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2645/LeaderOnlyLockManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2645/LeaderOnlyLockManager.java\n@@ -59,13 +59,11 @@ import static org.neo4j.kernel.api.exceptions.Status.Transaction.Interrupted;\n  * Meanwhile, {@link ReplicatedTransactionStateMachine} rejects any transactions that get committed under an\n  * invalid token.\n  */\n-\n // TODO: Fix lock exception usage when lock exception hierarchy has been fixed.\n public class LeaderOnlyLockManager implements Locks\n {\n     public static final String LOCK_NOT_ON_LEADER_ERROR_MESSAGE = \"Should only attempt to take locks when leader.\";\n-\n-    private final MemberId myself;\n+private final MemberId myself;\n \n     private final Replicator replicator;\n     private final LeaderLocator leaderLocator;\n@@ -102,11 +100,8 @@ public class LeaderOnlyLockManager implements Locks\n         /* If we are not the leader then we will not even attempt to get the token,\n            since only the leader should take locks. */\n         ensureLeader();\n-\n-        ReplicatedLockTokenRequest lockTokenRequest =\n-                new ReplicatedLockTokenRequest( myself, LockToken.nextCandidateId( currentToken.id() ) );\n-\n-        Future<Object> future;\n+ReplicatedLockTokenRequest lockTokenRequest = new ReplicatedLockTokenRequest( myself, LockToken.nextCandidateId( currentToken.id() ) );\n+Future<Object> future;\n         try\n         {\n             future = replicator.replicate( lockTokenRequest, true );\n@@ -127,7 +122,7 @@ public class LeaderOnlyLockManager implements Locks\n             {\n                 throw new AcquireLockTimeoutException( \"Failed to acquire lock token. Was taken by another candidate.\",\n                         NotALeader );\n-            }\n+    }\n         }\n         catch ( ExecutionException e )\n         {\n@@ -291,4 +286,4 @@ public class LeaderOnlyLockManager implements Locks\n             return localClient.activeLockCount();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
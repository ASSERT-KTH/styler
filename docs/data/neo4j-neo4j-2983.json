{
    "project_name": "neo4j-neo4j",
    "error_id": "2983",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2983/RingRecentBuffer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2983/RingRecentBuffer.java\nindex 4a78569ddcf..681ae023f80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2983/RingRecentBuffer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2983/RingRecentBuffer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.collector;\n \n import java.util.concurrent.atomic.AtomicLong;\n@@ -39,16 +40,16 @@ public class RingRecentBuffer<T> implements RecentBuffer<T>\n     private final AtomicLong dropEvents;\n     private final Consumer<T> onDiscard;\n \n-    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance( RingRecentBuffer.class ) +\n-                                             2 * HeapEstimator.shallowSizeOfInstance( AtomicLong.class );\n-    private static final long VOLATILE_REF_SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance( VolatileRef.class );\n+    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance(RingRecentBuffer.class) +\n+      2 * HeapEstimator.shallowSizeOfInstance(AtomicLong.class);\n+    private static final long VOLATILE_REF_SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance(VolatileRef.class);\n \n-    public RingRecentBuffer( int size, Consumer<T> onDiscard )\n+    public RingRecentBuffer(int size, Consumer<T> onDiscard)\n     {\n         this.onDiscard = onDiscard;\n-        if ( size > 0 )\n+        if (size > 0)\n         {\n-            Preconditions.requirePowerOfTwo( size );\n+            Preconditions.requirePowerOfTwo(size);\n         }\n \n         this.size = size;\n@@ -56,19 +57,19 @@ public class RingRecentBuffer<T> implements RecentBuffer<T>\n \n         //noinspection unchecked\n         data = new VolatileRef[size];\n-        for ( int i = 0; i < size; i++ )\n+        for (int i = 0; i < size; i++)\n         {\n             data[i] = new VolatileRef<>();\n             data[i].produceNumber = i - size;\n         }\n \n-        produceCount = new AtomicLong( 0 );\n-        dropEvents = new AtomicLong( 0 );\n+        produceCount = new AtomicLong(0);\n+        dropEvents = new AtomicLong(0);\n     }\n \n     long estimatedHeapUsage()\n     {\n-        return SHALLOW_SIZE + HeapEstimator.shallowSizeOf( data ) + data.length * VOLATILE_REF_SHALLOW_SIZE;\n+        return SHALLOW_SIZE + HeapEstimator.shallowSizeOf(data) + data.length * VOLATILE_REF_SHALLOW_SIZE;\n     }\n \n     long numSilentQueryDrops()\n@@ -79,9 +80,9 @@ public class RingRecentBuffer<T> implements RecentBuffer<T>\n     /* ---- many producers ---- */\n \n     @Override\n-    public void produce( T t )\n+    public void produce(T t)\n     {\n-        if ( size == 0 )\n+        if (size == 0)\n         {\n             return;\n         }\n@@ -89,32 +90,31 @@ public class RingRecentBuffer<T> implements RecentBuffer<T>\n         long produceNumber = produceCount.getAndIncrement();\n         int offset = (int) (produceNumber & mask);\n         VolatileRef<T> volatileRef = data[offset];\n-        if ( assertPreviousCompleted( produceNumber, volatileRef ) )\n+        if (assertPreviousCompleted(produceNumber, volatileRef))\n         {\n             var discarded = volatileRef.ref;\n-            if ( discarded != null )\n+            if (discarded != null)\n             {\n-                onDiscard.accept( discarded );\n+                onDiscard.accept(discarded);\n             }\n             volatileRef.ref = t;\n             volatileRef.produceNumber = produceNumber;\n-        }\n-        else\n+        } else\n         {\n             // If we don't manage to wait for the previous produce to complete even after\n             // all the yields in `assertPreviousCompleted`, we drop `t` to avoid causing\n             // a problem in db operation. We increment dropEvents to so the RecentBuffer\n             // consumer can detect that there has been a drop.\n-            onDiscard.accept( t );\n+            onDiscard.accept(t);\n             dropEvents.incrementAndGet();\n         }\n     }\n \n-    private boolean assertPreviousCompleted( long produceNumber, VolatileRef<T> volatileRef )\n+    private boolean assertPreviousCompleted(long produceNumber, VolatileRef<T> volatileRef)\n     {\n         int attempts = 100;\n         long prevProduceNumber = volatileRef.produceNumber;\n-        while ( prevProduceNumber != produceNumber - size && attempts > 0 )\n+        while (prevProduceNumber != produceNumber - size && attempts > 0)\n         {\n             // Coming in here is expected to be very rare, because it means that producers have\n             // circled around the ring buffer, and the producer `size` elements ago hasn't finished\n@@ -122,8 +122,7 @@ public class RingRecentBuffer<T> implements RecentBuffer<T>\n             try\n             {\n                 Thread.sleep(0, 1000);\n-            }\n-            catch ( InterruptedException e )\n+            } catch (InterruptedException e)\n             {\n                 // continue\n             }\n@@ -136,46 +135,46 @@ public class RingRecentBuffer<T> implements RecentBuffer<T>\n     /* ---- single consumer ---- */\n \n     @Override\n-    public void clearIf( Predicate<T> predicate )\n+    public void clearIf(Predicate<T> predicate)\n     {\n-        if ( size == 0 )\n+        if (size == 0)\n         {\n             return;\n         }\n \n-        for ( VolatileRef<T> volatileRef : data )\n+        for (VolatileRef<T> volatileRef : data)\n         {\n             T data = volatileRef.ref;\n-            if ( data != null && predicate.test( data ) )\n+            if (data != null && predicate.test(data))\n             {\n-                onDiscard.accept( data );\n+                onDiscard.accept(data);\n                 volatileRef.ref = null;\n             }\n         }\n     }\n \n     @Override\n-    public void foreach( Consumer<T> consumer )\n+    public void foreach(Consumer<T> consumer)\n     {\n-        if ( size == 0 )\n+        if (size == 0)\n         {\n             return;\n         }\n \n         long snapshotProduce = produceCount.get();\n-        long snapshotConsume = Math.max( 0L, snapshotProduce - size );\n-        for ( long i = snapshotConsume; i < snapshotProduce; i++ )\n+        long snapshotConsume = Math.max(0L, snapshotProduce - size);\n+        for (long i = snapshotConsume; i < snapshotProduce; i++)\n         {\n             int offset = (int) (i & mask);\n             VolatileRef<T> volatileRef = data[offset];\n-            if ( volatileRef.produceNumber < i )\n+            if (volatileRef.produceNumber < i)\n             {\n                 return;\n             }\n             T data = volatileRef.ref;\n-            if ( data != null )\n+            if (data != null)\n             {\n-                consumer.accept( data );\n+                consumer.accept(data);\n             }\n         }\n     }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
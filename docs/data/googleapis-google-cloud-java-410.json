{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "410",
    "information": {
        "errors": [
            {
                "line": "377",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n      /**\n       * Get the ProjectRole for the given String constant, and throw an exception if the constant is\n       * not recognized.\n       */\n      public static ProjectRole valueOfStrict(String constant) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "377",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "377",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/410/Acl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/410/Acl.java\nindex d244f45c32c..45bc99b6239 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/410/Acl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/410/Acl.java\n@@ -33,7 +33,7 @@ import java.util.Objects;\n  * Access Control List for buckets or blobs.\n  *\n  * @see <a href=\"https://cloud.google.com/storage/docs/access-control#About-Access-Control-Lists\">\n- *     About Access Control Lists</a>\n+ * About Access Control Lists</a>\n  */\n public final class Acl implements Serializable {\n \n@@ -400,7 +400,7 @@ public final class Acl implements Serializable {\n      * Creates a project entity.\n      *\n      * @param projectRole a role in the project, used to select project's teams\n-     * @param projectId id of the project\n+     * @param projectId   id of the project\n      */\n     public Project(ProjectRole projectRole, String projectId) {\n       super(Type.PROJECT, projectRole.name().toLowerCase() + \"-\" + projectId);\n@@ -485,7 +485,7 @@ public final class Acl implements Serializable {\n    * Returns an {@code Acl} object.\n    *\n    * @param entity the entity for this ACL object\n-   * @param role the role to associate to the {@code entity} object\n+   * @param role   the role to associate to the {@code entity} object\n    */\n   public static Acl of(Entity entity, Role role) {\n     return newBuilder(entity, role).build();\n@@ -495,7 +495,7 @@ public final class Acl implements Serializable {\n    * Returns a builder for {@code Acl} objects.\n    *\n    * @param entity the entity for this ACL object\n-   * @param role the role to associate to the {@code entity} object\n+   * @param role   the role to associate to the {@code entity} object\n    */\n   public static Builder newBuilder(Entity entity, Role role) {\n     return new Builder(entity, role);\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2, 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2, 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "332",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "357",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "379",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/410/Acl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/410/Acl.java\nindex d244f45c32c..0cf274ca055 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/410/Acl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/410/Acl.java\n@@ -38,14 +38,16 @@ import java.util.Objects;\n public final class Acl implements Serializable {\n \n   private static final long serialVersionUID = 7516713233557576082L;\n-  static final Function<ObjectAccessControl, Acl> FROM_OBJECT_PB_FUNCTION =\n+\n+static final Function<ObjectAccessControl, Acl> FROM_OBJECT_PB_FUNCTION =\n       new Function<ObjectAccessControl, Acl>() {\n         @Override\n         public Acl apply(ObjectAccessControl aclPb) {\n           return Acl.fromPb(aclPb);\n         }\n       };\n-  static final Function<BucketAccessControl, Acl> FROM_BUCKET_PB_FUNCTION =\n+\n+    static final Function<BucketAccessControl, Acl> FROM_BUCKET_PB_FUNCTION =\n       new Function<BucketAccessControl, Acl>() {\n         @Override\n         public Acl apply(BucketAccessControl aclPb) {\n@@ -59,7 +61,8 @@ public final class Acl implements Serializable {\n   private final String etag;\n \n   public static final class Role extends StringEnumValue {\n-    private static final long serialVersionUID = 123037132067643600L;\n+\n+  private static final long serialVersionUID = 123037132067643600L;\n \n     private Role(String constant) {\n       super(constant);\n@@ -74,8 +77,7 @@ public final class Acl implements Serializable {\n         };\n \n     private static final StringEnumType<Role> type = new StringEnumType(\n-        Role.class,\n-        CONSTRUCTOR);\n+        Role.class, CONSTRUCTOR);\n \n     public static final Role OWNER = type.createAndRegister(\"OWNER\");\n     public static final Role READER = type.createAndRegister(\"READER\");\n@@ -327,7 +329,7 @@ public final class Acl implements Serializable {\n           return ALL_USERS;\n         default:\n           break;\n-      }\n+  }\n       return super.toPb();\n     }\n \n@@ -351,7 +353,8 @@ public final class Acl implements Serializable {\n     private final String projectId;\n \n     public static final class ProjectRole extends StringEnumValue {\n-      private static final long serialVersionUID = -8360324311187914382L;\n+\n+  private static final long serialVersionUID = -8360324311187914382L;\n \n       private ProjectRole(String constant) {\n         super(constant);\n@@ -366,8 +369,7 @@ public final class Acl implements Serializable {\n           };\n \n       private static final StringEnumType<ProjectRole> type = new StringEnumType(\n-          ProjectRole.class,\n-          CONSTRUCTOR);\n+          ProjectRole.class, CONSTRUCTOR);\n \n       public static final ProjectRole OWNERS = type.createAndRegister(\"OWNERS\");\n       public static final ProjectRole EDITORS = type.createAndRegister(\"EDITORS\");\n@@ -566,4 +568,4 @@ public final class Acl implements Serializable {\n         .setId(bucketAccessControl.getId())\n         .build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "342",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "344",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 27, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "346",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 27, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "348",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 27, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "380",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "381",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "383",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "384",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "385",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "386",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "395",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "537",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "581",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "587",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/410/Acl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/410/Acl.java\nindex d244f45c32c..c95749b25c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/410/Acl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/410/Acl.java\n@@ -25,7 +25,6 @@ import com.google.cloud.StringEnumType;\n import com.google.cloud.StringEnumValue;\n import com.google.common.base.Function;\n import com.google.common.base.MoreObjects;\n-\n import java.io.Serializable;\n import java.util.Objects;\n \n@@ -35,56 +34,57 @@ import java.util.Objects;\n  * @see <a href=\"https://cloud.google.com/storage/docs/access-control#About-Access-Control-Lists\">\n  *     About Access Control Lists</a>\n  */\n+\n+\n public final class Acl implements Serializable {\n \n   private static final long serialVersionUID = 7516713233557576082L;\n-  static final Function<ObjectAccessControl, Acl> FROM_OBJECT_PB_FUNCTION =\n-      new Function<ObjectAccessControl, Acl>() {\n-        @Override\n-        public Acl apply(ObjectAccessControl aclPb) {\n-          return Acl.fromPb(aclPb);\n-        }\n-      };\n-  static final Function<BucketAccessControl, Acl> FROM_BUCKET_PB_FUNCTION =\n-      new Function<BucketAccessControl, Acl>() {\n-        @Override\n-        public Acl apply(BucketAccessControl aclPb) {\n-          return Acl.fromPb(aclPb);\n-        }\n-      };\n \n+  static final Function<ObjectAccessControl, Acl> FROM_OBJECT_PB_FUNCTION = new Function<ObjectAccessControl, Acl>() {\n+@Override\n+public Acl apply(ObjectAccessControl aclPb) {\n+  return Acl.fromPb(aclPb);\n+}\n+};\n+\n+  static final Function<BucketAccessControl, Acl> FROM_BUCKET_PB_FUNCTION = new Function<BucketAccessControl, Acl>() {\n+@Override\n+public Acl apply(BucketAccessControl aclPb) {\n+  return Acl.fromPb(aclPb);\n+}\n+};\n   private final Entity entity;\n   private final Role role;\n   private final String id;\n   private final String etag;\n \n   public static final class Role extends StringEnumValue {\n+\n     private static final long serialVersionUID = 123037132067643600L;\n \n     private Role(String constant) {\n       super(constant);\n     }\n \n-    private static final ApiFunction<String, Role> CONSTRUCTOR =\n-        new ApiFunction<String, Role>() {\n-          @Override\n-          public Role apply(String constant) {\n-            return new Role(constant);\n-          }\n-        };\n-\n-    private static final StringEnumType<Role> type = new StringEnumType(\n-        Role.class,\n-        CONSTRUCTOR);\n+    private static final ApiFunction<String, Role> CONSTRUCTOR = new ApiFunction<String, Role>() {\n+@Override\n+public Role apply(String constant) {\n+  return new Role(constant);\n+}\n+};\n+    private static final StringEnumType<Role> type = new StringEnumType(Role.class, CONSTRUCTOR);\n \n     public static final Role OWNER = type.createAndRegister(\"OWNER\");\n+\n     public static final Role READER = type.createAndRegister(\"READER\");\n+\n     public static final Role WRITER = type.createAndRegister(\"WRITER\");\n \n     /**\n      * Get the Role for the given String constant, and throw an exception if the constant is\n      * not recognized.\n      */\n+\n     public static Role valueOfStrict(String constant) {\n       return type.valueOfStrict(constant);\n     }\n@@ -92,6 +92,7 @@ public final class Acl implements Serializable {\n     /**\n      * Get the Role for the given String constant, and allow unrecognized values.\n      */\n+\n     public static Role valueOf(String constant) {\n       return type.valueOf(constant);\n     }\n@@ -99,6 +100,7 @@ public final class Acl implements Serializable {\n     /**\n      * Return the known values for Role.\n      */\n+\n     public static Role[] values() {\n       return type.values();\n     }\n@@ -107,6 +109,7 @@ public final class Acl implements Serializable {\n   /**\n    * Builder for {@code Acl} objects.\n    */\n+\n   public static class Builder {\n \n     private Entity entity;\n@@ -129,6 +132,7 @@ public final class Acl implements Serializable {\n     /**\n      * Sets the entity for the ACL object.\n      */\n+\n     public Builder setEntity(Entity entity) {\n       this.entity = entity;\n       return this;\n@@ -137,6 +141,7 @@ public final class Acl implements Serializable {\n     /**\n      * Sets the role to associate to the {@code entity} object.\n      */\n+\n     public Builder setRole(Role role) {\n       this.role = role;\n       return this;\n@@ -155,6 +160,7 @@ public final class Acl implements Serializable {\n     /**\n      * Creates an {@code Acl} object from this builder.\n      */\n+\n     public Acl build() {\n       return new Acl(this);\n     }\n@@ -163,14 +169,15 @@ public final class Acl implements Serializable {\n   /**\n    * Base class for Access Control List entities.\n    */\n+\n   public abstract static class Entity implements Serializable {\n \n     private static final long serialVersionUID = -2707407252771255840L;\n-\n     private final Type type;\n     private final String value;\n \n     public enum Type {\n+\n       DOMAIN, GROUP, USER, PROJECT, UNKNOWN\n     }\n \n@@ -182,6 +189,7 @@ public final class Acl implements Serializable {\n     /**\n      * Returns the type of entity.\n      */\n+\n     public Type getType() {\n       return type;\n     }\n@@ -189,6 +197,7 @@ public final class Acl implements Serializable {\n     /**\n      * Returns the entity's value.\n      */\n+\n     protected String getValue() {\n       return value;\n     }\n@@ -202,7 +211,8 @@ public final class Acl implements Serializable {\n         return false;\n       }\n       Entity entity = (Entity) obj;\n-      return Objects.equals(type, entity.type) && Objects.equals(value, entity.value);\n+      return Objects.equals(type, entity.type)\n+        && Objects.equals(value, entity.value);\n     }\n \n     @Override\n@@ -248,6 +258,7 @@ public final class Acl implements Serializable {\n   /**\n    * Class for ACL Domain entities.\n    */\n+\n   public static final class Domain extends Entity {\n \n     private static final long serialVersionUID = -3033025857280447253L;\n@@ -257,6 +268,7 @@ public final class Acl implements Serializable {\n      *\n      * @param domain the domain associated to this entity\n      */\n+\n     public Domain(String domain) {\n       super(Type.DOMAIN, domain);\n     }\n@@ -264,6 +276,7 @@ public final class Acl implements Serializable {\n     /**\n      * Returns the domain associated to this entity.\n      */\n+\n     public String getDomain() {\n       return getValue();\n     }\n@@ -272,6 +285,7 @@ public final class Acl implements Serializable {\n   /**\n    * Class for ACL Group entities.\n    */\n+\n   public static final class Group extends Entity {\n \n     private static final long serialVersionUID = -1660987136294408826L;\n@@ -281,6 +295,7 @@ public final class Acl implements Serializable {\n      *\n      * @param email the group email\n      */\n+\n     public Group(String email) {\n       super(Type.GROUP, email);\n     }\n@@ -288,6 +303,7 @@ public final class Acl implements Serializable {\n     /**\n      * Returns the group email.\n      */\n+\n     public String getEmail() {\n       return getValue();\n     }\n@@ -296,6 +312,7 @@ public final class Acl implements Serializable {\n   /**\n    * Class for ACL User entities.\n    */\n+\n   public static final class User extends Entity {\n \n     private static final long serialVersionUID = 3076518036392737008L;\n@@ -307,6 +324,7 @@ public final class Acl implements Serializable {\n      *\n      * @param email the user email\n      */\n+\n     public User(String email) {\n       super(Type.USER, email);\n     }\n@@ -314,19 +332,20 @@ public final class Acl implements Serializable {\n     /**\n      * Returns the user email.\n      */\n+\n     public String getEmail() {\n       return getValue();\n     }\n \n     @Override\n     String toPb() {\n-      switch (getValue()) {\n+      switch(getValue()) {\n         case ALL_AUTHENTICATED_USERS:\n-          return ALL_AUTHENTICATED_USERS;\n+                           return ALL_AUTHENTICATED_USERS;\n         case ALL_USERS:\n-          return ALL_USERS;\n+                           return ALL_USERS;\n         default:\n-          break;\n+                           break;\n       }\n       return super.toPb();\n     }\n@@ -343,40 +362,40 @@ public final class Acl implements Serializable {\n   /**\n    * Class for ACL Project entities.\n    */\n+\n   public static final class Project extends Entity {\n \n     private static final long serialVersionUID = 7933776866530023027L;\n-\n     private final ProjectRole projectRole;\n     private final String projectId;\n \n     public static final class ProjectRole extends StringEnumValue {\n+\n       private static final long serialVersionUID = -8360324311187914382L;\n \n       private ProjectRole(String constant) {\n         super(constant);\n       }\n \n-      private static final ApiFunction<String, ProjectRole> CONSTRUCTOR =\n-          new ApiFunction<String, ProjectRole>() {\n-            @Override\n-            public ProjectRole apply(String constant) {\n-              return new ProjectRole(constant);\n-            }\n-          };\n-\n-      private static final StringEnumType<ProjectRole> type = new StringEnumType(\n-          ProjectRole.class,\n-          CONSTRUCTOR);\n+      private static final ApiFunction<String, ProjectRole> CONSTRUCTOR = new ApiFunction<String, ProjectRole>() {\n+  @Override\n+  public ProjectRole apply(String constant) {\n+    return new ProjectRole(constant);\n+  }\n+};\n+      private static final StringEnumType<ProjectRole> type = new StringEnumType(ProjectRole.class, CONSTRUCTOR);\n \n       public static final ProjectRole OWNERS = type.createAndRegister(\"OWNERS\");\n+\n       public static final ProjectRole EDITORS = type.createAndRegister(\"EDITORS\");\n+\n       public static final ProjectRole VIEWERS = type.createAndRegister(\"VIEWERS\");\n \n       /**\n        * Get the ProjectRole for the given String constant, and throw an exception if the constant is\n        * not recognized.\n        */\n+\n       public static ProjectRole valueOfStrict(String constant) {\n         return type.valueOfStrict(constant);\n       }\n@@ -384,6 +403,7 @@ public final class Acl implements Serializable {\n       /**\n        * Get the ProjectRole for the given String constant, and allow unrecognized values.\n        */\n+\n       public static ProjectRole valueOf(String constant) {\n         return type.valueOf(constant);\n       }\n@@ -391,6 +411,7 @@ public final class Acl implements Serializable {\n       /**\n        * Return the known values for ProjectRole.\n        */\n+\n       public static ProjectRole[] values() {\n         return type.values();\n       }\n@@ -402,6 +423,7 @@ public final class Acl implements Serializable {\n      * @param projectRole a role in the project, used to select project's teams\n      * @param projectId id of the project\n      */\n+\n     public Project(ProjectRole projectRole, String projectId) {\n       super(Type.PROJECT, projectRole.name().toLowerCase() + \"-\" + projectId);\n       this.projectRole = projectRole;\n@@ -411,6 +433,7 @@ public final class Acl implements Serializable {\n     /**\n      * Returns the role in the project for this entity.\n      */\n+\n     public ProjectRole getProjectRole() {\n       return projectRole;\n     }\n@@ -418,6 +441,7 @@ public final class Acl implements Serializable {\n     /**\n      * Returns the project id for this entity.\n      */\n+\n     public String getProjectId() {\n       return projectId;\n     }\n@@ -447,6 +471,7 @@ public final class Acl implements Serializable {\n   /**\n    * Returns the entity for this ACL object.\n    */\n+\n   public Entity getEntity() {\n     return entity;\n   }\n@@ -454,6 +479,7 @@ public final class Acl implements Serializable {\n   /**\n    * Returns the role associated to the entity in this ACL object.\n    */\n+\n   public Role getRole() {\n     return role;\n   }\n@@ -461,6 +487,7 @@ public final class Acl implements Serializable {\n   /**\n    * Returns the ID of the ACL entry.\n    */\n+\n   public String getId() {\n     return id;\n   }\n@@ -470,6 +497,7 @@ public final class Acl implements Serializable {\n    *\n    * @see <a href=\"http://tools.ietf.org/html/rfc2616#section-3.11\">Entity Tags</a>\n    */\n+\n   public String getEtag() {\n     return etag;\n   }\n@@ -477,6 +505,7 @@ public final class Acl implements Serializable {\n   /**\n    * Returns a builder for this {@code Acl} object.\n    */\n+\n   public Builder toBuilder() {\n     return new Builder(this);\n   }\n@@ -487,6 +516,7 @@ public final class Acl implements Serializable {\n    * @param entity the entity for this ACL object\n    * @param role the role to associate to the {@code entity} object\n    */\n+\n   public static Acl of(Entity entity, Role role) {\n     return newBuilder(entity, role).build();\n   }\n@@ -497,18 +527,14 @@ public final class Acl implements Serializable {\n    * @param entity the entity for this ACL object\n    * @param role the role to associate to the {@code entity} object\n    */\n+\n   public static Builder newBuilder(Entity entity, Role role) {\n     return new Builder(entity, role);\n   }\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"entity\", entity)\n-        .add(\"role\", role)\n-        .add(\"etag\", etag)\n-        .add(\"id\", id)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"entity\", entity).add(\"role\", role).add(\"etag\", etag).add(\"id\", id).toString();\n   }\n \n   @Override\n@@ -526,9 +552,9 @@ public final class Acl implements Serializable {\n     }\n     final Acl other = (Acl) obj;\n     return Objects.equals(this.entity, other.entity)\n-        && Objects.equals(this.role, other.role)\n-        && Objects.equals(this.etag, other.etag)\n-        && Objects.equals(this.id, other.id);\n+      && Objects.equals(this.role, other.role)\n+      && Objects.equals(this.etag, other.etag)\n+      && Objects.equals(this.id, other.id);\n   }\n \n   BucketAccessControl toBucketPb() {\n@@ -552,18 +578,12 @@ public final class Acl implements Serializable {\n   static Acl fromPb(ObjectAccessControl objectAccessControl) {\n     Role role = Role.valueOf(objectAccessControl.getRole());\n     Entity entity = Entity.fromPb(objectAccessControl.getEntity());\n-    return newBuilder(entity, role)\n-        .setEtag(objectAccessControl.getEtag())\n-        .setId(objectAccessControl.getId())\n-        .build();\n+    return newBuilder(entity, role).setEtag(objectAccessControl.getEtag()).setId(objectAccessControl.getId()).build();\n   }\n \n   static Acl fromPb(BucketAccessControl bucketAccessControl) {\n     Role role = Role.valueOf(bucketAccessControl.getRole());\n     Entity entity = Entity.fromPb(bucketAccessControl.getEntity());\n-    return newBuilder(entity, role)\n-        .setEtag(bucketAccessControl.getEtag())\n-        .setId(bucketAccessControl.getId())\n-        .build();\n+    return newBuilder(entity, role).setEtag(bucketAccessControl.getEtag()).setId(bucketAccessControl.getId()).build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 118
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "377",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "377",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1998",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1998/LegacySslPolicyConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1998/LegacySslPolicyConfig.java\nindex 13102346004..3924397cd7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1998/LegacySslPolicyConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1998/LegacySslPolicyConfig.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration.ssl;\n \n import java.io.File;\n@@ -34,24 +35,24 @@ import static org.neo4j.kernel.configuration.Settings.pathSetting;\n  * To be removed in favour of {@link SslPolicyConfig}. The settings below are still\n  * incorporated in a backwards compatible manner, under the \"legacy\" policy name.\n  */\n-@Description( \"Legacy SSL policy settings\" )\n+@Description(\"Legacy SSL policy settings\")\n public class LegacySslPolicyConfig implements LoadableConfig\n {\n-    public static final String LEGACY_POLICY_NAME = \"legacy\";\n-\n-    @Description( \"Directory for storing certificates to be used by Neo4j for TLS connections\" )\n-    public static final Setting<File> certificates_directory =\n-            pathSetting( \"dbms.directories.certificates\", \"certificates\" );\n-\n-    @Internal\n-    @Description( \"Path to the X.509 public certificate to be used by Neo4j for TLS connections\" )\n-    public static final Setting<File> tls_certificate_file =\n-            derivedSetting( \"unsupported.dbms.security.tls_certificate_file\", certificates_directory,\n-                    certificates -> new File( certificates, \"neo4j.cert\" ), PATH );\n-\n-    @Internal\n-    @Description( \"Path to the X.509 private key to be used by Neo4j for TLS connections\" )\n-    public static final Setting<File> tls_key_file =\n-            derivedSetting( \"unsupported.dbms.security.tls_key_file\", certificates_directory,\n-                    certificates -> new File( certificates, \"neo4j.key\" ), PATH );\n+  public static final String LEGACY_POLICY_NAME = \"legacy\";\n+\n+  @Description(\"Directory for storing certificates to be used by Neo4j for TLS connections\")\n+  public static final Setting<File> certificates_directory =\n+      pathSetting(\"dbms.directories.certificates\", \"certificates\");\n+\n+  @Internal\n+  @Description(\"Path to the X.509 public certificate to be used by Neo4j for TLS connections\")\n+  public static final Setting<File> tls_certificate_file =\n+      derivedSetting(\"unsupported.dbms.security.tls_certificate_file\", certificates_directory,\n+          certificates -> new File(certificates, \"neo4j.cert\"), PATH);\n+\n+  @Internal\n+  @Description(\"Path to the X.509 private key to be used by Neo4j for TLS connections\")\n+  public static final Setting<File> tls_key_file =\n+      derivedSetting(\"unsupported.dbms.security.tls_key_file\", certificates_directory,\n+          certificates -> new File(certificates, \"neo4j.key\"), PATH);\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Annotation 'Description' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Annotation 'Description' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1998/LegacySslPolicyConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1998/LegacySslPolicyConfig.java\nindex 13102346004..5036b22f0da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1998/LegacySslPolicyConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1998/LegacySslPolicyConfig.java\n@@ -40,18 +40,15 @@ public class LegacySslPolicyConfig implements LoadableConfig\n     public static final String LEGACY_POLICY_NAME = \"legacy\";\n \n     @Description( \"Directory for storing certificates to be used by Neo4j for TLS connections\" )\n-    public static final Setting<File> certificates_directory =\n-            pathSetting( \"dbms.directories.certificates\", \"certificates\" );\n+    public static final Setting<File> certificates_directory = pathSetting( \"dbms.directories.certificates\", \"certificates\" );\n \n-    @Internal\n+@Internal\n     @Description( \"Path to the X.509 public certificate to be used by Neo4j for TLS connections\" )\n-    public static final Setting<File> tls_certificate_file =\n-            derivedSetting( \"unsupported.dbms.security.tls_certificate_file\", certificates_directory,\n+    public static final Setting<File> tls_certificate_file = derivedSetting( \"unsupported.dbms.security.tls_certificate_file\", certificates_directory,\n                     certificates -> new File( certificates, \"neo4j.cert\" ), PATH );\n \n-    @Internal\n+@Internal\n     @Description( \"Path to the X.509 private key to be used by Neo4j for TLS connections\" )\n-    public static final Setting<File> tls_key_file =\n-            derivedSetting( \"unsupported.dbms.security.tls_key_file\", certificates_directory,\n+    public static final Setting<File> tls_key_file = derivedSetting( \"unsupported.dbms.security.tls_key_file\", certificates_directory,\n                     certificates -> new File( certificates, \"neo4j.key\" ), PATH );\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
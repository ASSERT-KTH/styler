{
    "project_name": "eclipse-ee4j-glassfish",
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "57",
                "column": "41",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "    {\n        super(environment);\n        defaultInitCtx = serialContext; // this is our default context\n        gotDefault = true;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/100/WrappedSerialContext.java\nindex 654087ef42d..d324038d2d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/100/WrappedSerialContext.java\n@@ -54,7 +54,10 @@ public class WrappedSerialContext extends InitialContext\n                                         throws NamingException\n     {\n         super(environment);\n-        defaultInitCtx = serialContext; // this is our default context\n+        defaultInitCtx = serialContext;\n+\n+        // this is our default context\n+\n         gotDefault = true;\n     }\n \n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "55",
                    "column": "41",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/100/WrappedSerialContext.java\nindex 654087ef42d..25fef7515a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/100/WrappedSerialContext.java\n@@ -40,8 +40,7 @@ import java.util.Hashtable;\n  *\n  * @author Sanjeeb.Sahoo@Sun.COM\n  */\n-public class WrappedSerialContext extends InitialContext\n-{\n+public class WrappedSerialContext extends InitialContext {\n     /*\n      * Implementation Note:\n      * It extends InitialContext and overrides getURLOrDefaultInitCtx methods.\n@@ -51,16 +50,14 @@ public class WrappedSerialContext extends InitialContext\n     // Not for public use.\n     /* prackage */ WrappedSerialContext(Hashtable environment,\n                                         SerialContext serialContext)\n-                                        throws NamingException\n-    {\n+        throws NamingException {\n         super(environment);\n         defaultInitCtx = serialContext; // this is our default context\n         gotDefault = true;\n     }\n \n     @Override\n-    protected void init(Hashtable environment) throws NamingException\n-    {\n+    protected void init(Hashtable environment) throws NamingException {\n         // Don't bother merging with application resources  or system\n         // properties, as that has already happened when user called\n         // new InitialContext. So, just store it.\n@@ -68,20 +65,16 @@ public class WrappedSerialContext extends InitialContext\n     }\n \n     @Override\n-    protected Context getDefaultInitCtx() throws NamingException\n-    {\n+    protected Context getDefaultInitCtx() throws NamingException {\n         return defaultInitCtx;\n     }\n \n     @Override\n-    protected Context getURLOrDefaultInitCtx(String name) throws NamingException\n-    {\n+    protected Context getURLOrDefaultInitCtx(String name) throws NamingException {\n         String scheme = getURLScheme(name);\n-        if (scheme != null)\n-        {\n+        if (scheme != null) {\n             Context ctx = NamingManager.getURLContext(scheme, myProps);\n-            if (ctx != null)\n-            {\n+            if (ctx != null) {\n                 return ctx;\n             }\n         }\n@@ -89,17 +82,13 @@ public class WrappedSerialContext extends InitialContext\n     }\n \n     @Override\n-    protected Context getURLOrDefaultInitCtx(Name name) throws NamingException\n-    {\n-        if (name.size() > 0)\n-        {\n+    protected Context getURLOrDefaultInitCtx(Name name) throws NamingException {\n+        if (name.size() > 0) {\n             String first = name.get(0);\n             String scheme = getURLScheme(first);\n-            if (scheme != null)\n-            {\n+            if (scheme != null) {\n                 Context ctx = NamingManager.getURLContext(scheme, myProps);\n-                if (ctx != null)\n-                {\n+                if (ctx != null) {\n                     return ctx;\n                 }\n             }\n@@ -115,15 +104,13 @@ public class WrappedSerialContext extends InitialContext\n      * @return\n      * @see javax.naming.spi.NamingManager#getURLScheme\n      */\n-    private static String getURLScheme(String str)\n-    {\n+    private static String getURLScheme(String str) {\n         // Implementation is copied from\n         // javax.naming.spi.NamingManager#getURLScheme\n         int colon_posn = str.indexOf(':');\n         int slash_posn = str.indexOf('/');\n \n-        if (colon_posn > 0 && (slash_posn == -1 || colon_posn < slash_posn))\n-        {\n+        if (colon_posn > 0 && (slash_posn == -1 || colon_posn < slash_posn)) {\n             return str.substring(0, colon_posn);\n         }\n         return null;\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/100/WrappedSerialContext.java\nindex 654087ef42d..546d811f6d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/100/WrappedSerialContext.java\n@@ -47,14 +47,16 @@ public class WrappedSerialContext extends InitialContext\n      * It extends InitialContext and overrides getURLOrDefaultInitCtx methods.\n      * This is a very sensitive class. Take extreme precautions while changing.\n      */\n+// Not for public use.\n+    /* prackage */\n \n-    // Not for public use.\n-    /* prackage */ WrappedSerialContext(Hashtable environment,\n+WrappedSerialContext(Hashtable environment,\n                                         SerialContext serialContext)\n-                                        throws NamingException\n-    {\n+                                        throws NamingException {\n         super(environment);\n-        defaultInitCtx = serialContext; // this is our default context\n+        defaultInitCtx = serialContext;\n+\n+// this is our default context\n         gotDefault = true;\n     }\n \n@@ -129,4 +131,4 @@ public class WrappedSerialContext extends InitialContext\n         return null;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "57",
                    "column": "41",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/100/WrappedSerialContext.java\nindex 654087ef42d..d324038d2d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/100/WrappedSerialContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/100/WrappedSerialContext.java\n@@ -54,7 +54,10 @@ public class WrappedSerialContext extends InitialContext\n                                         throws NamingException\n     {\n         super(environment);\n-        defaultInitCtx = serialContext; // this is our default context\n+        defaultInitCtx = serialContext;\n+\n+        // this is our default context\n+\n         gotDefault = true;\n     }\n \n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
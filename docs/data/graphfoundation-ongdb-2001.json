{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2001",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2001/SegmentedRaftLogCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2001/SegmentedRaftLogCursor.java\nindex 747c1aaf354..81cdc1d5704 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2001/SegmentedRaftLogCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2001/SegmentedRaftLogCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.io.IOException;\n@@ -29,48 +30,47 @@ import org.neo4j.cursor.IOCursor;\n \n class SegmentedRaftLogCursor implements RaftLogCursor\n {\n-    private final IOCursor<EntryRecord> inner;\n-    private CursorValue<RaftLogEntry> current;\n-    private long index;\n+  private final IOCursor<EntryRecord> inner;\n+  private CursorValue<RaftLogEntry> current;\n+  private long index;\n \n-    SegmentedRaftLogCursor( long fromIndex, IOCursor<EntryRecord> inner )\n-    {\n-        this.inner = inner;\n-        this.current = new CursorValue<>();\n-        this.index = fromIndex - 1;\n-    }\n+  SegmentedRaftLogCursor(long fromIndex, IOCursor<EntryRecord> inner)\n+  {\n+    this.inner = inner;\n+    this.current = new CursorValue<>();\n+    this.index = fromIndex - 1;\n+  }\n \n-    @Override\n-    public boolean next() throws IOException\n+  @Override\n+  public boolean next() throws IOException\n+  {\n+    boolean hasNext = inner.next();\n+    if (hasNext)\n     {\n-        boolean hasNext = inner.next();\n-        if ( hasNext )\n-        {\n-            current.set( inner.get().logEntry() );\n-            index++;\n-        }\n-        else\n-        {\n-            current.invalidate();\n-        }\n-        return hasNext;\n-    }\n-\n-    @Override\n-    public void close() throws IOException\n+      current.set(inner.get().logEntry());\n+      index++;\n+    } else\n     {\n-        inner.close();\n+      current.invalidate();\n     }\n+    return hasNext;\n+  }\n \n-    @Override\n-    public long index()\n-    {\n-        return index;\n-    }\n+  @Override\n+  public void close() throws IOException\n+  {\n+    inner.close();\n+  }\n \n-    @Override\n-    public RaftLogEntry get()\n-    {\n-        return current.get();\n-    }\n+  @Override\n+  public long index()\n+  {\n+    return index;\n+  }\n+\n+  @Override\n+  public RaftLogEntry get()\n+  {\n+    return current.get();\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2001/SegmentedRaftLogCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2001/SegmentedRaftLogCursor.java\nindex 747c1aaf354..672300f53c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2001/SegmentedRaftLogCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2001/SegmentedRaftLogCursor.java\n@@ -53,7 +53,8 @@ class SegmentedRaftLogCursor implements RaftLogCursor\n         {\n             current.invalidate();\n         }\n-        return hasNext;\n+\n+return hasNext;\n     }\n \n     @Override\n@@ -73,4 +74,4 @@ class SegmentedRaftLogCursor implements RaftLogCursor\n     {\n         return current.get();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
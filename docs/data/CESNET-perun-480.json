{
    "project_name": "CESNET-perun",
    "error_id": "480",
    "information": {
        "errors": [
            {
                "line": "20",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\n\t/**\n\t * \n\t */\n\tprivate static final long serialVersionUID = 5656828750714418582L;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/480/TaskResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/480/TaskResult.java\nindex afbc5c27a7c..087b087ea76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/480/TaskResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/480/TaskResult.java\n@@ -10,192 +10,206 @@ import cz.metacentrum.perun.core.api.PerunBean;\n import cz.metacentrum.perun.core.api.Service;\n \n /**\n- *\n  * @author Michal Karm Babacek JavaDoc coming soon...\n- *\n  */\n public class TaskResult extends PerunBean implements Serializable {\n \n-\t/**\n-\t * \n-\t */\n-\tprivate static final long serialVersionUID = 5656828750714418582L;\n-\n-\tpublic static enum TaskResultStatus {\n-\t\tDONE, ERROR, FATAL_ERROR, DENIED, WARN\n-\t}\n-\n-\tprivate int id;\n-\tprivate int taskId;\n-\tprivate int destinationId;\n-\tprivate String errorMessage;\n-\tprivate String standardMessage;\n-\tprivate int returnCode;\n-\tprivate Date timestamp;\n-\tprivate TaskResultStatus status;\n-\tprivate Destination destination;\n-\tprivate Service service;\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n-\t\tint result = 1;\n-\t\tresult = prime * result + destinationId;\n-\t\tresult = prime * result + ((errorMessage == null) ? 0 : errorMessage.hashCode());\n-\t\tresult = prime * result + id;\n-\t\tresult = prime * result + returnCode;\n-\t\tresult = prime * result + ((standardMessage == null) ? 0 : standardMessage.hashCode());\n-\t\tresult = prime * result + ((status == null) ? 0 : status.hashCode());\n-\t\tresult = prime * result + taskId;\n-\t\tresult = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());\n-\t\tresult = prime * result + ((service == null) ? 0 : service.hashCode());\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\t\tTaskResult other = (TaskResult) obj;\n-\t\tif (destinationId != other.destinationId)\n-\t\t\treturn false;\n-\t\tif (errorMessage == null) {\n-\t\t\tif (other.errorMessage != null)\n-\t\t\t\treturn false;\n-\t\t} else if (!errorMessage.equals(other.errorMessage))\n-\t\t\treturn false;\n-\t\tif (id != other.id)\n-\t\t\treturn false;\n-\t\tif (returnCode != other.returnCode)\n-\t\t\treturn false;\n-\t\tif (standardMessage == null) {\n-\t\t\tif (other.standardMessage != null)\n-\t\t\t\treturn false;\n-\t\t} else if (!standardMessage.equals(other.standardMessage))\n-\t\t\treturn false;\n-\t\tif (status != other.status)\n-\t\t\treturn false;\n-\t\tif (taskId != other.taskId)\n-\t\t\treturn false;\n-\t\tif (!Objects.equals(service, other.service))\n-\t\t\treturn false;\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic String serializeToString() {\n-\t\tStringBuilder str = new StringBuilder();\n-\n-\t\tString dateString;\n-\t\tif(timestamp != null) dateString = BeansUtils.getDateFormatter().format(timestamp);\n-\t\telse dateString = \"\\\\0\";\n-\n-\t\treturn str.append(this.getClass().getSimpleName()).append(\":[\").append(\n-\t\t\t\"id=<\").append(getId()).append(\">\").append(\n-\t\t\t\", taskId=<\").append(taskId).append(\">\").append(\n-\t\t\t\", destinationId=<\").append(destinationId).append(\">\").append(\n-\t\t\t\", errorMessage=<\").append(errorMessage== null ? \"\\\\0\" : BeansUtils.createEscaping(errorMessage.toString())).append(\">\").append(\n-\t\t\t\", standardMessage=<\").append(standardMessage== null ? \"\\\\0\" : BeansUtils.createEscaping(standardMessage.toString())).append(\">\").append(\n-\t\t\t\", returnCode=<\").append(returnCode).append(\">\").append(\n-\t\t\t\", timestamp=<\").append(dateString).append(\">\").append(\n-\t\t\t\", status=<\").append(status == null ? \"\\\\0\" : BeansUtils.createEscaping(status.toString())).append(\">\").append(\n-\t\t\t\", service=<\").append(service == null ? \"\\\\0\" : service.serializeToString()).append(\">\").append(\n-\t\t\t']').toString();\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"TaskResult:[id='\" + id + \"', taskId='\" + taskId + \"', destinationId='\" + destinationId + \"', errorMessage='\" + errorMessage + \"', \"\n-\t\t\t\t+ \"standardMessage='\" + standardMessage + \"', returnCode='\"\n-\t\t\t+ returnCode + \"', timestamp='\" + BeansUtils.getDateFormatter().format(timestamp) + \"', status='\" + status + \"', service='\" + service + \"']\";\n-\t}\n-\n-\tpublic int getTaskId() {\n-\t\treturn taskId;\n-\t}\n-\n-\tpublic void setTaskId(int taskId) {\n-\t\tthis.taskId = taskId;\n-\t}\n-\n-\tpublic int getDestinationId() {\n-\t\treturn destinationId;\n-\t}\n-\n-\tpublic void setDestinationId(int destinationId) {\n-\t\tthis.destinationId = destinationId;\n-\t}\n-\n-\tpublic String getErrorMessage() {\n-\t\treturn errorMessage;\n-\t}\n-\n-\tpublic void setErrorMessage(String errorMessage) {\n-\t\tthis.errorMessage = errorMessage;\n-\t}\n-\n-\tpublic String getStandardMessage() {\n-\t\treturn standardMessage;\n-\t}\n-\n-\tpublic void setStandardMessage(String standardMessage) {\n-\t\tthis.standardMessage = standardMessage;\n-\t}\n-\n-\tpublic int getReturnCode() {\n-\t\treturn returnCode;\n-\t}\n-\n-\tpublic void setReturnCode(int returnCode) {\n-\t\tthis.returnCode = returnCode;\n-\t}\n-\n-\tpublic Date getTimestamp() {\n-\t\treturn timestamp;\n-\t}\n-\n-\tpublic void setTimestamp(Date timestamp) {\n-\t\tthis.timestamp = timestamp;\n-\t}\n-\n-\tpublic TaskResultStatus getStatus() {\n-\t\treturn status;\n-\t}\n-\n-\tpublic void setStatus(TaskResultStatus status) {\n-\t\tthis.status = status;\n-\t}\n-\n-\tpublic void setId(int id) {\n-\t\tthis.id = id;\n-\t}\n-\n-\tpublic int getId() {\n-\t\treturn id;\n-\t}\n-\n-\tpublic Destination getDestination() {\n-\t\treturn destination;\n-\t}\n-\n-\tpublic void setDestination(Destination destination) {\n-\t\tthis.destination = destination;\n-\t}\n-\n-\tpublic Service getService() {\n-\t\treturn service;\n-\t}\n-\n-\tpublic void setService(Service service) {\n-\t\tthis.service = service;\n-\t}\n-\n-\tpublic String getBeanName(){\n-\t\treturn this.getClass().getSimpleName();\n-\t}\n+    /**\n+     *\n+     */\n+    private static final long serialVersionUID = 5656828750714418582L;\n+\n+    public static enum TaskResultStatus {\n+        DONE, ERROR, FATAL_ERROR, DENIED, WARN\n+    }\n+\n+    private int id;\n+    private int taskId;\n+    private int destinationId;\n+    private String errorMessage;\n+    private String standardMessage;\n+    private int returnCode;\n+    private Date timestamp;\n+    private TaskResultStatus status;\n+    private Destination destination;\n+    private Service service;\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + destinationId;\n+        result = prime * result + ((errorMessage == null) ? 0 : errorMessage.hashCode());\n+        result = prime * result + id;\n+        result = prime * result + returnCode;\n+        result = prime * result + ((standardMessage == null) ? 0 : standardMessage.hashCode());\n+        result = prime * result + ((status == null) ? 0 : status.hashCode());\n+        result = prime * result + taskId;\n+        result = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());\n+        result = prime * result + ((service == null) ? 0 : service.hashCode());\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        TaskResult other = (TaskResult) obj;\n+        if (destinationId != other.destinationId) {\n+            return false;\n+        }\n+        if (errorMessage == null) {\n+            if (other.errorMessage != null) {\n+                return false;\n+            }\n+        } else if (!errorMessage.equals(other.errorMessage)) {\n+            return false;\n+        }\n+        if (id != other.id) {\n+            return false;\n+        }\n+        if (returnCode != other.returnCode) {\n+            return false;\n+        }\n+        if (standardMessage == null) {\n+            if (other.standardMessage != null) {\n+                return false;\n+            }\n+        } else if (!standardMessage.equals(other.standardMessage)) {\n+            return false;\n+        }\n+        if (status != other.status) {\n+            return false;\n+        }\n+        if (taskId != other.taskId) {\n+            return false;\n+        }\n+        if (!Objects.equals(service, other.service)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    @Override\n+    public String serializeToString() {\n+        StringBuilder str = new StringBuilder();\n+\n+        String dateString;\n+        if (timestamp != null) {\n+            dateString = BeansUtils.getDateFormatter().format(timestamp);\n+        } else {\n+            dateString = \"\\\\0\";\n+        }\n+\n+        return str.append(this.getClass().getSimpleName()).append(\":[\").append(\n+                \"id=<\").append(getId()).append(\">\").append(\n+                \", taskId=<\").append(taskId).append(\">\").append(\n+                \", destinationId=<\").append(destinationId).append(\">\").append(\n+                \", errorMessage=<\").append(errorMessage == null ? \"\\\\0\" : BeansUtils.createEscaping(errorMessage.toString())).append(\">\").append(\n+                \", standardMessage=<\").append(standardMessage == null ? \"\\\\0\" : BeansUtils.createEscaping(standardMessage.toString())).append(\">\").append(\n+                \", returnCode=<\").append(returnCode).append(\">\").append(\n+                \", timestamp=<\").append(dateString).append(\">\").append(\n+                \", status=<\").append(status == null ? \"\\\\0\" : BeansUtils.createEscaping(status.toString())).append(\">\").append(\n+                \", service=<\").append(service == null ? \"\\\\0\" : service.serializeToString()).append(\">\").append(\n+                ']').toString();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TaskResult:[id='\" + id + \"', taskId='\" + taskId + \"', destinationId='\" + destinationId + \"', errorMessage='\" + errorMessage + \"', \"\n+                + \"standardMessage='\" + standardMessage + \"', returnCode='\"\n+                + returnCode + \"', timestamp='\" + BeansUtils.getDateFormatter().format(timestamp) + \"', status='\" + status + \"', service='\" + service + \"']\";\n+    }\n+\n+    public int getTaskId() {\n+        return taskId;\n+    }\n+\n+    public void setTaskId(int taskId) {\n+        this.taskId = taskId;\n+    }\n+\n+    public int getDestinationId() {\n+        return destinationId;\n+    }\n+\n+    public void setDestinationId(int destinationId) {\n+        this.destinationId = destinationId;\n+    }\n+\n+    public String getErrorMessage() {\n+        return errorMessage;\n+    }\n+\n+    public void setErrorMessage(String errorMessage) {\n+        this.errorMessage = errorMessage;\n+    }\n+\n+    public String getStandardMessage() {\n+        return standardMessage;\n+    }\n+\n+    public void setStandardMessage(String standardMessage) {\n+        this.standardMessage = standardMessage;\n+    }\n+\n+    public int getReturnCode() {\n+        return returnCode;\n+    }\n+\n+    public void setReturnCode(int returnCode) {\n+        this.returnCode = returnCode;\n+    }\n+\n+    public Date getTimestamp() {\n+        return timestamp;\n+    }\n+\n+    public void setTimestamp(Date timestamp) {\n+        this.timestamp = timestamp;\n+    }\n+\n+    public TaskResultStatus getStatus() {\n+        return status;\n+    }\n+\n+    public void setStatus(TaskResultStatus status) {\n+        this.status = status;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public Destination getDestination() {\n+        return destination;\n+    }\n+\n+    public void setDestination(Destination destination) {\n+        this.destination = destination;\n+    }\n+\n+    public Service getService() {\n+        return service;\n+    }\n+\n+    public void setService(Service service) {\n+        this.service = service;\n+    }\n+\n+    public String getBeanName() {\n+        return this.getClass().getSimpleName();\n+    }\n \n }\n",
            "diff_size": 199
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/480/TaskResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/480/TaskResult.java\nindex afbc5c27a7c..19ea4660dd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/480/TaskResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/480/TaskResult.java\n@@ -3,7 +3,6 @@ package cz.metacentrum.perun.taskslib.model;\n import java.io.Serializable;\n import java.util.Date;\n import java.util.Objects;\n-\n import cz.metacentrum.perun.core.api.BeansUtils;\n import cz.metacentrum.perun.core.api.Destination;\n import cz.metacentrum.perun.core.api.PerunBean;\n@@ -14,188 +13,179 @@ import cz.metacentrum.perun.core.api.Service;\n  * @author Michal Karm Babacek JavaDoc coming soon...\n  *\n  */\n+\n+\n public class TaskResult extends PerunBean implements Serializable {\n \n-\t/**\n-\t * \n-\t */\n-\tprivate static final long serialVersionUID = 5656828750714418582L;\n-\n-\tpublic static enum TaskResultStatus {\n-\t\tDONE, ERROR, FATAL_ERROR, DENIED, WARN\n-\t}\n-\n-\tprivate int id;\n-\tprivate int taskId;\n-\tprivate int destinationId;\n-\tprivate String errorMessage;\n-\tprivate String standardMessage;\n-\tprivate int returnCode;\n-\tprivate Date timestamp;\n-\tprivate TaskResultStatus status;\n-\tprivate Destination destination;\n-\tprivate Service service;\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n-\t\tint result = 1;\n-\t\tresult = prime * result + destinationId;\n-\t\tresult = prime * result + ((errorMessage == null) ? 0 : errorMessage.hashCode());\n-\t\tresult = prime * result + id;\n-\t\tresult = prime * result + returnCode;\n-\t\tresult = prime * result + ((standardMessage == null) ? 0 : standardMessage.hashCode());\n-\t\tresult = prime * result + ((status == null) ? 0 : status.hashCode());\n-\t\tresult = prime * result + taskId;\n-\t\tresult = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());\n-\t\tresult = prime * result + ((service == null) ? 0 : service.hashCode());\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\t\tTaskResult other = (TaskResult) obj;\n-\t\tif (destinationId != other.destinationId)\n-\t\t\treturn false;\n-\t\tif (errorMessage == null) {\n-\t\t\tif (other.errorMessage != null)\n-\t\t\t\treturn false;\n-\t\t} else if (!errorMessage.equals(other.errorMessage))\n-\t\t\treturn false;\n-\t\tif (id != other.id)\n-\t\t\treturn false;\n-\t\tif (returnCode != other.returnCode)\n-\t\t\treturn false;\n-\t\tif (standardMessage == null) {\n-\t\t\tif (other.standardMessage != null)\n-\t\t\t\treturn false;\n-\t\t} else if (!standardMessage.equals(other.standardMessage))\n-\t\t\treturn false;\n-\t\tif (status != other.status)\n-\t\t\treturn false;\n-\t\tif (taskId != other.taskId)\n-\t\t\treturn false;\n-\t\tif (!Objects.equals(service, other.service))\n-\t\t\treturn false;\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic String serializeToString() {\n-\t\tStringBuilder str = new StringBuilder();\n-\n-\t\tString dateString;\n-\t\tif(timestamp != null) dateString = BeansUtils.getDateFormatter().format(timestamp);\n-\t\telse dateString = \"\\\\0\";\n-\n-\t\treturn str.append(this.getClass().getSimpleName()).append(\":[\").append(\n-\t\t\t\"id=<\").append(getId()).append(\">\").append(\n-\t\t\t\", taskId=<\").append(taskId).append(\">\").append(\n-\t\t\t\", destinationId=<\").append(destinationId).append(\">\").append(\n-\t\t\t\", errorMessage=<\").append(errorMessage== null ? \"\\\\0\" : BeansUtils.createEscaping(errorMessage.toString())).append(\">\").append(\n-\t\t\t\", standardMessage=<\").append(standardMessage== null ? \"\\\\0\" : BeansUtils.createEscaping(standardMessage.toString())).append(\">\").append(\n-\t\t\t\", returnCode=<\").append(returnCode).append(\">\").append(\n-\t\t\t\", timestamp=<\").append(dateString).append(\">\").append(\n-\t\t\t\", status=<\").append(status == null ? \"\\\\0\" : BeansUtils.createEscaping(status.toString())).append(\">\").append(\n-\t\t\t\", service=<\").append(service == null ? \"\\\\0\" : service.serializeToString()).append(\">\").append(\n-\t\t\t']').toString();\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"TaskResult:[id='\" + id + \"', taskId='\" + taskId + \"', destinationId='\" + destinationId + \"', errorMessage='\" + errorMessage + \"', \"\n-\t\t\t\t+ \"standardMessage='\" + standardMessage + \"', returnCode='\"\n-\t\t\t+ returnCode + \"', timestamp='\" + BeansUtils.getDateFormatter().format(timestamp) + \"', status='\" + status + \"', service='\" + service + \"']\";\n-\t}\n-\n-\tpublic int getTaskId() {\n-\t\treturn taskId;\n-\t}\n-\n-\tpublic void setTaskId(int taskId) {\n-\t\tthis.taskId = taskId;\n-\t}\n-\n-\tpublic int getDestinationId() {\n-\t\treturn destinationId;\n-\t}\n-\n-\tpublic void setDestinationId(int destinationId) {\n-\t\tthis.destinationId = destinationId;\n-\t}\n-\n-\tpublic String getErrorMessage() {\n-\t\treturn errorMessage;\n-\t}\n-\n-\tpublic void setErrorMessage(String errorMessage) {\n-\t\tthis.errorMessage = errorMessage;\n-\t}\n-\n-\tpublic String getStandardMessage() {\n-\t\treturn standardMessage;\n-\t}\n-\n-\tpublic void setStandardMessage(String standardMessage) {\n-\t\tthis.standardMessage = standardMessage;\n-\t}\n-\n-\tpublic int getReturnCode() {\n-\t\treturn returnCode;\n-\t}\n-\n-\tpublic void setReturnCode(int returnCode) {\n-\t\tthis.returnCode = returnCode;\n-\t}\n-\n-\tpublic Date getTimestamp() {\n-\t\treturn timestamp;\n-\t}\n-\n-\tpublic void setTimestamp(Date timestamp) {\n-\t\tthis.timestamp = timestamp;\n-\t}\n-\n-\tpublic TaskResultStatus getStatus() {\n-\t\treturn status;\n-\t}\n-\n-\tpublic void setStatus(TaskResultStatus status) {\n-\t\tthis.status = status;\n-\t}\n-\n-\tpublic void setId(int id) {\n-\t\tthis.id = id;\n-\t}\n-\n-\tpublic int getId() {\n-\t\treturn id;\n-\t}\n-\n-\tpublic Destination getDestination() {\n-\t\treturn destination;\n-\t}\n-\n-\tpublic void setDestination(Destination destination) {\n-\t\tthis.destination = destination;\n-\t}\n-\n-\tpublic Service getService() {\n-\t\treturn service;\n-\t}\n-\n-\tpublic void setService(Service service) {\n-\t\tthis.service = service;\n-\t}\n-\n-\tpublic String getBeanName(){\n-\t\treturn this.getClass().getSimpleName();\n-\t}\n-\n-}\n+ /**\n+  * \n+  */\n+\n+\n+ private static final long serialVersionUID = 5656828750714418582L;\n+\n+ public static enum TaskResultStatus {\n+  DONE, ERROR, FATAL_ERROR, DENIED, WARN\n+ }\n+\n+\n+ private int id;\n+ private int taskId;\n+ private int destinationId;\n+ private String errorMessage;\n+ private String standardMessage;\n+ private int returnCode;\n+ private Date timestamp;\n+ private TaskResultStatus status;\n+ private Destination destination;\n+ private Service service;\n+\n+ @Override\n+ public int hashCode() {\n+  final int prime = 31;\n+  int result = 1;\n+  result = prime * result + destinationId;\n+  result = prime * result + ((errorMessage == null) ? 0 : errorMessage.hashCode());\n+  result = prime * result + id;\n+  result = prime * result + returnCode;\n+  result = prime * result + ((standardMessage == null) ? 0 : standardMessage.hashCode());\n+  result = prime * result + ((status == null) ? 0 : status.hashCode());\n+  result = prime * result + taskId;\n+  result = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());\n+  result = prime * result + ((service == null) ? 0 : service.hashCode());\n+  return result;\n+ }\n+\n+ @Override\n+ public boolean equals(Object obj) {\n+  if (this == obj)\n+   return true;\n+  if (obj == null)\n+   return false;\n+  if (getClass() != obj.getClass())\n+   return false;\n+  TaskResult other = (TaskResult) obj;\n+  if (destinationId != other.destinationId)\n+   return false;\n+  if (errorMessage == null) {\n+   if (other.errorMessage != null)\n+    return false;\n+  } else if (!errorMessage.equals(other.errorMessage))\n+   return false;\n+  if (id != other.id)\n+   return false;\n+  if (returnCode != other.returnCode)\n+   return false;\n+  if (standardMessage == null) {\n+   if (other.standardMessage != null)\n+    return false;\n+  } else if (!standardMessage.equals(other.standardMessage))\n+   return false;\n+  if (status != other.status)\n+   return false;\n+  if (taskId != other.taskId)\n+   return false;\n+  if (!Objects.equals(service, other.service))\n+   return false;\n+  return true;\n+ }\n+\n+ @Override\n+ public String serializeToString() {\n+  StringBuilder str = new StringBuilder();\n+  String dateString;\n+  if (timestamp != null) dateString = BeansUtils.getDateFormatter().format(timestamp);\n+  else dateString = \"\\\\0\";\n+  return str.append(this.getClass().getSimpleName()).append(\":[\").append(\"id=<\").append(getId()).append(\">\").append(\", taskId=<\").append(taskId).append(\">\").append(\", destinationId=<\").append(destinationId).append(\">\").append(\", errorMessage=<\").append(errorMessage == null ? \"\\\\0\" : BeansUtils.createEscaping(errorMessage.toString())).append(\">\").append(\", standardMessage=<\").append(standardMessage == null ? \"\\\\0\" : BeansUtils.createEscaping(standardMessage.toString())).append(\">\").append(\", returnCode=<\").append(returnCode).append(\">\").append(\", timestamp=<\").append(dateString).append(\">\").append(\", status=<\").append(status == null ? \"\\\\0\" : BeansUtils.createEscaping(status.toString())).append(\">\").append(\", service=<\").append(service == null ? \"\\\\0\" : service.serializeToString()).append(\">\").append(']').toString();\n+ }\n+\n+ @Override\n+ public String toString() {\n+  return \"TaskResult:[id='\" + id + \"', taskId='\" + taskId + \"', destinationId='\" + destinationId + \"', errorMessage='\" + errorMessage + \"', \" + \"standardMessage='\" + standardMessage + \"', returnCode='\" + returnCode + \"', timestamp='\" + BeansUtils.getDateFormatter().format(timestamp) + \"', status='\" + status + \"', service='\" + service + \"']\";\n+ }\n+\n+ public int getTaskId() {\n+  return taskId;\n+ }\n+\n+ public void setTaskId(int taskId) {\n+  this.taskId = taskId;\n+ }\n+\n+ public int getDestinationId() {\n+  return destinationId;\n+ }\n+\n+ public void setDestinationId(int destinationId) {\n+  this.destinationId = destinationId;\n+ }\n+\n+ public String getErrorMessage() {\n+  return errorMessage;\n+ }\n+\n+ public void setErrorMessage(String errorMessage) {\n+  this.errorMessage = errorMessage;\n+ }\n+\n+ public String getStandardMessage() {\n+  return standardMessage;\n+ }\n+\n+ public void setStandardMessage(String standardMessage) {\n+  this.standardMessage = standardMessage;\n+ }\n+\n+ public int getReturnCode() {\n+  return returnCode;\n+ }\n+\n+ public void setReturnCode(int returnCode) {\n+  this.returnCode = returnCode;\n+ }\n+\n+ public Date getTimestamp() {\n+  return timestamp;\n+ }\n+\n+ public void setTimestamp(Date timestamp) {\n+  this.timestamp = timestamp;\n+ }\n+\n+ public TaskResultStatus getStatus() {\n+  return status;\n+ }\n+\n+ public void setStatus(TaskResultStatus status) {\n+  this.status = status;\n+ }\n+\n+ public void setId(int id) {\n+  this.id = id;\n+ }\n+\n+ public int getId() {\n+  return id;\n+ }\n+\n+ public Destination getDestination() {\n+  return destination;\n+ }\n+\n+ public void setDestination(Destination destination) {\n+  this.destination = destination;\n+ }\n+\n+ public Service getService() {\n+  return service;\n+ }\n+\n+ public void setService(Service service) {\n+  this.service = service;\n+ }\n+\n+ public String getBeanName() {\n+  return this.getClass().getSimpleName();\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 186
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
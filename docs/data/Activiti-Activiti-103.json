{
    "project_name": "Activiti-Activiti",
    "error_id": "103",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.converter.child;\n\nimport javax.xml.stream.XMLStreamReader;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/103/FormPropertyParser.java\nindex 9d99aa68cf8..50ae9dd04e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/103/FormPropertyParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/103/FormPropertyParser.java\nindex 9d99aa68cf8..7b019785f17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/103/FormPropertyParser.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n@@ -42,35 +43,35 @@ public class FormPropertyParser extends BaseChildElementParser {\n         }\n         FormProperty property = new FormProperty();\n         BpmnXMLUtil.addXMLLocation(property,\n-                                   xtr);\n+                xtr);\n         property.setId(xtr.getAttributeValue(null,\n-                                             ATTRIBUTE_FORM_ID));\n+                ATTRIBUTE_FORM_ID));\n         property.setName(xtr.getAttributeValue(null,\n-                                               ATTRIBUTE_FORM_NAME));\n+                ATTRIBUTE_FORM_NAME));\n         property.setType(xtr.getAttributeValue(null,\n-                                               ATTRIBUTE_FORM_TYPE));\n+                ATTRIBUTE_FORM_TYPE));\n         property.setVariable(xtr.getAttributeValue(null,\n-                                                   ATTRIBUTE_FORM_VARIABLE));\n+                ATTRIBUTE_FORM_VARIABLE));\n         property.setExpression(xtr.getAttributeValue(null,\n-                                                     ATTRIBUTE_FORM_EXPRESSION));\n+                ATTRIBUTE_FORM_EXPRESSION));\n         property.setDefaultExpression(xtr.getAttributeValue(null,\n-                                                            ATTRIBUTE_FORM_DEFAULT));\n+                ATTRIBUTE_FORM_DEFAULT));\n         property.setDatePattern(xtr.getAttributeValue(null,\n-                                                      ATTRIBUTE_FORM_DATEPATTERN));\n+                ATTRIBUTE_FORM_DATEPATTERN));\n         if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,\n-                                                         ATTRIBUTE_FORM_REQUIRED))) {\n+                ATTRIBUTE_FORM_REQUIRED))) {\n             property.setRequired(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                       ATTRIBUTE_FORM_REQUIRED)));\n+                    ATTRIBUTE_FORM_REQUIRED)));\n         }\n         if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,\n-                                                         ATTRIBUTE_FORM_READABLE))) {\n+                ATTRIBUTE_FORM_READABLE))) {\n             property.setReadable(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                       ATTRIBUTE_FORM_READABLE)));\n+                    ATTRIBUTE_FORM_READABLE)));\n         }\n         if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,\n-                                                         ATTRIBUTE_FORM_WRITABLE))) {\n+                ATTRIBUTE_FORM_WRITABLE))) {\n             property.setWriteable(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                        ATTRIBUTE_FORM_WRITABLE)));\n+                    ATTRIBUTE_FORM_WRITABLE)));\n         }\n \n         boolean readyWithFormProperty = false;\n@@ -80,11 +81,11 @@ public class FormPropertyParser extends BaseChildElementParser {\n                 if (xtr.isStartElement() && ELEMENT_VALUE.equalsIgnoreCase(xtr.getLocalName())) {\n                     FormValue value = new FormValue();\n                     BpmnXMLUtil.addXMLLocation(value,\n-                                               xtr);\n+                            xtr);\n                     value.setId(xtr.getAttributeValue(null,\n-                                                      ATTRIBUTE_ID));\n+                            ATTRIBUTE_ID));\n                     value.setName(xtr.getAttributeValue(null,\n-                                                        ATTRIBUTE_NAME));\n+                            ATTRIBUTE_NAME));\n                     property.getFormValues().add(value);\n                 } else if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n                     readyWithFormProperty = true;\n@@ -92,7 +93,7 @@ public class FormPropertyParser extends BaseChildElementParser {\n             }\n         } catch (Exception e) {\n             LOGGER.warn(\"Error parsing form properties child elements\",\n-                        e);\n+                    e);\n         }\n \n         if (parentElement instanceof UserTask) {\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/103/FormPropertyParser.java\nindex 9d99aa68cf8..fee1dbbe4be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/103/FormPropertyParser.java\n@@ -13,7 +13,6 @@\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n-\n import org.activiti.bpmn.converter.util.BpmnXMLUtil;\n import org.activiti.bpmn.model.BaseElement;\n import org.activiti.bpmn.model.BpmnModel;\n@@ -23,82 +22,62 @@ import org.activiti.bpmn.model.StartEvent;\n import org.activiti.bpmn.model.UserTask;\n import org.apache.commons.lang3.StringUtils;\n \n-public class FormPropertyParser extends BaseChildElementParser {\n-\n-    public String getElementName() {\n-        return ELEMENT_FORMPROPERTY;\n-    }\n \n-    public boolean accepts(BaseElement element) {\n-        return ((element instanceof UserTask) || (element instanceof StartEvent));\n-    }\n+public class FormPropertyParser extends BaseChildElementParser {\n \n-    public void parseChildElement(XMLStreamReader xtr,\n-                                  BaseElement parentElement,\n-                                  BpmnModel model) throws Exception {\n+  public String getElementName() {\n+    return ELEMENT_FORMPROPERTY;\n+  }\n \n-        if (!accepts(parentElement)) {\n-            return;\n-        }\n-        FormProperty property = new FormProperty();\n-        BpmnXMLUtil.addXMLLocation(property,\n-                                   xtr);\n-        property.setId(xtr.getAttributeValue(null,\n-                                             ATTRIBUTE_FORM_ID));\n-        property.setName(xtr.getAttributeValue(null,\n-                                               ATTRIBUTE_FORM_NAME));\n-        property.setType(xtr.getAttributeValue(null,\n-                                               ATTRIBUTE_FORM_TYPE));\n-        property.setVariable(xtr.getAttributeValue(null,\n-                                                   ATTRIBUTE_FORM_VARIABLE));\n-        property.setExpression(xtr.getAttributeValue(null,\n-                                                     ATTRIBUTE_FORM_EXPRESSION));\n-        property.setDefaultExpression(xtr.getAttributeValue(null,\n-                                                            ATTRIBUTE_FORM_DEFAULT));\n-        property.setDatePattern(xtr.getAttributeValue(null,\n-                                                      ATTRIBUTE_FORM_DATEPATTERN));\n-        if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,\n-                                                         ATTRIBUTE_FORM_REQUIRED))) {\n-            property.setRequired(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                       ATTRIBUTE_FORM_REQUIRED)));\n-        }\n-        if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,\n-                                                         ATTRIBUTE_FORM_READABLE))) {\n-            property.setReadable(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                       ATTRIBUTE_FORM_READABLE)));\n-        }\n-        if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,\n-                                                         ATTRIBUTE_FORM_WRITABLE))) {\n-            property.setWriteable(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                        ATTRIBUTE_FORM_WRITABLE)));\n-        }\n+  public boolean accepts(BaseElement element) {\n+    return ((element instanceof UserTask) || (element instanceof StartEvent));\n+  }\n \n-        boolean readyWithFormProperty = false;\n-        try {\n-            while (!readyWithFormProperty && xtr.hasNext()) {\n-                xtr.next();\n-                if (xtr.isStartElement() && ELEMENT_VALUE.equalsIgnoreCase(xtr.getLocalName())) {\n-                    FormValue value = new FormValue();\n-                    BpmnXMLUtil.addXMLLocation(value,\n-                                               xtr);\n-                    value.setId(xtr.getAttributeValue(null,\n-                                                      ATTRIBUTE_ID));\n-                    value.setName(xtr.getAttributeValue(null,\n-                                                        ATTRIBUTE_NAME));\n-                    property.getFormValues().add(value);\n-                } else if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n-                    readyWithFormProperty = true;\n-                }\n-            }\n-        } catch (Exception e) {\n-            LOGGER.warn(\"Error parsing form properties child elements\",\n-                        e);\n-        }\n+  public void parseChildElement(XMLStreamReader xtr, BaseElement parentElement, BpmnModel model) throws Exception {\n+    if (!accepts(parentElement)) {\n+      return;\n+    }\n \n-        if (parentElement instanceof UserTask) {\n-            ((UserTask) parentElement).getFormProperties().add(property);\n-        } else {\n-            ((StartEvent) parentElement).getFormProperties().add(property);\n+    FormProperty property = new FormProperty();\n+    BpmnXMLUtil.addXMLLocation(property, xtr);\n+    property.setId(xtr.getAttributeValue(null, ATTRIBUTE_FORM_ID));\n+    property.setName(xtr.getAttributeValue(null, ATTRIBUTE_FORM_NAME));\n+    property.setType(xtr.getAttributeValue(null, ATTRIBUTE_FORM_TYPE));\n+    property.setVariable(xtr.getAttributeValue(null, ATTRIBUTE_FORM_VARIABLE));\n+    property.setExpression(xtr.getAttributeValue(null, ATTRIBUTE_FORM_EXPRESSION));\n+    property.setDefaultExpression(xtr.getAttributeValue(null, ATTRIBUTE_FORM_DEFAULT));\n+    property.setDatePattern(xtr.getAttributeValue(null, ATTRIBUTE_FORM_DATEPATTERN));\n+    if (StringUtils.isNotEmpty(xtr.getAttributeValue(null, ATTRIBUTE_FORM_REQUIRED))) {\n+      property.setRequired(Boolean.valueOf(xtr.getAttributeValue(null, ATTRIBUTE_FORM_REQUIRED)));\n+    }\n+    if (StringUtils.isNotEmpty(xtr.getAttributeValue(null, ATTRIBUTE_FORM_READABLE))) {\n+      property.setReadable(Boolean.valueOf(xtr.getAttributeValue(null, ATTRIBUTE_FORM_READABLE)));\n+    }\n+    if (StringUtils.isNotEmpty(xtr.getAttributeValue(null, ATTRIBUTE_FORM_WRITABLE))) {\n+      property.setWriteable(Boolean.valueOf(xtr.getAttributeValue(null, ATTRIBUTE_FORM_WRITABLE)));\n+    }\n+    boolean readyWithFormProperty = false;\n+    try {\n+      while (!readyWithFormProperty && xtr.hasNext()) {\n+        xtr.next();\n+        if (xtr.isStartElement() && ELEMENT_VALUE.equalsIgnoreCase(xtr.getLocalName())) {\n+          FormValue value = new FormValue();\n+          BpmnXMLUtil.addXMLLocation(value, xtr);\n+          value.setId(xtr.getAttributeValue(null, ATTRIBUTE_ID));\n+          value.setName(xtr.getAttributeValue(null, ATTRIBUTE_NAME));\n+          property.getFormValues().add(value);\n+        } else if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n+          readyWithFormProperty = true;\n         }\n+      }\n+    } catch (Exception e) {\n+      LOGGER.warn(\"Error parsing form properties child elements\",\n+                  e);\n+    }\n+    if (parentElement instanceof UserTask) {\n+      ((UserTask) parentElement).getFormProperties().add(property);\n+    } else {\n+      ((StartEvent) parentElement).getFormProperties().add(property);\n     }\n-}\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 109
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/103/FormPropertyParser.java\nindex 9d99aa68cf8..50ae9dd04e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/103/FormPropertyParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/103/FormPropertyParser.java\nindex 9d99aa68cf8..50ae9dd04e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/103/FormPropertyParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/103/FormPropertyParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
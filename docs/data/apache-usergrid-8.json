{
    "project_name": "apache-usergrid",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "53",
                "column": "36",
                "severity": "warning",
                "message": "'+' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        job.setTimeout( customRetry );\n\n        int runCount = delayCount +1;\n\n        job.setLatch( runCount );\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/8/SchedulerRuntime4IT.java\nindex 7b97db4399c..d94094b0569 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/8/SchedulerRuntime4IT.java\n@@ -50,7 +50,7 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n \n         job.setTimeout( customRetry );\n \n-        int runCount = delayCount +1;\n+        int runCount = delayCount + 1;\n \n         job.setLatch( runCount );\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/8/SchedulerRuntime4IT.java\nindex 7b97db4399c..a46d3907b2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/8/SchedulerRuntime4IT.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.batch.job;\n \n \n@@ -40,40 +41,40 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n      */\n     @Test\n     public void delayExecution() throws Exception {\n-        long sleepTime = Long.parseLong( props.getProperty( TIMEOUT_PROP ) );\n+        long sleepTime = Long.parseLong(props.getProperty(TIMEOUT_PROP));\n \n         int delayCount = 2;\n \n         long customRetry = sleepTime * 2;\n \n-        DelayExecution job = cassandraResource.getBean( \"delayExecution\", DelayExecution.class );\n+        DelayExecution job = cassandraResource.getBean(\"delayExecution\", DelayExecution.class);\n \n-        job.setTimeout( customRetry );\n+        job.setTimeout(customRetry);\n \n-        int runCount = delayCount +1;\n+        int runCount = delayCount + 1;\n \n-        job.setLatch( runCount );\n+        job.setLatch(runCount);\n \n-        getJobListener().setExpected( runCount );\n+        getJobListener().setExpected(runCount);\n \n-        JobData returned = scheduler.createJob( \"delayExecution\", System.currentTimeMillis(), new JobData() );\n+        JobData returned = scheduler.createJob(\"delayExecution\", System.currentTimeMillis(), new JobData());\n \n         scheduler.refreshIndex();\n \n         // sleep until the job should have failed. We sleep 1 extra cycle just to\n         // make sure we're not racing the test\n-        boolean waited = getJobListener().blockTilDone( 50000L + sleepTime * 2 );\n+        boolean waited = getJobListener().blockTilDone(50000L + sleepTime * 2);\n \n-        assertTrue( \"Job ran to complete\", waited );\n+        assertTrue(\"Job ran to complete\", waited);\n \n         scheduler.refreshIndex();\n \n-        JobStat stat = scheduler.getStatsForJob( returned.getJobName(), returned.getUuid() );\n+        JobStat stat = scheduler.getStatsForJob(returned.getJobName(), returned.getUuid());\n \n         // we should have only marked this as run once since we delayed furthur execution\n         // we should have only marked this as run once\n-        assertEquals( 1, stat.getTotalAttempts() );\n-        assertEquals( runCount, stat.getRunCount() );\n-        assertEquals( delayCount, stat.getDelayCount() );\n+        assertEquals(1, stat.getTotalAttempts());\n+        assertEquals(runCount, stat.getRunCount());\n+        assertEquals(delayCount, stat.getDelayCount());\n     }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/8/SchedulerRuntime4IT.java\nindex 7b97db4399c..2ff95eb9778 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/8/SchedulerRuntime4IT.java\n@@ -50,7 +50,7 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n \n         job.setTimeout( customRetry );\n \n-        int runCount = delayCount +1;\n+        int runCount = delayCount + 1;\n \n         job.setLatch( runCount );\n \n@@ -76,4 +76,4 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n         assertEquals( runCount, stat.getRunCount() );\n         assertEquals( delayCount, stat.getDelayCount() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/8/SchedulerRuntime4IT.java\nindex 7b97db4399c..c01eab59771 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/8/SchedulerRuntime4IT.java\n@@ -20,7 +20,6 @@ package org.apache.usergrid.batch.job;\n import org.apache.usergrid.cassandra.Concurrent;\n import org.apache.usergrid.persistence.entities.JobData;\n import org.apache.usergrid.persistence.entities.JobStat;\n-\n import org.junit.Ignore;\n import org.junit.Test;\n \n@@ -31,6 +30,8 @@ import static org.junit.Assert.assertTrue;\n /**\n  * Class to test job runtimes\n  */\n+\n+\n @Concurrent\n @Ignore(\"These tests no longer work with shared spring context. Need to re-evaluate\")\n public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n@@ -38,34 +39,25 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n      * Test the scheduler ramps up correctly when there are more jobs to be read after a pause when the job specifies\n      * the retry time\n      */\n+\n     @Test\n     public void delayExecution() throws Exception {\n         long sleepTime = Long.parseLong( props.getProperty( TIMEOUT_PROP ) );\n-\n         int delayCount = 2;\n-\n         long customRetry = sleepTime * 2;\n-\n         DelayExecution job = cassandraResource.getBean( \"delayExecution\", DelayExecution.class );\n-\n         job.setTimeout( customRetry );\n-\n-        int runCount = delayCount +1;\n-\n+        int runCount = delayCount + 1;\n         job.setLatch( runCount );\n-\n         getJobListener().setExpected( runCount );\n \n         JobData returned = scheduler.createJob( \"delayExecution\", System.currentTimeMillis(), new JobData() );\n-\n         scheduler.refreshIndex();\n \n         // sleep until the job should have failed. We sleep 1 extra cycle just to\n         // make sure we're not racing the test\n         boolean waited = getJobListener().blockTilDone( 50000L + sleepTime * 2 );\n-\n         assertTrue( \"Job ran to complete\", waited );\n-\n         scheduler.refreshIndex();\n \n         JobStat stat = scheduler.getStatsForJob( returned.getJobName(), returned.getUuid() );\n@@ -76,4 +68,4 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n         assertEquals( runCount, stat.getRunCount() );\n         assertEquals( delayCount, stat.getDelayCount() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_random/8/SchedulerRuntime4IT.java\nindex 7b97db4399c..d94094b0569 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_random/8/SchedulerRuntime4IT.java\n@@ -50,7 +50,7 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n \n         job.setTimeout( customRetry );\n \n-        int runCount = delayCount +1;\n+        int runCount = delayCount + 1;\n \n         job.setLatch( runCount );\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/8/SchedulerRuntime4IT.java\nindex 7b97db4399c..d94094b0569 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/8/SchedulerRuntime4IT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/8/SchedulerRuntime4IT.java\n@@ -50,7 +50,7 @@ public class SchedulerRuntime4IT extends AbstractSchedulerRuntimeIT {\n \n         job.setTimeout( customRetry );\n \n-        int runCount = delayCount +1;\n+        int runCount = delayCount + 1;\n \n         job.setLatch( runCount );\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
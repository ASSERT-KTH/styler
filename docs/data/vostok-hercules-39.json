{
    "project_name": "vostok-hercules",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "13",
                "severity": "warning",
                "message": "'{' at column 13 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "        for (Map.Entry<String, String> tag : name.tags().entrySet()) {\n            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0)\n            {\n                continue;\n            }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler/39/KafkaMetricsUtil.java\nindex c68b5359185..47178c20e4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler/39/KafkaMetricsUtil.java\n@@ -23,8 +23,7 @@ class KafkaMetricsUtil {\n         tokens.add(\"kafka\");\n         tokens.add(name.group());\n         for (Map.Entry<String, String> tag : name.tags().entrySet()) {\n-            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0)\n-            {\n+            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0) {\n                 continue;\n             }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/intellij/39/KafkaMetricsUtil.java\nindex c68b5359185..74a4bec9f62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/intellij/39/KafkaMetricsUtil.java\n@@ -11,28 +11,27 @@ import java.util.Map;\n  * @author Grigory Ovchinnikov\n  */\n class KafkaMetricsUtil {\n-    /**\n-     * Build metric name in Graphite format from metric name in Apache Kafka format\n-     *\n-     * @param name is the metric name in Apache Kafka format\n-     * @return metric name in Graphite format\n-     */\n-    public static String toGraphiteMetricName(MetricName name) {\n-        List<String> tokens = new ArrayList<>();\n+  /**\n+   * Build metric name in Graphite format from metric name in Apache Kafka format\n+   *\n+   * @param name is the metric name in Apache Kafka format\n+   * @return metric name in Graphite format\n+   */\n+  public static String toGraphiteMetricName(MetricName name) {\n+    List<String> tokens = new ArrayList<>();\n \n-        tokens.add(\"kafka\");\n-        tokens.add(name.group());\n-        for (Map.Entry<String, String> tag : name.tags().entrySet()) {\n-            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0)\n-            {\n-                continue;\n-            }\n+    tokens.add(\"kafka\");\n+    tokens.add(name.group());\n+    for (Map.Entry<String, String> tag : name.tags().entrySet()) {\n+      if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0) {\n+        continue;\n+      }\n \n-            tokens.add(tag.getKey());\n-            tokens.add(tag.getValue());\n-        }\n-        tokens.add(name.name());\n-\n-        return MetricsUtil.toMetricPath(tokens);\n+      tokens.add(tag.getKey());\n+      tokens.add(tag.getValue());\n     }\n+    tokens.add(name.name());\n+\n+    return MetricsUtil.toMetricPath(tokens);\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/codebuff/39/KafkaMetricsUtil.java\nindex c68b5359185..35ec498e057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/codebuff/39/KafkaMetricsUtil.java\n@@ -2,7 +2,6 @@ package ru.kontur.vostok.hercules.kafka.util.metrics;\n \n import org.apache.kafka.common.MetricName;\n import ru.kontur.vostok.hercules.health.MetricsUtil;\n-\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n@@ -10,6 +9,8 @@ import java.util.Map;\n /**\n  * @author Grigory Ovchinnikov\n  */\n+\n+\n class KafkaMetricsUtil {\n     /**\n      * Build metric name in Graphite format from metric name in Apache Kafka format\n@@ -17,22 +18,24 @@ class KafkaMetricsUtil {\n      * @param name is the metric name in Apache Kafka format\n      * @return metric name in Graphite format\n      */\n+\n     public static String toGraphiteMetricName(MetricName name) {\n         List<String> tokens = new ArrayList<>();\n-\n         tokens.add(\"kafka\");\n         tokens.add(name.group());\n-        for (Map.Entry<String, String> tag : name.tags().entrySet()) {\n-            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0)\n-            {\n+        for (Map.Entry<String, String> tag : name.tags()\n+        .entrySet()) {\n+            if (tag.getKey()\n+            .length() <= 0 || tag.getValue()\n+            .length() <= 0) {\n                 continue;\n             }\n \n             tokens.add(tag.getKey());\n             tokens.add(tag.getValue());\n         }\n-        tokens.add(name.name());\n \n+        tokens.add(name.name());\n         return MetricsUtil.toMetricPath(tokens);\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_random/39/KafkaMetricsUtil.java\nindex c68b5359185..47178c20e4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_random/39/KafkaMetricsUtil.java\n@@ -23,8 +23,7 @@ class KafkaMetricsUtil {\n         tokens.add(\"kafka\");\n         tokens.add(name.group());\n         for (Map.Entry<String, String> tag : name.tags().entrySet()) {\n-            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0)\n-            {\n+            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0) {\n                 continue;\n             }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_three_grams/39/KafkaMetricsUtil.java\nindex c68b5359185..47178c20e4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/39/KafkaMetricsUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_three_grams/39/KafkaMetricsUtil.java\n@@ -23,8 +23,7 @@ class KafkaMetricsUtil {\n         tokens.add(\"kafka\");\n         tokens.add(name.group());\n         for (Map.Entry<String, String> tag : name.tags().entrySet()) {\n-            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0)\n-            {\n+            if (tag.getKey().length() <= 0 || tag.getValue().length() <= 0) {\n                 continue;\n             }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
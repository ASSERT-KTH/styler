{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3803",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3803/CodeGenerationStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3803/CodeGenerationStrategy.java\nindex 7ddf597530f..116189e3df3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3803/CodeGenerationStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3803/CodeGenerationStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.util.ArrayList;\n@@ -24,102 +25,100 @@ import java.util.List;\n \n public abstract class CodeGenerationStrategy<Configuration> implements CodeGeneratorOption\n {\n-    protected abstract Configuration createConfigurator( ClassLoader loader );\n+  protected abstract Configuration createConfigurator(ClassLoader loader);\n+\n+  protected abstract CodeGenerator createCodeGenerator(ClassLoader loader, Configuration configuration)\n+      throws CodeGenerationStrategyNotSupportedException;\n \n-    protected abstract CodeGenerator createCodeGenerator( ClassLoader loader, Configuration configuration )\n-            throws CodeGenerationStrategyNotSupportedException;\n+  static CodeGenerator codeGenerator(ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options)\n+      throws CodeGenerationNotSupportedException\n+  {\n+    return applyTo(new Choice(strategy), options).generateCode(loader, options);\n+  }\n \n-    static CodeGenerator codeGenerator( ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options )\n-            throws CodeGenerationNotSupportedException\n+  @Override\n+  public final void applyTo(Object target)\n+  {\n+    if (target instanceof Choice)\n     {\n-        return applyTo( new Choice( strategy ), options ).generateCode( loader, options );\n+      ((Choice) target).setStrategy(this);\n     }\n+  }\n \n-    @Override\n-    public final void applyTo( Object target )\n+  private CodeGenerator generateCode(ClassLoader loader, CodeGeneratorOption... options)\n+      throws CodeGenerationStrategyNotSupportedException\n+  {\n+    Configuration configurator = createConfigurator(loader);\n+    return createCodeGenerator(loader, applyTo(configurator, options));\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"CodeGenerationStrategy:\" + name();\n+  }\n+\n+  protected abstract String name();\n+\n+  private static class Choice implements ByteCodeVisitor.Configurable\n+  {\n+    private CodeGenerationStrategy<?> strategy;\n+    private List<ByteCodeVisitor> visitors;\n+\n+    private Choice(CodeGeneratorOption option)\n     {\n-        if ( target instanceof Choice )\n-        {\n-            ((Choice) target).setStrategy( this );\n-        }\n+      option.applyTo(this);\n     }\n \n-    private CodeGenerator generateCode( ClassLoader loader, CodeGeneratorOption... options )\n-            throws CodeGenerationStrategyNotSupportedException\n+    void setStrategy(CodeGenerationStrategy<?> strategy)\n     {\n-        Configuration configurator = createConfigurator( loader );\n-        return createCodeGenerator( loader, applyTo( configurator, options ) );\n+      this.strategy = strategy;\n     }\n \n     @Override\n-    public String toString()\n+    public void addByteCodeVisitor(ByteCodeVisitor visitor)\n     {\n-        return \"CodeGenerationStrategy:\" + name();\n+      if (visitors == null)\n+      {\n+        visitors = new ArrayList<>();\n+      }\n+      visitors.add(visitor);\n     }\n \n-    protected abstract String name();\n-\n-    private static class Choice implements ByteCodeVisitor.Configurable\n+    CodeGenerator generateCode(ClassLoader loader, CodeGeneratorOption[] options)\n+        throws CodeGenerationNotSupportedException\n     {\n-        private CodeGenerationStrategy<?> strategy;\n-        private List<ByteCodeVisitor> visitors;\n-\n-        private Choice( CodeGeneratorOption option )\n-        {\n-            option.applyTo( this );\n-        }\n-\n-        void setStrategy( CodeGenerationStrategy<?> strategy )\n-        {\n-            this.strategy = strategy;\n-        }\n-\n-        @Override\n-        public void addByteCodeVisitor( ByteCodeVisitor visitor )\n+      CodeGenerator generator = strategy.generateCode(loader, options);\n+      if (visitors != null)\n+      {\n+        if (visitors.size() == 1)\n         {\n-            if ( visitors == null )\n-            {\n-                visitors = new ArrayList<>();\n-            }\n-            visitors.add( visitor );\n-        }\n-\n-        CodeGenerator generateCode( ClassLoader loader, CodeGeneratorOption[] options )\n-                throws CodeGenerationNotSupportedException\n+          generator.setByteCodeVisitor(visitors.get(0));\n+        } else\n         {\n-            CodeGenerator generator = strategy.generateCode( loader, options );\n-            if ( visitors != null )\n-            {\n-                if ( visitors.size() == 1 )\n-                {\n-                    generator.setByteCodeVisitor( visitors.get( 0 ) );\n-                }\n-                else\n-                {\n-                    generator.setByteCodeVisitor( new ByteCodeVisitor.Multiplex(\n-                            visitors.toArray( new ByteCodeVisitor[visitors.size()] ) ) );\n-                }\n-            }\n-            return generator;\n+          generator.setByteCodeVisitor(new ByteCodeVisitor.Multiplex(\n+              visitors.toArray(new ByteCodeVisitor[visitors.size()])));\n         }\n+      }\n+      return generator;\n     }\n+  }\n \n-    private static <Target> Target applyTo( Target target, CodeGeneratorOption[] options )\n+  private static <Target> Target applyTo(Target target, CodeGeneratorOption[] options)\n+  {\n+    if (target instanceof Object[])\n     {\n-        if ( target instanceof Object[] )\n-        {\n-            for ( Object object : (Object[]) target )\n-            {\n-                applyTo( object, options );\n-            }\n-        }\n-        else\n-        {\n-            for ( CodeGeneratorOption option : options )\n-            {\n-                option.applyTo( target );\n-            }\n-        }\n-        return target;\n+      for (Object object : (Object[]) target)\n+      {\n+        applyTo(object, options);\n+      }\n+    } else\n+    {\n+      for (CodeGeneratorOption option : options)\n+      {\n+        option.applyTo(target);\n+      }\n     }\n+    return target;\n+  }\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 327).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3803/CodeGenerationStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3803/CodeGenerationStrategy.java\nindex 7ddf597530f..69a0d37ce5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3803/CodeGenerationStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3803/CodeGenerationStrategy.java\n@@ -26,12 +26,8 @@ public abstract class CodeGenerationStrategy<Configuration> implements CodeGener\n {\n     protected abstract Configuration createConfigurator( ClassLoader loader );\n \n-    protected abstract CodeGenerator createCodeGenerator( ClassLoader loader, Configuration configuration )\n-            throws CodeGenerationStrategyNotSupportedException;\n-\n-    static CodeGenerator codeGenerator( ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options )\n-            throws CodeGenerationNotSupportedException\n-    {\n+    protected abstract CodeGenerator createCodeGenerator( ClassLoader loader, Configuration configuration ) throws CodeGenerationStrategyNotSupportedException; static CodeGenerator codeGenerator( ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options ) throws CodeGenerationNotSupportedException\n+{\n         return applyTo( new Choice( strategy ), options ).generateCode( loader, options );\n     }\n \n@@ -44,9 +40,8 @@ public abstract class CodeGenerationStrategy<Configuration> implements CodeGener\n         }\n     }\n \n-    private CodeGenerator generateCode( ClassLoader loader, CodeGeneratorOption... options )\n-            throws CodeGenerationStrategyNotSupportedException\n-    {\n+    private CodeGenerator generateCode( ClassLoader loader, CodeGeneratorOption... options ) throws CodeGenerationStrategyNotSupportedException\n+{\n         Configuration configurator = createConfigurator( loader );\n         return createCodeGenerator( loader, applyTo( configurator, options ) );\n     }\n@@ -84,9 +79,8 @@ public abstract class CodeGenerationStrategy<Configuration> implements CodeGener\n             visitors.add( visitor );\n         }\n \n-        CodeGenerator generateCode( ClassLoader loader, CodeGeneratorOption[] options )\n-                throws CodeGenerationNotSupportedException\n-        {\n+        CodeGenerator generateCode( ClassLoader loader, CodeGeneratorOption[] options ) throws CodeGenerationNotSupportedException\n+{\n             CodeGenerator generator = strategy.generateCode( loader, options );\n             if ( visitors != null )\n             {\n@@ -96,9 +90,8 @@ public abstract class CodeGenerationStrategy<Configuration> implements CodeGener\n                 }\n                 else\n                 {\n-                    generator.setByteCodeVisitor( new ByteCodeVisitor.Multiplex(\n-                            visitors.toArray( new ByteCodeVisitor[visitors.size()] ) ) );\n-                }\n+                    generator.setByteCodeVisitor( new ByteCodeVisitor.Multiplex( visitors.toArray( new ByteCodeVisitor[visitors.size()] ) ) );\n+    }\n             }\n             return generator;\n         }\n@@ -122,4 +115,4 @@ public abstract class CodeGenerationStrategy<Configuration> implements CodeGener\n         }\n         return target;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
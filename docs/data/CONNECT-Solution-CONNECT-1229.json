{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1229",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientdiscovery.aspect;\n\nimport com.google.common.base.Optional;\nimport gov.hhs.fha.nhinc.event.TargetEventDescriptionBuilder;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1229/PRPAIN201305UV02AdapterEventDescBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\nindex 114de1ef8e9..2b35067f145 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.aspect;\n \n import com.google.common.base.Optional;\n@@ -32,57 +33,56 @@ import java.util.ArrayList;\n import org.hl7.v3.PRPAIN201306UV02;\n \n /**\n- *\n  * @author tjafri\n  */\n public class PRPAIN201305UV02AdapterEventDescBuilder extends TargetEventDescriptionBuilder {\n \n-    private static final PRPAIN201306UV02StatusExtractor STATUS_EXTRACTOR = new PRPAIN201306UV02StatusExtractor();\n+  private static final PRPAIN201306UV02StatusExtractor STATUS_EXTRACTOR = new PRPAIN201306UV02StatusExtractor();\n \n-    private Optional<PRPAIN201306UV02> body = Optional.absent();\n+  private Optional<PRPAIN201306UV02> body = Optional.absent();\n \n-    @Override\n-    public void buildErrorCodes() {\n-        // Error Codes for Adapter MPI logging will go here\n-    }\n+  @Override\n+  public void buildErrorCodes() {\n+    // Error Codes for Adapter MPI logging will go here\n+  }\n \n-    @Override\n-    public void buildPayloadSizes() {\n-        // Payload Sizes for Adapter MPI logging will go here\n-    }\n+  @Override\n+  public void buildPayloadSizes() {\n+    // Payload Sizes for Adapter MPI logging will go here\n+  }\n \n-    @Override\n-    public void buildPayloadTypes() {\n-        // Payload Types for Adapter MPI logging will go here\n-    }\n+  @Override\n+  public void buildPayloadTypes() {\n+    // Payload Types for Adapter MPI logging will go here\n+  }\n \n-    @Override\n-    public void buildStatuses() {\n-        if (!body.isPresent()) {\n-            return;\n-        }\n-\n-        setStatuses(new ArrayList<>(STATUS_EXTRACTOR.apply(body.get())));\n+  @Override\n+  public void buildStatuses() {\n+    if (!body.isPresent()) {\n+      return;\n     }\n \n-    @Override\n-    public void buildTimeStamp() {\n-        // Timestamp for Adapter MPI logging will go here\n-    }\n+    setStatuses(new ArrayList<>(STATUS_EXTRACTOR.apply(body.get())));\n+  }\n \n-    @Override\n-    public void setArguments(Object... arguments) {\n-        extractAssertion(arguments);\n-        extractTarget(arguments);\n-    }\n+  @Override\n+  public void buildTimeStamp() {\n+    // Timestamp for Adapter MPI logging will go here\n+  }\n+\n+  @Override\n+  public void setArguments(Object... arguments) {\n+    extractAssertion(arguments);\n+    extractTarget(arguments);\n+  }\n \n-    @Override\n-    public void setReturnValue(Object returnValue) {\n-        if (returnValue == null || !(returnValue instanceof PRPAIN201306UV02)) {\n-            body = Optional.absent();\n-        } else {\n-            body = Optional.of((PRPAIN201306UV02) returnValue);\n-        }\n+  @Override\n+  public void setReturnValue(Object returnValue) {\n+    if (returnValue == null || !(returnValue instanceof PRPAIN201306UV02)) {\n+      body = Optional.absent();\n+    } else {\n+      body = Optional.of((PRPAIN201306UV02) returnValue);\n     }\n+  }\n \n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1229/PRPAIN201305UV02AdapterEventDescBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\nindex 114de1ef8e9..9a73f6246a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.aspect;\n \n import com.google.common.base.Optional;\n@@ -85,4 +86,4 @@ public class PRPAIN201305UV02AdapterEventDescBuilder extends TargetEventDescript\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "column": "31",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "column": "31",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "91",
                    "column": "13",
                    "severity": "error",
                    "message": "'!' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1229/PRPAIN201305UV02AdapterEventDescBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\nindex 114de1ef8e9..99e651f6b5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1229/PRPAIN201305UV02AdapterEventDescBuilder.java\n@@ -35,54 +35,68 @@ import org.hl7.v3.PRPAIN201306UV02;\n  *\n  * @author tjafri\n  */\n-public class PRPAIN201305UV02AdapterEventDescBuilder extends TargetEventDescriptionBuilder {\n \n-    private static final PRPAIN201306UV02StatusExtractor STATUS_EXTRACTOR = new PRPAIN201306UV02StatusExtractor();\n \n+public class PRPAIN201305UV02AdapterEventDescBuilder extends\n+    TargetEventDescriptionBuilder {\n+\n+    private static final PRPAIN201306UV02StatusExtractor STATUS_EXTRACTOR = new PRPAIN201306UV02StatusExtractor();\n     private Optional<PRPAIN201306UV02> body = Optional.absent();\n \n+\n     @Override\n     public void buildErrorCodes() {\n         // Error Codes for Adapter MPI logging will go here\n     }\n \n+\n     @Override\n     public void buildPayloadSizes() {\n         // Payload Sizes for Adapter MPI logging will go here\n     }\n \n+\n     @Override\n     public void buildPayloadTypes() {\n         // Payload Types for Adapter MPI logging will go here\n     }\n \n+\n     @Override\n     public void buildStatuses() {\n-        if (!body.isPresent()) {\n+        if (!\n+                body.isPresent()) {\n             return;\n         }\n-\n         setStatuses(new ArrayList<>(STATUS_EXTRACTOR.apply(body.get())));\n     }\n \n+\n     @Override\n     public void buildTimeStamp() {\n         // Timestamp for Adapter MPI logging will go here\n     }\n \n+\n     @Override\n     public void setArguments(Object... arguments) {\n         extractAssertion(arguments);\n         extractTarget(arguments);\n     }\n \n+\n     @Override\n     public void setReturnValue(Object returnValue) {\n-        if (returnValue == null || !(returnValue instanceof PRPAIN201306UV02)) {\n+        if(returnValue == null||\n+           ! (returnValue instanceof PRPAIN201306UV02)) {\n             body = Optional.absent();\n-        } else {\n-            body = Optional.of((PRPAIN201306UV02) returnValue);\n+        }\n+\n+\n+else {\n+            body = Optional.of((PRPAIN201306UV02)\n+                                   returnValue);\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
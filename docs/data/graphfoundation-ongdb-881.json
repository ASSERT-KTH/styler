{
    "project_name": "graphfoundation-ongdb",
    "error_id": "881",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/881/PrimitiveLongCollections.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/881/PrimitiveLongCollections.java\nindex 75b2c599e79..9bc1b03b074 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/881/PrimitiveLongCollections.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/881/PrimitiveLongCollections.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive;\n \n import java.util.ArrayList;\n@@ -45,588 +46,587 @@ import static org.neo4j.collection.primitive.PrimitiveCommons.closeSafely;\n  */\n public class PrimitiveLongCollections\n {\n-    public static final long[] EMPTY_LONG_ARRAY = new long[0];\n-\n-    private static final PrimitiveLongIterator EMPTY = new PrimitiveLongBaseIterator()\n-    {\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            return false;\n-        }\n-    };\n-\n-    private PrimitiveLongCollections()\n-    {\n-        throw new AssertionError( \"no instance\" );\n-    }\n-\n-    public static PrimitiveLongIterator iterator( final long... items )\n-    {\n-        return new PrimitiveLongResourceCollections.PrimitiveLongBaseResourceIterator( Resource.EMPTY )\n-        {\n-            private int index = -1;\n-\n-            @Override\n-            protected boolean fetchNext()\n-            {\n-                return ++index < items.length && next( items[index] );\n-            }\n-        };\n-    }\n-\n-    // Concating\n-    public static PrimitiveLongIterator concat( PrimitiveLongIterator... primitiveLongIterators )\n-    {\n-        return concat( Arrays.asList( primitiveLongIterators ) );\n-    }\n-\n-    public static PrimitiveLongIterator concat( Iterable<PrimitiveLongIterator> primitiveLongIterators )\n-    {\n-        return new PrimitiveLongConcatingIterator( primitiveLongIterators.iterator() );\n-    }\n+  public static final long[] EMPTY_LONG_ARRAY = new long[0];\n \n-    public static PrimitiveLongIterator filter( PrimitiveLongIterator source, final LongPredicate filter )\n+  private static final PrimitiveLongIterator EMPTY = new PrimitiveLongBaseIterator()\n+  {\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        return new PrimitiveLongFilteringIterator( source )\n-        {\n-            @Override\n-            public boolean test( long item )\n-            {\n-                return filter.test( item );\n-            }\n-        };\n-    }\n-\n-    public static PrimitiveLongResourceIterator filter( PrimitiveLongResourceIterator source, final LongPredicate filter )\n-    {\n-        return new PrimitiveLongResourceFilteringIterator( source )\n-        {\n-            @Override\n-            public boolean test( long item )\n-            {\n-                return filter.test( item );\n-            }\n-        };\n+      return false;\n     }\n+  };\n \n-    // Range\n-    public static PrimitiveLongIterator range( long start, long end )\n-    {\n-        return new PrimitiveLongRangeIterator( start, end );\n-    }\n-\n-    public static long single( PrimitiveLongIterator iterator, long defaultItem )\n-    {\n-        try\n-        {\n-            if ( !iterator.hasNext() )\n-            {\n-                closeSafely( iterator );\n-                return defaultItem;\n-            }\n-            long item = iterator.next();\n-            if ( iterator.hasNext() )\n-            {\n-                throw new NoSuchElementException( \"More than one item in \" + iterator + \", first:\" + item +\n-                        \", second:\" + iterator.next() );\n-            }\n-            closeSafely( iterator );\n-            return item;\n-        }\n-        catch ( NoSuchElementException exception )\n-        {\n-            closeSafely( iterator, exception );\n-            throw exception;\n-        }\n-    }\n-\n-    /**\n-     * Returns the index of the given item in the iterator(zero-based). If no items in {@code iterator}\n-     * equals {@code item} {@code -1} is returned.\n-     *\n-     * @param item the item to look for.\n-     * @param iterator of items.\n-     * @return index of found item or -1 if not found.\n-     */\n-    public static int indexOf( PrimitiveLongIterator iterator, long item )\n-    {\n-        for ( int i = 0; iterator.hasNext(); i++ )\n-        {\n-            if ( item == iterator.next() )\n-            {\n-                return i;\n-            }\n-        }\n-        return -1;\n-    }\n+  private PrimitiveLongCollections()\n+  {\n+    throw new AssertionError(\"no instance\");\n+  }\n \n-    public static PrimitiveLongSet asSet( Collection<Long> collection )\n+  public static PrimitiveLongIterator iterator(final long... items)\n+  {\n+    return new PrimitiveLongResourceCollections.PrimitiveLongBaseResourceIterator(Resource.EMPTY)\n     {\n-        PrimitiveLongSet set = Primitive.longSet( collection.size() );\n-        for ( Long next : collection )\n-        {\n-            set.add( next );\n-        }\n-        return set;\n-    }\n+      private int index = -1;\n \n-    public static PrimitiveLongSet asSet( PrimitiveLongIterator iterator )\n-    {\n-        PrimitiveLongSet set = Primitive.longSet();\n-        while ( iterator.hasNext() )\n-        {\n-            set.add( iterator.next() );\n-        }\n-        return set;\n-    }\n+      @Override\n+      protected boolean fetchNext()\n+      {\n+        return ++index < items.length && next(items[index]);\n+      }\n+    };\n+  }\n+\n+  // Concating\n+  public static PrimitiveLongIterator concat(PrimitiveLongIterator... primitiveLongIterators)\n+  {\n+    return concat(Arrays.asList(primitiveLongIterators));\n+  }\n+\n+  public static PrimitiveLongIterator concat(Iterable<PrimitiveLongIterator> primitiveLongIterators)\n+  {\n+    return new PrimitiveLongConcatingIterator(primitiveLongIterators.iterator());\n+  }\n+\n+  public static PrimitiveLongIterator filter(PrimitiveLongIterator source, final LongPredicate filter)\n+  {\n+    return new PrimitiveLongFilteringIterator(source)\n+    {\n+      @Override\n+      public boolean test(long item)\n+      {\n+        return filter.test(item);\n+      }\n+    };\n+  }\n \n-    public static PrimitiveLongSet asSet( PrimitiveLongSet set )\n+  public static PrimitiveLongResourceIterator filter(PrimitiveLongResourceIterator source, final LongPredicate filter)\n+  {\n+    return new PrimitiveLongResourceFilteringIterator(source)\n     {\n-        PrimitiveLongSet result = Primitive.longSet( set.size() );\n-        PrimitiveLongIterator iterator = set.iterator();\n-        while ( iterator.hasNext() )\n-        {\n-            result.add( iterator.next() );\n-        }\n-        return result;\n+      @Override\n+      public boolean test(long item)\n+      {\n+        return filter.test(item);\n+      }\n+    };\n+  }\n+\n+  // Range\n+  public static PrimitiveLongIterator range(long start, long end)\n+  {\n+    return new PrimitiveLongRangeIterator(start, end);\n+  }\n+\n+  public static long single(PrimitiveLongIterator iterator, long defaultItem)\n+  {\n+    try\n+    {\n+      if (!iterator.hasNext())\n+      {\n+        closeSafely(iterator);\n+        return defaultItem;\n+      }\n+      long item = iterator.next();\n+      if (iterator.hasNext())\n+      {\n+        throw new NoSuchElementException(\"More than one item in \" + iterator + \", first:\" + item +\n+            \", second:\" + iterator.next());\n+      }\n+      closeSafely(iterator);\n+      return item;\n+    } catch (NoSuchElementException exception)\n+    {\n+      closeSafely(iterator, exception);\n+      throw exception;\n+    }\n+  }\n+\n+  /**\n+   * Returns the index of the given item in the iterator(zero-based). If no items in {@code iterator}\n+   * equals {@code item} {@code -1} is returned.\n+   *\n+   * @param item     the item to look for.\n+   * @param iterator of items.\n+   * @return index of found item or -1 if not found.\n+   */\n+  public static int indexOf(PrimitiveLongIterator iterator, long item)\n+  {\n+    for (int i = 0; iterator.hasNext(); i++)\n+    {\n+      if (item == iterator.next())\n+      {\n+        return i;\n+      }\n+    }\n+    return -1;\n+  }\n+\n+  public static PrimitiveLongSet asSet(Collection<Long> collection)\n+  {\n+    PrimitiveLongSet set = Primitive.longSet(collection.size());\n+    for (Long next : collection)\n+    {\n+      set.add(next);\n+    }\n+    return set;\n+  }\n+\n+  public static PrimitiveLongSet asSet(PrimitiveLongIterator iterator)\n+  {\n+    PrimitiveLongSet set = Primitive.longSet();\n+    while (iterator.hasNext())\n+    {\n+      set.add(iterator.next());\n+    }\n+    return set;\n+  }\n+\n+  public static PrimitiveLongSet asSet(PrimitiveLongSet set)\n+  {\n+    PrimitiveLongSet result = Primitive.longSet(set.size());\n+    PrimitiveLongIterator iterator = set.iterator();\n+    while (iterator.hasNext())\n+    {\n+      result.add(iterator.next());\n+    }\n+    return result;\n+  }\n+\n+  public static PrimitiveLongSet asSet(long... values)\n+  {\n+    PrimitiveLongSet result = Primitive.longSet(values.length);\n+    for (long value : values)\n+    {\n+      result.add(value);\n+    }\n+    return result;\n+  }\n+\n+  public static <T> PrimitiveLongObjectMap<T> copy(PrimitiveLongObjectMap<T> original)\n+  {\n+    PrimitiveLongObjectMap<T> copy = Primitive.longObjectMap(original.size());\n+    original.visitEntries((key, value) ->\n+    {\n+      copy.put(key, value);\n+      return false;\n+    });\n+    return copy;\n+  }\n+\n+  public static int count(PrimitiveLongIterator iterator)\n+  {\n+    int count = 0;\n+    for (; iterator.hasNext(); iterator.next(), count++)\n+    {   // Just loop through this\n+    }\n+    return count;\n+  }\n+\n+  public static long[] asArray(PrimitiveLongIterator iterator)\n+  {\n+    long[] array = new long[8];\n+    int i = 0;\n+    for (; iterator.hasNext(); i++)\n+    {\n+      if (i >= array.length)\n+      {\n+        array = copyOf(array, i << 1);\n+      }\n+      array[i] = iterator.next();\n     }\n \n-    public static PrimitiveLongSet asSet( long...values )\n+    if (i < array.length)\n     {\n-        PrimitiveLongSet result = Primitive.longSet( values.length );\n-        for ( long value : values )\n-        {\n-            result.add( value );\n-        }\n-        return result;\n+      array = copyOf(array, i);\n     }\n-\n-    public static <T> PrimitiveLongObjectMap<T> copy( PrimitiveLongObjectMap<T> original )\n+    return array;\n+  }\n+\n+  public static long[] asArray(Iterator<Long> iterator)\n+  {\n+    long[] array = new long[8];\n+    int i = 0;\n+    for (; iterator.hasNext(); i++)\n     {\n-        PrimitiveLongObjectMap<T> copy = Primitive.longObjectMap( original.size() );\n-        original.visitEntries( ( key, value ) ->\n-        {\n-            copy.put( key, value );\n-            return false;\n-        } );\n-        return copy;\n+      if (i >= array.length)\n+      {\n+        array = copyOf(array, i << 1);\n+      }\n+      array[i] = iterator.next();\n     }\n \n-    public static int count( PrimitiveLongIterator iterator )\n+    if (i < array.length)\n     {\n-        int count = 0;\n-        for ( ; iterator.hasNext(); iterator.next(), count++ )\n-        {   // Just loop through this\n-        }\n-        return count;\n+      array = copyOf(array, i);\n     }\n+    return array;\n+  }\n \n-    public static long[] asArray( PrimitiveLongIterator iterator )\n-    {\n-        long[] array = new long[8];\n-        int i = 0;\n-        for ( ; iterator.hasNext(); i++ )\n-        {\n-            if ( i >= array.length )\n-            {\n-                array = copyOf( array, i << 1 );\n-            }\n-            array[i] = iterator.next();\n-        }\n-\n-        if ( i < array.length )\n-        {\n-            array = copyOf( array, i );\n-        }\n-        return array;\n-    }\n+  public static PrimitiveLongIterator emptyIterator()\n+  {\n+    return EMPTY;\n+  }\n \n-    public static long[] asArray( Iterator<Long> iterator )\n+  public static PrimitiveLongIterator toPrimitiveIterator(final Iterator<Long> iterator)\n+  {\n+    return new PrimitiveLongBaseIterator()\n     {\n-        long[] array = new long[8];\n-        int i = 0;\n-        for ( ; iterator.hasNext(); i++ )\n+      @Override\n+      protected boolean fetchNext()\n+      {\n+        if (iterator.hasNext())\n         {\n-            if ( i >= array.length )\n-            {\n-                array = copyOf( array, i << 1 );\n-            }\n-            array[i] = iterator.next();\n+          Long nextValue = iterator.next();\n+          if (null == nextValue)\n+          {\n+            throw new IllegalArgumentException(\"Cannot convert null Long to primitive long\");\n+          }\n+          return next(nextValue.longValue());\n         }\n-\n-        if ( i < array.length )\n-        {\n-            array = copyOf( array, i );\n+        return false;\n+      }\n+    };\n+  }\n+\n+  public static PrimitiveLongSet emptySet()\n+  {\n+    return Empty.EMPTY_PRIMITIVE_LONG_SET;\n+  }\n+\n+  public static PrimitiveLongSet setOf(long... values)\n+  {\n+    Objects.requireNonNull(values, \"Values array is null\");\n+    PrimitiveLongSet set = Primitive.longSet(values.length);\n+    for (long value : values)\n+    {\n+      set.add(value);\n+    }\n+    return set;\n+  }\n+\n+  public static <T> Iterator<T> map(final LongFunction<T> mapFunction, final PrimitiveLongIterator source)\n+  {\n+    return new Iterator<T>()\n+    {\n+      @Override\n+      public boolean hasNext()\n+      {\n+        return source.hasNext();\n+      }\n+\n+      @Override\n+      public T next()\n+      {\n+        return mapFunction.apply(source.next());\n+      }\n+\n+      @Override\n+      public void remove()\n+      {\n+        throw new UnsupportedOperationException();\n+      }\n+    };\n+  }\n+\n+  /**\n+   * Pulls all items from the {@code iterator} and puts them into a {@link List}, boxing each long.\n+   *\n+   * @param iterator {@link PrimitiveLongIterator} to pull values from.\n+   * @return a {@link List} containing all items.\n+   */\n+  public static List<Long> asList(PrimitiveLongIterator iterator)\n+  {\n+    List<Long> out = new ArrayList<>();\n+    while (iterator.hasNext())\n+    {\n+      out.add(iterator.next());\n+    }\n+    return out;\n+  }\n+\n+  public static Iterator<Long> toIterator(final PrimitiveLongIterator primIterator)\n+  {\n+    return new Iterator<Long>()\n+    {\n+      @Override\n+      public boolean hasNext()\n+      {\n+        return primIterator.hasNext();\n+      }\n+\n+      @Override\n+      public Long next()\n+      {\n+        return primIterator.next();\n+      }\n+\n+      @Override\n+      public void remove()\n+      {\n+        throw new UnsupportedOperationException();\n+      }\n+    };\n+  }\n+\n+  /**\n+   * Wraps a {@link PrimitiveLongIterator} in a {@link PrimitiveLongResourceIterator} which closes\n+   * the provided {@code resource} in {@link PrimitiveLongResourceIterator#close()}.\n+   *\n+   * @param iterator {@link PrimitiveLongIterator} to convert\n+   * @param resource {@link Resource} to close in {@link PrimitiveLongResourceIterator#close()}\n+   * @return Wrapped {@link PrimitiveLongIterator}.\n+   */\n+  public static PrimitiveLongResourceIterator resourceIterator(final PrimitiveLongIterator iterator,\n+                                                               final Resource resource)\n+  {\n+    return new PrimitiveLongResourceIterator()\n+    {\n+      @Override\n+      public void close()\n+      {\n+        if (resource != null)\n+        {\n+          resource.close();\n         }\n-        return array;\n-    }\n-\n-    public static PrimitiveLongIterator emptyIterator()\n-    {\n-        return EMPTY;\n-    }\n-\n-    public static PrimitiveLongIterator toPrimitiveIterator( final Iterator<Long> iterator )\n-    {\n-        return new PrimitiveLongBaseIterator()\n-        {\n-            @Override\n-            protected boolean fetchNext()\n-            {\n-                if ( iterator.hasNext() )\n-                {\n-                    Long nextValue = iterator.next();\n-                    if ( null == nextValue )\n-                    {\n-                        throw new IllegalArgumentException( \"Cannot convert null Long to primitive long\" );\n-                    }\n-                    return next( nextValue.longValue() );\n-                }\n-                return false;\n-            }\n-        };\n-    }\n-\n-    public static PrimitiveLongSet emptySet()\n-    {\n-        return Empty.EMPTY_PRIMITIVE_LONG_SET;\n-    }\n-\n-    public static PrimitiveLongSet setOf( long... values )\n-    {\n-        Objects.requireNonNull( values, \"Values array is null\" );\n-        PrimitiveLongSet set = Primitive.longSet( values.length );\n-        for ( long value : values )\n-        {\n-            set.add( value );\n+      }\n+\n+      @Override\n+      public long next()\n+      {\n+        return iterator.next();\n+      }\n+\n+      @Override\n+      public boolean hasNext()\n+      {\n+        return iterator.hasNext();\n+      }\n+    };\n+  }\n+\n+  /**\n+   * Convert primitive set into a plain old java {@link Set}, boxing each long.\n+   *\n+   * @param set {@link PrimitiveLongSet} set of primitive values.\n+   * @return a {@link Set} containing all items.\n+   */\n+  public static Set<Long> toSet(PrimitiveLongSet set)\n+  {\n+    return toSet(set.iterator());\n+  }\n+\n+  /**\n+   * Pulls all items from the {@code iterator} and puts them into a {@link Set}, boxing each long.\n+   *\n+   * @param iterator {@link PrimitiveLongIterator} to pull values from.\n+   * @return a {@link Set} containing all items.\n+   */\n+  public static Set<Long> toSet(PrimitiveLongIterator iterator)\n+  {\n+    Set<Long> set = new HashSet<>();\n+    while (iterator.hasNext())\n+    {\n+      addUnique(set, iterator.next());\n+    }\n+    return set;\n+  }\n+\n+  private static <T, C extends Collection<T>> void addUnique(C collection, T item)\n+  {\n+    if (!collection.add(item))\n+    {\n+      throw new IllegalStateException(\"Encountered an already added item:\" + item +\n+          \" when adding items uniquely to a collection:\" + collection);\n+    }\n+  }\n+\n+  /**\n+   * Deduplicates values in the sorted {@code values} array.\n+   *\n+   * @param values sorted array of long values.\n+   * @return the provided array if no duplicates were found, otherwise a new shorter array w/o duplicates.\n+   */\n+  public static long[] deduplicate(long[] values)\n+  {\n+    int unique = 0;\n+    for (int i = 0; i < values.length; i++)\n+    {\n+      long value = values[i];\n+      for (int j = 0; j < unique; j++)\n+      {\n+        if (value == values[j])\n+        {\n+          value = -1; // signal that this value is not unique\n+          break; // we will not find more than one conflict\n         }\n-        return set;\n-    }\n-\n-    public static <T> Iterator<T> map( final LongFunction<T> mapFunction, final PrimitiveLongIterator source )\n-    {\n-        return new Iterator<T>()\n-        {\n-            @Override\n-            public boolean hasNext()\n-            {\n-                return source.hasNext();\n-            }\n-\n-            @Override\n-            public T next()\n-            {\n-                return mapFunction.apply( source.next() );\n-            }\n-\n-            @Override\n-            public void remove()\n-            {\n-                throw new UnsupportedOperationException();\n-            }\n-        };\n+      }\n+      if (value != -1)\n+      {   // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n+        values[unique++] = values[i];\n+      }\n+    }\n+    return unique < values.length ? Arrays.copyOf(values, unique) : values;\n+  }\n+\n+  /**\n+   * Base iterator for simpler implementations of {@link PrimitiveLongIterator}s.\n+   */\n+  public abstract static class PrimitiveLongBaseIterator implements PrimitiveLongIterator\n+  {\n+    private boolean hasNextDecided;\n+    private boolean hasNext;\n+    protected long next;\n+\n+    @Override\n+    public boolean hasNext()\n+    {\n+      if (!hasNextDecided)\n+      {\n+        hasNext = fetchNext();\n+        hasNextDecided = true;\n+      }\n+      return hasNext;\n+    }\n+\n+    @Override\n+    public long next()\n+    {\n+      if (!hasNext())\n+      {\n+        throw new NoSuchElementException(\"No more elements in \" + this);\n+      }\n+      hasNextDecided = false;\n+      return next;\n     }\n \n     /**\n-     * Pulls all items from the {@code iterator} and puts them into a {@link List}, boxing each long.\n-     *\n-     * @param iterator {@link PrimitiveLongIterator} to pull values from.\n-     * @return a {@link List} containing all items.\n+     * Fetches the next item in this iterator. Returns whether or not a next item was found. If a next\n+     * item was found, that value must have been set inside the implementation of this method\n+     * using {@link #next(long)}.\n      */\n-    public static List<Long> asList( PrimitiveLongIterator iterator )\n-    {\n-        List<Long> out = new ArrayList<>();\n-        while ( iterator.hasNext() )\n-        {\n-            out.add( iterator.next() );\n-        }\n-        return out;\n-    }\n-\n-    public static Iterator<Long> toIterator( final PrimitiveLongIterator primIterator )\n-    {\n-        return new Iterator<Long>()\n-        {\n-            @Override\n-            public boolean hasNext()\n-            {\n-                return primIterator.hasNext();\n-            }\n-\n-            @Override\n-            public Long next()\n-            {\n-                return primIterator.next();\n-            }\n-\n-            @Override\n-            public void remove()\n-            {\n-                throw new UnsupportedOperationException(  );\n-            }\n-        };\n-    }\n+    protected abstract boolean fetchNext();\n \n     /**\n-     * Wraps a {@link PrimitiveLongIterator} in a {@link PrimitiveLongResourceIterator} which closes\n-     * the provided {@code resource} in {@link PrimitiveLongResourceIterator#close()}.\n+     * Called from inside an implementation of {@link #fetchNext()} if a next item was found.\n+     * This method returns {@code true} so that it can be used in short-hand conditionals\n+     * (TODO what are they called?), like:\n+     * <pre>\n+     * protected boolean fetchNext()\n+     * {\n+     *     return source.hasNext() ? next( source.next() ) : false;\n+     * }\n+     * </pre>\n      *\n-     * @param iterator {@link PrimitiveLongIterator} to convert\n-     * @param resource {@link Resource} to close in {@link PrimitiveLongResourceIterator#close()}\n-     * @return Wrapped {@link PrimitiveLongIterator}.\n+     * @param nextItem the next item found.\n      */\n-    public static PrimitiveLongResourceIterator resourceIterator( final PrimitiveLongIterator iterator,\n-            final Resource resource )\n+    protected boolean next(long nextItem)\n     {\n-        return new PrimitiveLongResourceIterator()\n-        {\n-            @Override\n-            public void close()\n-            {\n-                if ( resource != null )\n-                {\n-                    resource.close();\n-                }\n-            }\n-\n-            @Override\n-            public long next()\n-            {\n-                return iterator.next();\n-            }\n-\n-            @Override\n-            public boolean hasNext()\n-            {\n-                return iterator.hasNext();\n-            }\n-        };\n+      next = nextItem;\n+      hasNext = true;\n+      return true;\n     }\n+  }\n \n-    /**\n-     * Convert primitive set into a plain old java {@link Set}, boxing each long.\n-     *\n-     * @param set {@link PrimitiveLongSet} set of primitive values.\n-     * @return a {@link Set} containing all items.\n-     */\n-    public static Set<Long> toSet( PrimitiveLongSet set )\n-    {\n-        return toSet( set.iterator() );\n-    }\n+  public static class PrimitiveLongConcatingIterator extends PrimitiveLongBaseIterator\n+  {\n+    private final Iterator<? extends PrimitiveLongIterator> iterators;\n+    private PrimitiveLongIterator currentIterator;\n \n-    /**\n-     * Pulls all items from the {@code iterator} and puts them into a {@link Set}, boxing each long.\n-     *\n-     * @param iterator {@link PrimitiveLongIterator} to pull values from.\n-     * @return a {@link Set} containing all items.\n-     */\n-    public static Set<Long> toSet( PrimitiveLongIterator iterator )\n+    public PrimitiveLongConcatingIterator(Iterator<? extends PrimitiveLongIterator> iterators)\n     {\n-        Set<Long> set = new HashSet<>();\n-        while ( iterator.hasNext() )\n-        {\n-            addUnique( set, iterator.next() );\n-        }\n-        return set;\n+      this.iterators = iterators;\n     }\n \n-    private static <T, C extends Collection<T>> void addUnique( C collection, T item )\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        if ( !collection.add( item ) )\n+      if (currentIterator == null || !currentIterator.hasNext())\n+      {\n+        while (iterators.hasNext())\n         {\n-            throw new IllegalStateException( \"Encountered an already added item:\" + item +\n-                    \" when adding items uniquely to a collection:\" + collection );\n+          currentIterator = iterators.next();\n+          if (currentIterator.hasNext())\n+          {\n+            break;\n+          }\n         }\n+      }\n+      return (currentIterator != null && currentIterator.hasNext()) && next(currentIterator.next());\n     }\n \n-    /**\n-     * Deduplicates values in the sorted {@code values} array.\n-     *\n-     * @param values sorted array of long values.\n-     * @return the provided array if no duplicates were found, otherwise a new shorter array w/o duplicates.\n-     */\n-    public static long[] deduplicate( long[] values )\n+    protected final PrimitiveLongIterator currentIterator()\n     {\n-        int unique = 0;\n-        for ( int i = 0; i < values.length; i++ )\n-        {\n-            long value = values[i];\n-            for ( int j = 0; j < unique; j++ )\n-            {\n-                if ( value == values[j] )\n-                {\n-                    value = -1; // signal that this value is not unique\n-                    break; // we will not find more than one conflict\n-                }\n-            }\n-            if ( value != -1 )\n-            {   // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n-                values[unique++] = values[i];\n-            }\n-        }\n-        return unique < values.length ? Arrays.copyOf( values, unique ) : values;\n+      return currentIterator;\n     }\n+  }\n \n-    /**\n-     * Base iterator for simpler implementations of {@link PrimitiveLongIterator}s.\n-     */\n-    public abstract static class PrimitiveLongBaseIterator implements PrimitiveLongIterator\n-    {\n-        private boolean hasNextDecided;\n-        private boolean hasNext;\n-        protected long next;\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            if ( !hasNextDecided )\n-            {\n-                hasNext = fetchNext();\n-                hasNextDecided = true;\n-            }\n-            return hasNext;\n-        }\n+  public abstract static class PrimitiveLongFilteringIterator extends PrimitiveLongBaseIterator\n+      implements LongPredicate\n+  {\n+    protected final PrimitiveLongIterator source;\n \n-        @Override\n-        public long next()\n-        {\n-            if ( !hasNext() )\n-            {\n-                throw new NoSuchElementException( \"No more elements in \" + this );\n-            }\n-            hasNextDecided = false;\n-            return next;\n-        }\n-\n-        /**\n-         * Fetches the next item in this iterator. Returns whether or not a next item was found. If a next\n-         * item was found, that value must have been set inside the implementation of this method\n-         * using {@link #next(long)}.\n-         */\n-        protected abstract boolean fetchNext();\n-\n-        /**\n-         * Called from inside an implementation of {@link #fetchNext()} if a next item was found.\n-         * This method returns {@code true} so that it can be used in short-hand conditionals\n-         * (TODO what are they called?), like:\n-         * <pre>\n-         * protected boolean fetchNext()\n-         * {\n-         *     return source.hasNext() ? next( source.next() ) : false;\n-         * }\n-         * </pre>\n-         * @param nextItem the next item found.\n-         */\n-        protected boolean next( long nextItem )\n-        {\n-            next = nextItem;\n-            hasNext = true;\n-            return true;\n-        }\n+    PrimitiveLongFilteringIterator(PrimitiveLongIterator source)\n+    {\n+      this.source = source;\n     }\n \n-    public static class PrimitiveLongConcatingIterator extends PrimitiveLongBaseIterator\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        private final Iterator<? extends PrimitiveLongIterator> iterators;\n-        private PrimitiveLongIterator currentIterator;\n-\n-        public PrimitiveLongConcatingIterator( Iterator<? extends PrimitiveLongIterator> iterators )\n+      while (source.hasNext())\n+      {\n+        long testItem = source.next();\n+        if (test(testItem))\n         {\n-            this.iterators = iterators;\n+          return next(testItem);\n         }\n+      }\n+      return false;\n+    }\n \n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            if ( currentIterator == null || !currentIterator.hasNext() )\n-            {\n-                while ( iterators.hasNext() )\n-                {\n-                    currentIterator = iterators.next();\n-                    if ( currentIterator.hasNext() )\n-                    {\n-                        break;\n-                    }\n-                }\n-            }\n-            return (currentIterator != null && currentIterator.hasNext()) && next( currentIterator.next() );\n-        }\n+    @Override\n+    public abstract boolean test(long testItem);\n+  }\n \n-        protected final PrimitiveLongIterator currentIterator()\n-        {\n-            return currentIterator;\n-        }\n+  public abstract static class PrimitiveLongResourceFilteringIterator extends PrimitiveLongFilteringIterator\n+      implements PrimitiveLongResourceIterator\n+  {\n+    PrimitiveLongResourceFilteringIterator(PrimitiveLongIterator source)\n+    {\n+      super(source);\n     }\n \n-    public abstract static class PrimitiveLongFilteringIterator extends PrimitiveLongBaseIterator\n-            implements LongPredicate\n+    @Override\n+    public void close()\n     {\n-        protected final PrimitiveLongIterator source;\n-\n-        PrimitiveLongFilteringIterator( PrimitiveLongIterator source )\n-        {\n-            this.source = source;\n-        }\n-\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            while ( source.hasNext() )\n-            {\n-                long testItem = source.next();\n-                if ( test( testItem ) )\n-                {\n-                    return next( testItem );\n-                }\n-            }\n-            return false;\n-        }\n-\n-        @Override\n-        public abstract boolean test( long testItem );\n+      if (source instanceof Resource)\n+      {\n+        ((Resource) source).close();\n+      }\n     }\n+  }\n \n-    public abstract static class PrimitiveLongResourceFilteringIterator extends PrimitiveLongFilteringIterator\n-            implements PrimitiveLongResourceIterator\n-    {\n-        PrimitiveLongResourceFilteringIterator( PrimitiveLongIterator source )\n-        {\n-            super( source );\n-        }\n+  public static class PrimitiveLongRangeIterator extends PrimitiveLongBaseIterator\n+  {\n+    private long current;\n+    private final long end;\n \n-        @Override\n-        public void close()\n-        {\n-            if ( source instanceof Resource )\n-            {\n-                ((Resource) source).close();\n-            }\n-        }\n+    PrimitiveLongRangeIterator(long start, long end)\n+    {\n+      this.current = start;\n+      this.end = end;\n     }\n \n-    public static class PrimitiveLongRangeIterator extends PrimitiveLongBaseIterator\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        private long current;\n-        private final long end;\n-\n-        PrimitiveLongRangeIterator( long start, long end )\n-        {\n-            this.current = start;\n-            this.end = end;\n-        }\n-\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            try\n-            {\n-                return current <= end && next( current );\n-            }\n-            finally\n-            {\n-                current++;\n-            }\n-        }\n+      try\n+      {\n+        return current <= end && next(current);\n+      } finally\n+      {\n+        current++;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 851
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/881/PrimitiveLongCollections.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/881/PrimitiveLongCollections.java\nindex 75b2c599e79..5bf937f6a93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/881/PrimitiveLongCollections.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/881/PrimitiveLongCollections.java\n@@ -70,7 +70,7 @@ public class PrimitiveLongCollections\n             @Override\n             protected boolean fetchNext()\n             {\n-                return ++index < items.length && next( items[index] );\n+                return ++ index < items.length && next( items[index] );\n             }\n         };\n     }\n@@ -128,10 +128,10 @@ public class PrimitiveLongCollections\n             long item = iterator.next();\n             if ( iterator.hasNext() )\n             {\n-                throw new NoSuchElementException( \"More than one item in \" + iterator + \", first:\" + item +\n-                        \", second:\" + iterator.next() );\n+                throw new NoSuchElementException( \"More than one item in \" + iterator + \", first:\" + item + \", second:\" + iterator.next() );\n             }\n-            closeSafely( iterator );\n+\n+closeSafely( iterator );\n             return item;\n         }\n         catch ( NoSuchElementException exception )\n@@ -168,7 +168,8 @@ public class PrimitiveLongCollections\n         {\n             set.add( next );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     public static PrimitiveLongSet asSet( PrimitiveLongIterator iterator )\n@@ -178,7 +179,8 @@ public class PrimitiveLongCollections\n         {\n             set.add( iterator.next() );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     public static PrimitiveLongSet asSet( PrimitiveLongSet set )\n@@ -189,7 +191,8 @@ public class PrimitiveLongCollections\n         {\n             result.add( iterator.next() );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static PrimitiveLongSet asSet( long...values )\n@@ -199,7 +202,8 @@ public class PrimitiveLongCollections\n         {\n             result.add( value );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public static <T> PrimitiveLongObjectMap<T> copy( PrimitiveLongObjectMap<T> original )\n@@ -216,8 +220,10 @@ public class PrimitiveLongCollections\n     public static int count( PrimitiveLongIterator iterator )\n     {\n         int count = 0;\n-        for ( ; iterator.hasNext(); iterator.next(), count++ )\n-        {   // Just loop through this\n+        for ( ; iterator.hasNext();\n+iterator.next(), count++ )\n+        {\n+    // Just loop through this\n         }\n         return count;\n     }\n@@ -232,14 +238,16 @@ public class PrimitiveLongCollections\n             {\n                 array = copyOf( array, i << 1 );\n             }\n-            array[i] = iterator.next();\n+\n+array[i] = iterator.next();\n         }\n \n         if ( i < array.length )\n         {\n             array = copyOf( array, i );\n         }\n-        return array;\n+\n+return array;\n     }\n \n     public static long[] asArray( Iterator<Long> iterator )\n@@ -252,14 +260,16 @@ public class PrimitiveLongCollections\n             {\n                 array = copyOf( array, i << 1 );\n             }\n-            array[i] = iterator.next();\n+\n+array[i] = iterator.next();\n         }\n \n         if ( i < array.length )\n         {\n             array = copyOf( array, i );\n         }\n-        return array;\n+\n+return array;\n     }\n \n     public static PrimitiveLongIterator emptyIterator()\n@@ -281,7 +291,8 @@ public class PrimitiveLongCollections\n                     {\n                         throw new IllegalArgumentException( \"Cannot convert null Long to primitive long\" );\n                     }\n-                    return next( nextValue.longValue() );\n+\n+return next( nextValue.longValue() );\n                 }\n                 return false;\n             }\n@@ -301,7 +312,8 @@ public class PrimitiveLongCollections\n         {\n             set.add( value );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     public static <T> Iterator<T> map( final LongFunction<T> mapFunction, final PrimitiveLongIterator source )\n@@ -341,7 +353,8 @@ public class PrimitiveLongCollections\n         {\n             out.add( iterator.next() );\n         }\n-        return out;\n+\n+return out;\n     }\n \n     public static Iterator<Long> toIterator( final PrimitiveLongIterator primIterator )\n@@ -363,7 +376,7 @@ public class PrimitiveLongCollections\n             @Override\n             public void remove()\n             {\n-                throw new UnsupportedOperationException(  );\n+                throw new UnsupportedOperationException();\n             }\n         };\n     }\n@@ -376,8 +389,7 @@ public class PrimitiveLongCollections\n      * @param resource {@link Resource} to close in {@link PrimitiveLongResourceIterator#close()}\n      * @return Wrapped {@link PrimitiveLongIterator}.\n      */\n-    public static PrimitiveLongResourceIterator resourceIterator( final PrimitiveLongIterator iterator,\n-            final Resource resource )\n+    public static PrimitiveLongResourceIterator resourceIterator( final PrimitiveLongIterator iterator, final Resource resource )\n     {\n         return new PrimitiveLongResourceIterator()\n         {\n@@ -428,16 +440,16 @@ public class PrimitiveLongCollections\n         {\n             addUnique( set, iterator.next() );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     private static <T, C extends Collection<T>> void addUnique( C collection, T item )\n     {\n         if ( !collection.add( item ) )\n         {\n-            throw new IllegalStateException( \"Encountered an already added item:\" + item +\n-                    \" when adding items uniquely to a collection:\" + collection );\n-        }\n+            throw new IllegalStateException( \"Encountered an already added item:\" + item + \" when adding items uniquely to a collection:\" + collection );\n+    }\n     }\n \n     /**\n@@ -461,7 +473,8 @@ public class PrimitiveLongCollections\n                 }\n             }\n             if ( value != -1 )\n-            {   // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n+            {\n+    // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n                 values[unique++] = values[i];\n             }\n         }\n@@ -485,7 +498,8 @@ public class PrimitiveLongCollections\n                 hasNext = fetchNext();\n                 hasNextDecided = true;\n             }\n-            return hasNext;\n+\n+return hasNext;\n         }\n \n         @Override\n@@ -495,7 +509,8 @@ public class PrimitiveLongCollections\n             {\n                 throw new NoSuchElementException( \"No more elements in \" + this );\n             }\n-            hasNextDecided = false;\n+\n+hasNextDecided = false;\n             return next;\n         }\n \n@@ -559,9 +574,8 @@ public class PrimitiveLongCollections\n         }\n     }\n \n-    public abstract static class PrimitiveLongFilteringIterator extends PrimitiveLongBaseIterator\n-            implements LongPredicate\n-    {\n+    public abstract static class PrimitiveLongFilteringIterator extends PrimitiveLongBaseIterator implements LongPredicate\n+{\n         protected final PrimitiveLongIterator source;\n \n         PrimitiveLongFilteringIterator( PrimitiveLongIterator source )\n@@ -587,9 +601,8 @@ public class PrimitiveLongCollections\n         public abstract boolean test( long testItem );\n     }\n \n-    public abstract static class PrimitiveLongResourceFilteringIterator extends PrimitiveLongFilteringIterator\n-            implements PrimitiveLongResourceIterator\n-    {\n+    public abstract static class PrimitiveLongResourceFilteringIterator extends PrimitiveLongFilteringIterator implements PrimitiveLongResourceIterator\n+{\n         PrimitiveLongResourceFilteringIterator( PrimitiveLongIterator source )\n         {\n             super( source );\n@@ -629,4 +642,4 @@ public class PrimitiveLongCollections\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
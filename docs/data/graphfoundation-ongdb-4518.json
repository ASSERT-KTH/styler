{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4518",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4518/RelationshipConnection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4518/RelationshipConnection.java\nindex 2d58cc71334..f35f9b80861 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4518/RelationshipConnection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4518/RelationshipConnection.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n import org.neo4j.kernel.impl.store.record.Record;\n@@ -24,196 +25,196 @@ import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n \n enum RelationshipConnection\n {\n-    START_PREV\n-    {\n+  START_PREV\n+      {\n         @Override\n-        long get( RelationshipRecord rel )\n+        long get(RelationshipRecord rel)\n         {\n-            return rel.isFirstInFirstChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getFirstPrevRel();\n+          return rel.isFirstInFirstChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getFirstPrevRel();\n         }\n \n         @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n+        void set(RelationshipRecord rel, long id, boolean isFirst)\n         {\n-            rel.setFirstPrevRel( id );\n-            rel.setFirstInFirstChain( isFirst );\n+          rel.setFirstPrevRel(id);\n+          rel.setFirstInFirstChain(isFirst);\n         }\n \n         @Override\n         RelationshipConnection otherSide()\n         {\n-            return START_NEXT;\n+          return START_NEXT;\n         }\n \n         @Override\n-        long compareNode( RelationshipRecord rel )\n+        long compareNode(RelationshipRecord rel)\n         {\n-            return rel.getFirstNode();\n+          return rel.getFirstNode();\n         }\n \n         @Override\n         RelationshipConnection start()\n         {\n-            return this;\n+          return this;\n         }\n \n         @Override\n         RelationshipConnection end()\n         {\n-            return END_PREV;\n+          return END_PREV;\n         }\n \n         @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n+        boolean isFirstInChain(RelationshipRecord rel)\n         {\n-            return rel.isFirstInFirstChain();\n+          return rel.isFirstInFirstChain();\n         }\n-    },\n-    START_NEXT\n-    {\n+      },\n+  START_NEXT\n+      {\n         @Override\n-        long get( RelationshipRecord rel )\n+        long get(RelationshipRecord rel)\n         {\n-            return rel.getFirstNextRel();\n+          return rel.getFirstNextRel();\n         }\n \n         @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n+        void set(RelationshipRecord rel, long id, boolean isFirst)\n         {\n-            rel.setFirstNextRel( id );\n+          rel.setFirstNextRel(id);\n         }\n \n         @Override\n         RelationshipConnection otherSide()\n         {\n-            return START_PREV;\n+          return START_PREV;\n         }\n \n         @Override\n-        long compareNode( RelationshipRecord rel )\n+        long compareNode(RelationshipRecord rel)\n         {\n-            return rel.getFirstNode();\n+          return rel.getFirstNode();\n         }\n \n         @Override\n         RelationshipConnection start()\n         {\n-            return this;\n+          return this;\n         }\n \n         @Override\n         RelationshipConnection end()\n         {\n-            return END_NEXT;\n+          return END_NEXT;\n         }\n \n         @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n+        boolean isFirstInChain(RelationshipRecord rel)\n         {\n-            return rel.isFirstInFirstChain();\n+          return rel.isFirstInFirstChain();\n         }\n-    },\n-    END_PREV\n-    {\n+      },\n+  END_PREV\n+      {\n         @Override\n-        long get( RelationshipRecord rel )\n+        long get(RelationshipRecord rel)\n         {\n-            return rel.isFirstInSecondChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getSecondPrevRel();\n+          return rel.isFirstInSecondChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getSecondPrevRel();\n         }\n \n         @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n+        void set(RelationshipRecord rel, long id, boolean isFirst)\n         {\n-            rel.setSecondPrevRel( id );\n-            rel.setFirstInSecondChain( isFirst );\n+          rel.setSecondPrevRel(id);\n+          rel.setFirstInSecondChain(isFirst);\n         }\n \n         @Override\n         RelationshipConnection otherSide()\n         {\n-            return END_NEXT;\n+          return END_NEXT;\n         }\n \n         @Override\n-        long compareNode( RelationshipRecord rel )\n+        long compareNode(RelationshipRecord rel)\n         {\n-            return rel.getSecondNode();\n+          return rel.getSecondNode();\n         }\n \n         @Override\n         RelationshipConnection start()\n         {\n-            return START_PREV;\n+          return START_PREV;\n         }\n \n         @Override\n         RelationshipConnection end()\n         {\n-            return this;\n+          return this;\n         }\n \n         @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n+        boolean isFirstInChain(RelationshipRecord rel)\n         {\n-            return rel.isFirstInSecondChain();\n+          return rel.isFirstInSecondChain();\n         }\n-    },\n-    END_NEXT\n-    {\n+      },\n+  END_NEXT\n+      {\n         @Override\n-        long get( RelationshipRecord rel )\n+        long get(RelationshipRecord rel)\n         {\n-            return rel.getSecondNextRel();\n+          return rel.getSecondNextRel();\n         }\n \n         @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n+        void set(RelationshipRecord rel, long id, boolean isFirst)\n         {\n-            rel.setSecondNextRel( id );\n+          rel.setSecondNextRel(id);\n         }\n \n         @Override\n         RelationshipConnection otherSide()\n         {\n-            return END_PREV;\n+          return END_PREV;\n         }\n \n         @Override\n-        long compareNode( RelationshipRecord rel )\n+        long compareNode(RelationshipRecord rel)\n         {\n-            return rel.getSecondNode();\n+          return rel.getSecondNode();\n         }\n \n         @Override\n         RelationshipConnection start()\n         {\n-            return START_NEXT;\n+          return START_NEXT;\n         }\n \n         @Override\n         RelationshipConnection end()\n         {\n-            return this;\n+          return this;\n         }\n \n         @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n+        boolean isFirstInChain(RelationshipRecord rel)\n         {\n-            return rel.isFirstInSecondChain();\n+          return rel.isFirstInSecondChain();\n         }\n-    };\n+      };\n \n-    abstract long get( RelationshipRecord rel );\n+  abstract long get(RelationshipRecord rel);\n \n-    abstract boolean isFirstInChain( RelationshipRecord rel );\n+  abstract boolean isFirstInChain(RelationshipRecord rel);\n \n-    abstract void set( RelationshipRecord rel, long id, boolean isFirst );\n+  abstract void set(RelationshipRecord rel, long id, boolean isFirst);\n \n-    abstract long compareNode( RelationshipRecord rel );\n+  abstract long compareNode(RelationshipRecord rel);\n \n-    abstract RelationshipConnection otherSide();\n+  abstract RelationshipConnection otherSide();\n \n-    abstract RelationshipConnection start();\n+  abstract RelationshipConnection start();\n \n-    abstract RelationshipConnection end();\n+  abstract RelationshipConnection end();\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4518/RelationshipConnection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4518/RelationshipConnection.java\nindex 2d58cc71334..557b9652821 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4518/RelationshipConnection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4518/RelationshipConnection.java\n@@ -68,8 +68,7 @@ enum RelationshipConnection\n         {\n             return rel.isFirstInFirstChain();\n         }\n-    },\n-    START_NEXT\n+    }, START_NEXT\n     {\n         @Override\n         long get( RelationshipRecord rel )\n@@ -112,8 +111,7 @@ enum RelationshipConnection\n         {\n             return rel.isFirstInFirstChain();\n         }\n-    },\n-    END_PREV\n+    }, END_PREV\n     {\n         @Override\n         long get( RelationshipRecord rel )\n@@ -157,8 +155,7 @@ enum RelationshipConnection\n         {\n             return rel.isFirstInSecondChain();\n         }\n-    },\n-    END_NEXT\n+    }, END_NEXT\n     {\n         @Override\n         long get( RelationshipRecord rel )\n@@ -216,4 +213,4 @@ enum RelationshipConnection\n     abstract RelationshipConnection start();\n \n     abstract RelationshipConnection end();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4518/RelationshipConnection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4518/RelationshipConnection.java\nindex 2d58cc71334..df64cf03e86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4518/RelationshipConnection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4518/RelationshipConnection.java\n@@ -23,197 +23,185 @@ import org.neo4j.kernel.impl.store.record.Record;\n import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n \n enum RelationshipConnection\n-{\n-    START_PREV\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInFirstChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getFirstPrevRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setFirstPrevRel( id );\n-            rel.setFirstInFirstChain( isFirst );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return START_NEXT;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return END_PREV;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInFirstChain();\n-        }\n-    },\n-    START_NEXT\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNextRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setFirstNextRel( id );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return START_PREV;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return END_NEXT;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInFirstChain();\n-        }\n-    },\n-    END_PREV\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInSecondChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getSecondPrevRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setSecondPrevRel( id );\n-            rel.setFirstInSecondChain( isFirst );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return END_NEXT;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getSecondNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return START_PREV;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInSecondChain();\n-        }\n-    },\n-    END_NEXT\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.getSecondNextRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setSecondNextRel( id );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return END_PREV;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getSecondNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return START_NEXT;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInSecondChain();\n-        }\n-    };\n-\n-    abstract long get( RelationshipRecord rel );\n-\n-    abstract boolean isFirstInChain( RelationshipRecord rel );\n-\n-    abstract void set( RelationshipRecord rel, long id, boolean isFirst );\n-\n-    abstract long compareNode( RelationshipRecord rel );\n-\n-    abstract RelationshipConnection otherSide();\n-\n-    abstract RelationshipConnection start();\n-\n-    abstract RelationshipConnection end();\n-}\n+{ START_PREV\n+  {\n+      @Override\n+      long get( RelationshipRecord rel )\n+      {\n+          return rel.isFirstInFirstChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getFirstPrevRel();\n+      }\n+\n+      @Override void set( RelationshipRecord rel, long id, boolean isFirst )\n+      {\n+          rel.setFirstPrevRel( id );\n+          rel.setFirstInFirstChain( isFirst );\n+      }\n+\n+      @Override RelationshipConnection otherSide()\n+      {\n+          return START_NEXT;\n+      }\n+\n+      @Override\n+      long compareNode( RelationshipRecord rel )\n+      {\n+          return rel.getFirstNode();\n+      }\n+\n+      @Override RelationshipConnection start()\n+      {\n+          return this;\n+      }\n+\n+      @Override RelationshipConnection end()\n+      {\n+          return END_PREV;\n+      }\n+\n+      @Override\n+      boolean isFirstInChain( RelationshipRecord rel )\n+      {\n+          return rel.isFirstInFirstChain();\n+      }\n+  }, START_NEXT\n+     {\n+         @Override\n+         long get( RelationshipRecord rel )\n+         {\n+             return rel.getFirstNextRel();\n+         }\n+\n+         @Override void set( RelationshipRecord rel, long id, boolean isFirst )\n+         {\n+             rel.setFirstNextRel( id );\n+         }\n+\n+         @Override RelationshipConnection otherSide()\n+         {\n+             return START_PREV;\n+         }\n+\n+         @Override\n+         long compareNode( RelationshipRecord rel )\n+         {\n+             return rel.getFirstNode();\n+         }\n+\n+         @Override RelationshipConnection start()\n+         {\n+             return this;\n+         }\n+\n+         @Override RelationshipConnection end()\n+         {\n+             return END_NEXT;\n+         }\n+\n+         @Override\n+         boolean isFirstInChain( RelationshipRecord rel )\n+         {\n+             return rel.isFirstInFirstChain();\n+         }\n+     }, END_PREV\n+        {\n+            @Override\n+            long get( RelationshipRecord rel )\n+            {\n+                return rel.isFirstInSecondChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getSecondPrevRel();\n+            }\n+\n+            @Override void set( RelationshipRecord rel, long id, boolean isFirst )\n+            {\n+                rel.setSecondPrevRel( id );\n+                rel.setFirstInSecondChain( isFirst );\n+            }\n+\n+            @Override RelationshipConnection otherSide()\n+            {\n+                return END_NEXT;\n+            }\n+\n+            @Override\n+            long compareNode( RelationshipRecord rel )\n+            {\n+                return rel.getSecondNode();\n+            }\n+\n+            @Override RelationshipConnection start()\n+            {\n+                return START_PREV;\n+            }\n+\n+            @Override RelationshipConnection end()\n+            {\n+                return this;\n+            }\n+\n+            @Override\n+            boolean isFirstInChain( RelationshipRecord rel )\n+            {\n+                return rel.isFirstInSecondChain();\n+            }\n+        }, END_NEXT\n+           {\n+               @Override\n+               long get( RelationshipRecord rel )\n+               {\n+                   return rel.getSecondNextRel();\n+               }\n+\n+               @Override void set( RelationshipRecord rel, long id, boolean isFirst )\n+               {\n+                   rel.setSecondNextRel( id );\n+               }\n+\n+               @Override RelationshipConnection otherSide()\n+               {\n+                   return END_PREV;\n+               }\n+\n+               @Override\n+               long compareNode( RelationshipRecord rel )\n+               {\n+                   return rel.getSecondNode();\n+               }\n+\n+               @Override RelationshipConnection start()\n+               {\n+                   return START_NEXT;\n+               }\n+\n+               @Override RelationshipConnection end()\n+               {\n+                   return this;\n+               }\n+\n+               @Override\n+               boolean isFirstInChain( RelationshipRecord rel )\n+               {\n+                   return rel.isFirstInSecondChain();\n+               }\n+           }\n+\n+  ;\n+\n+      abstract long get( RelationshipRecord rel )\n+      ;\n+\n+      abstract boolean isFirstInChain( RelationshipRecord rel )\n+      ;\n+\n+      abstract void set( RelationshipRecord rel, long id, boolean isFirst )\n+      ;\n+\n+      abstract long compareNode( RelationshipRecord rel )\n+      ;\n+\n+      abstract RelationshipConnection otherSide()\n+      ;\n+\n+      abstract RelationshipConnection start()\n+      ;\n+\n+      abstract RelationshipConnection end()\n+      ; }\n\\ No newline at end of file\n",
            "diff_size": 194
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2889",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2889/Write.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2889/Write.java\nindex 22286de314b..fc4a4644820 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2889/Write.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2889/Write.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import org.neo4j.internal.kernel.api.exceptions.EntityNotFoundException;\n@@ -30,104 +31,118 @@ import org.neo4j.values.storable.Value;\n  */\n public interface Write\n {\n-    /**\n-     * Create a node.\n-     * @return The internal id of the created node\n-     */\n-    long nodeCreate();\n+  /**\n+   * Create a node.\n+   *\n+   * @return The internal id of the created node\n+   */\n+  long nodeCreate();\n+\n+  /**\n+   * Delete a node.\n+   *\n+   * @param node the internal id of the node to delete\n+   * @return returns true if it deleted a node or false if no node was found for this id\n+   */\n+  boolean nodeDelete(long node) throws AutoIndexingKernelException;\n \n-    /**\n-     * Delete a node.\n-     * @param node the internal id of the node to delete\n-     * @return returns true if it deleted a node or false if no node was found for this id\n-     */\n-    boolean nodeDelete( long node ) throws AutoIndexingKernelException;\n+  /**\n+   * Deletes the node and all relationships connecting the node\n+   *\n+   * @param node the node to delete\n+   * @return the number of deleted relationships\n+   */\n+  int nodeDetachDelete(long node) throws KernelException;\n \n-    /**\n-     * Deletes the node and all relationships connecting the node\n-     * @param node the node to delete\n-     * @return the number of deleted relationships\n-     */\n-    int nodeDetachDelete( long node ) throws KernelException;\n+  /**\n+   * Create a relationship between two nodes.\n+   *\n+   * @param sourceNode       the source internal node id\n+   * @param relationshipType the type of the relationship to create\n+   * @param targetNode       the target internal node id\n+   * @return the internal id of the created relationship\n+   */\n+  long relationshipCreate(long sourceNode, int relationshipType, long targetNode) throws EntityNotFoundException;\n \n-    /**\n-     * Create a relationship between two nodes.\n-     * @param sourceNode the source internal node id\n-     * @param relationshipType the type of the relationship to create\n-     * @param targetNode the target internal node id\n-     * @return the internal id of the created relationship\n-     */\n-    long relationshipCreate( long sourceNode, int relationshipType, long targetNode ) throws EntityNotFoundException;\n+  /**\n+   * Delete a relationship\n+   *\n+   * @param relationship the internal id of the relationship to delete\n+   */\n+  boolean relationshipDelete(long relationship) throws AutoIndexingKernelException;\n \n-    /**\n-     * Delete a relationship\n-     * @param relationship the internal id of the relationship to delete\n-     */\n-    boolean relationshipDelete( long relationship ) throws AutoIndexingKernelException;\n-    /**\n-     * Add a label to a node\n-     * @param node the internal node id\n-     * @param nodeLabel the internal id of the label to add\n-     * @return {@code true} if a label was added otherwise {@code false}\n-     * @throws ConstraintValidationException if adding the label to node breaks a constraint\n-     */\n-    boolean nodeAddLabel( long node, int nodeLabel ) throws KernelException;\n+  /**\n+   * Add a label to a node\n+   *\n+   * @param node      the internal node id\n+   * @param nodeLabel the internal id of the label to add\n+   * @return {@code true} if a label was added otherwise {@code false}\n+   * @throws ConstraintValidationException if adding the label to node breaks a constraint\n+   */\n+  boolean nodeAddLabel(long node, int nodeLabel) throws KernelException;\n \n-    /**\n-     * Remove a label from a node\n-     * @param node the internal node id\n-     * @param nodeLabel the internal id of the label to remove\n-     * @return {@code true} if node was removed otherwise {@code false}\n-     */\n-    boolean nodeRemoveLabel( long node, int nodeLabel ) throws EntityNotFoundException;\n+  /**\n+   * Remove a label from a node\n+   *\n+   * @param node      the internal node id\n+   * @param nodeLabel the internal id of the label to remove\n+   * @return {@code true} if node was removed otherwise {@code false}\n+   */\n+  boolean nodeRemoveLabel(long node, int nodeLabel) throws EntityNotFoundException;\n \n-    /**\n-     * Set a property on a node\n-     * @param node the internal node id\n-     * @param propertyKey the property key id\n-     * @param value the value to set\n-     * @return The replaced value, or Values.NO_VALUE if the node did not have the property before\n-     */\n-    Value nodeSetProperty( long node, int propertyKey, Value value )\n-            throws KernelException;\n+  /**\n+   * Set a property on a node\n+   *\n+   * @param node        the internal node id\n+   * @param propertyKey the property key id\n+   * @param value       the value to set\n+   * @return The replaced value, or Values.NO_VALUE if the node did not have the property before\n+   */\n+  Value nodeSetProperty(long node, int propertyKey, Value value)\n+      throws KernelException;\n \n-    /**\n-     * Remove a property from a node\n-     * @param node the internal node id\n-     * @param propertyKey the property key id\n-     * @return The removed value, or Values.NO_VALUE if the node did not have the property before\n-     */\n-    Value nodeRemoveProperty( long node, int propertyKey ) throws EntityNotFoundException, AutoIndexingKernelException;\n+  /**\n+   * Remove a property from a node\n+   *\n+   * @param node        the internal node id\n+   * @param propertyKey the property key id\n+   * @return The removed value, or Values.NO_VALUE if the node did not have the property before\n+   */\n+  Value nodeRemoveProperty(long node, int propertyKey) throws EntityNotFoundException, AutoIndexingKernelException;\n \n-    /**\n-     * Set a property on a relationship\n-     * @param relationship the internal relationship id\n-     * @param propertyKey the property key id\n-     * @param value the value to set\n-     * @return The replaced value, or Values.NO_VALUE if the relationship did not have the property before\n-     */\n-    Value relationshipSetProperty( long relationship, int propertyKey, Value value ) throws EntityNotFoundException, AutoIndexingKernelException;\n+  /**\n+   * Set a property on a relationship\n+   *\n+   * @param relationship the internal relationship id\n+   * @param propertyKey  the property key id\n+   * @param value        the value to set\n+   * @return The replaced value, or Values.NO_VALUE if the relationship did not have the property before\n+   */\n+  Value relationshipSetProperty(long relationship, int propertyKey, Value value) throws EntityNotFoundException, AutoIndexingKernelException;\n \n-    /**\n-     * Remove a property from a relationship\n-     * @param relationship the internal relationship id\n-     * @param propertyKey the property key id\n-     * @return The removed value, or Values.NO_VALUE if the relationship did not have the property before\n-     */\n-    Value relationshipRemoveProperty( long relationship, int propertyKey ) throws EntityNotFoundException, AutoIndexingKernelException;\n+  /**\n+   * Remove a property from a relationship\n+   *\n+   * @param relationship the internal relationship id\n+   * @param propertyKey  the property key id\n+   * @return The removed value, or Values.NO_VALUE if the relationship did not have the property before\n+   */\n+  Value relationshipRemoveProperty(long relationship, int propertyKey) throws EntityNotFoundException, AutoIndexingKernelException;\n \n-    /**\n-     * Set a property on the graph\n-     * @param propertyKey the property key id\n-     * @param value the value to set\n-     * @return The replaced value, or Values.NO_VALUE if the graph did not have the property before\n-     */\n-    Value graphSetProperty( int propertyKey, Value value );\n+  /**\n+   * Set a property on the graph\n+   *\n+   * @param propertyKey the property key id\n+   * @param value       the value to set\n+   * @return The replaced value, or Values.NO_VALUE if the graph did not have the property before\n+   */\n+  Value graphSetProperty(int propertyKey, Value value);\n \n-    /**\n-     * Remove a property from the graph\n-     * @param propertyKey the property key id\n-     * @return The removed value, or Values.NO_VALUE if the graph did not have the property before\n-     */\n-    Value graphRemoveProperty( int propertyKey );\n+  /**\n+   * Remove a property from the graph\n+   *\n+   * @param propertyKey the property key id\n+   * @return The removed value, or Values.NO_VALUE if the graph did not have the property before\n+   */\n+  Value graphRemoveProperty(int propertyKey);\n }\n",
            "diff_size": 110
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2889/Write.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2889/Write.java\nindex 22286de314b..3359c4816ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2889/Write.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2889/Write.java\n@@ -64,7 +64,8 @@ public interface Write\n      * @param relationship the internal id of the relationship to delete\n      */\n     boolean relationshipDelete( long relationship ) throws AutoIndexingKernelException;\n-    /**\n+\n+/**\n      * Add a label to a node\n      * @param node the internal node id\n      * @param nodeLabel the internal id of the label to add\n@@ -88,10 +89,9 @@ public interface Write\n      * @param value the value to set\n      * @return The replaced value, or Values.NO_VALUE if the node did not have the property before\n      */\n-    Value nodeSetProperty( long node, int propertyKey, Value value )\n-            throws KernelException;\n+    Value nodeSetProperty( long node, int propertyKey, Value value ) throws KernelException;\n \n-    /**\n+/**\n      * Remove a property from a node\n      * @param node the internal node id\n      * @param propertyKey the property key id\n@@ -130,4 +130,4 @@ public interface Write\n      * @return The removed value, or Values.NO_VALUE if the graph did not have the property before\n      */\n     Value graphRemoveProperty( int propertyKey );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2889/Write.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2889/Write.java\nindex 22286de314b..89da231adc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2889/Write.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2889/Write.java\n@@ -28,27 +28,28 @@ import org.neo4j.values.storable.Value;\n /**\n  * Defines the write operations of the Kernel API.\n  */\n+\n public interface Write\n {\n     /**\n      * Create a node.\n      * @return The internal id of the created node\n      */\n-    long nodeCreate();\n+    long nodeCreate()\n+    ;\n \n     /**\n      * Delete a node.\n      * @param node the internal id of the node to delete\n      * @return returns true if it deleted a node or false if no node was found for this id\n-     */\n-    boolean nodeDelete( long node ) throws AutoIndexingKernelException;\n+     */ boolean nodeDelete( long node ) throws AutoIndexingKernelException ;\n \n     /**\n      * Deletes the node and all relationships connecting the node\n      * @param node the node to delete\n      * @return the number of deleted relationships\n      */\n-    int nodeDetachDelete( long node ) throws KernelException;\n+    int nodeDetachDelete( long node ) throws KernelException ;\n \n     /**\n      * Create a relationship between two nodes.\n@@ -57,13 +58,13 @@ public interface Write\n      * @param targetNode the target internal node id\n      * @return the internal id of the created relationship\n      */\n-    long relationshipCreate( long sourceNode, int relationshipType, long targetNode ) throws EntityNotFoundException;\n+    long relationshipCreate( long sourceNode, int relationshipType, long targetNode ) throws EntityNotFoundException ;\n \n     /**\n      * Delete a relationship\n      * @param relationship the internal id of the relationship to delete\n      */\n-    boolean relationshipDelete( long relationship ) throws AutoIndexingKernelException;\n+    boolean relationshipDelete( long relationship ) throws AutoIndexingKernelException ;\n     /**\n      * Add a label to a node\n      * @param node the internal node id\n@@ -71,7 +72,7 @@ public interface Write\n      * @return {@code true} if a label was added otherwise {@code false}\n      * @throws ConstraintValidationException if adding the label to node breaks a constraint\n      */\n-    boolean nodeAddLabel( long node, int nodeLabel ) throws KernelException;\n+    boolean nodeAddLabel( long node, int nodeLabel ) throws KernelException ;\n \n     /**\n      * Remove a label from a node\n@@ -79,7 +80,7 @@ public interface Write\n      * @param nodeLabel the internal id of the label to remove\n      * @return {@code true} if node was removed otherwise {@code false}\n      */\n-    boolean nodeRemoveLabel( long node, int nodeLabel ) throws EntityNotFoundException;\n+    boolean nodeRemoveLabel( long node, int nodeLabel ) throws EntityNotFoundException ;\n \n     /**\n      * Set a property on a node\n@@ -88,8 +89,7 @@ public interface Write\n      * @param value the value to set\n      * @return The replaced value, or Values.NO_VALUE if the node did not have the property before\n      */\n-    Value nodeSetProperty( long node, int propertyKey, Value value )\n-            throws KernelException;\n+    Value nodeSetProperty( long node, int propertyKey, Value value ) throws KernelException ;\n \n     /**\n      * Remove a property from a node\n@@ -97,7 +97,7 @@ public interface Write\n      * @param propertyKey the property key id\n      * @return The removed value, or Values.NO_VALUE if the node did not have the property before\n      */\n-    Value nodeRemoveProperty( long node, int propertyKey ) throws EntityNotFoundException, AutoIndexingKernelException;\n+    Value nodeRemoveProperty( long node, int propertyKey ) throws EntityNotFoundException, AutoIndexingKernelException ;\n \n     /**\n      * Set a property on a relationship\n@@ -106,7 +106,7 @@ public interface Write\n      * @param value the value to set\n      * @return The replaced value, or Values.NO_VALUE if the relationship did not have the property before\n      */\n-    Value relationshipSetProperty( long relationship, int propertyKey, Value value ) throws EntityNotFoundException, AutoIndexingKernelException;\n+    Value relationshipSetProperty( long relationship, int propertyKey, Value value ) throws EntityNotFoundException, AutoIndexingKernelException ;\n \n     /**\n      * Remove a property from a relationship\n@@ -114,7 +114,7 @@ public interface Write\n      * @param propertyKey the property key id\n      * @return The removed value, or Values.NO_VALUE if the relationship did not have the property before\n      */\n-    Value relationshipRemoveProperty( long relationship, int propertyKey ) throws EntityNotFoundException, AutoIndexingKernelException;\n+    Value relationshipRemoveProperty( long relationship, int propertyKey ) throws EntityNotFoundException, AutoIndexingKernelException ;\n \n     /**\n      * Set a property on the graph\n@@ -122,12 +122,12 @@ public interface Write\n      * @param value the value to set\n      * @return The replaced value, or Values.NO_VALUE if the graph did not have the property before\n      */\n-    Value graphSetProperty( int propertyKey, Value value );\n+    Value graphSetProperty( int propertyKey, Value value )\n+    ;\n \n     /**\n      * Remove a property from the graph\n      * @param propertyKey the property key id\n      * @return The removed value, or Values.NO_VALUE if the graph did not have the property before\n-     */\n-    Value graphRemoveProperty( int propertyKey );\n-}\n+     */ Value graphRemoveProperty( int propertyKey )\n+                                                                                                                                                                                                                ; }\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "301",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/301/PropertyValueRecordSizeCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/301/PropertyValueRecordSizeCalculator.java\nindex e3866c61acd..c5227d7ec73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/301/PropertyValueRecordSizeCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/301/PropertyValueRecordSizeCalculator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.util.function.ToIntFunction;\n@@ -34,56 +35,56 @@ import static java.lang.Math.toIntExact;\n  */\n public class PropertyValueRecordSizeCalculator implements ToIntFunction<Value[]>\n {\n-    private final BatchingIdSequence stringRecordIds = new BatchingIdSequence();\n-    private final DynamicRecordAllocator stringRecordCounter;\n-    private final BatchingIdSequence arrayRecordIds = new BatchingIdSequence();\n-    private final DynamicRecordAllocator arrayRecordCounter;\n+  private final BatchingIdSequence stringRecordIds = new BatchingIdSequence();\n+  private final DynamicRecordAllocator stringRecordCounter;\n+  private final BatchingIdSequence arrayRecordIds = new BatchingIdSequence();\n+  private final DynamicRecordAllocator arrayRecordCounter;\n \n-    private final int propertyRecordSize;\n-    private final int stringRecordSize;\n-    private final int arrayRecordSize;\n+  private final int propertyRecordSize;\n+  private final int stringRecordSize;\n+  private final int arrayRecordSize;\n \n-    public PropertyValueRecordSizeCalculator( PropertyStore propertyStore )\n-    {\n-        this( propertyStore.getRecordSize(),\n-                propertyStore.getStringStore().getRecordSize(), propertyStore.getStringStore().getRecordDataSize(),\n-                propertyStore.getArrayStore().getRecordSize(), propertyStore.getArrayStore().getRecordDataSize() );\n-    }\n+  public PropertyValueRecordSizeCalculator(PropertyStore propertyStore)\n+  {\n+    this(propertyStore.getRecordSize(),\n+        propertyStore.getStringStore().getRecordSize(), propertyStore.getStringStore().getRecordDataSize(),\n+        propertyStore.getArrayStore().getRecordSize(), propertyStore.getArrayStore().getRecordDataSize());\n+  }\n \n-    public PropertyValueRecordSizeCalculator( int propertyRecordSize,\n-            int stringRecordSize, int stringRecordDataSize,\n-            int arrayRecordSize, int arrayRecordDataSize )\n-    {\n-        this.propertyRecordSize = propertyRecordSize;\n-        this.stringRecordSize = stringRecordSize;\n-        this.arrayRecordSize = arrayRecordSize;\n-        this.stringRecordCounter = new StandardDynamicRecordAllocator( stringRecordIds, stringRecordDataSize );\n-        this.arrayRecordCounter = new StandardDynamicRecordAllocator( arrayRecordIds, arrayRecordDataSize );\n-    }\n+  public PropertyValueRecordSizeCalculator(int propertyRecordSize,\n+                                           int stringRecordSize, int stringRecordDataSize,\n+                                           int arrayRecordSize, int arrayRecordDataSize)\n+  {\n+    this.propertyRecordSize = propertyRecordSize;\n+    this.stringRecordSize = stringRecordSize;\n+    this.arrayRecordSize = arrayRecordSize;\n+    this.stringRecordCounter = new StandardDynamicRecordAllocator(stringRecordIds, stringRecordDataSize);\n+    this.arrayRecordCounter = new StandardDynamicRecordAllocator(arrayRecordIds, arrayRecordDataSize);\n+  }\n \n-    @Override\n-    public int applyAsInt( Value[] values )\n-    {\n-        stringRecordIds.reset();\n-        arrayRecordIds.reset();\n-\n-        int propertyRecordsUsed = 0;\n-        int freeBlocksInCurrentRecord = 0;\n-        for ( Value value : values )\n-        {\n-            PropertyBlock block = new PropertyBlock();\n-            PropertyStore.encodeValue( block, 0 /*doesn't matter*/, value, stringRecordCounter, arrayRecordCounter, true );\n-            if ( block.getValueBlocks().length > freeBlocksInCurrentRecord )\n-            {\n-                propertyRecordsUsed++;\n-                freeBlocksInCurrentRecord = PropertyType.getPayloadSizeLongs();\n-            }\n-            freeBlocksInCurrentRecord -= block.getValueBlocks().length;\n-        }\n+  @Override\n+  public int applyAsInt(Value[] values)\n+  {\n+    stringRecordIds.reset();\n+    arrayRecordIds.reset();\n \n-        int size = propertyRecordsUsed * propertyRecordSize;\n-        size += toIntExact( stringRecordIds.peek() ) * stringRecordSize;\n-        size += toIntExact( arrayRecordIds.peek() ) * arrayRecordSize;\n-        return size;\n+    int propertyRecordsUsed = 0;\n+    int freeBlocksInCurrentRecord = 0;\n+    for (Value value : values)\n+    {\n+      PropertyBlock block = new PropertyBlock();\n+      PropertyStore.encodeValue(block, 0 /*doesn't matter*/, value, stringRecordCounter, arrayRecordCounter, true);\n+      if (block.getValueBlocks().length > freeBlocksInCurrentRecord)\n+      {\n+        propertyRecordsUsed++;\n+        freeBlocksInCurrentRecord = PropertyType.getPayloadSizeLongs();\n+      }\n+      freeBlocksInCurrentRecord -= block.getValueBlocks().length;\n     }\n+\n+    int size = propertyRecordsUsed * propertyRecordSize;\n+    size += toIntExact(stringRecordIds.peek()) * stringRecordSize;\n+    size += toIntExact(arrayRecordIds.peek()) * arrayRecordSize;\n+    return size;\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "column": "47",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/301/PropertyValueRecordSizeCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/301/PropertyValueRecordSizeCalculator.java\nindex e3866c61acd..d612e9ec3b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/301/PropertyValueRecordSizeCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/301/PropertyValueRecordSizeCalculator.java\n@@ -45,14 +45,10 @@ public class PropertyValueRecordSizeCalculator implements ToIntFunction<Value[]>\n \n     public PropertyValueRecordSizeCalculator( PropertyStore propertyStore )\n     {\n-        this( propertyStore.getRecordSize(),\n-                propertyStore.getStringStore().getRecordSize(), propertyStore.getStringStore().getRecordDataSize(),\n-                propertyStore.getArrayStore().getRecordSize(), propertyStore.getArrayStore().getRecordDataSize() );\n+        this( propertyStore.getRecordSize(), propertyStore.getStringStore().getRecordSize(), propertyStore.getStringStore().getRecordDataSize(), propertyStore.getArrayStore().getRecordSize(), propertyStore.getArrayStore().getRecordDataSize() );\n     }\n \n-    public PropertyValueRecordSizeCalculator( int propertyRecordSize,\n-            int stringRecordSize, int stringRecordDataSize,\n-            int arrayRecordSize, int arrayRecordDataSize )\n+    public PropertyValueRecordSizeCalculator( int propertyRecordSize, int stringRecordSize, int stringRecordDataSize, int arrayRecordSize, int arrayRecordDataSize )\n     {\n         this.propertyRecordSize = propertyRecordSize;\n         this.stringRecordSize = stringRecordSize;\n@@ -73,12 +69,13 @@ public class PropertyValueRecordSizeCalculator implements ToIntFunction<Value[]>\n         {\n             PropertyBlock block = new PropertyBlock();\n             PropertyStore.encodeValue( block, 0 /*doesn't matter*/, value, stringRecordCounter, arrayRecordCounter, true );\n-            if ( block.getValueBlocks().length > freeBlocksInCurrentRecord )\n+            if ( block.getValueBlocks().length> freeBlocksInCurrentRecord )\n             {\n                 propertyRecordsUsed++;\n                 freeBlocksInCurrentRecord = PropertyType.getPayloadSizeLongs();\n             }\n-            freeBlocksInCurrentRecord -= block.getValueBlocks().length;\n+\n+freeBlocksInCurrentRecord -= block.getValueBlocks().length;\n         }\n \n         int size = propertyRecordsUsed * propertyRecordSize;\n@@ -86,4 +83,4 @@ public class PropertyValueRecordSizeCalculator implements ToIntFunction<Value[]>\n         size += toIntExact( arrayRecordIds.peek() ) * arrayRecordSize;\n         return size;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
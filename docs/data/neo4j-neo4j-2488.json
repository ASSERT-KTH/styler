{
    "project_name": "neo4j-neo4j",
    "error_id": "2488",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "170",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "179",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "187",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "412",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "532",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "549",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2488/DateValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2488/DateValue.java\nindex cc678642ffd..3da34870a95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2488/DateValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2488/DateValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.Clock;\n@@ -50,163 +51,153 @@ import static org.neo4j.util.FeatureToggles.flag;\n import static org.neo4j.values.storable.DateTimeValue.parseZoneName;\n import static org.neo4j.values.storable.IntegralValue.safeCastIntegral;\n \n-public final class DateValue extends TemporalValue<LocalDate,DateValue>\n+public final class DateValue extends TemporalValue<LocalDate, DateValue>\n {\n-    private static final long INSTANCE_SIZE = shallowSizeOfInstance( DateValue.class ) + LOCAL_DATE_SIZE;\n+    private static final long INSTANCE_SIZE = shallowSizeOfInstance(DateValue.class) + LOCAL_DATE_SIZE;\n \n-    public static final DateValue MIN_VALUE = new DateValue( LocalDate.MIN );\n-    public static final DateValue MAX_VALUE = new DateValue( LocalDate.MAX );\n+    public static final DateValue MIN_VALUE = new DateValue(LocalDate.MIN);\n+    public static final DateValue MAX_VALUE = new DateValue(LocalDate.MAX);\n \n     private final LocalDate value;\n \n-    private DateValue( LocalDate value )\n+    private DateValue(LocalDate value)\n     {\n         this.value = value;\n     }\n \n-    public static DateValue date( LocalDate value )\n+    public static DateValue date(LocalDate value)\n     {\n-        return new DateValue( requireNonNull( value, \"LocalDate\" ) );\n+        return new DateValue(requireNonNull(value, \"LocalDate\"));\n     }\n \n-    public static DateValue date( int year, int month, int day )\n+    public static DateValue date(int year, int month, int day)\n     {\n-        return new DateValue( assertValidArgument( () -> LocalDate.of( year, month, day ) ) );\n+        return new DateValue(assertValidArgument(() -> LocalDate.of(year, month, day)));\n     }\n \n-    public static DateValue weekDate( int year, int week, int dayOfWeek )\n+    public static DateValue weekDate(int year, int week, int dayOfWeek)\n     {\n-        return new DateValue( assertValidArgument( () -> localWeekDate( year, week, dayOfWeek ) ) );\n+        return new DateValue(assertValidArgument(() -> localWeekDate(year, week, dayOfWeek)));\n     }\n \n-    public static DateValue quarterDate( int year, int quarter, int dayOfQuarter )\n+    public static DateValue quarterDate(int year, int quarter, int dayOfQuarter)\n     {\n-        return new DateValue( assertValidArgument( () -> localQuarterDate( year, quarter, dayOfQuarter ) ) );\n+        return new DateValue(assertValidArgument(() -> localQuarterDate(year, quarter, dayOfQuarter)));\n     }\n \n-    public static DateValue ordinalDate( int year, int dayOfYear )\n+    public static DateValue ordinalDate(int year, int dayOfYear)\n     {\n-        return new DateValue( assertValidArgument( () -> LocalDate.ofYearDay( year, dayOfYear ) ) );\n+        return new DateValue(assertValidArgument(() -> LocalDate.ofYearDay(year, dayOfYear)));\n     }\n \n-    public static DateValue epochDate( long epochDay )\n+    public static DateValue epochDate(long epochDay)\n     {\n-        return new DateValue( epochDateRaw( epochDay ) );\n+        return new DateValue(epochDateRaw(epochDay));\n     }\n \n-    public static LocalDate epochDateRaw( long epochDay )\n+    public static LocalDate epochDateRaw(long epochDay)\n     {\n-        return assertValidArgument( () -> LocalDate.ofEpochDay( epochDay ) );\n+        return assertValidArgument(() -> LocalDate.ofEpochDay(epochDay));\n     }\n \n-    public static DateValue parse( CharSequence text )\n+    public static DateValue parse(CharSequence text)\n     {\n-        return parse( DateValue.class, PATTERN, DateValue::parse, text );\n+        return parse(DateValue.class, PATTERN, DateValue::parse, text);\n     }\n \n-    public static DateValue parse( TextValue text )\n+    public static DateValue parse(TextValue text)\n     {\n-        return parse( DateValue.class, PATTERN, DateValue::parse, text );\n+        return parse(DateValue.class, PATTERN, DateValue::parse, text);\n     }\n \n-    public static DateValue now( Clock clock )\n+    public static DateValue now(Clock clock)\n     {\n-        return new DateValue( LocalDate.now( clock ) );\n+        return new DateValue(LocalDate.now(clock));\n     }\n \n-    public static DateValue now( Clock clock, String timezone )\n+    public static DateValue now(Clock clock, String timezone)\n     {\n-        return now( clock.withZone( parseZoneName( timezone ) ) );\n+        return now(clock.withZone(parseZoneName(timezone)));\n     }\n \n-    public static DateValue now( Clock clock, Supplier<ZoneId> defaultZone )\n+    public static DateValue now(Clock clock, Supplier<ZoneId> defaultZone)\n     {\n-        return now( clock.withZone( defaultZone.get() ) );\n+        return now(clock.withZone(defaultZone.get()));\n     }\n \n-    public static DateValue build( MapValue map, Supplier<ZoneId> defaultZone )\n+    public static DateValue build(MapValue map, Supplier<ZoneId> defaultZone)\n     {\n-        return StructureBuilder.build( builder( defaultZone ), map );\n+        return StructureBuilder.build(builder(defaultZone), map);\n     }\n \n-    public static DateValue select( org.neo4j.values.AnyValue from, Supplier<ZoneId> defaultZone )\n+    public static DateValue select(org.neo4j.values.AnyValue from, Supplier<ZoneId> defaultZone)\n     {\n-        return builder( defaultZone ).selectDate( from );\n+        return builder(defaultZone).selectDate(from);\n     }\n \n     public static DateValue truncate(\n-            TemporalUnit unit,\n-            TemporalValue input,\n-            MapValue fields,\n-            Supplier<ZoneId> defaultZone )\n+      TemporalUnit unit,\n+      TemporalValue input,\n+      MapValue fields,\n+      Supplier<ZoneId> defaultZone)\n     {\n         LocalDate localDate = input.getDatePart();\n-        DateValue truncated = date( truncateTo( localDate, unit ) );\n-        if ( fields.size() == 0 )\n+        DateValue truncated = date(truncateTo(localDate, unit));\n+        if (fields.size() == 0)\n         {\n             return truncated;\n-        }\n-        else\n+        } else\n         {\n-            MapValue updatedFields = fields.updatedWith( \"date\", truncated );\n-            return build( updatedFields, defaultZone );\n+            MapValue updatedFields = fields.updatedWith(\"date\", truncated);\n+            return build(updatedFields, defaultZone);\n         }\n     }\n \n-    static LocalDate truncateTo( LocalDate value, TemporalUnit unit )\n+    static LocalDate truncateTo(LocalDate value, TemporalUnit unit)\n     {\n-        if ( unit == ChronoUnit.MILLENNIA )\n+        if (unit == ChronoUnit.MILLENNIA)\n         {\n-            return value.with( Neo4JTemporalField.YEAR_OF_MILLENNIUM, 0 );\n-        }\n-        else if ( unit == ChronoUnit.CENTURIES )\n+            return value.with(Neo4JTemporalField.YEAR_OF_MILLENNIUM, 0);\n+        } else if (unit == ChronoUnit.CENTURIES)\n         {\n-            return value.with( Neo4JTemporalField.YEAR_OF_CENTURY, 0 );\n-        }\n-        else if ( unit == ChronoUnit.DECADES )\n+            return value.with(Neo4JTemporalField.YEAR_OF_CENTURY, 0);\n+        } else if (unit == ChronoUnit.DECADES)\n         {\n-            return value.with( Neo4JTemporalField.YEAR_OF_DECADE, 0 );\n-        }\n-        else if ( unit == ChronoUnit.YEARS )\n+            return value.with(Neo4JTemporalField.YEAR_OF_DECADE, 0);\n+        } else if (unit == ChronoUnit.YEARS)\n         {\n-            return value.with( TemporalAdjusters.firstDayOfYear() );\n-        }\n-        else if ( unit == IsoFields.WEEK_BASED_YEARS )\n+            return value.with(TemporalAdjusters.firstDayOfYear());\n+        } else if (unit == IsoFields.WEEK_BASED_YEARS)\n         {\n-            return value.with( IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1 ).with( ChronoField.DAY_OF_WEEK, 1 );\n-        }\n-        else if ( unit == IsoFields.QUARTER_YEARS )\n+            return value.with(IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1).with(ChronoField.DAY_OF_WEEK, 1);\n+        } else if (unit == IsoFields.QUARTER_YEARS)\n         {\n-            return value.with( IsoFields.DAY_OF_QUARTER, 1 );\n-        }\n-        else if ( unit == ChronoUnit.MONTHS )\n+            return value.with(IsoFields.DAY_OF_QUARTER, 1);\n+        } else if (unit == ChronoUnit.MONTHS)\n         {\n-            return value.with( TemporalAdjusters.firstDayOfMonth() );\n-        }\n-        else if ( unit == ChronoUnit.WEEKS )\n+            return value.with(TemporalAdjusters.firstDayOfMonth());\n+        } else if (unit == ChronoUnit.WEEKS)\n         {\n-            return value.with( TemporalAdjusters.previousOrSame( DayOfWeek.MONDAY ) );\n-        }\n-        else if ( unit == ChronoUnit.DAYS )\n+            return value.with(TemporalAdjusters.previousOrSame(DayOfWeek.MONDAY));\n+        } else if (unit == ChronoUnit.DAYS)\n         {\n             return value;\n-        }\n-        else\n+        } else\n         {\n-            throw new UnsupportedTemporalUnitException( \"Unit too small for truncation: \" + unit );\n+            throw new UnsupportedTemporalUnitException(\"Unit too small for truncation: \" + unit);\n         }\n     }\n \n-    private static DateBuilder builder( Supplier<ZoneId> defaultZone )\n+    private static DateBuilder builder(Supplier<ZoneId> defaultZone)\n     {\n-        return new DateBuilder( defaultZone );\n+        return new DateBuilder(defaultZone);\n     }\n \n     @Override\n-    int unsafeCompareTo( Value otherValue )\n+    int unsafeCompareTo(Value otherValue)\n     {\n         DateValue other = (DateValue) otherValue;\n-        return value.compareTo( other.value );\n+        return value.compareTo(other.value);\n     }\n \n     @Override\n@@ -230,25 +221,25 @@ public final class DateValue extends TemporalValue<LocalDate,DateValue>\n     @Override\n     LocalTime getLocalTimePart()\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the time of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the time of: %s\", this));\n     }\n \n     @Override\n-    OffsetTime getTimePart( Supplier<ZoneId> defaultZone )\n+    OffsetTime getTimePart(Supplier<ZoneId> defaultZone)\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the time of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the time of: %s\", this));\n     }\n \n     @Override\n-    ZoneId getZoneId( Supplier<ZoneId> defaultZone )\n+    ZoneId getZoneId(Supplier<ZoneId> defaultZone)\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the time zone of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the time zone of: %s\", this));\n     }\n \n     @Override\n     ZoneOffset getZoneOffset()\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the offset of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the offset of: %s\", this));\n     }\n \n     @Override\n@@ -264,21 +255,21 @@ public final class DateValue extends TemporalValue<LocalDate,DateValue>\n     }\n \n     @Override\n-    public boolean equals( Value other )\n+    public boolean equals(Value other)\n     {\n-        return other instanceof DateValue && value.equals( ((DateValue) other).value );\n+        return other instanceof DateValue && value.equals(((DateValue) other).value);\n     }\n \n     @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n-        writer.writeDate( value );\n+        writer.writeDate(value);\n     }\n \n     @Override\n     public String prettyPrint()\n     {\n-        return assertPrintable( () -> value.format( DateTimeFormatter.ISO_DATE ) );\n+        return assertPrintable(() -> value.format(DateTimeFormatter.ISO_DATE));\n     }\n \n     @Override\n@@ -290,36 +281,36 @@ public final class DateValue extends TemporalValue<LocalDate,DateValue>\n     @Override\n     protected int computeHashToMemoize()\n     {\n-        return Long.hashCode( value.toEpochDay() );\n+        return Long.hashCode(value.toEpochDay());\n     }\n \n     @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+    public <T> T map(ValueMapper<T> mapper)\n     {\n-        return mapper.mapDate( this );\n+        return mapper.mapDate(this);\n     }\n \n     @Override\n-    public DateValue add( DurationValue duration )\n+    public DateValue add(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic(\n-                () -> value.plusMonths( duration.totalMonths() ).plusDays( duration.totalDays() ) ) );\n+        return replacement(assertValidArithmetic(\n+          () -> value.plusMonths(duration.totalMonths()).plusDays(duration.totalDays())));\n     }\n \n     @Override\n-    public DateValue sub( DurationValue duration )\n+    public DateValue sub(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic(\n-                () -> value.minusMonths( duration.totalMonths() ).minusDays( duration.totalDays() ) ) );\n+        return replacement(assertValidArithmetic(\n+          () -> value.minusMonths(duration.totalMonths()).minusDays(duration.totalDays())));\n     }\n \n     @Override\n-    DateValue replacement( LocalDate date )\n+    DateValue replacement(LocalDate date)\n     {\n-        return date == value ? this : new DateValue( date );\n+        return date == value ? this : new DateValue(date);\n     }\n \n-    static final boolean QUARTER_DATES = flag( DateValue.class, \"QUARTER_DATES\", true );\n+    static final boolean QUARTER_DATES = flag(DateValue.class, \"QUARTER_DATES\", true);\n     /**\n      * The regular expression pattern for parsing dates. All fields come in two versions - long and short form, the\n      * long form is for formats containing dashes, the short form is for formats without dashes. The long format is\n@@ -378,21 +369,21 @@ public final class DateValue extends TemporalValue<LocalDate,DateValue>\n      * </ul>\n      */\n     static final String DATE_PATTERN = \"(?:\"\n-                                       // short formats - without dashes:\n-                                       + \"(?<shortYear>[0-9]{4})(?:\"\n-                                       + \"(?<shortMonth>[0-9]{2})(?<shortDay>[0-9]{2})?|\" // calendar date\n-                                       + \"W(?<shortWeek>[0-9]{2})(?<shortDOW>[0-9])?|\" // week date\n-                                       + (QUARTER_DATES ? \"Q(?<shortQuarter>[0-9])(?<shortDOQ>[0-9]{2})?|\" : \"\")\n-                                       // quarter date\n-                                       + \"(?<shortDOY>[0-9]{3}))\" + \"|\" // ordinal date\n-                                       // long formats - includes dashes:\n-                                       + \"(?<longYear>(?:[0-9]{4}|[+-][0-9]{1,9}))(?:\"\n-                                       + \"-(?<longMonth>[0-9]{1,2})(?:-(?<longDay>[0-9]{1,2}))?|\" // calendar date\n-                                       + \"-W(?<longWeek>[0-9]{1,2})(?:-(?<longDOW>[0-9]))?|\" // week date\n-                                       + (QUARTER_DATES ? \"-Q(?<longQuarter>[0-9])(?:-(?<longDOQ>[0-9]{1,2}))?|\" : \"\")\n-                                       // quarter date\n-                                       + \"-(?<longDOY>[0-9]{3}))?\" + \")\"; // ordinal date\n-    private static final Pattern PATTERN = Pattern.compile( DATE_PATTERN );\n+      // short formats - without dashes:\n+      + \"(?<shortYear>[0-9]{4})(?:\"\n+      + \"(?<shortMonth>[0-9]{2})(?<shortDay>[0-9]{2})?|\" // calendar date\n+      + \"W(?<shortWeek>[0-9]{2})(?<shortDOW>[0-9])?|\" // week date\n+      + (QUARTER_DATES ? \"Q(?<shortQuarter>[0-9])(?<shortDOQ>[0-9]{2})?|\" : \"\")\n+      // quarter date\n+      + \"(?<shortDOY>[0-9]{3}))\" + \"|\" // ordinal date\n+      // long formats - includes dashes:\n+      + \"(?<longYear>(?:[0-9]{4}|[+-][0-9]{1,9}))(?:\"\n+      + \"-(?<longMonth>[0-9]{1,2})(?:-(?<longDay>[0-9]{1,2}))?|\" // calendar date\n+      + \"-W(?<longWeek>[0-9]{1,2})(?:-(?<longDOW>[0-9]))?|\" // week date\n+      + (QUARTER_DATES ? \"-Q(?<longQuarter>[0-9])(?:-(?<longDOQ>[0-9]{1,2}))?|\" : \"\")\n+      // quarter date\n+      + \"-(?<longDOY>[0-9]{3}))?\" + \")\"; // ordinal date\n+    private static final Pattern PATTERN = Pattern.compile(DATE_PATTERN);\n \n     /**\n      * Creates a {@link LocalDate} from a {@link Matcher} that matches the regular expression defined by\n@@ -402,94 +393,93 @@ public final class DateValue extends TemporalValue<LocalDate,DateValue>\n      * @param matcher a {@link Matcher} that matches the regular expression defined in {@link #DATE_PATTERN}.\n      * @return a {@link LocalDate} parsed from the given {@link Matcher}.\n      */\n-    static LocalDate parseDate( Matcher matcher )\n+    static LocalDate parseDate(Matcher matcher)\n     {\n-        String longYear = matcher.group( \"longYear\" );\n-        if ( longYear != null )\n+        String longYear = matcher.group(\"longYear\");\n+        if (longYear != null)\n         {\n-            return parse( matcher, parseInt( longYear ),\n-                    \"longMonth\", \"longDay\", \"longWeek\", \"longDOW\", \"longQuarter\", \"longDOQ\", \"longDOY\" );\n-        }\n-        else\n+            return parse(matcher, parseInt(longYear),\n+              \"longMonth\", \"longDay\", \"longWeek\", \"longDOW\", \"longQuarter\", \"longDOQ\", \"longDOY\");\n+        } else\n         {\n-            return parse( matcher, parseInt( matcher.group( \"shortYear\" ) ),\n-                    \"shortMonth\", \"shortDay\", \"shortWeek\", \"shortDOW\", \"shortQuarter\", \"shortDOQ\", \"shortDOY\" );\n+            return parse(matcher, parseInt(matcher.group(\"shortYear\")),\n+              \"shortMonth\", \"shortDay\", \"shortWeek\", \"shortDOW\", \"shortQuarter\", \"shortDOQ\", \"shortDOY\");\n         }\n     }\n \n     private static LocalDate parse(\n-            Matcher matcher, int year,\n-            String MONTH, String DAY, String WEEK, String DOW, String QUARTER, String DOQ, String DOY )\n+      Matcher matcher, int year,\n+      String MONTH, String DAY, String WEEK, String DOW, String QUARTER, String DOQ, String DOY)\n     {\n-        String month = matcher.group( MONTH );\n-        if ( month != null )\n+        String month = matcher.group(MONTH);\n+        if (month != null)\n         {\n-            return assertParsable( () -> LocalDate.of( year, parseInt( month ), optInt( matcher.group( DAY ) ) ) );\n+            return assertParsable(() -> LocalDate.of(year, parseInt(month), optInt(matcher.group(DAY))));\n         }\n-        String week = matcher.group( WEEK );\n-        if ( week != null )\n+        String week = matcher.group(WEEK);\n+        if (week != null)\n         {\n-            return assertParsable( () -> localWeekDate( year, parseInt( week ), optInt( matcher.group( DOW ) ) ) );\n+            return assertParsable(() -> localWeekDate(year, parseInt(week), optInt(matcher.group(DOW))));\n         }\n-        String quarter = matcher.group( QUARTER );\n-        if ( quarter != null )\n+        String quarter = matcher.group(QUARTER);\n+        if (quarter != null)\n         {\n             return assertParsable(\n-                    () -> localQuarterDate( year, parseInt( quarter ), optInt( matcher.group( DOQ ) ) ) );\n+              () -> localQuarterDate(year, parseInt(quarter), optInt(matcher.group(DOQ))));\n         }\n-        String doy = matcher.group( DOY );\n-        if ( doy != null )\n+        String doy = matcher.group(DOY);\n+        if (doy != null)\n         {\n-            return assertParsable( () -> LocalDate.ofYearDay( year, parseInt( doy ) ) );\n+            return assertParsable(() -> LocalDate.ofYearDay(year, parseInt(doy)));\n         }\n-        return assertParsable( () -> LocalDate.of( year, 1, 1 ) );\n+        return assertParsable(() -> LocalDate.of(year, 1, 1));\n     }\n \n-    private static DateValue parse( Matcher matcher )\n+    private static DateValue parse(Matcher matcher)\n     {\n-        return new DateValue( parseDate( matcher ) );\n+        return new DateValue(parseDate(matcher));\n     }\n \n-    private static int optInt( String value )\n+    private static int optInt(String value)\n     {\n-        return value == null ? 1 : parseInt( value );\n+        return value == null ? 1 : parseInt(value);\n     }\n \n-    private static LocalDate localWeekDate( int year, int week, int dayOfWeek )\n+    private static LocalDate localWeekDate(int year, int week, int dayOfWeek)\n     {\n-        LocalDate weekOne = LocalDate.of( year, 1, 4 ); // the fourth is guaranteed to be in week 1 by definition\n-        LocalDate withWeek = weekOne.with( IsoFields.WEEK_OF_WEEK_BASED_YEAR, week );\n+        LocalDate weekOne = LocalDate.of(year, 1, 4); // the fourth is guaranteed to be in week 1 by definition\n+        LocalDate withWeek = weekOne.with(IsoFields.WEEK_OF_WEEK_BASED_YEAR, week);\n         // the implementation of WEEK_OF_WEEK_BASED_YEAR uses addition to adjust the date, this means that it accepts\n         // week 53 of years that don't have 53 weeks, so we have to guard for this:\n-        if ( week == 53 && withWeek.get( IsoFields.WEEK_BASED_YEAR ) != year )\n+        if (week == 53 && withWeek.get(IsoFields.WEEK_BASED_YEAR) != year)\n         {\n             throw new InvalidArgumentException(\n-                    String.format( \"Year %d does not contain %d weeks.\", year, week ) );\n+              String.format(\"Year %d does not contain %d weeks.\", year, week));\n         }\n-        return withWeek.with( ChronoField.DAY_OF_WEEK, dayOfWeek );\n+        return withWeek.with(ChronoField.DAY_OF_WEEK, dayOfWeek);\n     }\n \n-    private static LocalDate localQuarterDate( int year, int quarter, int dayOfQuarter )\n+    private static LocalDate localQuarterDate(int year, int quarter, int dayOfQuarter)\n     {\n         // special handling for the range of Q1 and Q2, since they are shorter than Q3 and Q4\n-        if ( quarter == 2 && dayOfQuarter == 92 )\n+        if (quarter == 2 && dayOfQuarter == 92)\n         {\n-            throw new InvalidArgumentException( \"Quarter 2 only has 91 days.\" );\n+            throw new InvalidArgumentException(\"Quarter 2 only has 91 days.\");\n         }\n         // instantiate the yearDate now, because we use it to know if it is a leap year\n-        LocalDate yearDate = LocalDate.ofYearDay( year, dayOfQuarter ); // guess on the day\n-        if ( quarter == 1 && dayOfQuarter > 90 && (!yearDate.isLeapYear() || dayOfQuarter == 92) )\n+        LocalDate yearDate = LocalDate.ofYearDay(year, dayOfQuarter); // guess on the day\n+        if (quarter == 1 && dayOfQuarter > 90 && (!yearDate.isLeapYear() || dayOfQuarter == 92))\n         {\n-            throw new InvalidArgumentException( String.format(\n-                    \"Quarter 1 of %d only has %d days.\", year, yearDate.isLeapYear() ? 91 : 90 ) );\n+            throw new InvalidArgumentException(String.format(\n+              \"Quarter 1 of %d only has %d days.\", year, yearDate.isLeapYear() ? 91 : 90));\n         }\n         return yearDate\n-                .with( IsoFields.QUARTER_OF_YEAR, quarter )\n-                .with( IsoFields.DAY_OF_QUARTER, dayOfQuarter );\n+          .with(IsoFields.QUARTER_OF_YEAR, quarter)\n+          .with(IsoFields.DAY_OF_QUARTER, dayOfQuarter);\n     }\n \n     static final LocalDate DEFAULT_CALENDER_DATE = LocalDate\n-            .of( TemporalFields.year.defaultValue, TemporalFields.month.defaultValue, TemporalFields.day.defaultValue );\n+      .of(TemporalFields.year.defaultValue, TemporalFields.month.defaultValue, TemporalFields.day.defaultValue);\n \n     private static class DateBuilder extends Builder<DateValue>\n     {\n@@ -505,9 +495,9 @@ public final class DateValue extends TemporalValue<LocalDate,DateValue>\n             return false;\n         }\n \n-        DateBuilder( Supplier<ZoneId> defaultZone )\n+        DateBuilder(Supplier<ZoneId> defaultZone)\n         {\n-            super( defaultZone );\n+            super(defaultZone);\n         }\n \n         @Override\n@@ -522,49 +512,47 @@ public final class DateValue extends TemporalValue<LocalDate,DateValue>\n             return false;\n         }\n \n-        private LocalDate getDateOf( org.neo4j.values.AnyValue temporal )\n+        private LocalDate getDateOf(org.neo4j.values.AnyValue temporal)\n         {\n-            if ( temporal instanceof TemporalValue )\n+            if (temporal instanceof TemporalValue)\n             {\n                 TemporalValue v = (TemporalValue) temporal;\n                 return v.getDatePart();\n             }\n-            throw new InvalidArgumentException( String.format( \"Cannot construct date from: %s\", temporal ) );\n+            throw new InvalidArgumentException(String.format(\"Cannot construct date from: %s\", temporal));\n         }\n \n         @Override\n         public DateValue buildInternal()\n         {\n             LocalDate result;\n-            if ( fields.containsKey( TemporalFields.date ) )\n+            if (fields.containsKey(TemporalFields.date))\n             {\n-                result = getDateOf( fields.get( TemporalFields.date ) );\n-            }\n-            else if ( fields.containsKey( TemporalFields.week ) )\n+                result = getDateOf(fields.get(TemporalFields.date));\n+            } else if (fields.containsKey(TemporalFields.week))\n             {\n                 // Be sure to be in the start of the week based year (which can be later than 1st Jan)\n                 result = DEFAULT_CALENDER_DATE\n-                        .with( IsoFields.WEEK_BASED_YEAR,\n-                                safeCastIntegral( TemporalFields.year.name(), fields.get( TemporalFields.year ),\n-                                        TemporalFields.year.defaultValue ) )\n-                        .with( IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1 )\n-                        .with( ChronoField.DAY_OF_WEEK, 1 );\n-            }\n-            else\n+                  .with(IsoFields.WEEK_BASED_YEAR,\n+                    safeCastIntegral(TemporalFields.year.name(), fields.get(TemporalFields.year),\n+                      TemporalFields.year.defaultValue))\n+                  .with(IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1)\n+                  .with(ChronoField.DAY_OF_WEEK, 1);\n+            } else\n             {\n                 result = DEFAULT_CALENDER_DATE;\n             }\n-            result = assignAllFields( result );\n-            return date( result );\n+            result = assignAllFields(result);\n+            return date(result);\n         }\n \n-        DateValue selectDate( org.neo4j.values.AnyValue date )\n+        DateValue selectDate(org.neo4j.values.AnyValue date)\n         {\n-            if ( date instanceof DateValue )\n+            if (date instanceof DateValue)\n             {\n                 return (DateValue) date;\n             }\n-            return date( getDateOf( date ) );\n+            return date(getDateOf(date));\n         }\n     }\n \n",
            "diff_size": 180
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
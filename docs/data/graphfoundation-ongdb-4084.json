{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4084",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4084/DocumentationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4084/DocumentationProcessor.java\nindex 418bfe07897..f992a3d2fc7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4084/DocumentationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4084/DocumentationProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.annotations;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -32,23 +33,23 @@ import javax.lang.model.element.Element;\n import javax.lang.model.element.ExecutableElement;\n import javax.lang.model.element.TypeElement;\n \n-@SupportedSourceVersion( SourceVersion.RELEASE_8 )\n-@SupportedAnnotationTypes( \"org.neo4j.kernel.impl.annotations.Documented\" )\n+@SupportedSourceVersion(SourceVersion.RELEASE_8)\n+@SupportedAnnotationTypes(\"org.neo4j.kernel.impl.annotations.Documented\")\n public class DocumentationProcessor extends AnnotationProcessor\n {\n-    @Override\n-    protected void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n-            Map<? extends ExecutableElement,? extends AnnotationValue> values )\n+  @Override\n+  protected void process(TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n+                         Map<? extends ExecutableElement, ? extends AnnotationValue> values)\n+  {\n+    if (values.size() != 1)\n+    {\n+      error(annotated, annotation, \"Annotation values don't match the expectation\");\n+      return;\n+    }\n+    String value = (String) values.values().iterator().next().getValue();\n+    if (StringUtils.isBlank(value))\n     {\n-        if ( values.size() != 1 )\n-        {\n-            error( annotated, annotation, \"Annotation values don't match the expectation\" );\n-            return;\n-        }\n-        String value = (String) values.values().iterator().next().getValue();\n-        if ( StringUtils.isBlank( value ) )\n-        {\n-            error( annotated, annotation, \"Documentation not available for \" + annotated );\n-        }\n+      error(annotated, annotation, \"Documentation not available for \" + annotated);\n     }\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4084/DocumentationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4084/DocumentationProcessor.java\nindex 418bfe07897..d5d075d9d30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4084/DocumentationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4084/DocumentationProcessor.java\n@@ -37,18 +37,18 @@ import javax.lang.model.element.TypeElement;\n public class DocumentationProcessor extends AnnotationProcessor\n {\n     @Override\n-    protected void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n-            Map<? extends ExecutableElement,? extends AnnotationValue> values )\n+    protected void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation, Map<? extends ExecutableElement, ? extends AnnotationValue> values )\n     {\n         if ( values.size() != 1 )\n         {\n             error( annotated, annotation, \"Annotation values don't match the expectation\" );\n             return;\n         }\n-        String value = (String) values.values().iterator().next().getValue();\n+\n+String value = (String) values.values().iterator().next().getValue();\n         if ( StringUtils.isBlank( value ) )\n         {\n             error( annotated, annotation, \"Documentation not available for \" + annotated );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
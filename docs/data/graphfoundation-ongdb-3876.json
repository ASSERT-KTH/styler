{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3876",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3876/ExecutionMonitors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3876/ExecutionMonitors.java\nindex 9443d265ee3..5bfec3e93e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3876/ExecutionMonitors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3876/ExecutionMonitors.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.staging;\n \n import java.io.InputStream;\n@@ -30,53 +31,53 @@ import static org.neo4j.unsafe.impl.batchimport.staging.HumanUnderstandableExecu\n  */\n public class ExecutionMonitors\n {\n-    private ExecutionMonitors()\n-    {\n-        throw new AssertionError( \"No instances allowed\" );\n-    }\n+  private ExecutionMonitors()\n+  {\n+    throw new AssertionError(\"No instances allowed\");\n+  }\n \n-    public static ExecutionMonitor defaultVisible( JobScheduler jobScheduler )\n-    {\n-        return defaultVisible( System.in, jobScheduler );\n+  public static ExecutionMonitor defaultVisible(JobScheduler jobScheduler)\n+  {\n+    return defaultVisible(System.in, jobScheduler);\n+  }\n+\n+  public static ExecutionMonitor defaultVisible(InputStream in, JobScheduler jobScheduler)\n+  {\n+    ProgressRestoringMonitor monitor = new ProgressRestoringMonitor();\n+    return new HumanUnderstandableExecutionMonitor(NO_MONITOR, monitor);\n+  }\n+\n+  private static final ExecutionMonitor INVISIBLE = new ExecutionMonitor()\n+  {\n+    @Override\n+    public void start(StageExecution execution)\n+    {   // Do nothing\n     }\n \n-    public static ExecutionMonitor defaultVisible( InputStream in, JobScheduler jobScheduler )\n-    {\n-        ProgressRestoringMonitor monitor = new ProgressRestoringMonitor();\n-        return new HumanUnderstandableExecutionMonitor( NO_MONITOR, monitor );\n+    @Override\n+    public void end(StageExecution execution, long totalTimeMillis)\n+    {   // Do nothing\n     }\n \n-    private static final ExecutionMonitor INVISIBLE = new ExecutionMonitor()\n+    @Override\n+    public long nextCheckTime()\n     {\n-        @Override\n-        public void start( StageExecution execution )\n-        {   // Do nothing\n-        }\n-\n-        @Override\n-        public void end( StageExecution execution, long totalTimeMillis )\n-        {   // Do nothing\n-        }\n-\n-        @Override\n-        public long nextCheckTime()\n-        {\n-            return Long.MAX_VALUE;\n-        }\n-\n-        @Override\n-        public void check( StageExecution execution )\n-        {   // Do nothing\n-        }\n+      return Long.MAX_VALUE;\n+    }\n \n-        @Override\n-        public void done( boolean successful, long totalTimeMillis, String additionalInformation )\n-        {   // Do nothing\n-        }\n-    };\n+    @Override\n+    public void check(StageExecution execution)\n+    {   // Do nothing\n+    }\n \n-    public static ExecutionMonitor invisible()\n-    {\n-        return INVISIBLE;\n+    @Override\n+    public void done(boolean successful, long totalTimeMillis, String additionalInformation)\n+    {   // Do nothing\n     }\n+  };\n+\n+  public static ExecutionMonitor invisible()\n+  {\n+    return INVISIBLE;\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3876/ExecutionMonitors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3876/ExecutionMonitors.java\nindex 9443d265ee3..23a7a976cda 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3876/ExecutionMonitors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3876/ExecutionMonitors.java\n@@ -50,12 +50,14 @@ public class ExecutionMonitors\n     {\n         @Override\n         public void start( StageExecution execution )\n-        {   // Do nothing\n+        {\n+    // Do nothing\n         }\n \n         @Override\n         public void end( StageExecution execution, long totalTimeMillis )\n-        {   // Do nothing\n+        {\n+    // Do nothing\n         }\n \n         @Override\n@@ -66,12 +68,14 @@ public class ExecutionMonitors\n \n         @Override\n         public void check( StageExecution execution )\n-        {   // Do nothing\n+        {\n+    // Do nothing\n         }\n \n         @Override\n         public void done( boolean successful, long totalTimeMillis, String additionalInformation )\n-        {   // Do nothing\n+        {\n+    // Do nothing\n         }\n     };\n \n@@ -79,4 +83,4 @@ public class ExecutionMonitors\n     {\n         return INVISIBLE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
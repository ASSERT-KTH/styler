{
    "project_name": "EMResearch-EMB",
    "error_id": "106",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 139).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n    if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n      throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/106/YMDDateCheckFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/106/YMDDateCheckFilter.java\nindex 6300dea5894..795e366c172 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/106/YMDDateCheckFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/106/YMDDateCheckFilter.java\n@@ -16,6 +16,7 @@\n  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301\n  * USA\n  */\n+\n package org.languagetool.rules.en;\n \n import org.languagetool.AnalyzedTokenReadings;\n@@ -26,18 +27,20 @@ import java.util.Map;\n \n /**\n  * Date filter that expects a 'date' argument in the format 'yyyy-mm-dd'.\n+ *\n  * @since 3.2\n  */\n public class YMDDateCheckFilter extends DateCheckFilter {\n \n-  private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n+    private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n \n-  @Override\n-  public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n-    if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n-      throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n+    @Override\n+    public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos,\n+                                     AnalyzedTokenReadings[] patternTokens) {\n+        if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n+            throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n+        }\n+        return super.acceptRuleMatch(match, ymdDateHelper.parseDate(args), patternTokenPos, patternTokens);\n     }\n-    return super.acceptRuleMatch(match, ymdDateHelper.parseDate(args), patternTokenPos, patternTokens);\n-  }\n \n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/106/YMDDateCheckFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/106/YMDDateCheckFilter.java\nindex 6300dea5894..e79ed40ade2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/106/YMDDateCheckFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/106/YMDDateCheckFilter.java\n@@ -40,4 +40,4 @@ public class YMDDateCheckFilter extends DateCheckFilter {\n     return super.acceptRuleMatch(match, ymdDateHelper.parseDate(args), patternTokenPos, patternTokens);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/106/YMDDateCheckFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/106/YMDDateCheckFilter.java\nindex 6300dea5894..c8fd7196915 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/106/YMDDateCheckFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/106/YMDDateCheckFilter.java\n@@ -21,23 +21,24 @@ package org.languagetool.rules.en;\n import org.languagetool.AnalyzedTokenReadings;\n import org.languagetool.rules.RuleMatch;\n import org.languagetool.rules.YMDDateHelper;\n-\n import java.util.Map;\n \n /**\n  * Date filter that expects a 'date' argument in the format 'yyyy-mm-dd'.\n  * @since 3.2\n  */\n+\n+\n public class YMDDateCheckFilter extends DateCheckFilter {\n \n-  private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n+    private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n \n-  @Override\n-  public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n-    if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n-      throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n+    @Override\n+    public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n+        if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n+            throw new RuntimeException(\"Set only 'weekDay' and 'date' for \"\n+                + YMDDateCheckFilter.class.getSimpleName());\n+        }\n+        return super.acceptRuleMatch(match, ymdDateHelper.parseDate(args), patternTokenPos, patternTokens);\n     }\n-    return super.acceptRuleMatch(match, ymdDateHelper.parseDate(args), patternTokenPos, patternTokens);\n-  }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
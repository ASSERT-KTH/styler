{
    "project_name": "Angel-ML-angel",
    "error_id": "842",
    "information": {
        "errors": [
            {
                "line": "54",
                "severity": "error",
                "message": "No trailing whitespace allowed.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "  /**\n   * get gradient over each of predictions, given existing information.\n   * \n   * @param preds: prediction of current round\n   * @param dataStore information about labels, weights, groups in rank\n   * @param iteration current iteration number. return:_gpair output of get gradient, saves gradient",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/842/SoftmaxMultiClassObj.java\nindex f706e79aba4..7735a9bc799 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/842/SoftmaxMultiClassObj.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.ml.objective;\n \n import com.tencent.angel.ml.RegTree.RegTDataStore;\n@@ -51,11 +52,11 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n \n   /**\n    * get gradient over each of predictions, given existing information.\n-   * \n-   * @param preds: prediction of current round\n+   *\n+   * @param preds:    prediction of current round\n    * @param dataStore information about labels, weights, groups in rank\n    * @param iteration current iteration number. return:_gpair output of get gradient, saves gradient\n-   *        and second order gradient in\n+   *                  and second order gradient in\n    */\n   @Override\n   public List<GradPair> calGrad(float[] preds, RegTDataStore dataStore, int iteration) {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/842/SoftmaxMultiClassObj.java\nindex f706e79aba4..bacf1542145 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/842/SoftmaxMultiClassObj.java\n@@ -88,7 +88,7 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n     if (labelError >= 0 && labelError < numClass) {\n       LOG.error(String.format(\"SoftmaxMultiClassObj: label must be in [0, num_class), \"\n           + \"numClass = %d, but found %d in label\", numClass, labelError));\n-    }\n+  }\n     return rec;\n   }\n \n@@ -150,4 +150,4 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n   public float prob2Margin(float base_score) {\n     return 0;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/842/SoftmaxMultiClassObj.java\nindex f706e79aba4..4e5a945798d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/842/SoftmaxMultiClassObj.java\n@@ -22,7 +22,6 @@ import com.tencent.angel.ml.param.RegTParam;\n import com.tencent.angel.ml.utils.MathUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -36,6 +35,7 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n   private static final Log LOG = LogFactory.getLog(SoftmaxMultiClassObj.class);\n \n   public RegTParam param;\n+\n   public int numClass;\n   private boolean outputProb;\n \n@@ -57,6 +57,7 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n    * @param iteration current iteration number. return:_gpair output of get gradient, saves gradient\n    *        and second order gradient in\n    */\n+\n   @Override\n   public List<GradPair> calGrad(float[] preds, RegTDataStore dataStore, int iteration) {\n     assert preds.length == this.numClass * dataStore.labels.length;\n@@ -67,6 +68,7 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n     for (int insIdx = 0; insIdx < ndata; insIdx++) {\n       System.arraycopy(preds, insIdx * numClass, tmp, 0, numClass);\n       MathUtils.softmax(tmp);\n+\n       int label = (int) dataStore.labels[insIdx];\n       if (label < 0 || label >= numClass) {\n         labelError = label;\n@@ -85,9 +87,9 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n         }\n       }\n     }\n+\n     if (labelError >= 0 && labelError < numClass) {\n-      LOG.error(String.format(\"SoftmaxMultiClassObj: label must be in [0, num_class), \"\n-          + \"numClass = %d, but found %d in label\", numClass, labelError));\n+      LOG.error(String.format(\"SoftmaxMultiClassObj: label must be in [0, num_class), \" + \"numClass = %d, but found %d in label\", numClass, labelError));\n     }\n     return rec;\n   }\n@@ -96,11 +98,11 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n     List<Float> rec = new ArrayList<Float>();\n     int ndata = preds.size() / numClass;\n     float[] tmp = new float[numClass];\n-\n     for (int insIdx = 0; insIdx < ndata; insIdx++) {\n       for (int k = 0; k < numClass; k++) {\n         tmp[k] = preds.get(insIdx * numClass + k);\n       }\n+\n       if (!prob) {\n         rec.add((float) MathUtils.findMaxIndex(tmp));\n       } else {\n@@ -124,6 +126,7 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n    *\n    * @param preds\n    */\n+\n   @Override\n   public void transPred(List<Float> preds) {\n     this.transform(preds, this.outputProb);\n@@ -135,6 +138,7 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n    *\n    * @param preds\n    */\n+\n   @Override\n   public void transEval(List<Float> preds) {\n     this.transform(preds, true);\n@@ -146,8 +150,9 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n    *\n    * @param base_score\n    */\n+\n   @Override\n   public float prob2Margin(float base_score) {\n     return 0;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Annotation 'Override' have incorrect indentation level 0, expected level should be 5.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/842/SoftmaxMultiClassObj.java\nindex f706e79aba4..d97c9e04bb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/842/SoftmaxMultiClassObj.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/842/SoftmaxMultiClassObj.java\n@@ -47,17 +47,15 @@ public class SoftmaxMultiClassObj implements ObjFunc {\n \n   public SoftmaxMultiClassObj(RegTParam param) {\n     this(param, true);\n-  }\n-\n-  /**\n+  }/**\n    * get gradient over each of predictions, given existing information.\n    * \n    * @param preds: prediction of current round\n    * @param dataStore information about labels, weights, groups in rank\n    * @param iteration current iteration number. return:_gpair output of get gradient, saves gradient\n    *        and second order gradient in\n-   */\n-  @Override\n+   */@Override\n+@Override\n   public List<GradPair> calGrad(float[] preds, RegTDataStore dataStore, int iteration) {\n     assert preds.length == this.numClass * dataStore.labels.length;\n     List<GradPair> rec = new ArrayList<GradPair>();\n",
            "diff_size": 5
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
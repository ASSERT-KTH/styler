{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1230",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.entity;\n\nimport gov.hhs.fha.nhinc.docquery.orchestration.OrchestrationContextFactory;\nimport gov.hhs.fha.nhinc.nhinclib.NhincConstants;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1230/OutboundDocQueryDelegate.java\nindex 3e76bb48871..5c3ca3e4779 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1230/OutboundDocQueryDelegate.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docquery.entity;\n-\n import gov.hhs.fha.nhinc.docquery.orchestration.OrchestrationContextFactory;\n import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.fha.nhinc.orchestration.Orchestratable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1230/OutboundDocQueryDelegate.java\nindex 3e76bb48871..df582ec8818 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1230/OutboundDocQueryDelegate.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity;\n \n import gov.hhs.fha.nhinc.docquery.orchestration.OrchestrationContextFactory;\n@@ -41,69 +42,69 @@ import org.slf4j.LoggerFactory;\n  */\n public class OutboundDocQueryDelegate implements OutboundDelegate {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(OutboundDocQueryDelegate.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(OutboundDocQueryDelegate.class);\n \n-    /**\n-     * Default constructor.\n-     */\n-    public OutboundDocQueryDelegate() {\n-    }\n+  /**\n+   * Default constructor.\n+   */\n+  public OutboundDocQueryDelegate() {\n+  }\n \n-    @Override\n-    public Orchestratable process(Orchestratable message) {\n-        LOG.debug(\"NhinDocQueryDelegate::process Orchestratable\");\n-        if (message == null) {\n-            LOG.error(\"NhinDocQueryDelegate Orchestratable was null!!!\");\n-            return null;\n-        }\n-        if (message instanceof OutboundDocQueryOrchestratable) {\n-            return process((OutboundOrchestratable) message);\n-        }\n-        return null;\n+  @Override\n+  public Orchestratable process(Orchestratable message) {\n+    LOG.debug(\"NhinDocQueryDelegate::process Orchestratable\");\n+    if (message == null) {\n+      LOG.error(\"NhinDocQueryDelegate Orchestratable was null!!!\");\n+      return null;\n     }\n+    if (message instanceof OutboundDocQueryOrchestratable) {\n+      return process((OutboundOrchestratable) message);\n+    }\n+    return null;\n+  }\n \n-    @Override\n-    public OutboundOrchestratable process(OutboundOrchestratable message) {\n-        if (message instanceof OutboundDocQueryOrchestratable) {\n-            return process((OutboundDocQueryOrchestratable) message);\n-        }\n-        LOG.error(\"NhinDocQueryDelegate message is not an instance of EntityDocQueryOrchestratable!\");\n-        return null;\n+  @Override\n+  public OutboundOrchestratable process(OutboundOrchestratable message) {\n+    if (message instanceof OutboundDocQueryOrchestratable) {\n+      return process((OutboundDocQueryOrchestratable) message);\n     }\n+    LOG.error(\"NhinDocQueryDelegate message is not an instance of EntityDocQueryOrchestratable!\");\n+    return null;\n+  }\n \n-    /**\n-     * @param message Orchestarted message send to outbound.\n-     * @return response Response received from Nhin.\n-     */\n-    public OutboundDocQueryOrchestratable process(OutboundDocQueryOrchestratable message) {\n-        LOG.debug(\"NhinDocQueryDelegate::process EntityDocQueryOrchestratable\");\n+  /**\n+   * @param message Orchestarted message send to outbound.\n+   * @return response Response received from Nhin.\n+   */\n+  public OutboundDocQueryOrchestratable process(OutboundDocQueryOrchestratable message) {\n+    LOG.debug(\"NhinDocQueryDelegate::process EntityDocQueryOrchestratable\");\n \n-        OutboundDocQueryOrchestrationContextBuilder contextBuilder\n-            = (OutboundDocQueryOrchestrationContextBuilder) OrchestrationContextFactory.getInstance().\n-            getBuilder(message.getTarget().getHomeCommunity(), NhincConstants.NHIN_SERVICE_NAMES.DOCUMENT_QUERY);\n-        contextBuilder.setAssertionType(message.getAssertion());\n-        contextBuilder.setRequest(message.getRequest());\n-        contextBuilder.setTarget(message.getTarget());\n-        contextBuilder.setServiceName(message.getServiceName());\n-        contextBuilder.setPolicyTransformer(message.getPolicyTransformer());\n-        contextBuilder.setProcessor(message.getResponseProcessor());\n+    OutboundDocQueryOrchestrationContextBuilder contextBuilder\n+        = (OutboundDocQueryOrchestrationContextBuilder) OrchestrationContextFactory.getInstance().\n+        getBuilder(message.getTarget().getHomeCommunity(), NhincConstants.NHIN_SERVICE_NAMES.DOCUMENT_QUERY);\n+    contextBuilder.setAssertionType(message.getAssertion());\n+    contextBuilder.setRequest(message.getRequest());\n+    contextBuilder.setTarget(message.getTarget());\n+    contextBuilder.setServiceName(message.getServiceName());\n+    contextBuilder.setPolicyTransformer(message.getPolicyTransformer());\n+    contextBuilder.setProcessor(message.getResponseProcessor());\n \n-        OutboundDocQueryOrchestratable response = (OutboundDocQueryOrchestratable) contextBuilder.build().execute();\n+    OutboundDocQueryOrchestratable response = (OutboundDocQueryOrchestratable) contextBuilder.build().execute();\n \n-        if (response instanceof OutboundDocQueryOrchestratable_a0) {\n-            LOG.debug(\"NhinDocQueryDelegate::process returning a0 result\");\n-        } else if (response instanceof OutboundDocQueryOrchestratable_a1) {\n-            LOG.debug(\"NhinDocQueryDelegate::process returning a1 result\");\n-        } else {\n-            LOG.error(\"NhinDocQueryDelegate::process has unknown response!!!\");\n-        }\n-        return response;\n+    if (response instanceof OutboundDocQueryOrchestratable_a0) {\n+      LOG.debug(\"NhinDocQueryDelegate::process returning a0 result\");\n+    } else if (response instanceof OutboundDocQueryOrchestratable_a1) {\n+      LOG.debug(\"NhinDocQueryDelegate::process returning a1 result\");\n+    } else {\n+      LOG.error(\"NhinDocQueryDelegate::process has unknown response!!!\");\n     }\n+    return response;\n+  }\n \n-    @Override\n-    public void createErrorResponse(OutboundOrchestratable message, String error) {\n-        // TODO Auto-generated method stub\n+  @Override\n+  public void createErrorResponse(OutboundOrchestratable message, String error) {\n+    // TODO Auto-generated method stub\n \n-    }\n+  }\n \n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1230/OutboundDocQueryDelegate.java\nindex 3e76bb48871..e5883beece2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1230/OutboundDocQueryDelegate.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity;\n \n import gov.hhs.fha.nhinc.docquery.orchestration.OrchestrationContextFactory;\n@@ -48,17 +49,18 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n      */\n     public OutboundDocQueryDelegate() {\n     }\n-\n-    @Override\n+@Override\n     public Orchestratable process(Orchestratable message) {\n         LOG.debug(\"NhinDocQueryDelegate::process Orchestratable\");\n         if (message == null) {\n             LOG.error(\"NhinDocQueryDelegate Orchestratable was null!!!\");\n-            return null;\n+\n+return null;\n         }\n         if (message instanceof OutboundDocQueryOrchestratable) {\n             return process((OutboundOrchestratable) message);\n-        }\n+\n+    }\n         return null;\n     }\n \n@@ -68,7 +70,8 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n             return process((OutboundDocQueryOrchestratable) message);\n         }\n         LOG.error(\"NhinDocQueryDelegate message is not an instance of EntityDocQueryOrchestratable!\");\n-        return null;\n+\n+return null;\n     }\n \n     /**\n@@ -78,10 +81,8 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n     public OutboundDocQueryOrchestratable process(OutboundDocQueryOrchestratable message) {\n         LOG.debug(\"NhinDocQueryDelegate::process EntityDocQueryOrchestratable\");\n \n-        OutboundDocQueryOrchestrationContextBuilder contextBuilder\n-            = (OutboundDocQueryOrchestrationContextBuilder) OrchestrationContextFactory.getInstance().\n-            getBuilder(message.getTarget().getHomeCommunity(), NhincConstants.NHIN_SERVICE_NAMES.DOCUMENT_QUERY);\n-        contextBuilder.setAssertionType(message.getAssertion());\n+        OutboundDocQueryOrchestrationContextBuilder contextBuilder = (OutboundDocQueryOrchestrationContextBuilder) OrchestrationContextFactory.getInstance().getBuilder(message.getTarget().getHomeCommunity(), NhincConstants.NHIN_SERVICE_NAMES.DOCUMENT_QUERY);\n+contextBuilder.setAssertionType(message.getAssertion());\n         contextBuilder.setRequest(message.getRequest());\n         contextBuilder.setTarget(message.getTarget());\n         contextBuilder.setServiceName(message.getServiceName());\n@@ -89,14 +90,14 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n         contextBuilder.setProcessor(message.getResponseProcessor());\n \n         OutboundDocQueryOrchestratable response = (OutboundDocQueryOrchestratable) contextBuilder.build().execute();\n-\n-        if (response instanceof OutboundDocQueryOrchestratable_a0) {\n+if (response instanceof OutboundDocQueryOrchestratable_a0) {\n             LOG.debug(\"NhinDocQueryDelegate::process returning a0 result\");\n         } else if (response instanceof OutboundDocQueryOrchestratable_a1) {\n             LOG.debug(\"NhinDocQueryDelegate::process returning a1 result\");\n         } else {\n             LOG.error(\"NhinDocQueryDelegate::process has unknown response!!!\");\n-        }\n+\n+    }\n         return response;\n     }\n \n@@ -106,4 +107,4 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "101",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "8",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "6",
                    "severity": "error",
                    "message": "'}' at column 6 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1230/OutboundDocQueryDelegate.java\nindex 3e76bb48871..c1cba86ee7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1230/OutboundDocQueryDelegate.java\n@@ -39,6 +39,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author paul.eftis\n  */\n+\n+\n public class OutboundDocQueryDelegate implements OutboundDelegate {\n \n     private static final Logger LOG = LoggerFactory.getLogger(OutboundDocQueryDelegate.class);\n@@ -46,8 +48,10 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n     /**\n      * Default constructor.\n      */\n+\n     public OutboundDocQueryDelegate() {\n-    }\n+}\n+\n \n     @Override\n     public Orchestratable process(Orchestratable message) {\n@@ -57,15 +61,18 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n             return null;\n         }\n         if (message instanceof OutboundDocQueryOrchestratable) {\n-            return process((OutboundOrchestratable) message);\n+            return process((OutboundOrchestratable)\n+                               message);\n         }\n         return null;\n     }\n \n+\n     @Override\n     public OutboundOrchestratable process(OutboundOrchestratable message) {\n         if (message instanceof OutboundDocQueryOrchestratable) {\n-            return process((OutboundDocQueryOrchestratable) message);\n+            return process((OutboundDocQueryOrchestratable)\n+                               message);\n         }\n         LOG.error(\"NhinDocQueryDelegate message is not an instance of EntityDocQueryOrchestratable!\");\n         return null;\n@@ -75,35 +82,40 @@ public class OutboundDocQueryDelegate implements OutboundDelegate {\n      * @param message Orchestarted message send to outbound.\n      * @return response Response received from Nhin.\n      */\n+\n+\n     public OutboundDocQueryOrchestratable process(OutboundDocQueryOrchestratable message) {\n         LOG.debug(\"NhinDocQueryDelegate::process EntityDocQueryOrchestratable\");\n-\n-        OutboundDocQueryOrchestrationContextBuilder contextBuilder\n-            = (OutboundDocQueryOrchestrationContextBuilder) OrchestrationContextFactory.getInstance().\n-            getBuilder(message.getTarget().getHomeCommunity(), NhincConstants.NHIN_SERVICE_NAMES.DOCUMENT_QUERY);\n+        OutboundDocQueryOrchestrationContextBuilder contextBuilder = (OutboundDocQueryOrchestrationContextBuilder)\n+                                                                         OrchestrationContextFactory.getInstance().getBuilder(message.getTarget().getHomeCommunity(), NhincConstants.NHIN_SERVICE_NAMES.DOCUMENT_QUERY);\n         contextBuilder.setAssertionType(message.getAssertion());\n         contextBuilder.setRequest(message.getRequest());\n         contextBuilder.setTarget(message.getTarget());\n         contextBuilder.setServiceName(message.getServiceName());\n         contextBuilder.setPolicyTransformer(message.getPolicyTransformer());\n         contextBuilder.setProcessor(message.getResponseProcessor());\n-\n-        OutboundDocQueryOrchestratable response = (OutboundDocQueryOrchestratable) contextBuilder.build().execute();\n-\n-        if (response instanceof OutboundDocQueryOrchestratable_a0) {\n+        OutboundDocQueryOrchestratable response = (OutboundDocQueryOrchestratable)\n+                                                      contextBuilder.build().execute();\n+        if(response instanceof OutboundDocQueryOrchestratable_a0) {\n             LOG.debug(\"NhinDocQueryDelegate::process returning a0 result\");\n-        } else if (response instanceof OutboundDocQueryOrchestratable_a1) {\n-            LOG.debug(\"NhinDocQueryDelegate::process returning a1 result\");\n-        } else {\n-            LOG.error(\"NhinDocQueryDelegate::process has unknown response!!!\");\n         }\n+\n+\n+else if(response instanceof OutboundDocQueryOrchestratable_a1) {\n+         LOG.debug(\"NhinDocQueryDelegate::process returning a1 result\");\n+     }\n+\n+\n+        else {\n+         LOG.error(\"NhinDocQueryDelegate::process has unknown response!!!\");\n+     }\n         return response;\n     }\n \n+\n     @Override\n     public void createErrorResponse(OutboundOrchestratable message, String error) {\n         // TODO Auto-generated method stub\n-\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1230/OutboundDocQueryDelegate.java\nindex 3e76bb48871..5c3ca3e4779 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1230/OutboundDocQueryDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1230/OutboundDocQueryDelegate.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docquery.entity;\n-\n import gov.hhs.fha.nhinc.docquery.orchestration.OrchestrationContextFactory;\n import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.fha.nhinc.orchestration.Orchestratable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
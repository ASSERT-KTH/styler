{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4121",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4121/SocketTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4121/SocketTransport.java\nindex e6610061755..409b6010288 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4121/SocketTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4121/SocketTransport.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport;\n \n import io.netty.buffer.PooledByteBufAllocator;\n@@ -33,57 +34,57 @@ import org.neo4j.logging.LogProvider;\n  */\n public class SocketTransport implements NettyServer.ProtocolInitializer\n {\n-    private final String connector;\n-    private final ListenSocketAddress address;\n-    private final SslContext sslCtx;\n-    private final boolean encryptionRequired;\n-    private final LogProvider logging;\n-    private final BoltMessageLogging boltLogging;\n-    private final TransportThrottleGroup throttleGroup;\n-    private final BoltProtocolPipelineInstallerFactory handlerFactory;\n+  private final String connector;\n+  private final ListenSocketAddress address;\n+  private final SslContext sslCtx;\n+  private final boolean encryptionRequired;\n+  private final LogProvider logging;\n+  private final BoltMessageLogging boltLogging;\n+  private final TransportThrottleGroup throttleGroup;\n+  private final BoltProtocolPipelineInstallerFactory handlerFactory;\n \n-    public SocketTransport( String connector, ListenSocketAddress address, SslContext sslCtx, boolean encryptionRequired,\n-                            LogProvider logging, BoltMessageLogging boltLogging,\n-                            TransportThrottleGroup throttleGroup,\n-                            BoltProtocolPipelineInstallerFactory handlerFactory )\n-    {\n-        this.connector = connector;\n-        this.address = address;\n-        this.sslCtx = sslCtx;\n-        this.encryptionRequired = encryptionRequired;\n-        this.logging = logging;\n-        this.boltLogging = boltLogging;\n-        this.throttleGroup = throttleGroup;\n-        this.handlerFactory = handlerFactory;\n-    }\n+  public SocketTransport(String connector, ListenSocketAddress address, SslContext sslCtx, boolean encryptionRequired,\n+                         LogProvider logging, BoltMessageLogging boltLogging,\n+                         TransportThrottleGroup throttleGroup,\n+                         BoltProtocolPipelineInstallerFactory handlerFactory)\n+  {\n+    this.connector = connector;\n+    this.address = address;\n+    this.sslCtx = sslCtx;\n+    this.encryptionRequired = encryptionRequired;\n+    this.logging = logging;\n+    this.boltLogging = boltLogging;\n+    this.throttleGroup = throttleGroup;\n+    this.handlerFactory = handlerFactory;\n+  }\n \n-    @Override\n-    public ChannelInitializer<SocketChannel> channelInitializer()\n+  @Override\n+  public ChannelInitializer<SocketChannel> channelInitializer()\n+  {\n+    return new ChannelInitializer<SocketChannel>()\n     {\n-        return new ChannelInitializer<SocketChannel>()\n-        {\n-            @Override\n-            public void initChannel( SocketChannel ch )\n-            {\n-                ch.config().setAllocator( PooledByteBufAllocator.DEFAULT );\n+      @Override\n+      public void initChannel(SocketChannel ch)\n+      {\n+        ch.config().setAllocator(PooledByteBufAllocator.DEFAULT);\n \n-                // install throttles\n-                throttleGroup.install( ch );\n+        // install throttles\n+        throttleGroup.install(ch);\n \n-                // add a close listener that will uninstall throttles\n-                ch.closeFuture().addListener( future -> throttleGroup.uninstall( ch ) );\n+        // add a close listener that will uninstall throttles\n+        ch.closeFuture().addListener(future -> throttleGroup.uninstall(ch));\n \n-                TransportSelectionHandler transportSelectionHandler = new TransportSelectionHandler( connector, sslCtx,\n-                        encryptionRequired, false, logging, handlerFactory, boltLogging );\n+        TransportSelectionHandler transportSelectionHandler = new TransportSelectionHandler(connector, sslCtx,\n+            encryptionRequired, false, logging, handlerFactory, boltLogging);\n \n-                ch.pipeline().addLast( transportSelectionHandler );\n-            }\n-        };\n-    }\n+        ch.pipeline().addLast(transportSelectionHandler);\n+      }\n+    };\n+  }\n \n-    @Override\n-    public ListenSocketAddress address()\n-    {\n-        return address;\n-    }\n+  @Override\n+  public ListenSocketAddress address()\n+  {\n+    return address;\n+  }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4121/SocketTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4121/SocketTransport.java\nindex e6610061755..125baf69f2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4121/SocketTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4121/SocketTransport.java\n@@ -42,11 +42,10 @@ public class SocketTransport implements NettyServer.ProtocolInitializer\n     private final TransportThrottleGroup throttleGroup;\n     private final BoltProtocolPipelineInstallerFactory handlerFactory;\n \n-    public SocketTransport( String connector, ListenSocketAddress address, SslContext sslCtx, boolean encryptionRequired,\n-                            LogProvider logging, BoltMessageLogging boltLogging,\n+    public SocketTransport( String connector, ListenSocketAddress address, SslContext sslCtx, boolean encryptionRequired, LogProvider logging, BoltMessageLogging boltLogging,\n                             TransportThrottleGroup throttleGroup,\n                             BoltProtocolPipelineInstallerFactory handlerFactory )\n-    {\n+{\n         this.connector = connector;\n         this.address = address;\n         this.sslCtx = sslCtx;\n@@ -72,11 +71,9 @@ public class SocketTransport implements NettyServer.ProtocolInitializer\n \n                 // add a close listener that will uninstall throttles\n                 ch.closeFuture().addListener( future -> throttleGroup.uninstall( ch ) );\n-\n-                TransportSelectionHandler transportSelectionHandler = new TransportSelectionHandler( connector, sslCtx,\n+TransportSelectionHandler transportSelectionHandler = new TransportSelectionHandler( connector, sslCtx,\n                         encryptionRequired, false, logging, handlerFactory, boltLogging );\n-\n-                ch.pipeline().addLast( transportSelectionHandler );\n+ch.pipeline().addLast( transportSelectionHandler );\n             }\n         };\n     }\n@@ -86,4 +83,4 @@ public class SocketTransport implements NettyServer.ProtocolInitializer\n     {\n         return address;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
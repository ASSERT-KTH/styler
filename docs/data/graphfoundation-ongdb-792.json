{
    "project_name": "graphfoundation-ongdb",
    "error_id": "792",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/792/InstanceSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/792/InstanceSelector.java\nindex 4339bff628b..9e5e97450d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/792/InstanceSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/792/InstanceSelector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import org.neo4j.function.ThrowingConsumer;\n@@ -25,131 +26,130 @@ import org.neo4j.helpers.Exceptions;\n \n /**\n  * Selects an instance given a certain slot.\n+ *\n  * @param <T> type of instance\n  */\n class InstanceSelector<T>\n {\n-    final T[] instances;\n-    boolean closed;\n+  final T[] instances;\n+  boolean closed;\n \n-    /**\n-     * @param instances array of fully instantiated instances\n-     */\n-    InstanceSelector( T[] instances )\n+  /**\n+   * @param instances array of fully instantiated instances\n+   */\n+  InstanceSelector(T[] instances)\n+  {\n+    this.instances = instances;\n+  }\n+\n+  /**\n+   * Returns the instance at the given slot.\n+   *\n+   * @param slot slot number to return instance for.\n+   * @return the instance at the given {@code slot}.\n+   */\n+  T select(int slot)\n+  {\n+    if (instances[slot] == null)\n     {\n-        this.instances = instances;\n+      throw new IllegalStateException(\"Instance is not instantiated\");\n     }\n+    return instances[slot];\n+  }\n \n-    /**\n-     * Returns the instance at the given slot.\n-     *\n-     * @param slot slot number to return instance for.\n-     * @return the instance at the given {@code slot}.\n-     */\n-    T select( int slot )\n+  /**\n+   * Convenience method typically for calling a method on each of the instances, a method that returns another type of instance.\n+   * Even called on instances that haven't been instantiated yet. All those created instances are put into the provided array and returned.\n+   *\n+   * @param target    array to put the created instances into, also returned.\n+   * @param converter {@link ThrowingFunction} which converts from the source to target instance.\n+   * @param <R>       type of returned instance.\n+   * @param <E>       type of exception that converter may throw.\n+   * @return the target array which was passed in, now populated.\n+   * @throws E exception from converter.\n+   */\n+  <R, E extends Exception> R[] instancesAs(R[] target, ThrowingFunction<T, R, E> converter) throws E\n+  {\n+    for (int slot = 0; slot < instances.length; slot++)\n     {\n-        if ( instances[slot] == null )\n-        {\n-            throw new IllegalStateException( \"Instance is not instantiated\" );\n-        }\n-        return instances[slot];\n+      target[slot] = converter.apply(select(slot));\n     }\n+    return target;\n+  }\n \n-    /**\n-     * Convenience method typically for calling a method on each of the instances, a method that returns another type of instance.\n-     * Even called on instances that haven't been instantiated yet. All those created instances are put into the provided array and returned.\n-     *\n-     * @param target array to put the created instances into, also returned.\n-     * @param converter {@link ThrowingFunction} which converts from the source to target instance.\n-     * @param <R> type of returned instance.\n-     * @param <E> type of exception that converter may throw.\n-     * @return the target array which was passed in, now populated.\n-     * @throws E exception from converter.\n-     */\n-    <R,E extends Exception> R[] instancesAs( R[] target, ThrowingFunction<T,R,E> converter ) throws E\n+  /**\n+   * Convenience method for doing something to all instances, even those that haven't already been instantiated.\n+   *\n+   * @param consumer {@link ThrowingConsumer} which performs some action on an instance.\n+   * @param <E>      type of exception the action may throw.\n+   * @throws E exception from action.\n+   */\n+  <E extends Exception> void forAll(ThrowingConsumer<T, E> consumer) throws E\n+  {\n+    E exception = null;\n+    for (int slot = 0; slot < instances.length; slot++)\n     {\n-        for ( int slot = 0; slot < instances.length; slot++ )\n-        {\n-            target[slot] = converter.apply( select( slot ) );\n-        }\n-        return target;\n+      exception = consume(exception, consumer, select(slot));\n     }\n-\n-    /**\n-     * Convenience method for doing something to all instances, even those that haven't already been instantiated.\n-     *\n-     * @param consumer {@link ThrowingConsumer} which performs some action on an instance.\n-     * @param <E> type of exception the action may throw.\n-     * @throws E exception from action.\n-     */\n-    <E extends Exception> void forAll( ThrowingConsumer<T,E> consumer ) throws E\n+    if (exception != null)\n     {\n-        E exception = null;\n-        for ( int slot = 0; slot < instances.length; slot++ )\n-        {\n-            exception = consume( exception, consumer, select( slot ) );\n-        }\n-        if ( exception != null )\n-        {\n-            throw exception;\n-        }\n+      throw exception;\n     }\n+  }\n \n-    /**\n-     * Perform a final action on instantiated instances and then closes this selector, preventing further instantiation.\n-     *\n-     * @param consumer {@link ThrowingConsumer} which performs some action on an instance.\n-     * @param <E> type of exception the action may throw.\n-     * @throws E exception from action.\n-     */\n-    <E extends Exception> void close( ThrowingConsumer<T,E> consumer ) throws E\n+  /**\n+   * Perform a final action on instantiated instances and then closes this selector, preventing further instantiation.\n+   *\n+   * @param consumer {@link ThrowingConsumer} which performs some action on an instance.\n+   * @param <E>      type of exception the action may throw.\n+   * @throws E exception from action.\n+   */\n+  <E extends Exception> void close(ThrowingConsumer<T, E> consumer) throws E\n+  {\n+    if (!closed)\n     {\n-        if ( !closed )\n-        {\n-            try\n-            {\n-                forInstantiated( consumer );\n-            }\n-            finally\n-            {\n-                closed = true;\n-            }\n-        }\n+      try\n+      {\n+        forInstantiated(consumer);\n+      } finally\n+      {\n+        closed = true;\n+      }\n     }\n+  }\n \n-    /**\n-     * Convenience method for doing something to already instantiated instances.\n-     *\n-     * @param consumer {@link ThrowingConsumer} which performs some action on an instance.\n-     * @param <E> type of exception the action may throw.\n-     * @throws E exception from action.\n-     */\n-    private <E extends Exception> void forInstantiated( ThrowingConsumer<T,E> consumer ) throws E\n+  /**\n+   * Convenience method for doing something to already instantiated instances.\n+   *\n+   * @param consumer {@link ThrowingConsumer} which performs some action on an instance.\n+   * @param <E>      type of exception the action may throw.\n+   * @throws E exception from action.\n+   */\n+  private <E extends Exception> void forInstantiated(ThrowingConsumer<T, E> consumer) throws E\n+  {\n+    E exception = null;\n+    for (T instance : instances)\n     {\n-        E exception = null;\n-        for ( T instance : instances )\n-        {\n-            if ( instance != null )\n-            {\n-                exception = consume( exception, consumer, instance );\n-            }\n-        }\n-        if ( exception != null )\n-        {\n-            throw exception;\n-        }\n+      if (instance != null)\n+      {\n+        exception = consume(exception, consumer, instance);\n+      }\n     }\n+    if (exception != null)\n+    {\n+      throw exception;\n+    }\n+  }\n \n-    private static <E extends Exception, T> E consume( E exception, ThrowingConsumer<T,E> consumer, T instance )\n+  private static <E extends Exception, T> E consume(E exception, ThrowingConsumer<T, E> consumer, T instance)\n+  {\n+    try\n+    {\n+      consumer.accept(instance);\n+    } catch (Exception e)\n     {\n-        try\n-        {\n-            consumer.accept( instance );\n-        }\n-        catch ( Exception e )\n-        {\n-            exception = Exceptions.chain( exception, (E) e );\n-        }\n-        return exception;\n+      exception = Exceptions.chain(exception, (E) e);\n     }\n+    return exception;\n+  }\n }\n",
            "diff_size": 148
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/792/InstanceSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/792/InstanceSelector.java\nindex 4339bff628b..73f907c96dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/792/InstanceSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/792/InstanceSelector.java\n@@ -52,7 +52,8 @@ class InstanceSelector<T>\n         {\n             throw new IllegalStateException( \"Instance is not instantiated\" );\n         }\n-        return instances[slot];\n+\n+return instances[slot];\n     }\n \n     /**\n@@ -66,13 +67,14 @@ class InstanceSelector<T>\n      * @return the target array which was passed in, now populated.\n      * @throws E exception from converter.\n      */\n-    <R,E extends Exception> R[] instancesAs( R[] target, ThrowingFunction<T,R,E> converter ) throws E\n+    <R, E extends Exception> R[] instancesAs( R[] target, ThrowingFunction<T,R,E> converter ) throws E\n     {\n         for ( int slot = 0; slot < instances.length; slot++ )\n         {\n             target[slot] = converter.apply( select( slot ) );\n         }\n-        return target;\n+\n+return target;\n     }\n \n     /**\n@@ -89,7 +91,8 @@ class InstanceSelector<T>\n         {\n             exception = consume( exception, consumer, select( slot ) );\n         }\n-        if ( exception != null )\n+\n+if ( exception != null )\n         {\n             throw exception;\n         }\n@@ -150,6 +153,7 @@ class InstanceSelector<T>\n         {\n             exception = Exceptions.chain( exception, (E) e );\n         }\n-        return exception;\n+\n+return exception;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "opencb-opencga",
    "error_id": "201",
    "information": {
        "errors": [
            {
                "line": "77",
                "column": "18",
                "severity": "error",
                "message": "'while' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            FileInputStream fis = new FileInputStream(tpedFilename);\n            Scanner sc = new Scanner(fis);\n            while(sc.hasNextLine()) {\n                String[] splits = sc.nextLine().split(\"\\t\");\n                String[] varSplits = splits[1].split(\":\");\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/201/IBDComputation.java\nindex df5a9d6f16a..fb3accf393e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/201/IBDComputation.java\n@@ -74,7 +74,7 @@ public class IBDComputation {\n \n             FileInputStream fis = new FileInputStream(tpedFilename);\n             Scanner sc = new Scanner(fis);\n-            while(sc.hasNextLine()) {\n+            while (sc.hasNextLine()) {\n                 String[] splits = sc.nextLine().split(\"\\t\");\n                 String[] varSplits = splits[1].split(\":\");\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/201/IBDComputation.java\nindex df5a9d6f16a..809f239adb4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/201/IBDComputation.java\n@@ -14,84 +14,84 @@ import java.util.Scanner;\n \n public class IBDComputation {\n \n-    private static final String BASENAME = \"variants\";\n+  private static final String BASENAME = \"variants\";\n \n-    public static RelatednessReport compute(String study, List<String> samples, String maf, Path outDir,\n-                                            VariantStorageManager storageManager, String token) throws ToolException {\n-        // Select markers\n-        GeneticChecksUtils.selectMarkers(BASENAME, study, samples, maf, outDir, storageManager, token);\n+  public static RelatednessReport compute(String study, List<String> samples, String maf, Path outDir,\n+                                          VariantStorageManager storageManager, String token) throws ToolException {\n+    // Select markers\n+    GeneticChecksUtils.selectMarkers(BASENAME, study, samples, maf, outDir, storageManager, token);\n \n-        // run IBD and return the result file (now autosome-file comprises X chromosome too)\n-        File outFile = runIBD(BASENAME, outDir);\n+    // run IBD and return the result file (now autosome-file comprises X chromosome too)\n+    File outFile = runIBD(BASENAME, outDir);\n \n-        if (!outFile.exists()) {\n-            throw new ToolException(\"Something wrong happened executing relatedness analysis\");\n-        }\n-\n-        return GeneticChecksUtils.buildRelatednessReport(outFile);\n+    if (!outFile.exists()) {\n+      throw new ToolException(\"Something wrong happened executing relatedness analysis\");\n     }\n \n-    private static File runIBD(String basename, Path outDir) throws ToolException {\n-        AbstractMap.SimpleEntry<String, String> outputBinding = new AbstractMap.SimpleEntry<>(outDir.toAbsolutePath().toString(),\n-                \"/data/output\");\n+    return GeneticChecksUtils.buildRelatednessReport(outFile);\n+  }\n \n-        // Calculate allele frequencies to pass to PLINK: --read-freq <.freq filename>\n-        String readFreq = \"\";\n-        String readFreqFilename = basename + \".maf.freq\";\n-        createReadFreqFile(outputBinding.getKey() + \"/\" + basename + \".tped\", outputBinding.getKey() + \"/\" + readFreqFilename);\n-        if (new File(outputBinding.getKey() + \"/\" + readFreqFilename).exists()) {\n-            readFreq = \" --read-freq /data/output/\" + readFreqFilename;\n-        }\n+  private static File runIBD(String basename, Path outDir) throws ToolException {\n+    AbstractMap.SimpleEntry<String, String> outputBinding = new AbstractMap.SimpleEntry<>(outDir.toAbsolutePath().toString(),\n+        \"/data/output\");\n \n-        // Run IBD using PLINK in docker\n-        String exclude = \"\";\n-        File pruneOutFile = new File(outputBinding.getKey() + \"/\" + basename + \".prune.out\");\n-        if (pruneOutFile.exists() && pruneOutFile.length() > 0) {\n-            exclude = \" --exclude /data/output/\" + basename + \".prune.out\";\n-        }\n-        String plinkParams = \"plink --tfile /data/output/\" + basename + \" --genome rel-check \" + readFreq + exclude + \" --out /data/output/\"\n-                + basename;\n-        try {\n-            DockerUtils.run(PlinkWrapperAnalysis.PLINK_DOCKER_IMAGE, null, outputBinding, plinkParams, null);\n-        } catch (IOException e) {\n-            throw new ToolException(e);\n-        }\n+    // Calculate allele frequencies to pass to PLINK: --read-freq <.freq filename>\n+    String readFreq = \"\";\n+    String readFreqFilename = basename + \".maf.freq\";\n+    createReadFreqFile(outputBinding.getKey() + \"/\" + basename + \".tped\", outputBinding.getKey() + \"/\" + readFreqFilename);\n+    if (new File(outputBinding.getKey() + \"/\" + readFreqFilename).exists()) {\n+      readFreq = \" --read-freq /data/output/\" + readFreqFilename;\n+    }\n \n-        // Check output file\n-        File outFile = new File(outputBinding.getKey() + \"/\" + basename + \".genome\");\n-        if (!outFile.exists()) {\n-            throw new ToolException(\"Something wrong executing relatedness analysis (i.e., IBD/IBS computation) in PLINK docker.\");\n-        }\n+    // Run IBD using PLINK in docker\n+    String exclude = \"\";\n+    File pruneOutFile = new File(outputBinding.getKey() + \"/\" + basename + \".prune.out\");\n+    if (pruneOutFile.exists() && pruneOutFile.length() > 0) {\n+      exclude = \" --exclude /data/output/\" + basename + \".prune.out\";\n+    }\n+    String plinkParams = \"plink --tfile /data/output/\" + basename + \" --genome rel-check \" + readFreq + exclude + \" --out /data/output/\"\n+        + basename;\n+    try {\n+      DockerUtils.run(PlinkWrapperAnalysis.PLINK_DOCKER_IMAGE, null, outputBinding, plinkParams, null);\n+    } catch (IOException e) {\n+      throw new ToolException(e);\n+    }\n \n-        return outFile;\n+    // Check output file\n+    File outFile = new File(outputBinding.getKey() + \"/\" + basename + \".genome\");\n+    if (!outFile.exists()) {\n+      throw new ToolException(\"Something wrong executing relatedness analysis (i.e., IBD/IBS computation) in PLINK docker.\");\n     }\n \n-    private static void createReadFreqFile(String tpedFilename, String mafFilename) throws ToolException {\n-        try (FileWriter f = new FileWriter(mafFilename, true);\n-             PrintWriter p = new PrintWriter(new BufferedWriter(f))) {\n-\n-            p.println(\"CHR\\tSNP\\tA1\\tA2\\tMAF\\tNCHROBS\");\n-\n-            FileInputStream fis = new FileInputStream(tpedFilename);\n-            Scanner sc = new Scanner(fis);\n-            while(sc.hasNextLine()) {\n-                String[] splits = sc.nextLine().split(\"\\t\");\n-                String[] varSplits = splits[1].split(\":\");\n-\n-                int a1 = 0;\n-                int a2 = 0;\n-                for (int i = 4; i < splits.length; i++) {\n-                    if (splits[i].equals(varSplits[2])) {\n-                        a1++;\n-                    } else if (splits[i].equals(varSplits[3])) {\n-                        a2++;\n-                    }\n-                }\n-                p.println(splits[0] + \"\\t\" + splits[1] + \"\\t\" + varSplits[2] + \"\\t\" + varSplits[3] + \"\\t\" + (1.0d * a2 / (a1 + a2)) + \"\\t\"\n-                        + (a1 + a2));\n-            }\n-        } catch (IOException e) {\n-            throw new ToolException(e);\n+    return outFile;\n+  }\n+\n+  private static void createReadFreqFile(String tpedFilename, String mafFilename) throws ToolException {\n+    try (FileWriter f = new FileWriter(mafFilename, true);\n+         PrintWriter p = new PrintWriter(new BufferedWriter(f))) {\n+\n+      p.println(\"CHR\\tSNP\\tA1\\tA2\\tMAF\\tNCHROBS\");\n+\n+      FileInputStream fis = new FileInputStream(tpedFilename);\n+      Scanner sc = new Scanner(fis);\n+      while (sc.hasNextLine()) {\n+        String[] splits = sc.nextLine().split(\"\\t\");\n+        String[] varSplits = splits[1].split(\":\");\n+\n+        int a1 = 0;\n+        int a2 = 0;\n+        for (int i = 4; i < splits.length; i++) {\n+          if (splits[i].equals(varSplits[2])) {\n+            a1++;\n+          } else if (splits[i].equals(varSplits[3])) {\n+            a2++;\n+          }\n         }\n+        p.println(splits[0] + \"\\t\" + splits[1] + \"\\t\" + varSplits[2] + \"\\t\" + varSplits[3] + \"\\t\" + (1.0d * a2 / (a1 + a2)) + \"\\t\"\n+            + (a1 + a2));\n+      }\n+    } catch (IOException e) {\n+      throw new ToolException(e);\n     }\n+  }\n }\n",
            "diff_size": 84
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/201/IBDComputation.java\nindex df5a9d6f16a..f44fb12ae98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/201/IBDComputation.java\n@@ -18,7 +18,7 @@ public class IBDComputation {\n \n     public static RelatednessReport compute(String study, List<String> samples, String maf, Path outDir,\n                                             VariantStorageManager storageManager, String token) throws ToolException {\n-        // Select markers\n+    // Select markers\n         GeneticChecksUtils.selectMarkers(BASENAME, study, samples, maf, outDir, storageManager, token);\n \n         // run IBD and return the result file (now autosome-file comprises X chromosome too)\n@@ -51,7 +51,7 @@ public class IBDComputation {\n         }\n         String plinkParams = \"plink --tfile /data/output/\" + basename + \" --genome rel-check \" + readFreq + exclude + \" --out /data/output/\"\n                 + basename;\n-        try {\n+try {\n             DockerUtils.run(PlinkWrapperAnalysis.PLINK_DOCKER_IMAGE, null, outputBinding, plinkParams, null);\n         } catch (IOException e) {\n             throw new ToolException(e);\n@@ -69,12 +69,11 @@ public class IBDComputation {\n     private static void createReadFreqFile(String tpedFilename, String mafFilename) throws ToolException {\n         try (FileWriter f = new FileWriter(mafFilename, true);\n              PrintWriter p = new PrintWriter(new BufferedWriter(f))) {\n-\n-            p.println(\"CHR\\tSNP\\tA1\\tA2\\tMAF\\tNCHROBS\");\n+    p.println(\"CHR\\tSNP\\tA1\\tA2\\tMAF\\tNCHROBS\");\n \n             FileInputStream fis = new FileInputStream(tpedFilename);\n             Scanner sc = new Scanner(fis);\n-            while(sc.hasNextLine()) {\n+            while (sc.hasNextLine()) {\n                 String[] splits = sc.nextLine().split(\"\\t\");\n                 String[] varSplits = splits[1].split(\":\");\n \n@@ -94,4 +93,4 @@ public class IBDComputation {\n             throw new ToolException(e);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/201/IBDComputation.java\nindex df5a9d6f16a..fb3accf393e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/201/IBDComputation.java\n@@ -74,7 +74,7 @@ public class IBDComputation {\n \n             FileInputStream fis = new FileInputStream(tpedFilename);\n             Scanner sc = new Scanner(fis);\n-            while(sc.hasNextLine()) {\n+            while (sc.hasNextLine()) {\n                 String[] splits = sc.nextLine().split(\"\\t\");\n                 String[] varSplits = splits[1].split(\":\");\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/201/IBDComputation.java\nindex df5a9d6f16a..fb3accf393e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/201/IBDComputation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/201/IBDComputation.java\n@@ -74,7 +74,7 @@ public class IBDComputation {\n \n             FileInputStream fis = new FileInputStream(tpedFilename);\n             Scanner sc = new Scanner(fis);\n-            while(sc.hasNextLine()) {\n+            while (sc.hasNextLine()) {\n                 String[] splits = sc.nextLine().split(\"\\t\");\n                 String[] varSplits = splits[1].split(\":\");\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
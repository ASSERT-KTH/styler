{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2222",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2222/Dumper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2222/Dumper.java\nindex e3242a9ef72..9c1235c5f21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2222/Dumper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2222/Dumper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.archive;\n \n import org.apache.commons.compress.archivers.ArchiveEntry;\n@@ -46,74 +47,74 @@ import static org.neo4j.io.fs.FileVisitors.throwExceptions;\n \n public class Dumper\n {\n-    public void dump( Path dbPath, Path transactionalLogsPath, Path archive, Predicate<Path> exclude )\n-            throws IOException\n+  public void dump(Path dbPath, Path transactionalLogsPath, Path archive, Predicate<Path> exclude)\n+      throws IOException\n+  {\n+    checkWritableDirectory(archive.getParent());\n+    try (ArchiveOutputStream stream = openArchiveOut(archive))\n     {\n-        checkWritableDirectory( archive.getParent() );\n-        try ( ArchiveOutputStream stream = openArchiveOut( archive ) )\n-        {\n-            visitPath( dbPath, exclude, stream );\n-            if ( !Util.isSameOrChildPath( dbPath, transactionalLogsPath ) )\n-            {\n-                visitPath( transactionalLogsPath, exclude, stream );\n-            }\n-        }\n+      visitPath(dbPath, exclude, stream);\n+      if (!Util.isSameOrChildPath(dbPath, transactionalLogsPath))\n+      {\n+        visitPath(transactionalLogsPath, exclude, stream);\n+      }\n     }\n+  }\n \n-    private void visitPath( Path transactionalLogsPath, Predicate<Path> exclude, ArchiveOutputStream stream )\n-            throws IOException\n-    {\n-        Files.walkFileTree( transactionalLogsPath,\n-                onlyMatching( not( exclude ),\n-                        throwExceptions(\n-                                onDirectory( dir -> dumpDirectory( transactionalLogsPath, stream, dir ),\n-                                        onFile( file -> dumpFile( transactionalLogsPath, stream, file ),\n-                                                justContinue() ) ) ) ) );\n-    }\n+  private void visitPath(Path transactionalLogsPath, Predicate<Path> exclude, ArchiveOutputStream stream)\n+      throws IOException\n+  {\n+    Files.walkFileTree(transactionalLogsPath,\n+        onlyMatching(not(exclude),\n+            throwExceptions(\n+                onDirectory(dir -> dumpDirectory(transactionalLogsPath, stream, dir),\n+                    onFile(file -> dumpFile(transactionalLogsPath, stream, file),\n+                        justContinue())))));\n+  }\n \n-    private static ArchiveOutputStream openArchiveOut( Path archive ) throws IOException\n-    {\n-        // StandardOpenOption.CREATE_NEW is important here because it atomically asserts that the file doesn't\n-        // exist as it is opened, avoiding a TOCTOU race condition which results in a security vulnerability. I\n-        // can't see a way to write a test to verify that we are using this option rather than just implementing\n-        // the check ourselves non-atomically.\n-        TarArchiveOutputStream tarball =\n-                new TarArchiveOutputStream( new GzipCompressorOutputStream(\n-                        Files.newOutputStream( archive, StandardOpenOption.CREATE_NEW ) ) );\n-        tarball.setLongFileMode( TarArchiveOutputStream.LONGFILE_POSIX );\n-        tarball.setBigNumberMode( TarArchiveOutputStream.BIGNUMBER_POSIX );\n-        return tarball;\n-    }\n+  private static ArchiveOutputStream openArchiveOut(Path archive) throws IOException\n+  {\n+    // StandardOpenOption.CREATE_NEW is important here because it atomically asserts that the file doesn't\n+    // exist as it is opened, avoiding a TOCTOU race condition which results in a security vulnerability. I\n+    // can't see a way to write a test to verify that we are using this option rather than just implementing\n+    // the check ourselves non-atomically.\n+    TarArchiveOutputStream tarball =\n+        new TarArchiveOutputStream(new GzipCompressorOutputStream(\n+            Files.newOutputStream(archive, StandardOpenOption.CREATE_NEW)));\n+    tarball.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);\n+    tarball.setBigNumberMode(TarArchiveOutputStream.BIGNUMBER_POSIX);\n+    return tarball;\n+  }\n \n-    private void dumpFile( Path root, ArchiveOutputStream stream, Path file ) throws IOException\n-    {\n-        withEntry( () -> writeFile( file, stream ), root, stream, file );\n-    }\n+  private void dumpFile(Path root, ArchiveOutputStream stream, Path file) throws IOException\n+  {\n+    withEntry(() -> writeFile(file, stream), root, stream, file);\n+  }\n \n-    private void dumpDirectory( Path root, ArchiveOutputStream stream, Path dir ) throws IOException\n-    {\n-        withEntry( noop(), root, stream, dir );\n-    }\n+  private void dumpDirectory(Path root, ArchiveOutputStream stream, Path dir) throws IOException\n+  {\n+    withEntry(noop(), root, stream, dir);\n+  }\n \n-    private void withEntry( ThrowingAction<IOException> operation, Path root, ArchiveOutputStream stream, Path file )\n-            throws IOException\n-    {\n-        ArchiveEntry entry = createEntry( file, root, stream );\n-        stream.putArchiveEntry( entry );\n-        operation.apply();\n-        stream.closeArchiveEntry();\n-    }\n+  private void withEntry(ThrowingAction<IOException> operation, Path root, ArchiveOutputStream stream, Path file)\n+      throws IOException\n+  {\n+    ArchiveEntry entry = createEntry(file, root, stream);\n+    stream.putArchiveEntry(entry);\n+    operation.apply();\n+    stream.closeArchiveEntry();\n+  }\n \n-    private ArchiveEntry createEntry( Path file, Path root, ArchiveOutputStream archive ) throws IOException\n-    {\n-        return archive.createArchiveEntry( file.toFile(), \"./\" + root.relativize( file ).toString() );\n-    }\n+  private ArchiveEntry createEntry(Path file, Path root, ArchiveOutputStream archive) throws IOException\n+  {\n+    return archive.createArchiveEntry(file.toFile(), \"./\" + root.relativize(file).toString());\n+  }\n \n-    private void writeFile( Path file, ArchiveOutputStream archiveStream ) throws IOException\n+  private void writeFile(Path file, ArchiveOutputStream archiveStream) throws IOException\n+  {\n+    try (InputStream in = Files.newInputStream(file))\n     {\n-        try ( InputStream in = Files.newInputStream( file ) )\n-        {\n-            copy( in, archiveStream );\n-        }\n+      copy(in, archiveStream);\n     }\n+  }\n }\n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 204).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2222/Dumper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2222/Dumper.java\nindex e3242a9ef72..525c56d3f06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2222/Dumper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2222/Dumper.java\n@@ -46,9 +46,8 @@ import static org.neo4j.io.fs.FileVisitors.throwExceptions;\n \n public class Dumper\n {\n-    public void dump( Path dbPath, Path transactionalLogsPath, Path archive, Predicate<Path> exclude )\n-            throws IOException\n-    {\n+    public void dump( Path dbPath, Path transactionalLogsPath, Path archive, Predicate<Path> exclude ) throws IOException\n+{\n         checkWritableDirectory( archive.getParent() );\n         try ( ArchiveOutputStream stream = openArchiveOut( archive ) )\n         {\n@@ -60,15 +59,11 @@ public class Dumper\n         }\n     }\n \n-    private void visitPath( Path transactionalLogsPath, Predicate<Path> exclude, ArchiveOutputStream stream )\n-            throws IOException\n-    {\n+    private void visitPath( Path transactionalLogsPath, Predicate<Path> exclude, ArchiveOutputStream stream ) throws IOException\n+{\n         Files.walkFileTree( transactionalLogsPath,\n                 onlyMatching( not( exclude ),\n-                        throwExceptions(\n-                                onDirectory( dir -> dumpDirectory( transactionalLogsPath, stream, dir ),\n-                                        onFile( file -> dumpFile( transactionalLogsPath, stream, file ),\n-                                                justContinue() ) ) ) ) );\n+                        throwExceptions( onDirectory( dir -> dumpDirectory( transactionalLogsPath, stream, dir ), onFile( file -> dumpFile( transactionalLogsPath, stream, file ), justContinue() ) ) ) ) );\n     }\n \n     private static ArchiveOutputStream openArchiveOut( Path archive ) throws IOException\n@@ -77,10 +72,8 @@ public class Dumper\n         // exist as it is opened, avoiding a TOCTOU race condition which results in a security vulnerability. I\n         // can't see a way to write a test to verify that we are using this option rather than just implementing\n         // the check ourselves non-atomically.\n-        TarArchiveOutputStream tarball =\n-                new TarArchiveOutputStream( new GzipCompressorOutputStream(\n-                        Files.newOutputStream( archive, StandardOpenOption.CREATE_NEW ) ) );\n-        tarball.setLongFileMode( TarArchiveOutputStream.LONGFILE_POSIX );\n+        TarArchiveOutputStream tarball = new TarArchiveOutputStream( new GzipCompressorOutputStream( Files.newOutputStream( archive, StandardOpenOption.CREATE_NEW ) ) );\n+tarball.setLongFileMode( TarArchiveOutputStream.LONGFILE_POSIX );\n         tarball.setBigNumberMode( TarArchiveOutputStream.BIGNUMBER_POSIX );\n         return tarball;\n     }\n@@ -95,9 +88,8 @@ public class Dumper\n         withEntry( noop(), root, stream, dir );\n     }\n \n-    private void withEntry( ThrowingAction<IOException> operation, Path root, ArchiveOutputStream stream, Path file )\n-            throws IOException\n-    {\n+    private void withEntry( ThrowingAction<IOException> operation, Path root, ArchiveOutputStream stream, Path file ) throws IOException\n+{\n         ArchiveEntry entry = createEntry( file, root, stream );\n         stream.putArchiveEntry( entry );\n         operation.apply();\n@@ -116,4 +108,4 @@ public class Dumper\n             copy( in, archiveStream );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
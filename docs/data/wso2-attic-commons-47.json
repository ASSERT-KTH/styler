{
    "project_name": "wso2-attic-commons",
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "33",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 158).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n            @Override\n            public Properties[] getPartitionProperties() {Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n                String monthYear = (String) jobParameters.get(\"monthYear\");\n                int partitionSize = bean.getMaxEmployees() / getPartitions();\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/47/PayrollPartitionMapper.java\nindex 882810ac440..ece8ef0ba7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/47/PayrollPartitionMapper.java\n@@ -30,8 +30,9 @@ public class PayrollPartitionMapper\n             }\n \n             @Override\n-            public Properties[] getPartitionProperties() {Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n-                String monthYear = (String) jobParameters.get(\"monthYear\");\n+            public Properties[] getPartitionProperties() {\n+       Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n+            String monthYear = (String) jobParameters.get(\"monthYear\");\n                 int partitionSize = bean.getMaxEmployees() / getPartitions();\n \n                 Properties[] props = new Properties[getPartitions()];\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/47/PayrollPartitionMapper.java\nindex 882810ac440..f953ef35dfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/47/PayrollPartitionMapper.java\n@@ -12,41 +12,42 @@ import java.util.Properties;\n \n @Named(\"PayrollPartitionMapper\")\n public class PayrollPartitionMapper\n-    implements PartitionMapper {\n-\n-    @Inject\n-    private JobContext jobContext;\n-\n-    @EJB\n-    private SampleDataHolderBean bean;\n-\n-    @Override\n-    public PartitionPlan mapPartitions() throws Exception {\n-\n-        return new PartitionPlanImpl() {\n-            @Override\n-            public int getPartitions() {\n-                return 5;\n-            }\n-\n-            @Override\n-            public Properties[] getPartitionProperties() {Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n-                String monthYear = (String) jobParameters.get(\"monthYear\");\n-                int partitionSize = bean.getMaxEmployees() / getPartitions();\n-\n-                Properties[] props = new Properties[getPartitions()];\n-                for (int i=0; i<getPartitions(); i++) {\n-                    Properties partProps = new Properties();\n-                    partProps.put(\"monthYear\", \"\"+monthYear);\n-                    partProps.put(\"startEmpID\", i * partitionSize);\n-                    partProps.put(\"endEmpID\", (i + 1) * partitionSize);\n-\n-                    props[i] = partProps;\n-                }\n-\n-                return props;\n-            }\n-        };\n-    }\n+  implements PartitionMapper {\n+\n+  @Inject\n+  private JobContext jobContext;\n+\n+  @EJB\n+  private SampleDataHolderBean bean;\n+\n+  @Override\n+  public PartitionPlan mapPartitions() throws Exception {\n+\n+    return new PartitionPlanImpl() {\n+      @Override\n+      public int getPartitions() {\n+        return 5;\n+      }\n+\n+      @Override\n+      public Properties[] getPartitionProperties() {\n+        Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n+        String monthYear = (String) jobParameters.get(\"monthYear\");\n+        int partitionSize = bean.getMaxEmployees() / getPartitions();\n+\n+        Properties[] props = new Properties[getPartitions()];\n+        for (int i = 0; i < getPartitions(); i++) {\n+          Properties partProps = new Properties();\n+          partProps.put(\"monthYear\", \"\" + monthYear);\n+          partProps.put(\"startEmpID\", i * partitionSize);\n+          partProps.put(\"endEmpID\", (i + 1) * partitionSize);\n+\n+          props[i] = partProps;\n+        }\n+\n+        return props;\n+      }\n+    };\n+  }\n \n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/47/PayrollPartitionMapper.java\nindex 882810ac440..c3f0c315b74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/47/PayrollPartitionMapper.java\n@@ -30,8 +30,9 @@ public class PayrollPartitionMapper\n             }\n \n             @Override\n-            public Properties[] getPartitionProperties() {Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n-                String monthYear = (String) jobParameters.get(\"monthYear\");\n+            public Properties[] getPartitionProperties() {\n+    Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n+String monthYear = (String) jobParameters.get(\"monthYear\");\n                 int partitionSize = bean.getMaxEmployees() / getPartitions();\n \n                 Properties[] props = new Properties[getPartitions()];\n@@ -49,4 +50,4 @@ public class PayrollPartitionMapper\n         };\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/47/PayrollPartitionMapper.java\nindex 882810ac440..ece8ef0ba7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/47/PayrollPartitionMapper.java\n@@ -30,8 +30,9 @@ public class PayrollPartitionMapper\n             }\n \n             @Override\n-            public Properties[] getPartitionProperties() {Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n-                String monthYear = (String) jobParameters.get(\"monthYear\");\n+            public Properties[] getPartitionProperties() {\n+       Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n+            String monthYear = (String) jobParameters.get(\"monthYear\");\n                 int partitionSize = bean.getMaxEmployees() / getPartitions();\n \n                 Properties[] props = new Properties[getPartitions()];\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/47/PayrollPartitionMapper.java\nindex 882810ac440..19de5f5b7dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/47/PayrollPartitionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/47/PayrollPartitionMapper.java\n@@ -30,8 +30,9 @@ public class PayrollPartitionMapper\n             }\n \n             @Override\n-            public Properties[] getPartitionProperties() {Properties jobParameters = BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId());\n-                String monthYear = (String) jobParameters.get(\"monthYear\");\n+            public Properties[] getPartitionProperties() {\n+                Properties jobParameters =BatchRuntime.getJobOperator().getParameters(jobContext.getExecutionId())\n+                ; String monthYear = (String) jobParameters.get(\"monthYear\");\n                 int partitionSize = bean.getMaxEmployees() / getPartitions();\n \n                 Properties[] props = new Properties[getPartitions()];\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2436",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2436/BoltResponseMessageWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2436/BoltResponseMessageWriter.java\nindex 0720d92106e..7cb26566a90 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2436/BoltResponseMessageWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2436/BoltResponseMessageWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.messaging;\n \n import java.io.IOException;\n@@ -41,108 +42,107 @@ import static org.neo4j.bolt.v1.messaging.BoltResponseMessage.SUCCESS;\n  */\n public class BoltResponseMessageWriter implements BoltResponseMessageHandler<IOException>\n {\n-    private final PackOutput output;\n-    private final Neo4jPack.Packer packer;\n-    private final BoltMessageLogger messageLogger;\n-    private final Log log;\n-\n-    public BoltResponseMessageWriter( Neo4jPack neo4jPack, PackOutput output, LogService logService, BoltMessageLogger messageLogger )\n-    {\n-        this.output = output;\n-        this.packer = neo4jPack.newPacker( output );\n-        this.messageLogger = messageLogger;\n-        this.log = logService.getInternalLog( getClass() );\n-    }\n-\n-    @Override\n-    public void onRecord( QueryResult.Record item ) throws IOException\n+  private final PackOutput output;\n+  private final Neo4jPack.Packer packer;\n+  private final BoltMessageLogger messageLogger;\n+  private final Log log;\n+\n+  public BoltResponseMessageWriter(Neo4jPack neo4jPack, PackOutput output, LogService logService, BoltMessageLogger messageLogger)\n+  {\n+    this.output = output;\n+    this.packer = neo4jPack.newPacker(output);\n+    this.messageLogger = messageLogger;\n+    this.log = logService.getInternalLog(getClass());\n+  }\n+\n+  @Override\n+  public void onRecord(QueryResult.Record item) throws IOException\n+  {\n+    packCompleteMessageOrFail(RECORD, () ->\n     {\n-        packCompleteMessageOrFail( RECORD, () ->\n-        {\n-            AnyValue[] fields = item.fields();\n-            packer.packStructHeader( 1, RECORD.signature() );\n-            packer.packListHeader( fields.length );\n-            for ( AnyValue field : fields )\n-            {\n-                packer.pack( field );\n-            }\n-        } );\n-    }\n-\n-    @Override\n-    public void onSuccess( MapValue metadata ) throws IOException\n+      AnyValue[] fields = item.fields();\n+      packer.packStructHeader(1, RECORD.signature());\n+      packer.packListHeader(fields.length);\n+      for (AnyValue field : fields)\n+      {\n+        packer.pack(field);\n+      }\n+    });\n+  }\n+\n+  @Override\n+  public void onSuccess(MapValue metadata) throws IOException\n+  {\n+    packCompleteMessageOrFail(SUCCESS, () ->\n     {\n-        packCompleteMessageOrFail( SUCCESS, () ->\n-        {\n-            packer.packStructHeader( 1, SUCCESS.signature() );\n-            packer.pack( metadata );\n-        } );\n+      packer.packStructHeader(1, SUCCESS.signature());\n+      packer.pack(metadata);\n+    });\n \n-        messageLogger.logSuccess( () -> metadata );\n-    }\n+    messageLogger.logSuccess(() -> metadata);\n+  }\n \n-    @Override\n-    public void onIgnored() throws IOException\n+  @Override\n+  public void onIgnored() throws IOException\n+  {\n+    packCompleteMessageOrFail(IGNORED, () ->\n     {\n-        packCompleteMessageOrFail( IGNORED, () ->\n-        {\n-            packer.packStructHeader( 0, IGNORED.signature() );\n-        } );\n+      packer.packStructHeader(0, IGNORED.signature());\n+    });\n \n-        messageLogger.logIgnored();\n-    }\n+    messageLogger.logIgnored();\n+  }\n \n-    @Override\n-    public void onFailure( Status status, String errorMessage ) throws IOException\n+  @Override\n+  public void onFailure(Status status, String errorMessage) throws IOException\n+  {\n+    packCompleteMessageOrFail(FAILURE, () ->\n     {\n-        packCompleteMessageOrFail( FAILURE, () ->\n-        {\n-            packer.packStructHeader( 1, FAILURE.signature() );\n-            packer.packMapHeader( 2 );\n-\n-            packer.pack( \"code\" );\n-            packer.pack( status.code().serialize() );\n-\n-            packer.pack( \"message\" );\n-            packer.pack( errorMessage );\n-        } );\n-\n-        messageLogger.logFailure( status );\n-    }\n-\n-    @Override\n-    public void onFatal( Status status, String errorMessage ) throws IOException\n+      packer.packStructHeader(1, FAILURE.signature());\n+      packer.packMapHeader(2);\n+\n+      packer.pack(\"code\");\n+      packer.pack(status.code().serialize());\n+\n+      packer.pack(\"message\");\n+      packer.pack(errorMessage);\n+    });\n+\n+    messageLogger.logFailure(status);\n+  }\n+\n+  @Override\n+  public void onFatal(Status status, String errorMessage) throws IOException\n+  {\n+    messageLogger.serverError(\"FATAL\", status);\n+    onFailure(status, errorMessage);\n+    flush();\n+  }\n+\n+  public void flush() throws IOException\n+  {\n+    packer.flush();\n+  }\n+\n+  private void packCompleteMessageOrFail(BoltResponseMessage message, ThrowingAction<IOException> action) throws IOException\n+  {\n+    boolean packingFailed = true;\n+    output.beginMessage();\n+    try\n     {\n-        messageLogger.serverError( \"FATAL\", status);\n-        onFailure( status, errorMessage );\n-        flush();\n-    }\n-\n-    public void flush() throws IOException\n-    {\n-        packer.flush();\n-    }\n-\n-    private void packCompleteMessageOrFail( BoltResponseMessage message, ThrowingAction<IOException> action ) throws IOException\n+      action.apply();\n+      packingFailed = false;\n+      output.messageSucceeded();\n+    } catch (Throwable error)\n     {\n-        boolean packingFailed = true;\n-        output.beginMessage();\n-        try\n-        {\n-            action.apply();\n-            packingFailed = false;\n-            output.messageSucceeded();\n-        }\n-        catch ( Throwable error )\n-        {\n-            if ( packingFailed )\n-            {\n-                // packing failed, there might be some half-written data in the output buffer right now\n-                // notify output about the failure so that it cleans up the buffer\n-                output.messageFailed();\n-                log.error( \"Failed to write full %s message because: %s\", message, error.getMessage() );\n-            }\n-            throw error;\n-        }\n+      if (packingFailed)\n+      {\n+        // packing failed, there might be some half-written data in the output buffer right now\n+        // notify output about the failure so that it cleans up the buffer\n+        output.messageFailed();\n+        log.error(\"Failed to write full %s message because: %s\", message, error.getMessage());\n+      }\n+      throw error;\n     }\n+  }\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2436/BoltResponseMessageWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2436/BoltResponseMessageWriter.java\nindex 0720d92106e..a679863384a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2436/BoltResponseMessageWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2436/BoltResponseMessageWriter.java\n@@ -77,8 +77,7 @@ public class BoltResponseMessageWriter implements BoltResponseMessageHandler<IOE\n             packer.packStructHeader( 1, SUCCESS.signature() );\n             packer.pack( metadata );\n         } );\n-\n-        messageLogger.logSuccess( () -> metadata );\n+messageLogger.logSuccess( () -> metadata );\n     }\n \n     @Override\n@@ -88,8 +87,7 @@ public class BoltResponseMessageWriter implements BoltResponseMessageHandler<IOE\n         {\n             packer.packStructHeader( 0, IGNORED.signature() );\n         } );\n-\n-        messageLogger.logIgnored();\n+messageLogger.logIgnored();\n     }\n \n     @Override\n@@ -99,21 +97,18 @@ public class BoltResponseMessageWriter implements BoltResponseMessageHandler<IOE\n         {\n             packer.packStructHeader( 1, FAILURE.signature() );\n             packer.packMapHeader( 2 );\n-\n-            packer.pack( \"code\" );\n+packer.pack( \"code\" );\n             packer.pack( status.code().serialize() );\n-\n-            packer.pack( \"message\" );\n+packer.pack( \"message\" );\n             packer.pack( errorMessage );\n         } );\n-\n-        messageLogger.logFailure( status );\n+messageLogger.logFailure( status );\n     }\n \n     @Override\n     public void onFatal( Status status, String errorMessage ) throws IOException\n     {\n-        messageLogger.serverError( \"FATAL\", status);\n+        messageLogger.serverError( \"FATAL\", status );\n         onFailure( status, errorMessage );\n         flush();\n     }\n@@ -145,4 +140,4 @@ public class BoltResponseMessageWriter implements BoltResponseMessageHandler<IOE\n             throw error;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
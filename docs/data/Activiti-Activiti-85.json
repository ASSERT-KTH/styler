{
    "project_name": "Activiti-Activiti",
    "error_id": "85",
    "information": {
        "errors": [
            {
                "line": "31",
                "severity": "error",
                "message": "Comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 32.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
            }
        ]
    },
    "source_code": "  public long executeCount(CommandContext commandContext, Map<String, Object> parameterMap) {\n    return commandContext.getExecutionEntityManager()\n    // can use execution count, since the result type doesn't matter\n        .findExecutionCountByNativeQuery(parameterMap);\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/85/NativeProcessInstanceQueryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/85/NativeProcessInstanceQueryImpl.java\nindex de9fb44d345..6895ce06c97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/85/NativeProcessInstanceQueryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/85/NativeProcessInstanceQueryImpl.java\n@@ -29,7 +29,7 @@ public class NativeProcessInstanceQueryImpl extends AbstractNativeQuery<NativePr\n   public long executeCount(CommandContext commandContext, Map<String, Object> parameterMap) {\r\n     return commandContext.getExecutionEntityManager()\r\n     // can use execution count, since the result type doesn't matter\r\n-        .findExecutionCountByNativeQuery(parameterMap);\r\n+    .findExecutionCountByNativeQuery(parameterMap);\r\n   }\r\n \r\n }\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/85/NativeProcessInstanceQueryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/85/NativeProcessInstanceQueryImpl.java\nindex de9fb44d345..8efd99783dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/85/NativeProcessInstanceQueryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/85/NativeProcessInstanceQueryImpl.java\n@@ -10,26 +10,26 @@ import org.activiti.engine.runtime.ProcessInstance;\n \r\n public class NativeProcessInstanceQueryImpl extends AbstractNativeQuery<NativeProcessInstanceQuery, ProcessInstance> implements NativeProcessInstanceQuery {\r\n \r\n-  private static final long serialVersionUID = 1L;\r\n+    private static final long serialVersionUID = 1L;\r\n \r\n-  public NativeProcessInstanceQueryImpl(CommandContext commandContext) {\r\n-    super(commandContext);\r\n-  }\r\n+    public NativeProcessInstanceQueryImpl(CommandContext commandContext) {\r\n+        super(commandContext);\r\n+    }\r\n \r\n-  public NativeProcessInstanceQueryImpl(CommandExecutor commandExecutor) {\r\n-    super(commandExecutor);\r\n-  }\r\n+    public NativeProcessInstanceQueryImpl(CommandExecutor commandExecutor) {\r\n+        super(commandExecutor);\r\n+    }\r\n \r\n-  // results ////////////////////////////////////////////////////////////////\r\n+    // results ////////////////////////////////////////////////////////////////\r\n \r\n-  public List<ProcessInstance> executeList(CommandContext commandContext, Map<String, Object> parameterMap, int firstResult, int maxResults) {\r\n-    return commandContext.getExecutionEntityManager().findProcessInstanceByNativeQuery(parameterMap, firstResult, maxResults);\r\n-  }\r\n+    public List<ProcessInstance> executeList(CommandContext commandContext, Map<String, Object> parameterMap, int firstResult, int maxResults) {\r\n+        return commandContext.getExecutionEntityManager().findProcessInstanceByNativeQuery(parameterMap, firstResult, maxResults);\r\n+    }\r\n \r\n-  public long executeCount(CommandContext commandContext, Map<String, Object> parameterMap) {\r\n-    return commandContext.getExecutionEntityManager()\r\n-    // can use execution count, since the result type doesn't matter\r\n-        .findExecutionCountByNativeQuery(parameterMap);\r\n-  }\r\n+    public long executeCount(CommandContext commandContext, Map<String, Object> parameterMap) {\r\n+        return commandContext.getExecutionEntityManager()\r\n+                // can use execution count, since the result type doesn't matter\r\n+                .findExecutionCountByNativeQuery(parameterMap);\r\n+    }\r\n \r\n }\r\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/85/NativeProcessInstanceQueryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/85/NativeProcessInstanceQueryImpl.java\nindex de9fb44d345..6895ce06c97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/85/NativeProcessInstanceQueryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/85/NativeProcessInstanceQueryImpl.java\n@@ -29,7 +29,7 @@ public class NativeProcessInstanceQueryImpl extends AbstractNativeQuery<NativePr\n   public long executeCount(CommandContext commandContext, Map<String, Object> parameterMap) {\r\n     return commandContext.getExecutionEntityManager()\r\n     // can use execution count, since the result type doesn't matter\r\n-        .findExecutionCountByNativeQuery(parameterMap);\r\n+    .findExecutionCountByNativeQuery(parameterMap);\r\n   }\r\n \r\n }\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
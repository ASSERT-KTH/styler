{
    "project_name": "HuygensING-timbuctoo",
    "error_id": "68",
    "information": {
        "errors": [
            {
                "line": "52",
                "column": "8",
                "severity": "error",
                "message": "WhitespaceAround: 'try' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    try(Stream<Path> fileStream = Files.walk(path)) {\n      Set<Path> authFiles = fileStream\n        .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n        .collect(toSet());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/68/AuthorizationMigration.java\nindex 004a9e2fcf4..565ccc1a3dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/68/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/68/AuthorizationMigration.java\nindex 004a9e2fcf4..c8a036d75d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/68/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n@@ -75,7 +75,7 @@ public class AuthorizationMigration {\n               LOG.warn(\"No user found with id '{}'\", oldUserId);\n             }\n             newAuths\n-              .add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[]{})));\n+              .add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[] {})));\n           }\n \n           OBJECT_MAPPER.writeValue(outputFile, newAuths);\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/68/AuthorizationMigration.java\nindex 004a9e2fcf4..be8d4f21a76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/68/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n@@ -118,4 +118,4 @@ public class AuthorizationMigration {\n     directory.mkdirs();\n     return new File(directory, \"authorizations.json\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/68/AuthorizationMigration.java\nindex 004a9e2fcf4..6ce3bad7cf9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/68/AuthorizationMigration.java\n@@ -11,7 +11,6 @@ import nl.knaw.huygens.timbuctoo.v5.security.UserValidator;\n import nl.knaw.huygens.timbuctoo.v5.security.dto.User;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.File;\n import java.nio.file.Files;\n import java.nio.file.Path;\n@@ -23,7 +22,6 @@ import java.util.stream.Stream;\n import static java.util.stream.Collectors.toSet;\n \n public class AuthorizationMigration {\n-\n   private static final ObjectMapper OBJECT_MAPPER;\n   private static final Logger LOG = LoggerFactory.getLogger(AuthorizationMigration.class);\n \n@@ -44,26 +42,17 @@ public class AuthorizationMigration {\n \n   public void migrate() throws Exception {\n     Path path = Paths.get(authorizationsPath);\n-\n     if (!path.toFile().exists()) {\n       return;\n     }\n-\n-    try(Stream<Path> fileStream = Files.walk(path)) {\n-      Set<Path> authFiles = fileStream\n-        .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n-        .collect(toSet());\n-\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n+      Set<Path> authFiles = fileStream.filter(file -> file.toFile().getName()\n+                                                                   .endsWith(\".json\") && file.toFile().isFile()).collect(toSet());\n       for (Path authFile : authFiles) {\n         final File outputFile = createOutputFile(authFile);\n         if (!outputFile.exists()) {\n           LOG.info(\"Migrating \" + authFile.toAbsolutePath().toString());\n-          Set<VreAuthorization> oldAuths = OBJECT_MAPPER.readValue(\n-            authFile.toFile(),\n-            new TypeReference<Set<VreAuthorization>>() {\n-            }\n-          );\n-\n+          Set<VreAuthorization> oldAuths = OBJECT_MAPPER.readValue(authFile.toFile(), new TypeReference<Set<VreAuthorization>>() {});\n           Set<VreAuthorization> newAuths = Sets.newHashSet();\n           for (VreAuthorization oldAuth : oldAuths) {\n             final String oldUserId = oldAuth.getUserId();\n@@ -74,18 +63,14 @@ public class AuthorizationMigration {\n             } else {\n               LOG.warn(\"No user found with id '{}'\", oldUserId);\n             }\n-            newAuths\n-              .add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[]{})));\n+            newAuths.add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[]{})));\n           }\n-\n           OBJECT_MAPPER.writeValue(outputFile, newAuths);\n         } else {\n-          LOG.info(\"Skipping migration of \" + authFile.toAbsolutePath().toString() + \" because \" +\n-            outputFile.getAbsolutePath() + \" already exists\");\n+          LOG.info(\"Skipping migration of \" + authFile.toAbsolutePath().toString() + \" because \" + outputFile.getAbsolutePath() + \" already exists\");\n         }\n       }\n     }\n-\n   }\n \n   private File createOutputFile(Path authFile) {\n@@ -103,19 +88,11 @@ public class AuthorizationMigration {\n       directory = Paths.get(dataSetPath).toFile();\n     } else if (fileWithoutExtension.contains(\"__\")) {\n       Tuple<String, String> ownerIdDataSetId = DataSetMetaData.splitCombinedId(fileWithoutExtension);\n-      directory = Paths.get(\n-        dataSetPath,\n-        ownerIdDataSetId.getLeft(),\n-        ownerIdDataSetId.getRight().replace(\"__\", \"\")\n-      ).toFile();\n+      directory = Paths.get(dataSetPath, ownerIdDataSetId.getLeft(), ownerIdDataSetId.getRight().replace(\"__\", \"\")).toFile();\n     } else {\n-      directory = Paths.get(\n-        dataSetPath,\n-        fileWithoutExtension\n-      ).toFile();\n+      directory = Paths.get(dataSetPath, fileWithoutExtension).toFile();\n     }\n-\n     directory.mkdirs();\n     return new File(directory, \"authorizations.json\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/68/AuthorizationMigration.java\nindex 004a9e2fcf4..565ccc1a3dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/68/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/68/AuthorizationMigration.java\nindex 004a9e2fcf4..565ccc1a3dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/68/AuthorizationMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/68/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
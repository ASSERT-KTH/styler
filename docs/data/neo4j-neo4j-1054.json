{
    "project_name": "neo4j-neo4j",
    "error_id": "1054",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1054/TransactionManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1054/TransactionManager.java\nindex 151d7dc0101..267a179aac8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1054/TransactionManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1054/TransactionManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.transaction;\n \n import java.util.Collections;\n@@ -44,11 +45,11 @@ public class TransactionManager extends LifecycleAdapter\n \n     private final Set<FabricTransactionImpl> openTransactions = ConcurrentHashMap.newKeySet();\n \n-    public TransactionManager( FabricRemoteExecutor remoteExecutor,\n-            FabricLocalExecutor localExecutor,\n-            ErrorReporter errorReporter,\n-            FabricConfig fabricConfig,\n-            FabricTransactionMonitor transactionMonitor )\n+    public TransactionManager(FabricRemoteExecutor remoteExecutor,\n+                              FabricLocalExecutor localExecutor,\n+                              ErrorReporter errorReporter,\n+                              FabricConfig fabricConfig,\n+                              FabricTransactionMonitor transactionMonitor)\n     {\n         this.remoteExecutor = remoteExecutor;\n         this.localExecutor = localExecutor;\n@@ -57,46 +58,46 @@ public class TransactionManager extends LifecycleAdapter\n         this.transactionMonitor = transactionMonitor;\n     }\n \n-    public FabricTransaction begin( FabricTransactionInfo transactionInfo, TransactionBookmarkManager transactionBookmarkManager )\n+    public FabricTransaction begin(FabricTransactionInfo transactionInfo, TransactionBookmarkManager transactionBookmarkManager)\n     {\n-        transactionInfo.getLoginContext().authorize( LoginContext.IdLookup.EMPTY, transactionInfo.getDatabaseName() );\n+        transactionInfo.getLoginContext().authorize(LoginContext.IdLookup.EMPTY, transactionInfo.getDatabaseName());\n \n-        FabricTransactionImpl fabricTransaction = new FabricTransactionImpl( transactionInfo,\n-                transactionBookmarkManager,\n-                remoteExecutor,\n-                localExecutor,\n-                errorReporter,\n-                this,\n-                fabricConfig );\n+        FabricTransactionImpl fabricTransaction = new FabricTransactionImpl(transactionInfo,\n+          transactionBookmarkManager,\n+          remoteExecutor,\n+          localExecutor,\n+          errorReporter,\n+          this,\n+          fabricConfig);\n \n-        openTransactions.add( fabricTransaction );\n-        transactionMonitor.startMonitoringTransaction( fabricTransaction, transactionInfo );\n+        openTransactions.add(fabricTransaction);\n+        transactionMonitor.startMonitoringTransaction(fabricTransaction, transactionInfo);\n         return fabricTransaction;\n     }\n \n     @Override\n     public void stop()\n     {\n-        openTransactions.forEach( tx -> tx.markForTermination( Status.Transaction.Terminated ) );\n+        openTransactions.forEach(tx -> tx.markForTermination(Status.Transaction.Terminated));\n     }\n \n-    void removeTransaction( FabricTransactionImpl transaction )\n+    void removeTransaction(FabricTransactionImpl transaction)\n     {\n-        openTransactions.remove( transaction );\n-        transactionMonitor.stopMonitoringTransaction( transaction );\n+        openTransactions.remove(transaction);\n+        transactionMonitor.stopMonitoringTransaction(transaction);\n     }\n \n     public Set<FabricTransaction> getOpenTransactions()\n     {\n-        return Collections.unmodifiableSet( openTransactions );\n+        return Collections.unmodifiableSet(openTransactions);\n     }\n \n-    public Optional<FabricTransaction> findTransactionContaining( InternalTransaction transaction )\n+    public Optional<FabricTransaction> findTransactionContaining(InternalTransaction transaction)\n     {\n         return openTransactions.stream()\n-                               .filter( tx -> tx.getInternalTransactions().stream()\n-                                                .anyMatch( itx -> itx.kernelTransaction() == transaction.kernelTransaction() ) )\n-                               .map( FabricTransaction.class::cast )\n-                               .findFirst();\n+          .filter(tx -> tx.getInternalTransactions().stream()\n+            .anyMatch(itx -> itx.kernelTransaction() == transaction.kernelTransaction()))\n+          .map(FabricTransaction.class::cast)\n+          .findFirst();\n     }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1054/TransactionManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1054/TransactionManager.java\nindex 151d7dc0101..3b33f05997c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1054/TransactionManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1054/TransactionManager.java\n@@ -93,10 +93,9 @@ public class TransactionManager extends LifecycleAdapter\n \n     public Optional<FabricTransaction> findTransactionContaining( InternalTransaction transaction )\n     {\n-        return openTransactions.stream()\n-                               .filter( tx -> tx.getInternalTransactions().stream()\n+        return openTransactions.stream().filter( tx -> tx.getInternalTransactions().stream()\n                                                 .anyMatch( itx -> itx.kernelTransaction() == transaction.kernelTransaction() ) )\n                                .map( FabricTransaction.class::cast )\n                                .findFirst();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
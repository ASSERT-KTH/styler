{
    "project_name": "seedstack-business",
    "error_id": "127",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.specification;\n\nimport static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;\nimport static org.seedstack.business.internal.utils.BusinessUtils.resolveGenerics;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/127/SpecificationModule.java\nindex 762bcb631c9..79a8b48f51d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/127/SpecificationModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/127/SpecificationModule.java\nindex 762bcb631c9..35a09a540a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/127/SpecificationModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;\n@@ -25,7 +26,7 @@ class SpecificationModule extends PrivateModule {\n     private final Set<Class<? extends SpecificationConverter>> specificationConverterClasses;\n \n     SpecificationModule(Set<Class<? extends SpecificationTranslator>> specificationTranslatorClasses,\n-            Set<Class<? extends SpecificationConverter>> specificationConverterClasses) {\n+                        Set<Class<? extends SpecificationConverter>> specificationConverterClasses) {\n         this.specificationTranslatorClasses = specificationTranslatorClasses;\n         this.specificationConverterClasses = specificationConverterClasses;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "column": "5",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/127/SpecificationModule.java\nindex 762bcb631c9..811976e7bc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/127/SpecificationModule.java\n@@ -24,9 +24,8 @@ class SpecificationModule extends PrivateModule {\n     private final Set<Class<? extends SpecificationTranslator>> specificationTranslatorClasses;\n     private final Set<Class<? extends SpecificationConverter>> specificationConverterClasses;\n \n-    SpecificationModule(Set<Class<? extends SpecificationTranslator>> specificationTranslatorClasses,\n-            Set<Class<? extends SpecificationConverter>> specificationConverterClasses) {\n-        this.specificationTranslatorClasses = specificationTranslatorClasses;\n+    SpecificationModule(Set<Class<? extends SpecificationTranslator>> specificationTranslatorClasses, Set<Class<? extends SpecificationConverter>> specificationConverterClasses) {\n+    this.specificationTranslatorClasses = specificationTranslatorClasses;\n         this.specificationConverterClasses = specificationConverterClasses;\n     }\n \n@@ -38,18 +37,15 @@ class SpecificationModule extends PrivateModule {\n             bind(key).to(translatorClass);\n             expose(key);\n         });\n-        specificationConverterClasses.forEach(\n-                converterClass -> bind(buildKey(SpecificationConverter.class, converterClass)).to(converterClass));\n+        specificationConverterClasses.forEach(converterClass -> bind(buildKey(SpecificationConverter.class, converterClass)).to(converterClass));\n \n-        bind(SpecificationBuilder.class).to(SpecificationBuilderImpl.class);\n+bind(SpecificationBuilder.class).to(SpecificationBuilderImpl.class);\n         expose(SpecificationBuilder.class);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private <T> Key<T> buildKey(Class<T> someInterface, Class<? extends T> someClass) {\n-        return getQualifier(someClass).map(annotation -> Key.get((TypeLiteral<T>) TypeLiteral.get(\n-                Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass))), annotation))\n-                .orElse(Key.get((TypeLiteral<T>) TypeLiteral.get(\n-                        Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass)))));\n+        return getQualifier(someClass).map(annotation -> Key.get((TypeLiteral<T>) TypeLiteral.get(Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass))), annotation))\n+                .orElse(Key.get((TypeLiteral<T>) TypeLiteral.get(Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass)))));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "column": "63",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "column": "52",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "column": "52",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "column": "52",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "column": "48",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 47, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "column": "61",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "42",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "column": "28",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/127/SpecificationModule.java\nindex 762bcb631c9..96a29a5ada0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/127/SpecificationModule.java\n@@ -8,8 +8,8 @@\n package org.seedstack.business.internal.specification;\n \n import static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;\n-import static org.seedstack.business.internal.utils.BusinessUtils.resolveGenerics;\n \n+import static org.seedstack.business.internal.utils.BusinessUtils.resolveGenerics;\n import com.google.inject.Key;\n import com.google.inject.PrivateModule;\n import com.google.inject.TypeLiteral;\n@@ -19,13 +19,13 @@ import org.seedstack.business.specification.dsl.SpecificationBuilder;\n import org.seedstack.business.spi.SpecificationConverter;\n import org.seedstack.business.spi.SpecificationTranslator;\n \n+\n class SpecificationModule extends PrivateModule {\n \n     private final Set<Class<? extends SpecificationTranslator>> specificationTranslatorClasses;\n     private final Set<Class<? extends SpecificationConverter>> specificationConverterClasses;\n \n-    SpecificationModule(Set<Class<? extends SpecificationTranslator>> specificationTranslatorClasses,\n-            Set<Class<? extends SpecificationConverter>> specificationConverterClasses) {\n+    SpecificationModule(Set<Class<? extends SpecificationTranslator>> specificationTranslatorClasses, Set<Class<? extends SpecificationConverter>> specificationConverterClasses) {\n         this.specificationTranslatorClasses = specificationTranslatorClasses;\n         this.specificationConverterClasses = specificationConverterClasses;\n     }\n@@ -33,23 +33,22 @@ class SpecificationModule extends PrivateModule {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     protected void configure() {\n-        specificationTranslatorClasses.forEach(translatorClass -> {\n-            Key<SpecificationTranslator> key = buildKey(SpecificationTranslator.class, translatorClass);\n-            bind(key).to(translatorClass);\n-            expose(key);\n-        });\n-        specificationConverterClasses.forEach(\n-                converterClass -> bind(buildKey(SpecificationConverter.class, converterClass)).to(converterClass));\n-\n+        specificationTranslatorClasses.forEach(translatorClass-> {\n+                                                   Key<SpecificationTranslator> key = buildKey(SpecificationTranslator.class, translatorClass);\n+                                                   bind(key).to(translatorClass);\n+                                                   expose(key);\n+                                               });\n+        specificationConverterClasses.forEach(converterClass-> bind(buildKey(SpecificationConverter.class, converterClass))\n+            .to(converterClass));\n         bind(SpecificationBuilder.class).to(SpecificationBuilderImpl.class);\n         expose(SpecificationBuilder.class);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private <T> Key<T> buildKey(Class<T> someInterface, Class<? extends T> someClass) {\n-        return getQualifier(someClass).map(annotation -> Key.get((TypeLiteral<T>) TypeLiteral.get(\n-                Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass))), annotation))\n-                .orElse(Key.get((TypeLiteral<T>) TypeLiteral.get(\n-                        Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass)))));\n+        return getQualifier(someClass)\n+            .map(annotation-> Key.get((TypeLiteral<T>) TypeLiteral.get(Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass))),\n+                annotation))\n+            .orElse(Key.get((TypeLiteral<T>) TypeLiteral.get(Types.newParameterizedType(someInterface, resolveGenerics(someInterface, someClass)))));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/127/SpecificationModule.java\nindex 762bcb631c9..79a8b48f51d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/127/SpecificationModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/127/SpecificationModule.java\nindex 762bcb631c9..79a8b48f51d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/127/SpecificationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/127/SpecificationModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "twilio-twilio-java",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "64",
                "severity": "error",
                "message": "Line is longer than 130 characters (found 323).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            .build();\n\n        Assert.assertEquals(\"%3CResponse%3E%3CRedirect%2F%3E%3CDial%2F%3E%3CEnqueue%3Eenqueue%3C%2FEnqueue%3E%3CGather%2F%3E%3CHangup%2F%3E%3CLeave%2F%3E%3CPause%2F%3E%3CPlay%3Ehola%3C%2FPlay%3E%3CRecord%2F%3E%3CReject%2F%3E%3CSay%3Ehello+world%3C%2FSay%3E%3CSms%3Etest+sms%3C%2FSms%3E%3C%2FResponse%3E\", response.toUrl());\n    }\n\n    @Test",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 323).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 288).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/39/VoiceResponseTest.java\nindex 0aca27bdbdf..974b6fd615d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/39/VoiceResponseTest.java\n@@ -41,7 +41,7 @@ public class VoiceResponseTest {\n                 \"<Say>hello world</Say>\" +\n                 \"<Sms>test sms</Sms>\" +\n                 \"<Say>goodbye world</Say>\" +\n-            \"</Response>\", response.toXml());\n+                \"</Response>\", response.toXml());\n     }\n \n     @Test\n@@ -61,7 +61,9 @@ public class VoiceResponseTest {\n             .sms(new Sms.Builder(\"test sms\").build())\n             .build();\n \n-        Assert.assertEquals(\"%3CResponse%3E%3CRedirect%2F%3E%3CDial%2F%3E%3CEnqueue%3Eenqueue%3C%2FEnqueue%3E%3CGather%2F%3E%3CHangup%2F%3E%3CLeave%2F%3E%3CPause%2F%3E%3CPlay%3Ehola%3C%2FPlay%3E%3CRecord%2F%3E%3CReject%2F%3E%3CSay%3Ehello+world%3C%2FSay%3E%3CSms%3Etest+sms%3C%2FSms%3E%3C%2FResponse%3E\", response.toUrl());\n+        Assert.assertEquals(\n+            \"%3CResponse%3E%3CRedirect%2F%3E%3CDial%2F%3E%3CEnqueue%3Eenqueue%3C%2FEnqueue%3E%3CGather%2F%3E%3CHangup%2F%3E%3CLeave%2F%3E%3CPause%2F%3E%3CPlay%3Ehola%3C%2FPlay%3E%3CRecord%2F%3E%3CReject%2F%3E%3CSay%3Ehello+world%3C%2FSay%3E%3CSms%3Etest+sms%3C%2FSms%3E%3C%2FResponse%3E\",\n+            response.toUrl());\n     }\n \n     @Test\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 303).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 323).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/naturalize/39/VoiceResponseTest.java\nindex 0aca27bdbdf..f2c12854fdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/naturalize/39/VoiceResponseTest.java\n@@ -27,21 +27,7 @@ public class VoiceResponseTest {\n             .build();\n \n         Assert.assertEquals(\n-            \"<Response>\" +\n-                \"<Redirect/>\" +\n-                \"<Dial/>\" +\n-                \"<Enqueue>enqueue</Enqueue>\" +\n-                \"<Gather/>\" +\n-                \"<Hangup/>\" +\n-                \"<Leave/>\" +\n-                \"<Pause/>\" +\n-                \"<Play>hola</Play>\" +\n-                \"<Record/>\" +\n-                \"<Reject/>\" +\n-                \"<Say>hello world</Say>\" +\n-                \"<Sms>test sms</Sms>\" +\n-                \"<Say>goodbye world</Say>\" +\n-            \"</Response>\", response.toXml());\n+            \"<Response>\" + \"<Redirect/>\" + \"<Dial/>\" + \"<Enqueue>enqueue</Enqueue>\" + \"<Gather/>\" + \"<Hangup/>\" + \"<Leave/>\" + \"<Pause/>\" + \"<Play>hola</Play>\" + \"<Record/>\" + \"<Reject/>\" + \"<Say>hello world</Say>\" + \"<Sms>test sms</Sms>\" + \"<Say>goodbye world</Say>\" + \"</Response>\", response.toXml());\n     }\n \n     @Test\n@@ -71,4 +57,4 @@ public class VoiceResponseTest {\n             new VoiceResponse.Builder().say(new Say.Builder(\"Transferring to sales\").build()).build()\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 319).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 323).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/39/VoiceResponseTest.java\nindex 0aca27bdbdf..a9daa66dc54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/39/VoiceResponseTest.java\n@@ -6,60 +6,46 @@ import org.junit.Test;\n /**\n  * Test class for {@link VoiceResponse}.\n  */\n+\n public class VoiceResponseTest {\n \n     @Test\n     public void testXml() throws TwiMLException {\n-        VoiceResponse response = new VoiceResponse.Builder()\n-            .redirect(new Redirect.Builder().build())\n-            .dial(new Dial.Builder().build())\n-            .enqueue(new Enqueue.Builder().queueName(\"enqueue\").build())\n-            .gather(new Gather.Builder().build())\n-            .hangup(new Hangup())\n-            .leave(new Leave())\n-            .pause(new Pause.Builder().build())\n-            .play(new Play.Builder(\"hola\").build())\n-            .record(new Record.Builder().build())\n-            .reject(new Reject.Builder().build())\n-            .say(new Say.Builder(\"hello world\").build())\n-            .sms(new Sms.Builder(\"test sms\").build())\n-            .say(new Say.Builder(\"goodbye world\").build())\n-            .build();\n+        VoiceResponse response = new VoiceResponse.Builder().redirect(new Redirect.Builder().build())\n+                                                            .dial(new Dial.Builder().build())\n+                                                            .enqueue(new Enqueue.Builder().queueName(\"enqueue\")\n+                                                                                          .build())\n+                                                            .gather(new Gather.Builder().build())\n+                                                            .hangup(new Hangup())\n+                                                            .leave(new Leave())\n+                                                            .pause(new Pause.Builder().build())\n+                                                            .play(new Play.Builder(\"hola\").build())\n+                                                            .record(new Record.Builder().build())\n+                                                            .reject(new Reject.Builder().build())\n+                                                            .say(new Say.Builder(\"hello world\").build())\n+                                                            .sms(new Sms.Builder(\"test sms\").build())\n+                                                            .say(new Say.Builder(\"goodbye world\").build())\n+                                                            .build();\n \n-        Assert.assertEquals(\n-            \"<Response>\" +\n-                \"<Redirect/>\" +\n-                \"<Dial/>\" +\n-                \"<Enqueue>enqueue</Enqueue>\" +\n-                \"<Gather/>\" +\n-                \"<Hangup/>\" +\n-                \"<Leave/>\" +\n-                \"<Pause/>\" +\n-                \"<Play>hola</Play>\" +\n-                \"<Record/>\" +\n-                \"<Reject/>\" +\n-                \"<Say>hello world</Say>\" +\n-                \"<Sms>test sms</Sms>\" +\n-                \"<Say>goodbye world</Say>\" +\n-            \"</Response>\", response.toXml());\n+        Assert.assertEquals(\"<Response>\" + \"<Redirect/>\" + \"<Dial/>\" + \"<Enqueue>enqueue</Enqueue>\" + \"<Gather/>\" + \"<Hangup/>\" + \"<Leave/>\" + \"<Pause/>\" + \"<Play>hola</Play>\" + \"<Record/>\" + \"<Reject/>\" + \"<Say>hello world</Say>\" + \"<Sms>test sms</Sms>\" + \"<Say>goodbye world</Say>\" + \"</Response>\", response.toXml());\n     }\n \n     @Test\n     public void testUrl() throws TwiMLException {\n-        VoiceResponse response = new VoiceResponse.Builder()\n-            .redirect(new Redirect.Builder().build())\n-            .dial(new Dial.Builder().build())\n-            .enqueue(new Enqueue.Builder().queueName(\"enqueue\").build())\n-            .gather(new Gather.Builder().build())\n-            .hangup(new Hangup())\n-            .leave(new Leave())\n-            .pause(new Pause.Builder().build())\n-            .play(new Play.Builder(\"hola\").build())\n-            .record(new Record.Builder().build())\n-            .reject(new Reject.Builder().build())\n-            .say(new Say.Builder(\"hello world\").build())\n-            .sms(new Sms.Builder(\"test sms\").build())\n-            .build();\n+        VoiceResponse response = new VoiceResponse.Builder().redirect(new Redirect.Builder().build())\n+                                                            .dial(new Dial.Builder().build())\n+                                                            .enqueue(new Enqueue.Builder().queueName(\"enqueue\")\n+                                                                                          .build())\n+                                                            .gather(new Gather.Builder().build())\n+                                                            .hangup(new Hangup())\n+                                                            .leave(new Leave())\n+                                                            .pause(new Pause.Builder().build())\n+                                                            .play(new Play.Builder(\"hola\").build())\n+                                                            .record(new Record.Builder().build())\n+                                                            .reject(new Reject.Builder().build())\n+                                                            .say(new Say.Builder(\"hello world\").build())\n+                                                            .sms(new Sms.Builder(\"test sms\").build())\n+                                                            .build();\n \n         Assert.assertEquals(\"%3CResponse%3E%3CRedirect%2F%3E%3CDial%2F%3E%3CEnqueue%3Eenqueue%3C%2FEnqueue%3E%3CGather%2F%3E%3CHangup%2F%3E%3CLeave%2F%3E%3CPause%2F%3E%3CPlay%3Ehola%3C%2FPlay%3E%3CRecord%2F%3E%3CReject%2F%3E%3CSay%3Ehello+world%3C%2FSay%3E%3CSms%3Etest+sms%3C%2FSms%3E%3C%2FResponse%3E\", response.toUrl());\n     }\n@@ -67,8 +53,10 @@ public class VoiceResponseTest {\n     @Test\n     public void testEquals() {\n         Assert.assertEquals(\n-            new VoiceResponse.Builder().say(new Say.Builder(\"Transferring to sales\").build()).build(),\n-            new VoiceResponse.Builder().say(new Say.Builder(\"Transferring to sales\").build()).build()\n-        );\n+new VoiceResponse.Builder().say(new Say.Builder(\"Transferring to sales\").build())\n+                           .build(),\n+new VoiceResponse.Builder().say(new Say.Builder(\"Transferring to sales\").build())\n+                           .build()\n+);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 323).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 334).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "column": "329",
                    "severity": "error",
                    "message": "'}' at column 329 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "329",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "64",
                    "column": "330",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/39/VoiceResponseTest.java\nindex 0aca27bdbdf..8e2cf519101 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/39/VoiceResponseTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/39/VoiceResponseTest.java\n@@ -61,10 +61,7 @@ public class VoiceResponseTest {\n             .sms(new Sms.Builder(\"test sms\").build())\n             .build();\n \n-        Assert.assertEquals(\"%3CResponse%3E%3CRedirect%2F%3E%3CDial%2F%3E%3CEnqueue%3Eenqueue%3C%2FEnqueue%3E%3CGather%2F%3E%3CHangup%2F%3E%3CLeave%2F%3E%3CPause%2F%3E%3CPlay%3Ehola%3C%2FPlay%3E%3CRecord%2F%3E%3CReject%2F%3E%3CSay%3Ehello+world%3C%2FSay%3E%3CSms%3Etest+sms%3C%2FSms%3E%3C%2FResponse%3E\", response.toUrl());\n-    }\n-\n-    @Test\n+            Assert .assertEquals(\"%3CResponse%3E%3CRedirect%2F%3E%3CDial%2F%3E%3CEnqueue%3Eenqueue%3C%2FEnqueue%3E%3CGather%2F%3E%3CHangup%2F%3E%3CLeave%2F%3E%3CPause%2F%3E%3CPlay%3Ehola%3C%2FPlay%3E%3CRecord%2F%3E%3CReject%2F%3E%3CSay%3Ehello+world%3C%2FSay%3E%3CSms%3Etest+sms%3C%2FSms%3E%3C%2FResponse%3E\", response.toUrl());}@Test\n     public void testEquals() {\n         Assert.assertEquals(\n             new VoiceResponse.Builder().say(new Say.Builder(\"Transferring to sales\").build()).build(),\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2605",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2605/BridgingIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2605/BridgingIndexProgressor.java\nindex f338f180255..6d2d18e3f4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2605/BridgingIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2605/BridgingIndexProgressor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.index;\n \n import java.util.Queue;\n@@ -40,7 +41,7 @@ public class BridgingIndexProgressor implements IndexProgressor.EntityValueClien\n     private final Queue<IndexProgressor> progressors = new ConcurrentLinkedQueue<>();\n     private IndexProgressor current;\n \n-    public BridgingIndexProgressor( EntityValueClient client, int[] keys )\n+    public BridgingIndexProgressor(EntityValueClient client, int[] keys)\n     {\n         this.client = client;\n         this.keys = keys;\n@@ -49,17 +50,16 @@ public class BridgingIndexProgressor implements IndexProgressor.EntityValueClien\n     @Override\n     public boolean next()\n     {\n-        if ( current == null )\n+        if (current == null)\n         {\n             current = progressors.poll();\n         }\n-        while ( current != null )\n+        while (current != null)\n         {\n-            if ( current.next() )\n+            if (current.next())\n             {\n                 return true;\n-            }\n-            else\n+            } else\n             {\n                 current.close();\n                 current = progressors.poll();\n@@ -77,34 +77,34 @@ public class BridgingIndexProgressor implements IndexProgressor.EntityValueClien\n     @Override\n     public void close()\n     {\n-        progressors.forEach( IndexProgressor::close );\n+        progressors.forEach(IndexProgressor::close);\n     }\n \n     @Override\n-    public void initialize( IndexDescriptor descriptor,\n-                            IndexProgressor progressor,\n-                            IndexQuery[] queries,\n-                            IndexQueryConstraints constraints,\n-                            boolean indexIncludesTransactionState )\n+    public void initialize(IndexDescriptor descriptor,\n+                           IndexProgressor progressor,\n+                           IndexQuery[] queries,\n+                           IndexQueryConstraints constraints,\n+                           boolean indexIncludesTransactionState)\n     {\n-        assertKeysAlign( descriptor.schema().getPropertyIds() );\n-        progressors.add( progressor );\n+        assertKeysAlign(descriptor.schema().getPropertyIds());\n+        progressors.add(progressor);\n     }\n \n-    private void assertKeysAlign( int[] keys )\n+    private void assertKeysAlign(int[] keys)\n     {\n-        for ( int i = 0; i < this.keys.length; i++ )\n+        for (int i = 0; i < this.keys.length; i++)\n         {\n-            if ( this.keys[i] != keys[i] )\n+            if (this.keys[i] != keys[i])\n             {\n-                throw new UnsupportedOperationException( \"Cannot chain multiple progressors with different key set.\" );\n+                throw new UnsupportedOperationException(\"Cannot chain multiple progressors with different key set.\");\n             }\n         }\n     }\n \n     @Override\n-    public boolean acceptEntity( long reference, float score, Value... values )\n+    public boolean acceptEntity(long reference, float score, Value... values)\n     {\n-        return client.acceptEntity( reference, score, values );\n+        return client.acceptEntity(reference, score, values);\n     }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2605/BridgingIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2605/BridgingIndexProgressor.java\nindex f338f180255..de7ee475147 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2605/BridgingIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2605/BridgingIndexProgressor.java\n@@ -86,7 +86,7 @@ public class BridgingIndexProgressor implements IndexProgressor.EntityValueClien\n                             IndexQuery[] queries,\n                             IndexQueryConstraints constraints,\n                             boolean indexIncludesTransactionState )\n-    {\n+{\n         assertKeysAlign( descriptor.schema().getPropertyIds() );\n         progressors.add( progressor );\n     }\n@@ -107,4 +107,4 @@ public class BridgingIndexProgressor implements IndexProgressor.EntityValueClien\n     {\n         return client.acceptEntity( reference, score, values );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
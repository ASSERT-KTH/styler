{
    "project_name": "griddynamics-jagger",
    "error_id": "98",
    "information": {
        "errors": [
            {
                "line": "20",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage com.griddynamics.jagger.monitoring;\n\nimport com.griddynamics.jagger.coordinator.Coordinator;\nimport com.griddynamics.jagger.coordinator.NodeContext;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/98/MonitoringTaskDistributor.java\nindex d569dfd9c14..03b2f8a2525 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/98/MonitoringTaskDistributor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.monitoring;\n \n import com.griddynamics.jagger.coordinator.Coordinator;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/98/MonitoringTaskDistributor.java\nindex d569dfd9c14..5db83de1129 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/98/MonitoringTaskDistributor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.monitoring;\n \n import com.griddynamics.jagger.coordinator.Coordinator;\n@@ -64,7 +65,7 @@ public class MonitoringTaskDistributor extends AbstractDistributor<MonitoringTas\n         return new AbstractExecutionThreadService() {\n             @Override\n             protected void run() throws Exception {\n-    \n+\n                 MonitoringController monitoringController = null;\n                 try {\n                     taskExecutionStatusProvider.setStatus(taskId, TaskData.ExecutionStatus.IN_PROGRESS);\n@@ -83,7 +84,7 @@ public class MonitoringTaskDistributor extends AbstractDistributor<MonitoringTas\n                         Map<NodeId, MonitoringStatus> status = monitoringController.getStatus();\n \n                         if (terminationStrategy.isTerminationRequired(status)) {\n-                            log.info(\"Going to terminate work {}. According to termination strategy\",task.getTaskName());\n+                            log.info(\"Going to terminate work {}. According to termination strategy\", task.getTaskName());\n                             break;\n                         }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 0, expected level should be one of the following: 12, 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/98/MonitoringTaskDistributor.java\nindex d569dfd9c14..8a04209fb9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/98/MonitoringTaskDistributor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.monitoring;\n \n import com.griddynamics.jagger.coordinator.Coordinator;\n@@ -58,15 +59,14 @@ public class MonitoringTaskDistributor extends AbstractDistributor<MonitoringTas\n \n     @Override\n     protected Service performDistribution(final ExecutorService executor, final String sessionId, final String taskId, final MonitoringTask task,\n-                                          final Map<NodeId, RemoteExecutor> remotes, final Multimap<NodeType, NodeId> availableNodes,\n-                                          final Coordinator coordinator, final NodeContext nodeContext) {\n-\n-        return new AbstractExecutionThreadService() {\n+                 final Map<NodeId, RemoteExecutor> remotes, final Multimap<NodeType, NodeId> availableNodes, final Coordinator coordinator, final NodeContext nodeContext) {\n+    return new AbstractExecutionThreadService() {\n             @Override\n             protected void run() throws Exception {\n     \n                 MonitoringController monitoringController = null;\n-                try {\n+\n+try {\n                     taskExecutionStatusProvider.setStatus(taskId, TaskData.ExecutionStatus.IN_PROGRESS);\n                     MonitoringTerminationStrategy terminationStrategy = task.getTerminationStrategy().get();\n \n@@ -123,4 +123,4 @@ public class MonitoringTaskDistributor extends AbstractDistributor<MonitoringTas\n     public long getTtl() {\n         return ttl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/98/MonitoringTaskDistributor.java\nindex d569dfd9c14..03b2f8a2525 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/98/MonitoringTaskDistributor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.monitoring;\n \n import com.griddynamics.jagger.coordinator.Coordinator;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/98/MonitoringTaskDistributor.java\nindex d569dfd9c14..03b2f8a2525 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/98/MonitoringTaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/98/MonitoringTaskDistributor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.monitoring;\n \n import com.griddynamics.jagger.coordinator.Coordinator;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2972",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2972/FileOperation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2972/FileOperation.java\nindex ed996cfb730..df2fd5e74f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2972/FileOperation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2972/FileOperation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.IOException;\n@@ -32,83 +33,83 @@ import org.neo4j.io.fs.FileSystemAbstraction;\n enum FileOperation\n {\n     COPY\n-    {\n-        /**\n-         * Copies a file from one directory to another.\n-         *\n-         * @param fs the {@link FileSystemAbstraction} the file exist on\n-         * @param fileName base filename of the file to move, not the complete path\n-         * @param fromDirectory directory currently containing filename\n-         * @param toDirectory directory to host filename\n-         * @throws IOException if the file couldn't be copied\n-         */\n-        @Override\n-        public void perform( FileSystemAbstraction fs, String fileName,\n-                Path fromDirectory, boolean skipNonExistentFromFile,\n-                Path toDirectory, ExistingTargetStrategy existingTargetStrategy )\n-                throws IOException\n-        {\n-            Path fromFile = fromFile( fs, fromDirectory, fileName, skipNonExistentFromFile );\n-            if ( fromFile != null )\n-            {\n-                Path toFile = toFile( fs, toDirectory, fileName, existingTargetStrategy );\n-                if ( toFile != null )\n-                {\n-                    fs.copyFile( fromFile, toFile );\n-                }\n-            }\n-        }\n-    },\n+      {\n+          /**\n+           * Copies a file from one directory to another.\n+           *\n+           * @param fs the {@link FileSystemAbstraction} the file exist on\n+           * @param fileName base filename of the file to move, not the complete path\n+           * @param fromDirectory directory currently containing filename\n+           * @param toDirectory directory to host filename\n+           * @throws IOException if the file couldn't be copied\n+           */\n+          @Override\n+          public void perform(FileSystemAbstraction fs, String fileName,\n+                              Path fromDirectory, boolean skipNonExistentFromFile,\n+                              Path toDirectory, ExistingTargetStrategy existingTargetStrategy)\n+            throws IOException\n+          {\n+              Path fromFile = fromFile(fs, fromDirectory, fileName, skipNonExistentFromFile);\n+              if (fromFile != null)\n+              {\n+                  Path toFile = toFile(fs, toDirectory, fileName, existingTargetStrategy);\n+                  if (toFile != null)\n+                  {\n+                      fs.copyFile(fromFile, toFile);\n+                  }\n+              }\n+          }\n+      },\n     MOVE\n-    {\n-        /**\n-         * Moves a file from one directory to another, by a rename op.\n-         *\n-         * @param fs the {@link FileSystemAbstraction} the file exist on\n-         * @param fileName base filename of the file to move, not the complete path\n-         * @param fromDirectory directory currently containing filename\n-         * @param toDirectory directory to host filename - must be in the same disk partition as filename\n-         * @throws IOException if the file couldn't be moved\n-         */\n-        @Override\n-        public void perform( FileSystemAbstraction fs, String fileName,\n-                Path fromDirectory, boolean skipNonExistentFromFile,\n-                Path toDirectory, ExistingTargetStrategy existingTargetStrategy )\n-                throws IOException\n-        {\n-            Path fromFile = fromFile( fs, fromDirectory, fileName, skipNonExistentFromFile );\n-            if ( fromFile != null )\n-            {\n-                if ( toFile( fs, toDirectory, fileName, existingTargetStrategy ) != null )\n-                {\n-                    fs.moveToDirectory( fromFile, toDirectory );\n-                }\n-            }\n-        }\n-    },\n+      {\n+          /**\n+           * Moves a file from one directory to another, by a rename op.\n+           *\n+           * @param fs the {@link FileSystemAbstraction} the file exist on\n+           * @param fileName base filename of the file to move, not the complete path\n+           * @param fromDirectory directory currently containing filename\n+           * @param toDirectory directory to host filename - must be in the same disk partition as filename\n+           * @throws IOException if the file couldn't be moved\n+           */\n+          @Override\n+          public void perform(FileSystemAbstraction fs, String fileName,\n+                              Path fromDirectory, boolean skipNonExistentFromFile,\n+                              Path toDirectory, ExistingTargetStrategy existingTargetStrategy)\n+            throws IOException\n+          {\n+              Path fromFile = fromFile(fs, fromDirectory, fileName, skipNonExistentFromFile);\n+              if (fromFile != null)\n+              {\n+                  if (toFile(fs, toDirectory, fileName, existingTargetStrategy) != null)\n+                  {\n+                      fs.moveToDirectory(fromFile, toDirectory);\n+                  }\n+              }\n+          }\n+      },\n     DELETE\n-    {\n-        @Override\n-        public void perform( FileSystemAbstraction fs, String fileName,\n-                Path directory, boolean skipNonExistentFromFile,\n-                Path unusedFile, ExistingTargetStrategy unused )\n-        {\n-            Path file = fromFile( fs, directory, fileName, skipNonExistentFromFile );\n-            if ( file != null )\n-            {\n-                fs.deleteFile( file );\n-            }\n-        }\n-    };\n+      {\n+          @Override\n+          public void perform(FileSystemAbstraction fs, String fileName,\n+                              Path directory, boolean skipNonExistentFromFile,\n+                              Path unusedFile, ExistingTargetStrategy unused)\n+          {\n+              Path file = fromFile(fs, directory, fileName, skipNonExistentFromFile);\n+              if (file != null)\n+              {\n+                  fs.deleteFile(file);\n+              }\n+          }\n+      };\n \n-    public abstract void perform( FileSystemAbstraction fs, String fileName,\n-            Path fromDirectory, boolean skipNonExistentFromFile,\n-            Path toDirectory, ExistingTargetStrategy existingTargetStrategy ) throws IOException;\n+    public abstract void perform(FileSystemAbstraction fs, String fileName,\n+                                 Path fromDirectory, boolean skipNonExistentFromFile,\n+                                 Path toDirectory, ExistingTargetStrategy existingTargetStrategy) throws IOException;\n \n-    private static Path fromFile( FileSystemAbstraction fs, Path directory, String name, boolean skipNonExistent )\n+    private static Path fromFile(FileSystemAbstraction fs, Path directory, String name, boolean skipNonExistent)\n     {\n-        Path fromFile = directory.resolve( name );\n-        if ( skipNonExistent && !fs.fileExists( fromFile ) )\n+        Path fromFile = directory.resolve(name);\n+        if (skipNonExistent && !fs.fileExists(fromFile))\n         {\n             return null;\n         }\n@@ -117,23 +118,23 @@ enum FileOperation\n         return fromFile;\n     }\n \n-    private static Path toFile( FileSystemAbstraction fs, Path directory, String name,\n-            ExistingTargetStrategy existingTargetStrategy ) throws FileAlreadyExistsException\n+    private static Path toFile(FileSystemAbstraction fs, Path directory, String name,\n+                               ExistingTargetStrategy existingTargetStrategy) throws FileAlreadyExistsException\n     {\n-        Path file = directory.resolve( name );\n-        if ( fs.fileExists( file ) )\n+        Path file = directory.resolve(name);\n+        if (fs.fileExists(file))\n         {\n-            switch ( existingTargetStrategy )\n+            switch (existingTargetStrategy)\n             {\n-            case FAIL:\n-                throw new FileAlreadyExistsException( file.toAbsolutePath().toString() );\n-            case OVERWRITE:\n-                fs.deleteFile( file );\n-                return file;\n-            case SKIP:\n-                return null;\n-            default:\n-                throw new IllegalStateException( existingTargetStrategy.name() );\n+                case FAIL:\n+                    throw new FileAlreadyExistsException(file.toAbsolutePath().toString());\n+                case OVERWRITE:\n+                    fs.deleteFile(file);\n+                    return file;\n+                case SKIP:\n+                    return null;\n+                default:\n+                    throw new IllegalStateException(existingTargetStrategy.name());\n             }\n         }\n         return file;\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2972/FileOperation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2972/FileOperation.java\nindex ed996cfb730..7a69660eefe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2972/FileOperation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2972/FileOperation.java\n@@ -138,4 +138,4 @@ enum FileOperation\n         }\n         return file;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
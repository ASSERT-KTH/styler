{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3239",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3239/AccessStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3239/AccessStatistics.java\nindex 53d804b2be7..65d030b647b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3239/AccessStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3239/AccessStatistics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.statistics;\n \n import java.util.HashMap;\n@@ -34,142 +35,142 @@ import static java.lang.String.format;\n  */\n public class AccessStatistics\n {\n-    private final Map<RecordStore<? extends AbstractBaseRecord>,AccessStats> stats = new HashMap<>();\n-\n-    public void register( RecordStore<? extends AbstractBaseRecord> store, AccessStats accessStats )\n+  private final Map<RecordStore<? extends AbstractBaseRecord>, AccessStats> stats = new HashMap<>();\n+\n+  public void register(RecordStore<? extends AbstractBaseRecord> store, AccessStats accessStats)\n+  {\n+    assert !stats.containsKey(store);\n+    stats.put(store, accessStats);\n+  }\n+\n+  public String getAccessStatSummary()\n+  {\n+    String msg = \"\";\n+    for (AccessStats accessStats : stats.values())\n     {\n-        assert !stats.containsKey( store );\n-        stats.put( store, accessStats );\n+      String accessStat = accessStats.toString();\n+      if (accessStat.length() != 0)\n+      {\n+        msg += format(accessStat + \"%n\");\n+      }\n     }\n+    return msg;\n+  }\n \n-    public String getAccessStatSummary()\n+  public void reset()\n+  {\n+    for (AccessStats accessStats : stats.values())\n     {\n-        String msg = \"\";\n-        for ( AccessStats accessStats : stats.values() )\n-        {\n-            String accessStat = accessStats.toString();\n-            if ( accessStat.length() != 0 )\n-            {\n-                msg += format( accessStat + \"%n\" );\n-            }\n-        }\n-        return msg;\n+      accessStats.reset();\n     }\n-\n-    public void reset()\n+  }\n+\n+  public static class AccessStats\n+  {\n+    private long reads;\n+    private long writes;\n+    private long inUse;\n+    private long randomReads;\n+    private long randomWrites;\n+    private int proximityValue;\n+    private final String storeType;\n+    private long prevReadId;\n+    private long prevWriteId;\n+\n+    public AccessStats(String type, int proximity)\n     {\n-        for ( AccessStats accessStats : stats.values() )\n-        {\n-            accessStats.reset();\n-        }\n+      this.storeType = type;\n+      this.proximityValue = proximity;\n     }\n \n-    public static class AccessStats\n+    @Override\n+    public String toString()\n     {\n-        private long reads;\n-        private long writes;\n-        private long inUse;\n-        private long randomReads;\n-        private long randomWrites;\n-        private int proximityValue;\n-        private final String storeType;\n-        private long prevReadId;\n-        private long prevWriteId;\n-\n-        public AccessStats( String type, int proximity )\n-        {\n-            this.storeType = type;\n-            this.proximityValue = proximity;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            if ( reads == 0 && writes == 0 && randomReads == 0 )\n-            {\n-                return \"\";\n-            }\n-            StringBuilder buf = new StringBuilder( storeType );\n-            appendStat( buf, \"InUse\", inUse );\n-            appendStat( buf, \"Reads\", reads );\n-            appendStat( buf, \"Random Reads\", randomReads );\n-            appendStat( buf, \"Writes\", writes );\n-            appendStat( buf, \"Random Writes\", randomWrites );\n-            int scatterIndex = 0;\n-            if ( randomReads > 0 )\n-            {\n-                long scatterReads = reads == 0 ? randomReads : reads;\n-                scatterIndex = (int) ((randomReads * 100) / scatterReads);\n-            }\n-            appendStat( buf, \"ScatterIndex\", scatterIndex );\n-\n-            // TODO enable this comment again when we have an official property reorganization tool,\n-            // but keep here as a reminder to do so\n+      if (reads == 0 && writes == 0 && randomReads == 0)\n+      {\n+        return \"\";\n+      }\n+      StringBuilder buf = new StringBuilder(storeType);\n+      appendStat(buf, \"InUse\", inUse);\n+      appendStat(buf, \"Reads\", reads);\n+      appendStat(buf, \"Random Reads\", randomReads);\n+      appendStat(buf, \"Writes\", writes);\n+      appendStat(buf, \"Random Writes\", randomWrites);\n+      int scatterIndex = 0;\n+      if (randomReads > 0)\n+      {\n+        long scatterReads = reads == 0 ? randomReads : reads;\n+        scatterIndex = (int) ((randomReads * 100) / scatterReads);\n+      }\n+      appendStat(buf, \"ScatterIndex\", scatterIndex);\n+\n+      // TODO enable this comment again when we have an official property reorganization tool,\n+      // but keep here as a reminder to do so\n //          if ( scatterIndex > 0.5 )\n //          {\n //              buf.append( format( \"%n *** Property Store reorgization is recommended for optimal performance ***\" ) );\n //          }\n \n-            return buf.toString();\n-        }\n+      return buf.toString();\n+    }\n \n-        private void appendStat( StringBuilder target, String name, long stat )\n-        {\n-            if ( stat > 0 )\n-            {\n-                target.append( format( \"%n  %s: %d\", name, stat ) );\n-            }\n-        }\n+    private void appendStat(StringBuilder target, String name, long stat)\n+    {\n+      if (stat > 0)\n+      {\n+        target.append(format(\"%n  %s: %d\", name, stat));\n+      }\n+    }\n \n-        public void reset()\n-        {\n-            this.reads = 0;\n-            this.writes = 0;\n-            this.randomReads = 0;\n-            this.randomReads = 0;\n-            this.randomWrites = 0;\n-            this.inUse = 0;\n-        }\n+    public void reset()\n+    {\n+      this.reads = 0;\n+      this.writes = 0;\n+      this.randomReads = 0;\n+      this.randomReads = 0;\n+      this.randomWrites = 0;\n+      this.inUse = 0;\n+    }\n \n-        public void upRead( long id )\n-        {\n-            if ( prevReadId != id )\n-            {\n-                reads++;\n-                incrementRandomReads( id, prevReadId );\n-                prevReadId = id;\n-            }\n-        }\n+    public void upRead(long id)\n+    {\n+      if (prevReadId != id)\n+      {\n+        reads++;\n+        incrementRandomReads(id, prevReadId);\n+        prevReadId = id;\n+      }\n+    }\n \n-        private boolean notCloseBy( long id1, long id2 )\n-        {\n-            return id1 >= 0 && id2 >= 0 && Math.abs( id2 - id1 ) >= this.proximityValue;\n-        }\n+    private boolean notCloseBy(long id1, long id2)\n+    {\n+      return id1 >= 0 && id2 >= 0 && Math.abs(id2 - id1) >= this.proximityValue;\n+    }\n \n-        public void upWrite( long id )\n+    public void upWrite(long id)\n+    {\n+      if (prevWriteId != id)\n+      {\n+        writes++;\n+        if (id > 0 && notCloseBy(id, prevWriteId))\n         {\n-            if ( prevWriteId != id )\n-            {\n-                writes++;\n-                if ( id > 0 && notCloseBy( id, prevWriteId ) )\n-                {\n-                    randomWrites++;\n-                }\n-                prevWriteId = id;\n-            }\n+          randomWrites++;\n         }\n+        prevWriteId = id;\n+      }\n+    }\n \n-        public synchronized void incrementRandomReads( long id1, long id2 )\n-        {\n-            if ( notCloseBy( id1, id2 ) )\n-            {\n-                randomReads++;\n-            }\n-        }\n+    public synchronized void incrementRandomReads(long id1, long id2)\n+    {\n+      if (notCloseBy(id1, id2))\n+      {\n+        randomReads++;\n+      }\n+    }\n \n-        public synchronized void upInUse()\n-        {\n-            inUse++;\n-        }\n+    public synchronized void upInUse()\n+    {\n+      inUse++;\n     }\n+  }\n }\n",
            "diff_size": 154
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "103",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3239/AccessStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3239/AccessStatistics.java\nindex 53d804b2be7..b9a0caa9f73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3239/AccessStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3239/AccessStatistics.java\n@@ -89,7 +89,8 @@ public class AccessStatistics\n             {\n                 return \"\";\n             }\n-            StringBuilder buf = new StringBuilder( storeType );\n+\n+StringBuilder buf = new StringBuilder( storeType );\n             appendStat( buf, \"InUse\", inUse );\n             appendStat( buf, \"Reads\", reads );\n             appendStat( buf, \"Random Reads\", randomReads );\n@@ -99,18 +100,14 @@ public class AccessStatistics\n             if ( randomReads > 0 )\n             {\n                 long scatterReads = reads == 0 ? randomReads : reads;\n-                scatterIndex = (int) ((randomReads * 100) / scatterReads);\n+                scatterIndex = ( int) ((randomReads * 100) / scatterReads);\n             }\n-            appendStat( buf, \"ScatterIndex\", scatterIndex );\n \n-            // TODO enable this comment again when we have an official property reorganization tool,\n-            // but keep here as a reminder to do so\n-//          if ( scatterIndex > 0.5 )\n-//          {\n-//              buf.append( format( \"%n *** Property Store reorgization is recommended for optimal performance ***\" ) );\n-//          }\n+appendStat( buf, \"ScatterIndex\", scatterIndex );\n \n-            return buf.toString();\n+            // TODO enable this comment again when we have an official property reorganization tool,\n+            // but ke\n+    return buf.toString();\n         }\n \n         private void appendStat( StringBuilder target, String name, long stat )\n@@ -155,7 +152,8 @@ public class AccessStatistics\n                 {\n                     randomWrites++;\n                 }\n-                prevWriteId = id;\n+\n+prevWriteId = id;\n             }\n         }\n \n@@ -172,4 +170,4 @@ public class AccessStatistics\n             inUse++;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "356",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "118",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/356/MembershipEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/356/MembershipEntry.java\nindex c97c5601826..5b7c97155dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/356/MembershipEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/356/MembershipEntry.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.membership;\n \n import java.io.IOException;\n@@ -35,108 +36,107 @@ import org.neo4j.storageengine.api.WritableChannel;\n  */\n public class MembershipEntry\n {\n-    private long logIndex;\n-    private Set<MemberId> members;\n+  private long logIndex;\n+  private Set<MemberId> members;\n \n-    public MembershipEntry( long logIndex, Set<MemberId> members )\n-    {\n-        this.members = members;\n-        this.logIndex = logIndex;\n-    }\n+  public MembershipEntry(long logIndex, Set<MemberId> members)\n+  {\n+    this.members = members;\n+    this.logIndex = logIndex;\n+  }\n \n-    public long logIndex()\n+  public long logIndex()\n+  {\n+    return logIndex;\n+  }\n+\n+  public Set<MemberId> members()\n+  {\n+    return members;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return logIndex;\n+      return true;\n     }\n-\n-    public Set<MemberId> members()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return members;\n+      return false;\n     }\n+    MembershipEntry that = (MembershipEntry) o;\n+    return logIndex == that.logIndex && Objects.equals(members, that.members);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(logIndex, members);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"MembershipEntry{\" +\n+        \"logIndex=\" + logIndex +\n+        \", members=\" + members +\n+        '}';\n+  }\n+\n+  public static class Marshal extends SafeStateMarshal<MembershipEntry>\n+  {\n+    MemberId.Marshal memberMarshal = new MemberId.Marshal();\n \n     @Override\n-    public boolean equals( Object o )\n+    public MembershipEntry startState()\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        MembershipEntry that = (MembershipEntry) o;\n-        return logIndex == that.logIndex && Objects.equals( members, that.members );\n+      return null;\n     }\n \n     @Override\n-    public int hashCode()\n+    public long ordinal(MembershipEntry entry)\n     {\n-        return Objects.hash( logIndex, members );\n+      return entry.logIndex;\n     }\n \n     @Override\n-    public String toString()\n+    public void marshal(MembershipEntry entry, WritableChannel channel) throws IOException\n     {\n-        return \"MembershipEntry{\" +\n-               \"logIndex=\" + logIndex +\n-               \", members=\" + members +\n-               '}';\n+      if (entry == null)\n+      {\n+        channel.putInt(0);\n+        return;\n+      } else\n+      {\n+        channel.putInt(1);\n+      }\n+\n+      channel.putLong(entry.logIndex);\n+      channel.putInt(entry.members.size());\n+      for (MemberId member : entry.members)\n+      {\n+        memberMarshal.marshal(member, channel);\n+      }\n     }\n \n-    public static class Marshal extends SafeStateMarshal<MembershipEntry>\n+    @Override\n+    protected MembershipEntry unmarshal0(ReadableChannel channel) throws IOException, EndOfStreamException\n     {\n-        MemberId.Marshal memberMarshal = new MemberId.Marshal();\n-\n-        @Override\n-        public MembershipEntry startState()\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public long ordinal( MembershipEntry entry )\n-        {\n-            return entry.logIndex;\n-        }\n-\n-        @Override\n-        public void marshal( MembershipEntry entry, WritableChannel channel ) throws IOException\n-        {\n-            if ( entry == null )\n-            {\n-                channel.putInt( 0 );\n-                return;\n-            }\n-            else\n-            {\n-                channel.putInt( 1 );\n-            }\n-\n-            channel.putLong( entry.logIndex );\n-            channel.putInt( entry.members.size() );\n-            for ( MemberId member : entry.members )\n-            {\n-                memberMarshal.marshal( member, channel );\n-            }\n-        }\n-\n-        @Override\n-        protected MembershipEntry unmarshal0( ReadableChannel channel ) throws IOException, EndOfStreamException\n-        {\n-            int hasEntry = channel.getInt();\n-            if ( hasEntry == 0 )\n-            {\n-                return null;\n-            }\n-            long logIndex = channel.getLong();\n-            int memberCount = channel.getInt();\n-            Set<MemberId> members = new HashSet<>();\n-            for ( int i = 0; i < memberCount; i++ )\n-            {\n-                members.add( memberMarshal.unmarshal( channel ) );\n-            }\n-            return new MembershipEntry( logIndex, members );\n-        }\n+      int hasEntry = channel.getInt();\n+      if (hasEntry == 0)\n+      {\n+        return null;\n+      }\n+      long logIndex = channel.getLong();\n+      int memberCount = channel.getInt();\n+      Set<MemberId> members = new HashSet<>();\n+      for (int i = 0; i < memberCount; i++)\n+      {\n+        members.add(memberMarshal.unmarshal(channel));\n+      }\n+      return new MembershipEntry(logIndex, members);\n     }\n+  }\n }\n",
            "diff_size": 132
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/356/MembershipEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/356/MembershipEntry.java\nindex c97c5601826..b6e4818cf83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/356/MembershipEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/356/MembershipEntry.java\n@@ -61,11 +61,13 @@ public class MembershipEntry\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        MembershipEntry that = (MembershipEntry) o;\n+\n+MembershipEntry that = (MembershipEntry) o;\n         return logIndex == that.logIndex && Objects.equals( members, that.members );\n     }\n \n@@ -78,10 +80,7 @@ public class MembershipEntry\n     @Override\n     public String toString()\n     {\n-        return \"MembershipEntry{\" +\n-               \"logIndex=\" + logIndex +\n-               \", members=\" + members +\n-               '}';\n+        return \"MembershipEntry{\" + \"logIndex=\" + logIndex + \", members=\" + members + '}';\n     }\n \n     public static class Marshal extends SafeStateMarshal<MembershipEntry>\n@@ -139,4 +138,4 @@ public class MembershipEntry\n             return new MembershipEntry( logIndex, members );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
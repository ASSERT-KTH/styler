{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3595",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3595/CatchUpChannelPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3595/CatchUpChannelPool.java\nindex dc3606e2b90..47e38f60a8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3595/CatchUpChannelPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3595/CatchUpChannelPool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup;\n \n import java.net.ConnectException;\n@@ -35,116 +36,115 @@ import static java.util.stream.Stream.concat;\n \n class CatchUpChannelPool<CHANNEL extends CatchUpChannelPool.Channel>\n {\n-    private final Map<AdvertisedSocketAddress,LinkedList<CHANNEL>> idleChannels = new HashMap<>();\n-    private final Set<CHANNEL> activeChannels = new HashSet<>();\n-    private final Function<AdvertisedSocketAddress,CHANNEL> factory;\n-\n-    CatchUpChannelPool( Function<AdvertisedSocketAddress,CHANNEL> factory )\n-    {\n-        this.factory = factory;\n-    }\n-\n-    CHANNEL acquire( AdvertisedSocketAddress catchUpAddress ) throws Exception\n-    {\n-        CHANNEL channel = getIdleChannel( catchUpAddress );\n-\n-        if ( channel == null )\n-        {\n-            channel = factory.apply( catchUpAddress );\n-            try\n-            {\n-                channel.connect();\n-                assertActive( channel, catchUpAddress );\n-            }\n-            catch ( Exception e )\n-            {\n-                channel.close();\n-                throw e;\n-            }\n-        }\n+  private final Map<AdvertisedSocketAddress, LinkedList<CHANNEL>> idleChannels = new HashMap<>();\n+  private final Set<CHANNEL> activeChannels = new HashSet<>();\n+  private final Function<AdvertisedSocketAddress, CHANNEL> factory;\n \n-        addActiveChannel( channel );\n+  CatchUpChannelPool(Function<AdvertisedSocketAddress, CHANNEL> factory)\n+  {\n+    this.factory = factory;\n+  }\n \n-        return channel;\n-    }\n+  CHANNEL acquire(AdvertisedSocketAddress catchUpAddress) throws Exception\n+  {\n+    CHANNEL channel = getIdleChannel(catchUpAddress);\n \n-    private void assertActive( CHANNEL channel, AdvertisedSocketAddress address ) throws ConnectException\n+    if (channel == null)\n     {\n-        if ( !channel.isActive() )\n-        {\n-            throw new ConnectException( \"Unable to connect to \" + address );\n-        }\n-    }\n-\n-    private synchronized CHANNEL getIdleChannel( AdvertisedSocketAddress catchUpAddress )\n-    {\n-        CHANNEL channel = null;\n-        LinkedList<CHANNEL> channels = idleChannels.get( catchUpAddress );\n-        if ( channels != null )\n-        {\n-            while ( (channel = channels.poll()) != null )\n-            {\n-                if ( channel.isActive() )\n-                {\n-                    break;\n-                }\n-            }\n-            if ( channels.isEmpty() )\n-            {\n-                idleChannels.remove( catchUpAddress );\n-            }\n-        }\n-        return channel;\n-    }\n-\n-    private synchronized void addActiveChannel( CHANNEL channel )\n-    {\n-        activeChannels.add( channel );\n-    }\n-\n-    private synchronized void removeActiveChannel( CHANNEL channel )\n-    {\n-        activeChannels.remove( channel );\n-    }\n-\n-    void dispose( CHANNEL channel )\n-    {\n-        removeActiveChannel( channel );\n+      channel = factory.apply(catchUpAddress);\n+      try\n+      {\n+        channel.connect();\n+        assertActive(channel, catchUpAddress);\n+      } catch (Exception e)\n+      {\n         channel.close();\n+        throw e;\n+      }\n     }\n \n-    synchronized void release( CHANNEL channel )\n-    {\n-        removeActiveChannel( channel );\n-        idleChannels.computeIfAbsent( channel.destination(), address -> new LinkedList<>() ).add( channel );\n-    }\n+    addActiveChannel(channel);\n \n-    void close()\n-    {\n-        collectDisposed().forEach( Channel::close );\n-    }\n+    return channel;\n+  }\n \n-    private synchronized Set<CHANNEL> collectDisposed()\n+  private void assertActive(CHANNEL channel, AdvertisedSocketAddress address) throws ConnectException\n+  {\n+    if (!channel.isActive())\n     {\n-        Set<CHANNEL> disposed;\n-        disposed = concat(\n-                idleChannels.values().stream().flatMap( Collection::stream ),\n-                activeChannels.stream() )\n-                .collect( Collectors.toSet() );\n-\n-        idleChannels.clear();\n-        activeChannels.clear();\n-        return disposed;\n+      throw new ConnectException(\"Unable to connect to \" + address);\n     }\n+  }\n \n-    interface Channel\n+  private synchronized CHANNEL getIdleChannel(AdvertisedSocketAddress catchUpAddress)\n+  {\n+    CHANNEL channel = null;\n+    LinkedList<CHANNEL> channels = idleChannels.get(catchUpAddress);\n+    if (channels != null)\n     {\n-        AdvertisedSocketAddress destination();\n-\n-        void connect() throws Exception;\n-\n-        boolean isActive();\n-\n-        void close();\n+      while ((channel = channels.poll()) != null)\n+      {\n+        if (channel.isActive())\n+        {\n+          break;\n+        }\n+      }\n+      if (channels.isEmpty())\n+      {\n+        idleChannels.remove(catchUpAddress);\n+      }\n     }\n+    return channel;\n+  }\n+\n+  private synchronized void addActiveChannel(CHANNEL channel)\n+  {\n+    activeChannels.add(channel);\n+  }\n+\n+  private synchronized void removeActiveChannel(CHANNEL channel)\n+  {\n+    activeChannels.remove(channel);\n+  }\n+\n+  void dispose(CHANNEL channel)\n+  {\n+    removeActiveChannel(channel);\n+    channel.close();\n+  }\n+\n+  synchronized void release(CHANNEL channel)\n+  {\n+    removeActiveChannel(channel);\n+    idleChannels.computeIfAbsent(channel.destination(), address -> new LinkedList<>()).add(channel);\n+  }\n+\n+  void close()\n+  {\n+    collectDisposed().forEach(Channel::close);\n+  }\n+\n+  private synchronized Set<CHANNEL> collectDisposed()\n+  {\n+    Set<CHANNEL> disposed;\n+    disposed = concat(\n+        idleChannels.values().stream().flatMap(Collection::stream),\n+        activeChannels.stream())\n+        .collect(Collectors.toSet());\n+\n+    idleChannels.clear();\n+    activeChannels.clear();\n+    return disposed;\n+  }\n+\n+  interface Channel\n+  {\n+    AdvertisedSocketAddress destination();\n+\n+    void connect() throws Exception;\n+\n+    boolean isActive();\n+\n+    void close();\n+  }\n }\n",
            "diff_size": 169
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3595/CatchUpChannelPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3595/CatchUpChannelPool.java\nindex dc3606e2b90..8bba64e7ee3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3595/CatchUpChannelPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3595/CatchUpChannelPool.java\n@@ -47,8 +47,7 @@ class CatchUpChannelPool<CHANNEL extends CatchUpChannelPool.Channel>\n     CHANNEL acquire( AdvertisedSocketAddress catchUpAddress ) throws Exception\n     {\n         CHANNEL channel = getIdleChannel( catchUpAddress );\n-\n-        if ( channel == null )\n+if ( channel == null )\n         {\n             channel = factory.apply( catchUpAddress );\n             try\n@@ -64,8 +63,7 @@ class CatchUpChannelPool<CHANNEL extends CatchUpChannelPool.Channel>\n         }\n \n         addActiveChannel( channel );\n-\n-        return channel;\n+return channel;\n     }\n \n     private void assertActive( CHANNEL channel, AdvertisedSocketAddress address ) throws ConnectException\n@@ -127,12 +125,8 @@ class CatchUpChannelPool<CHANNEL extends CatchUpChannelPool.Channel>\n     private synchronized Set<CHANNEL> collectDisposed()\n     {\n         Set<CHANNEL> disposed;\n-        disposed = concat(\n-                idleChannels.values().stream().flatMap( Collection::stream ),\n-                activeChannels.stream() )\n-                .collect( Collectors.toSet() );\n-\n-        idleChannels.clear();\n+        disposed = concat( idleChannels.values().stream().flatMap( Collection::stream ), activeChannels.stream() ).collect( Collectors.toSet() );\n+idleChannels.clear();\n         activeChannels.clear();\n         return disposed;\n     }\n@@ -147,4 +141,4 @@ class CatchUpChannelPool<CHANNEL extends CatchUpChannelPool.Channel>\n \n         void close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
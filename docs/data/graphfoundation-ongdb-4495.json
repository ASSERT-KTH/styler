{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4495",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4495/CountsAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4495/CountsAccessor.java\nindex 96ad7d1e03f..0aa45edbc2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4495/CountsAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4495/CountsAccessor.java\n@@ -17,91 +17,92 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import org.neo4j.register.Register.DoubleLongRegister;\n \n public interface CountsAccessor extends CountsVisitor.Visitable\n {\n-    /**\n-     * @param target a register to store the read values in\n-     * @return the input register for convenience\n-     */\n-    DoubleLongRegister nodeCount( int labelId, DoubleLongRegister target );\n-\n-    /**\n-     * @param target a register to store the read values in\n-     * @return the input register for convenience\n-     */\n-    DoubleLongRegister relationshipCount( int startLabelId, int typeId, int endLabelId, DoubleLongRegister target );\n-\n-    /**\n-     * @param target a register to store the read values in\n-     * @return the input register for convenience\n-     */\n-    DoubleLongRegister indexUpdatesAndSize( long indexId, DoubleLongRegister target );\n-\n-    /**\n-     * @param target a register to store the read values in\n-     * @return the input register for convenience\n-     */\n-    DoubleLongRegister indexSample( long indexId, DoubleLongRegister target );\n-\n-    interface Updater extends AutoCloseable\n+  /**\n+   * @param target a register to store the read values in\n+   * @return the input register for convenience\n+   */\n+  DoubleLongRegister nodeCount(int labelId, DoubleLongRegister target);\n+\n+  /**\n+   * @param target a register to store the read values in\n+   * @return the input register for convenience\n+   */\n+  DoubleLongRegister relationshipCount(int startLabelId, int typeId, int endLabelId, DoubleLongRegister target);\n+\n+  /**\n+   * @param target a register to store the read values in\n+   * @return the input register for convenience\n+   */\n+  DoubleLongRegister indexUpdatesAndSize(long indexId, DoubleLongRegister target);\n+\n+  /**\n+   * @param target a register to store the read values in\n+   * @return the input register for convenience\n+   */\n+  DoubleLongRegister indexSample(long indexId, DoubleLongRegister target);\n+\n+  interface Updater extends AutoCloseable\n+  {\n+    void incrementNodeCount(int labelId, long delta);\n+\n+    void incrementRelationshipCount(int startLabelId, int typeId, int endLabelId, long delta);\n+\n+    @Override\n+    void close();\n+  }\n+\n+  interface IndexStatsUpdater extends AutoCloseable\n+  {\n+    void replaceIndexUpdateAndSize(long indexId, long updates, long size);\n+\n+    void replaceIndexSample(long indexId, long unique, long size);\n+\n+    void incrementIndexUpdates(long indexId, long delta);\n+\n+    @Override\n+    void close();\n+  }\n+\n+  final class Initializer implements CountsVisitor\n+  {\n+    private final Updater updater;\n+    private final IndexStatsUpdater stats;\n+\n+    public Initializer(Updater updater, IndexStatsUpdater stats)\n     {\n-        void incrementNodeCount( int labelId, long delta );\n-\n-        void incrementRelationshipCount( int startLabelId, int typeId, int endLabelId, long delta );\n-\n-        @Override\n-        void close();\n+      this.updater = updater;\n+      this.stats = stats;\n     }\n \n-    interface IndexStatsUpdater extends AutoCloseable\n+    @Override\n+    public void visitNodeCount(int labelId, long count)\n     {\n-        void replaceIndexUpdateAndSize( long indexId, long updates, long size );\n-\n-        void replaceIndexSample( long indexId, long unique, long size );\n+      updater.incrementNodeCount(labelId, count);\n+    }\n \n-        void incrementIndexUpdates( long indexId, long delta );\n+    @Override\n+    public void visitRelationshipCount(int startLabelId, int typeId, int endLabelId, long count)\n+    {\n+      updater.incrementRelationshipCount(startLabelId, typeId, endLabelId, count);\n+    }\n \n-        @Override\n-        void close();\n+    @Override\n+    public void visitIndexStatistics(long indexId, long updates, long size)\n+    {\n+      stats.replaceIndexUpdateAndSize(indexId, updates, size);\n     }\n \n-    final class Initializer implements CountsVisitor\n+    @Override\n+    public void visitIndexSample(long indexId, long unique, long size)\n     {\n-        private final Updater updater;\n-        private final IndexStatsUpdater stats;\n-\n-        public Initializer( Updater updater, IndexStatsUpdater stats )\n-        {\n-            this.updater = updater;\n-            this.stats = stats;\n-        }\n-\n-        @Override\n-        public void visitNodeCount( int labelId, long count )\n-        {\n-            updater.incrementNodeCount( labelId, count );\n-        }\n-\n-        @Override\n-        public void visitRelationshipCount( int startLabelId, int typeId, int endLabelId, long count )\n-        {\n-            updater.incrementRelationshipCount( startLabelId, typeId, endLabelId, count );\n-        }\n-\n-        @Override\n-        public void visitIndexStatistics( long indexId, long updates, long size )\n-        {\n-            stats.replaceIndexUpdateAndSize( indexId, updates, size );\n-        }\n-\n-        @Override\n-        public void visitIndexSample( long indexId, long unique, long size )\n-        {\n-            stats.replaceIndexSample( indexId, unique, size );\n-        }\n+      stats.replaceIndexSample(indexId, unique, size);\n     }\n+  }\n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4495/CountsAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4495/CountsAccessor.java\nindex 96ad7d1e03f..e60108753bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4495/CountsAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4495/CountsAccessor.java\n@@ -104,4 +104,4 @@ public interface CountsAccessor extends CountsVisitor.Visitable\n             stats.replaceIndexSample( indexId, unique, size );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
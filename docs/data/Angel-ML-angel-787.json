{
    "project_name": "Angel-ML-angel",
    "error_id": "787",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/787/SparseLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/787/SparseLongRowUpdateSplit.java\nindex ea47ed465de..80275a2ab22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/787/SparseLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/787/SparseLongRowUpdateSplit.java\n@@ -41,10 +41,10 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n   /**\n    * Create a new sparse int row split update\n    *\n-   * @param start start position\n-   * @param end end position\n+   * @param start   start position\n+   * @param end     end position\n    * @param offsets values indexes\n-   * @param values values of row update\n+   * @param values  values of row update\n    */\n   public SparseLongRowUpdateSplit(int rowIndex, int start, int end, int[] offsets, long[] values) {\n     super(rowIndex, RowType.T_LONG_SPARSE, start, end);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/787/SparseLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/787/SparseLongRowUpdateSplit.java\nindex ea47ed465de..e1061b31ad3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/787/SparseLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/787/SparseLongRowUpdateSplit.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache;\n \n import com.tencent.angel.ml.math2.VFactory;\n@@ -131,4 +130,4 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n       return 4 + super.bufferLen() + (end - start) * 12;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/787/SparseLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/787/SparseLongRowUpdateSplit.java\nindex ea47ed465de..e4dc762b84d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/787/SparseLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/787/SparseLongRowUpdateSplit.java\n@@ -26,11 +26,13 @@ import io.netty.buffer.ByteBuf;\n /**\n  * Row split of sparse int row update\n  */\n+\n public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n \n   /**\n    * indexes\n    */\n+\n   private final int[] offsets;\n \n   /**\n@@ -46,6 +48,7 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n    * @param offsets values indexes\n    * @param values values of row update\n    */\n+\n   public SparseLongRowUpdateSplit(int rowIndex, int start, int end, int[] offsets, long[] values) {\n     super(rowIndex, RowType.T_LONG_SPARSE, start, end);\n     this.offsets = offsets;\n@@ -61,6 +64,7 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n    *\n    * @return int[] indexes of row values\n    */\n+\n   public int[] getOffsets() {\n     return offsets;\n   }\n@@ -70,6 +74,7 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n    *\n    * @return float[] row values\n    */\n+\n   public long[] getValues() {\n     return values;\n   }\n@@ -77,11 +82,13 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n   @Override\n   public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n+\n     int startCol = (int) splitContext.getPartKey().getStartCol();\n     if (splitContext.isEnableFilter()) {\n       int filterValue = (int) splitContext.getFilterThreshold();\n       int position = buf.writerIndex();\n       buf.writeInt(0);\n+\n       int needUpdateItemNum = 0;\n       for (int i = start; i < end; i++) {\n         if (Math.abs(values[i]) > filterValue) {\n@@ -103,10 +110,9 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n   @Override\n   public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n+\n     int size = buf.readInt();\n-    vector = VFactory.sparseLongVector(\n-        (int) (splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol()),\n-        size);\n+    vector = VFactory.sparseLongVector((int) (splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol()), size);\n     for (int i = 0; i < size; i++) {\n       ((IntLongVector) vector).set(buf.readInt(), buf.readLong());\n     }\n@@ -131,4 +137,4 @@ public class SparseLongRowUpdateSplit extends RowUpdateSplit {\n       return 4 + super.bufferLen() + (end - start) * 12;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "165",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/165/CachingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/165/CachingIterator.java\nindex b9d878d2dcb..bebe48c2da5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/165/CachingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/165/CachingIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import java.util.ArrayList;\n@@ -29,233 +30,231 @@ import java.util.NoSuchElementException;\n  * An {@link Iterator} which lazily fetches and caches items from the\n  * underlying iterator when items are requested. This enables positioning\n  * as well as going backwards through the iteration.\n- * @author Mattias Persson\n  *\n  * @param <T> the type of items in the iterator.\n+ * @author Mattias Persson\n  */\n public class CachingIterator<T> implements ListIterator<T>\n {\n-    private final Iterator<T> source;\n-    private final List<T> visited = new ArrayList<>();\n-    private int position;\n-    private T current;\n+  private final Iterator<T> source;\n+  private final List<T> visited = new ArrayList<>();\n+  private int position;\n+  private T current;\n \n-    /**\n-     * Creates a new caching iterator using {@code source} as its underlying\n-     * {@link Iterator} to get items lazily from.\n-     * @param source the underlying {@link Iterator} to lazily get items from.\n-     */\n-    public CachingIterator( Iterator<T> source )\n-    {\n-        this.source = source;\n-    }\n+  /**\n+   * Creates a new caching iterator using {@code source} as its underlying\n+   * {@link Iterator} to get items lazily from.\n+   *\n+   * @param source the underlying {@link Iterator} to lazily get items from.\n+   */\n+  public CachingIterator(Iterator<T> source)\n+  {\n+    this.source = source;\n+  }\n \n-    /**\n-     * Returns whether a call to {@link #next()} will be able to return\n-     * an item or not. If the current {@link #position()} is beyond the size\n-     * of the cache (as will be the case if only calls to\n-     * {@link #hasNext()}/{@link #next()} has been made up to this point)\n-     * the underlying iterator is asked, else {@code true} since it can be\n-     * returned from the cache.\n-     *\n-     * @return whether or not there are more items in this iteration given the\n-     * current {@link #position()}.\n-     */\n-    @Override\n-    public boolean hasNext()\n-    {\n-        return visited.size() > position || source.hasNext();\n-    }\n+  /**\n+   * Returns whether a call to {@link #next()} will be able to return\n+   * an item or not. If the current {@link #position()} is beyond the size\n+   * of the cache (as will be the case if only calls to\n+   * {@link #hasNext()}/{@link #next()} has been made up to this point)\n+   * the underlying iterator is asked, else {@code true} since it can be\n+   * returned from the cache.\n+   *\n+   * @return whether or not there are more items in this iteration given the\n+   * current {@link #position()}.\n+   */\n+  @Override\n+  public boolean hasNext()\n+  {\n+    return visited.size() > position || source.hasNext();\n+  }\n \n-    /**\n-     * Returns the next item given the current {@link #position()}.\n-     * If the current {@link #position()} is beyond the size\n-     * of the cache (as will be the case if only calls to\n-     * {@link #hasNext()}/{@link #next()} has been made up to this point) the\n-     * underlying iterator is asked for the next item (and cached if there\n-     * was one), else the item is returned from the cache.\n-     *\n-     * @return the next item given the current {@link #position()}.\n-     */\n-    @Override\n-    public T next()\n+  /**\n+   * Returns the next item given the current {@link #position()}.\n+   * If the current {@link #position()} is beyond the size\n+   * of the cache (as will be the case if only calls to\n+   * {@link #hasNext()}/{@link #next()} has been made up to this point) the\n+   * underlying iterator is asked for the next item (and cached if there\n+   * was one), else the item is returned from the cache.\n+   *\n+   * @return the next item given the current {@link #position()}.\n+   */\n+  @Override\n+  public T next()\n+  {\n+    if (visited.size() > position)\n     {\n-        if ( visited.size() > position )\n-        {\n-            current = visited.get( position );\n-        }\n-        else\n-        {\n-            if ( !source.hasNext() )\n-            {\n-                throw new NoSuchElementException();\n-            }\n-            current = source.next();\n-            visited.add( current );\n-        }\n-        position++;\n-        return current;\n+      current = visited.get(position);\n+    } else\n+    {\n+      if (!source.hasNext())\n+      {\n+        throw new NoSuchElementException();\n+      }\n+      current = source.next();\n+      visited.add(current);\n     }\n+    position++;\n+    return current;\n+  }\n \n-    /**\n-     * Returns the current position of the iterator, initially 0. The position\n-     * represents the index of the item which will be returned by the next call\n-     * to {@link #next()} and also the index of the next item returned by\n-     * {@link #previous()} plus one. An example:\n-     *\n-     * <ul>\n-     * <li>Instantiate an iterator which would iterate over the strings \"first\", \"second\" and \"third\".</li>\n-     * <li>Get the two first items (\"first\" and \"second\") from it by using {@link #next()},\n-     * {@link #position()} will now return 2.</li>\n-     * <li>Call {@link #previous()} (which will return \"second\") and {@link #position()} will now be 1</li>\n-     * </ul>\n-     *\n-     * @return the position of the iterator.\n-     */\n-    public int position()\n+  /**\n+   * Returns the current position of the iterator, initially 0. The position\n+   * represents the index of the item which will be returned by the next call\n+   * to {@link #next()} and also the index of the next item returned by\n+   * {@link #previous()} plus one. An example:\n+   *\n+   * <ul>\n+   * <li>Instantiate an iterator which would iterate over the strings \"first\", \"second\" and \"third\".</li>\n+   * <li>Get the two first items (\"first\" and \"second\") from it by using {@link #next()},\n+   * {@link #position()} will now return 2.</li>\n+   * <li>Call {@link #previous()} (which will return \"second\") and {@link #position()} will now be 1</li>\n+   * </ul>\n+   *\n+   * @return the position of the iterator.\n+   */\n+  public int position()\n+  {\n+    return position;\n+  }\n+\n+  /**\n+   * Sets the position of the iterator. {@code 0} means all the way back to\n+   * the beginning. It is also possible to set the position to one higher\n+   * than the last item, so that the next call to {@link #previous()} would\n+   * return the last item. Items will be cached along the way if necessary.\n+   *\n+   * @param newPosition the position to set for the iterator, must be\n+   *                    non-negative.\n+   * @return the position before changing to the new position.\n+   */\n+  public int position(int newPosition)\n+  {\n+    if (newPosition < 0)\n     {\n-        return position;\n+      throw new IllegalArgumentException(\"Position must be non-negative, was \" + newPosition);\n     }\n \n-    /**\n-     * Sets the position of the iterator. {@code 0} means all the way back to\n-     * the beginning. It is also possible to set the position to one higher\n-     * than the last item, so that the next call to {@link #previous()} would\n-     * return the last item. Items will be cached along the way if necessary.\n-     *\n-     * @param newPosition the position to set for the iterator, must be\n-     * non-negative.\n-     * @return the position before changing to the new position.\n-     */\n-    public int position( int newPosition )\n+    int previousPosition = position;\n+    boolean overTheEdge = false;\n+    while (visited.size() < newPosition)\n     {\n-        if ( newPosition < 0 )\n+      T next = source.hasNext() ? source.next() : null;\n+      if (next != null)\n+      {\n+        visited.add(next);\n+      } else\n+      {\n+        if (!overTheEdge)\n         {\n-            throw new IllegalArgumentException( \"Position must be non-negative, was \" + newPosition );\n-        }\n-\n-        int previousPosition = position;\n-        boolean overTheEdge = false;\n-        while ( visited.size() < newPosition )\n+          overTheEdge = true;\n+        } else\n         {\n-            T next = source.hasNext() ? source.next() : null;\n-            if ( next != null )\n-            {\n-                visited.add( next );\n-            }\n-            else\n-            {\n-                if ( !overTheEdge )\n-                {\n-                    overTheEdge = true;\n-                }\n-                else\n-                {\n-                    throw new NoSuchElementException( \"Requested position \" + newPosition +\n-                            \", but didn't get further than to \" + visited.size() );\n-                }\n-            }\n+          throw new NoSuchElementException(\"Requested position \" + newPosition +\n+              \", but didn't get further than to \" + visited.size());\n         }\n-        current = null;\n-        position = newPosition;\n-        return previousPosition;\n+      }\n     }\n+    current = null;\n+    position = newPosition;\n+    return previousPosition;\n+  }\n \n-    /**\n-     * Returns whether or not a call to {@link #previous()} will be able to\n-     * return an item or not. So it will return {@code true} if\n-     * {@link #position()} is bigger than 0.\n-     *\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public boolean hasPrevious()\n-    {\n-        return position > 0;\n-    }\n+  /**\n+   * Returns whether or not a call to {@link #previous()} will be able to\n+   * return an item or not. So it will return {@code true} if\n+   * {@link #position()} is bigger than 0.\n+   * <p>\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public boolean hasPrevious()\n+  {\n+    return position > 0;\n+  }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public T previous()\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public T previous()\n+  {\n+    if (!hasPrevious())\n     {\n-        if ( !hasPrevious() )\n-        {\n-            throw new NoSuchElementException( \"Position is \" + position );\n-        }\n-        current = visited.get( --position );\n-        return current;\n+      throw new NoSuchElementException(\"Position is \" + position);\n     }\n+    current = visited.get(--position);\n+    return current;\n+  }\n \n-    /**\n-     * Returns the last item returned by {@link #next()}/{@link #previous()}.\n-     * If no call has been made to {@link #next()} or {@link #previous()} since\n-     * this iterator was created or since a call to {@link #position(int)} has\n-     * been made a {@link NoSuchElementException} will be thrown.\n-     *\n-     * @return the last item returned by {@link #next()}/{@link #previous()}.\n-     * @throws NoSuchElementException if no call has been made to {@link #next()}\n-     * or {@link #previous()} since this iterator was created or since a call to\n-     * {@link #position(int)} has been made.\n-     */\n-    public T current()\n+  /**\n+   * Returns the last item returned by {@link #next()}/{@link #previous()}.\n+   * If no call has been made to {@link #next()} or {@link #previous()} since\n+   * this iterator was created or since a call to {@link #position(int)} has\n+   * been made a {@link NoSuchElementException} will be thrown.\n+   *\n+   * @return the last item returned by {@link #next()}/{@link #previous()}.\n+   * @throws NoSuchElementException if no call has been made to {@link #next()}\n+   *                                or {@link #previous()} since this iterator was created or since a call to\n+   *                                {@link #position(int)} has been made.\n+   */\n+  public T current()\n+  {\n+    if (current == null)\n     {\n-        if ( current == null )\n-        {\n-            throw new NoSuchElementException();\n-        }\n-        return current;\n+      throw new NoSuchElementException();\n     }\n+    return current;\n+  }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public int nextIndex()\n-    {\n-        return position;\n-    }\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public int nextIndex()\n+  {\n+    return position;\n+  }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public int previousIndex()\n-    {\n-        return position - 1;\n-    }\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public int previousIndex()\n+  {\n+    return position - 1;\n+  }\n \n-    /**\n-     * Not supported by this implement.\n-     *\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void remove()\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n+  /**\n+   * Not supported by this implement.\n+   * <p>\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public void remove()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n \n-    /**\n-     * Not supported by this implement.\n-     *\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void set( T e )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n+  /**\n+   * Not supported by this implement.\n+   * <p>\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public void set(T e)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n \n-    /**\n-     * Not supported by this implement.\n-     *\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void add( T e )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n+  /**\n+   * Not supported by this implement.\n+   * <p>\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public void add(T e)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n }\n",
            "diff_size": 242
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "174",
                    "column": "24",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/165/CachingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/165/CachingIterator.java\nindex b9d878d2dcb..51d10a0d623 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/165/CachingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/165/CachingIterator.java\n@@ -90,7 +90,8 @@ public class CachingIterator<T> implements ListIterator<T>\n             {\n                 throw new NoSuchElementException();\n             }\n-            current = source.next();\n+\n+current = source.next();\n             visited.add( current );\n         }\n         position++;\n@@ -151,9 +152,8 @@ public class CachingIterator<T> implements ListIterator<T>\n                 }\n                 else\n                 {\n-                    throw new NoSuchElementException( \"Requested position \" + newPosition +\n-                            \", but didn't get further than to \" + visited.size() );\n-                }\n+                    throw new NoSuchElementException( \"Requested position \" + newPosition + \", but didn't get further than to \" + visited.size() );\n+    }\n             }\n         }\n         current = null;\n@@ -171,7 +171,7 @@ public class CachingIterator<T> implements ListIterator<T>\n     @Override\n     public boolean hasPrevious()\n     {\n-        return position > 0;\n+        return position> 0;\n     }\n \n     /**\n@@ -184,7 +184,8 @@ public class CachingIterator<T> implements ListIterator<T>\n         {\n             throw new NoSuchElementException( \"Position is \" + position );\n         }\n-        current = visited.get( --position );\n+\n+current = visited.get( --position );\n         return current;\n     }\n \n@@ -205,7 +206,8 @@ public class CachingIterator<T> implements ListIterator<T>\n         {\n             throw new NoSuchElementException();\n         }\n-        return current;\n+\n+return current;\n     }\n \n     /**\n@@ -258,4 +260,4 @@ public class CachingIterator<T> implements ListIterator<T>\n     {\n         throw new UnsupportedOperationException();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "815",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/815/CleanTrackingConsistencyCheckVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/815/CleanTrackingConsistencyCheckVisitor.java\nindex 0ea8f2c021b..21980f96071 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/815/CleanTrackingConsistencyCheckVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/815/CleanTrackingConsistencyCheckVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.apache.commons.lang3.mutable.MutableBoolean;\n@@ -25,10 +26,10 @@ import java.nio.file.Path;\n \n class CleanTrackingConsistencyCheckVisitor<KEY> implements GBPTreeConsistencyCheckVisitor<KEY>\n {\n-    private final MutableBoolean isConsistent = new MutableBoolean( true );\n+    private final MutableBoolean isConsistent = new MutableBoolean(true);\n     private final GBPTreeConsistencyCheckVisitor<KEY> delegate;\n \n-    CleanTrackingConsistencyCheckVisitor( GBPTreeConsistencyCheckVisitor<KEY> delegate )\n+    CleanTrackingConsistencyCheckVisitor(GBPTreeConsistencyCheckVisitor<KEY> delegate)\n     {\n         this.delegate = delegate;\n     }\n@@ -39,134 +40,135 @@ class CleanTrackingConsistencyCheckVisitor<KEY> implements GBPTreeConsistencyChe\n     }\n \n     @Override\n-    public void notATreeNode( long pageId, Path file )\n+    public void notATreeNode(long pageId, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.notATreeNode( pageId, file );\n+        delegate.notATreeNode(pageId, file);\n     }\n \n     @Override\n-    public void unknownTreeNodeType( long pageId, byte treeNodeType, Path file )\n+    public void unknownTreeNodeType(long pageId, byte treeNodeType, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.unknownTreeNodeType( pageId, treeNodeType, file );\n+        delegate.unknownTreeNodeType(pageId, treeNodeType, file);\n     }\n \n     @Override\n-    public void siblingsDontPointToEachOther( long leftNode, long leftNodeGeneration, long leftRightSiblingPointerGeneration, long leftRightSiblingPointer,\n-            long rightLeftSiblingPointer, long rightLeftSiblingPointerGeneration, long rightNode, long rightNodeGeneration, Path file )\n+    public void siblingsDontPointToEachOther(long leftNode, long leftNodeGeneration, long leftRightSiblingPointerGeneration, long leftRightSiblingPointer,\n+                                             long rightLeftSiblingPointer, long rightLeftSiblingPointerGeneration, long rightNode, long rightNodeGeneration,\n+                                             Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.siblingsDontPointToEachOther( leftNode, leftNodeGeneration, leftRightSiblingPointerGeneration, leftRightSiblingPointer,\n-                rightLeftSiblingPointer, rightLeftSiblingPointerGeneration, rightNode, rightNodeGeneration, file\n+        delegate.siblingsDontPointToEachOther(leftNode, leftNodeGeneration, leftRightSiblingPointerGeneration, leftRightSiblingPointer,\n+          rightLeftSiblingPointer, rightLeftSiblingPointerGeneration, rightNode, rightNodeGeneration, file\n         );\n     }\n \n     @Override\n-    public void rightmostNodeHasRightSibling( long rightSiblingPointer, long rightmostNode, Path file )\n+    public void rightmostNodeHasRightSibling(long rightSiblingPointer, long rightmostNode, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.rightmostNodeHasRightSibling( rightSiblingPointer, rightmostNode, file );\n+        delegate.rightmostNodeHasRightSibling(rightSiblingPointer, rightmostNode, file);\n     }\n \n     @Override\n-    public void pointerToOldVersionOfTreeNode( long pageId, long successorPointer, Path file )\n+    public void pointerToOldVersionOfTreeNode(long pageId, long successorPointer, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.pointerToOldVersionOfTreeNode( pageId, successorPointer, file );\n+        delegate.pointerToOldVersionOfTreeNode(pageId, successorPointer, file);\n     }\n \n     @Override\n-    public void pointerHasLowerGenerationThanNode( GBPTreePointerType pointerType, long sourceNode, long pointerGeneration, long pointer,\n-            long targetNodeGeneration, Path file )\n+    public void pointerHasLowerGenerationThanNode(GBPTreePointerType pointerType, long sourceNode, long pointerGeneration, long pointer,\n+                                                  long targetNodeGeneration, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.pointerHasLowerGenerationThanNode( pointerType, sourceNode, pointerGeneration, pointer, targetNodeGeneration, file );\n+        delegate.pointerHasLowerGenerationThanNode(pointerType, sourceNode, pointerGeneration, pointer, targetNodeGeneration, file);\n     }\n \n     @Override\n-    public void keysOutOfOrderInNode( long pageId, Path file )\n+    public void keysOutOfOrderInNode(long pageId, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.keysOutOfOrderInNode( pageId, file );\n+        delegate.keysOutOfOrderInNode(pageId, file);\n     }\n \n     @Override\n-    public void keysLocatedInWrongNode( KeyRange<KEY> range, KEY key, int pos, int keyCount, long pageId, Path file )\n+    public void keysLocatedInWrongNode(KeyRange<KEY> range, KEY key, int pos, int keyCount, long pageId, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.keysLocatedInWrongNode( range, key, pos, keyCount, pageId, file );\n+        delegate.keysLocatedInWrongNode(range, key, pos, keyCount, pageId, file);\n     }\n \n     @Override\n-    public void unusedPage( long pageId, Path file )\n+    public void unusedPage(long pageId, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.unusedPage( pageId, file );\n+        delegate.unusedPage(pageId, file);\n     }\n \n     @Override\n-    public void pageIdExceedLastId( long lastId, long pageId, Path file )\n+    public void pageIdExceedLastId(long lastId, long pageId, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.pageIdExceedLastId( lastId, pageId, file );\n+        delegate.pageIdExceedLastId(lastId, pageId, file);\n     }\n \n     @Override\n-    public void nodeMetaInconsistency( long pageId, String message, Path file )\n+    public void nodeMetaInconsistency(long pageId, String message, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.nodeMetaInconsistency( pageId, message, file );\n+        delegate.nodeMetaInconsistency(pageId, message, file);\n     }\n \n     @Override\n-    public void pageIdSeenMultipleTimes( long pageId, Path file )\n+    public void pageIdSeenMultipleTimes(long pageId, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.pageIdSeenMultipleTimes( pageId, file );\n+        delegate.pageIdSeenMultipleTimes(pageId, file);\n     }\n \n     @Override\n-    public void crashedPointer( long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n-            long readPointerB, long pointerB, byte stateB, Path file )\n+    public void crashedPointer(long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n+                               long readPointerB, long pointerB, byte stateB, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.crashedPointer( pageId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB, file );\n+        delegate.crashedPointer(pageId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB, file);\n     }\n \n     @Override\n-    public void brokenPointer( long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n-            long readPointerB, long pointerB, byte stateB, Path file )\n+    public void brokenPointer(long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n+                              long readPointerB, long pointerB, byte stateB, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.brokenPointer( pageId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB, file );\n+        delegate.brokenPointer(pageId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB, file);\n     }\n \n     @Override\n-    public void unreasonableKeyCount( long pageId, int keyCount, Path file )\n+    public void unreasonableKeyCount(long pageId, int keyCount, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.unreasonableKeyCount( pageId, keyCount, file );\n+        delegate.unreasonableKeyCount(pageId, keyCount, file);\n     }\n \n     @Override\n-    public void childNodeFoundAmongParentNodes( KeyRange<KEY> superRange, int level, long pageId, Path file )\n+    public void childNodeFoundAmongParentNodes(KeyRange<KEY> superRange, int level, long pageId, Path file)\n     {\n         isConsistent.setFalse();\n-        delegate.childNodeFoundAmongParentNodes( superRange, level, pageId, file );\n+        delegate.childNodeFoundAmongParentNodes(superRange, level, pageId, file);\n     }\n \n     @Override\n-    public void exception( Exception e )\n+    public void exception(Exception e)\n     {\n         isConsistent.setFalse();\n-        delegate.exception( e );\n+        delegate.exception(e);\n     }\n \n     @Override\n-    public void dirtyOnStartup( Path file )\n+    public void dirtyOnStartup(Path file)\n     {\n         // This does not count as an inconsistency\n-        delegate.dirtyOnStartup( file );\n+        delegate.dirtyOnStartup(file);\n     }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4475",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4475/SchemaUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4475/SchemaUtil.java\nindex db3b274bde5..e5afd7971e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4475/SchemaUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4475/SchemaUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.schema;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -25,76 +26,76 @@ import static java.lang.String.format;\n \n public class SchemaUtil\n {\n-    private SchemaUtil()\n-    {\n-    }\n+  private SchemaUtil()\n+  {\n+  }\n+\n+  public static String niceProperties(TokenNameLookup tokenNameLookup, int[] propertyIds)\n+  {\n+    return niceProperties(tokenNameLookup, propertyIds, \"\", false);\n+  }\n \n-    public static String niceProperties( TokenNameLookup tokenNameLookup, int[] propertyIds )\n+  public static String niceProperties(TokenNameLookup tokenNameLookup, int[] propertyIds, String prefix,\n+                                      boolean useBrackets)\n+  {\n+    StringBuilder properties = new StringBuilder();\n+    if (useBrackets)\n     {\n-        return niceProperties( tokenNameLookup, propertyIds, \"\", false );\n+      properties.append(\"(\");\n     }\n-\n-    public static String niceProperties( TokenNameLookup tokenNameLookup, int[] propertyIds, String prefix,\n-            boolean useBrackets )\n+    for (int i = 0; i < propertyIds.length; i++)\n     {\n-        StringBuilder properties = new StringBuilder();\n-        if ( useBrackets )\n-        {\n-            properties.append( \"(\" );\n-        }\n-        for ( int i = 0; i < propertyIds.length; i++ )\n-        {\n-            if ( i > 0 )\n-            {\n-                properties.append( \", \" );\n-            }\n-            properties.append( prefix ).append( tokenNameLookup.propertyKeyGetName( propertyIds[i] ) );\n-        }\n-        if ( useBrackets )\n-        {\n-            properties.append( \")\" );\n-        }\n-        return properties.toString();\n+      if (i > 0)\n+      {\n+        properties.append(\", \");\n+      }\n+      properties.append(prefix).append(tokenNameLookup.propertyKeyGetName(propertyIds[i]));\n     }\n-\n-    public static String niceLabelAndProperties( TokenNameLookup tokenNameLookup, int labelId, int[] propertyIds )\n+    if (useBrackets)\n     {\n-        String label = tokenNameLookup.labelGetName( labelId );\n-        String properties = SchemaUtil.niceProperties( tokenNameLookup, propertyIds );\n-        return String.format( \":%s(%s)\", label, properties );\n+      properties.append(\")\");\n     }\n+    return properties.toString();\n+  }\n+\n+  public static String niceLabelAndProperties(TokenNameLookup tokenNameLookup, int labelId, int[] propertyIds)\n+  {\n+    String label = tokenNameLookup.labelGetName(labelId);\n+    String properties = SchemaUtil.niceProperties(tokenNameLookup, propertyIds);\n+    return String.format(\":%s(%s)\", label, properties);\n+  }\n \n-    public static String niceRelTypeAndProperties( TokenNameLookup tokenNameLookup, int relTypeId, int[] propertyIds )\n+  public static String niceRelTypeAndProperties(TokenNameLookup tokenNameLookup, int relTypeId, int[] propertyIds)\n+  {\n+    String relationshipTypeGetName = tokenNameLookup.relationshipTypeGetName(relTypeId);\n+    String properties = SchemaUtil.niceProperties(tokenNameLookup, propertyIds);\n+    return String.format(\"-[:%s(%s)]-\", relationshipTypeGetName, properties);\n+  }\n+\n+  public static String withType(String type, String schemaDescription)\n+  {\n+    return format(\"Index( %s, %s )\", type, schemaDescription);\n+  }\n+\n+  public static final TokenNameLookup idTokenNameLookup = new TokenNameLookup()\n+  {\n+\n+    @Override\n+    public String labelGetName(int labelId)\n     {\n-        String relationshipTypeGetName = tokenNameLookup.relationshipTypeGetName( relTypeId );\n-        String properties = SchemaUtil.niceProperties( tokenNameLookup, propertyIds );\n-        return String.format( \"-[:%s(%s)]-\", relationshipTypeGetName, properties );\n+      return format(\"label[%d]\", labelId);\n     }\n \n-    public static String withType( String type, String schemaDescription )\n+    @Override\n+    public String relationshipTypeGetName(int relationshipTypeId)\n     {\n-        return format( \"Index( %s, %s )\", type, schemaDescription );\n+      return format(\"relType[%d]\", relationshipTypeId);\n     }\n \n-    public static final TokenNameLookup idTokenNameLookup = new TokenNameLookup()\n+    @Override\n+    public String propertyKeyGetName(int propertyKeyId)\n     {\n-\n-        @Override\n-        public String labelGetName( int labelId )\n-        {\n-            return format( \"label[%d]\", labelId );\n-        }\n-\n-        @Override\n-        public String relationshipTypeGetName( int relationshipTypeId )\n-        {\n-            return format( \"relType[%d]\", relationshipTypeId );\n-        }\n-\n-        @Override\n-        public String propertyKeyGetName( int propertyKeyId )\n-        {\n-            return format( \"property[%d]\", propertyKeyId );\n-        }\n-    };\n+      return format(\"property[%d]\", propertyKeyId);\n+    }\n+  };\n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4475/SchemaUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4475/SchemaUtil.java\nindex db3b274bde5..0a415e7c4a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4475/SchemaUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4475/SchemaUtil.java\n@@ -50,11 +50,13 @@ public class SchemaUtil\n             }\n             properties.append( prefix ).append( tokenNameLookup.propertyKeyGetName( propertyIds[i] ) );\n         }\n-        if ( useBrackets )\n+\n+if ( useBrackets )\n         {\n             properties.append( \")\" );\n         }\n-        return properties.toString();\n+\n+return properties.toString();\n     }\n \n     public static String niceLabelAndProperties( TokenNameLookup tokenNameLookup, int labelId, int[] propertyIds )\n@@ -79,7 +81,7 @@ public class SchemaUtil\n     public static final TokenNameLookup idTokenNameLookup = new TokenNameLookup()\n     {\n \n-        @Override\n+@Override\n         public String labelGetName( int labelId )\n         {\n             return format( \"label[%d]\", labelId );\n@@ -97,4 +99,4 @@ public class SchemaUtil\n             return format( \"property[%d]\", propertyKeyId );\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}